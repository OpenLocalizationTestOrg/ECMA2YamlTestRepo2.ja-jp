### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "WCF Web サービスとして ASP.NET ロール プロバイダーにアクセスできます。"
  remarks: "RoleService オブジェクトでは、Windows Communication Foundation (WCF) サービスを介してユーザーのロールの読み取りを行うことができます。 役割サービスを使用するには Web サーバーの役割サービスを有効にし、Web サービスに WCF と互換性のあるクライアント アプリケーションに接続します。 役割サービスを構成する方法については、次を参照してください。[する方法: WCF の役割サービスを有効にする](~/add/includes/ajax-current-ext-md.md)です。       ユーザーのロールの読み取りには、ユーザーを認証する必要があります。 役割サービスは、任意の種類の ASP.NET 認証で使用できます。 WCF サービスを通じてユーザーのログイン方法については、次を参照してください。 [Windows Communication Foundation 認証サービスの概要](~/add/includes/ajax-current-ext-md.md)です。       RoleService クラスは、WCF サービスを介してのみアクセスは&2; つのメソッドを公開:<xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>メソッドおよび<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>メソッド</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A></xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>。 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>メソッドは、ログイン ユーザーのすべてのロールを返します</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>。 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>メソッドは、ユーザーが指定されたロールがあるかどうかを判断します</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>。       RoleService オブジェクトを生成、<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>イベント</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>。 イベント ハンドラーを作成する、<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>イベントを実行時に使用するロール プロバイダーを選択します</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>。       コンソール アプリケーションから WCF の役割サービスを使用する方法の例は、次を参照してください。[チュートリアル: ASP.NET アプリケーション サービスを使用する](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref>クラスです。"
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "ログイン ユーザーのすべてのロールを返します。"
  remarks: "GetRolesForCurrentUser メソッドでは、ユーザーのすべてのロールを返します。 確認するか、ユーザーが利用できるリソースを指定するすべてのユーザーのロールを保持する必要がありますには、GetRolesForCurrentUser メソッドを使用します。 このメソッドを使用するには複数の呼び出しを避けるために、<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>メソッド</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>。       GetRolesForCurrentUser メソッド、<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>イベント</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>。      > [!NOTE] > Web サーバーで実行されているコードから GetRolesForCurrentUser メソッドを呼び出さないでください。 WCF サービスの一部としてのみ GetRolesForCurrentUser メソッドを呼び出します。 Web サーバー上で実行されるコードでユーザーのロールの読み取り方法の詳細については、次を参照してください、<xref:System.Web.Security.Roles.GetRolesForUser%2A>メソッド。</xref:System.Web.Security.Roles.GetRolesForUser%2A> 。"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "ユーザーが属しているロールの名前の配列。"
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "ロール管理が無効です。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "指定されたロールにログインしたユーザーが属しているかどうかを判断します。"
  remarks: "IsCurrentUserInRole メソッドは、指定されたロールにログインしたユーザーが属しているかどうかを確認します。 IsCurrentUserInRole メソッド、<xref:System.Web.ApplicationServices.RoleService.SelectingProvider>イベント</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>。      > [!NOTE] > Web サーバーで実行されているコードから IsCurrentUserInRole メソッドを呼び出さないでください。 WCF サービスの一部としてのみ IsCurrentUserInRole メソッドを呼び出します。 Web サーバーで実行中のコードと、そのユーザーが、指定されたグループに属しているかどうかを確認する方法についての詳細については、次を参照してください、<xref:System.Web.Security.Roles.IsUserInRole%2A>メソッド。</xref:System.Web.Security.Roles.IsUserInRole%2A> 。"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "確認するロールの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが指定されたロールの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>か、ユーザーがログインしていません。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "ロール管理が無効です。"
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "発生したときに、 <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref>インスタンスは、ユーザーのロールをチェックするのに使用するには、どのロール プロバイダーを決定します。"
  remarks: "<xref:System.Web.ApplicationServices.RoleService>クラスは、ユーザーのロールを取得するために使用するロール プロバイダーを決定する場合は、SelectingProvider イベントを発生させます</xref:System.Web.ApplicationServices.RoleService>。 実行時に使用するロール プロバイダーを選択する SelectingProvider イベントのイベント ハンドラーを作成することができます。"
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
