### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "HTTP インターネット リソースにアクセスする権限を制御します。"
  remarks: "WebPermission は、インターネット リソースへのアクセスを制御するメソッドとプロパティのセットを提供します。 基づいた、リソースに制限されているか、無制限のアクセスを提供する、コードベースを使用することができます、 <xref:System.Security.Permissions.PermissionState>、WebPermission が作成されるときに設定されている</xref:System.Security.Permissions.PermissionState>。       次のパラメーターのセットのいずれかを使用して、コンス トラクターを呼び出すことによって、WebPermission インスタンスを作成:-パラメーターがないです。 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState>は、</xref:System.Security.Permissions.PermissionState>既定値      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> いずれかを指定<xref:System.Security.Permissions.PermissionState>対象のクラスで使用する任意の URI を許可するのにまたは<xref:System.Security.Permissions.PermissionState>のみを使用すると指定した Uri にアクセスできるように、<xref:System.Net.WebPermission.AddPermission%2A>メソッド</xref:System.Net.WebPermission.AddPermission%2A></xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>。      A<xref:System.Net.NetworkAccess>値と URI の文字列</xref:System.Net.NetworkAccess>。 指定された URI が与えられたアクセス許可、<xref:System.Net.NetworkAccess>値</xref:System.Net.NetworkAccess>。      A<xref:System.Net.NetworkAccess>指定子は、正規表現の URI</xref:System.Net.NetworkAccess> 。       <xref:System.Net.WebPermission.ConnectList%2A>と<xref:System.Net.WebPermission.AcceptList%2A>アクセス許可を付与する Uri を保持します</xref:System.Net.WebPermission.AcceptList%2A></xref:System.Net.WebPermission.ConnectList%2A>。 これらのリストのいずれかに URI を追加するには、 <xref:System.Net.WebPermission.AddPermission%2A>。</xref:System.Net.WebPermission.AddPermission%2A>を使用します。 渡す場合<xref:System.Net.NetworkAccess>として、<xref:System.Net.NetworkAccess>パラメーター、URI は<xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>に追加されます</xref:System.Net.NetworkAccess></xref:System.Net.NetworkAccess> WebPermission は照合を許可する、ターゲット クラスへの接続 Uri を持つ<xref:System.Net.WebPermission.AcceptList%2A>。</xref:System.Net.WebPermission.AcceptList%2A>      > [!CAUTION] > インターネット リソースへのアクセスを拒否するには、そのリソースへのすべての可能なパス アクセスを拒否する必要があります。 これは、<xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>状態パラメーター <xref:System.Security.CodeAccessPermission.Deny%2A>。</xref:System.Security.CodeAccessPermission.Deny%2A>を設定して</xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>呼び出す必要があります。 特定のリソースのみにアクセスできるようにすることをお勧めします。 このトピックの詳細についてを参照してください、 [NIB: メソッドの使用](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)トピックです。      > [!NOTE] > リソース正規パスのみを使用してアクセスを拒否する必要があります。 すべてのパスの構文を使用する必要はありません。      > [!NOTE] > からユーザー名と既定のポート情報は削除されて、<xref:System.Uri>に用意されている正規表現の引数と比較した結果の前に、<xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>コンス トラクター</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> 。 正規表現には、ユーザー情報または既定のポート番号、すべての入力が含まれている場合<xref:System.Uri>s は正規表現に一致に失敗します</xref:System.Uri>。"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>クラスです。"
  remarks: "<xref:System.Net.WebPermission>クラス</xref:System.Net.WebPermission>の新しいインスタンスを作成します。 このコンス トラクターでは、任意の権限を付与されていない空のアクセス許可を作成します。"
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>すべて合格したクラスは、要求またはすべての要求は失敗します。"
  remarks: "値、`state`パラメーターは、いずれかの<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>または<xref:System.Security.Permissions.PermissionState?displayProperty=fullName>、それぞれを生成する完全に制限されるか、セキュリティのすべての変数に完全に無制限にアクセスします</xref:System.Security.Permissions.PermissionState?displayProperty=fullName></xref:System.Security.Permissions.PermissionState?displayProperty=fullName>。 <xref:System.Security.Permissions.PermissionState?displayProperty=fullName> <xref:System.Net.WebPermission.AddPermission%2A>。</xref:System.Net.WebPermission.AddPermission%2A>を使用して個々 の Uri にアクセスできるようにし</xref:System.Security.Permissions.PermissionState?displayProperty=fullName>を指定する場合"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>指定された URI の指定したアクセス権を持つクラス。"
  remarks: "このコンス トラクター、<xref:System.Net.WebPermission>リモート接続をホストまたはによって記述された URI を使用してリモート ホスト接続を許可するか、その対象の権限を付与し、`uriString`パラメーター</xref:System.Net.WebPermission> 。"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "指定された URI に付与するアクセスの種類を示す NetworkAccess 値です。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>ローカル リソースにインターネットからの接続を受け入れるように、アプリケーションが許可されていることを示します。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>アプリケーションが特定のインターネット リソースに接続できることを示します。"
    - id: uriString
      type: System.String
      description: "アクセス権限が与えられる URI 文字列を返します。"
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.WebPermission&quot;> </xref> URI の指定された正規表現の指定したアクセス権を持つクラス。"
  remarks: "このコンス トラクター、<xref:System.Net.WebPermission>リモート接続をホストまたはによって記述された URI を使用してリモート ホスト接続を許可するか、その対象の権限を付与し、`uriRegex`パラメーター</xref:System.Net.WebPermission> 。      > [!NOTE] > を作成することをお勧め`uriRegex`を使用して、 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>、 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>、および<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>フラグ</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName></xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName></xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>。      > [!NOTE] > 候補 URI の文字列は、関連する正規表現の一覧に照らし合わせてチェックされます (<xref:System.Net.WebPermission.AcceptList%2A>または<xref:System.Net.WebPermission.ConnectList%2A>) は&2; つあります</xref:System.Net.WebPermission.ConnectList%2A></xref:System.Net.WebPermission.AcceptList%2A>。 最初に、候補 URI 文字列が一覧に照らし合わせて確認、適切です;次に、一致が存在しない場合、候補 URI の文字列に変換する<xref:System.Uri>し、適切なリストと照合します</xref:System.Uri>。"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>を指定された URI に付与するアクセスの種類を示す値。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>ローカル リソースにインターネットからの接続を受け入れるように、アプリケーションが許可されていることを示します。 <xref href=&quot;System.Net.NetworkAccess&quot;></xref>アプリケーションが特定のインターネット リソースに接続できることを示します。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "アクセスの付与先となる URI を記述する正規表現。"
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "このプロパティは、1 つの列挙を返します。 これによって保持されているアクセス許可をそのまま使用<xref href=&quot;System.Net.WebPermission&quot;></xref>です。 返される列挙体に含まれる型は、可能なオブジェクト<xref:System.String>と&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;</xref:System.String> 。"
  remarks: "このプロパティは、この<xref:System.Net.WebPermission>。</xref:System.Net.WebPermission>で許可されているローカル リソースの一覧を取得します。 適用されているクラス<xref:System.Net.WebPermission>のみがこのリストに見つかったローカル リソースへの着信接続を受信する権限</xref:System.Net.WebPermission>。      > [!NOTE] > <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>を使用してこの一覧に Uri を追加することができます      > [!NOTE] > 候補 URI の文字列は、関連する正規表現の一覧に照らし合わせてチェックされます (AcceptList または<xref:System.Net.WebPermission.ConnectList%2A>) は&2; つあります</xref:System.Net.WebPermission.ConnectList%2A>。 最初に、候補 URI 文字列が一覧に照らし合わせて確認、適切です;次に、一致が存在しない場合、候補 URI の文字列に変換する<xref:System.Uri>し、適切なリストと照合します</xref:System.Uri>。"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>を含むインターフェイスは、アクセス許可をそのまま使用します</xref:System.Collections.IEnumerator>。"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "現在指定されたアクセス権を持つ指定した URI 文字列を追加<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  remarks: "指定した場合に<xref:System.Security.Permissions.PermissionState>として、<xref:System.Security.Permissions.PermissionState>の使用を許可するように AddPermission を使用して`uriString`ターゲット クラスの</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 方法`uriString`使用できるターゲット クラスがで指定された`access`です。 指定<xref:System.Net.NetworkAccess>アクセス パラメーターで指定された URI を追加すると、 `uriString` URI の一覧にパラメーターが、文字列を受け入れるかを指定して<xref:System.Net.NetworkAccess>URI の一覧に、URI を追加するパラメーターの接続文字列へのアクセス</xref:System.Net.NetworkAccess></xref:System.Net.NetworkAccess>。      > [!NOTE] > で呼び出して AddPermission<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>は効果がなく、すべての Uri に権限が与えられているためです</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>。      > [!NOTE] > 候補 URI の文字列は、関連する正規表現の一覧に照らし合わせてチェックされます (<xref:System.Net.WebPermission.AcceptList%2A>または<xref:System.Net.WebPermission.ConnectList%2A>) は&2; つあります</xref:System.Net.WebPermission.ConnectList%2A></xref:System.Net.WebPermission.AcceptList%2A>。 最初に、候補 URI 文字列が一覧に照らし合わせて確認、適切です;次に、一致が存在しない場合、候補 URI の文字列に変換する<xref:System.Uri>し、適切なリストと照合します</xref:System.Uri>。"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> URI に与えられているアクセス権を指定します。"
    - id: uriString
      type: System.String
      description: "アクセス権限が与えられる URI を説明する文字列。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "現在指定されたアクセス権を持つ指定した URI を追加<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  remarks: "指定した場合に<xref:System.Security.Permissions.PermissionState>として、<xref:System.Security.Permissions.PermissionState>を使用して<xref:System.Net.WebPermission.AddPermission%2A>の使用を許可する`uriRegex`ターゲット クラスの</xref:System.Net.WebPermission.AddPermission%2A></xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState> 指定<xref:System.Net.NetworkAccess>として、`access`で指定された URI を追加するパラメーター、 `uriRegex` URI の一覧にパラメーターが、文字列を受け入れるかを指定して<xref:System.Net.NetworkAccess>URI の一覧に、URI を追加するパラメーターの接続文字列へのアクセス</xref:System.Net.NetworkAccess></xref:System.Net.NetworkAccess>。      > [!NOTE] > 呼び出す<xref:System.Net.WebPermission.AddPermission%2A>上、<xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>インスタンスは効果がなくすべての Uri へのアクセス許可が付与されている</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState></xref:System.Net.WebPermission.AddPermission%2A>。      > [!NOTE] > を作成することをお勧め`uriRegex`を使用して、 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>、 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>、および<xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>フラグ</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName></xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName></xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>。      > [!NOTE] > 候補 URI の文字列は、関連する正規表現の一覧に照らし合わせてチェックされます (<xref:System.Net.WebPermission.AcceptList%2A>または<xref:System.Net.WebPermission.ConnectList%2A>) は&2; つあります</xref:System.Net.WebPermission.ConnectList%2A></xref:System.Net.WebPermission.AcceptList%2A>。 最初に、候補 URI 文字列が一覧に照らし合わせて確認、適切です;次に、一致が存在しない場合、候補 URI の文字列に変換する<xref:System.Uri>し、適切なリストと照合します</xref:System.Uri>。"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "URI に与えられているアクセス権を指定する NetworkAccess です。"
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "アクセス権限が与えられる Uri のセットを記述する正規表現。"
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "このプロパティは、1 つの列挙を返します。 これによって保持されているアクセス許可を接続<xref href=&quot;System.Net.WebPermission&quot;></xref>です。 返される列挙体に含まれる型は、可能なオブジェクト<xref:System.String>と&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;</xref:System.String> 。"
  remarks: "このプロパティは、この<xref:System.Net.WebPermission>。</xref:System.Net.WebPermission>によって許可されているリモート リソースの一覧を取得します。 適用されているクラス<xref:System.Net.WebPermission>のみこの一覧に記載のリソースに接続する権限を持っています</xref:System.Net.WebPermission>。      > [!NOTE] > <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>を使用してこの一覧に Uri を追加することができます      > [!NOTE] > 候補 URI の文字列は、関連する正規表現の一覧に照らし合わせてチェックされます (<xref:System.Net.WebPermission.AcceptList%2A>または ConnectList) は&2; つあります</xref:System.Net.WebPermission.AcceptList%2A>。 最初に、候補 URI 文字列が一覧に照らし合わせて確認、適切です;次に、一致が存在しない場合、候補 URI の文字列に変換する<xref:System.Uri>し、適切なリストと照合します</xref:System.Uri>。"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>接続権限を含むインターフェイス</xref:System.Collections.IEnumerator>。"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "コピーを作成、 <xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  remarks: "<xref:System.Security.IPermission>このメソッドは、元の<xref:System.Net.WebPermission>。</xref:System.Net.WebPermission>とリソースへのアクセスを同じによって返される</xref:System.Security.IPermission> このメソッドは<xref:System.Security.CodeAccessPermission.Copy%2A>サポートするために実装されると、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission></xref:System.Security.CodeAccessPermission.Copy%2A>。"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "新しいインスタンス、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>元と同じ値を持つクラスであります。"
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "再構築、 <xref href=&quot;System.Net.WebPermission&quot;> </xref> XML エンコードからです。"
  remarks: "<xref:System.Net.WebPermission>は、<xref:System.Security.SecurityElement>クラス</xref:System.Security.SecurityElement>によって定義されている XML エンコードから</xref:System.Net.WebPermission>FromXml メソッドを再構築します。       使用して、 <xref:System.Net.WebPermission.ToXml%2A>XML エンコード方法、 <xref:System.Net.WebPermission>、状態情報を含むします</xref:System.Net.WebPermission></xref:System.Net.WebPermission.ToXml%2A>。"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "再構築する XML エンコード、 <xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code>パラメーターは、<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>この種類のアクセス許可要素ではありません。"
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "2 つの論理積集合を返します<xref href=&quot;System.Net.WebPermission&quot;></xref>インスタンス。"
  remarks: "返しますが交差する、<xref:System.Net.WebPermission>両方で共通しているこれらのアクセス許可を格納している`target`と現在のインスタンス</xref:System.Net.WebPermission>。       このメソッドは<xref:System.Security.CodeAccessPermission.Intersect%2A>サポートするために実装されると、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission></xref:System.Security.CodeAccessPermission.Intersect%2A>。"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>現在のインスタンスと比較します。"
    return:
      type: System.Security.IPermission
      description: "新しい<xref href=&quot;System.Net.WebPermission&quot;> </xref> 、現在のインスタンスの積集合を表す、 <code> target </code>パラメーター。 このメソッドを返しますの積集合が空<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または型の<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "決定するかどうか、現在<xref href=&quot;System.Net.WebPermission&quot;></xref>指定したオブジェクトのサブセットです。"
  remarks: "場合、現在<xref:System.Net.WebPermission>によって完全に含まれる関連付けられているリソースのセットを示す、`target`パラメーターを現在の<xref:System.Net.WebPermission>のサブセットである`target`</xref:System.Net.WebPermission></xref:System.Net.WebPermission>。 このメソッドは IsSubsetOf をオーバーライドし、サポートするために実装されて、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission>。"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>現在と比較する<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のインスタンスのサブセットである場合、 <code> target </code>パラメーターです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 ターゲットがある場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、メソッドを返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>は無制限ではない空の現在の権限に対してと<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>それ以外の場合。"
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ターゲット パラメーターは、のインスタンスではない<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "現在のインスタンスには、正規表現でエンコードされた権限が含まれています。 およびだけではない対象のインスタンスに権利が同じです。"
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "全体的なアクセス許可状態を調べ、 <xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  remarks: "場合<xref:System.Net.WebPermission>は<xref:System.Security.Permissions.PermissionState>、ターゲット クラスがすべての Uri を使用します</xref:System.Security.Permissions.PermissionState></xref:System.Net.WebPermission>。 それ以外の場合、特定のアクセス許可は、ターゲット クラスを使用する任意の URI を指定してください。      > [!NOTE] > 使用<xref:System.Net.WebPermission.AddPermission%2A>URI を追加し、アクセス許可を指定します</xref:System.Net.WebPermission.AddPermission%2A>。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "XML エンコードを作成、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>と現在の状態。"
  remarks: "<xref:System.Net.WebPermission.FromXml%2A> <xref:System.Security.SecurityElement>。</xref:System.Security.SecurityElement>から状態情報を復元する方法</xref:System.Net.WebPermission.FromXml%2A>を使用して"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>の XML でエンコードされた表現を格納する、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>、状態情報を含むです。"
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "2 つのインスタンス間の論理的な和集合を返します、 <xref href=&quot;System.Net.WebPermission&quot;> </xref>クラスです。"
  remarks: "和集合を返します、<xref:System.Net.WebPermission>両方でのすべてのアクセス許可を格納している`target`と現在のインスタンス</xref:System.Net.WebPermission>。"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref>現在とを組み合わせる<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> 、現在のインスタンスの和集合を表す、 <code> target </code>パラメーター。 If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. ターゲットがある場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、メソッドは、現在のコピーを返します<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ターゲットが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または型の<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
