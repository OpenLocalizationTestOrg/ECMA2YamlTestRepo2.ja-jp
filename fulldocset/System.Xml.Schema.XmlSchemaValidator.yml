### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidator
  id: XmlSchemaValidator
  children:
  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaValidator.EndValidation
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  - System.Xml.Schema.XmlSchemaValidator.Initialize
  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.SourceUri
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  - System.Xml.Schema.XmlSchemaValidator.XmlResolver
  langs:
  - csharp
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator
  fullName: System.Xml.Schema.XmlSchemaValidator
  type: Class
  summary: "XML スキーマ定義言語 (XSD) スキーマ検証エンジンを表します。 XmlSchemaValidator クラスは継承できません。"
  remarks: "> [!IMPORTANT]>-場所や不明または信頼できないソースからスキーマを使用しないでください。 これは、コードのセキュリティが低下します。   >-XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。   >-スキーマ検証エラー メッセージと例外が、コンテンツ モデルまたはスキーマ ファイルの URI パスに関する機密情報を公開します。 信頼されていない呼び出し元にこの情報を公開しないように注意します。       XmlSchemaValidator クラスでは、プッシュ ベース方式で XML スキーマに対して XML データを検証する、効率的で高性能なメカニズムを提供します。 たとえば、XmlSchemaValidator クラスには、XML ドキュメントとしてシリアル化し、検証型 XML リーダーを使用してドキュメントの再解析することがなく、XML infoset で直接を検証することができます。 XmlSchemaValidator クラスは、検証型 XML ライターを構築する方法としてまたはカスタムの XML データ ソースに対する検証エンジンを構築するも使用できます。       XmlSchemaValidator クラスの詳細については、次を参照してください。、 [XmlSchemaValidator のプッシュ ベースの検証](~/add/includes/ajax-current-ext-md.md)トピックです。      > [!IMPORTANT] >、<xref:System.Xml.Schema.XmlSchemaValidationFlags>と<xref:System.Xml.Schema.XmlSchemaValidationFlags>XmlSchemaValidator オブジェクトのフラグが設定されていない検証するデフォルト</xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaValidationFlags>。 さらに、 <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>XmlSchemaValidator オブジェクトのプロパティが`null`既定</xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>。 結果としてで参照されている外部のスキーマは、インポート、または再定義要素により解決されない既定です。"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>クラスです。"
  remarks: "XmlSchemaValidator コンス トラクターを使用する際に考慮する重要な注意事項を次に示します。      -の内容、<xref:System.Xml.Schema.XmlSchemaSet>パラメーターは、内部にコピーする<xref:System.Xml.Schema.XmlSchemaSet>オブジェクトときに、<xref:System.Xml.Schema.XmlSchemaValidationFlags>または<xref:System.Xml.Schema.XmlSchemaValidationFlags>検証オプションが設定されます</xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaSet></xref:System.Xml.Schema.XmlSchemaSet>。 その結果、入力に変更<xref:System.Xml.Schema.XmlSchemaSet>検証中にオブジェクトの検証の結果には影響しません</xref:System.Xml.Schema.XmlSchemaSet>。      場合、<xref:System.Xml.Schema.XmlSchemaSet>指定されたパラメーターがコンパイルされていないその<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>メソッドが呼び出されます</xref:System.Xml.Schema.XmlSchemaSet.Compile%2A></xref:System.Xml.Schema.XmlSchemaSet>。      -<xref:System.Xml.IXmlNamespaceResolver>パラメーターは検証にとって特に重要`xs:QName`の種類</xref:System.Xml.IXmlNamespaceResolver>。 <xref:System.Xml.Schema.XmlSchemaValidator>クラスは、スコープ内から名前空間、<xref:System.Xml.IXmlNamespaceResolver>オブジェクトが、代わりにそれへの参照を保持</xref:System.Xml.IXmlNamespaceResolver>はコピーされません</xref:System.Xml.Schema.XmlSchemaValidator> これにより、新しい名前空間に追加する、<xref:System.Xml.IXmlNamespaceResolver>検証プロセス中にオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。      > [!IMPORTANT] >、<xref:System.Xml.Schema.XmlSchemaValidationFlags>と<xref:System.Xml.Schema.XmlSchemaValidationFlags>の検証フラグ、<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクトが設定される既定値です</xref:System.Xml.Schema.XmlSchemaValidator></xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaValidationFlags>。 さらに、<xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>のプロパティ、<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクトが`null`既定</xref:System.Xml.Schema.XmlSchemaValidator></xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>。 結果としてで参照されている外部のスキーマは、インポート、または再定義要素により解決されない既定です。"
  example:
  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.
  syntax:
    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>アトム化された文字列としての要素と属性名を含むオブジェクト</xref:System.Xml.XmlNameTable>。"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>検証に使用する XML スキーマ定義言語 (XSD) スキーマを含むオブジェクト。"
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>オブジェクトの検証中に遭遇する名前空間の解決に使用します</xref:System.Xml.IXmlNamespaceResolver>。"
    - id: validationFlags
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaValidationFlags&quot;> </xref>スキーマ検証のオプションを指定する値。"
  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたパラメーターの&1; つ以上が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "スキーマのコンパイル中にエラーが発生しました、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>パラメーター。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  id: AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証に使用するスキーマのセットを XML スキーマ定義言語 (XSD) スキーマを追加します。"
  remarks: "AddSchema メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -AddSchema メソッドは、検証中の XML ドキュメント内のインライン XML スキーマの検出の効果をシミュレートするために使用できます。      -ターゲットの名前空間、<xref:System.Xml.Schema.XmlSchema>パラメーターに一致するすべての要素と属性が既に遭遇したことはできません、<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクト</xref:System.Xml.Schema.XmlSchemaValidator></xref:System.Xml.Schema.XmlSchema>。      場合、<xref:System.Xml.Schema.XmlSchemaValidationFlags>検証オプションが設定されていない、AddSchema メソッドは、何も行われません</xref:System.Xml.Schema.XmlSchemaValidationFlags>。"
  syntax:
    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XmlSchema>検証に使用するスキーマのセットに追加するオブジェクト</xref:System.Xml.Schema.XmlSchema>。"
  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.Schema.XmlSchema>指定されたパラメーターが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.Schema.XmlSchema> 。"
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "ターゲットの名前空間、<xref:System.Xml.Schema.XmlSchema>パラメーターと一致するすべての要素と属性が既に遭遇した、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>オブジェクト</xref:System.Xml.Schema.XmlSchema>。"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "<xref:System.Xml.Schema.XmlSchema>パラメーターが無効です</xref:System.Xml.Schema.XmlSchema>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  id: EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証を終了し、XML ドキュメント全体について id 制約をチェックします。"
  remarks: "EndValidation メソッドは、検証を終了し、場合に、XML ドキュメント全体について id 制約をチェック、<xref:System.Xml.Schema.XmlSchemaValidationFlags>検証オプションを設定します</xref:System.Xml.Schema.XmlSchemaValidationFlags>。"
  syntax:
    content: public void EndValidation ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "XML ドキュメントでは、id 制約エラーが見つかりました。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  id: GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "現在の要素コンテキストに対して予期される属性を返します。"
  remarks: "GetExpectedAttributes メソッドを使用する際に考慮する重要な注意事項を次に示します。      -後すぐに GetExpectedAttributes メソッドが呼び出された場合、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>メソッド、XML ドキュメントで使用可能なすべての属性が返されます</xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>。      -GetExpectedAttributes メソッドが&1; つまたは複数の呼び出し後に呼び出された場合、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>メソッド、現在の要素にまだ検証されていない属性が返されます</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaAttribute[]
      description: "配列<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>オブジェクトまたは期待される属性がない場合は空の配列。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  id: GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "現在の要素コンテキストで期待されるパーティクルを返します。"
  remarks: "インスタンスである有効なパーティクル GetExpectedParticles メソッドによって返されることができますが、<xref:System.Xml.Schema.XmlSchemaElement>と<xref:System.Xml.Schema.XmlSchemaAny>クラス</xref:System.Xml.Schema.XmlSchemaAny></xref:System.Xml.Schema.XmlSchemaElement>。       コンテンツ モデルのコンポジターがの場合、`xs:sequence`シーケンス内の次のパーティクルのみが返されます。 コンテンツ モデルのコンポジターがある場合、`xs:all`または`xs:choice`、現在の要素コンテキストに続くことができる有効なパーティクルすべてが返されます。       たとえば、XML スキーマ定義言語 (XSD) スキーマと XML ドキュメントの検証後に続く、`book`要素、`book`要素は、現在の要素コンテキスト。 GetExpectedParticles メソッドは、1 つを含む配列を返します<xref:System.Xml.Schema.XmlSchemaElement>オブジェクトを表す、`title`要素</xref:System.Xml.Schema.XmlSchemaElement>。 検証コンテキストの場合は、`title`要素、GetExpectedParticles メソッドは、空の配列を返します。 後に GetExpectedParticles メソッドが呼び出された場合、`title`要素はその前に検証されて、`description`要素の検証を&1; つを含む配列を返します<xref:System.Xml.Schema.XmlSchemaElement>オブジェクトを表す、`description`要素</xref:System.Xml.Schema.XmlSchemaElement>。 後に、GetExpectedParticles メソッドが呼び出された場合、`description`要素の検証し、1 つを含む配列を返します<xref:System.Xml.Schema.XmlSchemaAny>ワイルドカードを表すオブジェクト</xref:System.Xml.Schema.XmlSchemaAny>。      ```vb#   Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, &quot;schema.xsd&quot;)   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;schema.xsd&quot;);   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```この例は、次の XML を入力として受け取ります。       `<xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>`       `<xs:element name=&quot;book&quot;>`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=&quot;title&quot; type=&quot;xs:string&quot; />`       `<xs:element name=&quot;description&quot; type=&quot;xs:string&quot; />`       `<xs:any processContents =&quot;lax&quot;/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`この例は、次の XSD スキーマを入力として受け取ります。       `<book>`       `<title>My Book</title>`       `<description>My Book&quot;s Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaParticle[]
      description: "配列<xref href=&quot;System.Xml.Schema.XmlSchemaParticle&quot;></xref>オブジェクトまたは期待されるパーティクルが存在しない場合は空の配列。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "既定の属性の id 制約を検証し、設定、 <xref href=&quot;System.Collections.ArrayList&quot;> </xref>で指定された<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>の検証されていない以前を使用して既定値を持つ属性オブジェクト、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の要素コンテキストでのメソッド</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>。"
  remarks: "現在の要素のすべての属性を検証した後、GetUnspecifiedDefaultAttributes メソッドを呼び出す必要があります、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>メソッド</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>。 既定の属性が検証される XML ドキュメントに挿入するかを判断 GetUnspecifiedDefaultAttributes メソッドを使用してください。"
  syntax:
    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);
    parameters:
    - id: defaultAttributes
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref>の読み込み先と<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>の要素コンテキストでの検証中に検出されていない属性オブジェクトです。"
  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  id: Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "状態を初期化、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>オブジェクト。"
  remarks: "Initialize メソッドはのみの構築の直後後に呼び出される場合に有効な<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクトまたは<xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>への呼び出し後</xref:System.Xml.Schema.XmlSchemaValidator>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出す、 <> </> *> メソッドは、の作成後すぐに有効な<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>オブジェクトまたは呼び出しの後に<> *> のみです。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  id: Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "状態を初期化、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>オブジェクトを使用して、 <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref>部分検証を指定します。"
  remarks: "Initialize メソッドを受け取る、<xref:System.Xml.Schema.XmlSchemaObject>ようにパラメーターを初期化、<xref:System.Xml.Schema.XmlSchemaValidator>部分検証のための開始状態オブジェクト</xref:System.Xml.Schema.XmlSchemaValidator></xref:System.Xml.Schema.XmlSchemaObject>。"
  example:
  - "In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, \"schema.xsd\")  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n  \nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\"orderNumber\")))  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(\"123\")  \nvalidator.ValidateEndElement(Nothing)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, \"schema.xsd\");  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n  \nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\"orderNumber\")]);  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(\"123\");  \nvalidator.ValidateEndElement(null);  \n```  \n  \n The example takes the following XML schema as input.  \n  \n `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`  \n  \n `<xs:element name=\"orderNumber\" type=\"xs:int\" />`  \n  \n `</xs:schema>`"
  syntax:
    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);
    parameters:
    - id: partialValidationType
      type: System.Xml.Schema.XmlSchemaObject
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>、 <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref>、または<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref>の検証コンテキストを初期化するために使用されるオブジェクト、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>部分検証のためのオブジェクト。"
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出す、 <> </> *> メソッドは、の作成後すぐに有効な<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>オブジェクトまたは呼び出しの後に<> *> のみです。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> parameter is not an <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>, or <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref>パラメーターを指定できません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  id: LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得または検証する XML ノードの行番号情報を設定します。"
  remarks: "-   いずれかが行情報が報告された<xref:System.Xml.Schema.XmlSchemaValidationException>検証プロセス中にスローされます</xref:System.Xml.Schema.XmlSchemaValidationException>。      -既定<xref:System.Xml.IXmlLineInfo>プロパティに対して 0 を返します LineInfoProvider によって返されるオブジェクト、<xref:System.Xml.IXmlLineInfo.LineNumber%2A>と<xref:System.Xml.IXmlLineInfo.LinePosition%2A>プロパティ</xref:System.Xml.IXmlLineInfo.LinePosition%2A></xref:System.Xml.IXmlLineInfo.LineNumber%2A></xref:System.Xml.IXmlLineInfo>。"
  syntax:
    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }
    return:
      type: System.Xml.IXmlLineInfo
      description: "<xref:System.Xml.IXmlLineInfo>オブジェクト</xref:System.Xml.IXmlLineInfo>。"
  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "現在の要素のコンテンツの検証をスキップし、準備、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>親要素のコンテキストでコンテンツを検証するオブジェクト。"
  remarks: "SkipToEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -SkipToEndElement メソッドが現在の要素のコンテンツの検証をスキップし、準備、<xref:System.Xml.Schema.XmlSchemaValidator>を親要素のコンテキストでコンテンツを検証するオブジェクトですこれは、現在の要素のすべての子の検証をスキップし、呼び出すことに相当します<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>メソッド。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> </xref:System.Xml.Schema.XmlSchemaValidator> 。      -現在の要素の内容は正常にスキップされた場合、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された)<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが<xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      > [!NOTE] > スキップしたコンテンツの検証エラーは報告されません。"
  syntax:
    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクトのプロパティ設定されている場合は、現在の要素の内容は正常にスキップされます。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SkipToEndElement メソッドは、正しい順序で呼び出されませんでした。 たとえば、呼び出し元 SkipToEndElement SkipToEndElement の呼び出し後にします。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得または検証する XML ノードのソース URI を設定します。"
  remarks: "-   URI がいずれかによって報告されたソース<xref:System.Xml.Schema.XmlSchemaValidationException>検証プロセス中にスローされます</xref:System.Xml.Schema.XmlSchemaValidationException>。      -SourceUri プロパティが設定されていない場合、XML ドキュメントのファイル名は<xref:System.String.Empty>で検証エラー メッセージ</xref:System.String.Empty>。"
  syntax:
    content: public Uri SourceUri { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>検証する XML ノードのソース URI を表すオブジェクトです既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>。</xref:System.Uri> 。"
  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "属性名、名前空間 URI、および現在の要素コンテキストで値を検証します。"
  remarks: "ValidateAttribute メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -<xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>と現在の要素のすべての属性を検証した後、メソッドを呼び出す必要があります、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>メソッド</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A></xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>。      場合、<xref:System.Xml.Schema.XmlSchemaAttribute>にオブジェクトが渡された、<xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>メソッド、ValidateAttribute メソッド属性を検証しますに対して、<xref:System.Xml.Schema.XmlSchemaAttribute>オブジェクト</xref:System.Xml.Schema.XmlSchemaAttribute></xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A></xref:System.Xml.Schema.XmlSchemaAttribute>。      場合は、属性の現在の要素コンテキストで検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A></xref:System.Xml.Schema.XmlSchemaInfo>。"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "検証する属性のローカル名。"
    - id: namespaceUri
      type: System.String
      description: "名前空間 URI 属性を検証します。"
    - id: attributeValue
      type: System.String
      description: "検証する属性の値。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト属性の検証に成功であるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "検証された属性の値です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "現在の要素コンテキストで属性が正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、呼び出す<> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>を呼び出した後"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたパラメーターの&1; つ以上が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "属性名、名前空間 URI、および現在の要素コンテキストで値を検証します。"
  remarks: "ValidateAttribute メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -<xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>と現在の要素のすべての属性を検証した後、メソッドを呼び出す必要があります、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>メソッド</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A></xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>。      場合、<xref:System.Xml.Schema.XmlSchemaAttribute>にオブジェクトが渡された、<xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>メソッド、ValidateAttribute メソッド属性を検証しますに対して、<xref:System.Xml.Schema.XmlSchemaAttribute>オブジェクト</xref:System.Xml.Schema.XmlSchemaAttribute></xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A></xref:System.Xml.Schema.XmlSchemaAttribute>。      場合は、属性の現在の要素コンテキストで検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A></xref:System.Xml.Schema.XmlSchemaInfo>。"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "検証する属性のローカル名。"
    - id: namespaceUri
      type: System.String
      description: "名前空間 URI 属性を検証します。"
    - id: attributeValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として属性の値を渡すために使用します。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト属性の検証に成功であるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "検証された属性の値です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "現在の要素コンテキストで属性が正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、呼び出す<> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>を呼び出した後"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたパラメーターの&1; つ以上が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "現在のコンテキスト内の要素を検証します。"
  remarks: "ValidateElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、現在のコンテキストでは、要素名は検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A></xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A></xref:System.Xml.Schema.XmlSchemaInfo>。      要素名またはその属性のいずれかが有効でない場合、現在のコンテキスト、<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティに設定されている<xref:System.Xml.Schema.XmlSchemaValidity>以外の場合<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A><xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity>にプロパティが設定されている</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaValidity></xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "検証する要素のローカル名。"
    - id: namespaceUri
      type: System.String
      description: "名前空間を検証する要素の URI。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト要素の名前の検証が成功であるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "現在のコンテキストで要素の名前が正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "現在のコンテキストで要素を検証、 `xsi:Type`、 `xsi:Nil`、 `xsi:SchemaLocation`、および`xsi:NoNamespaceSchemaLocation`属性の値を指定します。"
  remarks: "ValidateElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、現在のコンテキストでは、要素名は検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A></xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A></xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A></xref:System.Xml.Schema.XmlSchemaInfo>。      場合は、要素名の属性のいずれかが無効です現在のコンテキストで、<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティがに設定されている<xref:System.Xml.Schema.XmlSchemaValidity>以外の場合<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが<xref:System.Xml.Schema.XmlSchemaValidity>。</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> 。      場合、<xref:System.Xml.Schema.XmlSchemaValidationFlags>へのパラメーターとして値が渡されませんでした、<xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A>コンス トラクター、`xsi:SchemaLocation`と`xsi:NoNamespaceSchemaLocation`属性値は無視されます</xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A></xref:System.Xml.Schema.XmlSchemaValidationFlags>。"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);
    parameters:
    - id: localName
      type: System.String
      description: "検証する要素のローカル名。"
    - id: namespaceUri
      type: System.String
      description: "名前空間を検証する要素の URI。"
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト要素の名前の検証が成功であるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: xsiType
      type: System.String
      description: "`xsi:Type`属性要素の値。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: xsiNil
      type: System.String
      description: "`xsi:Nil`属性要素の値。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: xsiSchemaLocation
      type: System.String
      description: "`xsi:SchemaLocation`属性要素の値。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: xsiNoNamespaceSchemaLocation
      type: System.String
      description: "`xsi:NoNamespaceSchemaLocation`属性要素の値。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "現在のコンテキストで要素の名前が正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "要素のテキストの内容は、単純なコンテンツを持つ要素の場合は、そのデータ型に従った有効なかどうかは検証し、現在の要素のコンテンツは複雑なコンテンツを持つ要素の完了します。"
  remarks: "ValidateEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -単純コンテンツを持つ要素には、メソッドあることを確認、要素のテキスト コンテンツがそのデータ型に従った有効では、解析されたを返します ValidateEndElement は、値を入力します。 要素のテキストの内容は<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>。</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>前の呼び出しの結果から取得します。      要素については、複雑な内容は、ValidateEndElement メソッドは、現在の要素のコンテンツは完了を確認します。      要素に既定値がある場合、ValidateEndElement メソッドから返される値は、要素の既定値です。      場合、<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクトが構築した、 <xref:System.Xml.Schema.XmlSchemaValidationFlags>、ValidateEndElement メソッド id 制約ルール チェック (存在する場合) の要素に適用されている、パラメーターとして値</xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaValidator>。      場合は、要素の現在のコンテキストで検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A></xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A></xref:System.Xml.Schema.XmlSchemaInfo>。"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト要素の検証に成功であるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "解析された、型指定された要素のテキスト値の要素に単純コンテンツがある場合。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "要素のコンテンツが正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>の呼び出し後にメソッドが呼び出されます"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "指定された要素のテキストの内容がそのデータ型に従った有効なかどうかを確認します。"
  remarks: "> [!IMPORTANT]> に対して検証する場合、 `xs:key`、 `xs:keyref`、または`xs:unique`id 制約が ValidateEndElement メソッドのオーバー ロードを使用しないでください。 代わりに、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>メソッドを要素の値を渡します</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>。 まず、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>はメソッドのオーバー ロード<xref:System.Xml.Schema.XmlSchemaInfo>要素のテキストの内容がそのデータ型に従った有効であることを確認する、引数として</xref:System.Xml.Schema.XmlSchemaInfo></xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>。       ValidateEndElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -単純コンテンツを持つ要素には、メソッドあることを確認、要素のテキスト コンテンツがそのデータ型に従った有効では、解析されたを返します ValidateEndElement は、値を入力します。 要素のテキストの内容は、パラメーターとして渡された型指定されたコンテンツから取得されます。      If への呼び出し、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>メソッドは既に行われている、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException></xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>。      要素に複雑なコンテンツがある場合、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException>。      場合、<xref:System.Xml.Schema.XmlSchemaValidator>オブジェクトが構築した、 <xref:System.Xml.Schema.XmlSchemaValidationFlags>、ValidateEndElement メソッド id 制約ルール チェック (存在する場合) の要素に適用されている、パラメーターとして値</xref:System.Xml.Schema.XmlSchemaValidationFlags></xref:System.Xml.Schema.XmlSchemaValidator>。      場合は、要素の現在のコンテキストで検証が成功、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>、 <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>、および<xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>プロパティが設定されて検証の結果</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A></xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A></xref:System.Xml.Schema.XmlSchemaInfo>。"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクト要素のテキスト コンテンツの検証が成功であるプロパティが設定されます。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: typedValue
      type: System.Object
      description: "要素の型指定されたテキストの内容。"
    return:
      type: System.Object
      description: "解析されたの型指定された要素の単純な内容です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "要素のテキスト コンテンツが正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした (場合など、 <> </> *> 呼び出した後にメソッドが呼び出された<> *>) への呼び出し、 <> </> *> メソッドまでに作成された、または要素が複合コンテンツ。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "型指定されたテキスト コンテンツ パラメーターを指定できません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "すべての要素コンテキスト中の必須の属性が存在かどうかを確認し、準備、 <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref>要素の子コンテンツを検証するオブジェクト。"
  remarks: "ValidateEndOfAttributes メソッドの使用時に考慮すべき重要な注意事項を次に示します。      - <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>ValidateEndOfAttributes 前にメソッドを呼び出すことが常に必要があります</xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>。      -ValidateEndOfAttributes メソッドは、要素のコンテンツの検証を続行する前に呼び出す必要があります。      要素コンテキストで必要なすべての属性が存在する場合、<xref:System.Xml.Schema.XmlSchemaInfo>オブジェクトの (場合、指定された) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity>にプロパティが設定されている</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A></xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]"
  syntax:
    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref>オブジェクトの要素コンテキストで必要なすべての属性が存在する検証が成功したであるプロパティを設定します。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "現在の要素コンテキスト中の必須の属性の&1; つ以上が見つかりませんでした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ValidateEndOfAttributes メソッドは、正しい順序で呼び出されませんでした。 たとえば、呼び出し元 ValidateEndOfAttributes <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>。</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>を呼び出した後"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたパラメーターの&1; つ以上が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  id: ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証するかどうか、テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>は現在の要素コンテキストでは使用を指定し、現在の要素に単純コンテンツがある場合は、検証用のテキストを累積します。"
  remarks: "ValidateText メソッドを使用する際に考慮する重要な注意事項を次に示します。      要素に単純なコンテンツ、テキストがある場合`string`指定まで ValidateText メソッドを呼び出すたびに連結された、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>メソッドが呼び出されます</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>。 ときに、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>メソッドが呼び出されると、すべてのテキストを検証します</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>。      要素に複雑なコンテンツがある場合、テキスト連結演算子は行われません。"
  syntax:
    content: public void ValidateText (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>を現在の要素コンテキストで検証します。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定は、現在の要素コンテキストでは許可されていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>パラメーターを指定できません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  id: ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "テキストがによって返されるかどうかを検証、 <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref>指定されたオブジェクトの現在の要素コンテキストで許可され、現在の要素に単純コンテンツがある場合は、検証用のテキストを累積します。"
  remarks: "ValidateText メソッドを使用する際に考慮する重要な注意事項を次に示します。      要素に単純なコンテンツ、テキストがある場合`string`指定まで ValidateText メソッドを呼び出すたびに連結された、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>メソッドが呼び出されます</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>。 ときに、<xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>メソッドが呼び出されると、すべてのテキストを検証します</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>。      要素に複雑なコンテンツがある場合、テキスト連結演算子は行われません。"
  syntax:
    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として、テキスト値を渡すために使用します。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>指定は、現在の要素コンテキストでは許可されていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "テキスト<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>パラメーターを指定できません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  id: ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証中、白の領域かどうか、 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>は現在の要素コンテキストでは使用を指定し、現在の要素に単純コンテンツがある場合は、検証用の空白を累積します。"
  syntax:
    content: public void ValidateWhitespace (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "空白文字<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>を現在の要素コンテキストで検証します。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "空白文字は、現在の要素コンテキストでは許可されません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "空白文字がによって返されるかどうかを検証、 <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref>指定されたオブジェクトの現在の要素コンテキストで許可され、現在の要素に単純コンテンツがある場合は、検証用の空白を累積します。"
  syntax:
    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "<xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref>属性の XML スキーマ定義言語 (XSD) 型と互換性のある共通言語ランタイム (CLR) 型として空白値を渡すために使用します。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "空白文字は、現在の要素コンテキストでは許可されません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> メソッドは、正しい順序で呼び出されませんでした。たとえば場合、 <> </> *> <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>の呼び出し後にメソッドが呼び出されます"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref>スキーマ検証の警告とスキーマの検証中に発生したエラーを受け取る。"
  remarks: "ない場合は<xref:System.Xml.Schema.ValidationEventHandler>を指定すると<xref:System.Xml.Schema.XmlSchemaValidationException>、 <xref:System.Xml.Schema.XmlSeverityType> <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType>の値</xref:System.Xml.Schema.XmlSeverityType>を持つすべてのスキーマ検証エラーに対してスローされる</xref:System.Xml.Schema.XmlSchemaValidationException></xref:System.Xml.Schema.ValidationEventHandler> の<xref:System.Xml.Schema.XmlSchemaValidationException><xref:System.Xml.Schema.XmlSeverityType><xref:System.Xml.Schema.XmlSeverityType>。</xref:System.Xml.Schema.XmlSeverityType>の値</xref:System.Xml.Schema.XmlSeverityType>を持つ検証警告についてはスローされません。</xref:System.Xml.Schema.XmlSchemaValidationException>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  id: ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得または検証イベントの送信元オブジェクトとして送信されたオブジェクトを設定します。"
  remarks: ''
  example:
  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.
  syntax:
    content: public object ValidationEventSender { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>; 既定では、この<xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;></xref>オブジェクト</xref:System.Object>。"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "セット、 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>解決に使用されるオブジェクト`xs:import`と`xs:include`要素だけでなく`xsi:schemaLocation`と`xsi:noNamespaceSchemaLocation`属性。"
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>オブジェクト以外の既定値は、 <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref>オブジェクト。"
  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
- uid: System.Xml.Schema.XmlSchemaAttribute[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaAttribute
    name: XmlSchemaAttribute
    nameWithType: XmlSchemaAttribute
    fullName: XmlSchemaAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
- uid: System.Xml.Schema.XmlSchemaParticle[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaParticle
    name: XmlSchemaParticle
    nameWithType: XmlSchemaParticle
    fullName: XmlSchemaParticle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: true
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInfo
  nameWithType: XmlSchemaInfo
  fullName: System.Xml.Schema.XmlSchemaInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlValueGetter
  parent: System.Xml.Schema
  isExternal: false
  name: XmlValueGetter
  nameWithType: XmlValueGetter
  fullName: System.Xml.Schema.XmlValueGetter
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator.XmlSchemaValidator
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema
  nameWithType: XmlSchemaValidator.AddSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation
  nameWithType: XmlSchemaValidator.EndValidation
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes
  nameWithType: XmlSchemaValidator.GetExpectedAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles
  nameWithType: XmlSchemaValidator.GetExpectedParticles
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize
  nameWithType: XmlSchemaValidator.Initialize
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement
  nameWithType: XmlSchemaValidator.SkipToEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute
  nameWithType: XmlSchemaValidator.ValidateAttribute
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement
  nameWithType: XmlSchemaValidator.ValidateElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement
  nameWithType: XmlSchemaValidator.ValidateEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText
  nameWithType: XmlSchemaValidator.ValidateText
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace
  nameWithType: XmlSchemaValidator.ValidateWhitespace
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
