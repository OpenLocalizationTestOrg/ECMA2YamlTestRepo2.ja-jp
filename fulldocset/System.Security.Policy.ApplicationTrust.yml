### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrust
  id: ApplicationTrust
  children:
  - System.Security.Policy.ApplicationTrust.#ctor
  - System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  - System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  - System.Security.Policy.ApplicationTrust.ApplicationIdentity
  - System.Security.Policy.ApplicationTrust.Clone
  - System.Security.Policy.ApplicationTrust.DefaultGrantSet
  - System.Security.Policy.ApplicationTrust.ExtraInfo
  - System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  - System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  - System.Security.Policy.ApplicationTrust.Persist
  - System.Security.Policy.ApplicationTrust.ToXml
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
  type: Class
  summary: "アプリケーションに関するセキュリティ上の決定をカプセル化します。 このクラスは継承できません。"
  remarks: "ApplicationTrust オブジェクトが、信頼マネージャーのによって返される<xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>メソッド</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrust : System.Security.Policy.EvidenceBase, System.Security.ISecurityEncodable
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.ISecurityEncodable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor
  id: '#ctor'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、空を作成<xref:System.Security.Policy.ApplicationTrust>オブジェクト</xref:System.Security.Policy.ApplicationTrust>。"
  syntax:
    content: public ApplicationTrust ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>クラス、 <xref href=&quot;System.ApplicationIdentity&quot;></xref>です。"
  remarks: "アプリケーション id には、アプリケーションの完全な名前とそのコード ベースの場所が含まれています。"
  syntax:
    content: public ApplicationTrust (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>アプリケーションを一意に識別します。"
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  id: '#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>クラスの指定されたアクセス許可セットと完全に信頼されたアセンブリのコレクションを使用します。"
  remarks: '`fullTrustAssemblies`内のアセンブリの厳密な名前を識別、<xref:System.AppDomain>完全な信頼を付与する必要がある</xref:System.AppDomain>。 このコンス トラクターを呼び出す、<xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName>メソッドを作成、<xref:System.AppDomain>サンド ボックスとして使用される</xref:System.AppDomain></xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName>。 サンド ボックスで、アプリケーションの実行に関する詳細については、次を参照してください。[する方法: 実行部分信頼コードをサンド ボックスで](~/add/includes/ajax-current-ext-md.md)です。'
  syntax:
    content: public ApplicationTrust (System.Security.PermissionSet defaultGrantSet, System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName> fullTrustAssemblies);
    parameters:
    - id: defaultGrantSet
      type: System.Security.PermissionSet
      description: "特定のアクセス許可がないすべてのアセンブリに付与されている既定の権限セットです。"
    - id: fullTrustAssemblies
      type: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
      description: "アプリケーション ドメインで完全に信頼されていると見なされるアセンブリを表す厳密な名前の配列。"
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fullTrustAssemblies</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fullTrustAssemblies</code>ないアセンブリを含む、 <xref href=&quot;System.Security.Policy.StrongName&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得またはアプリケーションの信頼オブジェクトのアプリケーション id を設定します。"
  remarks: "ApplicationIdentity プロパティは、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。"
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>のアプリケーションの信頼オブジェクトです。"
  overload: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.ApplicationIdentity&quot;></xref>値があるために設定することはできません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Clone
  id: Clone
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のインスタンスの完全なコピーである新しいオブジェクトを作成します。"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "このアプリケーションの信頼オブジェクトの複製コピー。"
  overload: System.Security.Policy.ApplicationTrust.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  id: DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得または既定の許可セットを定義するポリシー ステートメントを設定します。"
  remarks: "DefaultGrantSet プロパティでは、アプリケーションに与えられている権限を表します。       <xref:System.Security.Policy.PolicyStatement>を使用して初期化は、既定の権限を表す、<xref:System.Security.PermissionSet>と省略可能な属性です</xref:System.Security.PermissionSet></xref:System.Security.Policy.PolicyStatement>。"
  syntax:
    content: public System.Security.Policy.PolicyStatement DefaultGrantSet { get; set; }
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>既定値について説明したを付与します。"
  overload: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  id: ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得またはアプリケーションに関する追加のセキュリティ情報を設定します。"
  syntax:
    content: public object ExtraInfo { get; set; }
    return:
      type: System.Object
      description: "アプリケーションの追加のセキュリティ情報を格納するオブジェクト。"
  overload: System.Security.Policy.ApplicationTrust.ExtraInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "再構築、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> XML エンコードから指定された状態のオブジェクト。"
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>と<xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>ようにするメソッドが実装されて<xref:System.Security.Policy.ApplicationTrust>オブジェクトのセキュリティ ポリシーを使用する XML encodable</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A> 。"
  syntax:
    content: public void FromXml (System.Security.SecurityElement element);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "再構築に使用する XML エンコード、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>オブジェクト。"
  overload: System.Security.Policy.ApplicationTrust.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "使用する XML エンコード<code> element </code>が無効です。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "このアプリケーションの信頼に完全に信頼されたアセンブリの一覧を取得します。"
  remarks: "一覧内で完全な信頼が付与されたアセンブリを識別する、<xref:System.AppDomain>これに関連付けられている<xref:System.Security.Policy.ApplicationTrust>インスタンス</xref:System.Security.Policy.ApplicationTrust></xref:System.AppDomain>。 アセンブリは、厳密な名前によって識別されます。"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Policy.StrongName> FullTrustAssemblies { get; }
    return:
      type: System.Collections.Generic.IList{System.Security.Policy.StrongName}
      description: "完全信頼アセンブリの一覧。"
  overload: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  id: IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得またはアプリケーションの必要なアクセス許可の付与と実行が信頼されているかどうかを示す値を設定します。"
  remarks: "信頼マネージャー プロパティを設定 IsApplicationTrustedToRun`true`実行するアプリケーションが承認されるとします。"
  syntax:
    content: public bool IsApplicationTrustedToRun { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、アプリケーションが信頼して実行します。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Persist
  id: Persist
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得またはアプリケーションの信頼情報が永続化されるかどうかを示す値を設定します。"
  remarks: "永続化プロパティが`true`、ClickOnce アプリケーション ストアにアプリケーションの信頼情報を保存します。"
  syntax:
    content: public bool Persist { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アプリケーションの信頼情報が永続化された; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Policy.ApplicationTrust.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ToXml
  id: ToXml
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "XML エンコードを作成、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>オブジェクトとその現在の状態。"
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>と<xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>ようにするメソッドが実装されて<xref:System.Security.Policy.ApplicationTrust>オブジェクトのセキュリティ ポリシーを使用する XML encodable</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A> 。"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、セキュリティ オブジェクトの XML エンコード。"
  overload: System.Security.Policy.ApplicationTrust.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.ApplicationTrust.#ctor
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<StrongName>
  nameWithType: IEnumerable<StrongName>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
- uid: System.Collections.Generic.IList{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<StrongName>
  nameWithType: IList<StrongName>
  fullName: System.Collections.Generic.IList<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrust.Persist
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
- uid: System.Security.Policy.ApplicationTrust.#ctor*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone
  nameWithType: ApplicationTrust.Clone
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
- uid: System.Security.Policy.ApplicationTrust.FromXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml
  nameWithType: ApplicationTrust.FromXml
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Security.Policy.ApplicationTrust.Persist*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml
  nameWithType: ApplicationTrust.ToXml
