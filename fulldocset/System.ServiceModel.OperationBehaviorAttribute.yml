### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OperationBehaviorAttribute
  id: OperationBehaviorAttribute
  children:
  - System.ServiceModel.OperationBehaviorAttribute.#ctor
  - System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  - System.ServiceModel.OperationBehaviorAttribute.Impersonation
  - System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  - System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  - System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  langs:
  - csharp
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute
  fullName: System.ServiceModel.OperationBehaviorAttribute
  type: Class
  summary: "サービス メソッドのローカル実行動作を指定します。"
  remarks: "どのような操作に固有の実行動作、操作がいつことを示す OperationBehaviorAttribute 属性を使用して実行します。 (サービス レベルでの実行動作を指定するには、<xref:System.ServiceModel.ServiceBehaviorAttribute>属性を使用します)。     > [!NOTE] > 双方向クライアント アプリケーションでコールバック コントラクト操作を構成する OperationBehaviorAttribute を使用することもできます</xref:System.ServiceModel.ServiceBehaviorAttribute>。 コールバック操作で使用すると、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>プロパティである必要があります<xref:System.ServiceModel.ReleaseInstanceMode>または<xref:System.InvalidOperationException>実行時に例外がスローされます</xref:System.InvalidOperationException></xref:System.ServiceModel.ReleaseInstanceMode></xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>。       OperationBehaviorAttribute 属性は、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]プログラミング モデルの機能を開発者が自ら実装する必要があります、共通の機能を有効にします。      -<xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>プロパティは、操作が完了したら、操作に渡されたパラメーター オブジェクトが破棄されるかどうかを制御します</xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>。      -<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>プロパティは、未処理の例外が発生しなかった場合、メソッドが実行されるトランザクションが自動的にコミットされるかどうかを指定します</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>。      -<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>プロパティ メソッドがトランザクション内で実行する必要があるかどうかを指定します</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>。      -<xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>プロパティ サービス操作ができます、する必要があります、または、呼び出し元の id を借用できないかどうかを指定します</xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>。      -<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>プロパティは、サービス オブジェクトがリサイクルされるメソッドの呼び出しプロセス中を指定します</xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>。"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IOperationBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、次の既定値でクラスのインスタンスを作成します -<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>プロパティは`true`。</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 。      -<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>プロパティは`false`</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>。      <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>プロパティは<xref:System.ServiceModel.ReleaseInstanceMode>。</xref:System.ServiceModel.ReleaseInstanceMode> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> -      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption>.</xref:System.ServiceModel.ImpersonationOption></xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>"
  syntax:
    content: public OperationBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  id: AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはパラメーターを自動的に破棄するかどうかを設定します。"
  remarks: "このプロパティは、サービスがメッセージの処理中に作成されたすべて破棄可能なパラメーター (入力、出力、または参照パラメーター) を破棄するかどうかを判断します。 既定値は `true` です。 このプロパティを設定`false`システムがリソースを破棄するを防ぐために必要な場合、それらをキャッシュしたいかどうか。       たとえば、AutoDisposeParameters`false`送信者が送信側のストリームを閉じるを担当し、します。"
  syntax:
    content: public bool AutoDisposeParameters { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>パラメーターは自動的に破棄するのには次の場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  id: Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または操作がサポートする呼び出し元の偽装レベルを示す値を設定します。"
  remarks: "(および偽装をサポートするバインド構成)、権限借用のプロパティを使用して指定されたメソッドを有効にする (に設定された権限借用のプロパティでマークした<xref:System.ServiceModel.ImpersonationOption>または<xref:System.ServiceModel.ImpersonationOption>)、呼び出し元の id で実行する</xref:System.ServiceModel.ImpersonationOption></xref:System.ServiceModel.ImpersonationOption>。 詳細については、偽装を実行する方法を使用する場合を含む<xref:System.ServiceModel.ImpersonationOption>と共に、<xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName>プロパティを参照してください[委任と偽装](~/add/includes/ajax-current-ext-md.md)と[する方法: サービスでクライアントを偽装](~/add/includes/ajax-current-ext-md.md)</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName></xref:System.ServiceModel.ImpersonationOption>。      > [!NOTE] > 権限借用を実行するサービス エンドポイントをプログラムで追加するには、ときにする必要がありますいずれかの使用、<xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A>メソッドまたは<xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName>メソッドに正しく読み込むコントラクト新しい<xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>オブジェクト</xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName></xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName></xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A>。 構成ファイルを使用しても、余分な手順は必要ありません。       権限借用はサポートされていない特定のシナリオがあります。 [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][サポートされていないシナリオ](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following service code example requires impersonation by setting the Impersonation property to <xref:System.ServiceModel.ImpersonationOption>.  \n  \n [!code-cs[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/services.cs#1)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/services.vb#1)]  \n  \n The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.  \n  \n [!code-cs[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/client.cs#3)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/client.vb#3)]"
  syntax:
    content: public System.ServiceModel.ImpersonationOption Impersonation { get; set; }
    return:
      type: System.ServiceModel.ImpersonationOption
      description: "1 つ、 <xref href=&quot;System.ServiceModel.ImpersonationOption&quot;> </xref>値。 既定値は<xref href=&quot;System.ServiceModel.ImpersonationOption&quot;></xref>です。"
  overload: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  id: ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはをサービス オブジェクトをリサイクルする操作の呼び出し過程で示す値を設定します。"
  remarks: "Use the ReleaseInstanceMode property to specify when [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] recycles a service object in the course of executing a method. The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value. Setting the ReleaseInstanceMode property changes that default behavior.  \n  \n The ReleaseInstanceMode makes no threading guarantees. If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode>.  \n  \n In transaction scenarios, the ReleaseInstanceMode property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call. You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.  \n  \n You can choose the following behaviors:  \n  \n-   Recycle a service object before an operation is called.  \n  \n-   Recycle a service object after an operation is called.  \n  \n-   Recycle a service object both before and after an operation is called.  \n  \n-   No recycling behavior.  \n  \n You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application. When used on a callback operation, the ReleaseInstanceMode property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode>."
  example:
  - "The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.  \n  \n [!code-cs[OBA.ReleaseInstanceMode#1](~/add/codesnippet/csharp/oba.releaseinstancemode.client/services.cs#1)]\n [!code-vb[OBA.ReleaseInstanceMode#1](~/add/codesnippet/visualbasic/oba.releaseinstancemode.client/services.vb#1)]"
  syntax:
    content: public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }
    return:
      type: System.ServiceModel.ReleaseInstanceMode
      description: "1 つ、 <xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;> </xref>値。 既定値は<xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;></xref>です。"
  overload: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "実装して、<xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*>メソッド</xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*>。"
  syntax:
    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "操作の説明をサポートするように変更<xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;></xref>プロパティです。"
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "バインドの動作をサポートするために渡されるパラメーターをバインドします。"
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "クライアント操作の動作を実装します。"
  syntax:
    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "操作の説明をサポートするように変更<xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;></xref>プロパティです。"
    - id: proxy
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: "拡張アクセスは、この操作のためのカスタム クライアント変更の挿入 をポイントします。"
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス操作の動作を実装します。"
  syntax:
    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "操作の説明をサポートするように変更<xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;></xref>プロパティです。"
    - id: dispatch
      type: System.ServiceModel.Dispatcher.DispatchOperation
      description: "この操作のためのカスタム サービス変更を挿入する機能拡張ポイントです。"
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "検証動作を実装します。"
  syntax:
    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "検証する操作の説明。"
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  id: TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または未処理の例外が発生しなかった場合、現在のトランザクション スコープを自動的に完了するかどうかを示す値を設定します。"
  remarks: "TransactionAutoComplete プロパティを設定`false`トランザクション操作のコードで直接完了または中止します。       処理済みの例外は、トランザクションを自動的に中止せずに、操作の過程でスローされます。 未処理の例外だけが自動中止をトリガーします。"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the TransactionAutoComplete property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: public bool TransactionAutoComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>操作の実行完了後に自動的にトランザクション スコープをコミットするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  id: TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはメソッドが、実行のため、トランザクション スコープを必要とするかどうかを示す値を設定します。"
  remarks: "設定、TransactionScopeRequired`true`する操作のトランザクションのスコープ内で実行する必要があります。 フローされたトランザクションが使用可能な場合は、そのトランザクション内で、操作を実行します。 1 つが利用できない場合、新しいトランザクションが作成され、操作の実行に使用します。 バインディングは、フローされたトランザクションはサポートされているかどうか、エンドポイントのコントロールに指定します。 したがって、適切な動作を取得するには、トランザクション フローがバインドおよび TransactionScopeRequired プロパティによって許可されるかどうか間の相互作用を理解する必要があります。 次の表は、可能な動作を示します。      |||||  |-|-|-|-|  |TransactionScopeRequired |バインディングによりトランザクション フロー |呼び出し元がトランザクションをフロー |結果 |  |False |False |いいえ |トランザクションせずにメソッドを実行します |。  |True |False |いいえ |メソッドを作成し、新しいトランザクション内で実行します |。  |True または False |False |[はい] |トランザクション ヘッダーの SOAP エラーが返されます |。  |False |True |[はい] |トランザクションせずにメソッドを実行します |。  |True |True |[はい] |メソッドがフローされたランザクションで実行します |。"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The TransactionScopeRequired property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: public bool TransactionScopeRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メソッドは、実行するトランザクション スコープを必要とする場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation
- uid: System.ServiceModel.ImpersonationOption
  parent: System.ServiceModel
  isExternal: false
  name: ImpersonationOption
  nameWithType: ImpersonationOption
  fullName: System.ServiceModel.ImpersonationOption
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
- uid: System.ServiceModel.ReleaseInstanceMode
  parent: System.ServiceModel
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: ReleaseInstanceMode
  fullName: System.ServiceModel.ReleaseInstanceMode
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
- uid: System.ServiceModel.Description.OperationDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
- uid: System.ServiceModel.Dispatcher.DispatchOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: DispatchOperation
  nameWithType: DispatchOperation
  fullName: System.ServiceModel.Dispatcher.DispatchOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
