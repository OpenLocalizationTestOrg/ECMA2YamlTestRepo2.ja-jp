### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DirectoryConnection
  id: DirectoryConnection
  children:
  - System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  - System.DirectoryServices.Protocols.DirectoryConnection.Credential
  - System.DirectoryServices.Protocols.DirectoryConnection.Directory
  - System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  - System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  langs:
  - csharp
  name: DirectoryConnection
  nameWithType: DirectoryConnection
  fullName: System.DirectoryServices.Protocols.DirectoryConnection
  type: Class
  summary: "DirectoryConnection クラスは抽象クラスであり、インスタンス化することはできません。 使用して、 <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;> </xref>または<xref href=&quot;System.DirectoryServices.Protocols.DsmlSoapHttpConnection&quot;></xref>ディレクトリ サーバーに接続するクラス。"
  syntax:
    content: public abstract class DirectoryConnection
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: DirectoryConnection()
  nameWithType: DirectoryConnection.DirectoryConnection()
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "DirectoryConnection コンス トラクターは、の新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.Protocols.DirectoryConnection&quot;> </xref>クラスです。"
  syntax:
    content: protected DirectoryConnection ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  id: ClientCertificates
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "ClientCertificates プロパティでは、認証用に送信する&1; つまたは複数のクライアント証明書を指定します。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "認証用に送信する&1; つまたは複数のクライアント証明書。"
  overload: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  id: Credential
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Credential
  nameWithType: DirectoryConnection.Credential
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "資格情報のプロパティは、接続オブジェクトの代替の資格情報を指定します。"
  remarks: "指定されていない場合、既定値は`null`します。"
  syntax:
    content: public virtual System.Net.NetworkCredential Credential { set; }
    return:
      type: System.Net.NetworkCredential
      description: "接続オブジェクトの代替資格情報。"
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  id: Directory
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Directory
  nameWithType: DirectoryConnection.Directory
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "ディレクトリのプロパティは、ドメインまたはサーバーの接続を確立する必要がありますを指定します。"
  remarks: "たとえば、&quot;http://fabrikam.com/platforms/adssoap.dll&quot;は、DSML サーバーを表し、&quot;dc&01;.fabrikam.com&quot;は、LDAP サーバーを表します。"
  syntax:
    content: public virtual System.DirectoryServices.Protocols.DirectoryIdentifier Directory { get; }
    return:
      type: System.DirectoryServices.Protocols.DirectoryIdentifier
      description: "ドメインまたはサーバーの接続を確立する必要があります。"
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Directory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: SendRequest(DirectoryRequest)
  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "SendRequest メソッドは、1 つのディレクトリ操作をサーバーに送信します。"
  syntax:
    content: public abstract System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;> </xref>要求を含むオブジェクトです。"
    return:
      type: System.DirectoryServices.Protocols.DirectoryResponse
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;> </xref>サーバー操作に対する応答、要求を含むオブジェクトです。 返された応答オブジェクトは、サーバーが、別の応答を返す場合、要求されたオブジェクトと異なることがあります。"
  overload: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  id: Timeout
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Timeout プロパティには、接続がタイムアウトするまでの秒の時間の長さが含まれています。"
  remarks: "既定の時間長さプロパティの設定は&30; 秒です。"
  syntax:
    content: public virtual TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "接続がタイムアウトするまでの秒の時間の長さ。"
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: DirectoryConnection()
  nameWithType: DirectoryConnection.DirectoryConnection()
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Credential
  nameWithType: DirectoryConnection.Credential
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Directory
  nameWithType: DirectoryConnection.Directory
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory
- uid: System.DirectoryServices.Protocols.DirectoryIdentifier
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryIdentifier
  nameWithType: DirectoryIdentifier
  fullName: System.DirectoryServices.Protocols.DirectoryIdentifier
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: SendRequest(DirectoryRequest)
  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)
- uid: System.DirectoryServices.Protocols.DirectoryResponse
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryResponse
  nameWithType: DirectoryResponse
  fullName: System.DirectoryServices.Protocols.DirectoryResponse
- uid: System.DirectoryServices.Protocols.DirectoryRequest
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryRequest
  nameWithType: DirectoryRequest
  fullName: System.DirectoryServices.Protocols.DirectoryRequest
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: DirectoryConnection
  nameWithType: DirectoryConnection.DirectoryConnection
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Credential
  nameWithType: DirectoryConnection.Credential
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Directory
  nameWithType: DirectoryConnection.Directory
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: SendRequest
  nameWithType: DirectoryConnection.SendRequest
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
