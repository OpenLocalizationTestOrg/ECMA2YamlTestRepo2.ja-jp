### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RIPEMD160
  id: RIPEMD160
  children:
  - System.Security.Cryptography.RIPEMD160.#ctor
  - System.Security.Cryptography.RIPEMD160.Create
  - System.Security.Cryptography.RIPEMD160.Create(System.String)
  langs:
  - csharp
  name: RIPEMD160
  nameWithType: RIPEMD160
  fullName: System.Security.Cryptography.RIPEMD160
  type: Class
  summary: "MD160 ハッシュ アルゴリズムのすべての実装の継承元となる抽象クラスを表します。"
  remarks: "ハッシュ関数マップ バイナリ文字列、任意の長さの固定長のバイナリ文字列を小規模にします。 暗号ハッシュ関数になっていないこと、同じ値にハッシュされる&2; つの異なる入力を検索するためのプロパティ対応するデータにも一致する場合は、2 組のデータのハッシュが一致する必要があります。 ハッシュで予期しない変更を大規模なデータの結果を少し変更します。       Ripemd-160 は、160 ビットの暗号ハッシュ関数です。 これは MD4、MD5、および RIPEMD 128 ビットのハッシュ関数の代わりとして使用するものです。 RIPEMD は、ヨーロッパ プロジェクト RIPE (競合整合性プリミティブ、1988 1992) 評価のフレームワークに開発されました。      > [!NOTE] > RIPEMD160 が、セキュリティで保護されたハッシュ アルゴリズム sha-256、sha-512、派生クラスで置き換えられました。 <xref:System.Security.Cryptography.SHA256>および<xref:System.Security.Cryptography.SHA512>セキュリティおよび RIPEMD160 よりもパフォーマンスが向上を提供します</xref:System.Security.Cryptography.SHA512>。</xref:System.Security.Cryptography.SHA256> RIPEMD160 はレガシ アプリケーションとデータとの互換性にのみ使用します。"
  example:
  - "The following code example calculates the RIPEMD160 hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/t-system.security.crypto_45_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/t-system.security.crypto_45_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/t-system.security.crypto_45_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RIPEMD160 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RIPEMD160
  langs:
  - csharp
  name: RIPEMD160()
  nameWithType: RIPEMD160.RIPEMD160()
  fullName: System.Security.Cryptography.RIPEMD160.RIPEMD160()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref>クラスです。"
  remarks: "抽象クラスのインスタンスを作成することはできません。 アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。 詳細については、<xref:System.Security.Cryptography.RIPEMD160Managed>クラス</xref:System.Security.Cryptography.RIPEMD160Managed>を参照してください。"
  example:
  - "The following code example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/m-system.security.crypto_120_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/m-system.security.crypto_120_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/m-system.security.crypto_120_1.cs)]"
  syntax:
    content: protected RIPEMD160 ();
    parameters: []
  overload: System.Security.Cryptography.RIPEMD160.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160.Create
  id: Create
  parent: System.Security.Cryptography.RIPEMD160
  langs:
  - csharp
  name: Create()
  nameWithType: RIPEMD160.Create()
  fullName: System.Security.Cryptography.RIPEMD160.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "既定の実装のインスタンスを作成、 <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref>ハッシュ アルゴリズム。"
  remarks: "抽象クラスのインスタンスを作成することはできません。 アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。 詳細については、<xref:System.Security.Cryptography.RIPEMD160Managed>クラス</xref:System.Security.Cryptography.RIPEMD160Managed>を参照してください。"
  example:
  - "The following code example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.  \n  \n [!code-cpp[RIPEMD160#1](~/add/codesnippet/cpp/m-system.security.crypto_49_1.cpp)]\n [!code-vb[RIPEMD160#1](~/add/codesnippet/visualbasic/m-system.security.crypto_49_1.vb)]\n [!code-cs[RIPEMD160#1](~/add/codesnippet/csharp/m-system.security.crypto_49_1.cs)]"
  syntax:
    content: public static System.Security.Cryptography.RIPEMD160 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RIPEMD160
      description: "新しいインスタンス、 <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref>ハッシュ アルゴリズム。"
  overload: System.Security.Cryptography.RIPEMD160.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "アルゴリズムは、連邦情報処理規格 (FIPS) モードを有効にすると、とともに使用されましたが、FIPS 互換ではありません。"
  platform:
  - net462
- uid: System.Security.Cryptography.RIPEMD160.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RIPEMD160
  langs:
  - csharp
  name: Create(String)
  nameWithType: RIPEMD160.Create(String)
  fullName: System.Security.Cryptography.RIPEMD160.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "指定した実装のインスタンスを作成、 <xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;> </xref>ハッシュ アルゴリズム。"
  remarks: "抽象クラスのインスタンスを作成することはできません。 アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。 詳細については、<xref:System.Security.Cryptography.RIPEMD160Managed>クラス</xref:System.Security.Cryptography.RIPEMD160Managed>を参照してください。"
  syntax:
    content: public static System.Security.Cryptography.RIPEMD160 Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "特定の実装の名前<xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;></xref>を使用します。"
    return:
      type: System.Security.Cryptography.RIPEMD160
      description: "指定した実装の新しいインスタンス<xref href=&quot;System.Security.Cryptography.RIPEMD160&quot;></xref>です。"
  overload: System.Security.Cryptography.RIPEMD160.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "によって説明されているアルゴリズム、 <code> hashName </code>パラメーターが有効になっている、連邦情報処理規格 (FIPS) モードで使用されましたが FIPS 互換ではありません。"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.RIPEMD160.#ctor
  parent: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: RIPEMD160()
  nameWithType: RIPEMD160.RIPEMD160()
  fullName: System.Security.Cryptography.RIPEMD160.RIPEMD160()
- uid: System.Security.Cryptography.RIPEMD160.Create
  parent: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: Create()
  nameWithType: RIPEMD160.Create()
  fullName: System.Security.Cryptography.RIPEMD160.Create()
- uid: System.Security.Cryptography.RIPEMD160
  parent: System.Security.Cryptography
  isExternal: false
  name: RIPEMD160
  nameWithType: RIPEMD160
  fullName: System.Security.Cryptography.RIPEMD160
- uid: System.Security.Cryptography.RIPEMD160.Create(System.String)
  parent: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: Create(String)
  nameWithType: RIPEMD160.Create(String)
  fullName: System.Security.Cryptography.RIPEMD160.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RIPEMD160.#ctor*
  parent: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: RIPEMD160
  nameWithType: RIPEMD160.RIPEMD160
- uid: System.Security.Cryptography.RIPEMD160.Create*
  parent: System.Security.Cryptography.RIPEMD160
  isExternal: false
  name: Create
  nameWithType: RIPEMD160.Create
