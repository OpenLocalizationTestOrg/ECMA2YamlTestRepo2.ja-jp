### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "カスタム セッション状態識別子マネージャーを実装する必要があるコントラクトを定義します。"
  remarks: "ISessionIDManager インターフェイスでは、セッション識別子の値のカスタム マネージャーを作成するために実装する必要がありますメソッドを識別します。 ISessionIDManager インターフェイスの実装を作成し、セッション識別子の値を検証し、HTTP 要求から HTTP 応答でセッション識別子の記憶域だけでなく、セッション識別子の値の取得を管理します。 使用して、カスタムのセッション ID マネージャーを有効にする、`sessionIDManagerType`の属性、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)構成要素。       ISessionIDManager インターフェイスの実装が cookie なしのセッション識別子をサポートする場合は、送信および ISAPI フィルターなど、URL 内のセッション id を取得するためのソリューションを実装する必要があります。       ASP.NET セッション状態で使用するカスタムのセッション id 値を指定する場合は、継承するクラスを作成することができます、<xref:System.Web.SessionState.SessionIDManager>クラスのみさせ、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>独自のカスタム実装を持つメソッドです</xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager>。 これにより、ベースの証明書利用者の中に、独自のセッション id 値を入力する<xref:System.Web.SessionState.SessionIDManager>クラスを HTTP 応答への値を格納および HTTP 要求から値を取得します</xref:System.Web.SessionState.SessionIDManager>。 <xref:System.Web.SessionState.SessionIDManager>クラスおよび<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A><xref:System.Web.SessionState.SessionIDManager>クラス</xref:System.Web.SessionState.SessionIDManager>のメソッド</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>に指定された例を参照して、これらのメソッドの実装</xref:System.Web.SessionState.SessionIDManager>をオーバーライドする例については"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "一意のセッション識別子を作成します。"
  remarks: "一意のセッション識別子を生成する CreateSessionID メソッドを使用する、<xref:System.Web.SessionState.SessionStateModule>新しいセッションを識別するオブジェクトが使用されます</xref:System.Web.SessionState.SessionStateModule>。 CreateSessionID によって返される値は一意である必要があり、HTTP 応答と要求に格納できる有効な文字を含める必要があります。 使用する必要があります、CreateSessionID 実装によって返される値が、HTTP 応答または要求に無効な文字が含まれている可能性がある場合、<xref:System.Web.HttpUtility.UrlEncode%2A>でセッション id 値をエンコードする方法、<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>メソッドの実装と<xref:System.Web.HttpUtility.UrlDecode%2A>でセッション id 値をデコードする方法、<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>メソッドの実装</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A></xref:System.Web.HttpUtility.UrlDecode%2A></xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A></xref:System.Web.HttpUtility.UrlEncode%2A>。"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    return:
      type: System.String
      description: "一意のセッション識別子です。"
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の HTTP 要求のコンテキストからのセッション識別子を取得します。"
  remarks: "GetSessionID メソッドによって呼び出されます、<xref:System.Web.SessionState.SessionStateModule>中に、<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>と<xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>イベント</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName></xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName></xref:System.Web.SessionState.SessionStateModule>。 場合は、HTTP 要求から有効なセッション識別子を取得することはできません、返す`null`です。 場合、<xref:System.Web.SessionState.SessionStateModule>受信`null`GetSessionID メソッドからは呼び出すことが、<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>新しいセッションのため、新しいセッション識別子を取得するメソッド</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionStateModule>。       値がによって返される可能性がある場合、<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>実装には、HTTP 応答または要求に無効な文字が含まれています、使用する必要があります、<xref:System.Web.HttpUtility.UrlEncode%2A>でセッション id 値をエンコードする方法、<xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>メソッドの実装と<xref:System.Web.HttpUtility.UrlDecode%2A>GetSessionID メソッドの実装でセッション id 値をデコードするメソッド</xref:System.Web.HttpUtility.UrlDecode%2A></xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A></xref:System.Web.HttpUtility.UrlEncode%2A></xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>。"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    return:
      type: System.String
      description: "HTTP 要求と一緒に送信の現在のセッション識別子です。"
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初期化、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>オブジェクト。"
  remarks: "Initialize メソッドを使用して初期化するために、<xref:System.Web.SessionState.ISessionIDManager>オブジェクト</xref:System.Web.SessionState.ISessionIDManager>。"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "要求ごとの初期化を実行、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>オブジェクト。"
  remarks: "InitializeRequest メソッドによって処理される各要求に対して、<xref:System.Web.SessionState.ISessionIDManager>オブジェクト</xref:System.Web.SessionState.ISessionIDManager>。 要求ごとのデータを初期化する InitializeRequest メソッドを使用して、<xref:System.Web.SessionState.SessionIDManager>オブジェクト</xref:System.Web.SessionState.SessionIDManager>。       ときに、`suppressAutoDetectRedirect`パラメーターは`true`、<xref:System.Web.SessionState.ISessionIDManager>オブジェクトでは、ブラウザーが cookie をサポートしているかどうかを決定するリダイレクトを使用しないでください</xref:System.Web.SessionState.ISessionIDManager>。       `supportSessionIDReissue`パラメーターを返す必要がある`false`セッション id です cookie が使用される場合を返しますそれ以外の場合、`true`場合、<xref:System.Web.SessionState.ISessionIDManager>実装は、再度発行元のセッション Id をサポートしています。</xref:System.Web.SessionState.ISessionIDManager> 。"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求に関する情報を含むオブジェクト。"
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、セッション ID マネージャーが cookie のサポートを確認するリダイレクトする必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>クッキー サポートの決定に自動リダイレクトを抑制します。"
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "このメソッドが戻るときを示すブール値を格納するかどうか、 <xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;> </xref>オブジェクトは、元の ID が古い場合に、発行元の新しいセッション Id をサポートしています。 このパラメーターは初期化せずに渡されます。       セッション状態の ID が URL でエンコードされたおよび共有または電子メールで送信する url が存在する可能性があるセッション ID の再利用が適しています。       仮想パスを使用してカスタム セッション状態の実装のパーティション cookie をセッションの状態もサポートされる必要があります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>初期化が、リダイレクトを実行することを示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Cookie とは、URL からセッションの識別子を削除します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>呼び出し、<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>メソッド中に、<xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>からのセッション識別子を削除するイベント、<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>コレクションの場合は、新しいセッションが作成されましたが、使用されませんでした</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName></xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName></xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A></xref:System.Web.SessionState.SessionStateModule>。"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "HTTP 応答には、新しく作成されたセッション識別子を保存します。"
  remarks: "SaveSessionID メソッドによって呼び出されます、<xref:System.Web.SessionState.SessionStateModule>中に、<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>イベント</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName></xref:System.Web.SessionState.SessionStateModule>。 SaveSessionID メソッドは、URL (cookie なしのセッション状態を使用) する場合または期限切れのないセッションの cookie、セッション識別子を格納します。       値を返す可能性がある場合、<xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>実装には、HTTP 応答または要求に無効な文字が含まれています、使用する必要があります、 <xref:System.Web.HttpUtility.UrlEncode%2A>SaveSessionID メソッドの実装でセッション id 値をエンコードする方法、および<xref:System.Web.HttpUtility.UrlDecode%2A>でセッション id 値をデコードする方法、<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>メソッドの実装</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A></xref:System.Web.HttpUtility.UrlDecode%2A></xref:System.Web.HttpUtility.UrlEncode%2A></xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>。"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    - id: id
      type: System.String
      description: "セッションの識別子です。"
    - id: redirected
      type: System.Boolean
      description: "このメソッドが戻るときに、ブール値が含まれています<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>応答が、URL に追加したセッション識別子を持つ現在の URL にリダイレクトされる、それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: cookieAdded
      type: System.Boolean
      description: "このメソッドが戻るときに、ブール値が含まれています<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> HTTP 応答に追加されます。 それ以外の場合、cookie があった場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "指定したセッション識別子が有効であることを確認します。"
  remarks: "タスクの Validate メソッドであることを確認、指定された`id`有効なセッション識別子を指定します。       <xref:System.Web.SessionState.ISessionIDManager>実装から検証メソッドを呼び出す必要があります、<xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>メソッド提供されているセッション識別子が正しくフォーマットされていることを確認する HTTP 要求からのセッション識別子を取得するときにします</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A></xref:System.Web.SessionState.ISessionIDManager>。"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "検証するセッション識別子。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セッション識別子が無効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
