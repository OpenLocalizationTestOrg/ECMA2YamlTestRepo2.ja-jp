### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "XAML の型のメンバーの XAML 型システム識別子を提供します。 識別子がメンバー ノードの処理中に XAML リーダーと XAML ライターによって使用される (に XAML リーダーが配置されている場合、 <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>) また、一般的な XAML 型システムのロジックのです。"
  remarks: "XamlMember は XAML メンバーに関する情報を返すための&3; つの手法を使用できる: 共通言語ランタイム (CLR) のリフレクション標準です。呼び出す内部参照専用のリフレクション手法 Api 最適化を使用するビット フラグを設定です。上書きが仮想を呼び出すことや、`Lookup*`考えられる XamlMember サブクラスによって提供される API。 .NET Framework XAML サービス Api と XamlMember API のほとんどの用途、既定の XAML スキーマ コンテキストを使用します。 .NET Framework XAML サービスの既定の XAML スキーマ コンテキストでは、CLR の型システムのバックアップを使用します。 これにより、任意の型またはメンバーが定義されている入力、またはそれ以外の場合に使用できる、CLR および、リフレクション手法を使用するには、XAML リーダーと XAML ライター。      ## 参照 * Api と XamlMember 派生クラス XamlMember 定義がいくつかの派生クラスの仮想メンバーの方が優先されます。 これらのメンバーは、常に、文字列で始まる名前を持つ`Lookup`します。 API の残りの部分では、仮想メソッドに影響するプロパティ参照を名前します。 たとえば、XamlMember の派生クラスが<xref:System.Xaml.XamlMember.LookupTargetType%2A>どのようなベースで定義されたプロパティを<xref:System.Xaml.XamlMember.TargetType%2A>、派生クラスを返します</xref:System.Xaml.XamlMember.TargetType%2A>に影響を与える</xref:System.Xaml.XamlMember.LookupTargetType%2A>オーバーライド可能性があります。 戻り値を予測するには、XamlMember または既存のでは、このようなプロパティは、関連するドキュメントを参照してクラスを派生`Lookup*`メソッドです。       目的、`Lookup*`メソッドが XamlMember の基本クラスが組み込まれている XAML 型システムの拡張機能手法を提供することです。 XamlMember から派生させ、オーバーライドして、`Lookup`仮想メンバーを定義できます XAML スキーマの XAML メンバーの概念、XAML 型システムで、バッキング型システムまたはテクノロジの詳細に束縛されずになし。 このスキームで提供されている XAML スキーマ コンテキストを使用してもと、目的の結果を返すことができます。       たとえば、XamlMember プロパティ<xref:System.Xaml.XamlMember.IsWritePublic%2A>。</xref:System.Xaml.XamlMember.IsWritePublic%2A>を検討してください。 このプロパティを使用するなど、その操作を呼び出し元に通知する<xref:System.Xaml.XamlWriter>のシリアル化は、このメンバーの値を対象のオブジェクトで書き込むことができます</xref:System.Xaml.XamlWriter>。 既定の実装では、メンバーが書き込み可能かどうかの決定がバッキング CLR に対するリフレクション手法を使用して行われます<xref:System.Type>とそのメンバー (、 <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> したがって、既定では、XAML 型システムによって異なります、CLR の型システム。 ただし、XAML 型システム レポート用の<xref:System.Xaml.XamlMember.IsWritePublic%2A>API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>。</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>をオーバーライドすることで</xref:System.Xaml.XamlMember.IsWritePublic%2A>この依存関係を削除することができます。 、オーバーライド内で、テクノロジ、最適化された固定の XAML ボキャブラリやその他の方法は XAML メンバーが XAML ボキャブラリで書き込み可能かどうかを決定するためのさまざまなマスターのルックアップ テーブルに固有であるメタデータなどの他の決定を行うこともできます。      ## XamlMember のコンス トラクター XamlMember せず XAML スキーマ コンテキスト最もを構築する必要があります、<xref:System.Xaml.XamlSchemaContext>初期化の一部として</xref:System.Xaml.XamlSchemaContext>。 <xref:System.Xaml.XamlSchemaContext>また多くの内部の必要があります<xref:System.Xaml.XamlSchemaContext>バッキング型から転送される情報の取得などの操作</xref:System.Xaml.XamlSchemaContext></xref:System.Xaml.XamlSchemaContext>。 XamlMember API を使用しているときに通常必要がある<xref:System.Xaml.XamlSchemaContext><xref:System.Xaml.XamlWriter>。</xref:System.Xaml.XamlWriter>などの周囲の構造から使用できます。</xref:System.Xaml.XamlSchemaContext> この例では、渡すことができます、 <xref:System.Xaml.XamlSchemaContext>XAML スキーマ コンテキストを必要とするすべての XAML 型システム呼び出しへの参照を使用します</xref:System.Xaml.XamlSchemaContext>。       1 つ特定のコンス トラクター、 <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> <xref:System.Xaml.XamlSchemaContext>。</xref:System.Xaml.XamlSchemaContext>は必要ありません、</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> ただしで構成される XamlMember、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>署名を返します`true` <xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> 。       関係する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、このようなメンバーは、オブジェクト グラフに書き込まれることはできません</xref:System.Xaml.XamlObjectWriter>。 .NET Framework XAML サービス実装を使用して、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>スローされます、<xref:System.Xaml.XamlObjectWriterException>関連 XamlMember を報告すると`true` <xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> 。       値を持つ XamlMember を構築する必要がありますいない`true`の<xref:System.Xaml.XamlMember.IsUnknown%2A>実装からの例外を処理できる場合を除き、 <xref:System.Xaml.XamlObjectWriter>、その他の方法を調整することも、<xref:System.Xaml.XamlObjectWriter>動作</xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlMember.IsUnknown%2A>。 たとえば、次の&1; つ以上があります、実装の場合は true。:-XAML スキーマ コンテキストが後で使用できます。      -は、メンバーの呼び出し元パターンを使用します。      意図的にオーバーライド-<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>カスタム XAML ライターにします</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>。"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>クラスの CLR 型システムを使用して<xref:System.Reflection.EventInfo>と<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref></xref:System.Reflection.EventInfo> 。"
  remarks: "メンバーは、イベント (イベント ハンドラー接続ポイントのプロパティ) を表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR 型システム<xref:System.Reflection.EventInfo>イベント メンバーを表す</xref:System.Reflection.EventInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>クラスの CLR 型システムを使用して<xref:System.Reflection.PropertyInfo>と<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref></xref:System.Reflection.PropertyInfo> 。"
  remarks: "メンバー プロパティを表します (具体的には、イベント ハンドラー接続ではない) 場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR 型システム<xref:System.Reflection.PropertyInfo>プロパティ メンバーを表す</xref:System.Reflection.PropertyInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>クラスの CLR 型システムを使用して<xref:System.Reflection.EventInfo>と<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>など、 <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>情報</xref:System.Reflection.EventInfo>。"
  remarks: "メンバーは、イベント (または、イベント ハンドラー接続ポイントのプロパティ) を表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "CLR 型システム<xref:System.Reflection.EventInfo>イベント メンバーを表す</xref:System.Reflection.EventInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>に対するランタイムのリフレクションを処理する実装を呼び出す、 <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>リフレクションを使用してクラス<xref:System.Reflection.PropertyInfo>と<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>など、 <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>情報</xref:System.Reflection.PropertyInfo>。"
  remarks: "メンバーがプロパティを表す場合にのみ、およびイベント ハンドラー接続ではない場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "CLR 型システム<xref:System.Reflection.PropertyInfo>プロパティ メンバーを表す</xref:System.Reflection.PropertyInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>に対して実行時の呼び出しを処理する実装を呼び出す、 <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>のクラス、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>アタッチ可能なイベントを表すです。"
  remarks: "メンバーは、アタッチ可能なイベント メンバーを表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "アタッチ可能なイベントの文字列名。"
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>ハンドラーの<xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのメソッドの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>クラス文字列名を使用して、宣言する<xref href=&quot;System.Xaml.XamlType&quot;></xref>情報。 A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>がこれで構築されているシグネチャに多くの制限があります。「解説」を参照してください。"
  remarks: "A<xref:System.Xaml.XamlMember>が XamlMember の署名を返しますで構築されている`true` <xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> 。       関係する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、このようなメンバーは、オブジェクト グラフに書き込まれることはできません</xref:System.Xaml.XamlObjectWriter>。 .NET Framework XAML サービス実装を使用して、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>スローされます、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlMember>レポート`true`<xref:System.Xaml.XamlMember.IsUnknown%2A>です</xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember></xref:System.Xaml.XamlObjectWriterException></xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>。       構成しないで、<xref:System.Xaml.XamlMember>で<xref:System.Xaml.XamlMember.IsUnknown%2A>`true`実装からの例外を処理できる場合を除き、 <xref:System.Xaml.XamlObjectWriter>、その他の方法を調整することも、<xref:System.Xaml.XamlObjectWriter>動作</xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember>。 たとえば、次の&1; つ以上があります、実装の場合は true。:-XAML スキーマ コンテキストが後で使用できます。      -は、メンバーの呼び出し元パターンを使用します。      意図的にオーバーライド-<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>カスタム XAML ライターにします</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>。"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "メンバーの文字列名。"
    - id: declaringType
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>宣言する型について説明します。"
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーがアタッチ可能であることを示しますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>のクラス、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>アタッチ可能なプロパティを表すです。"
  remarks: "メンバーは、アタッチ可能なプロパティを表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "アタッチ可能なプロパティの文字列名。"
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>の<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのアクセサーの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>の<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのアクセサーの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>のクラス、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> 、アタッチ可能なイベントを表すなど<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>情報。"
  remarks: "メンバーは、アタッチ可能なイベント メンバーを表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "アタッチ可能なイベントの文字列名。"
    - id: adder
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>ハンドラーの<xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのメソッドの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>に対して実行時の呼び出しを処理する実装を呼び出す、 <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>のクラス、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>添付可能なプロパティを表すなど<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref>情報。"
  remarks: "メンバーは、アタッチ可能なプロパティ メンバーを表す場合は、このコンス トラクターを使用します。"
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "アタッチ可能なプロパティの文字列名。"
    - id: getter
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>の<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのアクセサーの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "CLR 型システム<xref:System.Reflection.MethodInfo>の<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アタッチ可能なメンバーのアクセサーの実装をバックアップします</xref:System.Reflection.MethodInfo>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "<xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>メンバーを修飾するコンテキスト。"
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>に対して実行時の呼び出しを処理する実装を呼び出す、 <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>これに関連付けられているメンバーを宣言する型の<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "この値は、通常は初期化中に設定し、は通常ありません`null`です。      > [!IMPORTANT] > DeclaringType 情報を受け渡しできるでコンス トラクターによって初期化します。 基底コンス トラクターを直接呼び出すこと、<xref:System.Xaml.XamlMember>派生クラスは、一部の基本クラスに対して行われる値のチェックを省略できます</xref:System.Xaml.XamlMember>の初期化 そのため、派生の初期化は、基になる CLR 宣言の型システム情報と予想される方法で配置されなくされるよう、XAML メンバーの報告された型のメンバー リレーションシップ情報を変更できます。 セキュリティ クリティカルなチェックの種類の情報を宣言するには、代わりに、基になる CLR 型を使用します。"
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>これに関連付けられているメンバーを宣言する型の<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; XAML の遅延読み込みの際に使用されるオブジェクトがオブジェクトを宣言します。"
  remarks: "呼び出す DeferringLoader<xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>。 この動作は、初期の内部リフレクション ロジックで、情報がまだ設定されていない場合に発生します。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref href=&quot;System.Xaml.XamlDeferringLoader&quot;></xref>ジェネリックに制約します。"
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "一覧を取得<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクト。 これらの基準としたこの初期化の順序の依存関係が存在するメンバー プロバイダー <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "DependsOn 呼び出すと、<xref:System.Xaml.XamlMember.LookupDependsOn%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupDependsOn%2A>。 この動作は、初期の内部リフレクション ロジックで、情報がまだ設定されていない場合に発生します。       `DependsOn`パターンは、一般的な XAML 規則を意図的に矛盾するオブジェクト モデルのケースに適用することができます。 一般的な XAML 規則は、任意の順序で割り当てることが初期化のテキストとして (または、XAML 2009 のファクトリ メソッドを) は渡されない型のメンバーである必要があります。 適用することによって、`DependsOn`パターンがメンバーは、XAML ライターに指示することができますを常にこのメンバーの前に参照されたメンバーを処理します。 コンテキスト、またはその他の情報だけが利用できる他のメンバーを設定した後、現在のメンバーの値が必要とする状況では、このパターンを適用することができます。       `DependsOn`パターンを慎重に適用され、アーキテクチャの目的を機能にプロパティのシナリオ用に予約する必要があります。 多数の依存関係には、XAML の処理速度が低下する可能性があります。 また、可能であれば、循環依存関係を生成するために XAML 処理の動作が定義されている場合です。       例`DependsOn`WPF からシナリオで特定のプロパティを含める<xref:System.Windows.Controls.ControlTemplate>と<xref:System.Windows.DataTemplate>の<xref:System.Windows.Trigger>、および<xref:System.Windows.Setter></xref:System.Windows.Setter></xref:System.Windows.Trigger></xref:System.Windows.DataTemplate></xref:System.Windows.Controls.ControlTemplate>。"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "一連の<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクト。"
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "現在のオブジェクトが別のオブジェクトと等しいかどうかを示します。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "このオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のオブジェクトが等しい場合、 <code> obj </code>パラメーター、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "現在のオブジェクトが同じ型の別のオブジェクトと等しいかどうかを示します。"
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "このオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のオブジェクトが等しい場合、 <code> other </code>パラメーター、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "このオブジェクトのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "整数ハッシュ コード。"
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "この XAML メンバーが存在できる XAML 名前空間の一覧を返します。"
  remarks: "<xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName><xref:System.Xaml.XamlMember.DeclaringType%2A>この<xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>に関連付けられている</xref:System.Xaml.XamlMember.DeclaringType%2A>からの結果を呼び出す</xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>既定の実装を返します"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "文字列としての XAML 名前空間の識別子の一覧。"
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>これに関連付けられている実装<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "`Invoker`パターンは高度な XAML 型システム拡張技術です。 `Invoker`パターンは、.NET Framework XAML サービスの XAML 型システム定義を使用中に別のスキーマ型のマッピングの動作を挿入する方法を提供します。       場合、<xref:System.Xaml.XamlMember.LookupInvoker%2A>オーバーライド`null`、既定の実装を返す場合、または`null`<xref:System.Xaml.XamlMember.UnderlyingMember%2A>この<xref:System.Xaml.XamlMember>呼び出し元のプロパティを返します<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName></xref:System.Xaml.XamlMember></xref:System.Xaml.XamlMember.UnderlyingMember%2A>がないため</xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>既定値です。</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> これは、ほとんどの操作で .NET Framework XAML サービスおよび既定の XAML スキーマ コンテキストを使用し、固有の仕様が上書きされない場合は true。`Invoker`パターンは XAML 型システム エンティティを構築するために渡されます。       呼び出し元を呼び出すと<xref:System.Xaml.XamlMember.LookupInvoker%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupInvoker%2A>。"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>これに関連付けられている実装<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>はアンビエント プロパティとして報告します。"
  remarks: "呼び出す IsAmbient<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsAmbient%2A>。 この動作は、ここで初期の内部リフレクション ロジックで、情報は既に設定されていない実装で発生します。       チェックは、アンビエント プロパティには、通常、オブジェクトと型の修飾子のアンビエント使用量に依存する値が正しく動作するかどうかを確認する XAML の処理ロジックの一部です。 .NET Framework XAML サービス Api と既定の XAML スキーマ コンテキスト<xref:System.Windows.Markup.AmbientAttribute>。</xref:System.Windows.Markup.AmbientAttribute>属性に基づいてこの値を設定します。 既定の実装<xref:System.Xaml.XamlMember.LookupIsAmbient%2A>はこの既存<xref:System.Windows.Markup.AmbientAttribute>手法、およびそれを返します`true`場合<xref:System.Windows.Markup.AmbientAttribute>メンバーの宣言に存在します</xref:System.Windows.Markup.AmbientAttribute></xref:System.Windows.Markup.AmbientAttribute></xref:System.Xaml.XamlMember.LookupIsAmbient%2A>。       <xref:System.Windows.Markup.AmbientAttribute>を含むいくつかの WPF 型のメンバーである<xref:System.Windows.Application>、 <xref:System.Windows.Setter>、 <xref:System.Windows.Style>。</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> 上でも検出される、<xref:System.Windows.ResourceDictionary>型で、使用する任意のメンバーを伴う<xref:System.Windows.ResourceDictionary>ようにその型見なすアンビエント場合でも、メンバーは、具体的には属性化されません</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>アンビエント プロパティとして報告された、それ以外は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>アタッチ可能なメンバーであります。"
  remarks: "<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember>を構築するためにどのコンス トラクターが使用されているに基づいて IsAttachable 値が初期化されます。"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>アタッチ可能なメンバーには、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>は XAML ディレクティブがします。"
  remarks: "<xref:System.Xaml.XamlMember>。</xref:System.Xaml.XamlMember>を構築するためにどのコンス トラクターが使用されているに基づいて IsDirective 値が初期化されます。 基本<xref:System.Xaml.XamlMember>コンス トラクター初期化ように IsDirective `false`</xref:System.Xaml.XamlMember> 。 ただし、<xref:System.Xaml.XamlDirective>クラス (、<xref:System.Xaml.XamlMember>派生クラス) ように IsDirective 初期化`true`</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlDirective>。       IsDirective としてのレポートを作成する場合`true`XAML メンバーに対するカスタム XAML スキーマ クラスの呼び出し元にから派生したことを確認<xref:System.Xaml.XamlDirective>その動作を有効にする唯一の方法であるためです</xref:System.Xaml.XamlDirective>。"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>は XAML ディレクティブをそれ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>イベント メンバーを表します。"
  remarks: "Isevent メソッドを呼び出すと<xref:System.Xaml.XamlMember.LookupIsEvent%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsEvent%2A>。"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>イベントを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>は有効な初期化<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;></xref>その<xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>として文字列"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>は有効な初期化<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;></xref>文字列です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>読み取り専用のメンバーを表します。"
  remarks: "IsReadOnly 呼び出すと、<xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>読み取り専用のメンバーを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>呼び出し可能なパブリック メンバーを表す<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー。"
  remarks: "IsReadPublic 値かどうかのチェック、<xref:System.Xaml.XamlMember.DeclaringType%2A>はパブリック</xref:System.Xaml.XamlMember.DeclaringType%2A>。 場合<xref:System.Xaml.XamlMember.DeclaringType%2A>は、パブリックでない、`get`アクセサーは実用的な方法で呼び出すことがないと IsReadPublic 返します`false`</xref:System.Xaml.XamlMember.DeclaringType%2A>。       呼び出す IsReadPublic<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>。      > [!IMPORTANT] >、<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>。 オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセスは XAML メンバーの基になる CLR 宣言の型システムのアクセス情報と予想される方法で整合不要になったように可能性があります。 アクセス レベルのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>呼び出し可能なパブリックを表す<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "メンバーは型およびメンバーの解決に使用されているバックアップ システムで解決できないかどうかを示す値を取得します。"
  remarks: "A<xref:System.Xaml.XamlMember>を構築する、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>署名を返します`true`IsUnknown 用</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29></xref:System.Xaml.XamlMember>。       関係する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、<xref:System.Xaml.XamlMember>で`true`IsUnknown がオブジェクト グラフに書き込むためです</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlObjectWriter>。 .NET Framework XAML サービスの Api で既定の実装の下にある、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>スローされます、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlMember>レポート`true`IsUnknown 用</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlObjectWriterException></xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>。       構成しないで、<xref:System.Xaml.XamlMember>の値を持つ`true`IsUnknown の実装からの例外を処理できる場合を除く<xref:System.Xaml.XamlObjectWriter>、その他の方法を調整することも、<xref:System.Xaml.XamlObjectWriter>動作</xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlMember>。       IsUnknown を呼び出すと<xref:System.Xaml.XamlMember.LookupIsUnknown%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>。"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、メンバーが解決できません。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>メンバーが解決可能な場合です。"
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>書き込み専用のメンバーを表します。"
  remarks: "呼び出す IsWriteOnly<xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>。"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>書き込み専用のメンバーを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>呼び出し可能なパブリックを持つメンバーを表す<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサー。"
  remarks: "IsWritePublic 値を考慮するかどうか、<xref:System.Xaml.XamlMember.DeclaringType%2A>はパブリックでは、決定の一部として</xref:System.Xaml.XamlMember.DeclaringType%2A>。 場合<xref:System.Xaml.XamlMember.DeclaringType%2A>がパブリックでない、`set`アクセサーは実用的な方法で呼び出すことがないと IsWritePublic 返します`false`です</xref:System.Xaml.XamlMember.DeclaringType%2A>。       呼び出す IsWritePublic<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>。      > [!IMPORTANT] >、<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>メソッドは仮想であり、そのため、オーバーライドされることができます</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>。 オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセスは XAML メンバーの基になる CLR 宣言の型システムのアクセス情報と予想される方法で整合不要になったように可能性があります。 アクセス レベルのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>呼び出し可能なパブリックを表す<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "派生クラスで実装された場合を返します、 <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref>実装します。"
  remarks: "CLR 属性の値を取得する代替方法を内部のリフレクションを提供するには、このメソッドをオーバーライドします。 上書きがない場合、内部 reflector で<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>。</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>への呼び出しなどの一般的な CLR リフレクション ロジック       既定の実装を返します`null`です。"
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "<xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref>実装します。"
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; XAML の遅延読み込みの際に使用されるオブジェクトは、オブジェクトを宣言します。"
  remarks: "呼び出し元から値を取得するときに、このメソッドが呼び出される、<xref:System.Xaml.XamlMember.DeferringLoader%2A>プロパティ</xref:System.Xaml.XamlMember.DeferringLoader%2A>。 このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.DeferringLoader%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも提供する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報です</xref:System.Xaml.Schema.XamlMemberInvoker></xref:System.Xaml.XamlMember.DeferringLoader%2A>。       既定の実装オブジェクトを返しますの読み取りを<xref:System.Windows.Markup.XamlDeferLoadAttribute>またはを使用して、<xref:System.Xaml.XamlDeferringLoader>宣言する型から</xref:System.Xaml.XamlDeferringLoader></xref:System.Windows.Markup.XamlDeferLoadAttribute>。 このメソッドを返す場合があるかどうか、どちらのオブジェクトは、使用、`null`です。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;を持つ、 <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref>ジェネリックに制約します。"
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "一覧を返します<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクト。 リスト内の項目を報告この基準の初期化の順序の依存関係のあるメンバー <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "呼び出し元から値を取得するときに、このメソッドが呼び出される、<xref:System.Xaml.XamlMember.DependsOn%2A>プロパティ</xref:System.Xaml.XamlMember.DependsOn%2A>。 このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.DependsOn%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも提供する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報</xref:System.Xaml.Schema.XamlMemberInvoker></xref:System.Xaml.XamlMember.DependsOn%2A>。       WPF XAML リーダーとライターの実装属性<xref:System.Windows.Markup.DependsOnAttribute>。</xref:System.Windows.Markup.DependsOnAttribute>ここ 既定の実装では、この既存<xref:System.Windows.Markup.DependsOnAttribute>手法</xref:System.Windows.Markup.DependsOnAttribute>。       使用していない場合は、このメソッドをオーバーライド<xref:System.Windows.Markup.DependsOnAttribute>この目的および手法のため、独自のプロパティの処理順序を示すためには、その手法を置き換える</xref:System.Windows.Markup.DependsOnAttribute>。 プロパティの処理順序をサポートする予定がない場合は、その結果は返されません、これは適切なために、既定の実装を使用できます。       リストとは、読み取り専用です。"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "一連の<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクト。"
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref>これに関連付けられている<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "このメソッドが<xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>への呼び出しによって呼び出されます       既定の実装で、いる必要はありません<xref:System.Xaml.XamlMember>をパス、初期<xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker>コンス トラクターのいずれかを使用して構築します。</xref:System.Xaml.XamlMember> ただし、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>の値が存在する必要があります、<xref:System.Xaml.XamlMember>以外の場合、既定の実装を返します`null`</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       このメソッドをオーバーライドしても<xref:System.Xaml.Schema.XamlMemberInvoker>、派生クラスを返すしようと</xref:System.Xaml.Schema.XamlMemberInvoker>から派生した場合 返す場合`null`、<xref:System.Xaml.XamlMember.Invoker%2A>返します<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>の呼び出し元にします</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName></xref:System.Xaml.XamlMember.Invoker%2A>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返すかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>はアンビエント プロパティとして報告します。"
  remarks: "このメソッドは、アンビエント XAML プロパティの情報を確認する内部の呼び出しによって呼び出されます。 アンビエント プロパティの動作は、パブリック API の動作の XAML リーダーと XAML ライターに反映します。 LookupIsAmbient を参照する内部の呼び出しは、オブジェクトと型の修飾子のアンビエント使用量に依存する値が正しく動作するかどうかを確認する XAML の処理ロジックの一部では通常です。 既定の .NET Framework XAML サービス実装は、CLR がバッキング型にリフレクションからこの情報を取得する属性を使用します。 具体的には、既定の実装をチェック<xref:System.Windows.Markup.AmbientAttribute>し、返します`true`LookupIsAmbient の場合は<xref:System.Windows.Markup.AmbientAttribute>メンバー定義に存在する</xref:System.Windows.Markup.AmbientAttribute></xref:System.Windows.Markup.AmbientAttribute>。       使用していない場合は、このメソッドをオーバーライド<xref:System.Windows.Markup.AmbientAttribute>これを目的し、独自の方法では、XAML のアンビエント プロパティを示すためには、その手法を置き換える</xref:System.Windows.Markup.AmbientAttribute>。       WPF<xref:System.Windows.Markup.AmbientAttribute>は<xref:System.Windows.Trigger.Property%2A?displayProperty=fullName>および<xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>。</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName></xref:System.Windows.Trigger.Property%2A?displayProperty=fullName></xref:System.Windows.Markup.AmbientAttribute>とその属性の例の Api"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>これをレポートする<xref href=&quot;System.Xaml.XamlMember&quot;></xref>がアンビエント プロパティとしてそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得するかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>イベントを表します。"
  remarks: "既定の実装のチェックするかどうか<xref:System.Xaml.XamlMember.UnderlyingMember%2A>の種類は<xref:System.Reflection.EventInfo>場合を返しますと`true`</xref:System.Reflection.EventInfo></xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       呼び出し元<xref:System.Xaml.XamlMember.IsEvent%2A>。</xref:System.Xaml.XamlMember.IsEvent%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、XAML を解釈できる使用可能なメタデータが特殊なかどうかは、ケースごとにシステム表現を入力します</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>レポートにこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>イベントを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返すかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>目的の読み取り専用プロパティを表します。"
  remarks: "既定の実装を返します`true`場合<xref:System.Xaml.XamlMember.UnderlyingMember%2A>が存在するが、パブリック`set`アクセサーでは、内部リフレクションによって決定されるには、存在しません</xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       このメソッドが、呼び出し元が<xref:System.Xaml.XamlMember.IsReadOnly%2A>。</xref:System.Xaml.XamlMember.IsReadOnly%2A>から値を取得するときに呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、XAML を解釈できる使用可能なメタデータが特殊なかどうかは、ケースごとにシステム表現を入力します</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>これをレポートする<xref href=&quot;System.Xaml.XamlMember&quot;></xref>として、意図された読み取り専用プロパティです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返すかどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>を持つパブリック プロパティを表す<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー。"
  remarks: "既定の実装は、内部リフレクションまたは否定のいずれかで結果を返します<xref:System.Xaml.XamlMember.IsWriteOnly%2A>、その順序で処理します</xref:System.Xaml.XamlMember.IsWriteOnly%2A>。       LookupIsReadPublic は、そのメンバーがパブリックかどうかを返します返します`true`のパブリック メンバーの型を宣言する重要な非公開にします。 使用<xref:System.Xaml.XamlMember.IsReadPublic%2A>代わりに、またするかどうか、宣言する型の可視性を検討してください</xref:System.Xaml.XamlMember.IsReadPublic%2A>。       呼び出し元<xref:System.Xaml.XamlMember.IsReadPublic%2A>。</xref:System.Xaml.XamlMember.IsReadPublic%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。      > [!IMPORTANT] >、LookupIsReadPublic メソッドは仮想であり、そのため、オーバーライドされることができます。 オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセスは XAML メンバーの基になる CLR 宣言の型システムのアクセス情報と予想される方法で整合不要になったように可能性があります。 アクセス レベルのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>を持つパブリック プロパティを表す<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します。 かどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>型およびメンバーの解決に使用されるバッキング システムによって名前解決ではないメンバーを表します。"
  remarks: "このメソッドは、呼び出し元が<xref:System.Xaml.XamlMember.IsUnknown%2A>。</xref:System.Xaml.XamlMember.IsUnknown%2A>から値を取得するときに呼び出される場合があります。 既定の実装には、内部、リフレクションに基づいてまたはチェックの結果が返されます、`null`値の<xref:System.Xaml.XamlMember.UnderlyingMember%2A>、その順序で処理します</xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>以外で解決可能なメンバーを表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します。 かどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>を持つパブリック メンバーを表す<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサーがパブリックではない<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー。"
  remarks: "既定の実装を返します`true`場合、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>が存在するを持つパブリック`set`アクセサーと、nonpublic`get`アクセサー、内部リフレクションによって決定される</xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       呼び出し元<xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>書き込み専用のメンバーを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します。 かどうかこの<xref href=&quot;System.Xaml.XamlMember&quot;></xref>を持つパブリック メンバーを表す<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサー。"
  remarks: "既定の実装では、内部リフレクションまたは符号反転した値のいずれかに基づく結果を返します<xref:System.Xaml.XamlMember.IsReadOnly%2A>、その順序で処理します</xref:System.Xaml.XamlMember.IsReadOnly%2A>。       このメソッドが、呼び出し元が<xref:System.Xaml.XamlMember.IsWritePublic%2A>。</xref:System.Xaml.XamlMember.IsWritePublic%2A>から値を取得するときに呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。      > [!IMPORTANT] >、LookupIsWritePublic メソッドは仮想であり、そのため、オーバーライドされることができます。 オーバーライドでは、情報を変更する (故意またはそれ以外の場合)、報告されたアクセスは XAML メンバーの基になる CLR 宣言の型システムのアクセス情報と予想される方法で整合不要になったように可能性があります。 アクセス レベルのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlMember&quot;></xref>書き込み可能なメンバーを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>型の場所、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>存在できます。"
  remarks: "既定の実装は、アタッチ可能な不可能なメンバーと区別します。 非アタッチ可能なメンバーは、LookupTargetType 常に返します<xref:System.Xaml.XamlMember.DeclaringType%2A>。</xref:System.Xaml.XamlMember.DeclaringType%2A> LookupTargetType アタッチ可能なメンバーは、検査に基づく結果を返します、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>アクセサー パラメーターの型、型は XAML スキーマ コンテキストに基づいて解釈</xref:System.Xaml.XamlMember.UnderlyingMember%2A>。       呼び出し元<xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "型を<xref href=&quot;System.Xaml.XamlMember&quot;></xref>存在できます。 「解説」を参照してください。"
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>メンバーによって使用される型。 「解説」を参照してください。"
  remarks: "呼び出し元<xref:System.Xaml.XamlMember.Type%2A>。</xref:System.Xaml.XamlMember.Type%2A>から値を取得するときに、このメソッドが呼び出されます このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlMember.Type%2A>リフレクションの内部に既定で有効になっている値からとは異なる値を返すカスタムも提供する場合と<xref:System.Xaml.Schema.XamlMemberInvoker>情報</xref:System.Xaml.Schema.XamlMemberInvoker></xref:System.Xaml.XamlMember.Type%2A>。       既定の実装は、異なるコード パスと概念の意味、返された<xref:System.Xaml.XamlType>かどうかに基づくこの<xref:System.Xaml.XamlMember>プロパティ、メソッド、またはイベントを表します</xref:System.Xaml.XamlMember></xref:System.Xaml.XamlType>。      -プロパティ場合、返された<xref:System.Xaml.XamlType>されるプロパティを設定またはプロパティによって返される型です</xref:System.Xaml.XamlType>。      -返されるイベントの<xref:System.Xaml.XamlType>が必要なイベント ハンドラーの型 (CLR 実装内のデリゲート).</xref:System.Xaml.XamlType>      -、メソッドに対して<xref:System.Xaml.XamlType>は戻り値の型</xref:System.Xaml.XamlType>。       いずれの場合、XAML スキーマ コンテキストは XAML の型基になるシステム型からの評価に使用されます。       呼び出し元<xref:System.Xaml.XamlMember.Type%2A>。</xref:System.Xaml.XamlMember.Type%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>メンバーによって使用される型。 「解説」を参照してください。"
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これに関連付けられている型コンバーターの実装を返します<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "既定の実装を使用して、次のロジックと処理順序: - 属性メンバーのレベルで存在する場合 (<xref:System.ComponentModel.TypeConverterAttribute>) への呼び出しの属性情報が使用される<xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>、XAML スキーマ コンテキストに対してです</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A></xref:System.ComponentModel.TypeConverterAttribute>。      If<xref:System.Xaml.XamlMember.Type%2A>有効ですが、型に関連付けられている型コンバーターが返されます</xref:System.Xaml.XamlMember.Type%2A>。      メンバーが、イベントの場合、イベント固有の型コンバーターが返されます。       このメソッドが、呼び出し元が<xref:System.Xaml.XamlMember.TypeConverter%2A>。</xref:System.Xaml.XamlMember.TypeConverter%2A>から値を取得するときに呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;インスタンス<xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>制約または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>これに関連付けられているアクセサー <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "既定の実装では、解釈、<xref:System.Xaml.XamlMember.UnderlyingMember%2A>プロパティとして<xref:System.Reflection.PropertyInfo>の値を返します<xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(パラメーターを設定した`true`)、つまり、返されるメソッドが非パブリックできること</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName></xref:System.Reflection.PropertyInfo></xref:System.Xaml.XamlMember.UnderlyingMember%2A>。 この動作が`null`特定のケースします。 関連付けられているアクセサーが存在しない場合や、メンバーがプロパティではない場合も含まれます。       このメソッドが、呼び出し元が<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>関連付けられている<xref:System.Xaml.Schema.XamlMemberInvoker>。</xref:System.Xaml.Schema.XamlMemberInvoker>プロパティ</xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>から値を取得するときに呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。 LookupUnderlyingGetter を実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>相関関係を持つ結果を返すようにします</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A></xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>。"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>関連付けられている<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー; または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Reflection.MethodInfo> 。"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "CLR 型システムを返します<xref:System.Reflection.MemberInfo>これに関連付けられている<xref href=&quot;System.Xaml.XamlMember&quot;> </xref></xref:System.Reflection.MemberInfo> 。"
  remarks: "既定の実装では、構造に基づいての基になるメンバー情報を返します。 場合、<xref:System.Reflection.MemberInfo>基になるメンバーを設定するための十分な情報を提供しないシグネチャを持つオブジェクトを構築すると、このメソッドが戻る`null`</xref:System.Reflection.MemberInfo>。       基になるメンバーは、構築時に設定されている場合は、このメソッドを呼び出す必要ありません。       このメソッドが、呼び出し元が<xref:System.Xaml.XamlMember.UnderlyingMember%2A>。</xref:System.Xaml.XamlMember.UnderlyingMember%2A>から値を取得するときに呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。 実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および LookupUnderlyingMember すべてを返す関連結果</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A></xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>。"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "CLR 型システム<xref:System.Reflection.MemberInfo>これに関連付けられているオブジェクト<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Reflection.MemberInfo> 。"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>これに関連付けられているアクセサー <xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "既定の実装では、解釈<xref:System.Xaml.XamlMember.UnderlyingMember%2A>として<xref:System.Reflection.PropertyInfo>の値を返します<xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(パラメーターを設定した`true`)、つまり、返されるメソッドが非パブリックできること</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName></xref:System.Reflection.PropertyInfo></xref:System.Xaml.XamlMember.UnderlyingMember%2A>。 これにより、`null`特定の多くの場合、このようなアクセサーがないまたはメンバーがプロパティではありません。       このメソッドは、呼び出し元に関連付けられている<xref:System.Xaml.Schema.XamlMemberInvoker><xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>から値を取得するときに呼び出されます。全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember></xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A></xref:System.Xaml.Schema.XamlMemberInvoker>。 実装することを確認<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、LookupUnderlyingSetter、および<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>相関関係を持つ結果を返すようにします</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A></xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>。"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>関連付けられている<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサー; または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Reflection.MethodInfo> 。"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これに関連付けられている値シリアライザーの実装を返します<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "既定の実装は、次のロジックと処理順序を使用: - 属性メンバーのレベルで存在する場合 (<xref:System.Windows.Markup.ValueSerializerAttribute>) への呼び出しの属性情報を使用<xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>、XAML スキーマ コンテキストに対して</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A></xref:System.Windows.Markup.ValueSerializerAttribute>。      If<xref:System.Xaml.XamlMember.Type%2A>有効ですが、型に関連付けられている値コンバーターが返されます</xref:System.Xaml.XamlMember.Type%2A>。      場合、上記の条件は適用されません`null`が返されます。       呼び出し元<xref:System.Xaml.XamlMember.ValueSerializer%2A>。</xref:System.Xaml.XamlMember.ValueSerializer%2A>から値を取得するときに、このメソッドが呼び出されます 全体の一貫した結果をレポートする場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlMember>派生クラスでは、ケースごとにこの確認に使用可能なメタデータを特殊化した場合またはします</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;インスタンス<xref:System.Windows.Markup.ValueSerializer>制約、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Windows.Markup.ValueSerializer> 。"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref>これを宣言する文字列名前<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "この値は、構築時に常に設定されます。 コンス トラクターによって実装される<xref:System.Xaml.XamlMember>通常から例外をスロー場合は、初期名が指定されていませんそのため、予期しないプロパティをする`null`または .NET Framework XAML サービスの既定の実装を使用している場合、空の文字列。</xref:System.Xaml.XamlMember> 。       [XamlName の文法](~/add/includes/ajax-current-ext-md.md)CLR 型とメンバーの名前付け規則は、正確な intersect ではありません。 CLR の下にある有効なメンバー名を宣言することは XAML の名前付け無効をお勧めします。 このような状況をできる限り避ける必要があります。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref>これを宣言する文字列名前<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "指定した&2; つあるかどうかを判断<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクトが同じ値を設定します。"
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> xamlMember1 </code>はの値と同じ<code> xamlMember2 </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "指定した&2; つあるかどうかを判断<xref href=&quot;System.Xaml.XamlMember&quot;></xref>オブジェクトが異なる値を設定します。"
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> xamlMember1 </code>の値と異なる<code> xamlMember2 </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "1 つの XAML 名前空間をこのプライマリの XAML 名前空間を識別する URI を取得<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "PreferredXamlNamespace プロパティは、呼び出すことと同じ値を提供<xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>、返された一覧から最初の値の文字列を取得しています</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>。 テキストに戻るか、XAML 名前空間情報を保持している他の表現にメンバーを記述する場合は、任意の XAML 名前空間を使用してください。"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "このプライマリの XAML 名前空間の識別子<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>、文字列として。"
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>値で、ビジュアル デザイナーでのメンバーの処理方法を示します。"
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "値、 <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>列挙します。 既定値は<xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;></xref>です。"
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>型の場所、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>存在できます。"
  remarks: "返される値は、アタッチ可能なおよび非アタッチ可能メンバーに対して異なるです。 非アタッチ可能なメンバーの場合は、TargetType は<xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A>を返します。 アタッチ可能なメンバーの場合<xref:System.Xaml.XamlMember.LookupTargetType%2A>このロジックに基づく結果を返します: - リフレクションは、バッキングを解決できない場合 (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`)、このメソッドは、内部定数を汎用オブジェクトの種類を表すを返します</xref:System.Xaml.XamlMember.IsUnknown%2A></xref:System.Xaml.XamlMember.LookupTargetType%2A>。      場合、前の条件が適用されない<xref:System.Xaml.XamlMember.LookupTargetType%2A>と呼びます</xref:System.Xaml.XamlMember.LookupTargetType%2A>。 既定の実装を返します、<xref:System.Xaml.XamlType>を実装するメソッドを調べることに基づく、`get`と`set`アクセサー</xref:System.Xaml.XamlType> 。 クラスの方が優先<xref:System.Xaml.XamlMember.LookupTargetType%2A>など、その他のメタデータを形成する異なる動作を使用する場合があります対象の種類のレポート アタッチ可能なメンバーです</xref:System.Xaml.XamlMember.LookupTargetType%2A>。"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "型を<xref href=&quot;System.Xaml.XamlMember&quot;></xref>存在できます。 「解説」を参照してください。"
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "この文字列表現を返します<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  remarks: "この実装を返します<xref:System.Xaml.XamlMember.Name%2A>。</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "この文字列表現<xref href=&quot;System.Xaml.XamlMember&quot;></xref>です。"
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>メンバーによって使用される型。"
  remarks: "型を呼び出すと<xref:System.Xaml.XamlMember.LookupType%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupType%2A>。 これは、初期の内部リフレクション ロジックで、情報は既に設定されていない場合に発生します。       既定の動作 (ありません<xref:System.Xaml.XamlMember.LookupType%2A>オーバーライド)、返された<xref:System.Xaml.XamlType>異なる概念意味を持つことができます</xref:System.Xaml.XamlType></xref:System.Xaml.XamlMember.LookupType%2A>。 かどうかに依存する意味が適用されますこの<xref:System.Xaml.XamlMember> ボックスの一覧を次に示すようプロパティ、メソッド、またはイベントを表す: - プロパティの場合、返された<xref:System.Xaml.XamlType>されるプロパティを設定またはプロパティによって返される型です</xref:System.Xaml.XamlType></xref:System.Xaml.XamlMember>。      -返されるイベントの<xref:System.Xaml.XamlType>が必要なイベント ハンドラーの型 (CLR 実装内のデリゲート).</xref:System.Xaml.XamlType>      -、メソッドの<xref:System.Xaml.XamlType>可能性のあるメソッドは、戻り値の型は、 `null`</xref:System.Xaml.XamlType> 。       各ケースで、XAML スキーマ コンテキストは、バッキング型の XAML 型の評価に使用されます。"
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>メンバーによって使用される型。 「解説」を参照してください。"
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;オブジェクトで、XAML オブジェクトを宣言の型変換の構築に使用することができます。"
  remarks: "TypeConverter を呼び出すと<xref:System.Xaml.XamlMember.LookupTypeConverter%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupTypeConverter%2A>。 この動作は、初期の内部リフレクション ロジックで、情報が既に設定されていない場合に発生します。       Null 以外のプロパティの値を返す TypeConverter の実装とは限りません作業<xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Null でない戻り値の TypeConverter とこれらの値が何を表すの一覧を次に示します:-戻り値は、そのメンバーを具体的には、またはコンバーターのターゲットの型に一般的に起因する型コンバーターを報告します。 この動作は、どのようなほとんどの XAML 型システムでは通常、XAML プロセッサが実行する型コンバーターのインスタンスを作成し、そのメソッドを呼び出すために探します。      戻り値は、組み込みの値コンバーターを報告します。 これらのコンバーターは XAML ライターによって実行される特定の内部処理に存在します。 具体的には、これらの組み込みの値コンバーターは、生の属性の文字列値を XAML 言語レベルのプリミティブに変換します。 .NET Framework XAML サービス実装では、これらの組み込み型の変換は、多くの場合、システム アセンブリで定義されている型コンバーターに転送します。 変換など、<xref:System.Int32>値が組み込みの変換、転送されると、そのため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>値の参照<xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      戻り値は、制約のないオブジェクト モデルの特殊なケースを報告します。<xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlMember.Type%2A> <xref:System.Object>.</xref:System.Object>の値</xref:System.Xaml.XamlMember.Type%2A>を持つ</xref:System.Xaml.XamlMember>は、 ここで、<xref:System.Xaml.Schema.XamlValueConverter%601>報告された、<xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>は {`Object}`</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> 。 ただし、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>は`null`実際の型またはインスタンスにもこの変換を実行するためです</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>。 代わりに、オブジェクト モデルの動作は、特定のテクノロジの実行時にグラフがオブジェクトの処理と判断したとき、実行時まで特定できません。       作業中にアクセスできる場合<xref:System.ComponentModel.TypeConverter>から<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>、その変換メソッドを呼び出すことができます</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A></xref:System.ComponentModel.TypeConverter>。 ただし、多くの変換メソッドは、サービス コンテキストに依存します。 場合は、同じサービス コンテキストを利用する型コンバーターが期待するオブジェクト グラフのオブジェクトを作成する一般的な役割がない、コンバーターのメソッドは例外をスローできます。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;値で、 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>ジェネリックに制約します。 「解説」を参照してください。"
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "CLR 型システムを取得<xref:System.Reflection.MemberInfo>を構築するメンバーに対して使用できる<xref:System.Reflection.PropertyInfo>、 <xref:System.Reflection.MethodInfo>、または<xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "呼び出す UnderlyingMember<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>。"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "CLR 型システム<xref:System.Reflection.MemberInfo>については、最初のコンス トラクターのパラメーターからのキャストとして</xref:System.Reflection.MemberInfo>。 A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>を構築する、 &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;署名を返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; XAML オブジェクトを宣言の値のシリアル化に使用されるオブジェクト。"
  remarks: "ValueSerializer 呼び出すと、<xref:System.Xaml.XamlMember.LookupValueSerializer%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlMember.LookupValueSerializer%2A>。 この動作は、初期の内部リフレクション ロジックで、情報が既に設定されていない場合に発生します。       ValueSerializer の null 以外のプロパティの値を返すすべての場合、必ずしもでは、作業中<xref:System.Windows.Markup.ValueSerializer>。</xref:System.Windows.Markup.ValueSerializer> 「解説」を参照してください<xref:System.Xaml.XamlMember.TypeConverter%2A>; ValueSerializer に同じ考慮事項が適用されます</xref:System.Xaml.XamlMember.TypeConverter%2A>。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref:System.Windows.Markup.ValueSerializer>、汎用の制約</xref:System.Windows.Markup.ValueSerializer>。"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
