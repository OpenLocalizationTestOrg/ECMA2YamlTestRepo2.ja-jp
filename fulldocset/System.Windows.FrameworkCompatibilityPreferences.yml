### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkCompatibilityPreferences
  id: FrameworkCompatibilityPreferences
  children:
  - System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  - System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  - System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  langs:
  - csharp
  name: FrameworkCompatibilityPreferences
  nameWithType: FrameworkCompatibilityPreferences
  fullName: System.Windows.FrameworkCompatibilityPreferences
  type: Class
  summary: "PresentationFramework アセンブリ内にある WPF 機能に関連して、アプリケーションの動作方法を指定するプロパティが含まれています。"
  syntax:
    content: public static class FrameworkCompatibilityPreferences
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  id: AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得またはアプリケーションで使用するかどうかを示す値を設定、 <> </> *> と<> *> 非アクティブな選択した項目の色のプロパティです。"
  remarks: "このプロパティの既定値には、WPF のバージョンが依存していること、アプリケーションが対象です。  アプリケーションが対象 WPF 4.0 または既定値は、以前に場合`false`です。  アプリでは、WPF 4.5 をターゲットとする場合、既定は`true`します。  WPF の動作を変更するこのプロパティを使用する場合は、アプリケーションから継承するクラスのコンス トラクターでこのようなアプリの有効期間の初期段階で、プロパティの値を変更する必要があります。  値が読み取られた後にもう一度変更することはできません。"
  syntax:
    content: public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アプリケーションが使用する場合、 <> </> *> と<> *> 非アクティブな選択した項目の色のプロパティをそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  id: KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定を示す値、データにバインドされたかどうか<xref href=&quot;System.Windows.Controls.TextBox&quot;></xref>ソースの値と同一である文字列にその<xref:System.Windows.Controls.TextBox.Text*>プロパティ</xref:System.Windows.Controls.TextBox.Text*>を表示する必要があります"
  remarks: "このプロパティの既定値には、WPF のバージョンが依存していること、アプリケーションが対象です。  アプリケーションが対象 WPF 4.0 または既定値は、以前に場合`false`です。  アプリでは、WPF 4.5 をターゲットとする場合、既定は`true`します。  WPF の動作を変更するこのプロパティを使用する場合は、アプリケーションから継承するクラスのコンス トラクターでこのようなアプリの有効期間の初期段階で、プロパティの値を変更する必要があります。  値が読み取られた後にもう一度変更することはできません。"
  syntax:
    content: public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、データにバインドされた<xref href=&quot;System.Windows.Controls.TextBox&quot;></xref>ソースの値と同一である文字列を表示する必要があります、<xref:System.Windows.Controls.TextBox.Text*>プロパティ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Controls.TextBox.Text*> 。"
  overload: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  id: ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  langs:
  - csharp
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "設定を示す値を取得または失敗したコピーまたは切り取り操作であるかどうか、 <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;> </xref>で結果をインスタンス化、 <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;></xref>です。"
  remarks: "クリップボードの操作が失敗した場合などの**HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** 、対応するエラー <xref:System.Runtime.InteropServices.ExternalException>(ExternalException の型です) がスローされます</xref:System.Runtime.InteropServices.ExternalException>。       Win32 `OpenClipboard` API は機能し、グローバルに適切に記述されたアプリケーション呼び出す必要があります、対応する`CloseClipboard`API、クリップボード操作が完了するとすぐにします。 それ以外の場合、他のアプリケーションが、同じセッションで実行することはできませんクリップボード機能へのアクセスします。       WPF では、このようなクリップボードへのアクセスの拒否はサイレント モードで無視通常されます。 ただし、アプリケーションこともできますが、 `ExternalException` ShouldThrowOnCopyOrCutFailure フラグ設定して障害発生時に`true`です。 ただし、例外を受信することも必要です、アプリケーションで処理する<xref:System.Windows.Input.ApplicationCommands.Cut%2A>と<xref:System.Windows.Input.ApplicationCommands.Copy%2A>を通じて RoutedUICommands、 <xref:System.Windows.Input.CommandBinding>、TextBoxBase、すべてのコントロールに適用し、バインディングを (<xref:System.Windows.Controls.TextBox>と<xref:System.Windows.Controls.RichTextBox>) アプリケーションにします</xref:System.Windows.Controls.RichTextBox></xref:System.Windows.Controls.TextBox></xref:System.Windows.Input.CommandBinding></xref:System.Windows.Input.ApplicationCommands.Copy%2A></xref:System.Windows.Input.ApplicationCommands.Cut%2A>。 アプリケーションは、ExternalExceptions CommandBinding の Executed ハンドラーで、コピーと切り取り操作の結果を処理することを確認する必要があります。"
  syntax:
    content: public static bool ShouldThrowOnCopyOrCutFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>失敗したコピーまたは切り取り操作の場合、 <xref href=&quot;System.Windows.Controls.Primitives.TextBoxBase&quot;> </xref>で結果をインスタンス化、 <xref href=&quot;System.Runtime.InteropServices.ExternalException&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
  fullName: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
  fullName: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
  fullName: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
- uid: System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: AreInactiveSelectionHighlightBrushKeysSupported
  nameWithType: FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported
- uid: System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: KeepTextBoxDisplaySynchronizedWithTextProperty
  nameWithType: FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty
- uid: System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure*
  parent: System.Windows.FrameworkCompatibilityPreferences
  isExternal: false
  name: ShouldThrowOnCopyOrCutFailure
  nameWithType: FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure
