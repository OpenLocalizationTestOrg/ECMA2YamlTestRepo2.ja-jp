### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  id: SecurityTokenRequirement
  children:
  - System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  - System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  - System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  - System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  langs:
  - csharp
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
  type: Class
  summary: "セキュリティ トークン要件を指定します。"
  remarks: "アプリケーション コード通常必要はありません SecurityTokenRequirement クラスを使用する場合を除き、カスタム セキュリティ トークン、セキュリティ トークン マネージャー、セキュリティ トークン プロバイダー、またはセキュリティ トークン認証システムが作成されます。 キーなどのセキュリティ トークンに必要な内容を指定する、セキュリティ トークン マネージャー SecurityTokenRequirement クラスが使用されるサイズ、キーの種類、およびキーの使用方法です。 指定した条件に一致するセキュリティ トークンが判明することができます、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>と<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>送信 SOAP メッセージのセキュリティ トークンを提供し、それぞれ、受信 SOAP メッセージのセキュリティ トークンの認証に取得できます</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 たとえば、送信 SOAP メッセージの既定のセキュリティ トークン マネージャーは、<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>セキュリティ トークン要件に指定された条件に一致するセキュリティ トークン プロバイダーを入手する SecurityTokenRequirement パラメーターを受け取るメソッドを呼び出すことができます</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>。"
  example:
  - "<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenProvider>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>"
  syntax:
    content: public class SecurityTokenRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>クラスです。"
  syntax:
    content: public SecurityTokenRequirement ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public TValue GetProperty<TValue> (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "追加します。"
    return:
      type: TValue
      description: "追加します。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  id: IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "省略可能である場合は、トークンのプロパティの値を取得します。"
  syntax:
    content: public static string IsOptionalTokenProperty { get; }
    return:
      type: System.String
      description: "トークンのプロパティの値です。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  id: KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得またはセキュリティ トークンに関連付けられた、キーに必要なサイズを設定します。"
  remarks: "KeySize プロパティの値を取得することによってアクセスすることもできます、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティで、プロパティの値のコレクションです</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。 値に一致するインデックスにある KeySize プロパティの値が格納されている、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>。"
  syntax:
    content: public int KeySize { get; set; }
    return:
      type: System.Int32
      description: "ビット単位のセキュリティ トークンに関連付けられた、キーのサイズ。 既定値は 0 です。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "KeySize プロパティは、0 より小さい値に設定されます。"
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  id: KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を指定する値を取得、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  remarks: "必要なキー サイズを設定するには、使用、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>。"
  syntax:
    content: public static string KeySizeProperty { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  id: KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得またはセキュリティ トークンに関連付けられたキー (非対称または対称) の種類を設定します。"
  remarks: "KeyType プロパティの値を取得することによってアクセスすることもできます、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティで、プロパティの値のコレクションです</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。 KeyType プロパティの値がの値に一致するインデックスに格納されている、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyType KeyType { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;> </xref>セキュリティ トークンに関連付けられたキー (非対称または対称) の型を指定します。 既定値は<xref uid=&quot;langword_csharp_SymmetricKey&quot; name=&quot;SymmetricKey&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  id: KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を指定する値を取得、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  remarks: "必須のキーの種類を設定するには、使用、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>。"
  syntax:
    content: public static string KeyTypeProperty { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  id: KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得またはセキュリティ トークンに関連付けられたキーの使用方法を指定する値を設定します。"
  remarks: "KeyUsage プロパティの値を取得することによってアクセスすることもできます、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティで、プロパティの値のコレクションです</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。 値に一致するインデックスに KeyUsage プロパティの値が格納されている、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyUsage KeyUsage { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyUsage
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;> </xref>セキュリティ トークンに関連付けられたキーの使用方法を指定します。 既定値は<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  id: KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を指定する値を取得、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  remarks: "キー使用法の要件を設定するを使用して、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>。"
  syntax:
    content: public static string KeyUsageProperty { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  id: PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を取得、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>ピア認証方法を示すプロパティのコレクション</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>。"
  remarks: "ピア認証モードを設定する機能を追加するには、派生クラスを<xref:System.IdentityModel.Selectors.SecurityTokenRequirement>プロパティまたはコンス トラクターを公開します</xref:System.IdentityModel.Selectors.SecurityTokenRequirement>。 コンス トラクターまたはプロパティ内で追加、ピア認証モードを<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>PeerAuthenticationMode プロパティの値をコレクションにインデックスとして使用するコレクション</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。"
  syntax:
    content: public static string PeerAuthenticationMode { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>ピア認証方法を示すプロパティのコレクション</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  id: Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "現在の非静的プロパティのコレクションを取得<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;></xref>インスタンス。"
  remarks: "値を使用して、 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>、 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>、 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>を特定のプロパティ値を取得するコレクションのインデックスのプロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A></xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A></xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A></xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>。"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt; 、非静的プロパティの現在のコレクションを含む<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;></xref>インスタンス。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  id: RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得または暗号化などの暗号化操作を実行できるセキュリティ トークンにする必要があるかどうかを示す値を設定します。"
  remarks: "セキュリティ トークンは、ように、 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>、暗号化操作を実行するのに十分なセキュリティで保護され、認証のみに使用する必要があります</xref:System.IdentityModel.Tokens.UserNameSecurityToken>。       RequireCryptographicToken プロパティの値を取得することによってアクセスすることもできます、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティで、プロパティの値のコレクションです</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。 値に一致するインデックスに RequireCryptographicToken プロパティの値が格納されている、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>。"
  syntax:
    content: public bool RequireCryptographicToken { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ トークンが暗号操作を実行できる必要がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  id: RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を取得、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  syntax:
    content: public static string RequireCryptographicTokenProperty { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  id: TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得または必要なセキュリティ トークンの種類を設定します。"
  remarks: "静的プロパティのいずれかを使用して、<xref:System.IdentityModel.Tokens.SecurityTokenTypes>このプロパティを設定するクラス</xref:System.IdentityModel.Tokens.SecurityTokenTypes>。       TokenType プロパティの値を取得することによってアクセスすることもできます、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティで、プロパティの値のコレクションです</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。 値に一致するインデックスにある TokenType プロパティの値が格納されている、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>。"
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "必要なセキュリティ トークンの種類。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  id: TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "内のインデックスの名前を指定する値を取得、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  remarks: "必要なセキュリティ トークンの種類を設定するには、使用、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>プロパティ</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>。"
  syntax:
    content: public static string TokenTypeProperty { get; }
    return:
      type: System.String
      description: "内のインデックスの名前、 <> </> *> のコレクション、 <> </> *> プロパティです。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  id: TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public bool TryGetProperty<TValue> (string propertyName, out TValue result);
    parameters:
    - id: propertyName
      type: System.String
      description: "追加します。"
    - id: result
      type: TValue
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Tokens.SecurityKeyUsage
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyUsage
  nameWithType: SecurityKeyUsage
  fullName: System.IdentityModel.Tokens.SecurityKeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty<TValue>
  nameWithType: SecurityTokenRequirement.GetProperty<TValue>
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty<TValue>
  nameWithType: SecurityTokenRequirement.TryGetProperty<TValue>
