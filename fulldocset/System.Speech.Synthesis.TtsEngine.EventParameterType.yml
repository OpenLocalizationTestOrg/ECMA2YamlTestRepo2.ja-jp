### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType
  id: EventParameterType
  children:
  - System.Speech.Synthesis.TtsEngine.EventParameterType.Object
  - System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer
  - System.Speech.Synthesis.TtsEngine.EventParameterType.String
  - System.Speech.Synthesis.TtsEngine.EventParameterType.Token
  - System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined
  langs:
  - csharp
  name: EventParameterType
  nameWithType: EventParameterType
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType
  type: Enum
  summary: "音声合成イベントに渡されるデータのポインターの種類を列挙します。"
  remarks: "EventParameterType が構築するときに使用される、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>オブジェクト</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>。 として EventParameterType のインスタンスが渡される、`parameterType`のコンス トラクターに渡す引数<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>を指定方法、`param2`コンス トラクターの引数 (する必要があります、 `System.IntPtr`) は解釈されます</xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>。       EventParameterType の選択は、要求されているイベントの種類によって決まります<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</xref:System.Speech.Synthesis.TtsEngine.TtsEventId>のメンバーの指定に従って       方法の詳細については EventParameterType を使用して、ドキュメントをご覧ください。<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"
  example:
  - "The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  \n  \n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \n  \n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \n  \n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>, the implementation  \n  \n    -   Translates Americanism to Britishisms in the text to be spoken.  \n  \n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \n  \n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including the EventParameterType member value returned by <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>, are used to log the event generated through the `LogSpeechEvent` method.  \n  \n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \n  \n```  \nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \nprivate readonly char[] spaces = new char[] { ' ', '\\t', '\\r', '\\n' };  \ninternal struct UsVsUk  \n{  \n  internal string UK;  \n  internal string US;  \n}  \n  \noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \n{  \n  TextFragment [] newFrags=new TextFragment[frags.Length];  \n  \n  for (int i=0;i<frags.Length;i++){  \n    newFrags[i].State=frags[i].State;  \n    //truncate  \n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \n                               frags[i].TextLength);  \n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \n    newFrags[i].TextOffset = 0;  \n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \n      //Us to UK conversion  \n      foreach (UsVsUk term in TransList) {  \n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \n      }  \n      //Generate progress meter events if supported  \n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \n  \n      foreach (string s in subs) {  \n        int offset = newFrags[i].TextOffset;  \n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \n                (Int16)EventParameterType.Undefined,   \n                 s.Length, new IntPtr(offset));  \n         LogSpeechEvent(spEvent.EventId,   \n                        spEvent.ParameterType,   \n                        spEvent.Param1,  \n                        spEvent.Param2);  \n        offset += s.Length;  \n        if (s.Trim().Length > 0) {  \n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \n          events[0] = spEvent;  \n          site.AddEvents(events, 1);  \n        }  \n      }  \n      }  \n    }  \n  }  \n  \n  _baseSynthesize.Speak(newFrags, wfx, site);  \n  \n}  \n```"
  syntax:
    content: public enum EventParameterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Object
  id: Object
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  langs:
  - csharp
  name: Object
  nameWithType: EventParameterType.Object
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Object
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "現在はサポートされていません。"
  syntax:
    content: Object
    return:
      type: System.Speech.Synthesis.TtsEngine.EventParameterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer
  id: Pointer
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  langs:
  - csharp
  name: Pointer
  nameWithType: EventParameterType.Pointer
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "現在はサポートされていません。"
  syntax:
    content: Pointer
    return:
      type: System.Speech.Synthesis.TtsEngine.EventParameterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.String
  id: String
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  langs:
  - csharp
  name: String
  nameWithType: EventParameterType.String
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.String
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "示します、 <code> param2 </code>への引数、 <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref>は、 <xref uid=&quot;langword_csharp_System.IntPtr&quot; name=&quot;System.IntPtr&quot; href=&quot;&quot;> </xref>を使用して作成<xref uid=&quot;langword_csharp_System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni&quot; name=&quot;System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni&quot; href=&quot;&quot;></xref>を参照する、 <xref uid=&quot;langword_csharp_System.String&quot; name=&quot;System.String&quot; href=&quot;&quot;> </xref>オブジェクトです。<code> param1 </code>任意の値にかかる場合があります。"
  syntax:
    content: String
    return:
      type: System.Speech.Synthesis.TtsEngine.EventParameterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Token
  id: Token
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  langs:
  - csharp
  name: Token
  nameWithType: EventParameterType.Token
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Token
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "示します、 <code> param2 </code>への引数、 <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref>は、"
  remarks: "`System.IntPtr`を使用して作成`System.Runtime.InteropServices.Marshal.PtrToStructure`オブジェクトを参照する、Windows デスクトップ音声テクノロジ トークン--Windows デスクトップ音声テクノロジ (<xref:System.Speech.Synthesis.VoiceInfo>) は、音声などのリソースを表す`param1`で任意の値をとります</xref:System.Speech.Synthesis.VoiceInfo>。      > [!NOTE] > の<xref:System.Speech.Synthesis>領域の名前、作成した後のリソースを変更できない</xref:System.Speech.Synthesis>メンバーを使用して記述されたマネージ合成音声認識エンジンは、の現在のインスタンス"
  syntax:
    content: Token
    return:
      type: System.Speech.Synthesis.TtsEngine.EventParameterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined
  id: Undefined
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  langs:
  - csharp
  name: Undefined
  nameWithType: EventParameterType.Undefined
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "示します、 <code> param2 </code>への引数、 <xref href=&quot;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&quot;> </xref>が定義されていません。"
  remarks: "一般に、`param1`と`param2`は無視されます。 ただし場合、<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>は<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>、進行状況の測定イベントを生成できます`param1`、現在の単語の長さを表す整数を指定する必要がありますと`param2`、`System.IntPtr`現在の単語のオフセットを表す整数を参照している</xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary></xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。"
  syntax:
    content: Undefined
    return:
      type: System.Speech.Synthesis.TtsEngine.EventParameterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Object
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  isExternal: false
  name: Object
  nameWithType: EventParameterType.Object
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Object
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: EventParameterType
  nameWithType: EventParameterType
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  isExternal: false
  name: Pointer
  nameWithType: EventParameterType.Pointer
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.String
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  isExternal: false
  name: String
  nameWithType: EventParameterType.String
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.String
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Token
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  isExternal: false
  name: Token
  nameWithType: EventParameterType.Token
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Token
- uid: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined
  parent: System.Speech.Synthesis.TtsEngine.EventParameterType
  isExternal: false
  name: Undefined
  nameWithType: EventParameterType.Undefined
  fullName: System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined
