### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsView
  id: DetailsView
  children:
  - System.Web.UI.WebControls.DetailsView.#ctor
  - System.Web.UI.WebControls.DetailsView.AllowPaging
  - System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  - System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  - System.Web.UI.WebControls.DetailsView.BackImageUrl
  - System.Web.UI.WebControls.DetailsView.BottomPagerRow
  - System.Web.UI.WebControls.DetailsView.Caption
  - System.Web.UI.WebControls.DetailsView.CaptionAlign
  - System.Web.UI.WebControls.DetailsView.CellPadding
  - System.Web.UI.WebControls.DetailsView.CellSpacing
  - System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  - System.Web.UI.WebControls.DetailsView.CommandRowStyle
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  - System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateControlStyle
  - System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.DetailsView.CreateTable
  - System.Web.UI.WebControls.DetailsView.CurrentMode
  - System.Web.UI.WebControls.DetailsView.DataBind
  - System.Web.UI.WebControls.DetailsView.DataItem
  - System.Web.UI.WebControls.DetailsView.DataItemCount
  - System.Web.UI.WebControls.DetailsView.DataItemIndex
  - System.Web.UI.WebControls.DetailsView.DataKey
  - System.Web.UI.WebControls.DetailsView.DataKeyNames
  - System.Web.UI.WebControls.DetailsView.DefaultMode
  - System.Web.UI.WebControls.DetailsView.DeleteItem
  - System.Web.UI.WebControls.DetailsView.DeleteMethod
  - System.Web.UI.WebControls.DetailsView.EditRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  - System.Web.UI.WebControls.DetailsView.EmptyDataText
  - System.Web.UI.WebControls.DetailsView.EnableModelValidation
  - System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  - System.Web.UI.WebControls.DetailsView.EnsureDataBound
  - System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  - System.Web.UI.WebControls.DetailsView.Fields
  - System.Web.UI.WebControls.DetailsView.FooterRow
  - System.Web.UI.WebControls.DetailsView.FooterStyle
  - System.Web.UI.WebControls.DetailsView.FooterTemplate
  - System.Web.UI.WebControls.DetailsView.FooterText
  - System.Web.UI.WebControls.DetailsView.GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.GridLines
  - System.Web.UI.WebControls.DetailsView.HeaderRow
  - System.Web.UI.WebControls.DetailsView.HeaderStyle
  - System.Web.UI.WebControls.DetailsView.HeaderTemplate
  - System.Web.UI.WebControls.DetailsView.HeaderText
  - System.Web.UI.WebControls.DetailsView.HorizontalAlign
  - System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.InsertMethod
  - System.Web.UI.WebControls.DetailsView.InsertRowStyle
  - System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.DetailsView.ItemCommand
  - System.Web.UI.WebControls.DetailsView.ItemCreated
  - System.Web.UI.WebControls.DetailsView.ItemDeleted
  - System.Web.UI.WebControls.DetailsView.ItemDeleting
  - System.Web.UI.WebControls.DetailsView.ItemInserted
  - System.Web.UI.WebControls.DetailsView.ItemInserting
  - System.Web.UI.WebControls.DetailsView.ItemUpdated
  - System.Web.UI.WebControls.DetailsView.ItemUpdating
  - System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DetailsView.ModeChanged
  - System.Web.UI.WebControls.DetailsView.ModeChanging
  - System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.PageCount
  - System.Web.UI.WebControls.DetailsView.PageIndex
  - System.Web.UI.WebControls.DetailsView.PageIndexChanged
  - System.Web.UI.WebControls.DetailsView.PageIndexChanging
  - System.Web.UI.WebControls.DetailsView.PagerSettings
  - System.Web.UI.WebControls.DetailsView.PagerStyle
  - System.Web.UI.WebControls.DetailsView.PagerTemplate
  - System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  - System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DetailsView.Rows
  - System.Web.UI.WebControls.DetailsView.RowsGenerator
  - System.Web.UI.WebControls.DetailsView.RowStyle
  - System.Web.UI.WebControls.DetailsView.SaveControlState
  - System.Web.UI.WebControls.DetailsView.SaveViewState
  - System.Web.UI.WebControls.DetailsView.SelectedValue
  - System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.DetailsView.TagKey
  - System.Web.UI.WebControls.DetailsView.TopPagerRow
  - System.Web.UI.WebControls.DetailsView.TrackViewState
  - System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.UpdateMethod
  langs:
  - csharp
  name: DetailsView
  nameWithType: DetailsView
  fullName: System.Web.UI.WebControls.DetailsView
  type: Class
  summary: "各データ行が、レコードのフィールドを表すテーブルのデータ ソースからレコードを&1; つの値を表示します。 DetailsView コントロールを使用すると、編集、削除、およびレコードを挿入できます。"
  remarks: "このトピックで:-[概要](#introduction)      -   [行フィールド](#row_fields)      -   [データへのバインド](#binding_to_data)      -   [セキュリティ](#security)      -   [データ操作](#data_operations)      -   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)      -   [イベント](#events)      -   [アクセシビリティ](#Accessibility)      -   [宣言構文](#DeclarativeSyntax)<a name=&quot;introduction&quot;> </a> ## 導入が DetailsView コントロールを使用、テーブルにデータ ソースから&1; つのレコードを表示するテーブルの行で、レコードの各フィールドが表示されます。       組み合わせて使用することができます、<xref:System.Web.UI.WebControls.GridView>マスター/詳細シナリオを制御します</xref:System.Web.UI.WebControls.GridView>。 DetailsView コントロールは、次の機能をサポートしている: - <xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource>などのデータ ソース コントロールに連結します。      組み込みの挿入機能します。      組み込みの更新と機能を削除します。      組み込みのページング機能。      プログラミング的モデルへのアクセス、DetailsView オブジェクトのプロパティを動的に設定は、イベントを処理したりなどです。      -テーマとスタイルを使用したカスタマイズ可能な外観です。      <a name=&quot;row_fields&quot;></a>## 行フィールド DetailsView コントロール内の各データ行がフィールドのコントロールを宣言することによって作成されます。 行フィールドの種類は、コントロール内の行の動作を決定します。 フィールド コントロール<xref:System.Web.UI.WebControls.DataControlField>。</xref:System.Web.UI.WebControls.DataControlField>から派生します。 次の表は、使用できる行のフィールドの種類を一覧表示します。      |列フィールドの種類 |説明 |  |-----------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|テキストとしてデータ ソースのフィールドの値を表示します |。  |<xref:System.Web.UI.WebControls.ButtonField>|DetailsView コントロールでのコマンド ボタンが表示されます</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.BoundField>。 これにより、追加または削除 ボタンなどのカスタム ボタン コントロールで行を表示する |。  |<xref:System.Web.UI.WebControls.CheckBoxField>|DetailsView コントロールでチェック ボックスが表示されます</xref:System.Web.UI.WebControls.CheckBoxField>。 この行のフィールド型では、ブール値を持つフィールドを表示するために使用が一般的です |。  |<xref:System.Web.UI.WebControls.CommandField>|組み込みのコマンドを表示、編集を実行するボタンの挿入、または DetailsView コントロール内で操作を削除します |。  |<xref:System.Web.UI.WebControls.HyperLinkField>|ハイパーリンクとして、データ ソースのフィールドの値を表示します</xref:System.Web.UI.WebControls.HyperLinkField></xref:System.Web.UI.WebControls.CommandField>。 この行のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます |。  |<xref:System.Web.UI.WebControls.ImageField>|DetailsView コントロールにイメージを表示します |。  |<xref:System.Web.UI.WebControls.TemplateField>|指定したテンプレートに応じて DetailsView コントロールで行のユーザー定義の内容を表示します</xref:System.Web.UI.WebControls.TemplateField></xref:System.Web.UI.WebControls.ImageField>。 この行のフィールド型では、カスタムの行のフィールドを作成することができます |。      既定では、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティに設定されている`true`、データ ソースにバインド可能な型の各フィールドにバインドされる行のフィールド オブジェクトを自動的に生成する</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>。 有効なバインド可能な種類は<xref:System.String>、 <xref:System.DateTime>、 <xref:System.Decimal>、 <xref:System.Guid>、およびプリミティブ型のセット</xref:System.Guid></xref:System.Decimal></xref:System.DateTime></xref:System.String>。 行には、各フィールドは、データ ソース内の各フィールドが表示される順序でのテキストとして表示されます。       行を自動的に生成するレコード内のすべてのフィールドの表示を迅速かつ簡単な方法を提供します。 ただし、DetailsView を使用するコントロールの最先端の機能 DetailsView コントロール内に含める行のフィールドを明示的に宣言する必要があります。 行フィールドを宣言し、最初に設定する、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティを`false`</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>。 次に、追加の開閉`<Fields>`開始タグと終了タグの DetailsView コントロールの間のタグ。 最後に、開始タグと終了の間に挿入する行フィールドを一覧表示`<Fields>`タグ。 指定された行のフィールドに追加されます、<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>順序でコレクションが一覧表示します</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>コレクションでは、プログラムで DetailsView コントロール内の行のフィールドを管理することができます</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。      > [!NOTE] > に自動的に生成される行のフィールドは追加されません、<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>コレクションです</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。      > [!NOTE] > 明示的に宣言行のフィールドは自動的に生成される行のフィールドと共に表示されます。 両方を使用する場合に最初に明示的に宣言された行のフィールドがレンダリング後に自動的に生成される行のフィールドがされます。      <a name=&quot;binding_to_data&quot;></a>## データ、DetailsView コントロールへのバインドは、データ ソース コントロールにバインドできます (など、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールまたは<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール) を実装する任意のデータ ソースのコレクションに、または、<xref:System.Collections.IEnumerable?displayProperty=fullName>インターフェイスは、よう<xref:System.Data.DataView?displayProperty=fullName>、 <xref:System.Collections.ArrayList?displayProperty=fullName>、 <xref:System.Collections.Generic.List%601?displayProperty=fullName>、または他のコレクション型</xref:System.Collections.Generic.List%601?displayProperty=fullName></xref:System.Collections.ArrayList?displayProperty=fullName></xref:System.Data.DataView?displayProperty=fullName></xref:System.Collections.IEnumerable?displayProperty=fullName></xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.SqlDataSource>。 DetailsView コントロールを適切なデータ ソースの種類にバインドを使用して次のいずれかの: データ ソース コントロールにバインドを設定する、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>DetailsView コントロールのプロパティ、 <xref:System.Web.UI.Control.ID%2A>、データ ソース コントロールの値</xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>。 DetailsView コントロールは、指定されたデータ ソース コントロールに自動的にバインドします。 これは、データにバインドする推奨される方法です。      -実装するデータ ソースにバインドするには、<xref:System.Collections.IEnumerable?displayProperty=fullName>インターフェイス、プログラムで設定、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>DetailsView のプロパティは、データ ソースを制御し、呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッド</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A></xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A></xref:System.Collections.IEnumerable?displayProperty=fullName>。       データ バインディングの詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)です。      <a name=&quot;security&quot;></a>## セキュリティ悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[スクリプト悪用概要](~/add/includes/ajax-current-ext-md.md)です。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。      <a name=&quot;data_operations&quot;></a>## データ操作 DetailsView コントロールは、更新、削除、挿入、およびコントロール内の項目を複数のページをユーザーに許可する組み込みの機能を提供します。 DetailsView コントロールがデータ ソース コントロールにバインドされている場合、DetailsView コントロールは、データ ソース コントロールの機能を活用し、自動更新、削除、挿入すると、ページング機能および提供できます。      > [!NOTE] >、DetailsView コントロールは、update、delete、insert、およびその他の種類のデータ ソースとページング操作のサポートを提供できます。 ただし、適切なイベント ハンドラーでこれらの操作の実装を提供する必要があります。 詳細については、次を参照してください<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>、 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>、 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 。       DetailsView コントロールが自動的に追加、<xref:System.Web.UI.WebControls.CommandField>行フィールドを設定して、編集、削除、または新規のボタンで、 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A>、 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A>、または<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A>プロパティ`true`、それぞれ</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A></xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A></xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A></xref:System.Web.UI.WebControls.CommandField>。 削除とは異なりボタン (を削除する選択したレコードすぐに)、[編集] または [新規] ボタンがクリックされたときにコントロールが編集になる DetailsView またはモードをそれぞれ挿入します。 編集モードで、[編集] ボタンは、更新プログラムが、[キャンセル] ボタンに置き換えられます。 入力フィールドのデータ型に対応するコントロール (など、<xref:System.Web.UI.WebControls.TextBox>または<xref:System.Web.UI.WebControls.CheckBox>コントロール) を変更するユーザーのフィールドの値で表示されます</xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.TextBox>。 キャンセル ボタンをクリックすると、すべての変更を放棄中に、データ ソースのレコードを更新更新 をクリックします。 同様に、挿入モードでは、新しいボタンが Insert ステートメントや、[キャンセル] ボタンと置き換え、新しいレコードの値を入力するユーザーに対して空の入力コントロールが表示されます。      > [!NOTE] > Update、delete、および挿入コマンド ボタンで手動で定義できます、 <xref:System.Web.UI.WebControls.ButtonField>、 <xref:System.Web.UI.WebControls.CommandField>、または<xref:System.Web.UI.WebControls.TemplateField>行フィールド</xref:System.Web.UI.WebControls.TemplateField></xref:System.Web.UI.WebControls.CommandField></xref:System.Web.UI.WebControls.ButtonField>。 DetailsView コントロールを含むボタンによって認識される、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティが&quot;Edit&quot;、&quot;Update&quot;、「削除」、「新規」、&quot;Insert&quot;、または [キャンセル] に設定ですただし、まだ必要があります機能を提供する自分でします。</xref:System.Web.UI.WebControls.Button.CommandName%2A> 。 詳細については、次を参照してください<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>、 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>、 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 。       DetailsView コントロールでは、ユーザーがデータ ソースの他のレコードに移動するページング機能を提供します。 有効にすると、ページ ナビゲーション コントロールは、ページャー行に表示されます。 ページングを有効にするには設定、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 使用してページャー行をカスタマイズすることができます、<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>と<xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A></xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>。      <a name=&quot;customizing_the_user_interface&quot;></a>## をカスタマイズするユーザー インターフェイスをコントロールのさまざまな部分のスタイル プロパティを設定して DetailsView コントロールの外観をカスタマイズできます。 次の表は、スタイル プロパティを設定することができます。      |スタイル プロパティ |説明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>|DetailsView コントロールに交互のデータ行のスタイルの設定</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>。 このプロパティを設定すると、データ行は、バンド、<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>設定と<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>設定が交互に表示されます |。  |<xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>|組み込みのコマンド ボタンが含まれる行のスタイルの設定です |。  |<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>|DetailsView コントロールがデータ行のスタイルの設定が編集モードです |。  |<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>|DetailsView で表示される、空のデータ行のスタイルの設定は、データ ソースにいくつかのレコードが含まれていない場合を制御します |。  |<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>|フッター行のスタイルの設定です |。  |<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>|ヘッダー行のスタイルの設定です |。  |<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>|挿入モードの DetailsView コントロールがデータ行のスタイルの設定です |。  |<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>|ページャー行のスタイルの設定です |。  |<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>|DetailsView コントロール内のデータ行のスタイルの設定</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A></xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A></xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A></xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>。 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>の設定と<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>間で切り替えると、データ行を表示する<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>プロパティも設定すると、|。  |<xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>|ヘッダーの列のスタイルの設定です |。     <a name=&quot;events&quot;> </a> ## イベント、DetailsView コントロールには、ユーザーがプログラムをいくつかのイベントが用意されています</xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表には、DetailsView コントロールでサポートされているイベントが一覧表示します。 DetailsView コントロールがこれらのイベントをその基本クラスからも継承: <xref:System.Web.UI.Control.DataBinding>、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>、 <xref:System.Web.UI.Control.Disposed>、 <xref:System.Web.UI.Control.Init>、 <xref:System.Web.UI.Control.Load>、 <xref:System.Web.UI.Control.PreRender>、 <xref:System.Web.UI.Control.Render%2A></xref:System.Web.UI.Control.Render%2A> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Control.Load> </xref:System.Web.UI.Control.Init> </xref:System.Web.UI.Control.Disposed> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> </xref:System.Web.UI.Control.DataBinding> 。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>|DetailsView コントロールで、ボタンがクリックされたときに発生します |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>|すべて後で発生<xref:System.Web.UI.WebControls.DetailsViewRow>DetailsView コントロールにオブジェクトを作成します</xref:System.Web.UI.WebControls.DetailsViewRow></xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView.ItemCommand>。 このイベントが表示されるまで、レコードの値を変更するのによく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|DetailsView コントロールがデータ ソースからレコードを削除した後、[削除] ボタンがクリックされたときに発生します</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>。 このイベントは、削除操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|[削除] ボタンをクリックするが DetailsView の前にコントロールがデータ ソースからレコードを削除ときに発生します</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>。 このイベントは、削除操作を取り消すよく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|DetailsView コントロールは、レコードを挿入した後は、[挿入] ボタンがクリックされたときに発生します</xref:System.Web.UI.WebControls.DetailsView.ItemInserted>。 このイベントは、挿入操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|挿入ボタンをクリックするが DetailsView の前に、コントロールは、レコードを挿入しますときに発生します。</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 。 このイベントは、挿入操作を取り消すよく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|DetailsView コントロールの行が更新後、更新ボタンがクリックされたときに発生します</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>。 このイベントは、更新操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|場合に更新 ボタンがクリックされた DetailsView の前に、コントロールは、レコードを更新します</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。 このイベントは、更新操作を取り消すよく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|DetailsView コントロールは、モード (編集、挿入、または読み取り専用モード) を変更した後に発生します</xref:System.Web.UI.WebControls.DetailsView.ModeChanged>。 このイベントは、DetailsView コントロールがモードを変更したときにタスクを実行する多くの場合、使用できます |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|DetailsView コントロールは、モード (編集、挿入、または読み取り専用モード) を変更する前に発生します</xref:System.Web.UI.WebControls.DetailsView.ModeChanging>。 このイベントは、モードの変更をキャンセルする多くの場合、使用できます |。  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|DetailsView コントロールは、ページング操作を処理した後は、ページャー ボタンのいずれかがクリックされたときに発生します</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>。 このイベントは通常、ユーザーがコントロール内の別のレコードに移動した後にタスクを実行する必要がある場合に使用します |。  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|ページャー ボタンのいずれかをクリックするが DetailsView の前にコントロールは、ページング操作を処理するときに発生します</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>。 このイベントは、ページング操作を取り消すよく使用されます |。     <a name=&quot;Accessibility&quot;> </a> ## ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法に関するユーザー補助機能の情報を参照してください[Visual Studio と ASP.NET のユーザー補助機能](~/add/includes/ajax-current-ext-md.md)と[ASP.NET コントロールやアクセシビリティ](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;DeclarativeSyntax&quot;></a>## 宣言構文```   <asp:DetailsView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateInsertButton=&quot;True|False&quot;       AutoGenerateRows=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnablePagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <CommandRowStyle />           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FieldHeaderStyle />           <Fields>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Fields>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertRowStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle        />   </asp:DetailsView>   ```"
  example:
  - "The following code example demonstrates how to use to use a DetailsView control in combination with a <xref:System.Web.UI.WebControls.GridView> control for a simple master-detail scenario. It displays the details of an item selected in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[DetailsViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_1.aspx)]\n [!code-cs[DetailsViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example demonstrates how to use the DetailsView control to add, delete, and edit records.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_2.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_2.aspx)]  \n  \n The following code example demonstrates how to declaratively add row fields to the DetailsView control.  \n  \n [!code-vb[DetailsViewRowField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_3.aspx)]\n [!code-cs[DetailsViewRowField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:DetailsView runat="server" Width="125px" Height="50px"></{0}:DetailsView>")]

      public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>の新しいインスタンスを初期化するためにこのコンス トラクターを使用します。 動的に追加<xref:System.Web.UI.WebControls.DetailsView>ページにコントロールを作成する新しい<xref:System.Web.UI.WebControls.DetailsView>オブジェクト、そのプロパティを設定し<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName><xref:System.Web.UI.WebControls.PlaceHolder>。</xref:System.Web.UI.WebControls.PlaceHolder>などのコンテナー コントロールのコレクション</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>に追加</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>するには"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.DetailsView> control to a page.  \n  \n [!code-vb[DetailsViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_161_1.aspx)]\n [!code-cs[DetailsViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_161_1.aspx)]"
  syntax:
    content: public DetailsView ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはページング機能が有効になっているかどうかを示す値を設定します。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>コントロールが組み込みのページング機能を使用して、データ ソース内の別のレコードに移動するユーザー</xref:System.Web.UI.WebControls.DetailsView> 。       <xref:System.Web.UI.WebControls.DetailsView>コントロールは、ユーザー インターフェイス (UI) とデータ ソース ページングの両方を実行できます</xref:System.Web.UI.WebControls.DetailsView>。 UI ページング機能をサポートするデータ ソース オブジェクトで使用できます、<xref:System.Collections.ICollection?displayProperty=fullName>インターフェイス</xref:System.Collections.ICollection?displayProperty=fullName>。 ページング操作ごとに、<xref:System.Web.UI.WebControls.DetailsView>コントロールがデータ コレクション全体のデータ ソースのクエリを実行し、基本的に、残りのデータを破棄することを表示する行を選択します</xref:System.Web.UI.WebControls.DetailsView>。       データ ソースを実装する場合<xref:System.Web.UI.DataSourceView>と<xref:System.Web.UI.DataSourceView.CanPage%2A>プロパティから返される`true`、<xref:System.Web.UI.WebControls.DetailsView>コントロールが UI ページングではなくデータ ソース ページングを使用します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.DataSourceView.CanPage%2A></xref:System.Web.UI.DataSourceView>。 ここで、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、各ページング操作に必要な行のみを照会します</xref:System.Web.UI.WebControls.DetailsView>。 したがって、データ ソース ページングは、UI ページングよりも効率的です。 のみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>オブジェクトは、変更しなくてもデータ ソースのページングをサポートしています</xref:System.Web.UI.WebControls.ObjectDataSourceView>。       ページング機能を有効にする AllowPaging プロパティを設定`true`です。 使用して、基になるデータ ソース内のアイテムの合計数を指定できます、<xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>。 現在表示されている項目のインデックスを確認するには<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>。       ページャー行と呼ばれる追加の行が自動的に表示でページングを有効にすると、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 ページャー行は、ページ ナビゲーション コントロールが含まれています、上部、下部、または両方の上部と下部コントロールの表示できます。 ページャー行が表示モードを次の&2; つの組み込みのページャー: 番号付きのページと [次へ] および前のページ リンク (既定値)。 番号付きページのモードでは、ユーザーが特定のページに移動できるように、個々 のページのリンクが表示されます。 次へ と 前のリンク モードでは、ユーザーが次または前のページに移動できるコントロールを表示します。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DetailsView>コントロールに自動的に非表示にページャー行のデータ ソースには、2 つ未満のレコードが含まれている場合</xref:System.Web.UI.WebControls.DetailsView>。       使用して、ページャー (ポケットベル表示モードで、時刻、およびページャー コントロールのテキスト ラベルに表示するページへのリンクの数) などの設定を管理することができます、<xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>。 (背景色、フォントの色、位置など)、ページャーの外観を制御する、<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>。 <xref:System.Web.UI.WebControls.DetailsView>コントロールでは、ページャー用のカスタム テンプレートを定義することもできます</xref:System.Web.UI.WebControls.DetailsView>。 カスタムのページャー行テンプレートを作成する方法の詳細については、 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>。</xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>を参照してください。       <xref:System.Web.UI.WebControls.DetailsView>コントロールには、ページングが発生したときに、カスタム アクションを実行に使用できるいくつかのイベントが用意されています</xref:System.Web.UI.WebControls.DetailsView>。 次の表には、使用可能なイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|ページャー ボタンのいずれかをクリックすると、後の発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページング操作を処理します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>。 このイベントは通常、ユーザーがコントロール内の別のレコードに移動した後にタスクを実行する必要がある場合に使用します |。  |<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|ページャー ボタンのいずれかをクリックすると、その前に発生する、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページング操作を処理します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>。 このイベントは、ページング操作を取り消すよく使用されます |。      AllowPaging の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the AllowPaging property to enable the paging capabilities of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[DetailsViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_117_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページング機能を有効にするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>で代替のデータ行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "内のデータ行の代替の外観を制御する AlternatingRowStyle プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 データ行の間で切り替えるが表示されるこのプロパティが設定されている場合、 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>AlternatingRowStyle 設定と設定します</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `AlternatingRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `AlternatingRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the AlternatingRowStyle property to specify the font and style settings for the alternating data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_779_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_779_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内のデータ行の代替のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に、現在のレコードを削除するビルトイン コントロールを表示するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールから継承されるオブジェクトにバインドする<xref:System.Web.UI.DataSourceView>と<xref:System.Web.UI.DataSourceView.CanDelete%2A>プロパティから返される`true`、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データ ソース コントロールの機能を活用し、削除機能を提供します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.DataSourceView.CanDelete%2A></xref:System.Web.UI.DataSourceView></xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] > の<xref:System.Web.UI.WebControls.SqlDataSourceView>、データを削除するオブジェクト、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName>、基になるプロパティ<xref:System.Web.UI.WebControls.SqlDataSource>delete クエリ ステートメントを使用してオブジェクトを設定する必要があります</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.SqlDataSourceView>。       AutoGenerateDeleteButton プロパティに設定するときに`true`、<xref:System.Web.UI.WebControls.CommandField>に [削除] ボタンで行のフィールドが自動的に表示、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.CommandField>。 完全に削除 ボタンをクリックすると、データ ソースからそのレコードを削除します。      > [!NOTE] > も設定する必要があります、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>自動削除機能が動作するプロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>。       <xref:System.Web.UI.WebControls.DetailsView>コントロールには、レコードが削除されたときに、カスタム アクションを実行に使用できるいくつかのイベントが用意されています</xref:System.Web.UI.WebControls.DetailsView>。 次の表には、使用可能なイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|後で、[削除] ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールがデータ ソースからレコードを削除します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>。 このイベントは、削除操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|[削除] ボタンをクリックすると、その前に発生する、<xref:System.Web.UI.WebControls.DetailsView>コントロールがデータ ソースからレコードを削除します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>。 このイベントは、削除操作を取り消すよく使用されます |。      AutoGenerateDeleteButton の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateDeleteButton property to display the built-in control to delete the current record.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_743_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_743_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のレコードを削除する組み込みのコントロールを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に現在のレコードを編集する組み込みのコントロールを表示するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "更新をサポートするデータ ソース コントロールをバインドするときに、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データ ソース コントロールの機能を活用し、自動更新機能を提供します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] > データを更新するデータ ソース コントロールの<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>update クエリ ステートメントを使用してプロパティを設定する必要があります</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>。       AutoGenerateEditButton プロパティに設定するときに`true`、 <xref:System.Web.UI.WebControls.CommandField>[編集] ボタンで行のフィールドがで自動的に表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.CommandField>。 編集 ボタンをクリックすると、<xref:System.Web.UI.WebControls.DetailsView>編集モードでのコントロールです</xref:System.Web.UI.WebControls.DetailsView>。 編集モードで読み取り専用ではないコントロールにバインドされた各フィールドが表示されます、適切な入力コントロールなど、<xref:System.Web.UI.WebControls.TextBox>フィールドのデータ型用のコントロールです</xref:System.Web.UI.WebControls.TextBox>。 これにより、ユーザーがフィールドの値を変更できます。       クリックすると、[編集] ボタンは、[更新] ボタンと [キャンセル] ボタンも置換されます。 値が変更データ ソース内のレコードを更新更新ボタンをクリックし、コントロールによって指定されたモードに戻ります、<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>。 [キャンセル] ボタンをクリックすると、値の変更を破棄し、既定のモードにコントロールを返します。      > [!NOTE] > を配置する、<xref:System.Web.UI.WebControls.DetailsView>編集モードでプログラムによってコントロールを使用して、<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>メソッド</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A></xref:System.Web.UI.WebControls.DetailsView>。       ときに、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティに設定されても`true`、<xref:System.Web.UI.WebControls.DetailsView>コントロールに自動的に確実に複数のフィールドで指定された、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>プロパティは読み取り専用です</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>。      > [!NOTE] > 設定する必要があります、独自の更新の機能を実装する場合を除き、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>自動更新機能が動作するプロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>。       データの外観を制御するときに行、<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードを使用して、<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView>。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。       <xref:System.Web.UI.WebControls.DetailsView>コントロールには、レコードが更新されたときに、カスタム アクションを実行に使用できるいくつかのイベントが用意されています</xref:System.Web.UI.WebControls.DetailsView>。 次の表には、使用可能なイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|後に更新 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、レコードを更新します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>。 このイベントは、更新操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|その前に更新 ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、レコードを更新します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>。 このイベントは、更新操作を取り消すよく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|<xref:System.Web.UI.WebControls.DetailsView>コントロールがモードを変更した後に発生します |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|発生する前に、<xref:System.Web.UI.WebControls.DetailsView>コントロールがモードを変更します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ModeChanging></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ModeChanged>。 このイベントは、多くの場合、モードの変更をキャンセル使用します |。      AutoGenerateEditButton の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateEditButton property to display the built-in controls to edit the current record.  \n  \n [!code-cs[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_383_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_383_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のレコードを編集する組み込みのコントロールを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  id: AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に、新しいレコードを挿入するビルトイン コントロールを表示するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "挿入をサポートするデータ ソース コントロールがバインドされている場合、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データ ソース コントロールの機能を活用し、自動挿入する機能を提供します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] >、データを挿入するデータ ソース コントロールの<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>insert クエリ ステートメントを使用してプロパティを設定する必要があります</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>。       AutoGenerateInsertButton プロパティに設定するときに`true`、<xref:System.Web.UI.WebControls.CommandField>に新しいボタンがある行のフィールドが自動的に表示、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.CommandField>。 新規作成 ボタンをクリックすると、<xref:System.Web.UI.WebControls.DetailsView>挿入モードでのコントロールです</xref:System.Web.UI.WebControls.DetailsView>。 挿入モードのときに読み取り専用ではないコントロールにバインドされた各フィールドが表示されます、適切な入力コントロールなど、<xref:System.Web.UI.WebControls.TextBox>フィールドのデータ型用のコントロールです</xref:System.Web.UI.WebControls.TextBox>。 これにより、ユーザーに新しいレコードのフィールドの値を入力します。       クリックすると、新規作成 ボタンは、挿入 ボタンと キャンセル ボタンも置換されます。 [挿入] ボタンをクリックすると、データ ソースで新しいレコードが挿入され、コントロールによって指定されたモードに戻ります、<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>。 [キャンセル] ボタンをクリックすると、挿入操作を破棄し、既定のモードにコントロールを返します。      > [!NOTE] > 行を挿入モードにプログラムで、使用、<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>メソッド</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>。       挿入モードを使用しているレコードの外観を制御することができます、<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。       <xref:System.Web.UI.WebControls.DetailsView>コントロールに新しいレコードが挿入されるときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています</xref:System.Web.UI.WebControls.DetailsView>。 次の表には、使用可能なイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|後で、[挿入] ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、レコードを挿入します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemInserted>。 このイベントは、挿入操作の結果の確認によく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|その前に、[挿入] ボタンがクリックされたときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、レコードを挿入します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemInserting>。 このイベントは、挿入操作を取り消すよく使用されます |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|<xref:System.Web.UI.WebControls.DetailsView>コントロールがモードを変更した後に発生します |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|発生する前に、<xref:System.Web.UI.WebControls.DetailsView>コントロールがモードを変更します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ModeChanging></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ModeChanged>。 このイベントは、多くの場合、モードの変更をキャンセル使用します |。      AutoGenerateInsertButton の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateInsertButton property to display the built-in controls to insert a new record in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_891_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_891_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateInsertButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しいレコードを挿入するビルトイン コントロールを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  id: AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソース内の各フィールドの行のフィールドが自動的に生成されに表示されるかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "各データ行で、<xref:System.Web.UI.WebControls.DetailsView>コントロールは行のフィールドで表されます</xref:System.Web.UI.WebControls.DetailsView>。 AutoGenerateRows プロパティに設定するときに`true`、データ ソース内の各フィールドにバインドされる行が自動的に生成されたフィールドを作成します。 行には、各フィールドは、データ ソース内の各フィールドが表示される順序でのテキストとして表示されます。      > [!NOTE] > にバインドされる行が自動的に生成されたフィールドは追加されません、<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>コレクションです</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。       行を自動的に生成するレコード内のすべてのフィールドの表示を迅速かつ簡単な方法を提供します。 ただし、させるを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールには、行に含めるフィールドを明示的に宣言する必要があります機能の詳細、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。 詳細については、 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>。</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>を参照してください。      > [!NOTE] > 行フィールドを自動的に生成される行のフィールドと組み合わせて使用することができますを明示的に宣言します。 両方を使用する場合に最初に明示的に宣言された行のフィールドがレンダリング後に自動的に生成される行のフィールドがされます。       AutoGenerateRows の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the AutoGenerateRows property to automatically create bound row fields for each field in the data source.  \n  \n [!code-cs[DetailsViewAutoGenerateRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_507_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_507_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動的に表示するデータ ソース内の各フィールドにバインドされる行フィールドを生成します。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはの背景に表示するイメージへの URL を設定、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "背景に表示するイメージの URL を指定する、BackImageUrl プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] >、指定されたイメージがより小さい場合、<xref:System.Web.UI.WebControls.DetailsView>背景を埋めるためにコントロール、イメージを並べて表示します</xref:System.Web.UI.WebControls.DetailsView>。 イメージ コントロールよりも大きい場合は、イメージをトリミングします。"
  example:
  - "The following code example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.DetailsView> control. You must provide your own image for this example to work.  \n  \n [!code-vb[DetailsViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1223_1.aspx)]\n [!code-cs[DetailsViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1223_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "背景に表示するイメージの URL、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 、下部のページャー行を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "ページングが有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 ページャー行には、上部、下部、または両方の上部と下部コントロールの表示可能なユーザーが、他のレコードに移動できるようにするコントロールが含まれています。 BottomPagerRow プロパティにプログラムでアクセスを使用して、 <xref:System.Web.UI.WebControls.DetailsViewRow>、下部のページャー行を表すオブジェクト、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsViewRow>。      > [!NOTE] >、BottomPagerRow プロパティは後にのみ使用可能な<xref:System.Web.UI.WebControls.DetailsView>コントロールは、下のページャー行を作成、<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView>。       カスタム コンテンツを追加する場合などの一番下のページャー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 BottomPagerRow プロパティに対する変更は、後に行う必要があります、<xref:System.Web.UI.WebControls.DetailsView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.DetailsView>コントロール変更は上書きされます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。"
  example:
  - "The following code example demonstrates how to use the BottomPagerRow property to access the bottom pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_133_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 、下部のページャー行を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の HTML caption 要素に表示するテキスト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。"
  remarks: "キャプション プロパティの HTML caption 要素に表示するテキストを指定を使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるテーブルの説明を提供します。       その他のユーザー補助サポート、<xref:System.Web.UI.WebControls.DetailsView>によってコントロールが提供される、<xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A></xref:System.Web.UI.WebControls.DetailsView>。 使用して、<xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>で HTML caption 要素の配置を指定するプロパティ、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>。       キャプションの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_921_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_921_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "代わりに HTML caption 要素に表示するテキストを表す文字列、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.DetailsView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で HTML caption 要素の水平または垂直方向の位置、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。"
  remarks: "HTML caption 要素内の水平方向または垂直方向の位置を指定する、CaptionAlign プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 このプロパティは、コントロールを支援テクノロジ デバイスのユーザーにアクセスしやすくものです。       このプロパティのいずれかを使用して、<xref:System.Web.UI.WebControls.TableCaptionAlign>列挙値</xref:System.Web.UI.WebControls.TableCaptionAlign>。 次の表は、使用可能な値を一覧表示します。      |値 |説明 |  |-----------|-----------------|  |`TableCaptionAlign.Bottom`|Caption 要素は、テーブルの下部に揃えられます |。  |`TableCaptionAlign.Left`|Caption 要素は、テーブルの左側に揃えられます |。  |`TableCaptionAlign.NotSet`|Caption 要素の配置が設定されていません |。  |`TableCaptionAlign.Right`|Caption 要素は、テーブルの右側に揃えられます |。  |`TableCaptionAlign.Top`|Caption 要素は、テーブルの上部に揃えられます |。      その他のユーザー補助サポート、<xref:System.Web.UI.WebControls.DetailsView>によってコントロールが提供される、<xref:System.Web.UI.WebControls.DetailsView.Caption%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.Caption%2A></xref:System.Web.UI.WebControls.DetailsView>。 使用して、<xref:System.Web.UI.WebControls.DetailsView.Caption%2A>プロパティの HTML caption 要素に表示するテキストを指定する、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.Caption%2A>。       CaptionAlign の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.DetailsView> control should be rendered on the left side of the control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_789_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_789_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定した値が、 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref>列挙値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはセルの内容と、セルの境界線の間の領域の量を設定します。"
  remarks: "CellPadding プロパティを使用すると、セルの内容とセルの境界線間の間隔を制御できます。 指定されたパディングの量は、セルの&4; つすべての側面に追加されます。       同じ列のすべてのセル、<xref:System.Web.UI.WebControls.DetailsView>コントロールが同じ幅を持ちます</xref:System.Web.UI.WebControls.DetailsView>。 余白の量は最も幅の広いセルに適用され、列内の他のすべてのセルはセルの幅に合わせて調整されます。 同様に、同じ行のすべてのセルには、同じ高さがあります。 余白の量は、行の行内のセルに適用され、行の他のすべてのセルはセルの高さに調整されます。 個々 のセルのサイズを指定することはできません。       セルの間隔を調整するのには、使用、<xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>。"
  example:
  - "The following code example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1251_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1251_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "(ピクセル単位) のセルの内容と、セルの境界線の間の領域の量。 既定値は、-1 で、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはセル間の領域の量を設定します。"
  remarks: "内の隣接するセルの間隔を制御する CellSpacing プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 この間隔は、垂直および水平方向の両方に適用されます。 セルの間隔は、コントロール全体の統一されています。 行または列の個々 のセルの間隔を指定することはできません。      > [!NOTE] >、0 より大きい値にこのプロパティを設定し、設定すると、<xref:System.Web.UI.WebControls.DetailsView.GridLines%2A>プロパティ セルの境界線が表示される値、ギャップは隣接するセルの境界線間に表示されます</xref:System.Web.UI.WebControls.DetailsView.GridLines%2A>。 このような状況では、CellSpacing プロパティは、ギャップの大きさを制御します。       セルの内容と、セルの枠線の間隔を調整するを使用して、<xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>。"
  example:
  - "The following code example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_611_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_611_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "セル間のピクセル単位での領域の量。 既定値は 0 です。"
  overload: System.Web.UI.WebControls.DetailsView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  id: ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "スイッチ、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>指定されたモードを制御します。"
  remarks: "ChangeMode メソッドを使用してプログラムで変更を<xref:System.Web.UI.WebControls.DetailsView>編集、挿入、および読み取り専用モード間の制御</xref:System.Web.UI.WebControls.DetailsView>。 このメソッドは更新も、<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>モードが指定のプロパティ</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>。 次の表は、さまざまなモード値を一覧表示します。      |モード |説明 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードは、レコードの値を更新することができます |。  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードは、データ ソースに新しいレコードを追加することができます |。  |`DetailsView.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが、通常の表示モードは、読み取り専用モードです |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 。"
  example:
  - "The following code example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.DetailsView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/28d4c60e-b5c3-4418-86ab-_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/28d4c60e-b5c3-4418-86ab-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.DetailsView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  id: CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>コマンドの行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "コマンドの行の外観を制御する CommandRowStyle プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 コマンド行には、編集、削除、および挿入するなどの操作を実行するコマンド ボタンが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `CommandRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `CommandRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the CommandRowStyle property to specify the font and style settings for the command row in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCommandRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_313_1.aspx)]\n [!code-cs[DetailsViewCommandRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_313_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>コマンドの行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "作成、 <xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref>を指定したフィールドのプロパティを使用して自動的に生成される行フィールドを表すオブジェクト。"
  remarks: "CreateAutoGeneratedRow メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>指定フィールド プロパティを使用して自動的に生成される行フィールドを作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref>のプロパティを格納している、 <xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;></xref>です。"
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref>で指定されたフィールドのプロパティを格納している、 <code> fieldProperties </code>パラメーター。"
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  id: CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたデータ項目に自動的に生成される行のフィールドのセットを作成します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティに設定されている`true`、CreateAutoGeneratedRows メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>のセットを自動的に作成するコントロールには、現在のデータ項目の行のフィールドが生成されます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>。"
  syntax:
    content: protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);
    parameters:
    - id: dataItem
      type: System.Object
      description: "自動的に生成される行のフィールドを作成する対象のデータ項目。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>指定されたデータ項目を自動的に生成された行のフィールドを格納している</xref:System.Collections.ICollection>。"
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールにはプロパティまたはフィールドを生成する属性がありません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示するために使用されるコントロールの階層を作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "CreateChildControls メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールのコントロールの階層構造を作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>のデータ ソースを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール</xref:System.Collections.IEnumerable>。"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ バインディングの中にこのメソッドが呼び出されることを示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "データ ソース内の項目の数。"
  overload: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code> returns a null <xref href=\"System.Web.UI.DataSourceView\"></xref>.  \n  \n \\- or -  \n  \n d<code>ataSource</code> is not an <xref:System.Collections.ICollection> and cannot return a total row count.  \n  \n \\- or -  \n  \n <code>dataBinding</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface.  \n  \n \\- or -  \n  \n <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <xref:System.Web.UI.WebControls.DetailsView.AllowPaging*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "既定のテーブル スタイル オブジェクトを作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "CreateControlStyle メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>既定テーブル スタイル オブジェクトを作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。 既定のスタイル設定に加え、<xref:System.Web.UI.WebControls.TableStyle>オブジェクト、また、このメソッドは次の表にプロパティを設定します</xref:System.Web.UI.WebControls.TableStyle>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>|`GridLines.Both`|  |<xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|</xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A></xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>の既定のテーブル スタイルを格納している、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "作成、 <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> Select コマンドに渡されるオブジェクト。"
  remarks: "CreateDataSourceSelectArguments メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールを作成、 <xref:System.Web.UI.DataSourceSelectArguments>Select コマンドに渡されるオブジェクト</xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> Select コマンドに渡される"
  overload: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  id: CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールの階層を生成するために使用自動的に生成し、ユーザー定義の行のフィールドの完全なセットを作成します。"
  remarks: "CreateFieldSet メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールの行のフィールドの完全なセットを作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。 場合、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティに設定されている`true`、自動的に生成された行のフィールドに含まれるユーザー定義の行のフィールドに追加されます、<xref:System.Web.UI.WebControls.DetailsView.Fields%2A>コレクションです</xref:System.Web.UI.WebControls.DetailsView.Fields%2A></xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>。 データ項目に基づいて自動的に生成される行のフィールドを作成するで渡す`true`の`useDataSource`パラメーターです。 それ以外の場合、自動的に生成される行のフィールド、プロパティ、コントロール内の既存の行フィールドに基づいて作成します。"
  syntax:
    content: protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);
    parameters:
    - id: dataItem
      type: System.Object
      description: "行フィールドを作成する対象のデータ項目。"
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ項目を使用して、自動的に生成される行のフィールドを作成するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>自動的に生成されると、指定されたデータ項目のユーザー定義の行のフィールドの両方を含む</xref:System.Collections.ICollection>。"
  overload: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>オブジェクトの型を使用して、指定した項目のインデックス、行、行の状態。"
  remarks: "CreateRow メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールを作成、<xref:System.Web.UI.WebControls.DetailsViewRow>オブジェクト</xref:System.Web.UI.WebControls.DetailsViewRow></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "表示するデータ項目の&0; から始まるインデックス。"
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;> </xref>値。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref>値。"
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>指定した項目のインデックス、行の種類、および行の状態を使用します。"
  overload: System.Web.UI.WebControls.DetailsView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "含むテーブルを作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "CreateTable メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールのコンテナーとして機能するテーブルを作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref>を含んでいるテーブルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のデータ入力モードを取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "CurrentMode プロパティを使用しているかどうか、<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集、挿入、または読み取り専用モードになっています</xref:System.Web.UI.WebControls.DetailsView>。 次の表は、さまざまなモード値を一覧表示します。      |モード |説明 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードは、レコードの値を更新することができます |。  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードは、データ ソースに新しいレコードを追加することができます |。  |`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが、通常の表示モードは、読み取り専用モードになっています |。      この値は通常によって自動的に設定、<xref:System.Web.UI.WebControls.DetailsView>新規、更新、挿入、削除、またはキャンセル コマンド ボタンがクリックされたときに、コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。 使用してモードを変更することができますもプログラムによって、<xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>メソッド</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>。       ときに、<xref:System.Web.UI.WebControls.DetailsView>制御モードを変更する、次の表に、イベントが発生します</xref:System.Web.UI.WebControls.DetailsView>。 これにより、イベントが発生したときに、ルーチンを実行するカスタム イベント ハンドラーを作成することができます。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|モードが変更された後は、<xref:System.Web.UI.WebControls.DetailsView>コントロールのモードを変更するコマンド ボタンがクリックされたときに発生します |。  |<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|コマンド ボタンのモードを変更するときに発生、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされたモードの変更の前にします |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 。"
  example:
  - "The following code example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.DetailsView> control is in edit, insert, or read-only mode. If the user attempts to navigate to a different record while the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode, the paging operation is canceled.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_883_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_883_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.DetailsView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>基本クラスのメソッド</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>を呼び出します"
  remarks: "データ バインド コントロールは<xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>DataBind の代わりにします</xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>。"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ項目にバインドを取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "データ アイテムにアクセスする DataItem プロパティにバインドを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 データ項目は現在のレコードのフィールドの値に直接アクセスをよく使用されます。 型、<xref:System.Object>これによって返されるプロパティは、データ ソースによって異なります</xref:System.Object>。 たとえば、ときに、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにバインドする、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Data.DataRowView>オブジェクトが返されます</xref:System.Data.DataRowView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.SqlDataSource>。      > [!NOTE] > このプロパティは、データ バインディングが発生した後にのみ使用します。 データ バインディングが実行されるまで、このプロパティを返します`null`です。 このプロパティも該当する場合に、<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードでを返します`null`</xref:System.Web.UI.WebControls.DetailsView>。"
  example:
  - "The following code example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-cs[DetailsViewDataItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_505_1.aspx)]\n [!code-vb[DetailsViewDataItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_505_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>を表し、データ項目にバインド、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール</xref:System.Object>。"
  overload: System.Web.UI.WebControls.DetailsView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "基になるデータ ソース内の項目数を取得します。"
  remarks: "ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`)、DataItemCount プロパティを使用して、基になるデータ ソース内のレコードの合計数を決定します</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。      > [!NOTE] > ため、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、一度に&1; つのレコードを表示、この値は、データ ソース内のすべてのレコードを表示するために必要なページの合計数にも対応します</xref:System.Web.UI.WebControls.DetailsView>。       基になるデータ ソースから現在のレコードのインデックスを確認するを使用して、<xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>。"
  example:
  - "The following code example demonstrates how to use the DataItemCount property to determine the number of items in the data source. This value is used to display the page count in a <xref:System.Web.UI.WebControls.Label> control contained within a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_215_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_215_1.aspx)]"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "基になるデータ ソース内の項目の数。"
  overload: System.Web.UI.WebControls.DetailsView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示されている項目のインデックスを取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>基になるデータ ソースからです。"
  remarks: "ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`)、DataItemIndex プロパティを使用して、現在表示されているレコードのインデックスを確認します</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 このプロパティを使用して、プログラムで表示されているレコードを変更することができますも。      > [!NOTE] > も表示されます。 レコードのページ数を決定するこのプロパティを使用することができますページング機能を有効にすると、ただし、このプロパティは、0 から始まることに注意してください。       データ ソース内の項目の合計数を調べるを使用して、<xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>。"
  example:
  - "The following code example demonstrates how to use the DataItemIndex property to determine the index of the current item in the data source. This value is used to display the current page number in a <xref:System.Web.UI.WebControls.Label> control contained in a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1295_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1295_1.aspx)]"
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "表示されているデータ項目の&0; から始まるインデックス、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>基になるデータ ソースからです。"
  overload: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>表示されているレコードの主キーを表すオブジェクト。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.DetailsView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>キー フィールドまたは現在のレコードのフィールドを表すオブジェクト</xref:System.Web.UI.WebControls.DataKey></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>。 これを取得するデータキー プロパティを使用して<xref:System.Web.UI.WebControls.DataKey>オブジェクト</xref:System.Web.UI.WebControls.DataKey>。 通常、このプロパティは、キーとで指定されたフィールドの対応する値を取得する使用、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>。      > [!NOTE] > 簡単な方法として使用することも、<xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>で表示されている最初のキー フィールドの値を決定するプロパティ、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A></xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>。"
  example:
  - "The following code example demonstrates how to use the DataKey property to determine the key field and corresponding value for the current record.  \n  \n [!code-cs[DetailsViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_369_1.aspx)]\n [!code-vb[DetailsViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_369_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref>表示されているレコードの主キーを表すです。"
  overload: System.Web.UI.WebControls.DetailsView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソース用のキー フィールドの名前を格納する配列を設定します。"
  remarks: "データ ソースの主キーを表すフィールド名のコンマ区切りの一覧を指定するのにには、DataKeyNames プロパティを使用します。 DataKeyNames プロパティが設定されている場合、<xref:System.Web.UI.WebControls.DetailsView>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.DataKey>キー フィールド、または現在のレコードのフィールドを表しに格納するオブジェクト、<xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A></xref:System.Web.UI.WebControls.DataKey></xref:System.Web.UI.WebControls.DetailsView>。 ときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティに設定されても`true`、<xref:System.Web.UI.WebControls.DetailsView>コントロールに自動的ににより、フィールド、または、DataKeyNames プロパティで指定されたフィールドが読み取り専用である</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>。      > [!NOTE] > の自動更新、削除、およびの機能を挿入する DataKeyNames プロパティを設定する必要があります、<xref:System.Web.UI.WebControls.DetailsView>動作を制御します</xref:System.Web.UI.WebControls.DetailsView>。       場合、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>行フィールドのプロパティに設定されて`false`に行が表示されていない、<xref:System.Web.UI.WebControls.DetailsView>コントロールと、行のデータは行いませんラウンド トリップをクライアントにします</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DataControlField.Visible%2A>。 ラウンド トリップに現在表示されていない行のデータを表示する場合は、DataKeyNames プロパティに、フィールド名を追加します。"
  example:
  - "The following code example demonstrates how to use the DataKeyNames property to identify the key field for the data source bound to the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_209_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_209_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "データ ソースのキー フィールドの名前を格納する配列。"
  overload: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の既定のデータ入力モード、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "DefaultMode プロパティを使用して、指定するかどうか、<xref:System.Web.UI.WebControls.DetailsView>編集または挿入操作が実行された後に編集、挿入、または読み取り専用モードに制御が戻ります</xref:System.Web.UI.WebControls.DetailsView>。 既定では、<xref:System.Web.UI.WebControls.DetailsView>読み取り専用モードに制御が返されますただし、維持することができます、<xref:System.Web.UI.WebControls.DetailsView>編集の制御や、適切な値にこのプロパティを設定してモードを挿入します。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 。 次の表は、さまざまなモード値を一覧表示します。      |モード |説明 |  |----------|-----------------|  |`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードは、レコードの値を更新することができます |。  |`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードは、データ ソースに新しいレコードを追加することができます |。  |`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView>コントロールが、通常の表示モードは、読み取り専用モードです |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 。"
  example:
  - "The following code example demonstrates how to use the DefaultMode property to specify that the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode after a record has been updated.  \n  \n [!code-cs[DetailsViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1138_1.aspx)]\n [!code-vb[DetailsViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1138_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_DetailsViewMode.ReadOnly&quot; name=&quot;DetailsViewMode.ReadOnly&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定した値が、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref>列挙値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースから現在のレコードを削除します。"
  remarks: "場合、削除は実行されません、<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードになっています</xref:System.Web.UI.WebControls.DetailsView>。 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>、項目が削除される直前にイベントが発生します</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>。 設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`削除を取り消します</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールが削除操作を実行するときに呼び出されるページ上のメソッドの名前を設定します。"
  remarks: "Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "コントロールが削除操作を実行時に呼び出されるページ上のメソッドの名前です。"
  overload: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>ときに、データの外観を設定できるようにするオブジェクトの行、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールが編集モードになっています。"
  remarks: "使用するときに、データの外観を制御する EditRowStyle プロパティ行、<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードにします</xref:System.Web.UI.WebControls.DetailsView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EditRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EditRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the EditRowStyle property to specify the font and style settings for the data rows when a <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-vb[DetailsViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_539_1.aspx)]\n [!code-cs[DetailsViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_539_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照を<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>ことを表すデータのスタイル行ときに、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールが編集モードになっています。"
  overload: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>データ ソースにバインドすると表示される、空のデータ行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールにいくつかのレコードが含まれていません。"
  remarks: "空のデータの行の外観を制御する EmptyDataRowStyle プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合は、空のデータ行が表示されます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EmptyDataRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EmptyDataRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the EmptyDataRowStyle property to specify the font and style settings for the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_578_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_578_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>空のデータ行の外観を設定することができます。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または空のデータ行が表示されるときに、ユーザー定義の内容を設定、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがいくつかのレコードがないデータ ソースにバインドされています。"
  remarks: "空のデータ行を表示する、<xref:System.Web.UI.WebControls.DetailsView>コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します</xref:System.Web.UI.WebControls.DetailsView>。 EmptyDataTemplate プロパティを使用して、空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を定義できます。 Null の行のカスタム テンプレートを指定するには、まず配置`<EmptyDataTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<EmptyDataTemplate>`タグ。 空のデータ行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>。 設定して、空のデータ行の組み込み UI を使用することができます、<xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>。      > [!NOTE] > 両方、 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>EmptyDataTemplate プロパティが設定されて、EmptyDataTemplate プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>。"
  example:
  - "The following code example demonstrates how to use the EmptyDataTemplate property to create a custom empty data row.  \n  \n [!code-vb[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_788_1.aspx)]\n [!code-cs[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_788_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>のカスタム コンテンツを空のデータ行を格納しています。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定が空のデータ行に表示するテキストが表示されるときに、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがいくつかのレコードがないデータ ソースにバインドされています。"
  remarks: "空のデータ行を表示する、<xref:System.Web.UI.WebControls.DetailsView>コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します</xref:System.Web.UI.WebControls.DetailsView>。 EmptyDataText プロパティを使用すると、空のデータ行に表示するのにテキストを指定できます。 空のデータ行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>。 設定して、空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を定義する代わりに、<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>。      > [!NOTE] > 場合、両方の EmptyDataText と<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>プロパティを設定、<xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>。       EmptyDataText の値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_617_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_617_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "空のデータ行に表示するテキストです。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ モデルの検証が有効になっているかどうかを示す値を設定します。"
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ モデルの検証が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  id: EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のページング操作のクライアント側のコールバック関数を使用するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "クライアント側のコールバック関数を使用してページング操作を実行するかどうかを指定するのにには、EnablePagingCallbacks プロパティを使用します。 有効な場合、サーバーへのページにポストする必要があるコールバック機能を使用して、ページングが実行されます。      > [!NOTE] > クライアント側ページング機能は Microsoft Internet Explorer 5.5 以降および Netscape 6.0 でサポートされている以降のみです。       EnablePagingCallbacks の値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the EnablePagingCallbacks property to enable the use of client-side callback functions for paging operations.  \n  \n [!code-vb[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_800_1.aspx)]\n [!code-cs[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_800_1.aspx)]"
  syntax:
    content: public virtual bool EnablePagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページング操作のクライアント側のコールバック関数を使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "呼び出し、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>リスト コントロールのデータがデータ バインディングに必要なことと、有効なデータ ソース コントロールが指定されていることを確認したらメソッド</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>。"
  remarks: "場合、データ バインディングは実行されません、<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードになっています</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示される各フィールドの値を取得し、指定した保存<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>オブジェクト。"
  remarks: "ExtractRowValues メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>の各フィールドの値を取得するコントロール</xref:System.Web.UI.WebControls.DetailsView>。 データ ソースの操作に使用する値できます。 抽出された値を使用して、読み取り専用のフィールドとキー フィールドを含めるかどうかを指定することができます、`includeReadOnlyFields`と`includePrimaryKey`パラメーター、それぞれします。"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>フィールド値を格納するために使用します。"
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>読み取り専用のフィールドを含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>主キー フィールドまたはフィールドを含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  id: FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>にヘッダー列の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "FieldHeaderStyle プロパティ フィールド ヘッダー列での外観を制御を使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 これは、データ値のフィールドの名前を含む列です。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `FieldHeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `FieldHeaderStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the FieldHeaderStyle property to specify the font and style settings for the field header row.  \n  \n [!code-vb[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_602_1.aspx)]\n [!code-cs[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_602_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>にヘッダー列のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Fields
  id: Fields
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>を明示的に宣言された行のフィールドを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "行のフィールドを明示的に宣言する場合、<xref:System.Web.UI.WebControls.DetailsView>コントロール、フィールドが Fields プロパティ (コレクション) に格納されているこれらの行</xref:System.Web.UI.WebControls.DetailsView>。 フィールド コレクションでは、プログラムで明示的に宣言された行のコレクションを管理することもできます。      > [!NOTE] > 行フィールドを自動的に生成される行のフィールドと組み合わせて使用することができますを明示的に宣言します。 両方を使用する場合に最初に明示的に宣言された行のフィールドがレンダリング後に自動的に生成される行のフィールドがされます。 行のフィールドが Fields コレクションに追加されませんが自動的に生成されます。       行フィールドの種類は、コントロール内の行の動作を決定します。 次の表は、Fields コレクションに使用できるフィールドの種類別の行を示します。      |行のフィールドの種類 |説明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.BoundField>|テキストとしてデータ ソースのフィールドの値を表示します |。  |<xref:System.Web.UI.WebControls.ButtonField>|コマンドのボタンが表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.BoundField>。 これにより、追加または削除 ボタンなどのカスタム ボタン コントロールで行を表示する |。  |<xref:System.Web.UI.WebControls.CheckBoxField>|内のチェック ボックスが表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.CheckBoxField>。 この行のフィールド型では、ブール値を持つフィールドを表示するために使用が一般的です |。  |<xref:System.Web.UI.WebControls.CommandField>|組み込みのコマンドを表示、編集を実行するボタンの挿入、または<xref:System.Web.UI.WebControls.DetailsView>コントロール内で操作を削除します |。  |<xref:System.Web.UI.WebControls.HyperLinkField>|ハイパーリンクとして、データ ソースのフィールドの値を表示します</xref:System.Web.UI.WebControls.HyperLinkField></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.CommandField>。 この行のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます |。  |<xref:System.Web.UI.WebControls.ImageField>|<xref:System.Web.UI.WebControls.DetailsView>コントロールにイメージを表示します |。  |<xref:System.Web.UI.WebControls.TemplateField>|内の行に対するユーザー定義のコンテンツを表示、 <xref:System.Web.UI.WebControls.DetailsView>、指定したテンプレートに応じてコントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.TemplateField></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.ImageField>。 この行のフィールド型では、カスタムの行のフィールドを作成することができます |。      行のフィールドを明示的に宣言する、<xref:System.Web.UI.WebControls.DetailsView>最初のセットを制御する、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>プロパティを`false`</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A></xref:System.Web.UI.WebControls.DetailsView>。 次に、追加の開閉`<Fields>`開始タグと終了タグの間のタグ、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 最後に、開始タグと終了の間に挿入する行フィールドを一覧表示`<Fields>`タグ。 行のフィールドで表示する、<xref:System.Web.UI.WebControls.DetailsView>行フィールドが Fields コレクションに表示される順序で制御します</xref:System.Web.UI.WebControls.DetailsView>。       Fields コレクションにプログラムで行のフィールドを追加することができますは宣言的に行のフィールドを一覧表示しやすく、<xref:System.Web.UI.WebControls.DetailsView>を制御し、使用して、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>行フィールドを非表示には、各データ フィールドのプロパティ</xref:System.Web.UI.WebControls.DataControlField.Visible%2A></xref:System.Web.UI.WebControls.DetailsView>。       場合、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>行フィールドのプロパティに設定されて`false`に行が表示されていない、<xref:System.Web.UI.WebControls.DetailsView>コントロールと、行のデータは行いませんラウンド トリップをクライアントにします</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DataControlField.Visible%2A>。 フィールド名を追加のラウンド トリップに現在表示されていない行のデータを表示する場合、<xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>。"
  example:
  - "The following code example demonstrates how to declaratively add row fields to the Fields collection of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_545_1.aspx)]\n [!code-vb[DetailsViewFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_545_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref>内のすべての行を明示的に宣言されたフィールドを格納している、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.Fields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>のフッター行を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "下部でフッター行を表示する、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>または<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.FooterText%2A></xref:System.Web.UI.WebControls.DetailsView>。 FooterRow プロパティにプログラムでアクセスを使用して、<xref:System.Web.UI.WebControls.DetailsViewRow>フッター行を表すオブジェクト</xref:System.Web.UI.WebControls.DetailsViewRow>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.GridView.FooterRow%2A>プロパティは、使用した場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>コントロールのフッター行の作成、<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView.FooterRow%2A>。       たとえば、カスタム コンテンツを追加するときに、フッター行をプログラムで操作する必要がある場合は、このプロパティは使用一般的です。 FooterRow プロパティに対する変更は、後に行う必要があります、<xref:System.Web.UI.WebControls.DetailsView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.DetailsView>コントロール変更は上書きされます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。       フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>。"
  example:
  - "The following code example demonstrates how to use the FooterRow property to access the footer row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom footer row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_51_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>のフッター行を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のフッター行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "下部でフッター行を表示する、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>または<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.FooterText%2A></xref:System.Web.UI.WebControls.DetailsView>。 内のフッター行の外観を制御した後のプロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `FooterStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `FooterStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify the font and style settings for the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_989_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_989_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のフッター行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、ユーザー定義のコンテンツのフッター行、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "下部でフッター行を表示する、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>か FooterTemplate プロパティを設定します</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A></xref:System.Web.UI.WebControls.DetailsView>。 FooterTemplate プロパティを使用して、フッター行の独自のカスタム ユーザー インターフェイス (UI) を定義できます。 フッター行のカスタム テンプレートを指定するには、まず配置`<FooterTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<FooterTemplate>`タグ。 フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>。 または、単に表示できますテキスト フッター行に設定して、<xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>。      > [!NOTE] > 両方、 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>FooterTemplate プロパティが設定されて、FooterTemplate プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>。"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom footer row.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1257_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1257_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>フッター行のカスタム コンテンツを格納しています。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のフッター行に表示するテキスト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "下部でフッター行を表示する、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、FooterText または<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A></xref:System.Web.UI.WebControls.DetailsView>。 FooterText プロパティを使用すると、フッター行に表示するのにテキストを指定できます。 フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>。 設定して、ページ フッター行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>。      > [!NOTE] > 場合、両方の FooterText と<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>プロパティを設定、<xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>。       FooterText の値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1250_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1250_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "フッター行に表示するテキストです。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールを対象とするコールバック イベントの結果を返します。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>制御を実装して、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>データと、コントロールに取得したデータを返す GetCallbackResult メソッドを取得します</xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A></xref:System.Web.UI.ICallbackEventHandler></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "コールバックの結果。"
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された引数を使用して作成されたコールバックの文字列を返します。"
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "このコントロールは、コールバックを開始します。"
    - id: argument
      type: System.String
      description: "コールバック コードです。"
    return:
      type: System.String
      description: "クライアントに送信される完了コールバックの文字列。"
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の枠線のスタイル、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "グリッド線のプロパティのグリッド線のスタイルを指定を使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 次の表は、使用できるスタイルを示します。      |スタイル |説明 |  |-----------|-----------------|  |`GridLines.None`|グリッド線は表示されません |。  |`GridLines.Horizontal`|水平グリッド線のみが表示されます |。  |`GridLines.Vertical`|垂直方向のグリッド線のみが表示されます |。  |`GridLines.Both`|水平方向および垂直のグリッドの線が表示されます |。"
  example:
  - "The following code example demonstrates how to use the GridLines property to hide all gridlines in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1023_1.aspx)]\n [!code-cs[DetailsViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1023_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>にヘッダー行を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "上部にヘッダー行が表示されます、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>または<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A></xref:System.Web.UI.WebControls.DetailsView>。 HeaderRow プロパティにプログラムでアクセスを使用して、<xref:System.Web.UI.WebControls.DetailsViewRow>ヘッダー行を表すオブジェクト</xref:System.Web.UI.WebControls.DetailsViewRow>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>プロパティは、使用した場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>コントロールのヘッダー行の作成、<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>。       たとえば、カスタム コンテンツを追加するときに、ヘッダー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 HeaderRow プロパティに対する変更は、後に行う必要があります、<xref:System.Web.UI.WebControls.DetailsView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.DetailsView>コントロール変更は上書きされます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。"
  example:
  - "The following code example demonstrates how to use the HeaderRow property to access the header row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom header row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_730_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_730_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>にヘッダー行を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>ヘッダー行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "上部にヘッダー行が表示されます、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>または<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A></xref:System.Web.UI.WebControls.DetailsView>。 ヘッダー行の外観を制御した後のプロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `HeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `HeaderStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify the font and style settings for the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>ヘッダー行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のユーザー定義のコンテンツにヘッダー行を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロール。"
  remarks: "上部にヘッダー行が表示されます、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>か HeaderTemplate プロパティを設定します</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A></xref:System.Web.UI.WebControls.DetailsView>。 HeaderTemplate プロパティを使用して、ヘッダー行の独自のカスタム ユーザー インターフェイス (UI) を定義できます。 ヘッダー行のカスタム テンプレートを指定するには、まず配置`<HeaderTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<HeaderTemplate>`タグ。 ヘッダー行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>。 または、単に表示できますテキストのヘッダー行を設定して、<xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>。      > [!NOTE] > 両方、 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>HeaderTemplate プロパティが設定されて、HeaderTemplate プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>。"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom header row.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_748_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_748_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>ヘッダー行のカスタム コンテンツを格納しています。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のヘッダー行に表示するテキスト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "上部にヘッダー行が表示されます、<xref:System.Web.UI.WebControls.DetailsView>タイミングを制御、HeaderText または<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A></xref:System.Web.UI.WebControls.DetailsView>。 HeaderText プロパティを使用すると、ヘッダー行に表示するのにテキストを指定できます。 ヘッダー行のスタイルを制御するを使用して、<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>。 設定して、ヘッダー行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>このプロパティではなくプロパティ</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>。      > [!NOTE] > 場合、両方の HeaderText と<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>プロパティを設定、<xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>プロパティが優先されます</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A></xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>。       HeaderText の値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_786_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_786_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "ヘッダー行に表示するテキストです。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.DetailsView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の水平方向の配置、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>ページ上のコントロールです。"
  remarks: "水平方向の配置を指定する、HorizontalAlign プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>ページ内のコントロールです</xref:System.Web.UI.WebControls.DetailsView>。 次の表は、さまざまな水平方向の配置のスタイルを一覧表示します。      |HorizontalAlign 値 |説明 |  |---------------------------|-----------------|  |`HorizontalAlign.NotSet`|<xref:System.Web.UI.WebControls.DetailsView>コントロールの水平方向の配置が設定されていません |。  |`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.DetailsView>コントロールがページの左側に配置します |。  |`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.DetailsView>コントロールがページの中央に配置します |。  |`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.DetailsView>コントロールがページの右側に配置します |。  |`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページの左と右の余白に揃えられます |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 。"
  example:
  - "The following code example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.DetailsView> control should be centered on the page.  \n  \n [!code-cs[DetailsViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_375_1.aspx)]\n [!code-vb[DetailsViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_375_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ページャー行を作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "InitializePager メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>ページャー行を作成するコントロール</xref:System.Web.UI.WebControls.DetailsView>。 作成、<xref:System.Web.UI.WebControls.TableCell>のプロパティを使用してナビゲーション コントロールを格納しているオブジェクト、<xref:System.Web.UI.WebControls.PagedDataSource>に含まれているオブジェクト、`pagedDataSource`パラメーター</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 。 セルがで指定される行に追加し、`row`パラメーター。"
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>ページャー行を格納しています。"
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref>現在のページのデータを格納しています。"
  overload: System.Web.UI.WebControls.DetailsView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  id: InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された初期化<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>オブジェクト。"
  remarks: "InitializeRow メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールを指定された初期化<xref:System.Web.UI.WebControls.DetailsViewRow>オブジェクト</xref:System.Web.UI.WebControls.DetailsViewRow></xref:System.Web.UI.WebControls.DetailsView>。 行は、<xref:System.Web.UI.WebControls.DataControlField>オブジェクトに含まれている、`field`パラメーター</xref:System.Web.UI.WebControls.DataControlField> 。"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>を初期化します。"
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>行に対応します。"
  overload: System.Web.UI.WebControls.DetailsView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースの現在のレコードを挿入します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モードでは、プログラムによってデータ ソースの現在のレコードを挿入する InsertItem メソッドを使用します</xref:System.Web.UI.WebControls.DetailsView>。 このメソッドは通常の外部から現在のレコードを挿入する必要がある場合に使用、<xref:System.Web.UI.WebControls.DetailsView>を制御するなど、ページ上の異なるコントロールから</xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DetailsView>このメソッドが呼び出される、それ以外の場合に、コントロールが挿入モードである必要があります、<xref:System.Web.HttpException>例外がスローされます</xref:System.Web.HttpException></xref:System.Web.UI.WebControls.DetailsView>。       挿入操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。 このメソッドもが発生し、<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>と<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemInserting></xref:System.Web.UI.WebControls.DetailsView.ItemInserted>。"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メソッドが呼び出されると; ページの検証を実行するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in insert mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールが挿入操作を実行するときに呼び出されるページ上のメソッドの名前を設定します。"
  remarks: "Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "コントロールが挿入操作を実行するときに呼び出されるページ上のメソッドの名前です。"
  overload: System.Web.UI.WebControls.DetailsView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内のデータ行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>タイミングを制御、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールが挿入モードになっています。"
  remarks: "データの行では、<xref:System.Web.UI.WebControls.DetailsView>このスタイルを使用してコントロールが表示されるときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールが挿入モード</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。 挿入モードでのデータ行の外観を制御するのにには、InsertRowStyle プロパティを使用します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `InsertRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `InsertRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the InsertRowStyle property to specify the font and style settings for the data rows when the <xref:System.Web.UI.WebControls.DetailsView> control is in insert mode.  \n  \n [!code-cs[DetailsViewInsertRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_63_1.aspx)]\n [!code-vb[DetailsViewInsertRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_63_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内のデータ行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>タイミングを制御、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールが挿入モードになっています。"
  overload: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたデータ型を内のフィールドにバインドできるかどうかを判断、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "IsBindableType メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロール内のフィールドに指定されたデータ型をバインドできるかどうかを決定するコントロール</xref:System.Web.UI.WebControls.DetailsView>。 <xref:System.Web.UI.WebControls.DetailsView>コントロールは、次のデータ型をサポートしています: などのすべてのプリミティブ データ型<xref:System.Boolean>、 <xref:System.Byte>、および<xref:System.Int32><xref:System.DateTime><xref:System.Decimal><xref:System.Guid><xref:System.String></xref:System.String>       </xref:System.Guid>       </xref:System.Decimal>       </xref:System.DateTime>       </xref:System.Int32></xref:System.Byte></xref:System.Boolean></xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>を確認するデータ型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したデータ型のフィールドに連結することができます、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のボタンのときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールをクリックします。"
  remarks: "ItemCommand イベントは内でのボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールをクリックします</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>オブジェクトがクリックされたボタンのコマンドの引数とコマンドの名前を決定することができます、イベント ハンドラーに渡されます</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>。 現在のレコードのインデックスを確認するを使用して、<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.DetailsView> control. When the user clicks the Add Contact button, the item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_53_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_53_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DetailsViewCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "レコードを作成するときに発生する<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロール。"
  remarks: "ItemCreated イベントにレコードを作成するたびに、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 これは、コントロールが最初にレンダリングされるときに、またはユーザーが別のレコードに移動したときに発生します。 このイベントを使用すると、このイベントが発生するたびに、カスタム コンテンツを行を追加するなど、カスタムのルーチンを実行するイベント ハンドラーを提供します。       ヘッダー、フッター、およびポケットベルの行にアクセスすることができます、<xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>、 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>、 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>、または<xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A></xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A></xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A></xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A></xref:System.Web.UI.WebControls.DetailsView>。 データ行のいずれかのアクセス を使用して、<xref:System.Web.UI.WebControls.DetailsView.Rows%2A>コレクションです</xref:System.Web.UI.WebControls.DetailsView.Rows%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemCreated event to update a custom pager row with current paging statistics.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_31_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_31_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内の削除 ボタンのときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがクリックされたが、削除操作の完了後します。"
  remarks: "ItemDeleted イベントは内での削除 ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされたが、削除操作の完了後します</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、削除操作の結果のチェックなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs>とが発生する例外の影響を受ける行の数を決定することができますのイベント ハンドラー オブジェクトが渡されます</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs>。 かどうか、例外が処理されたイベントのハンドラーを設定して指定することも、<xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemDeleted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs a delete operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_62_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内の削除 ボタンのときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがクリックされた削除操作の前にします。"
  remarks: "ItemDeleting イベントは内での削除 ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされた削除操作の前にします</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、削除操作の取り消しなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs>オブジェクトが削除されるレコードのインデックスを確認し、削除操作を取り消す必要があることを示すために使用できるイベント ハンドラーに渡されます</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs>。 削除操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。 操作することも、<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A>コレクション、必要に応じて、値は、データ ソースに渡される前に、</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A> 。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemDeleting event to cancel the delete operation if the user attempts to delete the last item from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[DetailsViewItemDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_56_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内で、[挿入] ボタンのときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがクリックされたが、挿入操作の完了後します。"
  remarks: "ItemInserted イベントは内で、[挿入] ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされたが、挿入操作の完了後します</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、挿入操作の結果を確認などのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs>とが発生する例外の影響を受ける行の数を決定することができますのイベント ハンドラー オブジェクトが渡されます</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs>。 かどうか、例外が処理されたイベントのハンドラーを設定して指定することも、<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A>。 ために、コントロール挿入モードで挿入操作の後、設定、<xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>プロパティを`true`</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemInserted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an insert operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_55_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内で、[挿入] ボタンのときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールをクリックすると、挿入操作の前にします。"
  remarks: "ItemInserting イベントは内で、[挿入] ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールをクリックすると、挿入操作の前にします</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、挿入操作の取り消しなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs>オブジェクトは挿入操作を取り消す必要があることを示すために使用できるイベント ハンドラーに渡されます</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs>。 挿入操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。 操作することも、<xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>コレクション、必要に応じて、値は、データ ソースに渡される前に、</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A> 。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemInserting event to HTML-encode the values entered by the user before a new record is added to the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_70_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_70_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内での更新ボタンときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがクリックされたが、更新操作の完了後します。"
  remarks: "ItemUpdated イベントは内で、[更新] ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされたが、更新操作後</xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、更新操作の結果のチェックなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>とが発生する例外の影響を受ける行の数を決定することができますのイベント ハンドラー オブジェクトが渡されます</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>。 かどうか、例外が処理されたイベントのハンドラーを設定して指定することも、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>。 編集モードで、管理を続けるため、更新操作の後、設定、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>プロパティを`true`</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemUpdated event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an update operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_43_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_43_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内での更新ボタンときに発生、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールをクリックすると、更新操作の前にします。"
  remarks: "ItemUpdating イベントはときに更新 ボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロールがクリックされたが、更新操作前に、</xref:System.Web.UI.WebControls.DetailsView> 。 これにより、このイベントが発生するたびに、更新操作の取り消しなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs>オブジェクトが更新されるレコードのインデックスを確認し、更新操作を取り消す必要があることを示すために使用できるイベント ハンドラーに渡されます</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs>。 更新操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。 操作することも、 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A>、 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A>、および<xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A>コレクション、必要に応じて、値は、データ ソースに渡される前に、</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A> 。 これらのコレクションを使用する一般的な方法では、データ ソースに格納する前に、ユーザーによって指定された値を HTML エンコードです。 これは、スクリプト インジェクション攻撃を防ぐのに役立ちます。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ItemUpdating event to HTML-encode the values entered by the user before a record is updated in the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したプロパティの状態を読み込みます、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>場合でも、永続化する必要があるコントロール、<xref:System.Web.UI.Control.EnableViewState*>プロパティに設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.Control.EnableViewState*> 。"
  remarks: "LoadControlState メソッドを使用して、プロパティの状態を読み込み、<xref:System.Web.UI.WebControls.DetailsView>場合でも、永続化する必要があるコントロール、<xref:System.Web.UI.Control.EnableViewState%2A>プロパティに設定されている`false`</xref:System.Web.UI.Control.EnableViewState%2A></xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] > を拡張する場合、このメソッドは、主にコントロールの開発者によって使用、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>の状態を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール</xref:System.Object>。"
  overload: System.Web.UI.WebControls.DetailsView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "以前に保存したビューステートを読み込みます、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドはの以前に保存したビューステートの読み込みに使用、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>の状態を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール</xref:System.Object>。"
  overload: System.Web.UI.WebControls.DetailsView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>後が、編集、挿入、および読み取り専用モードでは、間に変更しようとしているコントロール、<xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>プロパティを更新します</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>。"
  remarks: "ModeChanged イベントが発生したときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールが、編集、挿入、および読み取り専用モードでは、間が後を変更しようとしています、<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>プロパティを更新します。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 。 これにより、同期など、カスタムのルーチンを実行するイベント ハンドラーを提供する、<xref:System.Web.UI.WebControls.DetailsView>このイベントが発生するたびに、別のコントロールでのコントロールです</xref:System.Web.UI.WebControls.DetailsView>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ModeChanged event to display the current mode in the header row.  \n  \n [!code-cs[DetailsViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_76_1.aspx)]\n [!code-vb[DetailsViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_76_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールが、編集、挿入、および読み取り専用モードの間にその前に変更しようとしています、<xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>プロパティを更新します。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*> 。"
  remarks: "ModeChanging イベントが発生したときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールが、編集、挿入、および読み取り専用モードの間にその前に変更しようとしています、<xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>プロパティを更新します。</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 。 これにより、このイベントが発生するたびにモードの変更の取り消しなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       A<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs>オブジェクトは、新しいモードの決定、モードの変更が編集操作を取り消すユーザーの結果であるかどうかを確認するのにまたはモードの変更をキャンセルできるイベント ハンドラーに渡されます</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs>。 新しいモードを確認するには<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A>。 モードの変更が、ユーザーの編集操作のキャンセルの結果をしたかどうかを判断するのには、使用、<xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A>。 モードの変更をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the ModeChanging event to disable the paging feature when the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-cs[DetailsViewModeChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[DetailsViewModeChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewModeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Web サーバー コントロールのイベントをページのユーザー インターフェイス (UI) サーバー コントロールの階層構造に渡すかどうかを判断します。"
  remarks: "OnBubbleEvent メソッドを実装する、<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>ページ階層に子コントロールからイベントを渡す方法</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>。"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>イベントが取り消された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;> </xref>イベント。"
  remarks: "OnDataSourceViewChanged メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.DataSourceView.DataSourceViewChanged>イベント</xref:System.Web.UI.DataSourceView.DataSourceViewChanged></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnDataSourceViewChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref>イベント。"
  remarks: "OnInit メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.Control.Init>イベント</xref:System.Web.UI.Control.Init></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnInit メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;> </xref>イベント。"
  remarks: "OnItemCommand メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCommand></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCreated&quot;> </xref>イベント。"
  remarks: "OnItemCreated メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemCreated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleted&quot;> </xref>イベント。"
  remarks: "OnItemDeleted メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemDeleted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeletedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;> </xref>イベント。"
  remarks: "OnItemDeleting メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemDeleting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeleteEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ハンドラーがない、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserted&quot;> </xref>イベント。"
  remarks: "OnItemInserted メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemInserted></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemInserted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;> </xref>イベント。"
  remarks: "OnItemInserting メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemInserting></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemInserting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ハンドラーがない、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdated&quot;> </xref>イベント。"
  remarks: "OnItemUpdated メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemUpdated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;> </xref>イベント。"
  remarks: "OnItemUpdating メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnItemUpdating メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdateEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ハンドラーがない、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanged&quot;> </xref>イベント。"
  remarks: "OnModeChanged メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>イベント</xref:System.Web.UI.WebControls.DetailsView.ModeChanged></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnModeChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;> </xref>イベント。"
  remarks: "OnModeChanging メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>イベント</xref:System.Web.UI.WebControls.DetailsView.ModeChanging></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnModeChanging メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewModeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ハンドラーがない、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanged&quot;> </xref>イベント。"
  remarks: "OnPageIndexChanged メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>イベント</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnPageIndexChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanging&quot;> </xref>イベント。"
  remarks: "OnPageIndexChanging メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.DetailsView>させるコントロール、<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>イベント</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging></xref:System.Web.UI.WebControls.DetailsView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnPageIndexChanging メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewPageEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "このメソッドが呼び出されます、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがデータ ソース コントロールにバインドされていない、ページング操作が取り消されないとイベントのイベント ハンドラーが登録されていません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールが読み込まれる前に、データ バインド コントロールの初期化状態を設定します。"
  remarks: "データ バインディングが、ページのライフ サイクル内で発生したときは、OnPagePreLoad メソッドをコントロールに使用されます。 この機能を使用するには、データ バインド コントロールの内部初期化状態を設定します。 コントロールの状態が初期化ために、中に設定されて、 <xref:System.Web.UI.Page.PreLoad>、ページのライフ サイクルの段階、<xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A>イベント ハンドラーには、いつでも、コントロールのデータ プロパティは、コントロールをレンダリングする前にそのデータを再バインドする必要があることを通知する、そのフェーズ後に変更が呼び出されます</xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A></xref:System.Web.UI.Page.PreLoad>。       OnPagePreLoad メソッドによって、<xref:System.Web.UI.WebControls.DetailsView>を設定するクラス、<xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A>プロパティを`true`HTTP 要求は、ポストバックされビュー ステートが有効になっているが、データ バインド コントロールがバインドされていない場合</xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A></xref:System.Web.UI.WebControls.DetailsView>。 このシナリオはなどのコントロールでは一般的な<xref:System.Web.UI.WebControls.Wizard>と<xref:System.Web.UI.WebControls.MultiView>、実行時に、コントロールの表示が変更されている</xref:System.Web.UI.WebControls.MultiView></xref:System.Web.UI.WebControls.Wizard>。"
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>イベントが発生しました。"
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベント。"
  remarks: "このメソッドでは、ビュー状態と内容の表示を保存する前に、必要な表示前の手順を実行するサーバー コントロールに通知します。通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.DetailsView>クラス</xref:System.Web.UI.WebControls.DetailsView>を拡張する場合       OnPreRender メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DetailsView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースのレコードの数を取得します。"
  remarks: "場合、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>プロパティは`null`、`0`が返されます</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>。"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "データ ソースのレコードの数。"
  overload: System.Web.UI.WebControls.DetailsView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または表示されているレコードのインデックスを設定します。"
  remarks: "ページング機能が有効な場合 (ときに、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティに設定されている`true`)、PageIndex プロパティを使用して、現在表示されているレコードのインデックスを確認します</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 このプロパティを使用して、プログラムで表示されているレコードを変更することができますも。      > [!NOTE] > も表示されます。 レコードのページ数を決定するこのプロパティを使用することができますページング機能を有効にすると、ただし、このプロパティは、0 から始まることに注意してください。       データ ソース内の項目の合計数を調べるを使用して、<xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>。"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "表示されているデータ項目の&0; から始まるインデックス、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>基になるデータ ソースからです。"
  overload: System.Web.UI.WebControls.DetailsView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値より小さい<xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときの値、<xref:System.Web.UI.WebControls.DetailsView.PageIndex*>ページング操作の後にプロパティが変更された</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページャー ボタン PageIndexChanged イベントを発生させます (ボタンがその`CommandName`プロパティを&quot;ページ&quot;に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページング操作を処理します。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント ハンドラーを提供できます。      > [!NOTE] > プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>。       ページャー ボタンがのページャー行に配置は、通常、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 このイベントは、多くの場合、同期するために使用、<xref:System.Web.UI.WebControls.DetailsView>コントロールを<xref:System.Web.UI.WebControls.GridView>コントロールの動作を設定するか、<xref:System.Web.UI.WebControls.DetailsView>ページング操作の後に制御します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.DetailsView> to read-only mode when the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_59_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_59_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときの値、<xref:System.Web.UI.WebControls.DetailsView.PageIndex*>ページング操作の前にプロパティが変更された</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページャー ボタン PageIndexChanging イベントを発生させます (ボタンがその`CommandName`プロパティを「ページ」に設定) コントロール内でクリックすると、その前に、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、ページング操作を処理します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、ページング操作の取り消しなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。      > [!NOTE] > プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>。       ページャー ボタンがのページャー行に配置は、通常、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。       A<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>により、ユーザーが選択したページのインデックスを確認して、ページング操作を取り消す必要があることを示すために、イベント ハンドラーにオブジェクトが渡されます</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>。 ユーザーが選択したページのインデックスを確認するには<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A>。 ページング操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_38_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_38_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewPageEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref>でページャー ボタンのプロパティを設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "ページャー行の設定を制御する PagerSettings プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 ページャー行を表示すると、ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`) し、ユーザーがコントロール内の別のレコードに移動できるようにするコントロールが含まれています</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクトを返します</xref:System.Web.UI.WebControls.PagerSettings>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクト (たとえば、 `PagerSetting-Mode`).</xref:System.Web.UI.WebControls.PagerSettings> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerSetting.Mode`)。 通常、一般的な設定には、ポケットベルによる行の表示モードとカスタム テキスト、またはナビゲーション コントロールのイメージが含まれます。"
  example:
  - "The following code example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1242_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1242_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref>でページャー ボタンのプロパティを設定することができます、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のページャー行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "ページャー行の外観を制御する PagerStyle プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 ページャー行を表示すると、ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`) し、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `PagerStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the PagerStyle property to specify the font and style settings for the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1045_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1045_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のページャー行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のカスタム コンテンツのページャー行を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロール。"
  remarks: "ページャー行が表示されます、<xref:System.Web.UI.WebControls.DetailsView>制御ページング機能が有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを true に).</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> </xref:System.Web.UI.WebControls.DetailsView> ページャー行には、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 組み込みのページャー行ユーザー インターフェイス (UI) を使用する代わりに、後のプロパティを使用して、独自の UI を定義できます。 ページャー行用のカスタム テンプレートを指定するには、まず配置`<PagerTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<PagerTemplate>`タグ。 ページャー行の外観を制御する、<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>。"
  example:
  - "The following code example demonstrates how to use the PagerTemplate property to create a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_501_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_501_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>ページャー行のカスタム コンテンツを格納しています。 既定値は、このプロパティが設定されていないことを示す null です。"
  overload: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したデータ ソースへのバインド、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "PerformDataBinding メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールのコントロールに指定されたデータ ソースをバインドします</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>データ ソースを表す</xref:System.Collections.IEnumerable>。"
  overload: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールの上位階層の設定、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "PrepareControlHierarchy メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールでコントロールの階層を設定する、<xref:System.Web.UI.WebControls.DetailsView>コントロールが表示される前に制御します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コールバック ハンドラーの引数を作成、<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>メソッド</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>。"
  remarks: "RaiseCallbackEvent メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>のコールバック ハンドラーの引数を作成するコントロールを<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>メソッド</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡す引数。"
  overload: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "適切なイベントを発生させる、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>サーバーへのポストバック時に制御します。"
  remarks: "ページがポストバック イベントが発生したときに、メソッドの適切なイベントを発生させる RaisePostBackEvent を呼び出して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 この呼び出しは、事前に発生する前に、読み込みと変更の通知が完了したら、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、<xref:System.Web.UI.WebControls.CommandEventArgs>が発生するイベントのオブジェクト</xref:System.Web.UI.WebControls.CommandEventArgs>。      > [!NOTE] > を拡張するこのメソッドが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "作成元のイベントの引数、 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref>イベントかが発生するイベントです。"
  overload: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>指定して、クライアント上のコントロール<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>オブジェクト。"
  remarks: "Render メソッドを指定して、クライアントのブラウザーにサーバー コントロールの内容を表示するために使用<xref:System.Web.UI.HtmlTextWriter>オブジェクト</xref:System.Web.UI.HtmlTextWriter>。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>クライアントで表示する出力ストリームを格納しています。"
  overload: System.Web.UI.WebControls.DetailsView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;></xref>内のデータ行を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "内のデータ行を格納する行のプロパティ (コレクション) が使用される、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 <xref:System.Web.UI.WebControls.DetailsView>コントロールは自動的に作成することで、行コレクションを設定、<xref:System.Web.UI.WebControls.DetailsViewRow>データ ソース内の各レコード オブジェクトをコレクションにオブジェクトを追加します</xref:System.Web.UI.WebControls.DetailsViewRow></xref:System.Web.UI.WebControls.DetailsView>。 コントロール内の特定の行にアクセスする、または行のコレクション全体を反復処理する場合は、このプロパティは使用一般的です。      > [!NOTE] > データ行のみが、行コレクションに格納されています。 <xref:System.Web.UI.WebControls.DetailsViewRow>ヘッダー、フッター、およびページャー行を表すオブジェクトは、コレクションに含まれません</xref:System.Web.UI.WebControls.DetailsViewRow>。"
  example:
  - "The following code example demonstrates how to use the Rows property to access a data row in a <xref:System.Web.UI.WebControls.DetailsView> control. The data row is used to retrieve the value of a field from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1064_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1064_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref>内のすべてのデータ行を格納している、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  id: RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を実装するオブジェクト、 <xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;> </xref>インターフェイス ビューの行を自動的に設定するためにします。"
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "実装するオブジェクト、 <xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;> </xref>インターフェイスです。"
  overload: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内のデータ行の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "内のデータ行の外観を制御する RowStyle プロパティを使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。 ときに、<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>プロパティが設定されても、RowStyle 設定間で切り替えると、データ行が表示されます、<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>設定</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TableItemStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `RowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `RowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。"
  example:
  - "The following code example demonstrates how to use the RowStyle property to specify the font and style settings for the data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_619_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_619_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内のデータ行のスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したプロパティの状態を保存、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>場合でも、永続化する必要があるコントロール、 &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt;プロパティに設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  remarks: "このメソッドは、プロパティの状態を保存する使用、<xref:System.Web.UI.WebControls.DetailsView>場合でも、永続化する必要があるコントロール、<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>プロパティに設定されている`false`</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] > を拡張するこのメソッドが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "サーバー コントロールの現在のビューステートを返します。 このメソッドが戻るかどうかは、コントロールに関連付けられているビュー ステートがない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のビューステートを保存、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "SaveViewState メソッドは、によって呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DetailsView>コントロールの状態を保存するコントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>の保存された状態を格納している、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール</xref:System.Object>。"
  overload: System.Web.UI.WebControls.DetailsView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のレコードのデータのキー値を取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "SelectedValue プロパティを使用して、現在のレコードのデータのキー値を決定します。 取得、実際に<xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>を使用して、レコードのデータ キーを表すオブジェクト、<xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A></xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>。       このプロパティは、既定のプロパティを<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトは実行時にバインドします</xref:System.Web.UI.WebControls.ControlParameter>。 詳細については、次を参照してください<xref:System.Web.UI.ControlValuePropertyAttribute>、 <xref:System.Web.UI.WebControls.ControlParameter>、および[フィルターのデータ ソース コントロールを持つパラメーターの使用](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.ControlValuePropertyAttribute> 。"
  example:
  - "The following code example demonstrates how to use the SelectedValue property to determine the data key value for the current record.  \n  \n [!code-cs[DetailsViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_453_1.aspx)]\n [!code-vb[DetailsViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_453_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "データのキー値の現在のレコード、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在表示されているページのインデックスを設定、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "設定するインデックス値。"
  overload: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*>。</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*>メソッドを参照してください。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>データを取得して<xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A></xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A></xref:System.Web.UI.ICallbackEventHandler></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "コールバックの結果。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した引数を使用して、コールバック イベントを発生させます。"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント引数。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>。</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>インスタンスにキャスト、<xref:System.Web.UI.IDataItemContainer>インターフェイス</xref:System.Web.UI.IDataItemContainer></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "返します、<xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>値</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.IDataItemContainer.DisplayIndex*>。</xref:System.Web.UI.IDataItemContainer.DisplayIndex*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>インスタンスにキャスト、<xref:System.Web.UI.IDataItemContainer>インターフェイス</xref:System.Web.UI.IDataItemContainer></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "Returns <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>インスタンスにキャスト、<xref:System.Web.UI.IPostBackEventHandler>インターフェイス</xref:System.Web.UI.IPostBackEventHandler></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すオプションのイベント引数を表す文字列。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コールバック スクリプトを作成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "このメソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.DetailsView>コントロールをこのコールバックを生成するスクリプト</xref:System.Web.UI.WebControls.DetailsView> 場合、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、クライアント スクリプトを表示できない場合、または、`argument`パラメーターは`null`または空の文字列 (&quot;&quot;)、このメソッドが戻る`null`</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "ページに掲載されているボタン コントロールは、サーバーにバックアップします。"
    - id: argument
      type: System.String
      description: "コールバック イベントの引数。"
    return:
      type: System.String
      description: "コールバック スクリプトを<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "データ バインド コントロールに表示されるアイテムの主キー フィールドの名前を格納する配列。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataMember%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "データの一覧の名前を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロールにバインドします。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSource%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "元のデータ ソースを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールがそのデータを取得します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceID%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "データの一覧を含むデータ ソース コントロールの ID の項目を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>取得を制御します。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "データの一覧を格納しているオブジェクトの項目を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>取得を制御します。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.DataKey%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "内の行のデータ キーの値を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.Mode%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IDataBoundControl>インターフェイス</xref:System.Web.UI.WebControls.IDataBoundControl></xref:System.Web.UI.WebControls.DetailsView>。       The <xref:System.Web.UI.WebControls.DetailsView> can be set to `ReadOnly`, `Edit` or `Delete`.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "現在のモード、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このプロパティの説明を参照してください。 &lt;xref:System.Web.UI.WebControls.IFieldControl.FieldsGenerator%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IFieldControl>インターフェイス</xref:System.Web.UI.WebControls.IFieldControl></xref:System.Web.UI.WebControls.DetailsView>。       このプロパティを使用して自動的に生成の列を<xref:System.Web.UI.WebControls.DetailsView>ASP.NET Dynamic Data 機能を使用するコントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "コントロールの列が自動的に生成、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DetailsView>インスタンスにキャスト、<xref:System.Web.UI.IPostBackEventHandler>インターフェイス</xref:System.Web.UI.IPostBackEventHandler></xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "クライアント側のポストバック イベントを生成するコントロール。"
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>に必要な情報と<xref:System.Web.UI.Page.GetPostBackEventReference*>クライアントで実行すると、クライアントを開始、ポストバック有効なスクリプトを作成します</xref:System.Web.UI.Page.GetPostBackEventReference*>。"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buttonControl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>検証、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロールと同じものを使用しよう<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>ポストバックのターゲットとしてコントロール。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>値を<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>コントロール。"
  remarks: "TagKey プロパティでは、出力ストリームの適切な HTML マークアップを記述する、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView>。"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "場合<xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、このプロパティを返します<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref></xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*> 。 返しますそれ以外の場合、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>の最上位のページャー行を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "ページングが有効な場合 (設定して、<xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>プロパティを`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>。 ページャー行には、上部、下部、または両方の上部と下部コントロールの表示可能なユーザーが、他のレコードに移動できるようにするコントロールが含まれています。 TopPagerRow プロパティにプログラムでアクセスを使用して、<xref:System.Web.UI.WebControls.DetailsViewRow>の最上位のページャー行を表すオブジェクト、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsViewRow>。      > [!NOTE] >、TopPagerRow プロパティは後にのみ使用可能な<xref:System.Web.UI.WebControls.DetailsView>コントロールは、下のページャー行を作成、<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCreated></xref:System.Web.UI.WebControls.DetailsView>。       カスタム コンテンツを追加する場合の例については、最上位のページャー行をプログラムで操作する必要がある場合、このプロパティは使用一般的です。 TopPagerRow プロパティに対する変更は、後に行う必要があります、<xref:System.Web.UI.WebControls.DetailsView>レンダリングされた、それ以外のコントロールが表示された、<xref:System.Web.UI.WebControls.DetailsView>コントロール変更は上書きされます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView>。"
  example:
  - "The following code example demonstrates how to use the TopPagerRow property to access the top pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-vb[DetailsViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_822_1.aspx)]\n [!code-cs[DetailsViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_822_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref>の最上位のページャー行を表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示状態変更の追跡と保存を開始する開始位置をマーク、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "このメソッドをオーバーライドして、コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークします。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースの現在のレコードを更新します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードでは、プログラムによって、データ ソースの現在のレコードを更新する UpdateItem メソッドを使用します</xref:System.Web.UI.WebControls.DetailsView>。 このメソッドは通常の外部から現在のレコードを更新する必要がある場合に使用、<xref:System.Web.UI.WebControls.DetailsView>を制御するなど、ページ上の異なるコントロールから</xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DetailsView>このメソッドが呼び出される、それ以外の場合に、コントロールが編集モードにする必要があります、<xref:System.Web.HttpException>例外がスローされます</xref:System.Web.HttpException></xref:System.Web.UI.WebControls.DetailsView>。       更新操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。 このメソッドもが発生し、<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>と<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating></xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>。"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メソッドが呼び出されると; ページの検証を実行するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in edit mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロール更新操作を実行するときに呼び出されるページのメソッドの名前を設定します。"
  remarks: "Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "コントロール更新操作を実行するときに呼び出されるページ上のメソッドの名前です。"
  overload: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRow
  nameWithType: DetailsViewRow
  fullName: System.Web.UI.WebControls.DetailsViewRow
- uid: System.Web.UI.WebControls.DetailsView.Caption
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
- uid: System.Web.UI.WebControls.DetailsViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewMode
  nameWithType: DetailsViewMode
  fullName: System.Web.UI.WebControls.DetailsViewMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventHandler
  nameWithType: DetailsViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventHandler
  nameWithType: DetailsViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventHandler
  nameWithType: DetailsViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
- uid: System.Web.UI.WebControls.DetailsViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventHandler
  nameWithType: DetailsViewInsertEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventHandler
  nameWithType: DetailsViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventHandler
  nameWithType: DetailsViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
- uid: System.Web.UI.WebControls.DetailsViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventHandler
  nameWithType: DetailsViewModeEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewModeEventHandler
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventArgs
  nameWithType: DetailsViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventArgs
  nameWithType: DetailsViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventArgs
  nameWithType: DetailsViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventArgs
  nameWithType: DetailsViewInsertEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventArgs
  nameWithType: DetailsViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventArgs
  nameWithType: DetailsViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventArgs
  nameWithType: DetailsViewModeEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewModeEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventArgs
  nameWithType: DetailsViewPageEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewPageEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
- uid: System.Web.UI.WebControls.DetailsViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventHandler
  nameWithType: DetailsViewPageEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewPageEventHandler
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DetailsView.Rows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRowCollection
  nameWithType: DetailsViewRowCollection
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
- uid: System.Web.UI.WebControls.DetailsView.#ctor*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView
  nameWithType: DetailsView.DetailsView
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsView.Caption*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode
  nameWithType: DetailsView.ChangeMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow
  nameWithType: DetailsView.CreateAutoGeneratedRow
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows
  nameWithType: DetailsView.CreateAutoGeneratedRows
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls
  nameWithType: DetailsView.CreateChildControls
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle
  nameWithType: DetailsView.CreateControlStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: DetailsView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet
  nameWithType: DetailsView.CreateFieldSet
- uid: System.Web.UI.WebControls.DetailsView.CreateRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow
  nameWithType: DetailsView.CreateRow
- uid: System.Web.UI.WebControls.DetailsView.CreateTable*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable
  nameWithType: DetailsView.CreateTable
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind
  nameWithType: DetailsView.DataBind
- uid: System.Web.UI.WebControls.DetailsView.DataItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem
  nameWithType: DetailsView.DeleteItem
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound
  nameWithType: DetailsView.EnsureDataBound
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues
  nameWithType: DetailsView.ExtractRowValues
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
- uid: System.Web.UI.WebControls.DetailsView.FooterRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult
  nameWithType: DetailsView.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript
  nameWithType: DetailsView.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.GridLines*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager
  nameWithType: DetailsView.InitializePager
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow
  nameWithType: DetailsView.InitializeRow
- uid: System.Web.UI.WebControls.DetailsView.InsertItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem
  nameWithType: DetailsView.InsertItem
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType
  nameWithType: DetailsView.IsBindableType
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState
  nameWithType: DetailsView.LoadControlState
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState
  nameWithType: DetailsView.LoadViewState
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DetailsView.OnBubbleEvent
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DetailsView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.DetailsView.OnInit*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit
  nameWithType: DetailsView.OnInit
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand
  nameWithType: DetailsView.OnItemCommand
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated
  nameWithType: DetailsView.OnItemCreated
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted
  nameWithType: DetailsView.OnItemDeleted
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting
  nameWithType: DetailsView.OnItemDeleting
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted
  nameWithType: DetailsView.OnItemInserted
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting
  nameWithType: DetailsView.OnItemInserting
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated
  nameWithType: DetailsView.OnItemUpdated
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating
  nameWithType: DetailsView.OnItemUpdating
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged
  nameWithType: DetailsView.OnModeChanged
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging
  nameWithType: DetailsView.OnModeChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: DetailsView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: DetailsView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: DetailsView.OnPagePreLoad
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender
  nameWithType: DetailsView.OnPreRender
- uid: System.Web.UI.WebControls.DetailsView.PageCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding
  nameWithType: DetailsView.PerformDataBinding
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DetailsView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: DetailsView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: DetailsView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.Render*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render
  nameWithType: DetailsView.Render
- uid: System.Web.UI.WebControls.DetailsView.Rows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState
  nameWithType: DetailsView.SaveControlState
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState
  nameWithType: DetailsView.SaveViewState
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex
  nameWithType: DetailsView.SetPageIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState
  nameWithType: DetailsView.TrackViewState
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem
  nameWithType: DetailsView.UpdateItem
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
