### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.TransactedReceiveScope
  id: TransactedReceiveScope
  children:
  - System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  - System.ServiceModel.Activities.TransactedReceiveScope.Body
  - System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  - System.ServiceModel.Activities.TransactedReceiveScope.Request
  - System.ServiceModel.Activities.TransactedReceiveScope.Variables
  langs:
  - csharp
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope
  fullName: System.ServiceModel.Activities.TransactedReceiveScope
  type: Class
  summary: "受信したメッセージによって開始されるトランザクションの有効期間を制御するアクティビティ。 トランザクションは、開始メッセージでワークフローに流し込むことがあります。 またはメッセージが受信したときに、ディスパッチャーによって作成します。"
  remarks: "TransactedReceiveScope アクティビティでは、フローされたトランザクションの有効期間を制御することができます。      > [!WARNING] > 発信側 TransactedReceiveScope アクティビティの (を含む TransactedReceiveScope、<xref:System.ServiceModel.Activities.Receive>アクティビティと<xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A>&quot;éý&quot; `true`)、ランタイムが TransactedReceiveScope アクティビティの実行を開始する前に、トランザクションが作成された</xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A></xref:System.ServiceModel.Activities.Receive>。 このトランザクションはワークフロー アクティビティ レイヤーではアンビエントではありませんが、基になる永続性レイヤーではアンビエントです。 ワークフローの実行が発生した場合、 <xref:System.Activities.Statements.Persist>TransactedReceiveScope アクティビティの前にアクティビティをランタイムはアンビエント トランザクションで永続化を試行します</xref:System.Activities.Statements.Persist>。 この動作により、トランザクションが完了するまでブロックをします。 ワークフローの実行に達していないため、 <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> セクションで、トランザクションを完了できません</xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A>。 このデッドロックが原因で、ワークフローが、トランザクションがタイムアウトするまでの応答を停止します。 トランザクションがタイムアウトすると、新しく作成されたインスタンスは中止されます。      > [!IMPORTANT] > TransactedReceiveScope アクティビティ内でワークフローのすべての受信を配置することを推奨 TransactedReceiveScope を使用するたびにします。      > [!IMPORTANT] > TransactedReceiveScope の使用時に正しくない順序で受信されるメッセージと、順不同の最初のメッセージを配信しようとするとき、ワークフローは中止されます。 ワークフローは、常には一貫性のあるで停止ポイント ワークフローがアイドル状態になるときに確認する必要があります。 これによって、前の永続性ポイントからワークフローを再起動するには、ワークフローを中止する必要があります。"
  example:
  - "The following example shows how to use the TransactedReceiveScope class in a <xref:System.Activities.Statements.Sequence> activity.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class TransactedReceiveScope : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref>クラスです。"
  syntax:
    content: public TransactedReceiveScope ();
    parameters: []
  overload: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  id: Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "取得または設定、 <xref href=&quot;System.Activities.Activity&quot;> </xref>の本体を構成、 <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref>アクティビティ。"
  remarks: "トランザクションは、アンビエント、本文の全体の時間です。"
  example:
  - "The following example shows how to set the Body property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Activities.Activity Body { get; set; }
    return:
      type: System.Activities.Activity
      description: "トランザクション処理された受信スコープの本体。"
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "追加します。"
  overload: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "追加します。"
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  id: Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "取得または設定、 <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref>アクティビティに関連付けられた<xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;></xref>アクティビティ。"
  remarks: ''
  example:
  - "The following example shows how to set the Request property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.ServiceModel.Activities.Receive Request { get; set; }
    return:
      type: System.ServiceModel.Activities.Receive
      description: "トランザクション処理された受信スコープに関連付けられている receive アクティビティ。"
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  id: Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "コレクションを取得<xref href=&quot;System.Activities.Variable&quot;></xref>これに関連付けられている<xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;></xref>です。"
  remarks: ''
  example:
  - "The following example shows how to set the Variables property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "トランザクション処理された受信スコープに関連付けられている変数。"
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.Receive
  parent: System.ServiceModel.Activities
  isExternal: false
  name: Receive
  nameWithType: Receive
  fullName: System.ServiceModel.Activities.Receive
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope.TransactedReceiveScope
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata
  nameWithType: TransactedReceiveScope.CacheMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute
  nameWithType: TransactedReceiveScope.Execute
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
