### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnectionStringBuilder
  id: EntityConnectionStringBuilder
  children:
  - System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  - System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  - System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  - System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  - System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  - System.Data.EntityClient.EntityConnectionStringBuilder.Name
  - System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  - System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  - System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: EntityConnectionStringBuilder
  nameWithType: EntityConnectionStringBuilder
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder
  type: Class
  summary: "作成および管理 EntityClient で使用される接続文字列の内容を簡単な方法を提供します。"
  remarks: "接続文字列ビルダーには、開発者がプログラムで正しい構文の接続文字列を作成し、解析およびクラスのプロパティとメソッドを使用して、既存の接続文字列を再構築ことができます。 接続文字列ビルダーは、既知のキーワード/値ペアに対応する厳密に型指定のプロパティを提供します。 アプリケーションの一部として接続文字列を作成する必要がある開発者は、接続文字列を構築および変更 EntityConnectionStringBuilder クラスを使用できます。       EntityConnectionStringBuilder EntityConnectionStringBuilder プロパティの値として公開されるそれぞれの有効なキーワード/値ペアのチェックを実行します。      > [!NOTE] > によって基になるデータ ソースの接続文字列が提供される、<xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A>プロパティ</xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A>。 指定されたプロバイダーの接続文字列は有効なキーワード/値ペアのチェックされません。"
  example:
  - "The following example demonstrates how to use the EntityConnectionStringBuilder in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: 'public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder'
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: EntityConnectionStringBuilder()
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string. Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public EntityConnectionStringBuilder ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: EntityConnectionStringBuilder(String)
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>クラスの指定された接続文字列を使用します。"
  remarks: "指定された`connectionString`有効なキーワード/値ペアがチェックされません。 有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。       プロバイダーの不変名を指定する必要があります、`connectionString`パラメーター。 サポートされているプロバイダー、次のとおりです:-`System.Data.Odbc`      -   `System.Data.OleDb`      -   `System.Data.OracleClient`      -   `System.Data.SqlClient`      -   `Microsoft.SqlServerCe.Client`"
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string. Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties. It does not use the `connectionString` overload.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public EntityConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "基になるデータ ソースへのプロバイダーに固有の接続文字列。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: EntityConnectionStringBuilder.Clear()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "内容をクリア、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>インスタンス。"
  remarks: "Clear メソッドからのすべてのキーワード/値ペアを削除する、<xref:System.Data.EntityClient.EntityConnectionStringBuilder>し、すべての対応するプロパティを null に戻します (`Nothing`で[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]).</xref:System.Data.EntityClient.EntityConnectionStringBuilder>"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: EntityConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "指定するかどうか、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>特定のキーが含まれています。"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "内で検索するキー、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>を持つ、指定した要素が含まれるキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>のサイズが固定されています。"
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべてのケースであるため、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>キーワード/値ペアの固定サイズのコレクションを提供します。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: EntityConnectionStringBuilder.Item(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得または指定されたキーに関連付けられている値を設定します。 C# では、このプロパティは、インデクサーは。"
  remarks: "の<xref:System.Data.EntityClient.EntityConnectionStringBuilder>ディクショナリに存在しないキー スロー <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException>を追加しようとして、固定サイズのディクショナリが含まれています</xref:System.Data.EntityClient.EntityConnectionStringBuilder>       有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "取得または設定する項目のキー。"
    return:
      type: System.Object
      description: "指定したキーに関連付けられている値。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>で[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)])。"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "使用可能なキーが存在しないキーを追加しようとしています。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "接続文字列に無効な値 (具体的には、ブール値または数値が必要ですが指定されていません)。"
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得、<xref:System.Collections.ICollection>内のキーを格納している、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  remarks: "有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>内のキーを格納している、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  id: Metadata
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得または接続文字列内のメタデータの場所を設定します。"
  remarks: "有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public string Metadata { get; set; }
    return:
      type: System.String
      description: "取得または接続文字列内のメタデータの場所を設定します。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  id: Name
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得または構成ファイルで定義されたセクションの名前を設定します。"
  remarks: "有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "構成ファイル内のセクションの名前です。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  id: Provider
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得または設定の基になる名前[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]接続文字列内のデータ プロバイダー。"
  remarks: "プロバイダーの不変名が使用されるを取得、<xref:System.Data.Common.DbProviderFactory>基になるプロバイダーのオブジェクト</xref:System.Data.Common.DbProviderFactory>。       有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "基になるの不変名[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]データ プロバイダー。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  id: ProviderConnectionString
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "取得または内部のプロバイダーに固有の接続文字列を設定します。"
  remarks: "設定前に、プロバイダー固有の接続文字列は有効なキーワード/値ペアのチェックされません。 開発者は、いずれか、厳密に型指定された接続文字列ビルダー クラスを使用して、接続文字列を作成できます。 か、<xref:System.Data.Common.DbConnectionStringBuilder>クラス</xref:System.Data.Common.DbConnectionStringBuilder>を使用できます。 <xref:System.Data.Common.DbConnectionStringBuilder>有効なキーワード/値ペアのチェックは行われません</xref:System.Data.Common.DbConnectionStringBuilder>。 したがって、このクラスを使用して無効な接続文字列を作成することができます。       有効なキーワード/値の構文、 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>を参照してください。"
  syntax:
    content: public string ProviderConnectionString { get; set; }
    return:
      type: System.String
      description: "内部のプロバイダー固有の接続文字列。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: EntityConnectionStringBuilder.Remove(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "指定したキーを持つエントリを削除、 <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>インスタンス。"
  remarks: "`Remove`メソッドの成功を示す値を返しますからキーワード/値ペアを削除する前にキーを検索する必要はありません、<xref:System.Data.EntityClient.EntityConnectionStringBuilder>インスタンス</xref:System.Data.EntityClient.EntityConnectionStringBuilder>。"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "この接続文字列から削除するキーワード/値ペアのキー <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーは、接続文字列が存在しが削除された場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>キーが存在しなかった場合。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)])"
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: EntityConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "これから提供されたキーに対応する値を取得<xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;></xref>です。"
  remarks: "TryGetValue メソッドにより、開発者は安全に値を取得、<xref:System.Data.EntityClient.EntityConnectionStringBuilder>提供されたキー名が有効なキー名であることを確認する必要はありません</xref:System.Data.EntityClient.EntityConnectionStringBuilder>。 `TryGetValue`存在しないキーを渡すと、例外は発生しません。 呼び出す`TryGetValue`存在しないキーで null 値を格納します (`Nothing` Visual Basic で) で、`value`パラメーター。"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "取得する項目のキー。"
    - id: value
      type: System.Object
      description: "対応する値。`keyword.`"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> keyword </code> 、それ以外の接続文字列内で見つかった<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null 値が含まれています (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder()
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder()
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder(String)
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: EntityConnectionStringBuilder.Clear()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Clear()
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: EntityConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: EntityConnectionStringBuilder.Item(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Name
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: EntityConnectionStringBuilder.Remove(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(String)
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: EntityConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: EntityConnectionStringBuilder.Clear
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: EntityConnectionStringBuilder.ContainsKey
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: EntityConnectionStringBuilder.Item
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: EntityConnectionStringBuilder.Remove
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: EntityConnectionStringBuilder.TryGetValue
