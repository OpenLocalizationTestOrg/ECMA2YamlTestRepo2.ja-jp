### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  id: CodeDomSerializerBase
  children:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  langs:
  - csharp
  name: CodeDomSerializerBase
  nameWithType: CodeDomSerializerBase
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  type: Class
  summary: "基本クラスを提供<xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;></xref>クラスです。"
  remarks: "間で共有のベースとして CodeDomSerializerBase クラスが使用される、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>と<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>クラス</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer></xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>。 パブリック<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>クラスは、CodeDomSerializerBase クラスから派生</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> 各パブリック クラスでは、独自のパブリック API を定義します。 CodeDomSerializerBase クラスは、パブリック API は定義されていませんが、さまざまなシリアル化プロセスを支援するために使用できるユーティリティ メソッドを提供しています。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class CodeDomSerializerBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  id: DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "メモリ内オブジェクトに指定された式を逆シリアル化します。"
  remarks: "これは、ヘルパー クラスを派生メソッドは、式を逆シリアル化に呼び出すことができます。 解釈およびによって指定された CodeDOM 式を実行して、ステートメントを逆シリアル化、`expression`パラメーター、し、結果を返します。 指定した名前を指定、オブジェクトは、この式の結果として作成する必要がある場合、`name`パラメーター。 名前を指定できます`null`場合は、オブジェクトの名前を付ける必要はありません。 次の表に、特定の式が処理されます。      |式 |動作 |  |----------------|--------------|  |<xref:System.CodeDom.CodeThisReferenceExpression>|この式を表す`this`または`Me`</xref:System.CodeDom.CodeThisReferenceExpression>。 この式に関連付けられているオブジェクトを見つけるを DeserializeExpression メソッドは<xref:System.ComponentModel.Design.Serialization.RootContext>。</xref:System.ComponentModel.Design.Serialization.RootContext>コンテキスト スタックになります このオブジェクトには、グラフとそれを表す式のルート オブジェクトが含まれています。 オブジェクトが存在し、式が一致する場合は、ルート オブジェクトが返されます。 インスタンスが見つからない場合、エラーが報告されます |。  |<xref:System.CodeDom.CodeFieldReferenceExpression>|ルート オブジェクトに、このフィールド参照のターゲットが評価された場合、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>マネージャーのパラメーターのメソッドを使用して名前に基づいてオブジェクトのインスタンスの取得されます</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A></xref:System.CodeDom.CodeFieldReferenceExpression>。 それ以外の場合、標準のリフレクションは対象のオブジェクトに対して要求されたフィールドの検索に使用します。 フィールドが見つからない場合、エラーが報告されます |。  |<xref:System.CodeDom.CodeVariableReferenceExpression>|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>のメソッド、`manager`パラメーターが指定された変数名を表すインスタンスの検索に使用します</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A></xref:System.CodeDom.CodeVariableReferenceExpression>。 インスタンスが見つからない場合、エラーが報告されます |。      DeserializeExpression は、オブジェクトを完全に解決されるまで、または式を簡略化できますされなくなるまで、式を解釈し続けます。 この場合、DeserializeExpression が戻ります、<xref:System.CodeDom.CodeExpression>最も簡略化された式を格納している</xref:System.CodeDom.CodeExpression>。 次の式はサポートされていません:- <xref:System.CodeDom.CodeEventReferenceExpression>- <xref:System.CodeDom.CodeMethodReferenceExpression>- <xref:System.CodeDom.CodeDelegateCreateExpression></xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodReferenceExpression> </xref:System.CodeDom.CodeEventReferenceExpression>"
  syntax:
    content: protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: name
      type: System.String
      description: "式の結果をオブジェクトの名前。 指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、オブジェクトの名前を付ける必要はありません。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>解釈します。"
    return:
      type: System.Object
      description: "結果の解釈のオブジェクト<code> expression</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  id: DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定された型のインスタンスを返します。"
  remarks: "DeserializeInstance メソッドは、オブジェクトのインスタンスを取得するには、逆シリアル化中に呼び出されます。 呼び出されると、要求された型のインスタンスが返されます。 既定の実装を呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>のメソッド、`manager`パラメーター</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> 。"
  syntax:
    content: protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>のインスタンスを返します</xref:System.Type>。"
    - id: parameters
      type: System.Object[]
      description: "コンス トラクターに渡すパラメーター`type`です。"
    - id: name
      type: System.String
      description: "逆シリアル化されたオブジェクトの名前。"
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このオブジェクトをデザイン コンテナーに追加するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 オブジェクトを実装する必要があります<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>これを有効にします。"
    return:
      type: System.Object
      description: "インスタンス<code> type</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "インバリアント カルチャのリソース バンドルから指定したオブジェクトのプロパティを逆シリアル化します。"
  remarks: "DeserializePropertiesFromResources メソッドでは、派生クラスのヘルパー メソッドを呼び出すことができます。 指定したオブジェクトのプロパティを検索し、インバリアント カルチャのリソース バンドルからその値の読み込みを試みます。 これは通常、ソース コードに出力されていないデザイン時のプロパティの処理に使用されます。 適していないローカライズされたプロパティに、インバリアント カルチャでのみ動作するためです。       このメソッドは、すべてのプロパティの検査、`value`で指定された属性に一致するパラメーター、`filter`パラメーター、および、リソースのバイナリ オブジェクトでこれらのプロパティをチェックします。 これは、逆シリアル化のプロパティをデザイン時のプロパティなどのコードでは表現できないに役立ちます。       このメソッドは、デザイナー ローダーが用意されている必要があります、<xref:System.ComponentModel.Design.IResourceService>リソースを読み取る</xref:System.ComponentModel.Design.IResourceService>。 場合、<xref:System.ComponentModel.Design.IResourceService>提供、 <xref:System.Resources.ResXResourceReader>、インバリアント カルチャの DeserializePropertiesFromResources リソースから読み取り、XML リソース (.resx) ファイルのメタデータ セクションは、最終的なコンパイル済みコードに含まれていない</xref:System.Resources.ResXResourceReader></xref:System.ComponentModel.Design.IResourceService>。 このサービスが利用できない場合は、リソースは読み取られません。"
  syntax:
    content: protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "プロパティの逆シリアル化する元のオブジェクト。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>逆シリアル化するプロパティをフィルター処理する配列</xref:System.Attribute>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  id: DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "解釈および CodeDOM ステートメントを実行するステートメントを逆シリアル化します。"
  remarks: "DeserializeStatement メソッドでは、派生クラスのヘルパー メソッドを呼び出すことができます。 これは、解釈、`statement`パラメーター。       <xref:System.CodeDom.CodeStatement>逆シリアル化は、コンテキスト スタックにプッシュされます</xref:System.CodeDom.CodeStatement>。"
  syntax:
    content: protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statement
      type: System.CodeDom.CodeStatement
      description: "<xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref>を逆シリアル化します。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクションを取得します。"
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: type
      type: System.Type
      description: "対象の型。"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクション。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクションを取得します。"
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: instance
      type: System.Object
      description: "対象の型のオブジェクト。"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクション。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "プロジェクトのターゲットのバージョンの .NET Framework で定義されているイベントのコレクションを取得します。"
  syntax:
    content: protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: instance
      type: System.Object
      description: "対象の型のオブジェクト。"
    - id: attributes
      type: System.Attribute[]
      description: ".NET Framework のターゲット バージョンに渡す属性の配列。"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "プロジェクトのターゲットのバージョンの .NET Framework で定義されているイベントのコレクション。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定されたオブジェクトの式を返します。"
  remarks: "GetExpression メソッドでは、指定したオブジェクトを表す式を返します。 返すことが`null`ことを示すオブジェクト式が設定されていないことを説明します。 式は、3 つの方法のいずれかで取得: の式を呼び出す前の結果である場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>メソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>。      -式が発見された<xref:System.ComponentModel.Design.Serialization.RootContext>。</xref:System.ComponentModel.Design.Serialization.RootContext>      -式は<xref:System.ComponentModel.Design.IReferenceService>。</xref:System.ComponentModel.Design.IReferenceService>を通じて派生でした。       式を派生させる<xref:System.ComponentModel.Design.IReferenceService>、GetExpression メソッドが指定されたオブジェクトの名前の参照サービスを照会します</xref:System.ComponentModel.Design.IReferenceService>。 式のサービスが有効な名前を返す場合<xref:System.ComponentModel.Design.IReferenceService>、GetExpression メソッドがあるかどうかを確認、&quot;です&quot;名にします。</xref:System.ComponentModel.Design.IReferenceService> 。 これは、式サービスが、別のオブジェクトの読み取り専用プロパティの戻り値としてこのオブジェクトをすることを示します。 ある場合、&quot;です。&quot;、GetExpression を使用して、参照を部分に分割されます。 左端の部分が名前に評価される、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>メソッド</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>。 後続の各パートのプロパティの参照式がビルドされます。 最終的な式は、返されます。       オブジェクトを設定する式がありませんでしたか、参照サービスにオブジェクトが見つからなかった場合 GetExpression が返されます`null`オブジェクトの既存の式がないことを示すです。"
  syntax:
    content: protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "式を取得する対象のオブジェクト。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> v を表す<code>alue</code>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> v の既存の式がない場合は<code>alue</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "プロジェクトのターゲットのバージョンの .NET Framework で定義されているプロパティのコレクションを取得します。"
  syntax:
    content: protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: instance
      type: System.Object
      description: "対象の型のオブジェクト。"
    - id: attributes
      type: System.Attribute[]
      description: ".NET Framework のターゲット バージョンに渡す属性の配列。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "プロジェクトのターゲットのバージョンの .NET Framework で定義されているプロパティのコレクション。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "型のメタデータから生成されるリフレクション型を取得します。"
  remarks: "戻り値は等しいできない`type`非リフレクション型との比較には使用できません。"
  syntax:
    content: protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: type
      type: System.Type
      description: "メタデータを使用する型。"
    return:
      type: System.Type
      description: "メタデータから生成されるリフレクション型<code> type</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "オブジェクトのメタデータから生成されるリフレクション型を取得します。"
  remarks: "戻り値がオブジェクトの型と同じになり非リフレクション型との比較には使用できません。"
  syntax:
    content: protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "シリアル化マネージャー。"
    - id: instance
      type: System.Object
      description: "メタデータを使用するオブジェクト。"
    return:
      type: System.Type
      description: "メタデータから生成されるリフレクション型<code> object</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトの値のシリアライザーを検索します。"
  remarks: "GetSerializer メソッドは拡張機能では、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>メソッド</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>。 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>。 外部パーティにを介して特定のオブジェクトのメタデータがオーバーライドされた場合<xref:System.ComponentModel.TypeDescriptor>でそのメタデータのオーバーライドは表示されません、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>メソッドの型はわずかです</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName></xref:System.ComponentModel.TypeDescriptor>。 GetSerializer メソッドでは、値と値の型のメタデータを確認します。 2 つが異なる場合、GetSerializer は値のカスタム デザイナー シリアライザー属性がないかどうかになります。 場合は、GetSerializer はそれを使用しようとします。 それ以外の場合、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>。</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>に任せること"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "取得するシリアライザーを指定するオブジェクト。"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref>に対して適切な<code> value</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定された型のシリアライザーを検索します。"
  remarks: "GetSerializer メソッドは拡張機能では、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>メソッド</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>。 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>。"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: valueType
      type: System.Type
      description: "<xref:System.Type>取得するシリアライザーを指定します</xref:System.Type>。"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref>に対して適切な<code> valueType</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>valueType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  id: GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "取得、 <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref>が型のフィルター処理で使用するため、.NET Framework のターゲット バージョンを認識します。"
  syntax:
    content: protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "型説明プロバイダー サービス。"
    - id: instance
      type: System.Object
      description: "元の型説明プロバイダー サービス派生できる場合、オブジェクト`provider`は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: ".NET Framework に対応する型説明プロバイダー。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定されたオブジェクトの一意の名前を返します。"
  remarks: "GetUniqueName メソッドの呼び出し、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>メソッド</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>。 このメソッドは、名前を返さない場合、GetUniqueName 使用<xref:System.ComponentModel.Design.Serialization.INameCreationService>オブジェクトの有効な名前を生成する</xref:System.ComponentModel.Design.Serialization.INameCreationService>。 サービスが利用できない場合、GetUniqueName は一意にするインデックス番号を組み合わせた short 型名に基づく名前を作成します。 呼び出して、結果名はシリアル化マネージャーに関連付けられて、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>メソッドから、新しい名前が返されます</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>。"
  syntax:
    content: protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "名前を取得するオブジェクト。"
    return:
      type: System.String
      description: "一意な名前<code> value</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトをシリアル化されたかどうかを示す値を返します。"
  remarks: "`value`と見なされるにパラメーターをシリアル化では、`manager`パラメーターまたは別のシリアライザーと呼ばれる必要がありますが、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>間のリレーションシップを作成するメソッド`value`と参照元の式</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>。"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "以前のシリアル化をテストするオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> value </code> 、それ以外のシリアル化がされて<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトをシリアル化されたかどうかを示す、オプションで設定済みの式を検討して値を返します。"
  remarks: "`value`と見なされるにパラメーターをシリアル化では、`manager`パラメーターまたは別のシリアライザーと呼ばれる必要がありますが、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>間のリレーションシップを作成するメソッド`value`と参照元の式</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>。"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "以前のシリアル化をテストするオブジェクト。"
    - id: honorPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>設定済みの式を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> value </code> 、それ以外のシリアル化がされて<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  id: SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトの作成を表す式を返します。"
  remarks: "作成を表す式をシリアル化に SerializeCreationExpression メソッドを使用することができます、`value`パラメーター。 インスタンス記述子、認識されています。       `isComplete`にパラメーターが設定されている`true`式は、完全に構成されたオブジェクトを表す場合、または`false`場合はさらに、オブジェクトのプロパティをシリアル化を行う必要があります。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合`value`が完全にシリアル化された、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.CodeDom.CodeExpression
      description: "式の作成を表す<code> value</code>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  id: SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定されたステートメントのコレクションに、指定したイベントをシリアル化します。"
  remarks: "SerializeEvent メソッドは、指定された<xref:System.CodeDom.CodeStatementCollection>。</xref:System.CodeDom.CodeStatementCollection>に&1; つのイベントをシリアル化するクラスを派生するヘルパー メソッドを呼び出すことができます。 SerializeEvent のシリアル化マネージャーに照会、 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>、指定したイベント<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>それをシリアル化する</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>要求</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       SerializeEvent 場所、`statements`と`descriptor`<xref:System.ComponentModel.Design.Serialization.ContextStack></xref:System.ComponentModel.Design.Serialization.ContextStack>パラメーター。       SerializeEvent が必要です、<xref:System.ComponentModel.Design.IEventBindingService>がコンパイルされていないメソッドをイベント バインドを探索する</xref:System.ComponentModel.Design.IEventBindingService>。 このサービスが存在しない場合は、非コンパイルされたメソッドをイベント バインドは書き込まれません。 コンパイル済みメソッドをイベント バインドは、イベントがバインドされているオブジェクトは、式に変換できる場合にもシリアル化されます。"
  syntax:
    content: protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>イベントをシリアル化にします。"
    - id: value
      type: System.Object
      description: "オブジェクトを`descriptor`がバインドされています。"
    - id: descriptor
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>をシリアル化イベントを指定します。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>descriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Design.Serialization.CodeDomSerializerException
    commentId: T:System.ComponentModel.Design.Serialization.CodeDomSerializerException
    description: "<xref href=&quot;System.ComponentModel.Design.IEventBindingService&quot;></xref>使用できません。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定されたステートメントのコレクションに指定したイベントをシリアル化します。"
  remarks: "SerializeEvents メソッドでは、派生クラスのヘルパー メソッドを呼び出すことができます。 イベントで参照、`value`一致するパラメーター、`filter`パラメーター、その後の呼び出し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>各イベントのメソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>。       SerializeEvents メソッドの場所、<xref:System.ComponentModel.InheritanceAttribute>の`value` <xref:System.ComponentModel.Design.Serialization.ContextStack></xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute> 。"
  syntax:
    content: protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>イベントをシリアル化にします。"
    - id: value
      type: System.Object
      description: "イベントをシリアル化するオブジェクト。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>シリアル化するどのイベントをフィルター処理する配列</xref:System.Attribute>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定されたステートメントのコレクションに指定されたオブジェクトのプロパティをシリアル化します。"
  remarks: "SerializeProperties メソッドでは、派生クラスのヘルパー メソッドを呼び出すことができます。 これは、プロパティを調べ、`value`に一致するパラメーター、`filter`パラメーター、その後の呼び出し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>の各プロパティのメソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>。       SerializeProperties メソッドの場所、<xref:System.ComponentModel.InheritanceAttribute>の`value` <xref:System.ComponentModel.Design.Serialization.ContextStack></xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute> 。"
  syntax:
    content: protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>にプロパティをシリアル化します。"
    - id: value
      type: System.Object
      description: "プロパティをシリアル化するオブジェクト。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>シリアルするプロパティをフィルター処理する配列</xref:System.Attribute>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。"
  remarks: "SerializePropertiesToResources メソッドでは、派生クラスのヘルパー メソッドを呼び出すことができます。 これは、プロパティを調べ、`value`に一致するパラメーター、`filter`パラメーター、その後は、インバリアント カルチャのリソース バンドルにプロパティをシリアル化します。 リソース サービスが返された場合、 <xref:System.Resources.ResXResourceWriter>、プロパティ値は、XML リソース (.resx) ファイルのメタデータ セクションに保存されます</xref:System.Resources.ResXResourceWriter>。 `statements`パラメーターは使用されません。       プロパティがある必要がありますをリソースとしてシリアル化する、単純な (コンテンツ プロパティではなく) とその値をシリアル化可能にする必要があります。 このパターンに準拠していないプロパティはスキップされます。       SerializePropertiesToResources が必要です、<xref:System.ComponentModel.Design.IResourceService>させることが、<xref:System.Resources.ResourceWriter>インバリアント カルチャのリソースに書き込めません</xref:System.Resources.ResourceWriter></xref:System.ComponentModel.Design.IResourceService>。 このサービスが利用できない場合は、リソースは書き込まれません。"
  syntax:
    content: protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "使用されません。"
    - id: value
      type: System.Object
      description: "プロパティをシリアル化するオブジェクト。"
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>シリアルするプロパティをフィルター処理する配列</xref:System.Attribute>。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  id: SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトのプロパティをシリアル化します。"
  remarks: "SerializeProperty メソッドは、取得、<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>の`propertyToSerialize`パラメーターとバリアント汎用デリゲートを突き止め</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       SerializeProperty 場所、`statements`と`propertyToSerialize`<xref:System.ComponentModel.Design.Serialization.ContextStack></xref:System.ComponentModel.Design.Serialization.ContextStack>パラメーター。"
  syntax:
    content: protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref>プロパティをシリアル化にします。"
    - id: value
      type: System.Object
      description: "プロパティをシリアル化するオブジェクト。"
    - id: propertyToSerialize
      type: System.ComponentModel.PropertyDescriptor
      description: "シリアル化するプロパティです。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>propertyToSerialize</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトを特定のリソース名を使用してリソース バンドルにシリアル化します。"
  remarks: "SerializeResource メソッドは、指定した名前の下にあるリソース バンドルに値をシリアル化するヘルパー メソッドです。 リソースに書き込まれるカルチャは、シリアル化マネージャーの検索によって決まります<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>プロパティのコレクションと呼ばれる`ResourceCulture`</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>。 このプロパティが存在する場合は、リソースはそのカルチャを記述します。 それ以外の場合、リソースは、インバリアント カルチャに書き込まれます。 `value`パラメーターは、シリアル化可能である必要があります。       SerializeResource が必要です、<xref:System.ComponentModel.Design.IResourceService>を取得する、<xref:System.Resources.ResourceWriter>正しいカルチャのリソースに書き込めません</xref:System.Resources.ResourceWriter></xref:System.ComponentModel.Design.IResourceService>。 このサービスが利用できない場合 SerializeResource は代わりに、リソースを表すコードのバイナリ オブジェクトを構築します。"
  syntax:
    content: protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: resourceName
      type: System.String
      description: "先にあるリソース バンドルの名前`value`シリアル化されます。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "指定したオブジェクトを特定のリソース名を使用してリソース バンドルにシリアル化します。"
  remarks: "リソースは常にインバリアント カルチャに書き込まれます。 `value`パラメーターは、シリアル化可能である必要があります。       SerializeResourceInvariant メソッドが必要な<xref:System.ComponentModel.Design.IResourceService>を取得する、<xref:System.Resources.ResourceWriter>正しいカルチャのリソースを書き込む</xref:System.Resources.ResourceWriter></xref:System.ComponentModel.Design.IResourceService>。 このサービスが使用できない場合<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>は代わりにリソースを表すコードのバイナリ オブジェクトを構築します</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>。"
  syntax:
    content: protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: resourceName
      type: System.String
      description: "先にあるリソース バンドルの名前`value`シリアル化されます。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "式に指定されたオブジェクトをシリアル化します。"
  remarks: "`value`パラメーターを指定できます`null`、後者プリミティブ式が返されます。       SerializeToExpression メソッドは、次の規則を使用して型をシリアル化するため: 1。  最初に呼び出して、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>オブジェクトの式が既に作成されているメソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。 その場合、既存の式を返します。      2.  オブジェクトのシリアライザーを検索し、シリアル化するように指示します。      3.  かどうか、オブジェクトのシリアライザーの戻り値は、 <xref:System.CodeDom.CodeExpression>、式が返されます</xref:System.CodeDom.CodeExpression>。      4.  最後の呼び出しに&1; つは<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>にシリアライザーが式を追加するかどうかを参照してください</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。      5.  最後に、`null`です。       式を作成できませんでした適切なシリアライザーが見つからなかった場合は、エラーは、シリアル化マネージャーを通じて報告されます。 シリアライザーは見つかりましたが、式を生成するために失敗した場合、エラーは報告されません。 この場合、シリアライザーか、既にエラーが報告されたこと、または、オブジェクトをシリアル化されませんでしたと見なされます。       ステートメントまたはステートメントのコレクションに、シリアライザーが返される場合は、これらのステートメントは破棄されません。 SerializeToExpression メソッドは、まず、<xref:System.ComponentModel.Design.Serialization.StatementContext>コンテキスト スタックが作成され、ステートメントのコンテキストにステートメントを追加<xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>プロパティ</xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A></xref:System.ComponentModel.Design.Serialization.StatementContext>。 コンテキストで SerializeToExpression メソッドが表示されるステートメントのコンテキストがない場合、<xref:System.CodeDom.CodeStatementCollection>ありますのステートメントを追加します</xref:System.CodeDom.CodeStatementCollection>。 場所がありませんできますが、ステートメントを追加する検出された場合、エラーが生成されます。      > [!NOTE] > 内 SerializeToExpression メソッドを呼び出す必要はありません<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>、独自のオブジェクトをシリアル化するとき</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>。 代わりに、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>を呼び出す必要があります。 返された場合`null`、独自の式を作成し、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>を呼び出します シリアル化の残りの部分に進みます。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。 Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>オブジェクト場合<code> value </code> 、それ以外のシリアル化された<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "式に指定されたオブジェクトをシリアル化します。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>リソース式の値をシリアル化するヘルパー メソッドです</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>。 これは、対照的に、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>メソッドで、リソースのバイナリ オブジェクトに値を書き込みます</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>。 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>一歩し、リソースを回復するために使用する式を返します。</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> たとえば、戻り値は&quot;rm 可能性があります。GetValue(&quot;SomeBitmap&quot;);&quot;です。 リソースの名前がから計算された、<xref:System.ComponentModel.Design.Serialization.ExpressionContext>コンテキスト スタックに見つかったいずれかの場合は、</xref:System.ComponentModel.Design.Serialization.ExpressionContext> 。       <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>メソッドは、検索、<xref:System.ComponentModel.Design.Serialization.ContextStack>次のオブジェクトに対して:- <xref:System.CodeDom.CodeStatementCollection>-いずれかを宣言する必要がある場合に、リソース マネージャーを追加するステートメントのコレクション</xref:System.CodeDom.CodeStatementCollection></xref:System.ComponentModel.Design.Serialization.ContextStack></xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>。      - <xref:System.ComponentModel.Design.Serialization.RootContext>— リソース マネージャーを作成するために必要なルートの式</xref:System.ComponentModel.Design.Serialization.RootContext>。      - <xref:System.ComponentModel.Design.Serialization.ExpressionContext>-リソースの名前を作成してするリソース マネージャーの呼び出しの種類を決定するために使用します</xref:System.ComponentModel.Design.Serialization.ExpressionContext>。"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>を含む<code> value </code>としてシリアル化された式。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "インバリアント カルチャに適した式に指定されたオブジェクトをシリアル化します。"
  remarks: "場合、`ensureInvariant`パラメーターは`true`、SerializeToResourceExpression メソッドも値を書き込みます、リソース、インバリアント カルチャのリソース ファイルに場合、現在`ResourceCulture`インバリアント カルチャではありません."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
    - id: ensureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>インバリアント カルチャにシリアル化するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>を含む<code> value </code>としてシリアル化された式。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "式オブジェクトに関連付けます。"
  remarks: "SetExpression メソッドがヘルパー メソッドを関連付ける、<xref:System.CodeDom.CodeExpression>オブジェクトを使用します</xref:System.CodeDom.CodeExpression>。 この方法で式に関連付けられているオブジェクトは経由でアクセスできる、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。 任意のシリアライザーによってアクセスできるように、SetExpression でコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルが保存<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>を関連付ける`value`です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>expression</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "オブジェクトを必要に応じて事前設定された式を指定する、式に関連付けます。"
  remarks: "SetExpression メソッドがヘルパー メソッドを関連付ける、<xref:System.CodeDom.CodeExpression>オブジェクトを使用します</xref:System.CodeDom.CodeExpression>。 この方法で式に関連付けられているオブジェクトは経由でアクセスできる、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。 任意のシリアライザーによってアクセスできるように、SetExpression がコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルを格納<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>。"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref>にシリアル化に使用します。"
    - id: value
      type: System.Object
      description: "シリアル化するオブジェクト。"
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>を関連付ける`value`です。"
    - id: isPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>事前設定された式では; を指定するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerException
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializerException
  nameWithType: CodeDomSerializerException
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializer
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializer
  nameWithType: CodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression
  nameWithType: CodeDomSerializerBase.DeserializeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance
  nameWithType: CodeDomSerializerBase.DeserializeInstance
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement
  nameWithType: CodeDomSerializerBase.DeserializeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper
  nameWithType: CodeDomSerializerBase.GetAttributesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper
  nameWithType: CodeDomSerializerBase.GetEventsHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression
  nameWithType: CodeDomSerializerBase.GetExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer
  nameWithType: CodeDomSerializerBase.GetSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName
  nameWithType: CodeDomSerializerBase.GetUniqueName
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized
  nameWithType: CodeDomSerializerBase.IsSerialized
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent
  nameWithType: CodeDomSerializerBase.SerializeEvent
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents
  nameWithType: CodeDomSerializerBase.SerializeEvents
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties
  nameWithType: CodeDomSerializerBase.SerializeProperties
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty
  nameWithType: CodeDomSerializerBase.SerializeProperty
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource
  nameWithType: CodeDomSerializerBase.SerializeResource
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression
  nameWithType: CodeDomSerializerBase.SerializeToExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression
  nameWithType: CodeDomSerializerBase.SetExpression
