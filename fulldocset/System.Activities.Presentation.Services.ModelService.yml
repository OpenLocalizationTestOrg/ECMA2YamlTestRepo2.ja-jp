### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Services.ModelService
  id: ModelService
  children:
  - System.Activities.Presentation.Services.ModelService.#ctor
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  - System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  - System.Activities.Presentation.Services.ModelService.ModelChanged
  - System.Activities.Presentation.Services.ModelService.Root
  langs:
  - csharp
  name: ModelService
  nameWithType: ModelService
  fullName: System.Activities.Presentation.Services.ModelService
  type: Class
  summary: "このクラスは、デザイナーを使用して、モデルと対話するメイン エントリ ポイントです。"
  remarks: "サービスは、派生クラスを作成するときに実装する必要がありますパブリックおよびプロテクトのメソッド間で分割がします。 パブリック メソッドは、すべてのユーザーから呼び出すことができます。 モデルでは、保護されたメソッドが呼び出されます。"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ModelService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "新たに作成<xref href=&quot;System.Activities.Presentation.Services.ModelService&quot;></xref>です。"
  syntax:
    content: protected ModelService ();
    parameters: []
  overload: System.Activities.Presentation.Services.ModelService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  id: CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "既存のインスタンスは、インスタンスのディープ クローンであるモデル アイテムを作成します。"
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "複製およびラップする項目。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "新しく作成したを返します<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>既存項目の複製であります。"
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  id: CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "作成、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>特定の種類。 このメソッドによって呼び出されます<xref href=&quot;System.Activities.Presentation.Model.ModelFactory&quot;></xref>ユーザーが新しいアイテムを作成するときにします。"
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, object[] arguments);
    parameters:
    - id: itemType
      type: System.Type
      description: "作成する項目の種類。"
    - id: options
      type: System.Activities.Presentation.Model.CreateOptions
      description: "作成オプション。 アイテムを既定値を初期化するかどうかを指定することができます。"
    - id: arguments
      type: System.Object[]
      description: "アイテムのコンス トラクターの引数の配列。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "新しく作成されたを返します<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>です。"
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  id: CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "指定されたクラスの静的メンバーの値を表す新しいモデル アイテムを作成します。"
  remarks: "たとえばへの参照を追加する`Brushes.Red`モデルにこのメソッドを呼び出す`typeof(Brushes)`と、パラメーターとして文字列&quot;Red&quot;です。 これは、XAML にシリアル化されます`{x:Static Brushes.Red}`です。"
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);
    parameters:
    - id: type
      type: System.Type
      description: "参照されている静的メンバーを含む型。"
    - id: memberName
      type: System.String
      description: "参照されている静的メンバーの名前。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "検索が一致するモデル アイテムの開始位置を検索するを指定します。"
  remarks: "検索は、すべて再帰的です。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate<Type> match);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>元となると、検索を開始します。 このアイテムの上のアイテムは無視されます。 このアイテムと、階層では、下にある任意の項目が検索対象に含まれます。 この値が場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Activities.Presentation.Services.ModelService.Root*>代わりに使用されます</xref:System.Activities.Presentation.Services.ModelService.Root*>。"
    - id: match
      type: System.Predicate{System.Type}
      description: "複雑な型の照合を使用できるようにする述語。 このメソッドでは、述語に一致する指定した親スコープ内のすべての項目を列挙します。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "返します、 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;クエリに一致するすべてのモデル アイテムを格納しています。"
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "検索が一致するモデル アイテムの開始位置を検索するを指定します。"
  remarks: "検索は、すべて再帰的です。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>元となると、検索を開始します。 このアイテムの上のアイテムは無視されます。 このアイテムと、階層では、下にある任意の項目が検索対象に含まれます。 この値が場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Activities.Presentation.Services.ModelService.Root*>代わりに使用されます</xref:System.Activities.Presentation.Services.ModelService.Root*>。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>検索するオブジェクトの</xref:System.Type>。 このメソッドでは、要求された種類の指定した親スコープ内のすべての項目を列挙します。"
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "返します、 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;クエリに一致するすべてのモデル アイテムを格納しています。"
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "検索、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>で指定した名前のスコープを指定します。"
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "提供する省略可能なスコープです。 スコープが指定されていない場合<xref:System.Activities.Presentation.Services.ModelService.Root*>スコープとして使用されます</xref:System.Activities.Presentation.Services.ModelService.Root*>。 スコープを指定する場合、最も近い<xref:System.Windows.Markup.INameScope>、階層内の項目を検索に使用される</xref:System.Windows.Markup.INameScope>。"
    - id: name
      type: System.String
      description: "検索する名前。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "返します、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>名前に一致する<code> name </code>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "検索、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>で指定した名前のスコープを指定します。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "提供する省略可能なスコープです。 スコープが指定されていない場合<xref:System.Activities.Presentation.Services.ModelService.Root*>スコープとして使用されます</xref:System.Activities.Presentation.Services.ModelService.Root*>。 スコープを指定する場合、最も近い<xref:System.Windows.Markup.INameScope>、階層内の項目を検索に使用される</xref:System.Windows.Markup.INameScope>。"
    - id: name
      type: System.String
      description: "検索する名前。"
    - id: comparison
      type: System.StringComparison
      description: "名前の比較方法を決定します。 既定では、序数に対して比較します。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "返します、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>名前に一致する<code> name </code>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  id: ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "このイベントは、モデル内の何かが変更されたときに発生します。"
  remarks: "イベント、イベント引数を使用して変更内容を取得することができます。"
  syntax:
    content: public abstract event EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged;
    return:
      type: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Root
  id: Root
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "オブジェクト階層のルートです。"
  remarks: "線形のストアは、ルートは、ストア内の最初のオブジェクトです。 オブジェクトのツリーを表すストア、これは、ツリーの最上位ノードを返します。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "モデル階層のルートを返します、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>です。"
  overload: System.Activities.Presentation.Services.ModelService.Root*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.CreateOptions
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: System.Activities.Presentation.Model.CreateOptions
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: true
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
- uid: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ModelChangedEventArgs>
  nameWithType: EventHandler<ModelChangedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Services.ModelChangedEventArgs
    name: ModelChangedEventArgs
    nameWithType: ModelChangedEventArgs
    fullName: ModelChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Root
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
- uid: System.Activities.Presentation.Services.ModelService.#ctor*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService
  nameWithType: ModelService.ModelService
- uid: System.Activities.Presentation.Services.ModelService.CreateItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem
  nameWithType: ModelService.CreateItem
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem
  nameWithType: ModelService.CreateStaticMemberItem
- uid: System.Activities.Presentation.Services.ModelService.Find*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find
  nameWithType: ModelService.Find
- uid: System.Activities.Presentation.Services.ModelService.FromName*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName
  nameWithType: ModelService.FromName
- uid: System.Activities.Presentation.Services.ModelService.Root*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
