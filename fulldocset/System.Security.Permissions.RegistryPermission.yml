### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermission
  id: RegistryPermission
  children:
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.Copy
  - System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  - System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsUnrestricted
  - System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.ToXml
  - System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: RegistryPermission
  nameWithType: RegistryPermission
  fullName: System.Security.Permissions.RegistryPermission
  type: Class
  summary: "レジストリ変数へのアクセスを制御します。 このクラスは継承できません。"
  remarks: "RegistryPermission では、レジストリ変数で保護された操作について説明します。 レジストリ変数は、メモリ位置 registrypermission コードがアクセスできる場所に保存するかされません。 信頼されていない呼び出し元に、レジストリ オブジェクトが渡された場合は悪用ことができます。       <xref:System.Security.Permissions.RegistryPermissionAccess>。</xref:System.Security.Permissions.RegistryPermissionAccess>によって許可されているレジストリのアクセスの種類が定義されています。 アクセスの&2; つ以上の種類を使用する場合は、組み合わせてことができます、ビットごとの OR 演算を使用して次のコード例に示すようにします。       レジストリのアクセス許可は、標準絶対パスで定義されます。チェックは、正規のパス名を常に行われます。 キーへのアクセスは、含まれるすべての値とその下にあるすべての変数へのアクセスを意味します。      > [!NOTE] > 前に .NET Framework のバージョンでは、 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]、使用する可能性があります、<xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName>に信頼されたコードによってシステム リソースを不注意によるアクセスを阻止する方法</xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName>。 <xref:System.Security.CodeAccessPermission.Deny%2A>現在使用されていません、およびリソースへのアクセスが付与されたアクセス許可がアセンブリのセットのだけで決定されるようになりました。</xref:System.Security.CodeAccessPermission.Deny%2A> ファイルへのアクセスを制限するには、するには、サンド ボックスで部分信頼コードを実行し、コードのアクセスが許可されているリソースにのみアクセス許可を割り当てます。 サンド ボックスで、アプリケーションの実行方法の詳細については、次を参照してください。[する方法: 実行で部分信頼コードをサンド ボックス](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref>指定に従って完全に制限されているまたは無制限のアクセス許可を持つクラス。"
  remarks: "完全に制限されているいずれかが作成されます (`None`) または`Unrestricted`レジストリ変数へのアクセス。"
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/visualbasic/85dea953-f2a8-49bc-b863-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/csharp/85dea953-f2a8-49bc-b863-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref>指定したレジストリ変数へのアクセスを持つクラス。"
  remarks: "このコンス トラクターでの&1; つだけ、<xref:System.Security.Permissions.RegistryPermissionAccess>値を指定する</xref:System.Security.Permissions.RegistryPermissionAccess>。 このアクセスは、表示されているレジストリ変数すべてに適用されます。 使用して<xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>より複雑な権限を定義します</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>。"
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/visualbasic/a1e0cfb2-93bc-4e55-9235-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/csharp/a1e0cfb2-93bc-4e55-9235-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>値。"
    - id: pathList
      type: System.String
      description: "アクセスが許可されている (セミコロン区切りの) レジストリ変数の一覧です。"
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -、 <code> pathList </code>パラメーターは有効な文字列ではありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref>指定したレジストリ変数へのアクセスとレジストリ制御情報への指定したアクセス権を持つクラス。"
  remarks: "このコンス トラクターでの&1; つだけ、<xref:System.Security.Permissions.RegistryPermissionAccess>値を指定する</xref:System.Security.Permissions.RegistryPermissionAccess>。 このアクセスは、表示されているレジストリ変数すべてに適用されます。 使用して<xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>より複雑な権限を定義します</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>。       `control`パラメーターを指定するかどうかのアクセス制御リスト (ACL) で指定されたレジストリ キーの`pathList`変更できますが、表示、またはアクセスできません。      > [!IMPORTANT] > アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、指定したレジストリ キーの特定のアクションをユーザーがについて説明します。  変更したり、ACL を表示できるように重大なアクセス許可は、慎重に付与する必要があります。"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>値。"
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref>値。"
    - id: pathList
      type: System.String
      description: "アクセスが許可されている (セミコロン区切りの) レジストリ変数の一覧です。"
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -、 <code> pathList </code>パラメーターは有効な文字列ではありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "既存のアクセス許可の状態を指定したレジストリ変数へのアクセスを追加します。"
  remarks: "現在のアクセス許可オブジェクトの状態を追加してレジストリ変数へのアクセスを変更するのにには、このメソッドを使用します。"
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/4576855b-6757-4ec9-971b-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/4576855b-6757-4ec9-971b-_1.cs)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>値。"
    - id: pathList
      type: System.String
      description: "(セミコロン区切りの) レジストリ変数の一覧。"
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -、 <code> pathList </code>パラメーターは有効な文字列ではありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "既存のレジストリへのアクセス許可とアクセス制御のアクションを指定する、アクセス許可の状態を指定したレジストリ変数へのアクセスを追加します。"
  remarks: "現在のアクセス許可オブジェクトの状態にそのパスのセットを追加してレジストリ変数へのアクセスを変更するのにには、このメソッドを使用します。 このオーバー ロードでは、アクセス制御の操作だけでなく、レジストリのアクセス許可を指定することができます。       `control`パラメーターを指定するかどうかのアクセス制御リスト (ACL) で指定されたレジストリ キーの`pathList`変更できますが、表示、またはアクセスできません。      > [!IMPORTANT] > アクセス制御リスト (ACL) には、個人またはグループがある、または権限がない、指定したレジストリ キーの特定のアクションをユーザーがについて説明します。  変更したり、ACL を表示できるように重大なアクセス許可は、慎重に付与する必要があります。"
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>値。"
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref>値。"
    - id: pathList
      type: System.String
      description: "セミコロンで区切って) レジストリ変数の一覧。"
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -、 <code> pathList </code>パラメーターは有効な文字列ではありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Copy
  id: Copy
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成して、現在のアクセス許可の完全なコピーを返します。"
  remarks: "アクセス許可のコピーは、元のアクセス許可リソースに対して同じアクセス権を表します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可のコピー。"
  overload: System.Security.Permissions.RegistryPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "XML エンコードから指定された状態で、アクセス許可を再構築します。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML エンコードを使用して、アクセス許可を再構築します。"
  overload: System.Security.Permissions.RegistryPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>パラメーターが有効なアクセス許可要素ではありません。       - または -、 <code> esd </code>パラメーターのバージョン番号が無効です。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  id: GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "指定したレジストリ変数のすべてのパスを取得<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。"
  remarks: "このメソッドを使用すると、現在のアクセス許可の状態を取得します。 このメソッドは、アクセスの種類ごとに個別に呼び出す必要があります。      > [!NOTE] >、`access`パラメーターがの値に制限<xref:System.Security.Permissions.RegistryPermissionAccess>、レジストリ変数アクセスの&1; つの型として表示されている</xref:System.Security.Permissions.RegistryPermissionAccess>。 それらの値が<xref:System.Security.Permissions.RegistryPermissionAccess>、 <xref:System.Security.Permissions.RegistryPermissionAccess>、 <xref:System.Security.Permissions.RegistryPermissionAccess></xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> 。 値を許容できる`access`を含めないでください<xref:System.Security.Permissions.RegistryPermissionAccess>と<xref:System.Security.Permissions.RegistryPermissionAccess>、レジストリ変数アクセスの&1; つの型を表していない</xref:System.Security.Permissions.RegistryPermissionAccess></xref:System.Security.Permissions.RegistryPermissionAccess>。"
  example:
  - "The following code example shows the use of the GetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/2854e98a-b1b4-43c0-ac49-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/2854e98a-b1b4-43c0-ac49-_1.cs)]"
  syntax:
    content: public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>レジストリ変数アクセスの単一の型を表す値です。"
    return:
      type: System.String
      description: "指定したレジストリ変数 (セミコロン区切り) の一覧<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。"
  overload: System.Security.Permissions.RegistryPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>有効な値ではない<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -<code>access</code>は<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>、レジストリ変数へのアクセスの&2; つ以上の型を表しているか、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>、レジストリ変数アクセスのどの型も表していません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  remarks: "2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。 元の両方の権限を通過する要求だけでは、積集合を渡されます。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Security.Permissions.RegistryPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と現在のアクセス許可と同じ型でもありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。"
  remarks: "現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。 たとえば、C:\\example.txt へのアクセスを表すアクセス許可は、c: へのアクセスを表すためのアクセス許可のサブセット\\\\です。 このメソッドが戻る場合`true`、現在のアクセス許可は、アクセスは保護されたリソースには、指定した権限を表します。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係をテストするのには権限です。 このアクセス許可は、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と現在のアクセス許可と同じ型でもありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が無制限かどうかを示す値を返します。"
  remarks: "無制限のアクセス許可は、アクセス許可によって保護されていると、すべてのリソースへのアクセスを表します。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が無制限ではない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "既存のアクセス許可の状態を指定したレジストリのアクセスを新しい変数の名前を設定します。"
  remarks: "現在のアクセス許可の以前の状態は上書きされます。"
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/8dc9769e-4e08-4ebe-9109-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/8dc9769e-4e08-4ebe-9109-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>値。"
    - id: pathList
      type: System.String
      description: "(セミコロン区切りの) レジストリ変数の一覧。"
  overload: System.Security.Permissions.RegistryPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;></xref>です。       - または -、 <code> pathList </code>パラメーターは有効な文字列ではありません。"
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "アクセス許可と、現在の状態の XML エンコードを作成します。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、アクセス許可の XML エンコード。"
  overload: System.Security.Permissions.RegistryPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  remarks: "共用体への呼び出しの結果は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表すアクセス許可です。 いずれかのアクセス許可に適合するすべての要求には、その共用体が渡されます。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。"
  overload: System.Security.Permissions.RegistryPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> other </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と現在のアクセス許可と同じ型でもありません。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: RegistryPermissionAccess
  nameWithType: RegistryPermissionAccess
  fullName: System.Security.Permissions.RegistryPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.Permissions.RegistryPermission.Copy
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.ToXml
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
- uid: System.Security.Permissions.RegistryPermission.#ctor*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission
  nameWithType: RegistryPermission.RegistryPermission
- uid: System.Security.Permissions.RegistryPermission.AddPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList
  nameWithType: RegistryPermission.AddPathList
- uid: System.Security.Permissions.RegistryPermission.Copy*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy
  nameWithType: RegistryPermission.Copy
- uid: System.Security.Permissions.RegistryPermission.FromXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml
  nameWithType: RegistryPermission.FromXml
- uid: System.Security.Permissions.RegistryPermission.GetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList
  nameWithType: RegistryPermission.GetPathList
- uid: System.Security.Permissions.RegistryPermission.Intersect*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect
  nameWithType: RegistryPermission.Intersect
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: RegistryPermission.IsSubsetOf
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: RegistryPermission.IsUnrestricted
- uid: System.Security.Permissions.RegistryPermission.SetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList
  nameWithType: RegistryPermission.SetPathList
- uid: System.Security.Permissions.RegistryPermission.ToXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml
  nameWithType: RegistryPermission.ToXml
- uid: System.Security.Permissions.RegistryPermission.Union*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union
  nameWithType: RegistryPermission.Union
