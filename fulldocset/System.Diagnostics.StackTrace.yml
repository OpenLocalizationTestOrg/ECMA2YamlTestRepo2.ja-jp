### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.StackTrace
  id: StackTrace
  children:
  - System.Diagnostics.StackTrace.#ctor
  - System.Diagnostics.StackTrace.#ctor(System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  - System.Diagnostics.StackTrace.#ctor(System.Exception)
  - System.Diagnostics.StackTrace.#ctor(System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.FrameCount
  - System.Diagnostics.StackTrace.GetFrame(System.Int32)
  - System.Diagnostics.StackTrace.GetFrames
  - System.Diagnostics.StackTrace.METHODS_TO_SKIP
  - System.Diagnostics.StackTrace.ToString
  langs:
  - csharp
  name: StackTrace
  nameWithType: StackTrace
  fullName: System.Diagnostics.StackTrace
  type: Class
  summary: "これは順序付けられたコレクションの&1; つ以上のスタック フレームのスタック トレースを表します。"
  remarks: "スタック トレース情報はデバッグ ビルドの構成に最もわかりやすくなります。 既定では、デバッグ ビルドには、リリース ビルドでないにデバッグ シンボルが含まれます。 デバッグ シンボルには、ほとんどファイル、メソッド名、行番号、および構築する際に使用する列情報にはが含まれます<xref:System.Diagnostics.StackFrame>およびスタック トレース オブジェクト。</xref:System.Diagnostics.StackFrame> 。       スタック トレースでは、多くのメソッド呼び出しの最適化中に実行されたコード変換のため、期待どおりには報告されません可能性があります。"
  example:
  - "The following console application demonstrates how to create a simple StackTrace and iterate through its frames to obtain debugging and diagnostic information.  \n  \n [!code-cpp[StackTraceSample1#1](~/add/codesnippet/cpp/t-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample1#1](~/add/codesnippet/csharp/t-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample1#1](~/add/codesnippet/visualbasic/t-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class StackTrace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor
  id: '#ctor'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>呼び出し元のフレームからのクラスです。"
  remarks: "<xref:System.Diagnostics.StackTrace>、呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません</xref:System.Diagnostics.StackTrace>。       呼び出し履歴のメソッドの概要情報のみを持つ完全なトレースする場合は、この既定のコンス トラクターを使用します。"
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_8_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_8_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_8_1.cs)]"
  syntax:
    content: public StackTrace ();
    parameters: []
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラスから、呼び出し元のフレームを必要に応じてソース情報をキャプチャします。"
  remarks: "<xref:System.Diagnostics.StackTrace>、呼び出し元の現在のスレッドで作成されます</xref:System.Diagnostics.StackTrace>。"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_4_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_4_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_4_1.cs)]"
  syntax:
    content: public StackTrace (bool fNeedFileInfo);
    parameters:
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル名、行番号、および列番号をキャプチャするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  id: '#ctor(System.Diagnostics.StackFrame)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>を&1; つのフレームを含むクラスです。"
  remarks: "完全なスタック トレースのオーバーヘッドしたくない場合は、このコンス トラクターを使用します。"
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: public StackTrace (System.Diagnostics.StackFrame frame);
    parameters:
    - id: frame
      type: System.Diagnostics.StackFrame
      description: "フレームを<xref href=&quot;System.Diagnostics.StackTrace&quot;></xref>オブジェクトを含める必要があります。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラスの指定された例外オブジェクトを使用します。"
  remarks: "<xref:System.Diagnostics.StackTrace>、呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません</xref:System.Diagnostics.StackTrace>。       結果のスタック トレースは、時、例外のスタックをについて説明します。"
  syntax:
    content: public StackTrace (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "元のスタック トレースを構築するために例外オブジェクト。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラスから、呼び出し元のフレームをフレームの指定した数をスキップしています。"
  remarks: "<xref:System.Diagnostics.StackTrace>、呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません</xref:System.Diagnostics.StackTrace>。       スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、<xref:System.Diagnostics.StackTrace>フレームが含まれません</xref:System.Diagnostics.StackTrace>。"
  syntax:
    content: public StackTrace (int skipFrames);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "元のトレースを開始するスタック上のフレームの数。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code>パラメーターが負の値。"
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  id: '#ctor(System.Exception,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラス、指定された例外オブジェクトを使用して、必要に応じてソース情報をキャプチャします。"
  remarks: "結果のスタック トレースは、時、例外のスタックをについて説明します。"
  syntax:
    content: public StackTrace (Exception e, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "元のスタック トレースを構築するために例外オブジェクト。"
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル名、行番号、および列番号をキャプチャするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  id: '#ctor(System.Exception,System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラス、指定された例外オブジェクトを使用して、フレームの指定した数をスキップしています。"
  remarks: "<xref:System.Diagnostics.StackTrace>ファイル名、行番号、または列の情報が含まれていません</xref:System.Diagnostics.StackTrace>。       結果のスタック トレースは、時、例外のスタックをについて説明します。       スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、<xref:System.Diagnostics.StackTrace>フレームが含まれません</xref:System.Diagnostics.StackTrace>。"
  syntax:
    content: public StackTrace (Exception e, int skipFrames);
    parameters:
    - id: e
      type: System.Exception
      description: "元のスタック トレースを構築するために例外オブジェクト。"
    - id: skipFrames
      type: System.Int32
      description: "元のトレースを開始するスタック上のフレームの数。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code>パラメーターが負の値。"
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラスから、呼び出し元のフレームをフレームの指定した数をスキップし、必要に応じてソース情報をキャプチャします。"
  remarks: "スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、<xref:System.Diagnostics.StackTrace>フレームが含まれません</xref:System.Diagnostics.StackTrace>。"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_3_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_3_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_3_1.cs)]"
  syntax:
    content: public StackTrace (int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "元のトレースを開始するスタック上のフレームの数。"
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル名、行番号、および列番号をキャプチャするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code>パラメーターが負の値。"
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  id: '#ctor(System.Threading.Thread,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>必要に応じてソース情報をキャプチャする特定のスレッドのクラスです。       このコンス トラクター オーバー ロードを使用しないでください。"
  remarks: >-
    > [!IMPORTANT]

    >  Do not use this constructor. It is obsolete, and there is no recommended alternative. When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily. For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked. If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.
  syntax:
    content: public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);
    parameters:
    - id: targetThread
      type: System.Threading.Thread
      description: "スタック トレースが要求されたスレッドです。"
    - id: needFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル名、行番号、および列番号をキャプチャするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "スレッド<code> targetThread </code>は中断されません。"
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  id: '#ctor(System.Exception,System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref>クラスの指定された例外オブジェクトを使用して、フレームの指定した数をスキップしています、および必要に応じてソース情報をキャプチャします。"
  remarks: "結果のスタック トレースは、時、例外のスタックをについて説明します。       スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、<xref:System.Diagnostics.StackTrace>フレームが含まれません</xref:System.Diagnostics.StackTrace>。"
  syntax:
    content: public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "元のスタック トレースを構築するために例外オブジェクト。"
    - id: skipFrames
      type: System.Int32
      description: "元のトレースを開始するスタック上のフレームの数。"
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル名、行番号、および列番号をキャプチャするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code>パラメーターが負の値。"
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.FrameCount
  id: FrameCount
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "スタック トレースでは、フレームの数を取得します。"
  remarks: ''
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/p-system.diagnostics.sta_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/p-system.diagnostics.sta_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/p-system.diagnostics.sta_1.cs)]"
  syntax:
    content: public virtual int FrameCount { get; }
    return:
      type: System.Int32
      description: "スタック トレースのフレームの数。"
  overload: System.Diagnostics.StackTrace.FrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  id: GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "指定したスタック フレームを取得します。"
  remarks: "スタック フレームは、最後にプッシュされるスタック フレームは 0 から始まる番号が付けられます。"
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_17_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_17_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_17_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame GetFrame (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "要求されたスタック フレームのインデックス。"
    return:
      type: System.Diagnostics.StackFrame
      description: "指定したスタック フレーム。"
  overload: System.Diagnostics.StackTrace.GetFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrames
  id: GetFrames
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "現在のスタック トレース内のすべてのスタック フレームのコピーを返します。"
  remarks: "返される<xref:System.Diagnostics.StackFrame>列挙し、 <xref:System.Diagnostics.StackTrace>。</xref:System.Diagnostics.StackTrace>関数呼び出しを確認する配列</xref:System.Diagnostics.StackFrame>の使用します。 返される配列の長さと等しい、<xref:System.Diagnostics.StackTrace.FrameCount%2A>プロパティの値</xref:System.Diagnostics.StackTrace.FrameCount%2A>。       <xref:System.Diagnostics.StackFrame>配列の要素が発生の逆順にします</xref:System.Diagnostics.StackFrame>。 <xref:System.Diagnostics.StackFrame>配列では、インデックス 0 は、スタック トレースとコール スタックにプッシュされた最後のフレームで最新の関数呼び出しを表します。</xref:System.Diagnostics.StackFrame> 。 <xref:System.Diagnostics.StackFrame>配列インデックスで<xref:System.Diagnostics.StackTrace.FrameCount%2A>から 1 を引いたスタック トレースなど、コール スタックにプッシュする最初のフレームで最も古い関数呼び出しを表します</xref:System.Diagnostics.StackTrace.FrameCount%2A></xref:System.Diagnostics.StackFrame>。       GetFrames メソッドを使用して、スタック トレース; 内のすべてのスタック フレームを取得するには使用して、<xref:System.Diagnostics.StackTrace.GetFrame%2A>スタック トレースで特定のスタック フレームを取得します</xref:System.Diagnostics.StackTrace.GetFrame%2A>。 <xref:System.Diagnostics.StackFrame>2 つの方法でインデックスが同じ順序付けします</xref:System.Diagnostics.StackFrame>。 たとえば、<xref:System.Diagnostics.StackFrame>インデックス位置 0 GetFrames によって返される配列には等価、<xref:System.Diagnostics.StackFrame>によって返される<xref:System.Diagnostics.StackTrace.GetFrame%2A>0 の入力のインデックスを持つ</xref:System.Diagnostics.StackTrace.GetFrame%2A></xref:System.Diagnostics.StackFrame></xref:System.Diagnostics.StackFrame>。"
  example:
  - "The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.  \n  \n [!code-cpp[StackTraceSample2#3](~/add/codesnippet/cpp/m-system.diagnostics.sta_14_1.cpp)]\n [!code-vb[StackTraceSample2#3](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_14_1.vb)]\n [!code-cs[StackTraceSample2#3](~/add/codesnippet/csharp/m-system.diagnostics.sta_14_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame[] GetFrames ();
    parameters: []
    return:
      type: System.Diagnostics.StackFrame[]
      description: "型の配列<xref href=&quot;System.Diagnostics.StackFrame&quot;></xref>を表す、関数は、スタック トレースで呼び出します。"
  overload: System.Diagnostics.StackTrace.GetFrames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  id: METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "スタック トレースから除外する方法の数の既定値を定義します。 このフィールドは定数です。"
  remarks: "スタック トレースの冒頭でスキップする方法の数の既定値。 この定数の値は 0 です。"
  syntax:
    content: public const int METHODS_TO_SKIP = 0;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.ToString
  id: ToString
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "スタック トレースの読み取り可能な形式を構築します。"
  remarks: ''
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_10_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_10_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_10_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "スタック トレースの読み取り可能な形式です。"
  overload: System.Diagnostics.StackTrace.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Threading.ThreadStateException
  parent: System.Threading
  isExternal: false
  name: ThreadStateException
  nameWithType: ThreadStateException
  fullName: System.Threading.ThreadStateException
- uid: System.Diagnostics.StackTrace.#ctor
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
- uid: System.Diagnostics.StackFrame
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
- uid: System.Threading.Thread
  parent: System.Threading
  isExternal: false
  name: Thread
  nameWithType: Thread
  fullName: System.Threading.Thread
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
- uid: System.Diagnostics.StackTrace.FrameCount
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
- uid: System.Diagnostics.StackTrace.GetFrames
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
- uid: System.Diagnostics.StackFrame[]
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame[]
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    nameWithType: StackFrame
    fullName: StackFrame[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
- uid: System.Diagnostics.StackTrace.ToString
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.StackTrace.#ctor*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace
  nameWithType: StackTrace.StackTrace
- uid: System.Diagnostics.StackTrace.FrameCount*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame
  nameWithType: StackTrace.GetFrame
- uid: System.Diagnostics.StackTrace.GetFrames*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames
  nameWithType: StackTrace.GetFrames
- uid: System.Diagnostics.StackTrace.ToString*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString
  nameWithType: StackTrace.ToString
