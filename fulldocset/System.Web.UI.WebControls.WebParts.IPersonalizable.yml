### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable
  id: IPersonalizable
  children:
  - System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  langs:
  - csharp
  name: IPersonalizable
  nameWithType: IPersonalizable
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable
  type: Interface
  summary: "アプリケーションとパーソナル化状態の展開の追加の管理機能を定義します。"
  remarks: "使用するだけでなく、`Personalizable`属性でコントロールのプロパティ、コントロール実装こともできます IPersonalizable のパーソナル化状態の抽出とアプリケーションの追加の管理機能。 たとえば、プライベートな状態情報を管理する必要があるコントロールでは、このインターフェイスを実装する必要があります。 カスタム キャッシュ ソリューション、メインフレーム、または XML Web サービス、データの永続性などの複雑なメカニズムを個人用に設定されたデータにアクセスするためのコントロールは、このインターフェイスを実装もする必要があります。      > [!IMPORTANT] > いない App_Code ディレクトリで定義されているクラスに基づいて型を追加し、既定のバイナリのシリアル化機構に依存し、必要があります。 App_Code ベースのアイテムは一貫してバイナリ シリアル化するという事実よります、アセンブリ名にランダムなポイントで変更されたことがあるできます。"
  example:
  - "The following code example demonstrates how to use the IPersonalizable interface. The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`. The following code is the .aspx file for the example.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_1.aspx)]  \n  \n The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. This file should be placed in the App_Code directory.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_186_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_186_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public interface IPersonalizable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  id: IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コントロールを管理するカスタムのデータが変更されたかどうかを示す値を取得します。"
  remarks: "コントロールによって管理されているデータが変更されたときに、コントロールと見なされます「ダーティ」です。 コントロールを返す必要があります`true`かどうか、カスタム データが管理を通じて、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイスが変更されました</xref:System.Web.UI.WebControls.WebParts.IPersonalizable>。 コントロールを返す場合`true`からこのプロパティは、コントロールの<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>インターフェイス メソッドの実装は、プロパティ値の抽出中に呼び出されます</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>。      > [!NOTE] > このプロパティが自動的にチェック、パーソナル化インフラストラクチャによって後者のフェーズの POST 要求を処理します。 ただし、GET 要求に対して IsDirty プロパティから返される値はチェックされません。 原因で、コントロールの状態: によって管理されるデータだけでなく、「ダーティ」と見なされるコントロールの他のイベントが<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--を保存する</xref:System.Web.UI.WebControls.WebParts.IPersonalizable>。 コントロールのマークを付ける自体「ダーティ」GET 要求中に場合、またはインフラストラクチャは、パーソナル化非常に特定する境界条件下で扱いますコントロール「ダーティ」GET 要求中に、場合<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>が常に呼び出されます</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>。       コントロールをそれに関連する参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>プロパティを現在のスコープを決定します</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 コントロールのカスタム データの「ダーティ」の状態を現在のスコープに対して適切にする必要があります。"
  example:
  - "The following code example demonstrates use of the IsDirty property. The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-vb[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_1.aspx)]\n [!code-cs[WebParts_IPersonalizable_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_1.aspx)]  \n  \n The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`. This file should be placed in the App_Code directory to run the example. Note that the source code implements the IsDirty property.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_455_2.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_455_2.vb)]  \n  \n Load the page in a browser. Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>カスタム データで管理されている場合、 <xref href=&quot;System.Web.UI.WebControls.WebParts.IPersonalizable&quot;> </xref>インターフェイスが変更されました。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "カスタム データをコントロールに読み込みます。"
  remarks: "このメソッドはそれ自体にカスタム データを読み込むことができるコントロールに呼び出されます。 コントロールのカスタム状態をページで、他のパーソナル化データが変更されたかどうかに関係なく、基になるデータ ストアに戻る書き込む必要があるかどうかを示す値を返すこともできます。 コントロールでは、独自のカスタム プロパティを設定でき、パーソナル化ディクショナリに格納されている値に基づく追加の内部ロジックを実行することができます。 このメソッドは、Web パーツ コントロールのパーソナル化データをコントロールに適用するときに設定します。       マージの動作の対応する必要があります<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-とスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-に含まれるプロパティのスコープ、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクト</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary></xref:System.Web.UI.WebControls.WebParts.PersonalizationScope></xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>。 `state`パラメーターには、基になるデータ ストアから読み込まれたカスタム データのマージされた表現が含まれています。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>ページ自体が以前に追加されたすべての値のスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>スコープすることができます</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope></xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>値に関連付けられている場合、スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>パーソナル化スコープが追加されたときに&1; つの値を持っていた<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>スコープ、および別の値を使用しているページが<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>スコープ、パーソナル化インフラストラクチャがのみを含めるし、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-値のスコープ (はなく、<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>値の範囲) 内で、`state`パラメーター</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> </xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 。"
  example:
  - "The following code example demonstrates an implementation of the Load method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/cca5cab3-402e-4f93-9a4b-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/cca5cab3-402e-4f93-9a4b-_1.vb)]"
  syntax:
    content: public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref>基になるデータ ストアから読み込まれたカスタムのスコープを持つデータが含まれます。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  langs:
  - csharp
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コントロールのカスタム プロパティと内部の状態情報が保存<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;></xref>オブジェクト。"
  remarks: "サーバー コントロールは、独自のカスタム プロパティと内部の状態情報を格納できます、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>で指定されている、`state`パラメーター</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> 。 情報は、一連の名前と値のペアとして格納されます。 使用してコントロールに対する後続の呼び出し中には認識できる名前/値ペアを使用するコントロールの役割です、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッド</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>。       コントロールをそれに関連する参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>、現在のスコープを決定する</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 カスタム状態情報は、現在のスコープに対して適切にする必要があります。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>に追加される値、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>をマージする場合に、パーソナル化インフラストラクチャがこれに依存するための適切なスコープ値に関連付けられるオブジェクト<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>と<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>-に渡す前にカスタム データのスコープ、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッド</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A></xref:System.Web.UI.WebControls.WebParts.PersonalizationScope></xref:System.Web.UI.WebControls.WebParts.PersonalizationScope></xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary></xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>。       コントロールは、ASP.NET<xref:System.Web.UI.ObjectStateFormatter>クラス</xref:System.Web.UI.ObjectStateFormatter>によって、状態ディクショナリに配置されるオブジェクトをシリアル化できることを確認する必要があります Web パーツの標準の ASP.NET の実装を使用する場合 実際には、次をつまり:-.NET Framework のプリミティブ型、文字列、および配列、配列のリスト、ハッシュ テーブル、および、ハイブリッド ディクショナリなどの .NET Framework 型のコレクション指向は自動的にシリアル化します。      、独自に提供するカスタム型<xref:System.ComponentModel.TypeConverter>にシリアル化して、文字列から逆シリアル化できるクラスがシリアル化可能と見なされます</xref:System.ComponentModel.TypeConverter>。      -カスタムの型によってシリアル化可能な<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>クラスがシリアル化可能と見なされます</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>。      > [!IMPORTANT] > いない App_Code ディレクトリで定義されているクラスに基づいて型を追加し、既定のバイナリのシリアル化機構に依存し、必要があります。 App_Code ベースのアイテムは一貫してバイナリ シリアル化するという事実よります、アセンブリ名にランダムなポイントで変更されたことがあるできます。"
  example:
  - "The following code example demonstrates implementing the Save method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.  \n  \n [!code-cs[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/csharp/9094b1c1-dbad-4f97-8b12-_1.cs)]\n [!code-vb[WebParts_IPersonalizable_Overview#2](~/add/codesnippet/visualbasic/9094b1c1-dbad-4f97-8b12-_1.vb)]"
  syntax:
    content: public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref>基になるデータ ストアから読み込まれたカスタムのスコープを持つデータが含まれます。"
  overload: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load(PersonalizationDictionary)
  nameWithType: IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save(PersonalizationDictionary)
  nameWithType: IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: IsDirty
  nameWithType: IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Load*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Load
  nameWithType: IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable.Save*
  parent: System.Web.UI.WebControls.WebParts.IPersonalizable
  isExternal: false
  name: Save
  nameWithType: IPersonalizable.Save
