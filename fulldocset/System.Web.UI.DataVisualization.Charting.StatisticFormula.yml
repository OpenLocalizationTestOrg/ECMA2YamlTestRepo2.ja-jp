### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula
  id: StatisticFormula
  children:
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  - System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  langs:
  - csharp
  name: StatisticFormula
  nameWithType: StatisticFormula
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula
  type: Class
  summary: "統計数式を計算します。"
  remarks: '数式は、次のカテゴリに疎分類できます逆のディストリビューションを含む、すべての分布。テストです。基本的な統計式。 各グループには、その入力値と戻り値に関する一般的な特性があります。'
  syntax:
    content: public class StatisticFormula
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  id: Anova(System.Double,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Anova(Double,String)
  nameWithType: StatisticFormula.Anova(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Anova 式は、データの&2; つ以上のグループの平均値の統計的に有意な相違点の有無を判断します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As AnovaResult = Chart1.DataManipulator.Statistics.Anova(.05, \"Series1,Series2,Series3\")  \n```  \n  \n```c#  \nAnovaResult result = Chart1.DataManipulator.Statistics.Anova(.05, \"Series1,Series2,Series3\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);
    parameters:
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容される入力範囲は 0 ~ 1 の間です。"
    - id: inputSeriesNames
      type: System.String
      description: "2 つ以上の入力系列の名前です。 各系列は、メソッドの呼び出し時に系列のコレクションに存在し、同じ数のデータ ポイントがある必要があります。"
    return:
      type: System.Web.UI.DataVisualization.Charting.AnovaResult
      description: "<xref href=&quot;System.Web.UI.DataVisualization.Charting.AnovaResult&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  id: BetaFunction(System.Double,System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: BetaFunction(Double,Double)
  nameWithType: StatisticFormula.BetaFunction(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "ベータ関数は、ベータ関数の値を計算します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2);  \n```"
  syntax:
    content: public double BetaFunction (double m, double n);
    parameters:
    - id: m
      type: System.Double
      description: "ベータ関数の最初の値。"
    - id: n
      type: System.Double
      description: "ベータ関数の&2; 番目の値。"
    return:
      type: System.Double
      description: "ベータ版の値です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  id: Correlation(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Correlation(String,String)
  nameWithType: StatisticFormula.Correlation(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "相関の式は、次の&2; つの確率変数の間に存在する関係の強さを示します。"
  remarks: "メソッドは、入力系列に同じ数のデータ ポイントがない場合に例外をスローします。"
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Correlation(\"Series1\", \"Series2\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Correlation(\"Series1\", \"Series2\");  \n```"
  syntax:
    content: public double Correlation (string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Double
      description: "データの&2; つのグループ間の相関関係値。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  id: Covariance(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Covariance(String,String)
  nameWithType: StatisticFormula.Covariance(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "共変性数式では、2 つの確率変数の間存在する依存関係の度合いを測定します。"
  remarks: "メソッドは、入力系列に同じ数のデータ ポイントがない場合に例外をスローします。"
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.Covariance(\"Series1\", \"Series2\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Covariance(\"Series1\", \"Series2\");  \n```"
  syntax:
    content: public double Covariance (string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Double
      description: "データの&2; つのグループ間の共変性値です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  id: FDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: FDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "F 分布の式は、フィッシャー分布の確率を計算します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7);  \n```"
  syntax:
    content: public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);
    parameters:
    - id: value
      type: System.Double
      description: "分布の対象となる F 値。"
    - id: firstDegreeOfFreedom
      type: System.Int32
      description: "最初の自由度。"
    - id: secondDegreeOfFreedom
      type: System.Int32
      description: "2 番目の自由度。"
    return:
      type: System.Double
      description: "F 分布の確率です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  id: FTest(System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: FTest(Double,String,String)
  nameWithType: StatisticFormula.FTest(Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "F テスト数式には、2-サンプル F テストが実行されるフィッシャー分布を使用して、サンプルに差異があるかどうかに表示するために使用します。"
  remarks: "メソッドは、入力系列に同じ数のデータ ポイントがない場合に例外をスローします。"
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As FTestResult = Chart1.DataManipulator.Statistics.FTest(0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nFTestResult result = Chart1.DataManipulator.Statistics.FTest(0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: probability
      type: System.Double
      description: "アルファ値。 許容範囲は 0 ~ 1 の間です。"
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Web.UI.DataVisualization.Charting.FTestResult
      description: "<xref href=&quot;System.Web.UI.DataVisualization.Charting.FTestResult&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  id: GammaFunction(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: GammaFunction(Double)
  nameWithType: StatisticFormula.GammaFunction(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "ガンマ関数では、ガンマ値を計算します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.GammaFunction(6.2)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.GammaFunction(6.2);  \n```"
  syntax:
    content: public double GammaFunction (double value);
    parameters:
    - id: value
      type: System.Double
      description: "値のガンマ値が必要です。"
    return:
      type: System.Double
      description: "ガンマ値。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  id: InverseFDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseFDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "逆 F 分布式は、F 累積分布の逆数を計算します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30);  \n```"
  syntax:
    content: public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);
    parameters:
    - id: probability
      type: System.Double
      description: "F 分布の確率です。 許容範囲は 0 ~ 1 の間です。"
    - id: firstDegreeOfFreedom
      type: System.Int32
      description: "最初の自由度。"
    - id: secondDegreeOfFreedom
      type: System.Int32
      description: "2 番目の自由度。"
    return:
      type: System.Double
      description: "F F 分布の値。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  id: InverseNormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseNormalDistribution(Double)
  nameWithType: StatisticFormula.InverseNormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "逆正規分布の式は、標準の正規の累積分布の逆数を計算します。 この分布は、平均が 0 と 1 つの標準偏差です。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As double = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05);  \n```"
  syntax:
    content: public double InverseNormalDistribution (double probability);
    parameters:
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容される入力範囲は 0 ~ 1 の間です。"
    return:
      type: System.Double
      description: "正規分布関数の逆です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  id: InverseTDistribution(System.Double,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: InverseTDistribution(Double,Int32)
  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "逆*t*-分布の式を計算、 *t*-値のスチューデントの*t*-確率と自由度の関数として配布します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15);  \n```"
  syntax:
    content: public double InverseTDistribution (double probability, int degreeOfFreedom);
    parameters:
    - id: probability
      type: System.Double
      description: "F 分布の確率です。 許容範囲は 0 ~ 1 の間です。"
    - id: degreeOfFreedom
      type: System.Int32
      description: "自由度。"
    return:
      type: System.Double
      description: "関数の逆、 *t*-配布します。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  id: Mean(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Mean(String)
  nameWithType: StatisticFormula.Mean(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "平均の式は、平均値、またはデータ系列に格納されたデータの平均を計算します。"
  remarks: "入力系列をという名前が存在しない場合に、<xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>メソッドの呼び出し時、例外がスローされます</xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>。"
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Mean(\"Series1\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Mean(\"Series1\");  \n```"
  syntax:
    content: public double Mean (string inputSeriesName);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>平均値が必要なデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Double
      description: "指定された系列内のすべてのデータ ポイントの平均値です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  id: Median(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Median(String)
  nameWithType: StatisticFormula.Median(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "中央値の式は、データ系列に格納されたデータの中央値を計算します。"
  remarks: "指定された入力系列が存在しない場合、<xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>メソッドの呼び出し時、例外がスローされます</xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>。"
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Median(\"Series1\")  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.Median(\"Series1\");  \n```"
  syntax:
    content: public double Median (string inputSeriesName);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>中央値が必要なデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Double
      description: "指定された系列内のすべてのデータ ポイントの中央値。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  id: NormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: NormalDistribution(Double)
  nameWithType: StatisticFormula.NormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "正規分布の式では、標準の正規の累積分布の値を計算します。 この分布は、平均が 0 と 1 の標準偏差です。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.NormalDistribution(1.96)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.NormalDistribution(1.96);  \n```"
  syntax:
    content: public double NormalDistribution (double zValue);
    parameters:
    - id: zValue
      type: System.Double
      description: "値が正規分布が必要です。"
    return:
      type: System.Double
      description: "標準の正規の累積分布の値です。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  id: TDistribution(System.Double,System.Int32,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TDistribution(Double,Int32,Boolean)
  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "*T*-分布式は、スチューデントの確率を計算*t*-配布します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true)  \n```  \n  \n```c#  \ndouble result = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true);  \n```"
  syntax:
    content: public double TDistribution (double value, int degreeOfFreedom, bool oneTail);
    parameters:
    - id: value
      type: System.Double
      description: '`t`値分布を指定します。'
    - id: degreeOfFreedom
      type: System.Int32
      description: "自由度"
    - id: oneTail
      type: System.Boolean
      description: "場合設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、片側分布を使用します。 それ以外の場合、両側分布が使用されます。"
    return:
      type: System.Double
      description: '*t*-分布関数の確率。'
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  id: TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestEqualVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "*T*-検定式を持つテストを実行、 *t*-スチューデントを使用してテスト*t*-検定と一緒に配布します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "データ グループの平均の仮説の差です。"
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容範囲は 0 ~ 1 の間です。"
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  id: TTestPaired(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestPaired(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "*T*-対になった式のテストを実行、 *t*-スチューデントを使用してテスト*t*-ペアのサンプルを使って配布します。 これは、機能は、自然な対 (たとえば、サンプルのグループを&2; 回テストする場合) のサンプルがある場合に便利です。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "データ グループの平均の仮説の差です。"
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容範囲は 0 ~ 1 の間です。"
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  id: TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: TTestUnequalVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "*T*-検定式を持つテストを実行、 *t*-スチューデントを使用してテスト*t*-検定と一緒に配布します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As TTestResult = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nTTestResult result = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "データ グループの平均の仮説の差です。"
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容範囲は 0 ~ 1 の間です。"
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Web.UI.DataVisualization.Charting.TTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.TTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  id: Variance(System.String,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: Variance(String,Boolean)
  nameWithType: StatisticFormula.Variance(String,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "分散式は、データのグループ内の分散を計算します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As Double = Chart1.DataManipulator.Statistics.Variance(\"Series1\", false)  \n```  \n  \n```c#  \nTTestResult result = double result = Chart1.DataManipulator.Statistics.Variance(\"Series1\", false);  \n```"
  syntax:
    content: public double Variance (string inputSeriesName, bool sampleVariance);
    parameters:
    - id: inputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>平均値が必要なデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: sampleVariance
      type: System.Boolean
      description: "指定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、データは、母集団のサンプルと<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>データが母集団全体である場合。"
    return:
      type: System.Double
      description: "データのグループ内の分散します。"
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  id: ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  langs:
  - csharp
  name: ZTest(Double,Double,Double,Double,String,String)
  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Z テスト式では、通常の配布を使用して、Z テストを実行します。"
  remarks: ''
  example:
  - "The following code demonstrates how to use this formula.  \n  \n```vb  \nDim result As ZTestResult = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \"Series1\", \"Series2\")  \n```  \n  \n```c#  \nZTestResult result = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, \"Series1\", \"Series2\");  \n```"
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);
    parameters:
    - id: hypothesizedMeanDifference
      type: System.Double
      description: "データ グループの平均の仮説の差です。"
    - id: varianceFirstGroup
      type: System.Double
      description: "データの最初のグループ内の分散。"
    - id: varianceSecondGroup
      type: System.Double
      description: "データの&2; 番目のグループ内の分散。"
    - id: probability
      type: System.Double
      description: "アルファ値です。 許容範囲は 0 ~ 1 の間です。"
    - id: firstInputSeriesName
      type: System.String
      description: "名前、<xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>最初のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    - id: secondInputSeriesName
      type: System.String
      description: "名前、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>2 番目のグループのデータを格納するオブジェクト</xref:System.Web.UI.DataVisualization.Charting.Chart.Series*>。"
    return:
      type: System.Web.UI.DataVisualization.Charting.ZTestResult
      description: "A <xref href=&quot;System.Web.UI.DataVisualization.Charting.ZTestResult&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Anova(Double,String)
  nameWithType: StatisticFormula.Anova(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(Double,String)
- uid: System.Web.UI.DataVisualization.Charting.AnovaResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: AnovaResult
  nameWithType: AnovaResult
  fullName: System.Web.UI.DataVisualization.Charting.AnovaResult
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: BetaFunction(Double,Double)
  nameWithType: StatisticFormula.BetaFunction(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(Double,Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Correlation(String,String)
  nameWithType: StatisticFormula.Correlation(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Covariance(String,String)
  nameWithType: StatisticFormula.Covariance(String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.FDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(Double,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FTest(Double,String,String)
  nameWithType: StatisticFormula.FTest(Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.FTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: FTestResult
  nameWithType: FTestResult
  fullName: System.Web.UI.DataVisualization.Charting.FTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: GammaFunction(Double)
  nameWithType: StatisticFormula.GammaFunction(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseFDistribution(Double,Int32,Int32)
  nameWithType: StatisticFormula.InverseFDistribution(Double,Int32,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(Double,Int32,Int32)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseNormalDistribution(Double)
  nameWithType: StatisticFormula.InverseNormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseTDistribution(Double,Int32)
  nameWithType: StatisticFormula.InverseTDistribution(Double,Int32)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(Double,Int32)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Mean(String)
  nameWithType: StatisticFormula.Mean(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Median(String)
  nameWithType: StatisticFormula.Median(String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: NormalDistribution(Double)
  nameWithType: StatisticFormula.NormalDistribution(Double)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(Double)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TDistribution(Double,Int32,Boolean)
  nameWithType: StatisticFormula.TDistribution(Double,Int32,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(Double,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestEqualVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestEqualVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.TTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: TTestResult
  nameWithType: TTestResult
  fullName: System.Web.UI.DataVisualization.Charting.TTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestPaired(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestPaired(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestUnequalVariances(Double,Double,String,String)
  nameWithType: StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Variance(String,Boolean)
  nameWithType: StatisticFormula.Variance(String,Boolean)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(String,Boolean)
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: ZTest(Double,Double,Double,Double,String,String)
  nameWithType: StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
  fullName: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(Double,Double,Double,Double,String,String)
- uid: System.Web.UI.DataVisualization.Charting.ZTestResult
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: ZTestResult
  nameWithType: ZTestResult
  fullName: System.Web.UI.DataVisualization.Charting.ZTestResult
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Anova
  nameWithType: StatisticFormula.Anova
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: BetaFunction
  nameWithType: StatisticFormula.BetaFunction
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Correlation
  nameWithType: StatisticFormula.Correlation
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Covariance
  nameWithType: StatisticFormula.Covariance
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FDistribution
  nameWithType: StatisticFormula.FDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: FTest
  nameWithType: StatisticFormula.FTest
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: GammaFunction
  nameWithType: StatisticFormula.GammaFunction
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseFDistribution
  nameWithType: StatisticFormula.InverseFDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseNormalDistribution
  nameWithType: StatisticFormula.InverseNormalDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: InverseTDistribution
  nameWithType: StatisticFormula.InverseTDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Mean
  nameWithType: StatisticFormula.Mean
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Median*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Median
  nameWithType: StatisticFormula.Median
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: NormalDistribution
  nameWithType: StatisticFormula.NormalDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TDistribution
  nameWithType: StatisticFormula.TDistribution
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestEqualVariances
  nameWithType: StatisticFormula.TTestEqualVariances
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestPaired
  nameWithType: StatisticFormula.TTestPaired
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: TTestUnequalVariances
  nameWithType: StatisticFormula.TTestUnequalVariances
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: Variance
  nameWithType: StatisticFormula.Variance
- uid: System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest*
  parent: System.Web.UI.DataVisualization.Charting.StatisticFormula
  isExternal: false
  name: ZTest
  nameWithType: StatisticFormula.ZTest
