### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.FileVersionInfo
  id: FileVersionInfo
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.ToString
  langs:
  - csharp
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  summary: "ディスク上の物理ファイルのバージョン情報を提供します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>。       使用して、<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>ファイルに関する情報を含む FileVersionInfo を取得するには、このクラスのメソッドが、ファイルに関する情報のプロパティを検索します</xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>。 <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>プロパティ ファイルに関するバージョン情報を提供します</xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>。 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>、 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>、 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>、 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>、および<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>プロパティが指定されたファイルの一部である製品のバージョン情報を提供します</xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A></xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A></xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A></xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A></xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>。 呼び出す<xref:System.Diagnostics.FileVersionInfo.ToString%2A>このファイルのプロパティとその値の一覧の一部を取得します</xref:System.Diagnostics.FileVersionInfo.ToString%2A>。       FileVersionInfo プロパティは、ファイルに組み込まれているバージョン リソースの情報に基づきます。 バージョン リソースが .exe などのバイナリ ファイルまたは .dll ファイルに組み込まれている多くの場合テキスト ファイルには、リソースのバージョン情報はありません。       バージョン リソースは、通常、Win32 リソース ファイルまたはアセンブリの属性で指定します。 たとえば、<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>プロパティに反映されます、`VS_FF_DEBUG`ファイルの値をフラグ`VS_FIXEDFILEINFO`から構築されたブロック、 `VERSIONINFO` Win32 リソース ファイル内のリソース</xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>。  Win32 リソース ファイルにバージョン リソースを指定する方法の詳細については、「リソース ファイルは」と、プラットフォーム SDK の「VERSIONINFO リソース」を参照してください。 .NET モジュールのバージョンのリソースを指定する方法の詳細については、次を参照してください。、[アセンブリ属性の設定](~/add/includes/ajax-current-ext-md.md)トピックです。      > [!NOTE] > このクラスは、クラス レベルのすべてのメンバーに適用されるリンク確認要求します。 A<xref:System.Security.SecurityException>直前の呼び出し元に完全信頼のアクセス許可があるない場合にスローされます</xref:System.Security.SecurityException>。 詳細については、リンク確認要求は、次を参照してください。[リンク確認要求](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the FileVersionInfo for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo Example#1](~/add/codesnippet/csharp/t-system.diagnostics.fil_1.cs)]\n [!code-vb[Classic FileVersionInfo Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.fil_1.vb)]\n [!code-cpp[Classic FileVersionInfo Example#1](~/add/codesnippet/cpp/t-system.diagnostics.fil_1.cpp)]"
  syntax:
    content: public sealed class FileVersionInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Comments
  id: Comments
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルに関連付けられているコメントを取得します。"
  remarks: "このプロパティには、診断目的で表示できる追加情報が含まれています。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the comments in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_7_1.cs)]\n [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_7_1.cpp)]\n [!code-vb[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_7_1.vb)]"
  syntax:
    content: public string Comments { get; }
    return:
      type: System.String
      description: "ファイルに関連付けられているコメントまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.Comments*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  id: CompanyName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルを作成した会社の名前を取得します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the CompanyName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_20_1.cs)]\n [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_20_1.cpp)]\n [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_20_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "ファイルを作成した会社の名前または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  id: FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルのビルド番号を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>。      -16 ビットの 3 番目のセットは、FileBuildPart 数です。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>。       このプロパティは、16 ビットの 3 番目のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_21_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_21_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_21_1.cpp)]"
  syntax:
    content: public int FileBuildPart { get; }
    return:
      type: System.Int32
      description: "ファイルのビルド番号を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.FileBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  id: FileDescription
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルの説明を取得します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileDescription in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_18_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_18_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_18_1.cpp)]"
  syntax:
    content: public string FileDescription { get; }
    return:
      type: System.String
      description: "ファイルの説明または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.FileDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  id: FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "バージョン番号のメジャー部分を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは FileMajorPart 番号。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>。       このプロパティは、最初の 16 ビットのセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_6_1.cs)]\n [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_6_1.cpp)]\n [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_6_1.vb)]"
  syntax:
    content: public int FileMajorPart { get; }
    return:
      type: System.Int32
      description: "ファイルにバージョン情報が含まれていない場合は、バージョン番号を 0 (ゼロ) の主要な部分を表す値。"
  overload: System.Diagnostics.FileVersionInfo.FileMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  id: FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルのバージョン番号のマイナー部分を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>。      -次の 16 ビットは、FileMinorPart 数です。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>。       このプロパティは、16 ビットの 2 番目のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_2_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_2_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_2_1.cs)]"
  syntax:
    content: public int FileMinorPart { get; }
    return:
      type: System.Int32
      description: "ファイルにバージョン情報が含まれていない場合、ファイルまたは 0 (ゼロ) のバージョン番号のマイナー部分を表す値。"
  overload: System.Diagnostics.FileVersionInfo.FileMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileName
  id: FileName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルの名前を取得のこのインスタンス<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>について説明します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_19_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_19_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_19_1.cs)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "このインスタンスによって記述されるファイルの名前<xref href=&quot;System.Diagnostics.FileVersionInfo&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  id: FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルのプライベート パート番号を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>。      -最後の 16 ビットは、FilePrivatePart 数です。       このプロパティは、16 ビットの最後のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FilePrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_13_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_13_1.cs)]\n [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_13_1.vb)]"
  syntax:
    content: public int FilePrivatePart { get; }
    return:
      type: System.Int32
      description: "ファイルのプライベート パート番号を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  id: FileVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルのバージョン番号を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 ファイルのバージョン番号は、次のように、ファイルのバージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_12_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_12_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_12_1.cpp)]"
  syntax:
    content: public string FileVersion { get; }
    return:
      type: System.String
      description: "ファイルのバージョン番号または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.FileVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  id: GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "返します、 <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>を表す、指定したファイルに関連付けられているバージョン情報。"
  remarks: ''
  example:
  - "The following example calls GetVersionInfo to get the <xref:System.Diagnostics.FileVersionInfo> for Notepad and  displays the file description and version number in the console window.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_1_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_1_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_1_1.cpp)]"
  syntax:
    content: public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "完全修飾パスの名前と、ファイルのバージョン情報を取得します。"
    return:
      type: System.Diagnostics.FileVersionInfo
      description: "A <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>ファイルに関する情報を格納します。 ファイルにバージョン情報が含まれていない場合、 <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>要求されたファイルの名前のみが含まれています。"
  overload: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定されたファイルが見つかりません。"
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.InternalName
  id: InternalName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "1 つが存在する場合は、ファイルの内部名を取得します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the InternalName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_23_1.cpp)]\n [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_23_1.vb)]\n [!code-cs[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_23_1.cs)]"
  syntax:
    content: public string InternalName { get; }
    return:
      type: System.String
      description: "ファイルの内部名。 存在しない場合、このプロパティは、拡張機能のないファイルの元の名前が格納されます。"
  overload: System.Diagnostics.FileVersionInfo.InternalName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  id: IsDebug
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルがデバッグ情報を格納またはデバッグ機能を有効にしてコンパイルするかどうかを示す値を取得します。"
  remarks: "<xref:System.Diagnostics.FileVersionInfo>プロパティは、ファイルに組み込まれているバージョン リソースの情報に基づきます</xref:System.Diagnostics.FileVersionInfo>。 バージョン リソースが .exe などのバイナリ ファイルまたは .dll ファイルに組み込まれている多くの場合テキスト ファイルには、リソースのバージョン情報はありません。       バージョン リソースは、通常、Win32 リソース ファイルまたはアセンブリの属性で指定します。 IsDebug プロパティに反映されます、`VS_FF_DEBUG`ファイルの値にフラグを付ける`VS_FIXEDFILEINFO`から構築されたブロック、 `VERSIONINFO` Win32 リソース ファイル内のリソース。 Win32 リソース ファイルにバージョン リソースを指定する方法の詳細については、プラットフォーム SDK を参照してください。`About Resource Files`トピックおよび`VERSIONINFO Resource`トピックに関するトピック。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsDebug in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_4_1.cs)]\n [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_4_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_4_1.vb)]"
  syntax:
    content: public bool IsDebug { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル、デバッグ情報を格納またはデバッグ機能を有効にしてコンパイルされた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.IsDebug*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  id: IsPatched
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルが変更されておりが同じバージョン番号の送付元のファイルと同じでないかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsPatched in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_5_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_5_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_5_1.vb)]"
  syntax:
    content: public bool IsPatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイルがパッチされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.IsPatched*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  id: IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルが、開発バージョンかどうかを指定する値を取得、市販のではなくです。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a prerelease version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_22_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_22_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_22_1.vb)]"
  syntax:
    content: public bool IsPreRelease { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイルがプレリリース版の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.IsPreRelease*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  id: IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "標準リリース プロシージャを使用して、ファイルが作成されたかどうかを指定する値を取得します。"
  remarks: "この値が場合`true`、<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>は、このバージョンのファイルが標準のバージョンとは異なる方法について説明します</xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_24_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_24_1.vb)]\n [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_24_1.cpp)]"
  syntax:
    content: public bool IsPrivateBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイルがビルドの場合、プライベートです。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ファイルが標準リリース プロシージャを使用してビルドされていた場合、またはファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  id: IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルが特殊なビルドかどうかを指定する値を取得します。"
  remarks: "特殊なビルド ファイルが標準リリース プロシージャを使用してビルドされたが、ファイルと同じバージョン番号の標準的なファイルは異なります。 この値が場合`true`、<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>プロパティでは、このファイルが標準のバージョンとは異なる方法を指定する必要があります</xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a special build version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_14_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_14_1.vb)]\n [!code-cs[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_14_1.cs)]"
  syntax:
    content: public bool IsSpecialBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイルがビルドの場合、特別なです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Language
  id: Language
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "バージョン情報ブロックの既定の言語文字列を取得します。"
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "バージョン リソース内の Microsoft 言語識別子の説明文字列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  id: LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "指定したファイルに適用されるすべての著作権表記を取得します。"
  remarks: "すべての通知、法的な記号、著作権の日付、およびなどの完全なテキストが含まれますか`null`ファイルにバージョン情報が含まれていない場合。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalCopyright in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_3_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_3_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_3_1.vb)]"
  syntax:
    content: public string LegalCopyright { get; }
    return:
      type: System.String
      description: "指定したファイルに適用される著作権表記。"
  overload: System.Diagnostics.FileVersionInfo.LegalCopyright*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  id: LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "商標および登録商標をファイルに適用されるを取得します。"
  remarks: "法的商標には、すべての通知、法的な記号、および商標番号の完全なテキストが含まれます。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalTrademarks in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_8_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_8_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_8_1.vb)]"
  syntax:
    content: public string LegalTrademarks { get; }
    return:
      type: System.String
      description: "商標および登録商標をファイルに適用されるまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  id: OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルが作成された名前を取得します。"
  remarks: "このプロパティにより、アプリケーションをファイルの名前が変更されたかどうかを判断します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the OriginalFilename in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_0_1.vb)]\n [!code-cs[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_0_1.cs)]"
  syntax:
    content: public string OriginalFilename { get; }
    return:
      type: System.String
      description: "ファイルが作成された名前または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.OriginalFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  id: PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルのプライベート バージョンについての情報を取得します。"
  remarks: "この情報がある場合に<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>は`true`</xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_16_1.cpp)]\n [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_16_1.vb)]\n [!code-cs[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_16_1.cs)]"
  syntax:
    content: public string PrivateBuild { get; }
    return:
      type: System.String
      description: "ファイルのプライベート バージョンについての情報または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.PrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  id: ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このファイルに関連付けられている製品のビルド番号を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 製品のバージョン番号は、次のように、バージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>。      -16 ビットの 3 番目のセットは、ProductBuildPart 数です。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>。       このプロパティは、16 ビットの 3 番目のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_10_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_10_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_10_1.vb)]"
  syntax:
    content: public int ProductBuildPart { get; }
    return:
      type: System.Int32
      description: "このファイルに関連付けられている製品のビルド番号を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  id: ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このファイルに関連付けられている製品のバージョン番号のメジャー部分を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 製品のバージョン番号は、次のように、バージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは ProductMajorPart 番号。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>。       このプロパティは、最初の 16 ビットのセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_9_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_9_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_9_1.cs)]"
  syntax:
    content: public int ProductMajorPart { get; }
    return:
      type: System.Int32
      description: "製品のバージョン番号のメジャー部分を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  id: ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルに関連付けられている製品のバージョン番号のマイナー部分を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 製品のバージョン番号は、次のように、バージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>。      -次の 16 ビットは、ProductMinorPart 数です。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>。       このプロパティは、16 ビットの 2 番目のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_11_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_11_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_11_1.vb)]"
  syntax:
    content: public int ProductMinorPart { get; }
    return:
      type: System.Int32
      description: "製品のバージョン番号のマイナー部分を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductName
  id: ProductName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このファイルを含む製品の名前を取得します。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_17_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_17_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_17_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "このファイルは、製品の名前と共に配布または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  id: ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このファイルが関連付けられている製品のプライベート パート番号を取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 製品のバージョン番号は、次のように、バージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>。      -最後の 16 ビットは、ProductPrivatePart 数です。       このプロパティは、16 ビットの最後のセットを取得します。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductPrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_25_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_25_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_25_1.cpp)]"
  syntax:
    content: public int ProductPrivatePart { get; }
    return:
      type: System.Int32
      description: "このファイルに関連付けられている製品のプライベート パート番号を表す値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  id: ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このファイルを含む製品のバージョンを取得します。"
  remarks: "通常は、バージョン番号は、「メジャー番号 number.build プライベート パート番号」として表示されます。 製品のバージョン番号は、次のように、バージョン番号を保持している 64 ビットの数値:-最初の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>。      -次の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>。      -16 ビットの 3 番目のセットは、<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>。      -最後の 16 ビットは、<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductVersion in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_15_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_15_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_15_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "このファイルは、製品のバージョンと共に配布または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  id: SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "ファイルの特殊ビルド情報を取得します。"
  remarks: "場合<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>は`true`SpecialBuild では、このファイルがファイルの標準のバージョンとは異なる方法を指定する必要があります</xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>。"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the special build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_1_1.cpp)]\n [!code-cs[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_1_1.cs)]\n [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_1_1.vb)]"
  syntax:
    content: public string SpecialBuild { get; }
    return:
      type: System.String
      description: "特別なビルド ファイルの情報または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルにバージョン情報が含まれていない場合。"
  overload: System.Diagnostics.FileVersionInfo.SpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ToString
  id: ToString
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "内のプロパティの部分的な一覧を返します、 <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>とその値。"
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it calls ToString to print a list of the file version information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_0_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_0_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A list of the following properties in this class and their values:       <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>,       <xref:System.Diagnostics.FileVersionInfo.Language*>.</xref:System.Diagnostics.FileVersionInfo.Language*>       ファイルにバージョン情報が含まれていない、この一覧は、要求されたファイルの名前のみが含まれます。 ブール値になります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、およびその他のすべてのエントリがされます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.FileVersionInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Diagnostics.FileVersionInfo.Comments
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
- uid: System.Diagnostics.FileVersionInfo
  parent: System.Diagnostics
  isExternal: false
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
- uid: System.Diagnostics.FileVersionInfo.Comments*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
- uid: System.Diagnostics.FileVersionInfo.CompanyName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
- uid: System.Diagnostics.FileVersionInfo.FileDescription*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: FileVersionInfo.GetVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
- uid: System.Diagnostics.FileVersionInfo.IsPatched*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString
  nameWithType: FileVersionInfo.ToString
