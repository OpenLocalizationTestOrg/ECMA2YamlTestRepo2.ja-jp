### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateManager
  id: VisualStateManager
  children:
  - System.Windows.VisualStateManager.#ctor
  - System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  - System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  - System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  - System.Windows.VisualStateManager.VisualStateGroupsProperty
  langs:
  - csharp
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
  type: Class
  summary: "状態とコントロールの状態を遷移のロジックを管理します。"
  remarks: "VisualStateManager では、特定の状態にあるとき、およびコントロールの状態が変更されたときに、コントロール、コントロールの外観の状態を指定することができます。 たとえば、<xref:System.Windows.Controls.Button>が押されていない場合よりもそれが押されたとき、少し異なる外観を持つ可能性があります</xref:System.Windows.Controls.Button>。 2 つの状態を<xref:System.Windows.Controls.Button>定義が押されたときに対応 (`&quot;Pressed&quot;`)、されていないと (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button> <xref:System.Windows.VisualState>。</xref:System.Windows.VisualState>状態にあるときのコントロールの外観が定義されています。 A<xref:System.Windows.VisualState>のコレクションを格納<xref:System.Windows.Media.Animation.Storyboard>コントロールがその状態のときに、コントロールの外観がどのように変化するかを指定するオブジェクト</xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.VisualState>。 表示状態管理を追加するを設定して、`VisualStateManager.VisualStateGroups`コントロールのプロパティを添付します。 各<xref:System.Windows.VisualStateGroup>のコレクションを格納<xref:System.Windows.VisualState>相互に排他的であるオブジェクト</xref:System.Windows.VisualState></xref:System.Windows.VisualStateGroup>。 つまり、コントロールが常に各<xref:System.Windows.VisualStateGroup>。</xref:System.Windows.VisualStateGroup>の&1; つの状態       VisualStateManager では、コントロールが特定の状態になるときに指定することもできます。 状態の変更を呼び出す必要のあるメソッドは、シナリオによって異なります。 VisualStateManager を使用するコントロールを作成するかどうかはその<xref:System.Windows.Controls.ControlTemplate>を呼び出し、<xref:System.Windows.VisualStateManager.GoToState%2A>メソッド</xref:System.Windows.VisualStateManager.GoToState%2A></xref:System.Windows.Controls.ControlTemplate>。 VisualStateManager を使用してコントロールを作成する方法の詳細については、次を参照してください。[を作成する、コントロールのある外観をカスタマイズできる](~/add/includes/ajax-current-ext-md.md)です。 外部 VisualStateManager を使用する場合、 <xref:System.Windows.Controls.ControlTemplate>(で VisualStateManager を使用する場合など、<xref:System.Windows.Controls.UserControl>または&1; つの要素に)、呼び出す、<xref:System.Windows.VisualStateManager.GoToElementState%2A>メソッド</xref:System.Windows.VisualStateManager.GoToElementState%2A></xref:System.Windows.Controls.UserControl></xref:System.Windows.Controls.ControlTemplate>。 どちらの場合、VisualStateManager は適切に開始および停止関係する状態に関連付けられているストーリー ボードに必要なロジックを実行します。 たとえば、コントロールが、状態を定義する`State1`と`State2`、それぞれが関連付けられているストーリー ボードを持ちます。 場合は、コントロールが`State1`して渡す`State2`に<xref:System.Windows.VisualStateManager.GoToState%2A>または<xref:System.Windows.VisualStateManager.GoToElementState%2A>、VisualStateManager でストーリー ボードを起動する`State2`でストーリー ボードを停止して`State1`</xref:System.Windows.VisualStateManager.GoToElementState%2A></xref:System.Windows.VisualStateManager.GoToState%2A>。       コントロールに含まれている[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]VisualStateManager を使用して、表示状態を変更します。 作成するときに、<xref:System.Windows.Controls.ControlTemplate>に含まれているコントロールの[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]、追加することができます<xref:System.Windows.VisualState>オブジェクトをコントロールの<xref:System.Windows.Controls.ControlTemplate>をある状態でコントロールの外観を指定します</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualState></xref:System.Windows.Controls.ControlTemplate>。 含まれているコントロールの視覚的な状態の名前を検索する[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]を参照してください[コントロールのスタイルとテンプレート](~/add/includes/ajax-current-ext-md.md)です。 コントロールのロジックのハンドルが以外の何もする必要はありませんので、状態を遷移<xref:System.Windows.VisualState>新しい<xref:System.Windows.Controls.ControlTemplate>。</xref:System.Windows.Controls.ControlTemplate>内のオブジェクト</xref:System.Windows.VisualState>の定義します。 既存のコントロールのコントロール テンプレートを作成する方法の詳細については、次を参照してください。 [、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/add/includes/ajax-current-ext-md.md)です。       VisualStateManager から継承、オーバーライドする必要がありますの状態を遷移するためのロジックを実装する場合、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド、およびセット、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName>カスタム ロジックを使用するコントロールのプロパティを添付します</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName></xref:System.Windows.VisualStateManager.GoToStateCore%2A>。"
  example:
  - "The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property. The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>. When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second. When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red. Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>. A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.  \n  \n [!code-xml[VSMCustomControl#VSMNoTemplate](~/add/codesnippet/xaml/vsmcustomcontrol/window1.xaml#vsmnotemplate)]  \n  \n The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states. If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.  \n  \n [!code-cs[VSMCustomControl#GoToElementState](~/add/codesnippet/csharp/vsmcustomcontrol/window1.xaml.cs#gotoelementstate)]\n [!code-vb[VSMCustomControl#GoToElementState](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/window1.xaml.vb#gotoelementstate)]"
  syntax:
    content: 'public class VisualStateManager : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateManager.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.VisualStateManager&quot;> </xref>クラスです。"
  syntax:
    content: public VisualStateManager ();
    parameters: []
  overload: System.Windows.VisualStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  id: CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>依存関係プロパティ</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  id: GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得、<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>添付プロパティ</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>。"
  syntax:
    content: public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "取得する要素、<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>からプロパティを添付します</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>。"
    return:
      type: System.Windows.VisualStateManager
      description: "コントロールの状態間を遷移する表示状態マネージャー。"
  overload: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  id: GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得、 &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt;添付プロパティ。"
  syntax:
    content: public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "取得する要素、 &lt;xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=fullName&gt;からプロパティを添付します。"
    return:
      type: System.Collections.IList
      description: "コレクション<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>指定したオブジェクトに関連付けられているオブジェクト。"
  overload: System.Windows.VisualStateManager.GetVisualStateGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "2 つの状態間の要素を移行します。 このメソッドを使用して、コントロールによって定義されているのではなく、アプリケーションによって定義されている遷移状態にします。"
  remarks: "外側の要素の状態を変更する GoToElementState メソッドを呼び出して、 <xref:System.Windows.Controls.ControlTemplate>(を使用する場合など、<xref:System.Windows.VisualStateManager>で、<xref:System.Windows.DataTemplate>または<xref:System.Windows.Window>).</xref:System.Windows.Window> </xref:System.Windows.DataTemplate> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.VisualStateManager.GoToState%2A>は、<xref:System.Windows.VisualStateManager>その<xref:System.Windows.Controls.ControlTemplate>。</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateManager>を使用するコントロールの状態を変更する場合、メソッド</xref:System.Windows.VisualStateManager.GoToState%2A>を呼び出す"
  example:
  - "The following example creates an application that prompts the user to guess a number between 1 and 100.  When the user enters a number, the application indicates whether the guess is too high, too low, or correct.  The following [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`. When the application begins, it is in the `Guessing` state. .  \n  \n [!code-xml[VSMGoToElementState#GoToElementStateXaml](~/add/codesnippet/xaml/vsmgotoelementstate/mainwindow.xaml#gotoelementstatexaml)]  \n  \n The following code shows the logic of the application.  When the user enters a number and clicks the button, the application calls GoToElementState to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.  To try this example, call the `GenerateNumber` method when the application begins.  \n  \n [!code-cs[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/csharp/vsmgotoelementstate/mainwindow.xaml.cs#gotoelementstatecode)]\n [!code-vb[VSMGoToElementState#GoToElementStateCode](~/add/codesnippet/visualbasic/vsmgotoelementstate/mainwindow.xaml.vb#gotoelementstatecode)]"
  syntax:
    content: public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);
    parameters:
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "ルート要素を含む、 <xref href=&quot;System.Windows.VisualStateManager&quot;></xref>です。"
    - id: stateName
      type: System.String
      description: "遷移先の状態。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用する、 <xref href=&quot;System.Windows.VisualTransition&quot;> </xref>オブジェクトの状態間を遷移するそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが正常に新しい状態に遷移した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.VisualStateManager.GoToElementState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "2 つの状態間の制御を移行します。 このメソッドを持つコントロールの状態の遷移を使用して、 <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;></xref>です。"
  remarks: "は、<xref:System.Windows.VisualStateManager>その<xref:System.Windows.Controls.ControlTemplate>。</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateManager>を使用するコントロールの状態を変更する場合は、GoToState メソッドを呼び出す 呼び出す、<xref:System.Windows.VisualStateManager.GoToElementState%2A>上の外部要素を変更する方法を示す、 <xref:System.Windows.Controls.ControlTemplate>(を使用する場合など、<xref:System.Windows.VisualStateManager>で、<xref:System.Windows.Controls.UserControl>または&1; つの要素).</xref:System.Windows.Controls.UserControl> </xref:System.Windows.VisualStateManager> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateManager.GoToElementState%2A>"
  example:
  - "The following example demonstrates a control that uses the GoToState method to transition between states. For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#UpdateStates](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#updatestates)]\n [!code-vb[VSMCustomControl#UpdateStates](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#updatestates)]"
  syntax:
    content: public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "状態間を遷移するコントロール。"
    - id: stateName
      type: System.String
      description: "遷移先の状態。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用する、 <xref href=&quot;System.Windows.VisualTransition&quot;> </xref>オブジェクトの状態間を遷移するそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが正常に新しい状態に遷移した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.VisualStateManager.GoToState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>stateName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  id: GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コントロールの状態を移行します。"
  remarks: "GoToStateCore メソッドでは、適切に開始および停止遷移に関連付けられているストーリー ボードに必要なロジックを実行します。 コントロールを呼び出すときに<xref:System.Windows.VisualStateManager.GoToState%2A>の状態を変更する、 <xref:System.Windows.VisualStateManager>、次の処理: - 最初に場合、<xref:System.Windows.VisualState>コントロールが遷移することが、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードを開始します</xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.VisualState></xref:System.Windows.VisualStateManager></xref:System.Windows.VisualStateManager.GoToState%2A>。 場合はその後、<xref:System.Windows.VisualState>が、コントロールがから送信されたこと、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードが終了します</xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.VisualState>。      場合は、コントロールは既に、`stateName`状態、<xref:System.Windows.VisualStateManager.GoToState%2A>は何も処理し、返します`true`</xref:System.Windows.VisualStateManager.GoToState%2A>。      If`stateName`に存在しません、<xref:System.Windows.Controls.ControlTemplate>の`control`、<xref:System.Windows.VisualStateManager.GoToState%2A>は何も処理し、返します`false`</xref:System.Windows.VisualStateManager.GoToState%2A></xref:System.Windows.Controls.ControlTemplate>。       独自に実装することができます<xref:System.Windows.VisualStateManager>ロジックを提供するさまざまな状態の間で切り替える</xref:System.Windows.VisualStateManager>。 たとえば、前に説明したロジックを変更することができます。 またはカスタム アニメーションの種類間を遷移するロジックを指定できます。  実装する、<xref:System.Windows.VisualStateManager>から継承するクラスを作成する<xref:System.Windows.VisualStateManager>GoToStateCore メソッドをオーバーライドします</xref:System.Windows.VisualStateManager></xref:System.Windows.VisualStateManager>。 カスタム クラスを使用する設定、<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>プロパティをカスタム型のオブジェクト</xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>。"
  syntax:
    content: protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);
    parameters:
    - id: control
      type: System.Windows.FrameworkElement
      description: "状態間を遷移するコントロール。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "ルート要素を含む、 <xref href=&quot;System.Windows.VisualStateManager&quot;></xref>です。"
    - id: stateName
      type: System.String
      description: "遷移先の状態の名前。"
    - id: group
      type: System.Windows.VisualStateGroup
      description: "<xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>が、状態が属しています。"
    - id: state
      type: System.Windows.VisualState
      description: "遷移先の状態の表現。"
    - id: useTransitions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用する、 <xref href=&quot;System.Windows.VisualTransition&quot;> </xref>オブジェクトの状態間を遷移するそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが正常に新しい状態に遷移した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.VisualStateManager.GoToStateCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "発生させる、 <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref>指定したイベント<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>オブジェクト。"
  remarks: "ときに、<xref:System.Windows.VisualStateGroup>に設定されている、 <xref:System.Windows.Controls.ControlTemplate>、コントロールの`control` <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>を所有するコントロールにパラメーターが設定されている</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateGroup>  ときに、<xref:System.Windows.VisualStateGroup>に設定されている、 <xref:System.Windows.FrameworkElement>、`control`は`null`必要がありますを使用して、`stateGroupsRoot`パラメーター</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup> 。"
  syntax:
    content: protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "オブジェクトを<xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;></xref>でイベントが発生しました。"
    - id: oldState
      type: System.Windows.VisualState
      description: "コントロールが遷移状態です。"
    - id: newState
      type: System.Windows.VisualState
      description: "状態に遷移するコントロールです。"
    - id: control
      type: System.Windows.FrameworkElement
      description: "状態が遷移を制御します。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "ルート要素を含む、 <xref href=&quot;System.Windows.VisualStateManager&quot;></xref>です。"
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  id: RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "発生させる、 <xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;> </xref>指定したイベント<xref href=&quot;System.Windows.VisualStateGroup&quot;></xref>オブジェクト。"
  remarks: "ときに、<xref:System.Windows.VisualStateGroup>に設定されている、 <xref:System.Windows.Controls.ControlTemplate>、コントロールの`control` <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate>を所有するコントロールにパラメーターが設定されている</xref:System.Windows.Controls.ControlTemplate></xref:System.Windows.VisualStateGroup>  ときに、<xref:System.Windows.VisualStateGroup>に設定されている、 <xref:System.Windows.FrameworkElement>、`control`は`null`必要がありますを使用して、`stateGroupsRoot`パラメーター</xref:System.Windows.FrameworkElement> </xref:System.Windows.VisualStateGroup> 。"
  syntax:
    content: protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);
    parameters:
    - id: stateGroup
      type: System.Windows.VisualStateGroup
      description: "オブジェクトを<xref href=&quot;System.Windows.VisualStateGroup.CurrentStateChanging&quot;></xref>でイベントが発生しました。"
    - id: oldState
      type: System.Windows.VisualState
      description: "コントロールが遷移状態です。"
    - id: newState
      type: System.Windows.VisualState
      description: "状態に遷移するコントロールです。"
    - id: control
      type: System.Windows.FrameworkElement
      description: "状態が遷移を制御します。"
    - id: stateGroupsRoot
      type: System.Windows.FrameworkElement
      description: "ルート要素を含む、 <xref href=&quot;System.Windows.VisualStateManager&quot;></xref>です。"
  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stateGroupsRoot</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>newState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  id: SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "セット、<xref:System.Windows.VisualStateManager.CustomVisualStateManager*>添付プロパティ</xref:System.Windows.VisualStateManager.CustomVisualStateManager*>。"
  syntax:
    content: public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);
    parameters:
    - id: obj
      type: System.Windows.FrameworkElement
      description: "プロパティを設定するオブジェクト。"
    - id: value
      type: System.Windows.VisualStateManager
      description: "コントロールの状態間を遷移する表示状態マネージャー。"
  overload: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  id: VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  langs:
  - csharp
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.VisualStateManager.VisualStateGroups*>依存関係プロパティ</xref:System.Windows.VisualStateManager.VisualStateGroups*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.VisualStateManager.#ctor
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager()
  nameWithType: VisualStateManager.VisualStateManager()
  fullName: System.Windows.VisualStateManager.VisualStateManager()
- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: CustomVisualStateManagerProperty
  nameWithType: VisualStateManager.CustomVisualStateManagerProperty
  fullName: System.Windows.VisualStateManager.CustomVisualStateManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager(FrameworkElement)
  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetCustomVisualStateManager(FrameworkElement)
- uid: System.Windows.VisualStateManager
  parent: System.Windows
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager
  fullName: System.Windows.VisualStateManager
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)
  fullName: System.Windows.VisualStateManager.GetVisualStateGroups(FrameworkElement)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToElementState(FrameworkElement,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState(FrameworkElement,String,Boolean)
  nameWithType: VisualStateManager.GoToState(FrameworkElement,String,Boolean)
  fullName: System.Windows.VisualStateManager.GoToState(FrameworkElement,String,Boolean)
- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
  fullName: System.Windows.VisualStateManager.GoToStateCore(FrameworkElement,FrameworkElement,String,VisualStateGroup,VisualState,Boolean)
- uid: System.Windows.VisualStateGroup
  parent: System.Windows
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
  fullName: System.Windows.VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup,VisualState,VisualState,FrameworkElement,FrameworkElement)
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
  fullName: System.Windows.VisualStateManager.SetCustomVisualStateManager(FrameworkElement,VisualStateManager)
- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateGroupsProperty
  nameWithType: VisualStateManager.VisualStateGroupsProperty
  fullName: System.Windows.VisualStateManager.VisualStateGroupsProperty
- uid: System.Windows.VisualStateManager.#ctor*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: VisualStateManager
  nameWithType: VisualStateManager.VisualStateManager
- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetCustomVisualStateManager
  nameWithType: VisualStateManager.GetCustomVisualStateManager
- uid: System.Windows.VisualStateManager.GetVisualStateGroups*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GetVisualStateGroups
  nameWithType: VisualStateManager.GetVisualStateGroups
- uid: System.Windows.VisualStateManager.GoToElementState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToElementState
  nameWithType: VisualStateManager.GoToElementState
- uid: System.Windows.VisualStateManager.GoToState*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToState
  nameWithType: VisualStateManager.GoToState
- uid: System.Windows.VisualStateManager.GoToStateCore*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: GoToStateCore
  nameWithType: VisualStateManager.GoToStateCore
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanged
  nameWithType: VisualStateManager.RaiseCurrentStateChanged
- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: RaiseCurrentStateChanging
  nameWithType: VisualStateManager.RaiseCurrentStateChanging
- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager*
  parent: System.Windows.VisualStateManager
  isExternal: false
  name: SetCustomVisualStateManager
  nameWithType: VisualStateManager.SetCustomVisualStateManager
