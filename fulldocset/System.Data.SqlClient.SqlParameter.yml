### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlParameter
  id: SqlParameter
  children:
  - System.Data.SqlClient.SqlParameter.#ctor
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  - System.Data.SqlClient.SqlParameter.CompareInfo
  - System.Data.SqlClient.SqlParameter.DbType
  - System.Data.SqlClient.SqlParameter.Direction
  - System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  - System.Data.SqlClient.SqlParameter.IsNullable
  - System.Data.SqlClient.SqlParameter.LocaleId
  - System.Data.SqlClient.SqlParameter.Offset
  - System.Data.SqlClient.SqlParameter.ParameterName
  - System.Data.SqlClient.SqlParameter.Precision
  - System.Data.SqlClient.SqlParameter.ResetDbType
  - System.Data.SqlClient.SqlParameter.ResetSqlDbType
  - System.Data.SqlClient.SqlParameter.Scale
  - System.Data.SqlClient.SqlParameter.Size
  - System.Data.SqlClient.SqlParameter.SourceColumn
  - System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  - System.Data.SqlClient.SqlParameter.SourceVersion
  - System.Data.SqlClient.SqlParameter.SqlDbType
  - System.Data.SqlClient.SqlParameter.SqlValue
  - System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlParameter.ToString
  - System.Data.SqlClient.SqlParameter.TypeName
  - System.Data.SqlClient.SqlParameter.UdtTypeName
  - System.Data.SqlClient.SqlParameter.Value
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  langs:
  - csharp
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
  type: Class
  summary: "パラメーターを表します、 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>および必要に応じてそのへのマッピング<xref href=&quot;System.Data.DataSet&quot;></xref>列です。 このクラスは継承できません。 パラメーターの詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/add/includes/ajax-current-ext-md.md)です。"
  remarks: "パラメーター名では、大文字と小文字が区別されません。      > [!NOTE] > Nameless、序数に基づくとも呼ばれます。 パラメーターが、SQL Server の .NET Framework データ プロバイダーによってサポートされていません。       詳細については、その他のサンプル コードと共にパラメーターを使用する方法を示すについて[コマンドおよびパラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates multiple instances of SqlParameter through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and put the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created by using the appropriate schema, commands, and connection. For more information and additional examples on using parameters, see [Retrieving and Modifying Data in ADO.NET](~/add/includes/ajax-current-ext-md.md) and [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).  \n  \n [!code-cs[Classic WebData SqlParameter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._0_1.cs)]\n [!code-vb[Classic WebData SqlParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlParameter/SqlParameterConverter))]

      public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public SqlParameter ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  id: '#ctor(System.String,System.Data.SqlDbType)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>パラメーター名およびデータ型を使用します。"
  remarks: "データ型と、必要に応じて、**サイズ**と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーター</xref:System.Data.SqlClient.SqlParameter.Precision%2A> 。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/csharp/4c1dfa04-4b19-4ef9-bf3e-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/visualbasic/4c1dfa04-4b19-4ef9-bf3e-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された値、 <code> dbType </code>パラメーターは、無効なバックエンド データ型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>をパラメーター名と新しい値を使用してクラス<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>です。"
  remarks: "指定すると、<xref:System.Object>で、`value`パラメーター、 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> <xref:System.Object>.</xref:System.Object>の Microsoft .NET Framework の型から推論される</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Object>       このオーバー ロードを使用する場合は、注意を使用して、<xref:System.Data.SqlClient.SqlParameter>コンス トラクターの整数パラメーターの値を指定します</xref:System.Data.SqlClient.SqlParameter>。 このオーバー ロードはため、`value`型の<xref:System.Object>は整数値を変換する必要があります、<xref:System.Object>入力値が&0;、c# の例を次に示します</xref:System.Object></xref:System.Object>。      ```   Parameter = new SqlParameter(&quot;@pname&quot;, (object)0);   ```この変換を実行しない場合、コンパイラを呼び出すしようとするいると想定、 `SqlParameter` (`string`、 `SqlDbType`) コンス トラクター オーバー ロードします。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._12_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._12_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>の値である、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref></xref:System.Object> 。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>パラメーター名を使用するクラス、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>、およびサイズです。"
  remarks: "**サイズ**の値から推論される、`dbType`パラメーター明示的に設定されていない場合、`size`パラメーター。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/csharp/63cca4fc-f4fc-4270-865a-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/visualbasic/63cca4fc-f4fc-4270-865a-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。"
    - id: size
      type: System.Int32
      description: "パラメーターの長さ。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された値、 <code> dbType </code>パラメーターは、無効なバックエンド データ型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>パラメーター名を使用するクラス、 <xref href=&quot;System.Data.SqlDbType&quot;></xref>サイズ、およびソース列名。"
  remarks: "**サイズ**の値から推論される、`dbType`パラメーター明示的に設定されていない場合、`size`パラメーター。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/visualbasic/90f2fc39-217a-4d4f-ba7a-_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/csharp/90f2fc39-217a-4d4f-ba7a-_1.cs)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。"
    - id: size
      type: System.Int32
      description: "パラメーターの長さ。"
    - id: sourceColumn
      type: System.String
      description: "基になる列の名前 (<>*>) 場合は、この<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>への呼び出しで使用される<> *> です。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された値、 <code> dbType </code>パラメーターは、無効なバックエンド データ型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>パラメーター名、パラメーターの型、パラメーターのサイズを使用するクラス、 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref>、パラメーター、パラメーターを基になる列の小数点以下桁数の有効桁数、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>使用、およびパラメーターの値にします。"
  remarks: "**サイズ**と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター</xref:System.Data.SqlClient.SqlParameter.Precision%2A> 。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/csharp/ebcbbbdb-fcc0-4579-9b6d-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/visualbasic/ebcbbbdb-fcc0-4579-9b6d-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。"
    - id: size
      type: System.Int32
      description: "パラメーターの長さ。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "1 つ、 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref>値。"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、フィールドの値を null にすることができます。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: precision
      type: System.Byte
      description: "合計数を小数点の右側および左側にある数字の<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。"
    - id: scale
      type: System.Byte
      description: "小数点以下桁数の合計数<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。"
    - id: sourceColumn
      type: System.String
      description: "基になる列の名前 (<>*>) 場合は、この<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>への呼び出しで使用される<> *> です。"
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "1 つ、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>値。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>の値である、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref></xref:System.Object> 。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された値、 <code> dbType </code>パラメーターは、無効なバックエンド データ型。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> 、パラメーター名、パラメーターの型、方向、パラメーターの長さを使用するクラス、有効桁数、小数点以下桁数のいずれかのソース列の名前、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>値は、基になる列の値のマッピングのブール値、 <xref uid=&quot;langword_csharp_SqlParameter&quot; name=&quot;SqlParameter&quot; href=&quot;&quot;> </xref>、この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前、この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマと、このパラメーターのスキーマ コレクションの名前。"
  remarks: "<xref:System.Data.SqlClient.SqlParameter.Size%2A>と<xref:System.Data.SqlClient.SqlParameter.Precision%2A>の値から推論されます、`dbType`パラメーターで明示的に設定されていない場合、`size`と`precision`パラメーター</xref:System.Data.SqlClient.SqlParameter.Precision%2A> </xref:System.Data.SqlClient.SqlParameter.Size%2A> 。"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);
    parameters:
    - id: parameterName
      type: System.String
      description: "マップするパラメーターの名前。"
    - id: dbType
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。"
    - id: size
      type: System.Int32
      description: "パラメーターの長さ。"
    - id: direction
      type: System.Data.ParameterDirection
      description: "1 つ、 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref>値。"
    - id: precision
      type: System.Byte
      description: "合計数を小数点の右側および左側にある数字の<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。"
    - id: scale
      type: System.Byte
      description: "小数点以下桁数の合計数<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。"
    - id: sourceColumn
      type: System.String
      description: "基になる列の名前 (<>*>) 場合は、この<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>への呼び出しで使用される<> *> です。"
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "1 つ、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>値。"
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ソース列が null 許容型以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>されていない場合。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>の値である、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref></xref:System.Object> 。"
    - id: xmlSchemaCollectionDatabase
      type: System.String
      description: "この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前。"
    - id: xmlSchemaCollectionOwningSchema
      type: System.String
      description: "この XML インスタンスのスキーマ コレクションがある所有リレーショナル スキーマ。"
    - id: xmlSchemaCollectionName
      type: System.String
      description: "このパラメーターのスキーマ コレクションの名前。"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定、<xref:System.Globalization.CompareInfo>このパラメーターの文字列比較を実行する方法を定義するオブジェクト</xref:System.Globalization.CompareInfo>。"
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A<xref:System.Globalization.CompareInfo>このパラメーターの文字列比較を定義するオブジェクト</xref:System.Globalization.CompareInfo>。"
  overload: System.Data.SqlClient.SqlParameter.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.DbType
  id: DbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>のパラメーターです。"
  remarks: "<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>DbType がリンクされているとします</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>。 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>サポート<xref:System.Data.SqlDbType>。</xref:System.Data.SqlDbType> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> DbType を設定するため、変更します。       サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.SqlDbType>メンバー</xref:System.Data.SqlDbType> 。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._41_1.cs)]\n [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Direction
  id: Direction
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはパラメーターが入力専用、出力専用かどうか、双方向、またはストアド プロシージャの戻り値パラメーターを示す値を設定します。"
  remarks: "場合、<xref:System.Data.ParameterDirection>は、出力、および関連付けられている実行<xref:System.Data.SqlClient.SqlCommand>、値を返さない、 <xref:System.Data.SqlClient.SqlParameter>、null 値が含まれています</xref:System.Data.SqlClient.SqlParameter></xref:System.Data.SqlClient.SqlCommand></xref:System.Data.ParameterDirection>。       `Output`、 `InputOut`、および`ReturnValue` <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> <xref:System.Data.SqlClient.SqlDataReader>。</xref:System.Data.SqlClient.SqlDataReader>を終了するまでにアクセスすることはできません</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>の呼び出しによって返されるパラメーター"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [Commands and Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [SQL Server and ADO.NET](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "1 つ、 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "有効ないずれかに、プロパティが設定されていない<xref href=&quot;System.Data.ParameterDirection&quot;></xref>値。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  id: ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "使用したときに、パラメーターの暗号化を強制[Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)です。 SQL Server では、パラメーターを暗号化する必要はありません、ドライバーに通知をパラメーターを使用して、クエリは失敗します。 このプロパティは、侵害された SQL server が、クライアントは、データの漏えいにつながる可能性がありますを不正な暗号化メタデータを提供するセキュリティ攻撃に対する保護を強化を提供します。"
  syntax:
    content: public bool ForceColumnEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、パラメーターがある force 列の暗号化です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  id: IsNullable
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはパラメーターが null 値を受け入れるかどうかを示す値を設定します。 IsNullable では、パラメーターの値を検証するのには使用されませんし、送信またはコマンドを実行するときに、null 値を受信するを防ぐことはできません。"
  remarks: "Null 値は、<xref:System.DBNull>クラス</xref:System.DBNull>を使用して処理されます。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#2](~/add/codesnippet/visualbasic/p-system.data.sqlclient._27_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#2](~/add/codesnippet/csharp/p-system.data.sqlclient._27_1.cs)]"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は null 値が受け入れられます。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  id: LocaleId
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または特定の地域の規約や言語を決定するロケール識別子を設定します。"
  remarks: "ロケールは、特定の地域の規約や言語を識別します。 特定の文字列 (文字セット) のエンコードに使用されるコード ページは、その文字列またはこれを生成した環境で使用されるロケールに基づいています。 このプロパティの入力パラメーター) の設定または取得 (出力パラメーター)、サーバーを使用してデータを交換するときに、文字列に接続するロケール。 このプロパティは通常と共に使用する、<xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>プロパティ</xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>。      ```   static void CreateSqlParameterLocaleId(){      SqlParameter parameter = new SqlParameter(&quot;pName&quot;, SqlDbType.VarChar);      parameter.LocaleId = 1033;   // English - United States   }   ```"
  syntax:
    content: public int LocaleId { get; set; }
    return:
      type: System.Int32
      description: "パラメーターに関連付けられているロケール識別子を返します。"
  overload: System.Data.SqlClient.SqlParameter.LocaleId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Offset
  id: Offset
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定のオフセット、<xref:System.Data.SqlClient.SqlParameter.Value*>プロパティ</xref:System.Data.SqlClient.SqlParameter.Value*>。"
  remarks: "`Offset`バイナリおよび文字列のデータのクライアント側のチャンキングのプロパティを使用します。 たとえば、サーバー上の列に 10 MB のテキストを挿入するために、ユーザー実行可能性があります 1 MB のチャンクの 10 個のパラメーター化された挿入の値をシフト`Offset`反復処理ごとに 1 mb です。       `Offset`バイナリ型のバイト数と文字列の文字数を指定します。 文字列の数では、終端の文字は含まれません。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#3](~/add/codesnippet/visualbasic/p-system.data.sqlclient._43_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#3](~/add/codesnippet/csharp/p-system.data.sqlclient._43_1.cs)]"
  syntax:
    content: public int Offset { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Data.SqlClient.SqlParameter.Value*>。</xref:System.Data.SqlClient.SqlParameter.Value*>オフセット 既定値は 0 です。"
  overload: System.Data.SqlClient.SqlParameter.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  id: ParameterName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定の名前、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>です。"
  remarks: "フォームで、パラメーター名が指定された@paramnameです。 実行する前に、パラメーター名を設定する必要があります、<xref:System.Data.SqlClient.SqlCommand>パラメーターに依存した</xref:System.Data.SqlClient.SqlCommand>。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>です。 既定では、空の文字列です。"
  overload: System.Data.SqlClient.SqlParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Precision
  id: Precision
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定を表すために使用する最大桁数、<xref:System.Data.SqlClient.SqlParameter.Value*>プロパティ</xref:System.Data.SqlClient.SqlParameter.Value*>。"
  remarks: "有効桁数のプロパティを持つパラメーターで使用する<xref:System.Data.SqlDbType>の`Decimal`</xref:System.Data.SqlDbType>。       有効桁数の値を指定する必要はありませんし<xref:System.Data.SqlClient.SqlParameter.Scale%2A>、入力パラメーターのプロパティ、パラメーターの値から推論することができますが、</xref:System.Data.SqlClient.SqlParameter.Scale%2A> 。 `Precision`および`Scale`は出力パラメーターおよび特定の有効桁数と小数点以下桁数、null 値を指定するなど、値を示すことがなく、パラメーターの完全なメタデータを指定する必要があるシナリオに必要です。      > [!NOTE] > データベースに渡されるデータを強制的にこのプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティ</xref:System.Math>。      > [!NOTE] > 精度を確認しないと、.NET Framework version 1.0 に含まれている Microsoft .NET Framework データ プロバイダーまたは<xref:System.Data.SqlClient.SqlParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter.Scale%2A>。 これにより、切り捨てられたデータがデータ ソースに挿入されている可能性があります。 .NET Framework version 1.0 を使用している場合は、有効桁数を検証し、<xref:System.Data.SqlClient.SqlParameter.Scale%2A>の<xref:System.Decimal>パラメーターの値を設定する前に値</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter.Scale%2A>。 .NET Framework version 1.1 またはそれ以降のバージョンを使用する場合、例外がスローされます、 <xref:System.Decimal>、無効な有効桁数を持つパラメーターの値を設定します</xref:System.Decimal>。 <xref:System.Data.SqlClient.SqlParameter.Scale%2A>超える値、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます</xref:System.Decimal>。</xref:System.Data.SqlClient.SqlParameter.Scale%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "表すために使用する最大桁数、 <> </> *> プロパティです。既定値は 0 です。これは、データ プロバイダーが精度を設定することを示します。 <> </> *> です。"
  overload: System.Data.SqlClient.SqlParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "これに関連付けられている型をリセット<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>です。"
  remarks: "コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出す両方影響<xref:System.Data.SqlClient.SqlParameter.DbType%2A>および<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A><xref:System.Data.SqlClient.SqlParameter>。</xref:System.Data.SqlClient.SqlParameter>プロパティ</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  id: ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "これに関連付けられている型をリセット<xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref>です。"
  remarks: "コマンドを実行するときに、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することができます値からその型を推論することができます。 このメソッドを呼び出すことでは、その型パラメーターに渡される値からもう一度推測できるようににパラメーターをリセットします。 このメソッドを呼び出す両方影響<xref:System.Data.SqlClient.SqlParameter.DbType%2A>および<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A><xref:System.Data.SqlClient.SqlParameter>。</xref:System.Data.SqlClient.SqlParameter>プロパティ</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public void ResetSqlDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Scale
  id: Scale
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または小数点以下桁数を設定する<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。"
  remarks: "スケールのプロパティを持つパラメーターで使用する<xref:System.Data.SqlDbType>の`Decimal`</xref:System.Data.SqlDbType>。      > [!WARNING] > スケールのプロパティが明示的に指定されていないと、サーバー上のデータが 0 (既定値) のスケールに収まらない場合、データが切り捨てられることができます。       値を指定する必要はありません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>ように、パラメーターの値から推論することができますが、入力パラメーターのプロパティを拡張します</xref:System.Data.SqlClient.SqlParameter.Precision%2A>。 `Precision`および`Scale`は出力パラメーターおよび特定の有効桁数と小数点以下桁数、null 値を指定するなど、値を示すことがなく、パラメーターの完全なメタデータを指定する必要があるシナリオに必要です。      > [!NOTE] > データベースに渡されるデータを強制的にこのプロパティの使用はサポートされていません。 Round、切り捨てる、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、<xref:System.Math>クラスの一部である、`System`パラメーターの値を割り当てる前に名前空間`Value`プロパティ</xref:System.Math>。      > [!NOTE] >、.NET Framework version 1.0 に含まれている .NET framework データ プロバイダーでは確認されません、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>または小数点以下桁数<xref:System.Decimal>パラメーターの値</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter.Precision%2A>。 これにより、切り捨てられたデータ データ ソースに挿入される可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、<xref:System.Data.SqlClient.SqlParameter.Precision%2A>と<xref:System.Data.SqlClient.SqlParameter>の<xref:System.Decimal>パラメーターの値を設定する前に値</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter></xref:System.Data.SqlClient.SqlParameter.Precision%2A>。 超える値のスケール、<xref:System.Decimal>パラメーター スケールは引き続き、切り詰められます</xref:System.Decimal>。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#4](~/add/codesnippet/visualbasic/p-system.data.sqlclient._60_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#4](~/add/codesnippet/csharp/p-system.data.sqlclient._60_1.cs)]"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "小数点以下桁数<xref:System.Data.SqlClient.SqlParameter.Value*>は解決します</xref:System.Data.SqlClient.SqlParameter.Value*>。 既定値は 0 です。"
  overload: System.Data.SqlClient.SqlParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Size
  id: Size
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または列内のデータのバイト単位で最大のサイズを設定します。"
  remarks: "戻り値は受けません。 このプロパティストアド プロシージャからの戻り値のパラメーターは、常に固定サイズの整数です。       可変長型 (たとえば nvarchar) の出力パラメーター、パラメーターのサイズは、出力パラメーターを保持するバッファーのサイズを定義します。 出力パラメーターは、サイズが指定されたサイズに切り捨てられます。 文字型のサイズで指定されたサイズは文字です。       Binary と文字列型、サイズ プロパティは使用されます。 型のパラメーター `SqlType.String`、 `Size` Unicode 文字の長さを意味します。 型のパラメーター `SqlType.Xml`、`Size`は無視されます。       文字列以外のデータ型と ANSI の文字列データは、サイズ プロパティは、バイトの数を示します。 Unicode 文字列データのサイズと文字の数です。 文字列の数では、終端の文字は含まれません。       可変長データ型のサイズは、サーバーに送信するデータの最大量について説明します。 たとえば、Unicode 文字列値は、サイズを&100; を最初の文字に、サーバーに送信されるデータの量を制限する使用可能性があります。       明示されていない場合は、セット、サイズが指定したパラメーター値の実際のサイズから推測されます。       パラメーターの値の小数部がサイズよりも大きい場合、値がサイズに合わせて切り捨てられます。       固定長データ型、サイズの値は無視されます。 サーバーへのパラメーターの値を送信するときに、プロバイダーを使用して、情報として利用できます。       ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#5](~/add/codesnippet/visualbasic/p-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#5](~/add/codesnippet/csharp/p-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "列内のデータのバイト単位の最大サイズ。 既定値は、パラメーターの値から推論されます。"
  overload: System.Data.SqlClient.SqlParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定にマップされたソース列の名前、 <xref href=&quot;System.Data.DataSet&quot;> </xref>ロードしたり返したりするために使用して、<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "SourceColumn が空の文字列以外に設定されている場合は、パラメーターの値が SourceColumn 名前の列から取得されます。 場合<xref:System.Data.SqlClient.SqlParameter.Direction%2A>に設定されている`Input`、 <xref:System.Data.DataSet>.</xref:System.Data.DataSet>から値を取得</xref:System.Data.SqlClient.SqlParameter.Direction%2A> 場合<xref:System.Data.SqlClient.SqlParameter.Direction%2A>éý &quot; è `Output`、データ ソースから値を取得します</xref:System.Data.SqlClient.SqlParameter.Direction%2A>。 A<xref:System.Data.SqlClient.SqlParameter.Direction%2A>の`InputOutput`両方の組み合わせです</xref:System.Data.SqlClient.SqlParameter.Direction%2A>。       SourceColumn プロパティを使用する方法の詳細については、次を参照してください。 [DataAdapter パラメーター](~/add/includes/ajax-current-ext-md.md)と[Dataadapter によるデータ ソースを更新](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#6](~/add/codesnippet/visualbasic/p-system.data.sqlclient._48_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#6](~/add/codesnippet/csharp/p-system.data.sqlclient._48_1.cs)]"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "マップされたソース列の名前、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。 既定では、空の文字列です。"
  overload: System.Data.SqlClient.SqlParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "設定または基になる列が null 許容かどうかを示す値を取得します。 これにより、 <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref>を正しく null 許容列の Update ステートメントを生成します。"
  remarks: "SourceColumnNullMapping を使って、 <xref:System.Data.SqlClient.SqlCommandBuilder>null 許容の列を処理するときに、更新コマンドを正しく生成します</xref:System.Data.SqlClient.SqlCommandBuilder>。 一般に、SourceColumnNullMapping の使用は<xref:System.Data.SqlClient.SqlCommandBuilder>。</xref:System.Data.SqlClient.SqlCommandBuilder>から継承する開発者に制限されます。       <xref:System.Data.Common.DbCommandBuilder>このプロパティを使用して、基になる列が、null 値し、このプロパティを設定するかどうかを判断する`true`、null 許容である場合と`false`されていない場合。</xref:System.Data.Common.DbCommandBuilder> ときに<xref:System.Data.SqlClient.SqlCommandBuilder>は、Update ステートメントを生成するには、各パラメーターの SourceColumnNullMapping を調べます</xref:System.Data.SqlClient.SqlCommandBuilder>。 プロパティの場合`true`、<xref:System.Data.SqlClient.SqlCommandBuilder>次のように WHERE 句が生成されます (このクエリ式では、&quot;FieldName&quot;名を表すフィールドの):```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```フィールドの場合の SourceColumnNullMapping が false の場合、<xref:System.Data.SqlClient.SqlCommandBuilder>次の WHERE 句が生成されます:```   FieldName = @OriginalFieldName   ```さらに、@IsNull_FieldNameそうでない場合、null と 0 をソース フィールドが存在する場合、1 が含まれています</xref:System.Data.SqlClient.SqlCommandBuilder></xref:System.Data.SqlClient.SqlCommandBuilder>。 このメカニズムでは、SQL Server のパフォーマンスの最適化ではの複数のプロバイダーの間で機能する一般的なコードを提供します。"
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ソース列が null 許容型以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>されていない場合。"
  overload: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>を読み込むときに使用するには<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "このプロパティが使用、`SqlDataAdapter.UpdateCommand`の更新時にパラメーター値に、元のまたは現在の値を使用するかどうかを判断します。 これにより、プライマリ キーを更新できます。 このプロパティのバージョンに、<xref:System.Data.DataRow>によって使用される、`DataRow.Item`プロパティ、またはのいずれか、`DataRow.GetChildRows`のメソッド、<xref:System.Data.DataRow>オブジェクト</xref:System.Data.DataRow></xref:System.Data.DataRow>。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#7](~/add/codesnippet/visualbasic/p-system.data.sqlclient._64_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#7](~/add/codesnippet/csharp/p-system.data.sqlclient._64_1.cs)]"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "1 つ、 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  id: SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>のパラメーターです。"
  remarks: "SqlDbType と<xref:System.Data.SqlClient.SqlParameter.DbType%2A>がリンクされている</xref:System.Data.SqlClient.SqlParameter.DbType%2A>。 そのため、設定の<xref:System.Data.SqlClient.SqlParameter.DbType%2A>変更をサポートする<xref:System.Data.SqlDbType>。</xref:System.Data.SqlDbType> SqlDbType</xref:System.Data.SqlClient.SqlParameter.DbType%2A>       サポートされるデータ型の一覧を参照してください、適切な<xref:System.Data.SqlDbType>メンバー</xref:System.Data.SqlDbType> 。 詳細については、次を参照してください。 [DataAdapter パラメーター](~/add/includes/ajax-current-ext-md.md)です。       ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Data.SqlDbType SqlDbType { get; set; }
    return:
      type: System.Data.SqlDbType
      description: "1 つ、 <xref href=&quot;System.Data.SqlDbType&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlParameter.SqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  id: SqlValue
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL の型として、パラメーターの値を設定します。"
  remarks: "入力パラメーターの値がバインドされている、<xref:System.Data.SqlClient.SqlCommand>サーバーに送信される</xref:System.Data.SqlClient.SqlCommand>。 完了時に出力パラメーターと戻り値パラメーターの値を設定、<xref:System.Data.SqlClient.SqlCommand>後、<xref:System.Data.SqlClient.SqlDataReader>が閉じられた</xref:System.Data.SqlClient.SqlDataReader></xref:System.Data.SqlClient.SqlCommand>。       このプロパティ null または<xref:System.DBNull.Value>.</xref:System.DBNull.Value> 使用して<xref:System.DBNull.Value>パラメーターの値として NULL 値を送信する</xref:System.DBNull.Value>。 Null を使用またはパラメーターの既定値を使用する SqlValue を設定しないでください。       アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき連結値はその型に変換されます。 プロバイダーがサポートしている場合は、任意の型の値を変換しようとした場合、<xref:System.IConvertible>インターフェイス</xref:System.IConvertible>。 指定した型の値と互換性がない場合、変換エラーがあります。       両方の<xref:System.Data.SqlClient.SqlParameter.DbType%2A><xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A><xref:System.Data.SqlClient.SqlParameter.Value%2A>。</xref:System.Data.SqlClient.SqlParameter.Value%2A>を設定してプロパティ</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>を推論することができます。</xref:System.Data.SqlClient.SqlParameter.DbType%2A>       <xref:System.Data.SqlClient.SqlParameter.Value%2A>でプロパティを上書き`SqlDataAdapter.UpdateCommand`</xref:System.Data.SqlClient.SqlParameter.Value%2A>。       使用して、<xref:System.Data.SqlClient.SqlParameter.Value%2A>として共通言語ランタイム (CLR) 型にパラメーター値が返されるプロパティ</xref:System.Data.SqlClient.SqlParameter.Value%2A>。       ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public object SqlValue { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>SQL 型を使用して、パラメーターの値である</xref:System.Object>。 既定値は null です。"
  overload: System.Data.SqlClient.SqlParameter.SqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "このメンバーの説明、 <xref:System.ICloneable.Clone*>。</xref:System.ICloneable.Clone*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.SqlClient.SqlParameter>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Data.SqlClient.SqlParameter>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しい<xref:System.Object>のこのインスタンスのコピーである</xref:System.Object>。"
  overload: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "<xref:System.Data.SqlClient.SqlParameter.ParameterName*>。</xref:System.Data.SqlClient.SqlParameter.ParameterName*>を表す文字列を取得します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.Data.SqlClient.SqlParameter.ParameterName*>。</xref:System.Data.SqlClient.SqlParameter.ParameterName*>を表す文字列"
  overload: System.Data.SqlClient.SqlParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.TypeName
  id: TypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはテーブル値パラメーターの型名を設定します。"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "指定されたテーブル値パラメーターの型名。"
  overload: System.Data.SqlClient.SqlParameter.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  id: UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>をパラメーターとしてユーザー定義型を表すです。"
  remarks: "UdtTypeName を示すサンプルについては、次を参照してください。 [UDT データの取得](http://msdn.microsoft.com/library/ms131080.aspx)です。"
  syntax:
    content: public string UdtTypeName { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>データベース内のユーザー定義型の完全修飾名を表すです。"
  overload: System.Data.SqlClient.SqlParameter.UdtTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Value
  id: Value
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはパラメーターの値を設定します。"
  remarks: "入力パラメーターの値がバインドされている、<xref:System.Data.SqlClient.SqlCommand>サーバーに送信される</xref:System.Data.SqlClient.SqlCommand>。 完了時に出力パラメーターと戻り値パラメーターの値を設定、<xref:System.Data.SqlClient.SqlCommand>後、<xref:System.Data.SqlClient.SqlDataReader>が閉じられた</xref:System.Data.SqlClient.SqlDataReader></xref:System.Data.SqlClient.SqlCommand>。       このプロパティ null または<xref:System.DBNull.Value>.</xref:System.DBNull.Value> 使用して<xref:System.DBNull.Value>パラメーターの値として NULL 値を送信する</xref:System.DBNull.Value>。 Null を使用して、またはパラメーターの既定値を使用する値を設定しないでください。       Unicode 以外の XML データが文字列として渡された場合、例外がスローされます。       アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき連結値はその型に変換されます。 プロバイダーがサポートしている場合は、任意の型の値を変換しようとした場合、<xref:System.IConvertible>インターフェイス</xref:System.IConvertible>。 指定した型の値と互換性がない場合、変換エラーがあります。       両方の<xref:System.Data.SqlClient.SqlParameter.DbType%2A>と<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>値を設定してプロパティを推論することができます</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A></xref:System.Data.SqlClient.SqlParameter.DbType%2A>。       Value プロパティはによって上書きされる`SqlDataAdapter.UpdateCommand`です。       ストリーミングについては、次を参照してください。 [SqlClient ストリーミング サポート](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#8](~/add/codesnippet/visualbasic/p-system.data.sqlclient._17_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#8](~/add/codesnippet/csharp/p-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>パラメーターの値である</xref:System.Object>。 既定値は null です。"
  overload: System.Data.SqlClient.SqlParameter.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  id: XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "この XML インスタンスのスキーマ コレクションがあるデータベースの名前を取得します。"
  remarks: "この値は null (`Nothing` Microsoft Visual Basic で) コレクションが現在のデータベース内で定義されている場合。 存在しない場合、スキーマ コレクションの場合は null も<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>も null にします</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A></xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>。"
  syntax:
    content: public string XmlSchemaCollectionDatabase { get; set; }
    return:
      type: System.String
      description: "この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  id: XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "この XML インスタンスのスキーマ コレクションの名前を取得します。"
  remarks: "この値は null (`Nothing` Microsoft Visual Basic で) 関連付けられているスキーマ コレクションが存在しない場合。 場合は、値は、null、<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>も null にします</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A></xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>。"
  syntax:
    content: public string XmlSchemaCollectionName { get; set; }
    return:
      type: System.String
      description: "この XML インスタンスのスキーマ コレクションの名前。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  id: XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "この XML インスタンスのスキーマ コレクションがある所有リレーショナル スキーマ。"
  remarks: "この値は null (`Nothing` Microsoft Visual Basic で) コレクションが現在のデータベース内で定義されている場合。 存在しない場合、スキーマ コレクションの場合は null も<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>と<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>も null にします</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A></xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>。"
  syntax:
    content: public string XmlSchemaCollectionOwningSchema { get; set; }
    return:
      type: System.String
      description: "この XML インスタンスの所有リレーショナル スキーマ。"
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlParameter.#ctor
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlDbType
  parent: System.Data
  isExternal: false
  name: SqlDbType
  nameWithType: SqlDbType
  fullName: System.Data.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Data.SqlClient.SqlParameter.DbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
- uid: System.Data.SqlClient.SqlParameter.Scale
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlParameter.ToString
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
- uid: System.Data.SqlClient.SqlParameter.TypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
- uid: System.Data.SqlClient.SqlParameter.#ctor*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter.SqlParameter
- uid: System.Data.SqlClient.SqlParameter.CompareInfo*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
- uid: System.Data.SqlClient.SqlParameter.DbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType
  nameWithType: SqlParameter.ResetDbType
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType
  nameWithType: SqlParameter.ResetSqlDbType
- uid: System.Data.SqlClient.SqlParameter.Scale*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlParameter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlParameter.ToString*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString
  nameWithType: SqlParameter.ToString
- uid: System.Data.SqlClient.SqlParameter.TypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
