### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  summary: "アセンブリのダウンロード元となるサイトの Web アクセス許可を付与します。 このクラスは継承できません。"
  remarks: "コード グループとは、コード アクセス セキュリティ ポリシーの構成要素です。 各ポリシー レベルは、1 つまたは複数の子コード グループを持つことができるルート コード グループで構成されます。 各子コード グループは、独自の子コード グループを持つことができます。この動作は、任意のツリーを形成するレベル数を拡張します。 各コード グループには、指定したアセンブリ、そのアセンブリの証拠に基づくグループに属している場合を決定するメンバーシップ条件があります。 メンバーシップ条件を持つとその子コード グループの指定したアセンブリと一致するコード グループだけでは、コード アクセス セキュリティ ポリシーを適用します。       NetCodeGroup のと同じ結合セマンティクスを持つ<xref:System.Security.Policy.UnionCodeGroup>; の和集合を形成、<xref:System.Security.Policy.PolicyStatement>の一致するすべての子オブジェクトのコード グループと<xref:System.Security.Policy.PolicyStatement>入力から生成<xref:System.Security.Policy.Url>証拠</xref:System.Security.Policy.Url></xref:System.Security.Policy.PolicyStatement></xref:System.Security.Policy.PolicyStatement></xref:System.Security.Policy.UnionCodeGroup>。 ただし、NetCodeGroup が元となるコードを実行します。 サイトを接続アクセスを許可する動的に計算された<xref:System.Net.WebPermission>を含むアクセス許可を返します<xref:System.Security.Policy.UnionCodeGroup>単に、静的なアクセス許可セットを返します</xref:System.Security.Policy.UnionCodeGroup></xref:System.Net.WebPermission>。       NetCodeGroup が作成されると、次の表に示すように既定の接続アクセス規則が含まれています。      |URI スキーム |ルール |  |----------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。      スキームおよびを渡すことによって、その元のサイトに接続するときに使用するコードが許可されているポートを制御することができます、<xref:System.Security.Policy.CodeConnectAccess>オブジェクトと適切な<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>と<xref:System.Security.Policy.CodeConnectAccess.Port%2A>プロパティ値を<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>メソッド</xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A></xref:System.Security.Policy.CodeConnectAccess.Port%2A></xref:System.Security.Policy.CodeConnectAccess.Scheme%2A></xref:System.Security.Policy.CodeConnectAccess>。 元のスキームが証拠に存在しないかを指定して認識されないときに適用される接続アクセス規則を作成する<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>(&quot;&quot;)、スキームとして</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>。 指定して一致する構成を組み合わせてアクセス ルールが接続されていないときに適用される接続アクセス規則を作成することもできます<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>(&quot;*&quot;)、スキームとして。</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> 。      > [!NOTE] > 任意のスキームを使用して、送信元のサイトにアクセスを許可するコードが証拠として URI スキームを送信しない場合。"
  example:
  - "The following code example demonstrates creating a NetCodeGroup and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_8_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_8_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref>クラスです。"
  remarks: "ときに、<xref:System.Security.Policy.NetCodeGroup>が作成されるが含まれている次の表に示すように既定の接続アクセス規則</xref:System.Security.Policy.NetCodeGroup>。      |スキーム |ルール |  |------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/e7170b34-662f-4231-84e8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/e7170b34-662f-4231-84e8-_1.cpp)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "このコード グループがコード アクセス セキュリティ ポリシーを適用するかどうかを判断する証拠をテストするメンバーシップ条件です。"
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "型、 <code> membershipCondition </code>パラメーターが無効です。"
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "不明であるか、または認識されない原点スキームでコードの接続アクセスを指定する値が含まれています。"
  remarks: "呼び出すときに、<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>メソッド、スキームと関連付けられているを指定する<xref:System.Security.Policy.CodeConnectAccess>オブジェクト</xref:System.Security.Policy.CodeConnectAccess></xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>。 どの<xref:System.Security.Policy.CodeConnectAccess>に追加するオブジェクト、<xref:System.Security.Policy.NetCodeGroup>コードの元のスキームがその証拠に存在しないか、またはで認識されるスキーマではない時に適用される元のスキームとして AbsentOriginScheme を使用して、<xref:System.Security.Policy.NetCodeGroup>オブジェクト</xref:System.Security.Policy.NetCodeGroup></xref:System.Security.Policy.NetCodeGroup></xref:System.Security.Policy.CodeConnectAccess>。       指定する、<xref:System.Security.Policy.CodeConnectAccess>コードの元のスキームに一致しない場合に現在追加元スキームのセットに含まれているパターンのいずれかを使用するオブジェクト<xref:System.Security.Policy.NetCodeGroup>オブジェクトを使用して、<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>値</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme></xref:System.Security.Policy.NetCodeGroup></xref:System.Security.Policy.CodeConnectAccess>。       AbsentOriginScheme フィールドの値は空の文字列 (&quot;&quot;) です。"
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定した接続アクセスを現在のコード グループに追加します。"
  remarks: "複数を追加する<xref:System.Security.Policy.CodeConnectAccess>同じオブジェクト`origin scheme`</xref:System.Security.Policy.CodeConnectAccess>。 場合、 `origin scheme`&1; つ以上の関連するには既に<xref:System.Security.Policy.CodeConnectAccess>を指定するオブジェクト`null`の`connectAccess`も何も起こりません</xref:System.Security.Policy.CodeConnectAccess>。 元のスキームが関連付けられていない場合<xref:System.Security.Policy.CodeConnectAccess>を指定するオブジェクト`null`の`connectAccess`により、元のスキームに一致するとコード`originScheme`その元のサーバーにアクセスできない</xref:System.Security.Policy.CodeConnectAccess>。"
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/c09efa70-70d7-4f2a-aa3b-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/c09efa70-70d7-4f2a-aa3b-_1.cpp)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: "A<xref:System.String>コードのスキームと照合するスキームを含むします</xref:System.String>。"
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: "A <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>スキームおよびポートのコードを使用して、元のサーバーに接続を指定します。"
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>originScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code>スキームでは許可されない文字が含まれています。       -or-       <code>originScheme</code> = <xref href=&quot;System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot;></xref> and <code>connectAccess</code> specifies <xref href=&quot;System.Security.Policy.CodeConnectAccess.OriginScheme&quot;></xref> as its scheme."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "他の不特定の元のスキームを指定する値が含まれています。"
  remarks: "呼び出すときに、<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>メソッド、スキームと関連付けられているを指定する<xref:System.Security.Policy.CodeConnectAccess>オブジェクト</xref:System.Security.Policy.CodeConnectAccess></xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>。 AnyOtherOriginScheme フィールドの値を使用して、<xref:System.Security.Policy.CodeConnectAccess>現在追加元スキームのセットに明示的に含まれていない任意のスキームを使用するオブジェクト<xref:System.Security.Policy.NetCodeGroup>オブジェクト</xref:System.Security.Policy.NetCodeGroup></xref:System.Security.Policy.CodeConnectAccess>。       <xref:System.Security.Policy.CodeConnectAccess>AnyOtherOriginScheme フィールドで指定したオブジェクトには、コードの元のスキームに一致しない場合に現在追加元スキームのセットに含まれているパターンのいずれかのみを使用、<xref:System.Security.Policy.NetCodeGroup>オブジェクト</xref:System.Security.Policy.NetCodeGroup></xref:System.Security.Policy.CodeConnectAccess>。       指定する、<xref:System.Security.Policy.CodeConnectAccess>コードの元のスキームが証拠で利用できないかが認識されないときに適用するオブジェクトを使用して、<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>値</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme></xref:System.Security.Policy.CodeConnectAccess>。       AnyOtherOriginScheme フィールドの値は&quot;*&quot;です。"
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コード グループのポリシー ステートメントの属性の文字列表現を取得します。"
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のコード グループのディープ コピーを作成します。"
  remarks: "このメソッドは、コード グループに含まれるすべてのオブジェクトのコピーも行われることを意味、コード グループの詳細コピーを作成します。"
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "メンバーシップ条件と子コード グループを含む、現在のコード グループの同等のコピー。"
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "追加します。"
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "追加します。"
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定されたコード グループが現在のコード グループと等しいかどうかを判断します。"
  remarks: "次のデータが&2; つの等しいかどうかを使用する<xref:System.Security.Policy.NetCodeGroup>オブジェクト: -<xref:System.Security.Policy.CodeGroup.Name%2A>と<xref:System.Security.Policy.CodeGroup.Description%2A>プロパティ</xref:System.Security.Policy.CodeGroup.Description%2A></xref:System.Security.Policy.CodeGroup.Name%2A></xref:System.Security.Policy.NetCodeGroup>。      -<xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>プロパティ</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>。      -一連の原点のスキームと関連付けられている<xref:System.Security.Policy.CodeConnectAccess>オブジェクト</xref:System.Security.Policy.CodeConnectAccess>。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref>現在のコード グループと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたコード グループは、現在のコード グループと同じ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のコード グループの接続アクセス情報を取得します。"
  remarks: "各ディクショナリ エントリで、<xref:System.Collections.DictionaryEntry.Key%2A>プロパティの値が元のスキームと<xref:System.Collections.DictionaryEntry.Value%2A>プロパティの値の配列は、関連付けられている<xref:System.Security.Policy.CodeConnectAccess>オブジェクト</xref:System.Security.Policy.CodeConnectAccess></xref:System.Collections.DictionaryEntry.Value%2A></xref:System.Collections.DictionaryEntry.Key%2A>。 いいえ関連がある場合<xref:System.Security.Policy.CodeConnectAccess>オブジェクト、<xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName>空の配列を返します</xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName></xref:System.Security.Policy.CodeConnectAccess>。"
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cs[NclCodeGroup#8](~/add/codesnippet/csharp/m-system.security.policy_21_1.cs)]\n [!code-cpp[NclCodeGroup#8](~/add/codesnippet/cpp/m-system.security.policy_21_1.cpp)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: "A<xref:System.Collections.DictionaryEntry>接続アクセスの情報を含む配列</xref:System.Collections.DictionaryEntry>。"
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のコード グループのハッシュ コードを取得します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のコード グループのハッシュ コード。"
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "グループをマージするために使用するロジックを取得します。"
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "文字列&quot;Union&quot;です。"
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "追加します。"
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "追加します。"
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "名前を取得、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>コード グループです。"
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "常に、文字列&quot;同じ site Web&quot;"
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のコード グループのすべての接続アクセスの情報を削除します。"
  remarks: "このメソッドを使用すると、システム提供の既定の接続アクセス規則を削除できます。       既定の規則は、次の表に示します。      |スキーム |ルール |  |------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/m-system.security.policy_32_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/m-system.security.policy_32_1.cpp)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コード グループのポリシーと証拠のセットをその子孫を解決します。"
  remarks: "読み込まれるアセンブリの証拠を指定するには、このメソッドは、まず、指定した証拠をメンバーシップ条件を調べることによって、コード グループを評価します。 一致がある場合、このメソッドは、子コード グループの評価を含む、コード グループのポリシー ステートメントを返します。       このメソッドの動作を次に示します: メンバーシップ条件が一致しない場合、指定した証拠、返す`null`、それ以外の権限 (P) が返されるセットに一致するコード グループのポリシー ステートメント コンティニュ セット。 各子コード グループです。 同じ証拠を使用して、コード グループを解決します。場合は、結果は`null`、そのポリシー ステートメントを返します。 子コード グループが一致しない場合は、P (親のポリシー ステートメント) を返します。"
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>アセンブリのです。"
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>オプション属性を持つコード グループによって付与された権限で構成されるまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>コード グループが適用されない場合 (メンバーシップ条件は、指定した証拠を一致していません)。"
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "(親コード グループと子コード グループを含む)&2; つ以上のコード グループはマークされて<xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "一致するコード グループを解決します。"
  remarks: "読み込まれるアセンブリの証拠を指定するには、このメソッドは、まず、指定した証拠をメンバーシップ条件を調べることによって、コード グループを評価します。 一致がある場合、このメソッドは、ルート コード グループを返します。 返されるコード グループは、さらが可能性があるも子コード グループ、戻り値が指定された証拠と一致したコード グループの完全なセットを反映するための子コード グループを含めることができます。"
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "アセンブリの証拠。"
    return:
      type: System.Security.Policy.CodeGroup
      description: "証拠と一致したコード グループの完全なセット。"
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
