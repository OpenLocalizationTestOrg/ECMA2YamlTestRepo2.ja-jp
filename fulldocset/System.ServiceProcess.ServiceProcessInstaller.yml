### YamlMime:ManagedReference
items:
- uid: System.ServiceProcess.ServiceProcessInstaller
  id: ServiceProcessInstaller
  children:
  - System.ServiceProcess.ServiceProcessInstaller.#ctor
  - System.ServiceProcess.ServiceProcessInstaller.Account
  - System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.ServiceProcess.ServiceProcessInstaller.HelpText
  - System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Password
  - System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  - System.ServiceProcess.ServiceProcessInstaller.Username
  langs:
  - csharp
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller
  fullName: System.ServiceProcess.ServiceProcessInstaller
  type: Class
  summary: "拡張するクラスを含む実行可能ファイルをインストール<xref href=&quot;System.ServiceProcess.ServiceBase&quot;></xref>です。 このクラスは、サービス アプリケーションをインストールするときに、InstallUtil.exe などのインストール ユーティリティによって呼び出されます。"
  remarks: "実行可能ファイルですべてのサービスに共通の機能、ServiceProcessInstaller です。 インストールするサービスに関連するレジストリ値を書き込んだりインストール ユーティリティによって使用されます。       サービスをインストールするには、継承されたプロジェクト インストーラー クラスを作成<xref:System.Configuration.Install.Installer>、設定と、<xref:System.ComponentModel.RunInstallerAttribute>クラスに対し、 `true`</xref:System.ComponentModel.RunInstallerAttribute> </xref:System.Configuration.Install.Installer> 。 プロジェクト内で、サービス アプリケーションごとに&1; つ ServiceProcessInstaller インスタンスと&1; つをインスタンス化<xref:System.ServiceProcess.ServiceInstaller>アプリケーション内の各サービスのインスタンス</xref:System.ServiceProcess.ServiceInstaller>。 ServiceProcessInstaller インスタンスと<xref:System.ServiceProcess.ServiceInstaller>、プロジェクトのインストーラー クラスにインスタンス</xref:System.ServiceProcess.ServiceInstaller>を最後に、追加します。       InstallUtil.exe を実行すると、ユーティリティは、サービス アセンブリにクラス、 <xref:System.ComponentModel.RunInstallerAttribute>éý `true`</xref:System.ComponentModel.RunInstallerAttribute> 。 追加することによって、サービス アセンブリにクラスを追加、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション</xref:System.Configuration.Install.Installer.Installers%2A>。 場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、インストール ユーティリティ プロジェクト インストーラーは無視されます</xref:System.ComponentModel.RunInstallerAttribute>。       ServiceProcessInstaller のインスタンスの場合は、変更することができますプロパティは、サービス アプリケーションが、ログオンしているユーザー以外のアカウントで実行するように指定して含まれます。 特定を指定することができます<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアをサービスを実行する必要があります、または使用することができます<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>をコンピューターのシステム アカウント、ローカルまたはネットワーク サービス アカウント、またはユーザー アカウントでサービスを実行することを指定します</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。      > [!NOTE] > コンピューターのシステム アカウントは、管理者アカウントと同じではありません。       通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceInstaller>; コード内で一般的にして呼び出されただけインストール ユーティリティ</xref:System.ServiceProcess.ServiceInstaller>。 インストール ユーティリティを自動的に呼び出して、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>と<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>インストール プロセス中にメソッド</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>。 バックアップ障害、out、必要に応じて呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(または<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) 以前にインストールされたすべてのコンポーネントに関する</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>。       アプリケーションのインストールが自動的にインストーラーを使用して、プロジェクトの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>。</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>に既にインストールされているコンポーネントに関する情報を保持します。 この状態が継続的に情報 ServiceProcessInstaller インスタンスとその各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされている</xref:System.ServiceProcess.ServiceInstaller>。 通常、コードのこの状態情報を明示的に変更する必要はありません。       基底クラス コンス トラクター、ServiceProcessInstaller をインスタンス化すると、 <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>、呼び出される</xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>。"
  example:
  - "The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>. It is assumed there is a service executable that contains two services, \"Hello-World Service 1\" and \"Hello-World Service 2\". Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a ServiceProcessInstaller is created for the executable. For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.  \n  \n Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection. When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=fullName> will be installed in turn. During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.  \n  \n Normally, you would not instantiate your project installer class explicitly. You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.  \n  \n [!code-cpp[Classic ServiceInstaller Example#1](~/add/codesnippet/cpp/t-system.serviceprocess._0_1.cpp)]\n [!code-cs[Classic ServiceInstaller Example#1](~/add/codesnippet/csharp/t-system.serviceprocess._0_1.cs)]\n [!code-vb[Classic ServiceInstaller Example#1](~/add/codesnippet/visualbasic/t-system.serviceprocess._0_1.vb)]"
  syntax:
    content: 'public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  id: '#ctor'
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
  type: Constructor
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;> </xref>クラスです。"
  syntax:
    content: public ServiceProcessInstaller ();
    parameters: []
  overload: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  id: Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得またはこのサービス アプリケーションを実行するアカウントの種類を設定します。"
  remarks: "アカウント プロパティが`User`、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティを使用して、サービス アプリケーションを実行するアカウントを定義します</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。       <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。 ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可するこのことができますなどです。 いずれかのままにする場合、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>を空にして、アカウント設定`User`、有効なユーザー名およびインストール時にパスワードを求められます</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。       指定することもを実行、ローカル システム アカウントまたはローカル サービスまたはサービスのネットワークします。 参照してください、<xref:System.ServiceProcess.ServiceAccount>アカウントの種類の詳細の種類の列挙</xref:System.ServiceProcess.ServiceAccount>。"
  syntax:
    content: public System.ServiceProcess.ServiceAccount Account { get; set; }
    return:
      type: System.ServiceProcess.ServiceAccount
      description: "A <xref href=&quot;System.ServiceProcess.ServiceAccount&quot;> </xref>システムがこのサービスを実行するアカウントの種類を定義します。 既定値は<xref uid=&quot;langword_csharp_User&quot; name=&quot;User&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Account*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "基本クラスを実装する&lt;xref:System.Configuration.Install.ComponentInstaller.CopyFromComponent%2A?displayProperty=fullName&gt;のないメソッド<xref href=&quot;System.ServiceProcess.ServiceProcessInstaller&quot;></xref>クラス固有の動作です。"
  remarks: "このメソッドは、コード内で呼び出すことはできません。 基底クラス メソッド<xref:System.Configuration.Install.ComponentInstaller>は`abstract`派生クラスで、ここで実装されているため、</xref:System.Configuration.Install.ComponentInstaller> ただし、あるありません<xref:System.ServiceProcess.ServiceProcessInstaller>クラスに固有のメソッドの実装で処理します</xref:System.ServiceProcess.ServiceProcessInstaller>。"
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>サービス プロセスを表すです。"
  overload: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  id: HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "サービスのインストール オプションに表示されるテキストのヘルプを取得します。"
  remarks: "このヘルプ テキストは、サービスが手動で開始すると、使用できます。 示します、ユーザーにユーザー名とパスワード情報を入力する方法。"
  syntax:
    content: public override string HelpText { get; }
    return:
      type: System.String
      description: "ヘルプ テキスト、特定のアカウントでサービスを実行するために、ユーザー名とパスワードを設定するための手順の説明を提供します。"
  overload: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "サービス アプリケーションの情報をレジストリに書き込みます。 このメソッドは、自動的に適切なメソッドを呼び出して、インストール ツールで使用することはできます。"
  remarks: "通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceProcessInstaller>; コード内で一般的にして呼び出されただけインストール ユーティリティ</xref:System.ServiceProcess.ServiceProcessInstaller>。 インストール ユーティリティは、インストール プロセス中に自動的にインストール メソッドを呼び出します。 バックアップ障害、out、必要に応じて呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>すべて以前にインストールされたコンポーネント</xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>。 このメソッドは、基底クラスへのインストールを渡します<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>メソッド</xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName>。       通常がないメソッドを呼び出す、 <xref:System.ServiceProcess.ServiceInstaller>; コード内で一般的にして呼び出されただけインストール ユーティリティ</xref:System.ServiceProcess.ServiceInstaller>。 インストール ユーティリティは、現在のインストールと<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>インストール プロセス中にメソッド</xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName>。 バックアップ障害、out、必要に応じて呼び出すことによって<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(または<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>) アプリケーションのインストールが自動的にインストーラーを使用して、プロジェクトの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>に既にインストールされているコンポーネントに関する情報を保持して以前にインストールされたすべてのコンポーネントで</xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> としてのインストールにこの状態情報が渡された、`stateSaver`パラメーターでは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスとその各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされている</xref:System.ServiceProcess.ServiceInstaller></xref:System.ServiceProcess.ServiceProcessInstaller>。 通常、コードのこの状態情報を明示的に変更する必要はありません。       インストールでは、基本クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡しますまたは<xref:System.Configuration.Install.Installer.BeforeInstall>/<xref:System.Configuration.Install.Installer.AfterInstall>イベント ハンドラー</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall> 。"
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>インストールに関連付けられているコンテキスト情報を格納します</xref:System.Collections.IDictionary>。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Install*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stateSaver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  id: Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得またはサービス アプリケーションを実行するユーザー アカウントに関連付けられているパスワードを設定します。"
  remarks: "パスワードと<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。 ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可するこのことができますなどです。       パスワードと<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>決してシリアル化またはインストールの状態が保存される点で、安全な方法で処理されます (プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) またはパブリック アクセス権を持つ他の場所</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。       設定、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>し、パスワードは、インストール時に、サービスに自動的に関連するアカウントを使用します</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。 いずれかのままにする場合、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>またはパスワードが空で、設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>に`User`、有効なユーザー名およびインストール時にパスワードを求められます</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>。       別のアカウントでサービスを実行するための別のオプションは、コンピューターのシステム アカウントを使用するがします。 管理者アカウントとは異なりますが、このアカウントには、パスワードは必要ありません。 システム アカウントの特権は、現在ログインしているユーザーを超える可能性があります。 ユーザー アカウントではなく、システム アカウントで実行されている場合、サービスが必要なアクセス許可が不足しているユーザーから生じる問題を回避できます<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外の任意の値は、 `User`、指定されたアカウント (ローカルまたはネットワーク サービス、またはローカル システム) を使用すると、場合でも、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>とパスワードのプロパティが設定されます</xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>。"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "サービスを実行するアカウントに関連付けられているパスワードです。 既定値は空の文字列 (&quot;&quot;) です。 プロパティがパブリックでないはシリアル化することはありません。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Password*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "インストール プロシージャによって、レジストリに書き込まれるサービス アプリケーションの情報をロールバックします。 このメソッドは、インストールのツールは、適切なメソッドを自動的に処理で使用することはできます。"
  remarks: "通常、呼び出すことはありません、メソッドで<xref:System.ServiceProcess.ServiceProcessInstaller>; コード内で一般的にして呼び出されただけインストール ユーティリティ</xref:System.ServiceProcess.ServiceProcessInstaller>。 インストール ユーティリティを自動的に呼び出して、<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>インストール プロセス中にメソッド</xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName>。 必要に応じて、オブジェクトのロールバックを呼び出すことによって、例外生成された場合の障害をバックアップします。       アプリケーションのインストールが自動的にインストーラーを使用して、プロジェクトの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>。</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>に既にインストールされているコンポーネントに関する情報を保持します。 としてロールバックにこの状態情報が渡された、`savedState`パラメーターでは継続的に更新、<xref:System.ServiceProcess.ServiceProcessInstaller>インスタンスとその各<xref:System.ServiceProcess.ServiceInstaller>ユーティリティによってインスタンスがインストールされている</xref:System.ServiceProcess.ServiceInstaller></xref:System.ServiceProcess.ServiceProcessInstaller>。 通常、コードのこの状態情報を明示的に変更する必要はありません。       ロールバックでは、基本クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡しますまたは<xref:System.Configuration.Install.Installer.BeforeInstall>/<xref:System.Configuration.Install.Installer.AfterInstall>イベント ハンドラー</xref:System.Configuration.Install.Installer.AfterInstall> </xref:System.Configuration.Install.Installer.BeforeInstall> 。"
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>インストールに関連付けられているコンテキスト情報を格納します</xref:System.Collections.IDictionary>。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>savedState</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -、 <code> savedState </code>破損しているか、存在しません。"
  platform:
  - net462
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  id: Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  langs:
  - csharp
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
  type: Property
  assemblies:
  - System.ServiceProcess
  namespace: System.ServiceProcess
  summary: "取得またはサービス アプリケーションを実行するユーザー アカウントを設定します。"
  remarks: "ユーザー名と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ペアにより、システム アカウント以外のアカウントで実行するサービス</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>。 ユーザーがログオンしていないときの再起動時に自動的に開始するサービスを許可するこのことができますなどです。       <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>ユーザー名は、シリアル化またはインストールの状態を保存しないこと安全な方法で処理されます (プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>) またはパブリック アクセス権を持つ他の場所</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>。</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>       ユーザー名を設定し、<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>により、インストール時に、サービスに自動的に関連するアカウント</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>。 ユーザー名のいずれかのままにする場合または<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空で、設定<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>に`User`、有効なユーザー名およびインストール時にパスワードを求められます</xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>。       別のアカウントでサービスを実行するための別のオプションは、コンピューターのシステム アカウントを使用するがします。 管理者アカウントとは異なりますが、このアカウントには、パスワードは必要ありません。 システム アカウントの特権は、現在ログインしているユーザーを超える可能性があります。 ユーザー アカウントではなく、システム アカウントで実行されている場合、サービスが必要なアクセス許可が不足しているユーザーから生じる問題を回避できます<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>以外の任意の値は、 `User`、指定されたアカウント (ローカルまたはネットワーク サービス、またはローカル システム) を使用すると、場合でも、ユーザー名と<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>プロパティが設定されます</xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A></xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>。"
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: "サービスを実行するアカウント。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.ServiceProcess.ServiceProcessInstaller.Username*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller()
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller()
  fullName: System.ServiceProcess.ServiceProcessInstaller.ServiceProcessInstaller()
- uid: System.ServiceProcess.ServiceProcessInstaller.Account
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
  fullName: System.ServiceProcess.ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceAccount
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceAccount
  nameWithType: ServiceAccount
  fullName: System.ServiceProcess.ServiceAccount
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: ServiceProcessInstaller.CopyFromComponent(IComponent)
  fullName: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
  fullName: System.ServiceProcess.ServiceProcessInstaller.HelpText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: ServiceProcessInstaller.Install(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ServiceProcess.ServiceProcessInstaller.Password
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
  fullName: System.ServiceProcess.ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: ServiceProcessInstaller.Rollback(IDictionary)
  fullName: System.ServiceProcess.ServiceProcessInstaller.Rollback(IDictionary)
- uid: System.ServiceProcess.ServiceProcessInstaller.Username
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
  fullName: System.ServiceProcess.ServiceProcessInstaller.Username
- uid: System.ServiceProcess.ServiceProcessInstaller.#ctor*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: ServiceProcessInstaller
  nameWithType: ServiceProcessInstaller.ServiceProcessInstaller
- uid: System.ServiceProcess.ServiceProcessInstaller.Account*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Account
  nameWithType: ServiceProcessInstaller.Account
- uid: System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: ServiceProcessInstaller.CopyFromComponent
- uid: System.ServiceProcess.ServiceProcessInstaller.HelpText*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: HelpText
  nameWithType: ServiceProcessInstaller.HelpText
- uid: System.ServiceProcess.ServiceProcessInstaller.Install*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Install
  nameWithType: ServiceProcessInstaller.Install
- uid: System.ServiceProcess.ServiceProcessInstaller.Password*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Password
  nameWithType: ServiceProcessInstaller.Password
- uid: System.ServiceProcess.ServiceProcessInstaller.Rollback*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Rollback
  nameWithType: ServiceProcessInstaller.Rollback
- uid: System.ServiceProcess.ServiceProcessInstaller.Username*
  parent: System.ServiceProcess.ServiceProcessInstaller
  isExternal: false
  name: Username
  nameWithType: ServiceProcessInstaller.Username
