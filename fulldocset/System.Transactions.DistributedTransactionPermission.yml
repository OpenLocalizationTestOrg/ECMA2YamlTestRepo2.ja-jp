### YamlMime:ManagedReference
items:
- uid: System.Transactions.DistributedTransactionPermission
  id: DistributedTransactionPermission
  children:
  - System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Transactions.DistributedTransactionPermission.Copy
  - System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  - System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Transactions.DistributedTransactionPermission.IsUnrestricted
  - System.Transactions.DistributedTransactionPermission.ToXml
  - System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission
  fullName: System.Transactions.DistributedTransactionPermission
  type: Class
  summary: "によって要求されるアクセス許可<xref href=&quot;System.Transactions&quot;> </xref> msdtc トランザクションの管理がエスカレートする場合。 このクラスは継承できません。"
  remarks: "ローカル トランザクションは、1 つの持続性のあるソースまたは複数の揮発性のソースからのリソースだけを使用します。 分散トランザクションは、その一方で、ネットワーク経由で可能性のある複数の永続的なリソースと対話するがします。 MSDTC に、トランザクションの管理がエスカレート、ときにエスカレーションを開始するコードがこの権限を持っていることを確認します。 セキュリティ レベルの詳細については、次を参照してください。[リソースへのアクセスのセキュリティ信頼レベル](http://msdn.microsoft.com/en-us/8e45acbc-0d81-4f64-9da7-8f766aebff51)です。 トランザクション管理のエスカレーションの詳細については、次を参照してください。[トランザクション管理のエスカレーション](http://msdn.microsoft.com/en-us/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)です。 セキュリティの要求は、エスカレーションを開始するコード、必ずしも最初はローカル トランザクションを作成したコードに影響します。"
  syntax:
    content: 'public sealed class DistributedTransactionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Transactions.DistributedTransactionPermission&quot;> </xref>クラスです。"
  syntax:
    content: public DistributedTransactionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Transactions.DistributedTransactionPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Copy
  id: Copy
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "作成して、現在のアクセス許可の完全なコピーを返します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可のコピー。"
  overload: System.Transactions.DistributedTransactionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "XML エンコードから指定された状態で、アクセス許可を再構築します。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "アクセス許可の再構築に使用する XML エンコーディングします。"
  overload: System.Transactions.DistributedTransactionPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 現在のアクセス許可と同じ型の可能性があります。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Transactions.DistributedTransactionPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを示す値を返します。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係性をテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型である必要があります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、現在<xref href=&quot;System.Security.IPermission&quot;></xref>の指定されたサブセット<xref href=&quot;System.Security.IPermission&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "現在のアクセス許可によって保護されているリソースへの無制限アクセスが許可されるかどうかを示す値を返します。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>権限が許可されたによって保護されているリソースの使用を制限する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  id: ToXml
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "セキュリティ オブジェクトと現在の状態の XML エンコードを作成します。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>状態情報を含む、セキュリティ オブジェクトの XML エンコードを含むです。"
  overload: System.Transactions.DistributedTransactionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Security.IPermission&quot;> </xref>を現在のアクセス許可と、指定した権限の和集合を表すです。"
  overload: System.Transactions.DistributedTransactionPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission(PermissionState)
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
  fullName: System.Transactions.DistributedTransactionPermission.DistributedTransactionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Transactions.DistributedTransactionPermission.Copy
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy()
  nameWithType: DistributedTransactionPermission.Copy()
  fullName: System.Transactions.DistributedTransactionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DistributedTransactionPermission.FromXml(SecurityElement)
  fullName: System.Transactions.DistributedTransactionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DistributedTransactionPermission.Intersect(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Intersect(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DistributedTransactionPermission.IsSubsetOf(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DistributedTransactionPermission.IsUnrestricted()
  fullName: System.Transactions.DistributedTransactionPermission.IsUnrestricted()
- uid: System.Transactions.DistributedTransactionPermission.ToXml
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DistributedTransactionPermission.ToXml()
  fullName: System.Transactions.DistributedTransactionPermission.ToXml()
- uid: System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DistributedTransactionPermission.Union(IPermission)
  fullName: System.Transactions.DistributedTransactionPermission.Union(IPermission)
- uid: System.Transactions.DistributedTransactionPermission.#ctor*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: DistributedTransactionPermission
  nameWithType: DistributedTransactionPermission.DistributedTransactionPermission
- uid: System.Transactions.DistributedTransactionPermission.Copy*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Copy
  nameWithType: DistributedTransactionPermission.Copy
- uid: System.Transactions.DistributedTransactionPermission.FromXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: FromXml
  nameWithType: DistributedTransactionPermission.FromXml
- uid: System.Transactions.DistributedTransactionPermission.Intersect*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Intersect
  nameWithType: DistributedTransactionPermission.Intersect
- uid: System.Transactions.DistributedTransactionPermission.IsSubsetOf*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DistributedTransactionPermission.IsSubsetOf
- uid: System.Transactions.DistributedTransactionPermission.IsUnrestricted*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DistributedTransactionPermission.IsUnrestricted
- uid: System.Transactions.DistributedTransactionPermission.ToXml*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: ToXml
  nameWithType: DistributedTransactionPermission.ToXml
- uid: System.Transactions.DistributedTransactionPermission.Union*
  parent: System.Transactions.DistributedTransactionPermission
  isExternal: false
  name: Union
  nameWithType: DistributedTransactionPermission.Union
