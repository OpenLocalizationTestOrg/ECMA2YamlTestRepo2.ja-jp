### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  id: ObjectDataSourceEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;> </xref>と<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;></xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロール。"
  remarks: "ObjectDataSourceEventArgs クラスが使用されて、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>を使用している任意のデータ操作の前にビジネス オブジェクトのインスタンスへのアクセスを提供するメソッド、<xref:System.Web.UI.WebControls.ObjectDataSource>制御とビジネス オブジェクトが実行されます</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>。 ビジネス オブジェクトが設定されているしを使用してアクセス、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>。 処理するイベント ハンドラー デリゲートを追加することによって、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>イベントの代わりにカスタム コードでビジネス オブジェクトのインスタンスを作成することができます、<xref:System.Web.UI.WebControls.ObjectDataSource>インスタンス化を実行します</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。 これは、既定以外のインスタンスまたはビジネス オブジェクトのインスタンスを作成する既定以外のコンス トラクターの呼び出しにする場合に便利です。<xref:System.Web.UI.WebControls.ObjectDataSource>と連携して、ビジネス オブジェクトのインスタンスを作成する既定のコンス トラクターを常に呼び出します</xref:System.Web.UI.WebControls.ObjectDataSource>。 処理するイベント ハンドラー デリゲートを追加することも、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>イベントで、いずれもパブリックにアクセスすることができますが、追加の初期化または作業を実行するビジネス オブジェクトのメンバーを公開します</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。       <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>メソッドが呼び出されないと、<xref:System.Web.UI.WebControls.ObjectDataSource>データ操作を実行するビジネス オブジェクトのメソッドの場合、制御`static`</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>。       <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、ライフ サイクルのさまざまなタイミングで、基になるビジネス オブジェクトを使用する処理できる多くのイベントを公開します</xref:System.Web.UI.WebControls.ObjectDataSource>。 次の表は、イベントと関連付けられている<xref:System.EventArgs>クラスとイベント ハンドラー デリゲート</xref:System.EventArgs>。      |イベント |EventArgs |EventHandler |  |-----------|---------------|------------------|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> ビジネス オブジェクトのインスタンスが作成される直前に発生します |。ObjectDataSourceEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> ビジネス オブジェクトのインスタンスが作成直後後に発生します |。ObjectDataSourceEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> データを取得する前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 更新プログラム、または削除操作が実行される挿入、前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> データの取得後に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 発生した、insert、update、または削除操作が完了した |。<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> ビジネス オブジェクトが破棄される前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the ObjectDataSourceEventArgs object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>クラス、指定したオブジェクトを使用します。"
  syntax:
    content: public ObjectDataSourceEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "ビジネス オブジェクトを<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>データ操作を実行する操作します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を使用するビジネス オブジェクトを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロールはデータの操作を実行します。"
  remarks: ''
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the ObjectInstance property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_2.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "ビジネス オブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>使用してデータの処理を実行するそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>に渡される、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
