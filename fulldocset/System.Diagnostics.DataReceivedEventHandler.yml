### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DataReceivedEventHandler
  id: DataReceivedEventHandler
  langs:
  - csharp
  name: DataReceivedEventHandler
  nameWithType: DataReceivedEventHandler
  fullName: System.Diagnostics.DataReceivedEventHandler
  type: Delegate
  summary: "処理するメソッドを表す、 <xref href=&quot;System.Diagnostics.Process.OutputDataReceived&quot;> </xref>イベントまたは<xref href=&quot;System.Diagnostics.Process.ErrorDataReceived&quot;></xref>のイベント、 <xref href=&quot;System.Diagnostics.Process&quot;></xref>です。"
  remarks: "DataReceivedEventHandler デリゲートを作成するときに、イベントを処理するメソッドを特定します。 イベントをイベント ハンドラーに関連付けるには、イベントに、デリゲートのインスタンスを追加します。 デリゲートを削除しない限り、イベントが発生するたびに、イベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       リダイレクトされたを非同期的に収集する<xref:System.Diagnostics.Process.StandardOutput%2A>または<xref:System.Diagnostics.Process.StandardError%2A>ストリームは、プロセスの出力、イベント ハンドラーを追加、<xref:System.Diagnostics.Process.OutputDataReceived>または<xref:System.Diagnostics.Process.ErrorDataReceived>イベント</xref:System.Diagnostics.Process.ErrorDataReceived></xref:System.Diagnostics.Process.OutputDataReceived></xref:System.Diagnostics.Process.StandardError%2A></xref:System.Diagnostics.Process.StandardOutput%2A>。 プロセスでは、対応するリダイレクトされたストリームに行を書き込むたびに、これらのイベントが発生します。 リダイレクトされたストリームが閉じている場合は、イベント ハンドラーに null の行が送信されます。 アクセスする前にこの条件を調べ、イベント ハンドラーを確認してください、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>プロパティ</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>。 たとえば、使用することができます、`static`メソッド<xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>を検証する、<xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>イベント ハンドラーのプロパティ</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A></xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>。"
  example:
  - "The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command. The **sort** command is a console application that reads and sorts text input.  \n  \n The example creates a DataReceivedEventHandler delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \n  \n [!code-cpp[Process_AsyncStreams#1](~/add/codesnippet/cpp/t-system.diagnostics.dat_1_1.cpp)]\n [!code-vb[Process_AsyncStreams#1](~/add/codesnippet/visualbasic/t-system.diagnostics.dat_1_1.vb)]\n [!code-cs[Process_AsyncStreams#1](~/add/codesnippet/csharp/t-system.diagnostics.dat_1_1.cs)]"
  syntax:
    content: public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
