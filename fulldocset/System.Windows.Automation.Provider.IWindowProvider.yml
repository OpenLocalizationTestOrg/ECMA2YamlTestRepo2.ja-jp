### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IWindowProvider
  id: IWindowProvider
  children:
  - System.Windows.Automation.Provider.IWindowProvider.Close
  - System.Windows.Automation.Provider.IWindowProvider.InteractionState
  - System.Windows.Automation.Provider.IWindowProvider.IsModal
  - System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  - System.Windows.Automation.Provider.IWindowProvider.Maximizable
  - System.Windows.Automation.Provider.IWindowProvider.Minimizable
  - System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  - System.Windows.Automation.Provider.IWindowProvider.VisualState
  - System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  langs:
  - csharp
  name: IWindowProvider
  nameWithType: IWindowProvider
  fullName: System.Windows.Automation.Provider.IWindowProvider
  type: Interface
  summary: "内で、従来の基本的なウィンドウ ベースの機能を提供するコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開する[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]です。"
  remarks: "サポートする UI オートメーション プロバイダーに実装される、<xref:System.Windows.Automation.WindowPattern>コントロール パターン</xref:System.Windows.Automation.WindowPattern>。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IWindowProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  id: Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウを閉じてしようとしています。"
  remarks: "閉じるは、ブロックすることがなくすぐに返す必要があります。       終了が発生し、<xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>イベント</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>。 可能であれば、コントロールに関連付けられたアクションが完了した後は、イベントを発生させる必要があります。       分割ウィンドウ コントロールで呼び出されると、このメソッドは、ウィンドウを閉じるし、関連付けられている分割の削除します。 このメソッドは、実装に応じて、他のすべてのウィンドウを閉じる場合があります。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Automation.Provider.IWindowProvider.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ときに、コントロールは、要求された操作を実行することはできません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "対象となる要素が不要になった使用場合 (たとえば、ウィンドウが閉じられて)。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  id: InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウの操作状態を取得します。"
  syntax:
    content: public System.Windows.Automation.WindowInteractionState InteractionState { get; }
    return:
      type: System.Windows.Automation.WindowInteractionState
      description: "<xref href=&quot;System.Windows.Automation.WindowInteractionState&quot;> </xref>コントロールのです。"
  overload: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  id: IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウがモーダルかどうかを指定する値を取得します。"
  syntax:
    content: public bool IsModal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ウィンドウがモーダルの場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  id: IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウが z オーダーの最上位の要素であるかどうかを指定する値を取得します。"
  syntax:
    content: public bool IsTopmost { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ウィンドウが最上位です。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  id: Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウを最大化できるかどうかを指定する値を取得します。"
  syntax:
    content: public bool Maximizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ウィンドウを最大化できる場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  id: Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウを最小化できるかどうかを指定する値を取得します。"
  syntax:
    content: public bool Minimizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ウィンドウを最小化できる場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  id: SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウの表示状態を変更します。 たとえばが最小化または最大化したりします。"
  syntax:
    content: public void SetVisualState (System.Windows.Automation.WindowVisualState state);
    parameters:
    - id: state
      type: System.Windows.Automation.WindowVisualState
      description: "ウィンドウの要求の表示状態。"
  overload: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ときに、コントロールは、要求された動作をサポートしません。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  id: VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "ウィンドウの表示状態を取得します。"
  syntax:
    content: public System.Windows.Automation.WindowVisualState VisualState { get; }
    return:
      type: System.Windows.Automation.WindowVisualState
      description: "ウィンドウの表示状態。"
  overload: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  id: WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  langs:
  - csharp
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "によって、呼び出し元のコードで、指定した時刻または関連付けられたプロセスがアイドル状態に入るまでブロックします。"
  remarks: "このメソッドは通常<xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>。</xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>の処理と組み合わせて使用します。       実装は基になるアプリケーション フレームワークに依存します。そのためこのメソッドは、ウィンドウがユーザー入力の準備が整ってからしばらくの間を返す可能性があります。 このメソッドから、ウィンドウがアイドル状態になった場合に正確に確認するためには、呼び出し元のコードは保証はありません。"
  syntax:
    content: public bool WaitForInputIdle (int milliseconds);
    parameters:
    - id: milliseconds
      type: System.Int32
      description: "関連付けられたプロセスがアイドル状態になるまで待機するミリ秒単位の時間数。 最大値は<xref:System.Int32>。</xref:System.Int32>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ウィンドウがアイドル状態に入った場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、タイムアウトが発生しました。"
  overload: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "パラメーターが渡された場合は、有効な数値ではありません。"
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.IWindowProvider.Close
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close()
  nameWithType: IWindowProvider.Close()
  fullName: System.Windows.Automation.Provider.IWindowProvider.Close()
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
  fullName: System.Windows.Automation.Provider.IWindowProvider.InteractionState
- uid: System.Windows.Automation.WindowInteractionState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowInteractionState
  nameWithType: WindowInteractionState
  fullName: System.Windows.Automation.WindowInteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsModal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
  fullName: System.Windows.Automation.Provider.IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
  fullName: System.Windows.Automation.Provider.IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState(WindowVisualState)
  nameWithType: IWindowProvider.SetVisualState(WindowVisualState)
  fullName: System.Windows.Automation.Provider.IWindowProvider.SetVisualState(WindowVisualState)
- uid: System.Windows.Automation.WindowVisualState
  parent: System.Windows.Automation
  isExternal: false
  name: WindowVisualState
  nameWithType: WindowVisualState
  fullName: System.Windows.Automation.WindowVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
  fullName: System.Windows.Automation.Provider.IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle(Int32)
  nameWithType: IWindowProvider.WaitForInputIdle(Int32)
  fullName: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Provider.IWindowProvider.Close*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Close
  nameWithType: IWindowProvider.Close
- uid: System.Windows.Automation.Provider.IWindowProvider.InteractionState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: InteractionState
  nameWithType: IWindowProvider.InteractionState
- uid: System.Windows.Automation.Provider.IWindowProvider.IsModal*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsModal
  nameWithType: IWindowProvider.IsModal
- uid: System.Windows.Automation.Provider.IWindowProvider.IsTopmost*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: IsTopmost
  nameWithType: IWindowProvider.IsTopmost
- uid: System.Windows.Automation.Provider.IWindowProvider.Maximizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Maximizable
  nameWithType: IWindowProvider.Maximizable
- uid: System.Windows.Automation.Provider.IWindowProvider.Minimizable*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: Minimizable
  nameWithType: IWindowProvider.Minimizable
- uid: System.Windows.Automation.Provider.IWindowProvider.SetVisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: SetVisualState
  nameWithType: IWindowProvider.SetVisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.VisualState*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: VisualState
  nameWithType: IWindowProvider.VisualState
- uid: System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle*
  parent: System.Windows.Automation.Provider.IWindowProvider
  isExternal: false
  name: WaitForInputIdle
  nameWithType: IWindowProvider.WaitForInputIdle
