### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ToolBarButton
  id: ToolBarButton
  children:
  - System.Windows.Forms.ToolBarButton.#ctor
  - System.Windows.Forms.ToolBarButton.#ctor(System.String)
  - System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)
  - System.Windows.Forms.ToolBarButton.DropDownMenu
  - System.Windows.Forms.ToolBarButton.Enabled
  - System.Windows.Forms.ToolBarButton.ImageIndex
  - System.Windows.Forms.ToolBarButton.ImageKey
  - System.Windows.Forms.ToolBarButton.Name
  - System.Windows.Forms.ToolBarButton.Parent
  - System.Windows.Forms.ToolBarButton.PartialPush
  - System.Windows.Forms.ToolBarButton.Pushed
  - System.Windows.Forms.ToolBarButton.Rectangle
  - System.Windows.Forms.ToolBarButton.Style
  - System.Windows.Forms.ToolBarButton.Tag
  - System.Windows.Forms.ToolBarButton.Text
  - System.Windows.Forms.ToolBarButton.ToolTipText
  - System.Windows.Forms.ToolBarButton.ToString
  - System.Windows.Forms.ToolBarButton.Visible
  langs:
  - csharp
  name: ToolBarButton
  nameWithType: ToolBarButton
  fullName: System.Windows.Forms.ToolBarButton
  type: Class
  summary: "Windows ツール バー ボタンを表します。 <xref href=&quot;System.Windows.Forms.ToolStripButton&quot;> </xref>は ToolBarButton のコントロールを拡張して、以前のバージョンの ToolBarButton は保持されます旧バージョンとの互換性と将来の使用の両方を選択した場合。"
  remarks: "ToolBarButton のコントロールを親として<xref:System.Windows.Forms.ToolBar>コントロール</xref:System.Windows.Forms.ToolBar>。 ツール バー ボタンを作成した後に設定する一般的なプロパティは、<xref:System.Windows.Forms.ToolBarButton.Text%2A>および<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>。</xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> </xref:System.Windows.Forms.ToolBarButton.Text%2A> 設定、<xref:System.Windows.Forms.ToolBarButton.Text%2A>下にあるか、イメージの右側にテキストを表示するボタンのプロパティ</xref:System.Windows.Forms.ToolBarButton.Text%2A>。 作成することで、ボタンにイメージを割り当てる、<xref:System.Windows.Forms.ImageList>に割り当てること、 <xref:System.Windows.Forms.ToolBar.ImageList%2A>; ツールバーのプロパティをイメージのインデックス値を割り当てる、<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>ボタンのプロパティ</xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A></xref:System.Windows.Forms.ToolBar.ImageList%2A></xref:System.Windows.Forms.ImageList>。       ツールバーに割り当てられているツールバーのボタンの外観を変更するには、設定、<xref:System.Windows.Forms.ToolBar.Appearance%2A>親ツールバー コントロールのプロパティ</xref:System.Windows.Forms.ToolBar.Appearance%2A>。 `ToolBarAppearance.Flat`外観は、ボタンにフラットの外観を与えます。 マウス ポインターをボタンの上に移動すると、ボタンの外観が変化する&3; 次元です。 区切り記号は、ボタンにフラットな外観があるときに、ボタンの間のスペースではなく、線として表示されます。 場合、<xref:System.Windows.Forms.ToolBar.Appearance%2A>プロパティに設定されている`ToolBarAppearance.Normal`発生し、3 次元ボタンが表示されます、およびボタンの間にギャップとして区切り記号が表示されます</xref:System.Windows.Forms.ToolBar.Appearance%2A>。       割り当てることができます、<xref:System.Windows.Forms.ContextMenu>ボタンに場合、<xref:System.Windows.Forms.ToolBarButton.Style%2A>プロパティに設定されている`ToolBarButtonStyle.DropDown`</xref:System.Windows.Forms.ToolBarButton.Style%2A></xref:System.Windows.Forms.ContextMenu>。 ボタンがクリックされたときに割り当てられたメニューが表示されます。       上に表示する ToolBarButton コントロールのコレクションを作成する、<xref:System.Windows.Forms.ToolBar>を使用して、ボタンを個別に追加、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ToolBar.Buttons%2A>プロパティ</xref:System.Windows.Forms.ToolBar.Buttons%2A></xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A></xref:System.Windows.Forms.ToolBar>。 また、いくつかのツール バー ボタンを使用してを追加することができます、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>メソッド</xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three ToolBarButton controls. The toolbar buttons are assigned to the button collection, the collection is assigned to the toolbar, and the toolbar is added to the form. On the <xref:System.Windows.Forms.ToolBar.ButtonClick> event of the toolbar, the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> property of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> is evaluated and the appropriate dialog box opened. This code requires that a <xref:System.Windows.Forms.Form>, an <xref:System.Windows.Forms.OpenFileDialog>, a <xref:System.Windows.Forms.SaveFileDialog>, and a <xref:System.Windows.Forms.PrintDialog> have all been created.  \n  \n [!code-cpp[Classic ToolBar.ToolBar Example#1](~/add/codesnippet/cpp/t-system.windows.forms.t_14_1.cpp)]\n [!code-vb[Classic ToolBar.ToolBar Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_14_1.vb)]\n [!code-cs[Classic ToolBar.ToolBar Example#1](~/add/codesnippet/csharp/t-system.windows.forms.t_14_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public class ToolBarButton : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ToolBarButton()
  nameWithType: ToolBarButton.ToolBarButton()
  fullName: System.Windows.Forms.ToolBarButton.ToolBarButton()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.ToolBarButton&quot;> </xref>クラスです。"
  remarks: "<xref:System.Windows.Forms.ToolBarButton>既定値なし<xref:System.Windows.Forms.ToolBarButton.Text%2A>または<xref:System.Drawing.Image>それに割り当てられた</xref:System.Drawing.Image></xref:System.Windows.Forms.ToolBarButton.Text%2A></xref:System.Windows.Forms.ToolBarButton>の新しく作成された ボタンの既定のスタイルは`ToolBarButtonStyle.PushButton`します。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_64_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_64_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_64_1.vb)]"
  syntax:
    content: public ToolBarButton ();
    parameters: []
  overload: System.Windows.Forms.ToolBarButton.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ToolBarButton(String)
  nameWithType: ToolBarButton.ToolBarButton(String)
  fullName: System.Windows.Forms.ToolBarButton.ToolBarButton(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.ToolBarButton&quot;> </xref>クラスし、ボタンに割り当てられているテキストを表示します。"
  remarks: "新しく作成されたの<xref:System.Windows.Forms.ToolBarButton><xref:System.Drawing.Image>それに割り当てられて</xref:System.Drawing.Image>いません</xref:System.Windows.Forms.ToolBarButton> ボタンの既定のスタイルは<xref:System.Windows.Forms.ToolBarButtonStyle>。</xref:System.Windows.Forms.ToolBarButtonStyle> `text`にパラメーターが割り当てられた、<xref:System.Windows.Forms.ToolBarButton.Text%2A>プロパティされ、新しいツールバー ボタン コントロールに表示されます</xref:System.Windows.Forms.ToolBarButton.Text%2A>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_29_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_29_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_29_1.vb)]"
  syntax:
    content: public ToolBarButton (string text);
    parameters:
    - id: text
      type: System.String
      description: "新しい表示されるテキストを<xref href=&quot;System.Windows.Forms.ToolBarButton&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ToolBarButton.Dispose(Boolean)
  fullName: System.Windows.Forms.ToolBarButton.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Windows.Forms.ToolBarButton&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.Windows.Forms.ToolBarButton>参照。</xref:System.Windows.Forms.ToolBarButton> 。 このメソッドを呼び出して、`Dispose`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Windows.Forms.ToolBarButton.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.DropDownMenu
  id: DropDownMenu
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: DropDownMenu
  nameWithType: ToolBarButton.DropDownMenu
  fullName: System.Windows.Forms.ToolBarButton.DropDownMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはツールバーのドロップダウンに表示されるメニューを設定します。"
  remarks: "指定することができます、<xref:System.Windows.Forms.ContextMenu>ドロップダウン ボタンがクリックされたときに表示される</xref:System.Windows.Forms.ContextMenu>。 しない限り、このプロパティは使用されません<xref:System.Windows.Forms.ToolBarButton.Style%2A><xref:System.Windows.Forms.ToolBarButtonStyle?displayProperty=fullName></xref:System.Windows.Forms.ToolBarButtonStyle?displayProperty=fullName>プロパティ値を設定</xref:System.Windows.Forms.ToolBarButton.Style%2A>する。      > [!NOTE] > ドロップダウン ・ メニュー プロパティとして定義されますが、<xref:System.Windows.Forms.Menu>型を割り当てる必要があります、<xref:System.Windows.Forms.ContextMenu>正しく表示するには</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.Menu>。 作成する場合は、独自<xref:System.Windows.Forms.MenuItem>派生クラスがそのオブジェクトを割り当てる必要があります、<xref:System.Windows.Forms.ContextMenu>を割り当てると、<xref:System.Windows.Forms.ContextMenu>プロパティのドロップダウン ・ メニュー</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> 。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that an <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_96_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_96_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_96_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Menu DropDownMenu { get; set; }
    return:
      type: System.Windows.Forms.Menu
      description: "A <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>ツールバーのドロップダウンに表示されます。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.DropDownMenu*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "割り当てられたオブジェクトは、 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Enabled
  id: Enabled
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Enabled
  nameWithType: ToolBarButton.Enabled
  fullName: System.Windows.Forms.ToolBarButton.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはボタンが有効になっているかどうかを示す値を設定します。"
  remarks: "Enabled プロパティを設定すると`false`ツールバーのボタンをクリックすることはできません、およびボタンの外観を変更します。 <xref:System.Drawing.Image>と<xref:System.Windows.Forms.ToolBarButton.Text%2A>、ボタンに割り当てられた、グレー表示されます</xref:System.Windows.Forms.ToolBarButton.Text%2A></xref:System.Drawing.Image>。 場合は、イメージ、またはテキストがある複数の色、モノクロ灰色で表示されます。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ボタンが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.ImageIndex
  id: ImageIndex
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ImageIndex
  nameWithType: ToolBarButton.ImageIndex
  fullName: System.Windows.Forms.ToolBarButton.ImageIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはボタンに割り当てられているイメージのインデックス値を設定します。"
  remarks: "内のイメージのインデックス付きの値を参照して、イメージの値、<xref:System.Windows.Forms.ImageList>親に割り当てられている<xref:System.Windows.Forms.ToolBar>コントロール</xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.ImageList>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_226_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_226_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_226_1.vb)]"
  syntax:
    content: public int ImageIndex { get; set; }
    return:
      type: System.Int32
      description: "インデックス値、 <xref href=&quot;System.Drawing.Image&quot;> </xref>ツール バー ボタンに割り当てられています。 既定値は-1 です。"
  overload: System.Windows.Forms.ToolBarButton.ImageIndex*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "割り当てられた値は、-1 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.ImageKey
  id: ImageKey
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ImageKey
  nameWithType: ToolBarButton.ImageKey
  fullName: System.Windows.Forms.ToolBarButton.ImageKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定 ボタンに割り当てられているイメージの名前。"
  remarks: "ImageKey 値内のイメージを示す、<xref:System.Windows.Forms.ImageList>親に割り当てられている<xref:System.Windows.Forms.ToolBar>コントロール</xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.ImageList>。"
  syntax:
    content: public string ImageKey { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Drawing.Image&quot;> </xref>ツール バー ボタンに割り当てられています。"
  overload: System.Windows.Forms.ToolBarButton.ImageKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Name
  id: Name
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Name
  nameWithType: ToolBarButton.Name
  fullName: System.Windows.Forms.ToolBarButton.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ボタンの名前。"
  remarks: "取得するキーとしてボタンの名前を使用することができます、<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar.Buttons%2A>のコレクション、<xref:System.Windows.Forms.ToolBar>コントロール</xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.ToolBar.Buttons%2A></xref:System.Windows.Forms.ToolBarButton>。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "ボタンの名前。"
  overload: System.Windows.Forms.ToolBarButton.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Parent
  id: Parent
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Parent
  nameWithType: ToolBarButton.Parent
  fullName: System.Windows.Forms.ToolBarButton.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ツール バー ボタンに割り当てられているツール バー コントロールを取得します。"
  syntax:
    content: public System.Windows.Forms.ToolBar Parent { get; }
    return:
      type: System.Windows.Forms.ToolBar
      description: "<xref href=&quot;System.Windows.Forms.ToolBar&quot;> </xref>コントロールによって、 <xref href=&quot;System.Windows.Forms.ToolBarButton&quot;> </xref>に割り当てられます。"
  overload: System.Windows.Forms.ToolBarButton.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.PartialPush
  id: PartialPush
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: PartialPush
  nameWithType: ToolBarButton.PartialPush
  fullName: System.Windows.Forms.ToolBarButton.PartialPush
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはスタイルの切り替えツールバーのボタンが部分的にプッシュされたかどうかを示す値を設定します。"
  remarks: "PartialPush に設定すると`true`、グレーで表示されるボタンをツールバーのボタンが表示されます。 この外観が淡色表示と異なるときに、<xref:System.Windows.Forms.ToolBarButton.Enabled%2A>プロパティに設定されている`false`部分プッシュ外観全体ボタン イメージへのもやを提供するためです</xref:System.Windows.Forms.ToolBarButton.Enabled%2A>。 このプロパティ及ぼしませんしない限り、<xref:System.Windows.Forms.ToolBarButtonStyle>に設定されている`ToggleButton`</xref:System.Windows.Forms.ToolBarButtonStyle>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, and PartialPush properties. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.Call the `InitializeToolBar` method in the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/csharp/p-system.windows.forms.t_200_1.cs)]\n [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/cpp/p-system.windows.forms.t_200_1.cpp)]\n [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_200_1.vb)]"
  syntax:
    content: public bool PartialPush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタイルの切り替えツールバーのボタンが部分的にプッシュされた; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.PartialPush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Pushed
  id: Pushed
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Pushed
  nameWithType: ToolBarButton.Pushed
  fullName: System.Windows.Forms.ToolBarButton.Pushed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはスタイルの切り替えツールバーのボタンが押されている状態が現在かどうかを示す値を設定します。"
  remarks: "プッシュ済みに設定された場合`true`、くぼみまたは他のボタンを基準とした埋め込みツールバーのボタンが表示されます。 このプロパティ及ぼしませんしない限り、<xref:System.Windows.Forms.ToolBarButtonStyle>に設定されている`ToggleButton`</xref:System.Windows.Forms.ToolBarButtonStyle>。"
  example:
  - "The following code example demonstrates how to use the Pushed, and <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> properties. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`. Call the `InitializeToolBar` method in the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/csharp/p-system.windows.forms.t_126_1.cs)]\n [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/cpp/p-system.windows.forms.t_126_1.cpp)]\n [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_126_1.vb)]"
  syntax:
    content: public bool Pushed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタイルの切り替えツールバーのボタンが押されている状態です。 現在の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.Pushed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Rectangle
  id: Rectangle
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Rectangle
  nameWithType: ToolBarButton.Rectangle
  fullName: System.Windows.Forms.ToolBarButton.Rectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ツール バー ボタンの外接する四角形を取得します。"
  remarks: "場合<xref:System.Windows.Forms.ToolBar>現在のボタンは、両方<xref:System.Windows.Forms.ToolBarButton.Visible%2A>外接する四角形のボタンは現在、このプロパティを取得し、インチに含まれる場合、</xref:System.Windows.Forms.ToolBarButton.Visible%2A>および</xref:System.Windows.Forms.ToolBar>"
  syntax:
    content: public System.Drawing.Rectangle Rectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "境界<xref href=&quot;System.Drawing.Rectangle&quot;></xref>ツールバーのボタンです。"
  overload: System.Windows.Forms.ToolBarButton.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Style
  id: Style
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Style
  nameWithType: ToolBarButton.Style
  fullName: System.Windows.Forms.ToolBarButton.Style
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはツール バー ボタンのスタイルを設定します。"
  remarks: "ボタン スタイルに設定されている場合<xref:System.Windows.Forms.ToolBarButtonStyle>指定することができます、<xref:System.Windows.Forms.MenuItem>ドロップダウン ボタンが押されたときに表示される</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.ToolBarButtonStyle>。 スタイルに設定されている場合`ToolBarButtonStyle.Separator`ボタンの区切り記号としてとボタンとしてではなく、ツール バー ボタンが表示されます。 `ToolBarButtonStyle.ToggleButton`スタイルでは、ツール バー ボタン、トグル ボタンのように動作以外で実行できますが、オンまたはオフの状態。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_188_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_188_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_188_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }
    return:
      type: System.Windows.Forms.ToolBarButtonStyle
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.ToolBarButtonStyle&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_ToolBarButtonStyle.PushButton&quot; name=&quot;ToolBarButtonStyle.PushButton&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.Style*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "割り当てられた値が、 <xref href=&quot;System.Windows.Forms.ToolBarButtonStyle&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Tag
  id: Tag
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Tag
  nameWithType: ToolBarButton.Tag
  fullName: System.Windows.Forms.ToolBarButton.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはツール バー ボタンに関するデータを格納するオブジェクトを設定します。"
  remarks: "取得するか、ツールバーのボタンに関連付けられているデータを割り当てます。 どの<xref:System.Object>派生型は、このプロパティに割り当てることができます</xref:System.Object>。 このプロパティは、Windows フォーム デザイナーで設定されていますが、テキストのみが指定できます。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, and Tag properties. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`. Call the `InitializeToolBar` method in the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/csharp/p-system.windows.forms.t_69_1.cs)]\n [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/cpp/p-system.windows.forms.t_69_1.cpp)]\n [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_69_1.vb)]"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>、ツール バー ボタンに関するデータを格納します</xref:System.Object>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Text
  id: Text
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Text
  nameWithType: ToolBarButton.Text
  fullName: System.Windows.Forms.ToolBarButton.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはツール バー ボタンに表示されるテキストを設定します。"
  remarks: "既定のテキスト プロパティの値は空の文字列 (&quot;&quot;) を持つコントロールを作成していない場合、<xref:System.Windows.Forms.ToolBar.%23ctor%2A>をテキスト文字列をパラメーターとして受け取るコンス トラクター</xref:System.Windows.Forms.ToolBar.%23ctor%2A> 。 ツール バー ボタンのテキストの向きはによって決定されます、<xref:System.Windows.Forms.ToolBar.TextAlign%2A>ボタンの親のプロパティ<xref:System.Windows.Forms.ToolBar>のいずれかに設定できる、<xref:System.Windows.Forms.ToolBarTextAlign>列挙値</xref:System.Windows.Forms.ToolBarTextAlign></xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.ToolBar.TextAlign%2A>。 印刷の向きでは、ボタンに割り当てられているイメージとの関連です。 ボタンにイメージが割り当てられていない場合がある領域、ツール バー ボタンの表面上のままにします。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_48_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_48_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_48_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "ツール バー ボタンに表示されるテキストです。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Windows.Forms.ToolBarButton.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.ToolTipText
  id: ToolTipText
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ToolTipText
  nameWithType: ToolBarButton.ToolTipText
  fullName: System.Windows.Forms.ToolBarButton.ToolTipText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはボタンのツールヒントとして表示されるテキストを設定します。"
  remarks: "表示するには、ツールヒントのテキストのボタンの上にマウス ポインターが移動したとき、設定、<xref:System.Windows.Forms.ToolBar.ShowToolTips%2A>ボタンの親のプロパティ<xref:System.Windows.Forms.ToolBar>に`true`</xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.ToolBar.ShowToolTips%2A>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code requires that a <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> and a <xref:System.Windows.Forms.Form> have been created and the <xref:System.Windows.Forms.ImageList> has at least one <xref:System.Drawing.Image> assigned to it.  \n  \n [!code-cpp[Classic ToolBarButton.Style Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_208_1.cpp)]\n [!code-cs[Classic ToolBarButton.Style Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_208_1.cs)]\n [!code-vb[Classic ToolBarButton.Style Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_208_1.vb)]"
  syntax:
    content: public string ToolTipText { get; set; }
    return:
      type: System.String
      description: "マウス ポインターが、ツール バー ボタン上に移動したときに表示されるテキストです。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Windows.Forms.ToolBarButton.ToolTipText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.ToString
  id: ToString
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: ToString()
  nameWithType: ToolBarButton.ToString()
  fullName: System.Windows.Forms.ToolBarButton.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表す文字列を返します、 <xref href=&quot;System.Windows.Forms.ToolBarButton&quot;> </xref>コントロール。"
  remarks: "ToString メソッドの型との値を含む文字列を返します、<xref:System.Windows.Forms.ToolBarButton.Style%2A>と<xref:System.Windows.Forms.ToolBarButton.Text%2A>プロパティ</xref:System.Windows.Forms.ToolBarButton.Text%2A></xref:System.Windows.Forms.ToolBarButton.Style%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在を表す文字列<xref href=&quot;System.Windows.Forms.ToolBarButton&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ToolBarButton.Visible
  id: Visible
  parent: System.Windows.Forms.ToolBarButton
  langs:
  - csharp
  name: Visible
  nameWithType: ToolBarButton.Visible
  fullName: System.Windows.Forms.ToolBarButton.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはツール バー ボタンを表示するかどうかを示す値を設定します。"
  remarks: "ツール バー ボタンが表示されていない場合は、ツールバーで、表示されませんし、そのため、ユーザー入力を受信することはできません。"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ツール バー ボタンを表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ToolBarButton.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.ToolBarButton.#ctor
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToolBarButton()
  nameWithType: ToolBarButton.ToolBarButton()
  fullName: System.Windows.Forms.ToolBarButton.ToolBarButton()
- uid: System.Windows.Forms.ToolBarButton.#ctor(System.String)
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToolBarButton(String)
  nameWithType: ToolBarButton.ToolBarButton(String)
  fullName: System.Windows.Forms.ToolBarButton.ToolBarButton(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ToolBarButton.Dispose(Boolean)
  fullName: System.Windows.Forms.ToolBarButton.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ToolBarButton.DropDownMenu
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: DropDownMenu
  nameWithType: ToolBarButton.DropDownMenu
  fullName: System.Windows.Forms.ToolBarButton.DropDownMenu
- uid: System.Windows.Forms.Menu
  parent: System.Windows.Forms
  isExternal: false
  name: Menu
  nameWithType: Menu
  fullName: System.Windows.Forms.Menu
- uid: System.Windows.Forms.ToolBarButton.Enabled
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Enabled
  nameWithType: ToolBarButton.Enabled
  fullName: System.Windows.Forms.ToolBarButton.Enabled
- uid: System.Windows.Forms.ToolBarButton.ImageIndex
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ImageIndex
  nameWithType: ToolBarButton.ImageIndex
  fullName: System.Windows.Forms.ToolBarButton.ImageIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ToolBarButton.ImageKey
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ImageKey
  nameWithType: ToolBarButton.ImageKey
  fullName: System.Windows.Forms.ToolBarButton.ImageKey
- uid: System.Windows.Forms.ToolBarButton.Name
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Name
  nameWithType: ToolBarButton.Name
  fullName: System.Windows.Forms.ToolBarButton.Name
- uid: System.Windows.Forms.ToolBarButton.Parent
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Parent
  nameWithType: ToolBarButton.Parent
  fullName: System.Windows.Forms.ToolBarButton.Parent
- uid: System.Windows.Forms.ToolBar
  parent: System.Windows.Forms
  isExternal: false
  name: ToolBar
  nameWithType: ToolBar
  fullName: System.Windows.Forms.ToolBar
- uid: System.Windows.Forms.ToolBarButton.PartialPush
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: PartialPush
  nameWithType: ToolBarButton.PartialPush
  fullName: System.Windows.Forms.ToolBarButton.PartialPush
- uid: System.Windows.Forms.ToolBarButton.Pushed
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Pushed
  nameWithType: ToolBarButton.Pushed
  fullName: System.Windows.Forms.ToolBarButton.Pushed
- uid: System.Windows.Forms.ToolBarButton.Rectangle
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Rectangle
  nameWithType: ToolBarButton.Rectangle
  fullName: System.Windows.Forms.ToolBarButton.Rectangle
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ToolBarButton.Style
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Style
  nameWithType: ToolBarButton.Style
  fullName: System.Windows.Forms.ToolBarButton.Style
- uid: System.Windows.Forms.ToolBarButtonStyle
  parent: System.Windows.Forms
  isExternal: false
  name: ToolBarButtonStyle
  nameWithType: ToolBarButtonStyle
  fullName: System.Windows.Forms.ToolBarButtonStyle
- uid: System.Windows.Forms.ToolBarButton.Tag
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Tag
  nameWithType: ToolBarButton.Tag
  fullName: System.Windows.Forms.ToolBarButton.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ToolBarButton.Text
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Text
  nameWithType: ToolBarButton.Text
  fullName: System.Windows.Forms.ToolBarButton.Text
- uid: System.Windows.Forms.ToolBarButton.ToolTipText
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToolTipText
  nameWithType: ToolBarButton.ToolTipText
  fullName: System.Windows.Forms.ToolBarButton.ToolTipText
- uid: System.Windows.Forms.ToolBarButton.ToString
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToString()
  nameWithType: ToolBarButton.ToString()
  fullName: System.Windows.Forms.ToolBarButton.ToString()
- uid: System.Windows.Forms.ToolBarButton.Visible
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Visible
  nameWithType: ToolBarButton.Visible
  fullName: System.Windows.Forms.ToolBarButton.Visible
- uid: System.Windows.Forms.ToolBarButton.#ctor*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToolBarButton
  nameWithType: ToolBarButton.ToolBarButton
- uid: System.Windows.Forms.ToolBarButton.Dispose*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Dispose
  nameWithType: ToolBarButton.Dispose
- uid: System.Windows.Forms.ToolBarButton.DropDownMenu*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: DropDownMenu
  nameWithType: ToolBarButton.DropDownMenu
- uid: System.Windows.Forms.ToolBarButton.Enabled*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Enabled
  nameWithType: ToolBarButton.Enabled
- uid: System.Windows.Forms.ToolBarButton.ImageIndex*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ImageIndex
  nameWithType: ToolBarButton.ImageIndex
- uid: System.Windows.Forms.ToolBarButton.ImageKey*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ImageKey
  nameWithType: ToolBarButton.ImageKey
- uid: System.Windows.Forms.ToolBarButton.Name*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Name
  nameWithType: ToolBarButton.Name
- uid: System.Windows.Forms.ToolBarButton.Parent*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Parent
  nameWithType: ToolBarButton.Parent
- uid: System.Windows.Forms.ToolBarButton.PartialPush*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: PartialPush
  nameWithType: ToolBarButton.PartialPush
- uid: System.Windows.Forms.ToolBarButton.Pushed*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Pushed
  nameWithType: ToolBarButton.Pushed
- uid: System.Windows.Forms.ToolBarButton.Rectangle*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Rectangle
  nameWithType: ToolBarButton.Rectangle
- uid: System.Windows.Forms.ToolBarButton.Style*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Style
  nameWithType: ToolBarButton.Style
- uid: System.Windows.Forms.ToolBarButton.Tag*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Tag
  nameWithType: ToolBarButton.Tag
- uid: System.Windows.Forms.ToolBarButton.Text*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Text
  nameWithType: ToolBarButton.Text
- uid: System.Windows.Forms.ToolBarButton.ToolTipText*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToolTipText
  nameWithType: ToolBarButton.ToolTipText
- uid: System.Windows.Forms.ToolBarButton.ToString*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: ToString
  nameWithType: ToolBarButton.ToString
- uid: System.Windows.Forms.ToolBarButton.Visible*
  parent: System.Windows.Forms.ToolBarButton
  isExternal: false
  name: Visible
  nameWithType: ToolBarButton.Visible
