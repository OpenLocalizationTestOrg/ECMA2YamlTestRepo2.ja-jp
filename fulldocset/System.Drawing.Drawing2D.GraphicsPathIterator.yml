### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.GraphicsPathIterator
  id: GraphicsPathIterator
  children:
  - System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Count
  - System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  - System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  - System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  - System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  - System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  langs:
  - csharp
  name: GraphicsPathIterator
  nameWithType: GraphicsPathIterator
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator
  type: Class
  summary: "内のサブパスを反復処理する機能を提供する<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>し、各サブ パスに含まれる図形の種類をテストします。 このクラスは継承できません。"
  syntax:
    content: 'public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath)'
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: GraphicsPathIterator(GraphicsPath)
  nameWithType: GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>オブジェクト。"
  syntax:
    content: public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>このヘルパー クラスを初期化するオブジェクト。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  id: CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: CopyData(PointF[],Byte[],Int32,Int32)
  nameWithType: GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "コピー、 <> </> *> プロパティおよび<> *>、関連するプロパティ配列<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>に&2; つの配列を指定します。"
  remarks: "使用して、`startIndex`と`endIndex`パラメーターを指定したパスのデータ範囲をコピーします。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Populates it with several primitives and some markers.  \n  \n-   Lists the path data on the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   Increments the path data index to the second marker.  \n  \n-   Calls the CopyData method to copy the path data contained between the start and end indexes to the points and types arrays.  \n  \n-   Lists this copied data on the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/visualbasic/b1ea0b64-123f-4dcb-86c3-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/cpp/b1ea0b64-123f-4dcb-86c3-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/add/codesnippet/csharp/b1ea0b64-123f-4dcb-86c3-_1.cs)]"
  syntax:
    content: public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "関数が戻るときの配列が含まれています。 <xref href=&quot;System.Drawing.PointF&quot;> </xref>パス内の点を表す構造体。"
    - id: types
      type: System.Byte[]
      description: "関数が戻るときに、パス内の地点の型を表すバイト配列に含まれています。"
    - id: startIndex
      type: System.Int32
      description: "配列の開始インデックスを指定します。"
    - id: endIndex
      type: System.Int32
      description: "配列の終了インデックスを指定します。"
    return:
      type: System.Int32
      description: "ポイントの数がコピーされます。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  id: Count
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Count
  nameWithType: GraphicsPathIterator.Count
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "パス内の地点の数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "パス内の地点の数。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Dispose()
  nameWithType: GraphicsPathIterator.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;></xref>オブジェクト。"
  remarks: "呼び出す`Dispose`により、これによって使用されるリソース<xref:System.Drawing.Drawing2D.GraphicsPathIterator>を他の目的を再割り当てするオブジェクト</xref:System.Drawing.Drawing2D.GraphicsPathIterator>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  id: Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Enumerate(PointF[],Byte[])
  nameWithType: GraphicsPathIterator.Enumerate(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(PointF[],Byte[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "コピー、 <> </> *> プロパティおよび<> *>、関連するプロパティ配列<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>に&2; つの配列を指定します。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Populates it with several primitives and some markers.  \n  \n-   Lists the path data on the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   Increments the path data index to the second marker.  \n  \n-   Calls the Enumerate method to copy the path data to the `points` and `types` arrays.  \n  \n-   Lists this copied data on the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/visualbasic/5dbb8a2f-b3c5-4d23-b81d-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/cpp/5dbb8a2f-b3c5-4d23-b81d-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/add/codesnippet/csharp/5dbb8a2f-b3c5-4d23-b81d-_1.cs)]"
  syntax:
    content: public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "関数が戻るときの配列が含まれています。 <xref href=&quot;System.Drawing.PointF&quot;> </xref>パス内の点を表す構造体。"
    - id: types
      type: System.Byte[]
      description: "関数が戻るときに、パス内の地点の型を表すバイト配列に含まれています。"
    return:
      type: System.Int32
      description: "ポイントの数がコピーされます。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Finalize()
  nameWithType: GraphicsPathIterator.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~GraphicsPathIterator ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  id: HasCurve
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: HasCurve()
  nameWithType: GraphicsPathIterator.HasCurve()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "パスがこれに関連付けられているかどうかを示す<xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;></xref>曲線が含まれています。"
  remarks: "パス内のすべての曲線はベジエ スプラインのシーケンスとして格納されます。 たとえば、パスに、省略記号を追加する場合を指定する、左上隅にある、幅、および楕円の外接する四角形の高さ。 これらの番号 (左上隅にある、幅、および高さ) が、パスに格納されていません。代わりにします。楕円は、次の&4; つのベジエ スプラインのシーケンスに変換されます。 パスのエンドポイントと格納のこれらのベジエ スプラインの制御点。       パスは、行またはベジエ スプラインに属する各データ ポイントの配列を格納します。 配列内の地点の一部がベジエ スプラインに属するかどうかは、HasCurve 返します`true`です。 配列内のすべてのポイントが、行に属しているかどうかは、HasCurve 返します`false`です。       特定のメソッドでは、パスは、パス内のすべての曲線が線のシーケンスに変換されることを意味が平坦化します。 パスがフラット化されて、HasCurve 常に戻ります`false`です。 呼び出す、 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>、 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>、または<xref:System.Drawing.Drawing2D.GraphicsPath><xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A>メソッド</xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A></xref:System.Drawing.Drawing2D.GraphicsPath></xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A></xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPath`.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object for `myPath`.  \n  \n-   Tests to see if the current path `myPath` contains a curve.  \n  \n-   Shows the result of the test in a message box.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_17_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/cpp/m-system.drawing.drawing_17_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/add/codesnippet/csharp/m-system.drawing.drawing_17_1.cs)]"
  syntax:
    content: public bool HasCurve ();
    parameters: []
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>曲線; が、現在のサブパスに含まれている場合、それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  id: NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextMarker(GraphicsPath)
  nameWithType: GraphicsPathIterator.NextMarker(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これは、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref>オブジェクトには、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>オブジェクトが関連付けられています。 NextMarker メソッドを関連付けられているインクリメント<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>パスと&1; 秒あたりに現在のマーカーと次のマーカー (またはパスの末尾) の間、すべてのポイントに格納されているコピーでは、次のマーカーに<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>パラメーターに渡されたオブジェクト。"
  remarks: "<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>をパス内のマーカーを設定するメソッド</xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>を使用して マーカーは、サブパスのグループの作成に使用されます。 2 つのマーカーの間で&1; つまたは複数のサブパスを指定できます。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, an ellipse, and two markers.  \n  \n-   Lists the values of all the path's points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.  \n  \n-   Calls the NextMarker method, which iterates to the first marker and copies all the points contained between that marker and the next to `myPathSection`.  \n  \n-   Returns the number of points copied to `markerPoints`.  \n  \n-   Lists the marker number (the first marker) and number of points it contains to the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/visualbasic/8b47b275-716e-4cd3-9f07-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/cpp/8b47b275-716e-4cd3-9f07-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/add/codesnippet/csharp/8b47b275-716e-4cd3-9f07-_1.cs)]"
  syntax:
    content: public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>点をコピーするオブジェクトします。"
    return:
      type: System.Int32
      description: "このマーカーと次のページ間のポイントの数。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  id: NextMarker(System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextMarker(Int32,Int32)
  nameWithType: GraphicsPathIterator.NextMarker(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "インクリメント、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref>パスを返す [out] パラメーターを使用して、開始、停止のインデックスでは、次のマーカーにします。"
  remarks: "<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>をパス内のマーカーを設定するメソッド</xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>を使用して マーカーは、サブパスのグループの作成に使用されます。 2 つのマーカーの間で&1; つまたは複数のサブパスを指定できます。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse ¾ with markers between each.  \n  \n-   Draws the values for the array of points to the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Calls the NextMarker method.  \n  \n-   Uses the values returned from the iterative calls to NextMarker to draw the start and stop points for each marker to the screen.  \n  \n-   Draws the value for the total number of points to the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/visualbasic/2a36a4b2-3946-4c96-a406-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/cpp/2a36a4b2-3946-4c96-a406-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/add/codesnippet/csharp/2a36a4b2-3946-4c96-a406-_1.cs)]"
  syntax:
    content: public int NextMarker (out int startIndex, out int endIndex);
    parameters:
    - id: startIndex
      type: System.Int32
      description: '[out]このパラメーターに指定される整数の参照は、サブパスを開始する位置のインデックスを受け取ります。'
    - id: endIndex
      type: System.Int32
      description: '[out]このパラメーターに指定される整数の参照を受信するサブ パスの最後のポイントのインデックス`startIndex`ポイント。'
    return:
      type: System.Int32
      description: "このマーカーと次のページ間のポイントの数。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  id: NextPathType(System.Byte@,System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextPathType(Byte,Int32,Int32)
  nameWithType: GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得開始インデックスし、データの次のグループの終了インデックスがすべて同じ型であることを指します。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Lists the values of all the points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.  \n  \n-   In a `for` loop, iterates through the points using the NextPathType and NextPathType methods.  \n  \n-   Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.  \n  \n-   Displays the value for the total number of points to the screen.  \n  \n Note that `ListPathPoints` is a helper function that separates most (not all) of the display code from the graphics path code.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/visualbasic/95680980-3c12-42ae-ac98-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/cpp/95680980-3c12-42ae-ac98-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/add/codesnippet/csharp/95680980-3c12-42ae-ac98-_1.cs)]"
  syntax:
    content: public int NextPathType (out byte pathType, out int startIndex, out int endIndex);
    parameters:
    - id: pathType
      type: System.Byte
      description: '[out]グループ内のすべてのポイントで共有ポイントの種類を受信します。 使用可能な型を取得できる、 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref>列挙します。'
    - id: startIndex
      type: System.Int32
      description: '[out]ポイントのグループの開始インデックスを受け取ります。'
    - id: endIndex
      type: System.Int32
      description: '[out]ポイントのグループの終了インデックスを受け取ります。'
    return:
      type: System.Int32
      description: "このメソッドは、グループ内のデータ ポイントの数を返します。 パスにない他のグループがある場合、このメソッドは 0 を返します。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  id: NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextSubpath(GraphicsPath,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "次の図 (サブパス) パスからを取得、関連付けられているこの<xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;></xref>です。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, an ellipse, and two markers.  \n  \n-   Lists the values of all the path's points to the left side of the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.  \n  \n-   Calls the NextSubpath method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the `myPathSection` path, and also returns the number of points copied to `subpathPoints`.  \n  \n-   Lists the subpath number and number of points it contains to the right side of the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/visualbasic/fe78f5d8-9a93-4fb0-b017-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/cpp/fe78f5d8-9a93-4fb0-b017-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/add/codesnippet/csharp/fe78f5d8-9a93-4fb0-b017-_1.cs)]"
  syntax:
    content: public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>データ ポイントの設定この反復子を取得した図 (サブパス) のデータ ポイントに適合するようにあります。"
    - id: isClosed
      type: System.Boolean
      description: '[out]現在のサブパスが閉じているかどうかを示します。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>場合に、図がある場合を閉じると、それ以外の場合は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。'
    return:
      type: System.Int32
      description: "取得した図 (サブパス) 内のデータ ポイントの数。 それ以上図形を取得する場合は、0 が返されます。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  id: NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: NextSubpath(Int32,Int32,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "移動、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;> </xref>パスに次のサブパスをします。 開始インデックスと次のサブ パスの終了インデックスは、[out] パラメーターに格納されます。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Adds three lines, a rectangle, and an ellipse.  \n  \n-   Draws the values for the array of points to the screen.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.  \n  \n-   Calls the NextSubpath method.  \n  \n-   Uses the values returned from the iterative calls to NextSubpath to draw the start and stop values for each subpath to the screen.  \n  \n-   Draws the value for the total number of subpaths to the screen.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/visualbasic/63165689-53f3-4b43-b800-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/cpp/63165689-53f3-4b43-b800-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/add/codesnippet/csharp/63165689-53f3-4b43-b800-_1.cs)]"
  syntax:
    content: public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);
    parameters:
    - id: startIndex
      type: System.Int32
      description: '[out]次のサブ パスの開始インデックスを受け取ります。'
    - id: endIndex
      type: System.Int32
      description: '[out]次のサブ パスの終了インデックスを受け取ります。'
    - id: isClosed
      type: System.Boolean
      description: '[out]サブパスが閉じているかどうかを示します。'
    return:
      type: System.Int32
      description: "内のサブパスの数、 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  id: Rewind
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: Rewind()
  nameWithType: GraphicsPathIterator.Rewind()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これを巻き戻し<xref href=&quot;System.Drawing.Drawing2D.GraphicsPathIterator&quot;></xref>その関連付けられたパスの先頭にします。"
  remarks: "最初に呼び出す<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>メソッド、反復子のそれを取得する反復子の関連付けられたパスの最初の図 (サブパス)</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> 2 番目の時間では、取得と&2; 番目の図では、します。 巻き戻しメソッドを呼び出すときに、シーケンスを最初からやり直せるです。つまり、巻き戻しを呼び出した後、次への呼び出し<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>、パスの最初の図形を取得</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>と<xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A>メソッドは同様に動作します</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A></xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>。"
  syntax:
    content: public void Rewind ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  id: SubpathCount
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  langs:
  - csharp
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "パスのサブパスの数を取得します。"
  syntax:
    content: public int SubpathCount { get; }
    return:
      type: System.Int32
      description: "パス内のサブパスの数。"
  overload: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: GraphicsPathIterator(GraphicsPath)
  nameWithType: GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.GraphicsPathIterator(GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: CopyData(PointF[],Byte[],Int32,Int32)
  nameWithType: GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(PointF[],Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Count
  nameWithType: GraphicsPathIterator.Count
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Count
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsPathIterator.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Enumerate(PointF[],Byte[])
  nameWithType: GraphicsPathIterator.Enumerate(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(PointF[],Byte[])
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Finalize()
  nameWithType: GraphicsPathIterator.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: HasCurve()
  nameWithType: GraphicsPathIterator.HasCurve()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker(GraphicsPath)
  nameWithType: GraphicsPathIterator.NextMarker(GraphicsPath)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker(Int32,Int32)
  nameWithType: GraphicsPathIterator.NextMarker(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextPathType(Byte,Int32,Int32)
  nameWithType: GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(Byte,Int32,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath(GraphicsPath,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(GraphicsPath,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath(Int32,Int32,Boolean)
  nameWithType: GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(Int32,Int32,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Rewind()
  nameWithType: GraphicsPathIterator.Rewind()
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind()
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
  fullName: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.#ctor*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: GraphicsPathIterator
  nameWithType: GraphicsPathIterator.GraphicsPathIterator
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.CopyData*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: CopyData
  nameWithType: GraphicsPathIterator.CopyData
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Count*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Count
  nameWithType: GraphicsPathIterator.Count
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Dispose*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Dispose
  nameWithType: GraphicsPathIterator.Dispose
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Enumerate
  nameWithType: GraphicsPathIterator.Enumerate
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Finalize*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Finalize
  nameWithType: GraphicsPathIterator.Finalize
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: HasCurve
  nameWithType: GraphicsPathIterator.HasCurve
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextMarker
  nameWithType: GraphicsPathIterator.NextMarker
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextPathType
  nameWithType: GraphicsPathIterator.NextPathType
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: NextSubpath
  nameWithType: GraphicsPathIterator.NextSubpath
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.Rewind*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: Rewind
  nameWithType: GraphicsPathIterator.Rewind
- uid: System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount*
  parent: System.Drawing.Drawing2D.GraphicsPathIterator
  isExternal: false
  name: SubpathCount
  nameWithType: GraphicsPathIterator.SubpathCount
