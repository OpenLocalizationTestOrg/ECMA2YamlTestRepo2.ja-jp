### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  id: EncryptedKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  type: Class
  summary: "暗号化されたキーを識別するキー識別子句を表します。"
  remarks: "通常、EncryptedKeyIdentifierClause は、以外のときに使用される、カスタム セキュリティ トークン サービスが作成される必要はありません。 セキュリティ トークン サービスには、セキュリティ トークンが返される、ときに、発行されたセキュリティ トークンには、接続されており、結び付けられていないセキュリティ トークンへの参照が含まれています。 アタッチされた参照が SOAP メッセージのセキュリティ ヘッダー内に含まれるセキュリティ トークンを参照してください、結び付けられていない参照が SOAP メッセージのセキュリティ ヘッダーに含まれていないセキュリティ トークン。 これらの参照は、通常、発行されたセキュリティ トークンの信頼性を確認します。 EncryptedKeyIdentifierClause クラスを使用すると、暗号化されたキーを参照します。 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>メソッドは、暗号化されたキーを返します</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A>。       [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]適切な形式、ワイヤ形式のラップされたキーを受け入れます。 ネットワーク上で指定されたキー ラップ アルゴリズムでは、受け入れられ、使用することができます。 互換性があることを確認できない、<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>エンドポイントで指定します</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>。"
  syntax:
    content: 'public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>クラスは、暗号化されている指定したキーとキーの暗号化に使用する暗号アルゴリズムを使用します。"
  remarks: "静的定数文字列を使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>の暗号アルゴリズムを指定する、`encryptionMethod`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。 返される値の設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>メソッド</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>。"
    - id: encryptionMethod
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>長さゼロです。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>クラスのキーを使用して、指定した暗号化されている暗号アルゴリズム、キー、および暗号化キーのキー識別子の暗号化に使用します。"
  remarks: "静的定数文字列を使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>の暗号アルゴリズムを指定する、`encryptionMethod`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。 返される値の設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>メソッド</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>。"
    - id: encryptionMethod
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>。"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>で指定されている暗号化キーのキー識別子を表す、`encryptedKey`パラメーター。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>長さゼロです。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>クラスのキーを使用して、指定した暗号化されている暗号アルゴリズム、キー、暗号化キーおよびユーザーが判読できる名前のキー識別子の暗号化に使用します。"
  remarks: "静的定数文字列を使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>の暗号アルゴリズムを指定する、`encryptionMethod`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。 返される値の設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>メソッド</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>。"
    - id: encryptionMethod
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>。"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>で指定された暗号化キーのキー識別子を表す、`encryptedKey`パラメーター。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>。"
    - id: carriedKeyName
      type: System.String
      description: "指定されたキーに関連付けられているユーザーが判読できる名前、`encryptedKey`パラメーター。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>長さゼロです。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;> </xref>クラスのキーを使用して、指定した暗号化されている暗号アルゴリズム、キーと、ユーザーが判読できる名前のキー識別子、キーの暗号化に使用します。"
  remarks: "ときに、`derivationNonce`と`derivationLength`暗黙的な派生キーがトークンの直接のセキュリティ キーの代わりに使用されるパラメーターを指定します。       静的定数文字列を使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>の暗号アルゴリズムを指定する、`encryptionMethod`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。"
  syntax:
    content: public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。 返される値の設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>メソッド</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*>。"
    - id: encryptionMethod
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*>。"
    - id: encryptingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>で指定されたキーのキー識別子を表す、`encryptedKey`パラメーター。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*>。"
    - id: carriedKeyName
      type: System.String
      description: "指定されたキーに関連付けられているユーザーが判読できる名前、`encryptedKey`パラメーター。 値を設定、<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>プロパティ</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>。"
    - id: derivationNonce
      type: System.Byte[]
      description: "配列<xref:System.Byte>派生キーの作成に使用された nonce を格納している</xref:System.Byte>。 によって返される値の設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>メソッド</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>。"
    - id: derivationLength
      type: System.Int32
      description: "派生キーのサイズ。 値を設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>プロパティ</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptionMethod</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedKey</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>encryptedKey</code>長さゼロです。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  id: CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "暗号化されたキーに関連付けられているユーザーが判読できる名前を取得します。"
  remarks: "配置されている CarriedKeyName プロパティが XML にシリアル化されるとき、 `CarriedKeyName`> 要素。 暗号化されたキーの場合、 `CarriedKeyName`> 要素が省略可能な要素をキー値を持つユーザーが判読できる名前を関連付けます。 この名前は、キーを使用して、参照し、使用できます、 `KeyName`> 内の要素、 `KeyInfo`> 要素。 同じ`CarriedKeyName`> ID の値とは異なり、要素の値が&1; つのドキュメント内で複数回を発生できます。 キーの値はすべて同じである必要があります`EncryptedKey`> 要素が同じで識別される`CarriedKeyName`>、XML ドキュメント内の名前。"
  syntax:
    content: public string CarriedKeyName { get; }
    return:
      type: System.String
      description: "暗号化されたキーに関連付けられているユーザーが判読できる名前です。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  id: EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "暗号化キーのキー識別子を取得します。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>暗号化キーのキー識別子を表すです。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  id: EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キーの暗号化に使用される暗号アルゴリズムを取得します。"
  remarks: "通常、EncryptionMethod プロパティの値では、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>クラス</xref:System.IdentityModel.Tokens.SecurityAlgorithms>の静的定数文字列の&1; つ"
  syntax:
    content: public string EncryptionMethod { get; }
    return:
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  id: GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "暗号化されたキーを取得します。"
  remarks: "GetEncryptedKey メソッドによって返される配列は、暗号化されたキーの複製です。"
  syntax:
    content: public byte[] GetEncryptedKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのキー識別子が、指定したキー識別句と同じかどうかを示す値を返します。"
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>と比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> keyIdentifierClause </code>の種類は<xref href=&quot;System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&quot;></xref>が同じ暗号化キー、暗号化方法、およびユーザーが判読できる名前は、現在のインスタンスとそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  id: Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのキー識別子が指定した暗号化キー、暗号化のメソッドやユーザーが判読できる名前に相当するかどうかを示す値を返します。"
  syntax:
    content: public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);
    parameters:
    - id: encryptedKey
      type: System.Byte[]
      description: "配列<xref:System.Byte>暗号化されたキーを格納している</xref:System.Byte>。"
    - id: encryptionMethod
      type: System.String
      description: "キーの暗号化に使用される暗号アルゴリズム。"
    - id: carriedKeyName
      type: System.String
      description: "暗号化されたキーに関連付けられているユーザーが判読できる名前です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> encryptedKey </code>、 <code> encryptionMethod </code>と<code> carriedKeyName </code>パラメーターによって返される値と同じである、 <> </> *> メソッドおよび<> *> と<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>プロパティ、それぞれ、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*>"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "現在のオブジェクトを表す文字列を返します。"
  remarks: "ToString メソッドでは、暗号化されたキーとキーの暗号化に使用される暗号アルゴリズムを表す文字列を返します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在のオブジェクト。"
  overload: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause(Byte[],String,SecurityKeyIdentifier,String,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey()
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],String,String)
  nameWithType: EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(Byte[],String,String)
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: EncryptedKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString()
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptedKeyIdentifierClause
  nameWithType: EncryptedKeyIdentifierClause.EncryptedKeyIdentifierClause
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKeyIdentifierClause.CarriedKeyName
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptingKeyIdentifier
  nameWithType: EncryptedKeyIdentifierClause.EncryptingKeyIdentifier
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedKeyIdentifierClause.EncryptionMethod
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: GetEncryptedKey
  nameWithType: EncryptedKeyIdentifierClause.GetEncryptedKey
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: EncryptedKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.EncryptedKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: EncryptedKeyIdentifierClause.ToString
