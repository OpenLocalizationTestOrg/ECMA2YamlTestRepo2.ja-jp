### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  id: PrivilegeNotHeldException
  children:
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  - System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  langs:
  - csharp
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
  type: Class
  summary: "内のメソッドの場合にスローされる例外、 <xref href=&quot;System.Security.AccessControl&quot;> </xref>名前空間がないする特権を有効にしようとします。"
  syntax:
    content: 'public sealed class PrivilegeNotHeldException : UnauthorizedAccessException'
  inheritance:
  - System.UnauthorizedAccessException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException()
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException()
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.PrivilegeNotHeldException&quot;> </xref>クラスです。"
  syntax:
    content: public PrivilegeNotHeldException ();
    parameters: []
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException(String)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.PrivilegeNotHeldException&quot;> </xref>指定した権限を使用して、クラスです。"
  syntax:
    content: public PrivilegeNotHeldException (string privilege);
    parameters:
    - id: privilege
      type: System.String
      description: "この特権は、有効ではありません。"
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException(String,Exception)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String,Exception)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.PrivilegeNotHeldException&quot;> </xref>指定された例外を使用してクラスです。"
  syntax:
    content: public PrivilegeNotHeldException (string privilege, Exception inner);
    parameters:
    - id: privilege
      type: System.String
      description: "この特権は、有効ではありません。"
    - id: inner
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`innerException`パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) で現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PrivilegeNotHeldException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "セット、 <code> info </code>例外に関する情報を含むパラメーター。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>スローされた例外に関するシリアル化されたオブジェクト データを保持します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>ソースまたは転送先に関するコンテキスト情報を含む</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  id: PrivilegeName
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "有効になっていない特権の名前を取得します。"
  syntax:
    content: public string PrivilegeName { get; }
    return:
      type: System.String
      description: "有効にするメソッドが失敗した権限の名前。"
  overload: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: System.UnauthorizedAccessException
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException()
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException()
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException()
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException(String)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException(String,Exception)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String,Exception)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PrivilegeNotHeldException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: GetObjectData
  nameWithType: PrivilegeNotHeldException.GetObjectData
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
