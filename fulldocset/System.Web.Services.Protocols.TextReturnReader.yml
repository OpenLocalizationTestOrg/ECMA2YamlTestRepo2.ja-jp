### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.TextReturnReader
  id: TextReturnReader
  children:
  - System.Web.Services.Protocols.TextReturnReader.#ctor
  - System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: TextReturnReader
  nameWithType: TextReturnReader
  fullName: System.Web.Services.Protocols.TextReturnReader
  type: Class
  summary: "読み取りは、HTTP を使用して実装されている Web サービス クライアントが SOAP、HTTP 応答のテキストから値を返します。"
  remarks: "TextReturnReader とその他のクラスの<xref:System.Web.Services.Protocols>名前空間は、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装をサポートします</xref:System.Web.Services.Protocols>。 Web サービスのライター、リーダー シリアル化および逆、それぞれ、パラメーターまたは Web メソッドの戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。 Web サービスのライター、リーダーは、HTTP トランスポートを使用しますが、SOAP 標準を使用してメッセージを交換しません。       TextReturnReader クラスでは、XML 以外のテキストの Web メソッドの戻り値へのクライアント側の読み込みを実装します。 戻り値を取得する、テキストは、HTTP 応答の本体でエンコードされているが解析される正規表現パターンに一致するを使用して、属性<xref:System.Web.Services.Protocols.MatchAttribute>、クライアント プロキシ クラスの Web メソッドに適用できる、</xref:System.Web.Services.Protocols.MatchAttribute>指定に従って TextReturnReader クラスの呼び出し、<xref:System.Web.Services.Protocols.PatternMatcher>を実際にパターン マッチを実行するクラス</xref:System.Web.Services.Protocols.PatternMatcher>。       テキストのパターンに一致する Web サービスの XML スキーマ定義にバインドする必要がある XML ドキュメントに変換せず HTML コンテンツを取得するための手段を提供します。 正規表現検索対象が経由で Web サービス記述言語 (WSDL) ドキュメントで指定された`match`内の XML 要素`text`要素。 名前空間 http://microsoft.com/wsdl/mime/textMatching/ に両方の要素が属しています。       ときに**一致**WSDL ドキュメント内の要素を指定、Wsdl.exe ツールは、適用<xref:System.Web.Services.Protocols.MatchAttribute>属性が生成するクライアント プロキシ クラスの対応する Web メソッドを</xref:System.Web.Services.Protocols.MatchAttribute>。 代わりに TextReturnReader の使用も、 <xref:System.Web.Services.Protocols.XmlReturnReader>、Web メソッドの逆シリアル化の既定のクラスは、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装に応じて値を返す</xref:System.Web.Services.Protocols.XmlReturnReader>。       通常、TextReturnReader クラスを直接使用する必要はありません。"
  syntax:
    content: 'public class TextReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: TextReturnReader()
  nameWithType: TextReturnReader.TextReturnReader()
  fullName: System.Web.Services.Protocols.TextReturnReader.TextReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.TextReturnReader&quot;> </xref>クラスです。"
  syntax:
    content: public TextReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.TextReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: TextReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.TextReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定したメソッドの初期化子を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>。 <xref:System.Web.Services.Protocols.TextReturnReader>クラス初期化子が、<xref:System.Web.Services.Protocols.PatternMatcher>オブジェクトは、Web メソッドの戻り値の型に基づく</xref:System.Web.Services.Protocols.PatternMatcher></xref:System.Web.Services.Protocols.TextReturnReader>。       GetInitializer メソッドは、サービスの初期化中に呼び出されます。 後で、応答の処理時に初期化子が渡されたオブジェクトを<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>別のメソッド<xref:System.Web.Services.Protocols.TextReturnReader>インスタンス</xref:System.Web.Services.Protocols.TextReturnReader></xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>。 その他のインスタンスでは、実際に読み込みを実行します。"
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>初期化子を取得する Web メソッドを指定します。"
    return:
      type: System.Object
      description: "指定したメソッドの初期化子"
  overload: System.Web.Services.Protocols.TextReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: TextReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.TextReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "インスタンスを初期化します。"
  remarks: "Initialize メソッドを提供、<xref:System.Web.Services.Protocols.PatternMatcher>によって使用されるオブジェクト、<xref:System.Web.Services.Protocols.TextReturnReader.Read%2A>を HTTP 応答に含まれているテキストを解析します</xref:System.Web.Services.Protocols.TextReturnReader.Read%2A></xref:System.Web.Services.Protocols.PatternMatcher>。 Initialize メソッドが要求の処理時に呼び出されます。 入力パラメーター `o`、呼び出すことによって取得されて、<xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>クライアントの初期化中に取得されているクラスの別のインスタンス上のメソッド</xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>。"
  syntax:
    content: public override void Initialize (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Web.Services.Protocols.PatternMatcher&quot;> </xref>呼び出される Web メソッドの戻り値の型のオブジェクト。"
  overload: System.Web.Services.Protocols.TextReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.TextReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: TextReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.TextReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "HTTP 応答に含まれているテキストを解析します。"
  remarks: "HTTP 応答のテキストの内容を解析する、 <xref:System.Web.Services.Protocols.TextReturnReader>、Read メソッドのクラスの実装を使用して、<xref:System.Web.Services.Protocols.PatternMatcher>に渡す引数として渡されるオブジェクト、<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A></xref:System.Web.Services.Protocols.PatternMatcher></xref:System.Web.Services.Protocols.TextReturnReader>。 逆シリアル化された Web メソッドの戻り値を返す前に、応答ストリームを閉じます。"
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "A<xref:System.Net.WebResponse>操作の出力メッセージを含むオブジェクト</xref:System.Net.WebResponse>。"
    - id: responseStream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>コンテンツを持つ、HTTP 応答の本体で表される、`response`パラメーター</xref:System.IO.Stream> 。"
    return:
      type: System.Object
      description: "逆シリアル化された Web メソッドが含まれるオブジェクトは、値を返します。"
  overload: System.Web.Services.Protocols.TextReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: TextReturnReader()
  nameWithType: TextReturnReader.TextReturnReader()
  fullName: System.Web.Services.Protocols.TextReturnReader.TextReturnReader()
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: TextReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.TextReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: TextReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.TextReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: TextReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.TextReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.TextReturnReader.#ctor*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: TextReturnReader
  nameWithType: TextReturnReader.TextReturnReader
- uid: System.Web.Services.Protocols.TextReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: TextReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.TextReturnReader.Initialize*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Initialize
  nameWithType: TextReturnReader.Initialize
- uid: System.Web.Services.Protocols.TextReturnReader.Read*
  parent: System.Web.Services.Protocols.TextReturnReader
  isExternal: false
  name: Read
  nameWithType: TextReturnReader.Read
