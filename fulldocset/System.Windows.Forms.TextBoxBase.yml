### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TextBoxBase
  id: TextBoxBase
  children:
  - System.Windows.Forms.TextBoxBase.AcceptsTab
  - System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  - System.Windows.Forms.TextBoxBase.AppendText(System.String)
  - System.Windows.Forms.TextBoxBase.AutoSize
  - System.Windows.Forms.TextBoxBase.AutoSizeChanged
  - System.Windows.Forms.TextBoxBase.BackColor
  - System.Windows.Forms.TextBoxBase.BackgroundImage
  - System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  - System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  - System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  - System.Windows.Forms.TextBoxBase.BorderStyle
  - System.Windows.Forms.TextBoxBase.BorderStyleChanged
  - System.Windows.Forms.TextBoxBase.CanEnableIme
  - System.Windows.Forms.TextBoxBase.CanUndo
  - System.Windows.Forms.TextBoxBase.Clear
  - System.Windows.Forms.TextBoxBase.ClearUndo
  - System.Windows.Forms.TextBoxBase.Click
  - System.Windows.Forms.TextBoxBase.Copy
  - System.Windows.Forms.TextBoxBase.CreateHandle
  - System.Windows.Forms.TextBoxBase.CreateParams
  - System.Windows.Forms.TextBoxBase.Cut
  - System.Windows.Forms.TextBoxBase.DefaultCursor
  - System.Windows.Forms.TextBoxBase.DefaultSize
  - System.Windows.Forms.TextBoxBase.DeselectAll
  - System.Windows.Forms.TextBoxBase.DoubleBuffered
  - System.Windows.Forms.TextBoxBase.ForeColor
  - System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  - System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  - System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  - System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  - System.Windows.Forms.TextBoxBase.HideSelection
  - System.Windows.Forms.TextBoxBase.HideSelectionChanged
  - System.Windows.Forms.TextBoxBase.ImeModeBase
  - System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.Lines
  - System.Windows.Forms.TextBoxBase.MaxLength
  - System.Windows.Forms.TextBoxBase.Modified
  - System.Windows.Forms.TextBoxBase.ModifiedChanged
  - System.Windows.Forms.TextBoxBase.MouseClick
  - System.Windows.Forms.TextBoxBase.Multiline
  - System.Windows.Forms.TextBoxBase.MultilineChanged
  - System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.Padding
  - System.Windows.Forms.TextBoxBase.PaddingChanged
  - System.Windows.Forms.TextBoxBase.Paint
  - System.Windows.Forms.TextBoxBase.Paste
  - System.Windows.Forms.TextBoxBase.PreferredHeight
  - System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.ReadOnly
  - System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  - System.Windows.Forms.TextBoxBase.ScrollToCaret
  - System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  - System.Windows.Forms.TextBoxBase.SelectAll
  - System.Windows.Forms.TextBoxBase.SelectedText
  - System.Windows.Forms.TextBoxBase.SelectionLength
  - System.Windows.Forms.TextBoxBase.SelectionStart
  - System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  - System.Windows.Forms.TextBoxBase.Text
  - System.Windows.Forms.TextBoxBase.TextLength
  - System.Windows.Forms.TextBoxBase.ToString
  - System.Windows.Forms.TextBoxBase.Undo
  - System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.TextBoxBase.WordWrap
  langs:
  - csharp
  name: TextBoxBase
  nameWithType: TextBoxBase
  fullName: System.Windows.Forms.TextBoxBase
  type: Class
  summary: "テキスト コントロールで必要な基本機能を実装します。"
  remarks: "このクラスは、テキスト操作などのコントロール<xref:System.Windows.Forms.TextBox><xref:System.Windows.Forms.RichTextBox>。</xref:System.Windows.Forms.RichTextBox></xref:System.Windows.Forms.TextBox>の主要な機能を実装します。 テキスト選択範囲が含まれます**クリップボード**機能、複数行テキスト コントロールのサポート、および多数のイベントです。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/t-system.windows.forms.t_46_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/t-system.windows.forms.t_46_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("Text")]

      [System.ComponentModel.DefaultEvent("TextChanged")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TextBoxBase : System.Windows.Forms.Control
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnResize(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab
  id: AcceptsTab
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTab
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはキーを押して複数行テキスト ボックス コントロールの種類で TAB キーはタブ文字、タブ オーダーの次のコントロールにフォーカスを移動させる代わりに、コントロールであるかどうかを示す値を設定します。"
  remarks: "<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>プロパティがある必要がありますも`true`をコントロールにタブ文字を取得します</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>。       AcceptsTab プロパティ設定されている場合`true`ユーザーがタブ オーダーの次のコントロールにフォーカスを移動するには、CTRL + TAB を押す必要があります。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the AcceptsTab, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_72_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_72_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_72_1.vb)]"
  syntax:
    content: public bool AcceptsTab { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが TAB キーを使用して複数行テキスト ボックスにタブを入力できる場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、TAB キーを押すとフォーカスを移動します。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.AcceptsTab*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  id: AcceptsTabChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AcceptsTabChanged
  nameWithType: TextBoxBase.AcceptsTabChanged
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.AcceptsTab*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.AcceptsTab*>。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AcceptsTabChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the AcceptsTabChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#241](~/add/codesnippet/csharp/e-system.windows.forms.t_105_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#241](~/add/codesnippet/visualbasic/e-system.windows.forms.t_105_1.vb)]"
  syntax:
    content: public event EventHandler AcceptsTabChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: TextBoxBase.AppendText(String)
  fullName: System.Windows.Forms.TextBoxBase.AppendText(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスの現在のテキストにテキストを追加します。"
  remarks: "このメソッドをテキスト文字列を連結する連結演算子 (+) を使用する代わりに、コントロール内の既存のテキストを追加するを使用することができます、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.Text%2A>。"
  example:
  - "The following code example demonstrates how to use the AppendText method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n [!code-cpp[TextBoxBase.AppendText#1](~/add/codesnippet/cpp/m-system.windows.forms.t_63_1.cpp)]\n [!code-cs[TextBoxBase.AppendText#1](~/add/codesnippet/csharp/m-system.windows.forms.t_63_1.cs)]\n [!code-vb[TextBoxBase.AppendText#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_63_1.vb)]"
  syntax:
    content: public void AppendText (string text);
    parameters:
    - id: text
      type: System.String
      description: "テキスト ボックスの現在の内容に追加するテキスト。"
  overload: System.Windows.Forms.TextBoxBase.AppendText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
  fullName: System.Windows.Forms.TextBoxBase.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールに割り当てられているフォントが変更されたときに、コントロールの高さを自動的に調整するかどうかを示す値を設定します。"
  remarks: "AutoSize プロパティ設定すると`true`の<xref:System.Windows.Forms.TextBox>、ときに、 <xref:System.Windows.Forms.Control.Font%2A>、変更、<xref:System.Windows.Forms.TextBox>拡大または縮小、<xref:System.Windows.Forms.Control.Height%2A>大きくまたは小さくテキストに合わせて</xref:System.Windows.Forms.Control.Height%2A></xref:System.Windows.Forms.TextBox></xref:System.Windows.Forms.Control.Font%2A></xref:System.Windows.Forms.TextBox>。 <xref:System.Windows.Forms.Control.Width%2A>の<xref:System.Windows.Forms.TextBox>は変わりません</xref:System.Windows.Forms.TextBox></xref:System.Windows.Forms.Control.Width%2A>。       テキストを入力すると、コントロールのサイズを変更する場合は、使用、<xref:System.Windows.Forms.RichTextBox>制御および使用してその<xref:System.Windows.Forms.RichTextBox.ContentsResized>サイズを変更するイベントです</xref:System.Windows.Forms.RichTextBox.ContentsResized></xref:System.Windows.Forms.RichTextBox>。"
  example:
  - "This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons. The example demonstrates the AutoSize property by setting it to `true` for one text box and `false` for the other. When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text. The text box that has AutoSize set to `true` expands in height to accommodate the larger text. The width does not change.  \n  \n [!code-cs[SystemWindowsFormsAutoSize#1](~/add/codesnippet/csharp/AutoSizeCS/Form1.cs#1)]\n [!code-vb[SystemWindowsFormsAutoSize#1](~/add/codesnippet/visualbasic/AutoSize/Form1.vb#1)]"
  syntax:
    content: public override bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールの高さが自動的に調整する場合、フォントが変更されたときです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: TextBoxBase.AutoSizeChanged
  fullName: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このイベントは、このクラスではありません。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackColor
  id: BackColor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackColor
  nameWithType: TextBoxBase.BackColor
  fullName: System.Windows.Forms.TextBoxBase.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの背景色を設定します。"
  remarks: "BackColor プロパティを使用すると、フォームの画面の配色に合成するのにテキスト コントロールの背景色を変更します。       コントロール内のテキストの色を変更するには、<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>。 テキスト コントロールの BackColor プロパティを設定する場合は、選択した色が表示されなくなったコントロールのテキストが発生しませんを確認します。 たとえば場合、色の BackColor と<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>プロパティに設定されて`Color.Black`、textbox コントロール内のテキストは表示されません</xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>。       このプロパティもある場合は無効になります、<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>のプロパティ、<xref:System.Windows.Forms.TextBoxBase>に設定されている`true`</xref:System.Windows.Forms.TextBoxBase></xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>。"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>を表すコントロールの背景。"
  overload: System.Windows.Forms.TextBoxBase.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティは、このクラスではありません。"
  remarks: "このプロパティは、このクラスではありません。"
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "オブジェクトの背景イメージです。"
  overload: System.Windows.Forms.TextBoxBase.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: TextBoxBase.BackgroundImageChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.BackgroundImage*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.BackgroundImage*>。 このイベントは、このクラスではありません。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティは、このクラスではありません。"
  remarks: "このプロパティは、このクラスではありません。"
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref>値。"
  overload: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: TextBoxBase.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.BackgroundImageLayout*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.BackgroundImageLayout*>。 このイベントは、このクラスではありません。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
  fullName: System.Windows.Forms.TextBoxBase.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックス コントロールの境界線の種類を設定します。"
  remarks: "BorderStyle プロパティを使用して、既定の&3; 次元コントロールだけでなく、ふちなしとフラット スタイルのコントロールを作成することができます。      > [!NOTE] >、派生クラスでは、<xref:System.Windows.Forms.RichTextBox>はサポートしていません、`BorderStyle.FixedSingle`スタイル</xref:System.Windows.Forms.RichTextBox>。 このスタイル、<xref:System.Windows.Forms.BorderStyle>を使用する、`BorderStyle.Fixed3D`代わりにスタイルを設定します</xref:System.Windows.Forms.BorderStyle>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border. This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and BorderStyle have been assigned to the control.  \n  \n [!code-cs[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_71_1.cs)]\n [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_71_1.cpp)]\n [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_71_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref>テキスト ボックス コントロールの境界線の種類を表すです。 既定値は<xref uid=&quot;langword_csharp_Fixed3D&quot; name=&quot;Fixed3D&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "列挙体の有効な値の範囲内にない値がプロパティに割り当てられました。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  id: BorderStyleChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BorderStyleChanged
  nameWithType: TextBoxBase.BorderStyleChanged
  fullName: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.BorderStyle*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.BorderStyle*>。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the BorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#242](~/add/codesnippet/csharp/e-system.windows.forms.t_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#242](~/add/codesnippet/visualbasic/e-system.windows.forms.t_10_1.vb)]"
  syntax:
    content: public event EventHandler BorderStyleChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme
  id: CanEnableIme
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
  fullName: System.Windows.Forms.TextBoxBase.CanEnableIme
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、<xref:System.Windows.Forms.Control.ImeMode*>プロパティは、IME サポートを有効にする、アクティブな値に設定できます</xref:System.Windows.Forms.Control.ImeMode*>。"
  syntax:
    content: protected override bool CanEnableIme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合、<xref:System.Windows.Forms.TextBoxBase.ReadOnly*>プロパティは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合または<xref href=&quot;System.Windows.Forms.TextBoxBase&quot;></xref>パスワード マスクを使用するクラスを設定、それ以外の文字<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.Windows.Forms.TextBoxBase.ReadOnly*> 。"
  overload: System.Windows.Forms.TextBoxBase.CanEnableIme*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CanUndo
  id: CanUndo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
  fullName: System.Windows.Forms.TextBoxBase.CanUndo
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザーがテキスト ボックス コントロールで前の操作を取り消すことができるかどうかを示す値を取得します。"
  remarks: "このメソッドが戻る場合`true`、呼び出すことができます、<xref:System.Windows.Forms.TextBoxBase.Undo%2A>テキスト ボックスの最後の操作を元に戻す方法</xref:System.Windows.Forms.TextBoxBase.Undo%2A>。 このメソッドを使用することができます、<xref:System.Windows.Forms.MenuItem.Popup>のイベント、 <xref:System.Windows.Forms.MenuItem>、またはボタンの状態を管理するコードで、<xref:System.Windows.Forms.ToolBar>を有効にするにまたはテキスト ボックス コントロールで前の操作を元に戻すことを無効にします</xref:System.Windows.Forms.ToolBar></xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MenuItem.Popup>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_153_1.cs)]\n [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_153_1.cpp)]\n [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_153_1.vb)]"
  syntax:
    content: public bool CanUndo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーは、テキスト ボックス コントロールで実行される前の操作を取り消すことができる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.CanUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Clear
  id: Clear
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Clear()
  nameWithType: TextBoxBase.Clear()
  fullName: System.Windows.Forms.TextBoxBase.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックス コントロールのすべてのテキストをクリアします。"
  remarks: "このメソッドを割り当てる代わりに、コントロールの内容を消去を使用することができます、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティ、空の文字列</xref:System.Windows.Forms.TextBoxBase.Text%2A>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event. The code within the event handler restricts data to numbers. After text has been entered in the control, the code determines if the text entered is a number. If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted. The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method. This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.  \n  \n [!code-cpp[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_57_1.cpp)]\n [!code-vb[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_57_1.vb)]\n [!code-cs[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_57_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ClearUndo
  id: ClearUndo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ClearUndo()
  nameWithType: TextBoxBase.ClearUndo()
  fullName: System.Windows.Forms.TextBoxBase.ClearUndo()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスのアンドゥ バッファーから最新の操作に関する情報をクリアします。"
  remarks: "このメソッドは、アプリケーションの状態に基づいてを繰り返しから元に戻す操作を防ぐために使用できます。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_62_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_62_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_62_1.cpp)]"
  syntax:
    content: public void ClearUndo ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.ClearUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Click
  id: Click
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Click
  nameWithType: TextBoxBase.Click
  fullName: System.Windows.Forms.TextBoxBase.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスがクリックされたときに発生します。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates how to handle the Click event. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1. This example requires that the event-handling method has been associated with the Click event.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/csharp/e-system.windows.forms.t_46_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/cpp/e-system.windows.forms.t_46_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/visualbasic/e-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Copy
  id: Copy
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Copy()
  nameWithType: TextBoxBase.Copy()
  fullName: System.Windows.Forms.TextBoxBase.Copy()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスに現在の選択範囲をコピー、**クリップボード**です。"
  remarks: "代わりに、このメソッドを使用できる、 <xref:System.Windows.Forms.Clipboard>、テキスト ボックスにテキストをコピーし、それを配置する、クラス、**クリップボード**</xref:System.Windows.Forms.Clipboard>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_0_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_0_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_0_1.cpp)]"
  syntax:
    content: public void Copy ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: TextBoxBase.CreateHandle()
  fullName: System.Windows.Forms.TextBoxBase.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールのハンドルを作成します。"
  syntax:
    content: protected override void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.CreateHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
  fullName: System.Windows.Forms.TextBoxBase.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロール ハンドルが作成されるときに、必要な作成パラメーターを取得します。"
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref>コントロールへのハンドルが作成されたときに必要な作成パラメーターを格納します。"
  overload: System.Windows.Forms.TextBoxBase.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Cut
  id: Cut
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Cut()
  nameWithType: TextBoxBase.Cut()
  fullName: System.Windows.Forms.TextBoxBase.Cut()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスに現在の選択範囲を移動、**クリップボード**です。"
  remarks: "コントロールでテキストが選択されている場合は、このメソッドは、テキスト ボックスからのみテキストを切り取ります。 代わりに、このメソッドを使用できる、 <xref:System.Windows.Forms.Clipboard>、テキスト ボックスにテキストをコピーしに移動する、クラス、**クリップボード**</xref:System.Windows.Forms.Clipboard>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_47_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_47_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_47_1.cpp)]"
  syntax:
    content: public void Cut ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Cut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor
  id: DefaultCursor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
  fullName: System.Windows.Forms.TextBoxBase.DefaultCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの既定のカーソルを設定します。"
  remarks: "コントロールの既定のカーソルを構成する DefaultCursor をオーバーライドします。 これは、コントロールのコンス トラクターでカーソルを設定するよりも効率的でありでは特定のカーソル関連のデザイナー機能の自動サポート。"
  syntax:
    content: protected override System.Windows.Forms.Cursor DefaultCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "型のオブジェクト<xref href=&quot;System.Windows.Forms.Cursor&quot;></xref>の現在の既定のカーソルを表すです。"
  overload: System.Windows.Forms.TextBoxBase.DefaultCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
  fullName: System.Windows.Forms.TextBoxBase.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールの既定のサイズを取得します。"
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "既定値<xref href=&quot;System.Drawing.Size&quot;></xref>コントロールのです。"
  overload: System.Windows.Forms.TextBoxBase.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DeselectAll
  id: DeselectAll
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DeselectAll()
  nameWithType: TextBoxBase.DeselectAll()
  fullName: System.Windows.Forms.TextBoxBase.DeselectAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定の値、<xref:System.Windows.Forms.TextBoxBase.SelectionLength*>プロパティが&0; 文字がコントロールで選択されていないようにします</xref:System.Windows.Forms.TextBoxBase.SelectionLength*>。"
  syntax:
    content: public void DeselectAll ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.DeselectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered
  id: DoubleBuffered
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
  fullName: System.Windows.Forms.TextBoxBase.DoubleBuffered
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールが表示される前に、バッファーにコントロールの描画を行うかどうかを示す値を設定します。 このプロパティは、このクラスではありません。"
  remarks: "このプロパティは、このクラスではありません。"
  syntax:
    content: protected override bool DoubleBuffered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールのダブル バッファリングを実装するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.DoubleBuffered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
  fullName: System.Windows.Forms.TextBoxBase.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの前景色を設定します。"
  remarks: "ForeColor プロパティを使用して、フォーム上の他のコントロールのテキストに合わせて、コントロール内のテキストの色を変更することができます。 このプロパティは、強調表示を無効な値を含む特定のテキスト ボックスにも使用できます。       使用して、コントロールの背景色を変更するには<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.BackColor%2A>。 テキスト コントロールの前景色プロパティを設定する場合は、選択した色が表示されなくなったコントロールのテキストが発生しませんを確認します。 たとえば場合、前景色と<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>プロパティに設定されて`Color.Black`、textbox コントロール内のテキストは表示されません</xref:System.Windows.Forms.TextBoxBase.BackColor%2A>。       このプロパティもある場合は無効になります、<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>のプロパティ、<xref:System.Windows.Forms.TextBoxBase>に設定されている`true`</xref:System.Windows.Forms.TextBoxBase></xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>。"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>コントロールの前景色を表すです。"
  overload: System.Windows.Forms.TextBoxBase.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  id: GetCharFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetCharFromPosition(Point)
  nameWithType: TextBoxBase.GetCharFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharFromPosition(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロール内の指定した位置に最も近い文字を取得します。"
  remarks: "場所が指定されている場合、`pt`パラメーターが文字列で指定した位置に最も近いの最初の文字、コントロールのクライアント領域外`pt`が返されます。 このメソッドを使用すると、コントロール内の特定の時点の近くにあるどの文字を決定します。 この値は、その場所にあるテキストに対して操作を実行し、使用できます。      > [!NOTE] > 場合で指定した場所、`pt`で指定した位置に最も近い文字列の最後の文字、コントロールのクライアント領域の右側にあるパラメーターがある`pt`が返されます。"
  syntax:
    content: public virtual char GetCharFromPosition (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "最も近い文字をシークする場所です。"
    return:
      type: System.Char
      description: "指定した場所にある文字。"
  overload: System.Windows.Forms.TextBoxBase.GetCharFromPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  id: GetCharIndexFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetCharIndexFromPosition(Point)
  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した場所に最も近い文字のインデックスを取得します。"
  remarks: "このメソッドで指定された位置に最も近い文字のインデックスを返します、`pt`パラメーター。 文字インデックスは、スペースを含む、コントロール内のテキストの&0; から始まるインデックスです。 このメソッドを使用すると、場所、テキストで、ユーザーが、このメソッドに、マウス座標を渡すことによって、マウスを決定します。 ユーザーがコントロールのテキスト内の単語にマウス ポインターを置いたときにタスクを実行する場合に役立ちます。 これができます。      > [!IMPORTANT] > か、指定した場所は、コントロールのクライアントの四角形内にありませんは、コントロール内の最後の文字を超える、戻り値は、最後の文字のインデックス。"
  syntax:
    content: public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "検索する場所です。"
    return:
      type: System.Int32
      description: "指定された位置の&0; から始まる文字インデックス。"
  overload: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  id: GetFirstCharIndexFromLine(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetFirstCharIndexFromLine(Int32)
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定された行の最初の文字のインデックスを取得します。"
  remarks: "行番号は、テキスト ボックスには、0 から始まります。 場合、`lineNumber`パラメーターが、テキスト ボックスの最後の行より大きい、GetFirstCharIndexFromLine-1 が返されます。       GetFirstCharIndexFromLine では、物理的な行の最初の文字インデックスを返します。 物理行は、行に表示される、割り当てられている行ではありません。 表示されている行の数は、右端で折り返すにより割り当てられた行の数より大きくできます。 2 つの長い行を割り当てる場合など、<xref:System.Windows.Forms.RichTextBox>を制御し、設定<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>と<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>に`true`、2 つの長時間割り当てられている行と、次の&4; つの物理 (または行が表示されます).</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> </xref:System.Windows.Forms.TextBoxBase.Multiline%2A> </xref:System.Windows.Forms.RichTextBox>"
  syntax:
    content: public int GetFirstCharIndexFromLine (int lineNumber);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "最初の文字のインデックスを取得する対象の行。"
    return:
      type: System.Int32
      description: "指定した行の最初の文字の&0; から始まるインデックス。"
  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値、 <code> lineNumber </code>パラメーターが&0; 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  id: GetFirstCharIndexOfCurrentLine
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetFirstCharIndexOfCurrentLine()
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在の行の最初の文字のインデックスを取得します。"
  syntax:
    content: public int GetFirstCharIndexOfCurrentLine ();
    parameters: []
    return:
      type: System.Int32
      description: "現在の行における&0; から始まる文字インデックス。"
  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  id: GetLineFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetLineFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールのテキスト内で指定した文字位置からの行番号を取得します。"
  remarks: "このメソッドで指定された文字のインデックスに基づいて行の数を決定することができます、`index`メソッドのパラメーターです。 コントロール内のテキストの最初の行では、値&0; を返します。 GetLineFromCharIndex メソッドは、インデックス付きの文字がコントロール内にある物理的な行番号を返します。 たとえば、コントロール内のテキストの最初の論理行の一部は、次の行に折り返す場合、GetLineFromCharIndex メソッド 1 を返します、指定した文字のインデックス位置にある文字が物理 2 行目に折り返されます。 場合<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>に設定されている`false`行の一部を次に折り返されるなしと指定の文字インデックスの場合は 0 を返します</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>。 このメソッドを使用するにはのどの行で、特定の文字のインデックスが内にあるかを判断します。 呼び出しの後など、 <xref:System.Windows.Forms.RichTextBox.Find%2A>、テキストを検索する方法、検索結果がある文字のインデックスを取得することができます</xref:System.Windows.Forms.RichTextBox.Find%2A>。 によって返される文字のインデックスを持つこのメソッドを呼び出すことができます、<xref:System.Windows.Forms.RichTextBox.Find%2A>という単語が行を決定するメソッドが見つかりました</xref:System.Windows.Forms.RichTextBox.Find%2A>。      > [!NOTE] > で文字のインデックスが指定されている場合、`index`パラメーターは、コントロール内に含まれる使用可能な行数外ですが、最後の行番号が返されます。"
  syntax:
    content: public virtual int GetLineFromCharIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "検索する文字のインデックス位置。"
    return:
      type: System.Int32
      description: "文字のインデックスが存在する&0; から始まる行番号。"
  overload: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  id: GetPositionFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetPositionFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定された文字インデックスにおけるコントロール内の位置を取得します。"
  remarks: "このメソッドでは、判断、コントロール内の特定の文字のインデックスが存在することができます。 このメソッドは、コントロール内の単語のショートカット メニュー項目またはヘルプ情報を表示するなどのタスクを使用できます。 たとえば、ユーザーがコントロールに含まれる単語を右クリックしたときに、ユーザーにオプションのメニューを表示する場合は、行うこともできますこのメソッドを正しく表示する単語の位置を決定する、<xref:System.Windows.Forms.ContextMenu>コントロール</xref:System.Windows.Forms.ContextMenu>。"
  syntax:
    content: public virtual System.Drawing.Point GetPositionFromCharIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "場所を取得する対象の文字のインデックス。"
    return:
      type: System.Drawing.Point
      description: "コントロールのクライアントの四角形内で指定された文字の位置。"
  overload: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.HideSelection
  id: HideSelection
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
  fullName: System.Windows.Forms.TextBoxBase.HideSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールがフォーカスを失ったときに、テキスト ボックス コントロールで選択したテキストが強調表示されたままかどうかを示す値を設定します。"
  remarks: "このプロパティを使用して、別のフォームまたはダイアログ ボックスにフォーカスが、スペル チェック ダイアログ ボックスなどのテキスト ボックス コントロールで強調表示されているテキストを保持することができます。"
  example:
  - "The following code example demonstrates how to use the HideSelection property. To run the example, paste the following code in a form. Call the `InitializeTextBox` method in the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/csharp/p-system.windows.forms.t_76_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/cpp/p-system.windows.forms.t_76_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/visualbasic/p-system.windows.forms.t_76_1.vb)]"
  syntax:
    content: public bool HideSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>選択したテキストが表示されない場合、テキスト ボックス コントロールがフォーカスを失ったときを強調表示されます。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>テキスト ボックス コントロールがフォーカスを失ったときに、選択したテキストが強調表示されたままの場合、します。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.HideSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  id: HideSelectionChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: HideSelectionChanged
  nameWithType: TextBoxBase.HideSelectionChanged
  fullName: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.HideSelection*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.HideSelection*>。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HideSelectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the HideSelectionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#245](~/add/codesnippet/csharp/e-system.windows.forms.t_114_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#245](~/add/codesnippet/visualbasic/e-system.windows.forms.t_114_1.vb)]"
  syntax:
    content: public event EventHandler HideSelectionChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase
  id: ImeModeBase
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
  fullName: System.Windows.Forms.TextBoxBase.ImeModeBase
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの入力方式エディター (IME) モードを設定します。"
  syntax:
    content: protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "コントロールの IME モード。"
  overload: System.Windows.Forms.TextBoxBase.ImeModeBase*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  id: IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: IsInputKey(Keys)
  nameWithType: TextBoxBase.IsInputKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.IsInputKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したキーが入力キー、またはプリプロセスを必要とする特殊なキーであるかどうかを判断します。"
  remarks: "IsInputKey メソッドを返します`true`ときに、`keyData`パラメーターが含まれています、<xref:System.Windows.Forms.Keys>値、および<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>プロパティは`true`</xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A></xref:System.Windows.Forms.Keys>。 IsInputKey 返します`false`場合`keyData`両方<xref:System.Windows.Forms.Keys>と<xref:System.Windows.Forms.Keys>.</xref:System.Windows.Forms.Keys></xref:System.Windows.Forms.Keys>が含まれています"
  syntax:
    content: protected override bool IsInputKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "キーの値のいずれか。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したキーが入力キーである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.IsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Lines
  id: Lines
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Lines
  nameWithType: TextBoxBase.Lines
  fullName: System.Windows.Forms.TextBoxBase.Lines
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックス コントロールで行のテキストを設定します。"
  remarks: "配列内の各要素では、テキスト ボックス コントロール内のテキストの行になります。 場合、 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>、テキスト ボックス コントロールのプロパティに設定されて`true`テキストに改行文字が表示されると、改行文字の後のテキストが、配列内の新しい要素に追加され、別々 の行に表示されます</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>。      > [!NOTE] > 既定では、 <xref:System.Windows.Forms.TextBox>.</xref:System.Windows.Forms.TextBox>内の行の読み取り専用コピーである行のコレクション 行の書き込み可能なコレクションを取得するには、次のようなコードを使用します。`textBox1.Lines = new string[] { &quot;abcd&quot; };`"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName> method. This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.  \n  \n [!code-cs[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_111_1.cs)]\n [!code-vb[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_111_1.vb)]\n [!code-cpp[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_111_1.cpp)]"
  syntax:
    content: public string[] Lines { get; set; }
    return:
      type: System.String[]
      description: "テキスト ボックス コントロールにテキストを含む文字列の配列。"
  overload: System.Windows.Forms.TextBoxBase.Lines*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MaxLength
  id: MaxLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
  fullName: System.Windows.Forms.TextBoxBase.MaxLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはユーザーを入力したり、テキスト ボックス コントロールに貼り付ける文字の最大数を設定します。"
  remarks: "郵便番号や電話番号などの値をコントロールに入力したテキストの長さが制限またはデータがデータベースに入力するときに入力したテキストの長さを制限するには、このプロパティを使用することができます。 データベース内の対応するフィールドの最大長をコントロールに入力したテキストを制限することができます。      > [!NOTE] > コードでは、値を設定することができます、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティの長さが MaxLength プロパティで指定された値よりも大きい値です</xref:System.Windows.Forms.TextBoxBase.Text%2A>。 このプロパティは、実行時に、コントロールに入力したテキストにのみ影響します。"
  example:
  - "The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password. This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the MaxLength property to restrict the password length to eight characters. This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_14_1.cs)]\n [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_14_1.cpp)]\n [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_14_1.vb)]"
  syntax:
    content: public virtual int MaxLength { get; set; }
    return:
      type: System.Int32
      description: "コントロールに入力できる文字数。 既定値は 32767 です。"
  overload: System.Windows.Forms.TextBoxBase.MaxLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "プロパティに割り当てられた値が 0 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Modified
  id: Modified
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Modified
  nameWithType: TextBoxBase.Modified
  fullName: System.Windows.Forms.TextBoxBase.Modified
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または、コントロールが作成されたか、その内容が最後に設定された後に、テキスト ボックス コントロールがユーザーによって変更されていることを示す値を設定します。"
  remarks: "このプロパティを使用すると、ユーザーがテキスト ボックス コントロールの内容を変更したかどうかを判断します。 アプリケーションで、テキスト ボックス コントロールに変更が加えられたかを示すコードでこのプロパティを設定することもできます。 このプロパティは、変更された場合、テキスト ボックス コントロールで変更された内容を検証または保存できるように決定する検証とデータ保存メソッドによって使用できます。       変更した場合、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティ、プログラムによって変更されたプロパティに戻ります`false`</xref:System.Windows.Forms.TextBoxBase.Text%2A>。 これは発生しません、<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>イベント</xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data. The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed. If the contents have changed, the Modified property is set to `true`. Otherwise, it is reset to `false`. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cpp[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_45_1.cpp)]\n [!code-cs[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_45_1.cs)]\n [!code-vb[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_45_1.vb)]"
  syntax:
    content: public bool Modified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールの内容が変更された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.Modified*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged
  id: ModifiedChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ModifiedChanged
  nameWithType: TextBoxBase.ModifiedChanged
  fullName: System.Windows.Forms.TextBoxBase.ModifiedChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.Modified*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.Modified*>。"
  remarks: "変更した場合、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティ、プログラムによって、<xref:System.Windows.Forms.TextBoxBase.Modified%2A>プロパティに戻ります`false`</xref:System.Windows.Forms.TextBoxBase.Modified%2A></xref:System.Windows.Forms.TextBoxBase.Text%2A>。 これには、ModifiedChanged イベントは発生しません。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ModifiedChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the ModifiedChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#246](~/add/codesnippet/csharp/e-system.windows.forms.t_141_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#246](~/add/codesnippet/visualbasic/e-system.windows.forms.t_141_1.vb)]"
  syntax:
    content: public event EventHandler ModifiedChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MouseClick
  nameWithType: TextBoxBase.MouseClick
  fullName: System.Windows.Forms.TextBoxBase.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "マウスでコントロールがクリックされたときに発生します。"
  remarks: "<xref:System.Windows.Forms.RichTextBox>制御は発生しません、<xref:System.Windows.Forms.TextBoxBase.Click>イベントを右クリックした</xref:System.Windows.Forms.TextBoxBase.Click></xref:System.Windows.Forms.RichTextBox>。 マウス クリック イベントと同等の機能を提供します。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the MouseClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#244](~/add/codesnippet/csharp/e-system.windows.forms.t_39_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#244](~/add/codesnippet/visualbasic/e-system.windows.forms.t_39_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Multiline
  id: Multiline
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Multiline
  nameWithType: TextBoxBase.Multiline
  fullName: System.Windows.Forms.TextBoxBase.Multiline
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または複数行テキスト ボックス コントロールであるかどうかを示す値を設定します。"
  remarks: "複数行テキスト ボックスでは、コントロールに&1; つ以上の行のテキストを表示することができます。 場合、<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティに設定されている`true`コントロール内の次の行に複数行テキスト ボックスに入力したテキストをラップします</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>。 場合、<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティに設定されている`false`、改行文字を入力するまでにその複数行テキスト ボックス コントロールに入力したテキストが同じ行に表示されます</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>。       次は、改行文字として使用できます:- <xref:System.Environment.NewLine%2A?displayProperty=fullName>- ControlChars.CrLf - vbCrLf (Visual Basic のみ) を使用してテキスト ボックスに、スクロール バーを追加することができます、<xref:System.Windows.Forms.TextBox.ScrollBars%2A>水平/垂直方向のスクロール バーを表示するプロパティ</xref:System.Windows.Forms.TextBox.ScrollBars%2A></xref:System.Environment.NewLine%2A?displayProperty=fullName>。 これにより、ユーザーがコントロールのサイズを越えるテキストをスクロールできます。      > [!NOTE] > 複数行のプロパティの既定値はため`false`、 <xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.TextBox>.</xref:System.Windows.Forms.TextBox>のサイズを変更する場合でも、フォント サイズに従いなります</xref:System.Windows.Forms.TextBox>の既定のサイズ 一貫性のあるサイズを取得する、<xref:System.Windows.Forms.TextBox>設定、その<xref:System.Windows.Forms.TextBox.Multiline%2A>プロパティを`true`</xref:System.Windows.Forms.TextBox.Multiline%2A></xref:System.Windows.Forms.TextBox>。      > [!NOTE] > 複数行のプロパティ設定されている場合、日本語のオペレーティング システムで`true`、設定、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティは、パスワードのテキストが表示されます</xref:System.Windows.Forms.TextBox.PasswordChar%2A>。 そのため、日本語のオペレーティング システムでに複数行のプロパティを設定`false`設定した場合、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティ</xref:System.Windows.Forms.TextBox.PasswordChar%2A>。      > [!NOTE] > このプロパティに設定`false`既定ではすべての派生クラスの例外を除いて、<xref:System.Windows.Forms.RichTextBox>コントロール</xref:System.Windows.Forms.RichTextBox>。       <xref:System.Windows.Forms.RichTextBox>コントロール、<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>プロパティは、コントロールが自動的にサイズ変更、次のように動作しているかどうかに影響: - 場合<xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>に設定されている`true`と<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>に設定されている`true`、<xref:System.Windows.Forms.RichTextBox>サイズは自動的に変更されません</xref:System.Windows.Forms.RichTextBox></xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName></xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName></xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName></xref:System.Windows.Forms.RichTextBox>。      If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>éý &quot;è`true`と<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>éý&quot; è `false`、<xref:System.Windows.Forms.RichTextBox>は自動的に変更します</xref:System.Windows.Forms.RichTextBox></xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName></xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_170_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_170_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_170_1.vb)]"
  syntax:
    content: public virtual bool Multiline { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コントロールが複数行テキスト ボックス コントロールです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.Multiline*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MultilineChanged
  id: MultilineChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MultilineChanged
  nameWithType: TextBoxBase.MultilineChanged
  fullName: System.Windows.Forms.TextBoxBase.MultilineChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.Multiline*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.Multiline*>。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MultilineChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the MultilineChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#247](~/add/codesnippet/csharp/e-system.windows.forms.t_111_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#247](~/add/codesnippet/visualbasic/e-system.windows.forms.t_111_1.vb)]"
  syntax:
    content: public event EventHandler MultilineChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  id: OnAcceptsTabChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnAcceptsTabChanged(EventArgs)
  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.AcceptsTabChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnAcceptsTabChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnAcceptsTabChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  id: OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.BorderStyleChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnBorderStyleChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: TextBoxBase.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  id: OnHideSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHideSelectionChanged(EventArgs)
  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.HideSelectionChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnHideSelectionChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnHideSelectionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  id: OnModifiedChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnModifiedChanged(EventArgs)
  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnModifiedChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.ModifiedChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnModifiedChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnModifiedChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnModifiedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnMouseUp(MouseEventArgs)
  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMouseUp(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);
    parameters:
    - id: mevent
      type: System.Windows.Forms.MouseEventArgs
      description: "イベントのデータ。"
  overload: System.Windows.Forms.TextBoxBase.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  id: OnMultilineChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnMultilineChanged(EventArgs)
  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMultilineChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.MultilineChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnMultilineChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnMultilineChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnMultilineChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  id: OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnPaddingChanged(EventArgs)
  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnPaddingChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このメソッドは、このクラスではありません。"
  remarks: "このメソッドは、このクラスではありません。"
  syntax:
    content: protected override void OnPaddingChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnPaddingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  id: OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.TextBoxBase.ReadOnlyChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnReadOnlyChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnReadOnlyChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: TextBoxBase.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.TextBoxBase.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Padding
  id: Padding
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Padding
  nameWithType: TextBoxBase.Padding
  fullName: System.Windows.Forms.TextBoxBase.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティは、このクラスではありません。"
  remarks: "このプロパティは、このクラスではありません。"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.TextBoxBase.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: TextBoxBase.PaddingChanged
  fullName: System.Windows.Forms.TextBoxBase.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このイベントは、このクラスではありません。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Paint
  id: Paint
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Paint
  nameWithType: TextBoxBase.Paint
  fullName: System.Windows.Forms.TextBoxBase.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールが再描画されるときに発生します。 このイベントは、このクラスではありません。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Paste
  id: Paste
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Paste()
  nameWithType: TextBoxBase.Paste()
  fullName: System.Windows.Forms.TextBoxBase.Paste()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスに現在選択項目の内容と置き換えます、**クリップボード**です。"
  remarks: "Paste メソッドはだけテキストを貼り付けるコントロールにテキストが格納されている場合、**クリップボード**です。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_52_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_52_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_52_1.cpp)]"
  syntax:
    content: public void Paste ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
  fullName: System.Windows.Forms.TextBoxBase.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスの適切な高さを取得します。"
  remarks: "このプロパティによって返されるサイズは、テキスト ボックスのフォントの高さと境界線のスタイルに基づきます。 コントロールにテキストが正しく表示されていることを確認するのにテキスト ボックスの適切なサイズを調べるには、このプロパティを使用することができます。 このプロパティによって返される値は、(ピクセル単位) です。       PreferredHeight の値では、上部または下部のテキストをクリッピングせずに&1; 行のテキストを表示するために、テキスト ボックスがあります。 最小の高さを表します。 この値は、同じかどうか、<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>プロパティに設定されている`true`または`false`</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>。"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "テキスト ボックスの適切な高さ。"
  overload: System.Windows.Forms.TextBoxBase.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: TextBoxBase.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コマンド キーを処理します。"
  syntax:
    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>を処理するウィンドウ メッセージを表す、参照によって渡されます。"
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref>を処理するショートカット キーを表す値です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コマンド キーがコントロールによって処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: TextBoxBase.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ダイアログ キーを処理します。"
  syntax:
    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref>を処理するキーを表す値です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーがコントロールによって処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ReadOnly
  id: ReadOnly
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
  fullName: System.Windows.Forms.TextBoxBase.ReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックス内のテキストは読み取り専用であるかどうかを示す値を設定します。"
  remarks: "このプロパティに設定するときに`true`、実行時にユーザーがコントロールの内容を変更することはできません。 このプロパティ設定して`true`の値を設定することができます、<xref:System.Windows.Forms.TextBoxBase.Text%2A>コード内のプロパティ</xref:System.Windows.Forms.TextBoxBase.Text%2A>。 コントロールを無効にするのではなく、この機能を使用することができます、<xref:System.Windows.Forms.Control.Enabled%2A>をコピーする内容を有効にするプロパティおよびに表示されるツールヒント</xref:System.Windows.Forms.Control.Enabled%2A>。"
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>テキスト ボックスは読み取り専用です。 場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  id: ReadOnlyChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ReadOnlyChanged
  nameWithType: TextBoxBase.ReadOnlyChanged
  fullName: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.TextBoxBase.ReadOnly*>プロパティが変更された</xref:System.Windows.Forms.TextBoxBase.ReadOnly*>。"
  remarks: 'イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ReadOnlyChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the ReadOnlyChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#248](~/add/codesnippet/csharp/e-system.windows.forms.t_93_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#248](~/add/codesnippet/visualbasic/e-system.windows.forms.t_93_1.vb)]"
  syntax:
    content: public event EventHandler ReadOnlyChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret
  id: ScrollToCaret
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ScrollToCaret()
  nameWithType: TextBoxBase.ScrollToCaret()
  fullName: System.Windows.Forms.TextBoxBase.ScrollToCaret()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在のカレット位置にコントロールの内容をスクロールします。"
  remarks: "このメソッドでは、コントロールの表示領域内のキャレットになるまで、コントロールの内容をスクロールすることができます。 キャレットは、コントロールの表示領域の下にある、ScrollToCaret メソッドは、カーソルが、コントロールの下部に表示されるまでに、コントロールの内容をスクロールします。 コントロールの表示領域の上、キャレットを配置すると場合、このメソッドは、カーソルが、コントロールの上部に表示されるまで、コントロールの内容をスクロールします。 複数行テキスト ボックスにこのメソッドを使用するには、現在のテキストのエントリ ポイントが、コントロールの表示領域内にあることを確認します。      > [!NOTE] > このメソッドも何も起こりませんコントロールにフォーカスがない場合、またはカレットがコントロールの表示領域に既に配置されている場合。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the ScrollToCaret method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`. This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/csharp/m-system.windows.forms.t_50_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/cpp/m-system.windows.forms.t_50_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_50_1.vb)]"
  syntax:
    content: public void ScrollToCaret ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.ScrollToCaret*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  id: Select(System.Int32,System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Select(Int32,Int32)
  nameWithType: TextBoxBase.Select(Int32,Int32)
  fullName: System.Windows.Forms.TextBoxBase.Select(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスのテキストの範囲を選択します。"
  remarks: "コントロールのテキストの最初の文字を開始位置を設定する場合は、設定、`start`パラメーターを 0 にします。 このメソッドを使用するには、タイミングなどのテキストの部分文字列を選択するコントロールのテキストの検索と情報を交換します。      > [!NOTE] > を設定して、テキスト ボックス内でカレットを移動することができますプログラムによって、`start`パラメーター カレットを移動し、設定するテキスト ボックス内の位置を`length`パラメーターにゼロ (0) の値。 テキスト ボックスで、カレットを移動するためにフォーカスが必要です。      > [!NOTE] > 場合、このメソッドはパラメーターを使用せず、別の方法が使用されます。 この代替メソッドが<xref:System.Windows.Forms.Control>クラス</xref:System.Windows.Forms.Control>から継承します。 呼び出されると、入力フォーカスをコントロールに設定し、コントロールの内容を選択します。 詳細については、次を参照してください、<xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName>メソッド。</xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> 。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word \"fox\". If found, the code selects the word in the control using the Select method. This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence \"The quick brown fox jumps over the lazy dog.\"  \n  \n [!code-vb[Classic TextBoxBase.Select Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_54_1.vb)]\n [!code-cpp[Classic TextBoxBase.Select Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_54_1.cpp)]\n [!code-cs[Classic TextBoxBase.Select Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_54_1.cs)]"
  syntax:
    content: public void Select (int start, int length);
    parameters:
    - id: start
      type: System.Int32
      description: "テキスト ボックス内の現在のテキスト選択範囲内の最初の文字の位置。"
    - id: length
      type: System.Int32
      description: "選択する文字の数。"
  overload: System.Windows.Forms.TextBoxBase.Select*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値、 <code> start </code>パラメーターが&0; 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectAll
  id: SelectAll
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectAll()
  nameWithType: TextBoxBase.SelectAll()
  fullName: System.Windows.Forms.TextBoxBase.SelectAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスのすべてのテキストを選択します。"
  remarks: "このメソッドでは、コントロール内のすべてのテキストを選択することができます。 組み合わせてこのメソッドを使用することができます、<xref:System.Windows.Forms.TextBoxBase.Cut%2A>メソッドで、テキストをコントロールでは、コントロールの内容全体をコピーして貼り付けることを選択する必要があります、**クリップボード**</xref:System.Windows.Forms.TextBoxBase.Cut%2A>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control. If no text is selected, a call is made to the SelectAll method before copying the contents of the control to the **Clipboard**. This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.  \n  \n [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_37_1.cpp)]\n [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_37_1.vb)]\n [!code-cs[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_37_1.cs)]"
  syntax:
    content: public void SelectAll ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.SelectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectedText
  id: SelectedText
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
  fullName: System.Windows.Forms.TextBoxBase.SelectedText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールで現在選択されているテキストを示す値を設定します。"
  remarks: "テキスト ボックスで現在選択されているテキストを変更するには、このプロパティにテキストを割り当てることができます。 テキストが選択されていない場合、テキスト ボックスに、このプロパティは、長さ&0; の文字列を返します。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_21_1.cpp)]\n [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_21_1.vb)]\n [!code-cs[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_21_1.cs)]"
  syntax:
    content: public virtual string SelectedText { get; set; }
    return:
      type: System.String
      description: "テキスト ボックスで現在選択されているテキストを表す文字列。"
  overload: System.Windows.Forms.TextBoxBase.SelectedText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectionLength
  id: SelectionLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
  fullName: System.Windows.Forms.TextBoxBase.SelectionLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックスで選択されている文字の数を設定します。"
  remarks: "このプロパティを使用すると、かどうか任意の文字は現在選択されているテキスト ボックス コントロールで選択したテキストの操作を実行する前に確認します。 値を減算コントロール内のテキストの全体の長さに SelectionLength プロパティの値が設定 SelectionLength プロパティの値がコントロールのテキスト内の文字の数よりも大きい値に設定されている場合、<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>プロパティ (の任意の値が指定されている場合、<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>プロパティ).</xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> </xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>      > [!NOTE] > を設定して、テキスト ボックス内でカレットを移動することができますプログラムによって、<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>カレットを移動し、ゼロ (0) の値に SelectionLength プロパティを設定するテキスト ボックス内の位置</xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>。 テキスト ボックスで、カレットを移動するためにフォーカスが必要です。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_216_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_216_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_216_1.cpp)]"
  syntax:
    content: public virtual int SelectionLength { get; set; }
    return:
      type: System.Int32
      description: "テキスト ボックスで選択されている文字の数。"
  overload: System.Windows.Forms.TextBoxBase.SelectionLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "割り当てられた値が&0; 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectionStart
  id: SelectionStart
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
  fullName: System.Windows.Forms.TextBoxBase.SelectionStart
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックスで選択したテキストの開始位置を設定します。"
  remarks: "コントロールのテキストが選択されていない場合、このプロパティは、カーソル、または新しいテキスト用のキャレットを示します。 コントロール内のテキストの長さを超えた位置にこのプロパティを設定すると、選択の開始位置は最後の文字の後に配置されます。 テキスト ボックス コントロールでテキストを選択すると、このプロパティを変更する可能性があります値を小さくは<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>。 SelectionStart プロパティによって示される位置の後にコントロール内の残りのテキストがの値より小さい場合、<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティ、値の<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティは自動的に小さきます</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A></xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>。 SelectionStart プロパティの値が増加、<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>。       SelectionStart を設定して、テキスト ボックス内で選択範囲を移動することができますプログラムによって、<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>。       カレットを移動し、設定をテキスト ボックス内の位置に、SelectionStart を設定して、テキスト ボックス内でカレットを移動することができますプログラムで、<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>プロパティ値をゼロ (0).</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>       <xref:System.Windows.Forms.TextBox>選択またはカレットを移動する順序にフォーカスがある必要があります</xref:System.Windows.Forms.TextBox>。 SelectionStart プロパティを設定することができます、<xref:System.Windows.Forms.TextBox>つまり<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>を付けることにより、<xref:System.Windows.Forms.Control.Focus%2A>最初</xref:System.Windows.Forms.Control.Focus%2A></xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A></xref:System.Windows.Forms.TextBox>。"
  example:
  - "**Example 1**  \n  \n The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_70_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_70_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_70_1.cpp)]  \n  \n **Example 2**  \n  \n The following example sets the SelectionStart property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.  \n  \n [!code-vb[SystemWindowsFormsTextBoxBase#1](~/add/codesnippet/visualbasic/SelectionStart/Form1.vb#1)]\n [!code-cs[SystemWindowsFormsTextBoxBase#1](~/add/codesnippet/csharp/SelectionStartCS/Form1.cs#1)]"
  syntax:
    content: public int SelectionStart { get; set; }
    return:
      type: System.Int32
      description: "テキスト ボックスで選択したテキストの開始位置。"
  overload: System.Windows.Forms.TextBoxBase.SelectionStart*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "割り当てられた値が&0; 未満です。"
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した境界を設定、 <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref>制御します。"
  remarks: "<xref:System.Windows.Forms.TextBoxBase>コントロール、<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>場合は、境界を設定するプロパティ、<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>プロパティは`true`と<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>プロパティは`false`</xref:System.Windows.Forms.TextBoxBase.Multiline%2A></xref:System.Windows.Forms.TextBoxBase.AutoSize%2A></xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A></xref:System.Windows.Forms.TextBoxBase>。       含まれていない境界に対応するパラメーター、通常、`specified`パラメーターは、その現在の値で渡されます。 たとえば、 <xref:System.Windows.Forms.Control.Height%2A>、 <xref:System.Windows.Forms.Control.Width%2A>、または<xref:System.Drawing.Point.X%2A>または<xref:System.Drawing.Point.Y%2A>のプロパティ、<xref:System.Windows.Forms.Control.Location%2A>プロパティは、コントロールの現在のインスタンスへの参照で渡すことができます</xref:System.Windows.Forms.Control.Location%2A></xref:System.Drawing.Point.Y%2A></xref:System.Drawing.Point.X%2A></xref:System.Windows.Forms.Control.Width%2A></xref:System.Windows.Forms.Control.Height%2A>。 ただしで渡されるすべての値が受け入れられ、コントロールに適用します。       `specified`パラメーターは、コントロールの要素を表す<xref:System.Windows.Forms.Control.Bounds%2A>アプリケーションで変更されました</xref:System.Windows.Forms.Control.Bounds%2A>。 たとえば、変更する場合、 <xref:System.Windows.Forms.Control.Size%2A>、コントロールの`specified`パラメーター値が、 `Size` <xref:System.Windows.Forms.BoundsSpecified></xref:System.Windows.Forms.BoundsSpecified>値</xref:System.Windows.Forms.Control.Size%2A>。 ただし場合、<xref:System.Windows.Forms.Control.Size%2A>への応答の調整、<xref:System.Windows.Forms.Control.Dock%2A>プロパティが設定されている、`specified`パラメーター値が、 `None` <xref:System.Windows.Forms.BoundsSpecified></xref:System.Windows.Forms.BoundsSpecified>値</xref:System.Windows.Forms.Control.Dock%2A></xref:System.Windows.Forms.Control.Size%2A>。"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Left*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Left*>。"
    - id: y
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Top*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Top*>。"
    - id: width
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Width*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Width*>。"
    - id: height
      type: System.Int32
      description: "使用されません。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref>値。"
  overload: System.Windows.Forms.TextBoxBase.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  id: ShortcutsEnabled
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
  fullName: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または定義されたショートカットが有効になっているかどうかを示す値を設定します。"
  remarks: "ShortcutsEnabled プロパティを使用して有効にするにまたは、次のショートカット キーの組み合わせとコントロールのショートカット メニューを無効にします。 - CTRL + Z - CTRL + E - CTRL + C と ctrl キーを押しながら Y - CTRL + X - CTRL + BACKSPACE - ctrl キーを押しながら V - CTRL + DELETE - Ctrl + a - SHIFT + DELETE - CTRL + L - SHIFT + INSERT - CTRL + R 他のショートカット キーを指定するには、このプロパティをオーバーライドすることができます。"
  syntax:
    content: public virtual bool ShortcutsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ショートカットを有効にするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Text
  id: Text
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Text
  nameWithType: TextBoxBase.Text
  fullName: System.Windows.Forms.TextBoxBase.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはテキスト ボックスに、現在のテキストを設定します。"
  remarks: "テキスト ボックスに複数行のテキストを表示するには、設定、<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>プロパティを`true`</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>。 読み取りや複数行テキスト ボックスのテキストを設定を使用して、<xref:System.Windows.Forms.TextBoxBase.Lines%2A>プロパティ</xref:System.Windows.Forms.TextBoxBase.Lines%2A>。 入力できるテキストの量、<xref:System.Windows.Forms.RichTextBox>コントロールが使用可能なシステム メモリによってのみ制限されます</xref:System.Windows.Forms.RichTextBox>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_187_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_187_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_187_1.vb)]"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "コントロールに表示されるテキストです。"
  overload: System.Windows.Forms.TextBoxBase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.TextLength
  id: TextLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: TextLength
  nameWithType: TextBoxBase.TextLength
  fullName: System.Windows.Forms.TextBoxBase.TextLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールのテキストの長さを取得します。"
  remarks: "文字の合計数の知識が必要なコントロールのテキスト内のテキストの特定の文字列の検索などのタスクの文字列の文字数を調べて、このプロパティを使用することができます。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the TextLength property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n [!code-cpp[TextBoxBase.AppendText#1](~/add/codesnippet/cpp/p-system.windows.forms.t_275_1.cpp)]\n [!code-cs[TextBoxBase.AppendText#1](~/add/codesnippet/csharp/p-system.windows.forms.t_275_1.cs)]\n [!code-vb[TextBoxBase.AppendText#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_275_1.vb)]"
  syntax:
    content: public virtual int TextLength { get; }
    return:
      type: System.Int32
      description: "コントロールのテキストに含まれる文字の数。"
  overload: System.Windows.Forms.TextBoxBase.TextLength*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ToString
  id: ToString
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ToString()
  nameWithType: TextBoxBase.ToString()
  fullName: System.Windows.Forms.TextBoxBase.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表す文字列を返します、 <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref>コントロール。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在を表す文字列<xref href=&quot;System.Windows.Forms.TextBoxBase&quot;></xref>です。 型を格納する文字列、および<xref href=&quot;System.Windows.Forms.TextBoxBase&quot;></xref>コントロールのプロパティです。"
  overload: System.Windows.Forms.TextBoxBase.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Undo
  id: Undo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Undo()
  nameWithType: TextBoxBase.Undo()
  fullName: System.Windows.Forms.TextBoxBase.Undo()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "テキスト ボックスの最後の編集操作を元に戻します。"
  remarks: "このメソッドには、最後は元に戻します**クリップボード**テキストを変更する場合は、テキスト ボックス コントロールで実行される操作または、<xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>プロパティから返される`true`</xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>。      > [!NOTE] > で元に戻す、メソッドは機能しません、<xref:System.Windows.Forms.Control.KeyPress>または<xref:System.Windows.Forms.Control.TextChanged>イベント</xref:System.Windows.Forms.Control.TextChanged></xref:System.Windows.Forms.Control.KeyPress>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_21_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_21_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_21_1.cpp)]"
  syntax:
    content: public void Undo ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Undo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: TextBoxBase.WndProc(Message)
  fullName: System.Windows.Forms.TextBoxBase.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows メッセージを処理します。"
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>を処理します。"
  overload: System.Windows.Forms.TextBoxBase.WndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.WordWrap
  id: WordWrap
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
  fullName: System.Windows.Forms.TextBoxBase.WordWrap
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "複数行テキスト ボックス コントロールは、自動的に、必要な場合に、次の行の先頭に折り返さがあるかどうかを示します。"
  remarks: "このプロパティ設定されている場合`true`、無関係に水平スクロール バーは表示されません、<xref:System.Windows.Forms.TextBox.ScrollBars%2A>プロパティの設定</xref:System.Windows.Forms.TextBox.ScrollBars%2A>。      > [!NOTE] >、派生クラスで<xref:System.Windows.Forms.TextBox>、しない限り、このプロパティのプロパティの設定に関係なくコントロール内のテキストを折り返す常には、<xref:System.Windows.Forms.TextBox.TextAlign%2A>プロパティに設定されている`HorizontalAlignment.Left`</xref:System.Windows.Forms.TextBox.TextAlign%2A></xref:System.Windows.Forms.TextBox>。"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and WordWrap properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_266_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_266_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_266_1.vb)]"
  syntax:
    content: public bool WordWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、複数行テキスト ボックス コントロールが折り返されるです。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>テキスト ボックス コントロールに自動的に水平方向にスクロール過去のコントロールの右端と入力します。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.TextBoxBase.WordWrap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.Control
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTab
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTabChanged
  nameWithType: TextBoxBase.AcceptsTabChanged
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AppendText(String)
  nameWithType: TextBoxBase.AppendText(String)
  fullName: System.Windows.Forms.TextBoxBase.AppendText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TextBoxBase.AutoSize
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
  fullName: System.Windows.Forms.TextBoxBase.AutoSize
- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSizeChanged
  nameWithType: TextBoxBase.AutoSizeChanged
  fullName: System.Windows.Forms.TextBoxBase.AutoSizeChanged
- uid: System.Windows.Forms.TextBoxBase.BackColor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackColor
  nameWithType: TextBoxBase.BackColor
  fullName: System.Windows.Forms.TextBoxBase.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: TextBoxBase.BackgroundImageChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: TextBoxBase.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.TextBoxBase.BorderStyle
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
  fullName: System.Windows.Forms.TextBoxBase.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyleChanged
  nameWithType: TextBoxBase.BorderStyleChanged
  fullName: System.Windows.Forms.TextBoxBase.BorderStyleChanged
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
  fullName: System.Windows.Forms.TextBoxBase.CanEnableIme
- uid: System.Windows.Forms.TextBoxBase.CanUndo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
  fullName: System.Windows.Forms.TextBoxBase.CanUndo
- uid: System.Windows.Forms.TextBoxBase.Clear
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Clear()
  nameWithType: TextBoxBase.Clear()
  fullName: System.Windows.Forms.TextBoxBase.Clear()
- uid: System.Windows.Forms.TextBoxBase.ClearUndo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ClearUndo()
  nameWithType: TextBoxBase.ClearUndo()
  fullName: System.Windows.Forms.TextBoxBase.ClearUndo()
- uid: System.Windows.Forms.TextBoxBase.Click
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Click
  nameWithType: TextBoxBase.Click
  fullName: System.Windows.Forms.TextBoxBase.Click
- uid: System.Windows.Forms.TextBoxBase.Copy
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Copy()
  nameWithType: TextBoxBase.Copy()
  fullName: System.Windows.Forms.TextBoxBase.Copy()
- uid: System.Windows.Forms.TextBoxBase.CreateHandle
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateHandle()
  nameWithType: TextBoxBase.CreateHandle()
  fullName: System.Windows.Forms.TextBoxBase.CreateHandle()
- uid: System.Windows.Forms.TextBoxBase.CreateParams
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
  fullName: System.Windows.Forms.TextBoxBase.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.TextBoxBase.Cut
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Cut()
  nameWithType: TextBoxBase.Cut()
  fullName: System.Windows.Forms.TextBoxBase.Cut()
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
  fullName: System.Windows.Forms.TextBoxBase.DefaultCursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.TextBoxBase.DefaultSize
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
  fullName: System.Windows.Forms.TextBoxBase.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.TextBoxBase.DeselectAll
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DeselectAll()
  nameWithType: TextBoxBase.DeselectAll()
  fullName: System.Windows.Forms.TextBoxBase.DeselectAll()
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
  fullName: System.Windows.Forms.TextBoxBase.DoubleBuffered
- uid: System.Windows.Forms.TextBoxBase.ForeColor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
  fullName: System.Windows.Forms.TextBoxBase.ForeColor
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharFromPosition(Point)
  nameWithType: TextBoxBase.GetCharFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharFromPosition(Point)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharIndexFromPosition(Point)
  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(Point)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexFromLine(Int32)
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(Int32)
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexOfCurrentLine()
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine()
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetLineFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(Int32)
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetPositionFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(Int32)
- uid: System.Windows.Forms.TextBoxBase.HideSelection
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
  fullName: System.Windows.Forms.TextBoxBase.HideSelection
- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelectionChanged
  nameWithType: TextBoxBase.HideSelectionChanged
  fullName: System.Windows.Forms.TextBoxBase.HideSelectionChanged
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
  fullName: System.Windows.Forms.TextBoxBase.ImeModeBase
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: IsInputKey(Keys)
  nameWithType: TextBoxBase.IsInputKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.IsInputKey(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.TextBoxBase.Lines
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Lines
  nameWithType: TextBoxBase.Lines
  fullName: System.Windows.Forms.TextBoxBase.Lines
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TextBoxBase.MaxLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
  fullName: System.Windows.Forms.TextBoxBase.MaxLength
- uid: System.Windows.Forms.TextBoxBase.Modified
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Modified
  nameWithType: TextBoxBase.Modified
  fullName: System.Windows.Forms.TextBoxBase.Modified
- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ModifiedChanged
  nameWithType: TextBoxBase.ModifiedChanged
  fullName: System.Windows.Forms.TextBoxBase.ModifiedChanged
- uid: System.Windows.Forms.TextBoxBase.MouseClick
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MouseClick
  nameWithType: TextBoxBase.MouseClick
  fullName: System.Windows.Forms.TextBoxBase.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.TextBoxBase.Multiline
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Multiline
  nameWithType: TextBoxBase.Multiline
  fullName: System.Windows.Forms.TextBoxBase.Multiline
- uid: System.Windows.Forms.TextBoxBase.MultilineChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MultilineChanged
  nameWithType: TextBoxBase.MultilineChanged
  fullName: System.Windows.Forms.TextBoxBase.MultilineChanged
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnAcceptsTabChanged(EventArgs)
  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: TextBoxBase.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHideSelectionChanged(EventArgs)
  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnModifiedChanged(EventArgs)
  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnModifiedChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMouseUp(MouseEventArgs)
  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMouseUp(MouseEventArgs)
- uid: System.Windows.Forms.MouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMultilineChanged(EventArgs)
  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMultilineChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnPaddingChanged(EventArgs)
  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnPaddingChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: TextBoxBase.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.Padding
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Padding
  nameWithType: TextBoxBase.Padding
  fullName: System.Windows.Forms.TextBoxBase.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.TextBoxBase.PaddingChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PaddingChanged
  nameWithType: TextBoxBase.PaddingChanged
  fullName: System.Windows.Forms.TextBoxBase.PaddingChanged
- uid: System.Windows.Forms.TextBoxBase.Paint
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paint
  nameWithType: TextBoxBase.Paint
  fullName: System.Windows.Forms.TextBoxBase.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.TextBoxBase.Paste
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paste()
  nameWithType: TextBoxBase.Paste()
  fullName: System.Windows.Forms.TextBoxBase.Paste()
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
  fullName: System.Windows.Forms.TextBoxBase.PreferredHeight
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: TextBoxBase.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: TextBoxBase.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.TextBoxBase.ReadOnly
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
  fullName: System.Windows.Forms.TextBoxBase.ReadOnly
- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnlyChanged
  nameWithType: TextBoxBase.ReadOnlyChanged
  fullName: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ScrollToCaret()
  nameWithType: TextBoxBase.ScrollToCaret()
  fullName: System.Windows.Forms.TextBoxBase.ScrollToCaret()
- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Select(Int32,Int32)
  nameWithType: TextBoxBase.Select(Int32,Int32)
  fullName: System.Windows.Forms.TextBoxBase.Select(Int32,Int32)
- uid: System.Windows.Forms.TextBoxBase.SelectAll
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectAll()
  nameWithType: TextBoxBase.SelectAll()
  fullName: System.Windows.Forms.TextBoxBase.SelectAll()
- uid: System.Windows.Forms.TextBoxBase.SelectedText
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
  fullName: System.Windows.Forms.TextBoxBase.SelectedText
- uid: System.Windows.Forms.TextBoxBase.SelectionLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
  fullName: System.Windows.Forms.TextBoxBase.SelectionLength
- uid: System.Windows.Forms.TextBoxBase.SelectionStart
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
  fullName: System.Windows.Forms.TextBoxBase.SelectionStart
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
  fullName: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
- uid: System.Windows.Forms.TextBoxBase.Text
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Text
  nameWithType: TextBoxBase.Text
  fullName: System.Windows.Forms.TextBoxBase.Text
- uid: System.Windows.Forms.TextBoxBase.TextLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: TextLength
  nameWithType: TextBoxBase.TextLength
  fullName: System.Windows.Forms.TextBoxBase.TextLength
- uid: System.Windows.Forms.TextBoxBase.ToString
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ToString()
  nameWithType: TextBoxBase.ToString()
  fullName: System.Windows.Forms.TextBoxBase.ToString()
- uid: System.Windows.Forms.TextBoxBase.Undo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Undo()
  nameWithType: TextBoxBase.Undo()
  fullName: System.Windows.Forms.TextBoxBase.Undo()
- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WndProc(Message)
  nameWithType: TextBoxBase.WndProc(Message)
  fullName: System.Windows.Forms.TextBoxBase.WndProc(Message)
- uid: System.Windows.Forms.TextBoxBase.WordWrap
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
  fullName: System.Windows.Forms.TextBoxBase.WordWrap
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
- uid: System.Windows.Forms.TextBoxBase.AppendText*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AppendText
  nameWithType: TextBoxBase.AppendText
- uid: System.Windows.Forms.TextBoxBase.AutoSize*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
- uid: System.Windows.Forms.TextBoxBase.BackColor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackColor
  nameWithType: TextBoxBase.BackColor
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
- uid: System.Windows.Forms.TextBoxBase.BorderStyle*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
- uid: System.Windows.Forms.TextBoxBase.CanUndo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
- uid: System.Windows.Forms.TextBoxBase.Clear*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Clear
  nameWithType: TextBoxBase.Clear
- uid: System.Windows.Forms.TextBoxBase.ClearUndo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ClearUndo
  nameWithType: TextBoxBase.ClearUndo
- uid: System.Windows.Forms.TextBoxBase.Copy*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Copy
  nameWithType: TextBoxBase.Copy
- uid: System.Windows.Forms.TextBoxBase.CreateHandle*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateHandle
  nameWithType: TextBoxBase.CreateHandle
- uid: System.Windows.Forms.TextBoxBase.CreateParams*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
- uid: System.Windows.Forms.TextBoxBase.Cut*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Cut
  nameWithType: TextBoxBase.Cut
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
- uid: System.Windows.Forms.TextBoxBase.DefaultSize*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
- uid: System.Windows.Forms.TextBoxBase.DeselectAll*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DeselectAll
  nameWithType: TextBoxBase.DeselectAll
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
- uid: System.Windows.Forms.TextBoxBase.ForeColor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharFromPosition
  nameWithType: TextBoxBase.GetCharFromPosition
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharIndexFromPosition
  nameWithType: TextBoxBase.GetCharIndexFromPosition
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexFromLine
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexOfCurrentLine
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetLineFromCharIndex
  nameWithType: TextBoxBase.GetLineFromCharIndex
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetPositionFromCharIndex
  nameWithType: TextBoxBase.GetPositionFromCharIndex
- uid: System.Windows.Forms.TextBoxBase.HideSelection*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
- uid: System.Windows.Forms.TextBoxBase.IsInputKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: IsInputKey
  nameWithType: TextBoxBase.IsInputKey
- uid: System.Windows.Forms.TextBoxBase.Lines*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Lines
  nameWithType: TextBoxBase.Lines
- uid: System.Windows.Forms.TextBoxBase.MaxLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
- uid: System.Windows.Forms.TextBoxBase.Modified*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Modified
  nameWithType: TextBoxBase.Modified
- uid: System.Windows.Forms.TextBoxBase.Multiline*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Multiline
  nameWithType: TextBoxBase.Multiline
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnAcceptsTabChanged
  nameWithType: TextBoxBase.OnAcceptsTabChanged
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnBorderStyleChanged
  nameWithType: TextBoxBase.OnBorderStyleChanged
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnFontChanged
  nameWithType: TextBoxBase.OnFontChanged
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleCreated
  nameWithType: TextBoxBase.OnHandleCreated
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: TextBoxBase.OnHandleDestroyed
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHideSelectionChanged
  nameWithType: TextBoxBase.OnHideSelectionChanged
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnModifiedChanged
  nameWithType: TextBoxBase.OnModifiedChanged
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMouseUp
  nameWithType: TextBoxBase.OnMouseUp
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMultilineChanged
  nameWithType: TextBoxBase.OnMultilineChanged
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnPaddingChanged
  nameWithType: TextBoxBase.OnPaddingChanged
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnReadOnlyChanged
  nameWithType: TextBoxBase.OnReadOnlyChanged
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnTextChanged
  nameWithType: TextBoxBase.OnTextChanged
- uid: System.Windows.Forms.TextBoxBase.Padding*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Padding
  nameWithType: TextBoxBase.Padding
- uid: System.Windows.Forms.TextBoxBase.Paste*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paste
  nameWithType: TextBoxBase.Paste
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessCmdKey
  nameWithType: TextBoxBase.ProcessCmdKey
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessDialogKey
  nameWithType: TextBoxBase.ProcessDialogKey
- uid: System.Windows.Forms.TextBoxBase.ReadOnly*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ScrollToCaret
  nameWithType: TextBoxBase.ScrollToCaret
- uid: System.Windows.Forms.TextBoxBase.Select*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Select
  nameWithType: TextBoxBase.Select
- uid: System.Windows.Forms.TextBoxBase.SelectAll*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectAll
  nameWithType: TextBoxBase.SelectAll
- uid: System.Windows.Forms.TextBoxBase.SelectedText*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
- uid: System.Windows.Forms.TextBoxBase.SelectionLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
- uid: System.Windows.Forms.TextBoxBase.SelectionStart*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SetBoundsCore
  nameWithType: TextBoxBase.SetBoundsCore
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
- uid: System.Windows.Forms.TextBoxBase.Text*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Text
  nameWithType: TextBoxBase.Text
- uid: System.Windows.Forms.TextBoxBase.TextLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: TextLength
  nameWithType: TextBoxBase.TextLength
- uid: System.Windows.Forms.TextBoxBase.ToString*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ToString
  nameWithType: TextBoxBase.ToString
- uid: System.Windows.Forms.TextBoxBase.Undo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Undo
  nameWithType: TextBoxBase.Undo
- uid: System.Windows.Forms.TextBoxBase.WndProc*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WndProc
  nameWithType: TextBoxBase.WndProc
- uid: System.Windows.Forms.TextBoxBase.WordWrap*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
