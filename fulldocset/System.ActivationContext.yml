### YamlMime:ManagedReference
items:
- uid: System.ActivationContext
  id: ActivationContext
  children:
  - System.ActivationContext.ApplicationManifestBytes
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  - System.ActivationContext.DeploymentManifestBytes
  - System.ActivationContext.Dispose
  - System.ActivationContext.Finalize
  - System.ActivationContext.Form
  - System.ActivationContext.Identity
  - System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
  type: Class
  summary: "現在のアプリケーションのアクティベーション コンテキストを識別します。 このクラスは継承できません。"
  remarks: "ActivationContext クラスに含まれる、<xref:System.ApplicationIdentity>し、アプリケーション マニフェストを内部専用のアクセスを提供します</xref:System.ApplicationIdentity>。 アクティブ化コンテキストは、ドメイン ポリシーを設定し、アプリケーション ベースのセキュリティ モデルを提供するマニフェスト ベースのアクティブ化時に使用されます。 詳細については、<xref:System.Security.Policy.ApplicationSecurityManager>クラス</xref:System.Security.Policy.ApplicationSecurityManager>を参照してください。      > [!IMPORTANT] > この型は、<xref:System.IDisposable>インターフェイス</xref:System.IDisposable>。 型を使用してが完了したらを直接的または間接的にその破棄する必要があります。 型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロック</xref:System.IDisposable.Dispose%2A>。 直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。 詳細についてを参照してください&quot;を使用して、オブジェクトを実装する IDisposable&quot;、<xref:System.IDisposable>インターフェイスに関するトピック</xref:System.IDisposable>。"
  example:
  - "The following code example demonstrates the use of an ActivationContext object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. For correct results, execute this code example as a manifest-based application.  \n  \n [!code-vb[System.ActivationContext#1](~/add/codesnippet/visualbasic/t-system.activationcontext_1.vb)]\n [!code-cs[System.ActivationContext#1](~/add/codesnippet/csharp/t-system.activationcontext_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ActivationContext.ApplicationManifestBytes
  id: ApplicationManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "現在のアプリケーションの ClickOnce アプリケーション マニフェストを取得します。"
  remarks: "アクティブ化コンテキストが場合<xref:System.ActivationContext.ContextForm>、アプリケーションがインストールされていないことを意味 ClickOnce ストアに配置マニフェストは、ダウンロードの一時フォルダーから読み取ら</xref:System.ActivationContext.ContextForm>。 アクティブ化コンテキストが場合<xref:System.ActivationContext.ContextForm>、ストア、配置マニフェストは、ClickOnce でアプリケーションがインストールされていることを意味から読み取られた ClickOnce ストア</xref:System.ActivationContext.ContextForm>。 配置マニフェストの詳細については、次を参照してください。 [ClickOnce 配置マニフェスト](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public byte[] ApplicationManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "これに関連付けられているアプリケーションの ClickOnce アプリケーション マニフェストを格納するバイト配列<xref href=&quot;System.ActivationContext&quot;></xref>です。"
  overload: System.ActivationContext.ApplicationManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  id: CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ActivationContext&quot;> </xref>クラスの指定したアプリケーション id を使用します。"
  remarks: "CreatePartialActivationContext メソッドは、新しいアクティブ化コンテキストを作成する内部のコンス トラクターを呼び出します。 実装、<xref:System.ActivationContext>は .NET Framework version 2.0 内のクラスがいないストアに完全にインストール、またはフォルダーに完全に含まれているアプリケーション用に設計された</xref:System.ActivationContext>。 このメソッドは、パブリック コンス トラクターが完全なアクティベーション コンテキストを提供する以降のリリースとの下位互換性を提供します。"
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "アプリケーションを識別するオブジェクト。"
    return:
      type: System.ActivationContext
      description: "指定したアプリケーション id を持つオブジェクト。"
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "配置またはアプリケーション id が指定されていない<code> identity</code>です。"
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  id: CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ActivationContext&quot;> </xref>クラスの指定したアプリケーション id とマニフェスト パスの配列を使用します。"
  remarks: "CreatePartialActivationContext メソッドは、新しいアクティブ化コンテキストを作成する内部のコンス トラクターを呼び出します。 実装、<xref:System.ActivationContext>は .NET Framework version 2.0 内のクラスがいないストアに完全にインストール、またはフォルダーに完全に含まれているアプリケーション用に設計された</xref:System.ActivationContext>。 このメソッドは、パブリック コンス トラクターが完全なアクティベーション コンテキストを提供する以降のリリースとの下位互換性を提供します。"
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "アプリケーションを識別するオブジェクト。"
    - id: manifestPaths
      type: System.String[]
      description: "アプリケーションのマニフェストのパスの文字列配列。"
    return:
      type: System.ActivationContext
      description: "指定したアプリケーション id とマニフェストのパスの配列を持つオブジェクト。"
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manifestPaths</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "配置またはアプリケーション id が指定されていない<code> identity</code>です。       - または - <code> identity </code>マニフェストの id と一致しません。       - または - <code> identity </code>マニフェストのパスと同じ数のコンポーネントがありません。"
  platform:
  - net462
- uid: System.ActivationContext.DeploymentManifestBytes
  id: DeploymentManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "現在のアプリケーションの ClickOnce 配置マニフェストを取得します。"
  remarks: "アクティブ化コンテキストが場合<xref:System.ActivationContext.ContextForm>、アプリケーションがインストールされていないことを意味 ClickOnce ストアに配置マニフェストは、ダウンロードの一時フォルダーから読み取ら</xref:System.ActivationContext.ContextForm>。 アクティブ化コンテキストが場合<xref:System.ActivationContext.ContextForm>、ストア、配置マニフェストは、ClickOnce でアプリケーションがインストールされていることを意味から読み取られた ClickOnce ストア</xref:System.ActivationContext.ContextForm>。 配置マニフェストの詳細については、次を参照してください。 [ClickOnce 配置マニフェスト](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public byte[] DeploymentManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "これに関連付けられているアプリケーションの ClickOnce 配置マニフェストを格納するバイト配列<xref href=&quot;System.ActivationContext&quot;></xref>です。"
  overload: System.ActivationContext.DeploymentManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Dispose
  id: Dispose
  parent: System.ActivationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ActivationContext&quot;></xref>です。"
  remarks: "<xref:System.ActivationContext>。</xref:System.ActivationContext>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.ActivationContext>使用不可の状態</xref:System.ActivationContext>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.ActivationContext>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ActivationContext>占有されていた</xref:System.ActivationContext></xref:System.ActivationContext>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.ActivationContext></xref:System.ActivationContext>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.ActivationContext>オブジェクトの`Finalize`メソッド</xref:System.ActivationContext>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ActivationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Finalize
  id: Finalize
  parent: System.ActivationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "により、 <xref href=&quot;System.ActivationContext&quot;> </xref>リソースを解放し、前に他のクリーンアップ操作を実行しようとするオブジェクト、 <xref href=&quot;System.ActivationContext&quot;> </xref>がガベージ コレクションによって回収されます。"
  syntax:
    content: ~ActivationContext ();
    parameters: []
  overload: System.ActivationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Form
  id: Form
  parent: System.ActivationContext
  langs:
  - csharp
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "現在のアプリケーションのフォーム、またはストアのコンテキストを取得します。"
  remarks: "マニフェスト ベースのアプリケーションがインストールされていない ClickOnce ストアにします。 アプリケーションのマニフェストでアクティブ化されるアプリケーションの実行など、ストアに含まれていない[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]、 <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm>として分類されます ストアに含まれているアプリケーション<xref:System.ActivationContext.ContextForm>。</xref:System.ActivationContext.ContextForm>として分類されます。"
  syntax:
    content: public ActivationContext.ContextForm Form { get; }
    return:
      type: System.ActivationContext.ContextForm
      description: "列挙値の&1; つ。"
  overload: System.ActivationContext.Form*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Identity
  id: Identity
  parent: System.ActivationContext
  langs:
  - csharp
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "現在のアプリケーションのアプリケーション id を取得します。"
  remarks: "<xref:System.ApplicationIdentity>アプリケーションの完全な名前と場所によって、アプリケーションを一意に識別します</xref:System.ApplicationIdentity>。"
  example:
  - "The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  \n  \n [!code-vb[System.ActivationContext#2](~/add/codesnippet/visualbasic/p-system.activationconte_1.vb)]\n [!code-cs[System.ActivationContext#2](~/add/codesnippet/csharp/p-system.activationconte_1.cs)]"
  syntax:
    content: public ApplicationIdentity Identity { get; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>オブジェクトを現在のアプリケーションを識別します。"
  overload: System.ActivationContext.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.ActivationContext
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化するために必要なデータを使用します。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "データを設定するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "このシリアル化の構造体。"
  overload: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ActivationContext.ApplicationManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.DeploymentManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose
  parent: System.ActivationContext
  isExternal: false
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
- uid: System.ActivationContext.Finalize
  parent: System.ActivationContext
  isExternal: false
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
- uid: System.ActivationContext.Form
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
- uid: System.ActivationContext.ContextForm
  parent: System
  isExternal: false
  name: ActivationContext+ContextForm
  nameWithType: ActivationContext+ContextForm
  fullName: System.ActivationContext+ContextForm
- uid: System.ActivationContext.Identity
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ActivationContext.ApplicationManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
- uid: System.ActivationContext.CreatePartialActivationContext*
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext
  nameWithType: ActivationContext.CreatePartialActivationContext
- uid: System.ActivationContext.DeploymentManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose*
  parent: System.ActivationContext
  isExternal: false
  name: Dispose
  nameWithType: ActivationContext.Dispose
- uid: System.ActivationContext.Finalize*
  parent: System.ActivationContext
  isExternal: false
  name: Finalize
  nameWithType: ActivationContext.Finalize
- uid: System.ActivationContext.Form*
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
- uid: System.ActivationContext.Identity*
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData
