### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.ControlFilterExpression
  id: ControlFilterExpression
  children:
  - System.Web.DynamicData.ControlFilterExpression.#ctor
  - System.Web.DynamicData.ControlFilterExpression.Column
  - System.Web.DynamicData.ControlFilterExpression.ControlID
  - System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  - System.Web.DynamicData.ControlFilterExpression.SaveViewState
  - System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.DynamicData.ControlFilterExpression.TrackViewState
  langs:
  - csharp
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression
  fullName: System.Web.DynamicData.ControlFilterExpression
  type: Class
  summary: "データ バインド コントロールで選択されている項目のデータ キーを使用して、データベース クエリを変更します。"
  remarks: "ControlFilterExpression クラスなど、ページに次の&2; つのデータ バインド コントロールが含まれている場合に使用するように設計された、<xref:System.Web.UI.WebControls.GridView>コントロールと<xref:System.Web.UI.WebControls.ListView>コントロール</xref:System.Web.UI.WebControls.ListView></xref:System.Web.UI.WebControls.GridView>。 1 つのコントロールは、データ キー (行) が選択されている、ソースです。 他のコントロールは、選択したデータ キーに基づいて、データが表示される対象です。 定義されているクエリを実行するデータ ソース コントロールによって、ターゲット データが取得した、<xref:System.Web.UI.WebControls.QueryExtender>クラスといるは、選択したデータ キーを使用して構築されています</xref:System.Web.UI.WebControls.QueryExtender>。       クラスを使用する、ControlFilterExpression ページで、次の手順:-追加、<xref:System.Web.UI.WebControls.QueryExtender>コントロールをページ</xref:System.Web.UI.WebControls.QueryExtender>。      -設定、`TargetControlID`のプロパティ、<xref:System.Web.UI.WebControls.QueryExtender>ターゲット データ ソース コントロールの ID を制御します</xref:System.Web.UI.WebControls.QueryExtender>。      ControlFilterExpression でインスタンスを追加、<xref:System.Web.UI.WebControls.QueryExtender>コントロール</xref:System.Web.UI.WebControls.QueryExtender>。      -設定、`ControlID`元のデータ バインド コントロールを ControlFilterExpression で要素のプロパティです。"
  example:
  - "The following example shows how to use the ControlFilterExpression class to reference a source data-bound control, where the data key is selected. The <xref:System.Web.UI.WebControls.QueryExtender> control points to a target data source control that obtains data that is filtered by using the selected data key. In the example, the source data-bound control references a parent table and the target data-bound control references a child table.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"SourceGridViewID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref>クラスです。"
  syntax:
    content: public ControlFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  id: Column
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定に基づくクエリでは、列の名前。"
  remarks: "このプロパティが空の場合、<xref:System.Web.DynamicData.ControlFilterExpression>コントロールは、現在のテーブルの主キーとして選択されたデータ キーを処理します</xref:System.Web.DynamicData.ControlFilterExpression>。 これは、ソースとターゲットのデータ バインド コントロールと同じテーブルからデータを操作で詳細を一覧表示のシナリオに役立ちます。       プロパティの値を割り当てた場合、<xref:System.Web.DynamicData.ControlFilterExpression>コントロール データ キーを外部キーとして扱われます</xref:System.Web.DynamicData.ControlFilterExpression>。 このプロパティに割り当てられている値では、対象のデータ バインド コントロールに表示される列の名前になります。 これは、対象のデータ バインド コントロールは、子テーブルからデータを操作しの親テーブルからデータ ソースのデータ バインド コントロールを操作は、親-子シナリオで役立ちます。"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the column that the filter applies to.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string Column { get; set; }
    return:
      type: System.String
      description: "基づくクエリでは、列の名前。"
  overload: System.Web.DynamicData.ControlFilterExpression.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または元のデータ バインド コントロールの ID を設定します。"
  remarks: "ControlID プロパティは、元のデータのキーが選択されている元のデータ バインド コントロールを識別します。 によって、選択したデータ キーを使用して、<xref:System.Web.DynamicData.ControlFilterExpression>クエリを作成するコントロール</xref:System.Web.DynamicData.ControlFilterExpression>。"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the ID of the source data-bound control.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "元のデータ バインド コントロールの ID。"
  overload: System.Web.DynamicData.ControlFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "変更するデータ ソースのクエリを取得します。"
  remarks: "GetQueryable メソッドでは、元のデータ バインド コントロールの選択したデータ キーに基づくクエリを変更します。"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "変更するデータ ソース クエリ。"
    return:
      type: System.Linq.IQueryable
      description: "これによって変更されたデータ ソース クエリを表すオブジェクト<xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref>インスタンス。"
  overload: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "以前に保存したビューステートを復元します。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "復元する状態。"
  overload: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  id: SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "ページがサーバーにポストされた時間以降のビューステートへの変更を保存します。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "状態を表示する変更を含むオブジェクト。 このメソッドが戻るかどうかは、オブジェクトに関連付けられているビュー ステートがない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "データ ソース情報をフィルター式を初期化します。"
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "これで、コントロール、 <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref>ようなインスタンスが含まれる、 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref>コントロール。"
    - id: context
      type: System.Web.HttpContext
      description: "アプリケーションの現在<xref href=&quot;System.Web.HttpContext&quot;></xref>オブジェクト。"
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "ターゲット データ ソース、 <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref>インスタンス。 場合、 <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref>にインスタンスが含まれている、 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref>コントロール、このパラメーターは、データ ソースを<xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref>コントロールが参照するには"
  overload: System.Web.DynamicData.ControlFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  id: TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "により、 <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref>コントロールのビュー状態のオブジェクトに保存できるように、そのビュー ステートに変更を追跡して、同じページに対する要求間で永続化するオブジェクト。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression.ControlFilterExpression
- uid: System.Web.DynamicData.ControlFilterExpression.Column*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: ControlFilterExpression.GetQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState
  nameWithType: ControlFilterExpression.LoadViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState
  nameWithType: ControlFilterExpression.SaveViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: ControlFilterExpression.SetContext
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState
  nameWithType: ControlFilterExpression.TrackViewState
