### YamlMime:ManagedReference
items:
- uid: System.Messaging.Trustee
  id: Trustee
  children:
  - System.Messaging.Trustee.#ctor
  - System.Messaging.Trustee.#ctor(System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  - System.Messaging.Trustee.Name
  - System.Messaging.Trustee.SystemName
  - System.Messaging.Trustee.TrusteeType
  langs:
  - csharp
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
  type: Class
  summary: "ユーザー アカウント、グループ アカウント、またはアクセス制御エントリを適用するログオン セッションを指定します。"
  remarks: "トラスティは、ユーザーに許可またはアクセス制御エントリを作成するときに、アクセス権を拒否するエンティティです。 設定、<xref:System.Messaging.Trustee.TrusteeType%2A>メンバー (直接またはを使用して、<xref:System.Messaging.Trustee.%23ctor%2A>コンス トラクター) をトラスティは、ユーザー、コンピューター、またはその他の型かどうかを指定します</xref:System.Messaging.Trustee.%23ctor%2A></xref:System.Messaging.Trustee.TrusteeType%2A>。 トラスティのアクセス許可を設定する前に trustee の種類を指定しない場合、型は既定で`Unknown`です。       値を指定する必要があります、<xref:System.Messaging.Trustee.Name%2A>トラスティを使用してアクセス許可を設定する前に、プロパティ</xref:System.Messaging.Trustee.Name%2A>。 <xref:System.Messaging.Trustee.Name%2A>新しいアクセス権の割り当てられたユーザー、グループ、またはコンピューター アカウントの名前が含まれています</xref:System.Messaging.Trustee.Name%2A>。 必要に応じて、設定することができます、<xref:System.Messaging.Trustee.SystemName%2A>プロパティを識別する、トラスティ アカウントは、参照が、名前のセキュリティ識別子を解決するのには、システムの名前</xref:System.Messaging.Trustee.SystemName%2A>。 値を指定しない場合<xref:System.Messaging.Trustee.SystemName%2A>、ローカル コンピューターは、アカウント名を検索します</xref:System.Messaging.Trustee.SystemName%2A>。"
  syntax:
    content: public class Trustee
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor
  id: '#ctor'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.Trustee&quot;> </xref>クラスに対する読み取り/書き込みプロパティの設定がない場合。"
  remarks: "値を指定する必要があります、<xref:System.Messaging.Trustee.Name%2A>プロパティを使用する前に、<xref:System.Messaging.Trustee>インスタンス アクセス許可を設定します</xref:System.Messaging.Trustee></xref:System.Messaging.Trustee.Name%2A>。 必要に応じて、設定することができます、<xref:System.Messaging.Trustee.SystemName%2A>プロパティを識別する、トラスティ アカウントは、参照が、名前のセキュリティ識別子を解決するのには、システムの名前</xref:System.Messaging.Trustee.SystemName%2A>。 値を指定しない場合<xref:System.Messaging.Trustee.SystemName%2A>、ローカル コンピューターは、アカウント名を検索します</xref:System.Messaging.Trustee.SystemName%2A>。"
  syntax:
    content: public Trustee ();
    parameters: []
  overload: System.Messaging.Trustee.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.Trustee&quot;> </xref>型のクラス<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>、設定、 <> </> *> プロパティを指定すると、値、および<> *> に<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  remarks: "トラスティ アカウントを設定し、ローカル コンピューターが、アカウントの検索に使用するように指定するには、このオーバー ロードを使用します。 <xref:System.Messaging.Trustee.TrusteeType%2A>プロパティに設定されている`Unknown`のこのインスタンスを使用する前にその値を変更することができますが、<xref:System.Messaging.Trustee>アクセス許可を設定します</xref:System.Messaging.Trustee></xref:System.Messaging.Trustee.TrusteeType%2A>。"
  syntax:
    content: public Trustee (string name);
    parameters:
    - id: name
      type: System.String
      description: "代入する値、<xref:System.Messaging.Trustee.Name*>プロパティ</xref:System.Messaging.Trustee.Name*>。"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.Trustee&quot;> </xref>型のクラス<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>、設定、<xref:System.Messaging.Trustee.Name*>と<xref uid=&quot;langword_csharp_SystemName&quot; name=&quot;SystemName&quot; href=&quot;&quot;></xref>プロパティを指定する値</xref:System.Messaging.Trustee.Name*>。"
  remarks: "トラスティ アカウントを設定し、ネットワーク コンピューターが、アカウントの検索に使用するように指定するには、このオーバー ロードを使用します。 <xref:System.Messaging.Trustee.TrusteeType%2A>プロパティに設定されている`Unknown`のこのインスタンスを使用する前にその値を変更することができますが、<xref:System.Messaging.Trustee>アクセス許可を設定します</xref:System.Messaging.Trustee></xref:System.Messaging.Trustee.TrusteeType%2A>。"
  syntax:
    content: public Trustee (string name, string systemName);
    parameters:
    - id: name
      type: System.String
      description: "代入する値、<xref:System.Messaging.Trustee.Name*>プロパティ</xref:System.Messaging.Trustee.Name*>。"
    - id: systemName
      type: System.String
      description: "代入する値、<xref:System.Messaging.Trustee.SystemName*>プロパティ</xref:System.Messaging.Trustee.SystemName*>。"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  id: '#ctor(System.String,System.String,System.Messaging.TrusteeType)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.Trustee&quot;> </xref>設定の指定した型のクラス、 <> </> *> と<> *> プロパティを指定した値にします。"
  remarks: "トラスティ アカウントを設定およびアカウントの検索に使用されるネットワーク コンピューターを指定する、トラスティ型がわかっている場合は、このオーバー ロードを使用します。       このオーバー ロードの設定、<xref:System.Messaging.Trustee.TrusteeType%2A>のこのインスタンスを使用する前にその値を変更できますが、構築時のプロパティ<xref:System.Messaging.Trustee>アクセス許可を設定します</xref:System.Messaging.Trustee></xref:System.Messaging.Trustee.TrusteeType%2A>。 `Unknown`使用されているが、有効であることを知っている信頼の種類がわからない場合にのみ、trustee の種類 (これは、コンス トラクターの他のオーバー ロードは、既定で設定) を使用する必要があります。"
  syntax:
    content: public Trustee (string name, string systemName, System.Messaging.TrusteeType trusteeType);
    parameters:
    - id: name
      type: System.String
      description: "代入する値、<xref:System.Messaging.Trustee.Name*>プロパティ</xref:System.Messaging.Trustee.Name*>。"
    - id: systemName
      type: System.String
      description: "代入する値、<xref:System.Messaging.Trustee.SystemName*>プロパティ</xref:System.Messaging.Trustee.SystemName*>。"
    - id: trusteeType
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref>トラスティのアカウントの種類を示すです。"
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.Trustee.Name
  id: Name
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得またはトラスティの名前を設定します。"
  remarks: "使用する前に、Name プロパティの値を指定する必要があります、<xref:System.Messaging.Trustee>アクセス許可を設定します</xref:System.Messaging.Trustee>。 名前には、ユーザー、グループ、または新しいアクセス権の割り当てられたコンピューター アカウントの名前が含まれています。       値を指定しない場合、 <xref:System.Messaging.Trustee.SystemName%2A>、ローカル コンピューター上で、Name プロパティで指定したアカウントのプロパティが検索されます</xref:System.Messaging.Trustee.SystemName%2A>。 指定した場合、 <xref:System.Messaging.Trustee.SystemName%2A>、アカウントが指定したコンピューター上で検索します</xref:System.Messaging.Trustee.SystemName%2A>。       (たとえば、ワークグループ モードである場合) ネットワークに接続していない場合、Name プロパティは、任意のローカル ユーザーまたはグループにすることができます。 この例では、任意の値を指定しないで<xref:System.Messaging.Trustee.SystemName%2A>、ワークグループ モードが定義によってローカル</xref:System.Messaging.Trustee.SystemName%2A>。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "新しい権利の割り当てられたアカウントの名前。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Messaging.Trustee.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Name プロパティが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Messaging.Trustee.SystemName
  id: SystemName
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得またはトラスティのアカウントを検索対象のコンピューターを設定します。"
  remarks: "値を指定する必要があります<xref:System.Messaging.Trustee.Name%2A>のこのインスタンスを使用する前に<xref:System.Messaging.Trustee>SystemName が、権限の設定は省略可能</xref:System.Messaging.Trustee></xref:System.Messaging.Trustee.Name%2A>。 SystemName のままにする場合`null`で指定するアカウントを検索するローカル コンピューターが使用される、<xref:System.Messaging.Trustee.Name%2A>プロパティ</xref:System.Messaging.Trustee.Name%2A>。"
  syntax:
    content: public string SystemName { get; set; }
    return:
      type: System.String
      description: "アカウントが存在するローカルまたはリモート コンピューター。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>名前は、ローカル コンピューターでルックアップしているはことを示します。"
  overload: System.Messaging.Trustee.SystemName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.Trustee.TrusteeType
  id: TrusteeType
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得またはトラスティがユーザー、グループ、コンピューター、ドメイン、またはエイリアスであるかどうかを識別する、トラスティの種類を設定します。"
  remarks: "アカウントの種類、トラスティは、ドメイン コント ローラーまたはローカル コンピューター上に関連付けられて、TrusteeType を示します。 これは、指定できますが、たとえば、ユーザー アカウント、グループ アカウント、またはコンピューター アカウント。       定義済みグループの名前を指定する場合、 <xref:System.Messaging.Trustee.Name%2A>、Everyone などのプロパティ、TrusteeType は`Group`、なく`Alias`</xref:System.Messaging.Trustee.Name%2A>。"
  syntax:
    content: public System.Messaging.TrusteeType TrusteeType { get; set; }
    return:
      type: System.Messaging.TrusteeType
      description: "A <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref>システムにトラスティをアカウントの種類を示すです。 既定値は<xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;></xref>です。"
  overload: System.Messaging.Trustee.TrusteeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "トラスティを指定した型は、のいずれかではありません、 <xref href=&quot;System.Messaging.TrusteeType&quot;> </xref>列挙型メンバー。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.Trustee.#ctor
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: System.Messaging.Trustee.Trustee()
- uid: System.Messaging.Trustee.#ctor(System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: System.Messaging.Trustee.Trustee(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String)
  nameWithType: Trustee.Trustee(String,String)
  fullName: System.Messaging.Trustee.Trustee(String,String)
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String,String,TrusteeType)
  nameWithType: Trustee.Trustee(String,String,TrusteeType)
  fullName: System.Messaging.Trustee.Trustee(String,String,TrusteeType)
- uid: System.Messaging.TrusteeType
  parent: System.Messaging
  isExternal: false
  name: TrusteeType
  nameWithType: TrusteeType
  fullName: System.Messaging.TrusteeType
- uid: System.Messaging.Trustee.Name
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
  fullName: System.Messaging.Trustee.Name
- uid: System.Messaging.Trustee.SystemName
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: System.Messaging.Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: System.Messaging.Trustee.TrusteeType
- uid: System.Messaging.Trustee.#ctor*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee
  nameWithType: Trustee.Trustee
- uid: System.Messaging.Trustee.Name*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
- uid: System.Messaging.Trustee.SystemName*
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType*
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
