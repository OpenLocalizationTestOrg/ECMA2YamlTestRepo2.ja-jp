### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "データ ストアのセッション状態プロバイダーに必要なメンバーを定義します。"
  remarks: "ASP.NET セッション状態は、読み取り、およびセッション状態を使用してデータ ストアに、セッションのデータ ストア プロバイダーを書き込みます。 セッション状態ストアのプロバイダーは、SessionStateStoreProviderBase 抽象クラスを継承し、データ ストアに固有の実装とそのメンバーをオーバーライドするクラスです。 セッション状態ストアのプロバイダーは、によって呼び出される、<xref:System.Web.SessionState.SessionStateModule>記憶域のデータ ストアと通信する ASP.NET ページの処理とセッション変数と、タイムアウト値などの関連するセッション情報の取得中にクラス</xref:System.Web.SessionState.SessionStateModule>。       各 ASP.NET アプリケーション内でセッション データがごとに個別に格納されている<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>プロパティ</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 ASP.NET アプリケーションでは、セッション データは共有されません。       設定して、ASP.NET アプリケーションのカスタム SessionStateStoreProviderBase 実装を指定できます、`mode`の属性、`sessionState`構成要素を<xref:System.Web.SessionState.SessionStateMode>と`customProvider`このトピックの例に示すように、カスタム プロバイダーの名前属性します</xref:System.Web.SessionState.SessionStateMode>。      ## ロックのセッション ストア データのための ASP.NET アプリケーションは、同時実行要求に応答をサポートするマルチ スレッド、可能な同時要求が同じセッションの情報にアクセスしようとする可能性があります。 すべてのフレーム セット内の複数のフレームが同じアプリケーションをアクセス シナリオを検討してください。 フレーム セット内の各フレームの個々 の要求は、異なるスレッドで同時に Web サーバーで実行できます。 各フレームのソースの ASP.NET ページは、セッション状態変数にアクセスすると、セッション ストアへのアクセスを同時に複数のスレッドが割り当てることもできます。       予期しないセッション状態の動作とセッション ストアでデータの競合を避けるため、 <xref:System.Web.SessionState.SessionStateModule>SessionStateStoreProviderBase クラスには、排他モードの ASP.NET ページの実行中の特定のセッションのセッションのストアの項目をロックするロック機能が含まれているとします</xref:System.Web.SessionState.SessionStateModule>。 その場合であっても注意してください、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>として属性が設定されています`ReadOnly`、同じアプリケーション内の他の ASP.NET ページは、ストアからデータを引き続きしまう可能性を待機している読み取り専用のセッションの要求には、解放されるデータがロックされているため、セッション ストアへの書き込みできる場合があります</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>。       セッション ストアのデータへの呼び出しで、要求の開始時に、ロックが設定されている、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>。 呼び出し中にロックが解放された、要求が完了したときに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>。       場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、いずれかへの呼び出し中にロックされているセッション データを検出した、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>または<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッドは再要求し、セッション データ&0;.5 秒間隔で、ロックが解放されるか、セッション データがロックされている時間の値を超えるまで、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>プロパティ</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule>。 実行のタイムアウトを超えた場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクトを呼び出すが、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション ストア データを解放し、その時点で、セッション ストアのデータを要求するメソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule>。       ストア間のセッションがロックされているためへの呼び出しによってデータが解放される可能性がありますが、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドを呼び出す前に別のスレッドで、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>、現在の応答のメソッド、でした試行を設定しを持ち、既に解放されている別のセッションで変更をセッション状態ストアのデータを解放します</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>。 この状況を避けるため、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッドは、ロックの識別子を返します</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>。 このロック識別子は、ロックされているセッション ストア データを変更するには、各要求に含めるする必要があります。 セッション ストア データを変更すると、データ ストアでロック識別子には、 <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>によって指定されるロックの識別子が一致する場合にのみ      ## 期限切れのセッションを保存データとを削除すると、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>特定のセッションのメソッドは、そのセッションのデータが使用して、データ ストアから削除、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>メソッドですそれ以外の場合、データは、セッション データ ストアに保持後の要求のセッションの。</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 。 期限切れのセッション データを削除する SessionStateStoreProviderBase 実装の責任です。"
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象クラス</xref:System.Web.SessionState.SessionStateStoreProviderBase>を継承するクラスのコンス トラクターを実装する必要はありません。 初期化の値を<xref:System.Web.SessionState.SessionStateStoreProviderBase>に実装が渡される、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>メソッドの実装</xref:System.Configuration.Provider.ProviderBase.Initialize%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "新たに作成<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;></xref>現在の要求に使用するオブジェクト。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトでは、ASP.NET ページの要求の先頭に CreateNewStoreData メソッドを呼び出し中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント</xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.SessionState.SessionStateModule>。 場合 CreateNewStoreData メソッドが呼び出されます。 - 受信要求がないセッションの ID、または - 受信要求が、セッションがデータ ストアに、ID が、セッションが見つかりません。       CreateNewStoreData メソッドが新たに作成<xref:System.Web.SessionState.SessionStateStoreData>空のオブジェクト<xref:System.Web.SessionState.ISessionStateItemCollection>オブジェクト、<xref:System.Web.HttpStaticObjectsCollection>コレクション、および指定した`timeout`値</xref:System.Web.HttpStaticObjectsCollection></xref:System.Web.SessionState.ISessionStateItemCollection></xref:System.Web.SessionState.SessionStateStoreData>。 <xref:System.Web.HttpStaticObjectsCollection>を使用して ASP.NET アプリケーション用のコレクションを取得でき、<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>メソッド</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A></xref:System.Web.HttpStaticObjectsCollection>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: timeout
      type: System.Int32
      description: "セッション状態<xref:System.Web.SessionState.HttpSessionState.Timeout*>、新しい値<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref></xref:System.Web.SessionState.HttpSessionState.Timeout*> 。"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "新しい<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;></xref>現在の要求。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "データ ストアに新しいセッション状態の項目を追加します。"
  remarks: "CreateUninitializedItem メソッドは、セッションで使用時に、`cookieless`と`regenerateExpiredSessionId`属性が両方とも`true`です。 持つ、`regenerateExpiredSessionId attribute`に設定`true`により、<xref:System.Web.SessionState.SessionStateModule>新しいを生成するオブジェクト<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>、有効期限が切れたときの値<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値が検出されました</xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.SessionStateModule>。       新しいを生成するプロセス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、新しく生成されたを含む URL をブラウザーをリダイレクトする必要があります<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値</xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 CreateUninitializedItem メソッドは、有効期限が切れたを含む最初の要求中に<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 後に、<xref:System.Web.SessionState.SessionStateModule>オブジェクトを取得、新しい<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値の有効期限切れの値を置き換えるため、セッション状態のデータ ストアに初期化されていないエントリを追加する CreateUninitializedItem メソッドを呼び出します</xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.SessionStateModule>。 ブラウザーが新たに生成されたを含む URL にリダイレクトし、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 セッションのデータ ストアでは、初期化されていないエントリが存在確実にリダイレクトされた要求を含む、新たに生成された<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値が期限切れのセッションの要求のない誤動作だし、新しいセッションとして処理は、代わりに、.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       セッション データ ストアの初期化されていないエントリが新たに生成された関連付け<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値し、有効期限の日付と時刻に対応する値をなどに、既定値のみが含まれています、`actionFlags`のパラメーター、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A></xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 セッション状態ストアの初期化されていないエントリを含める必要があります、`actionFlags`値と等しい、<xref:System.Web.SessionState.SessionStateActions>列挙値</xref:System.Web.SessionState.SessionStateActions>。 この値が渡される、<xref:System.Web.SessionState.SessionStateModule>オブジェクトを<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>と<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド、し、通知、<xref:System.Web.SessionState.SessionStateModule>現在のセッションが新しいがオブジェクトには、セッションが初期化されていません</xref:System.Web.SessionState.SessionStateModule></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A></xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A></xref:System.Web.SessionState.SessionStateModule>。 <xref:System.Web.SessionState.SessionStateModule>オブジェクトは、新しいセッションを初期化し、発生させる、`Session_OnStart`イベント</xref:System.Web.SessionState.SessionStateModule>。       Cookie なしのセッションの詳細については、次を参照してください、<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>プロパティ。</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>現在の要求に対する</xref:System.Web.SessionState.HttpSessionState.SessionID*>。"
    - id: timeout
      type: System.Int32
      description: "セッション<xref:System.Web.SessionState.HttpSessionState.Timeout*>現在の要求に対する</xref:System.Web.SessionState.HttpSessionState.Timeout*>。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref>実装します。"
  remarks: "Dispose メソッドが呼び出されます、<xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>アプリケーション ドメインの終わりのメソッドを実行します</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>。 継承するクラス、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスは、このメソッドを使用して使用されていないリソースを解放します</xref:System.Web.SessionState.SessionStateStoreProviderBase>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "によって呼び出される、 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref>要求の end でオブジェクト。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトでは、ASP.NET ページの要求の最後に EndRequest メソッドを呼び出し中に、<xref:System.Web.HttpApplication.EndRequest>イベント</xref:System.Web.HttpApplication.EndRequest></xref:System.Web.SessionState.SessionStateModule>。 EndRequest メソッドを使用して、セッション状態ストアのプロバイダーが必要な要求ごとのクリーンアップを実行することができます。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションのデータ ストアから読み取り専用のセッション状態データを返します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、中に、要求の先頭に GetItem メソッドを呼び出して、<xref:System.Web.HttpApplication.AcquireRequestState>イベント、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されている`ReadOnly`</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A></xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.SessionState.SessionStateModule>。 場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されている`true`、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>。       GetItem メソッドを返します、<xref:System.Web.SessionState.SessionStateStoreData>オブジェクトがデータ ストアからセッション情報が設定し、セッション データの有効期限を更新します</xref:System.Web.SessionState.SessionStateStoreData>。 GetItem メソッドを設定、データ ストアにあるセッション項目のデータが見つからない場合、`locked``out`パラメーターを`false`し、返します`null`です。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>データ ストアの新しいセッション項目を作成するメソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A></xref:System.Web.SessionState.SessionStateModule>。       場合セッション項目データ ストアでデータが見つかりましたが、データがロックされている GetItem メソッドのセット、`locked``out`へのパラメーター `true`、設定、`lockAge``out`パラメーターを現在の日付と時刻-日付と時刻アイテムがロックされている場合 (これは、データ ストアから取得)、設定、`lockId``out`ロック識別子にパラメーターがデータ ストア、および返しますから取得`null`です。 これにより、<xref:System.Web.SessionState.SessionStateModule>セッション項目情報を取得しようとする&0;.5 秒間隔の後にもう一度 GetItem メソッドを呼び出すオブジェクト</xref:System.Web.SessionState.SessionStateModule>。       場合、値を`lockAge``out`を超えるパラメーターが設定されている、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション項目データのロックをオフにする方法 GetItem メソッドを呼び出して、再度と</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>。       `actionFlags`パラメーターが使用されるときに両方、`cookieless`と`regenerateExpiredSessionId`属性に設定されて`true`です。 `actionFlags`値に設定<xref:System.Web.SessionState.SessionStateActions>セッション データ ストア内のエントリが初期化を必要とする新しいセッションであることを示します</xref:System.Web.SessionState.SessionStateActions>。 セッションのデータ ストアの初期化されていないエントリがへの呼び出しによって作成された、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>。 セッションのデータ ストアからアイテムが、初期化されていない項目ではない場合、`actionFlags`のパラメーターを&0; に設定されます。       Cookie なしのセッションをサポートするカスタムのセッション状態ストアの実行者に設定する必要があります、 `actionFlags` `out`セッション データ ストアから現在のアイテムのパラメーターの値が返されます。 場合、`actionFlags`要求されたセッション ストアのパラメーター値が項目と等しい、<xref:System.Web.SessionState.SessionStateActions>列挙値が GetItem メソッドは、設定後に&0; に、データ ストアに値を設定する必要があります、 `actionFlags` `out`パラメーター</xref:System.Web.SessionState.SessionStateActions> 。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>現在の要求に対する</xref:System.Web.SessionState.HttpSessionState.SessionID*>。"
    - id: locked
      type: System.Boolean
      description: "このメソッドが戻るときに設定されるブール値が含まれています。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 、要求されたセッション項目が、セッション データ ストアでロックされている、それ以外の場合は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: lockAge
      type: System.TimeSpan
      description: "このメソッドが戻るとき、<xref:System.TimeSpan>セッション データ ストア内の項目がロックされている時間に設定されているオブジェクト</xref:System.TimeSpan>。"
    - id: lockId
      type: System.Object
      description: "このメソッドが戻るときに、現在の要求に対するロックの識別子に設定されているオブジェクトが含まれています。 ロック識別子の詳細については、「セッション ストア データのロック」を参照してください、 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref>クラスの概要です。"
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "このメソッドが戻るときの&1; つを含む、 <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref>現在のセッションが初期化されていない cookie なしのセッションであるかどうかを示す値。"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>セッション値およびセッション データ ストアからの情報が設定されています。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションのデータ ストアから読み取り専用のセッション状態データを返します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、中に、要求の先頭に GetItemExclusive メソッドを呼び出して、<xref:System.Web.HttpApplication.AcquireRequestState>イベントときに、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されている`true`、既定値です</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A></xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.SessionState.SessionStateModule>。 場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されている`ReadOnly`、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>。       GetItemExclusive メソッドを返します、<xref:System.Web.SessionState.SessionStateStoreData>データ ストアからセッション情報を使用して作成されたオブジェクトが格納されたデータの有効期限を更新し、要求の実行中のデータ ストアでセッション項目データをロックします</xref:System.Web.SessionState.SessionStateStoreData>。 GetItemExclusive メソッドを設定、データ ストアにあるセッション項目のデータが見つからない場合、 `locked` `out`にパラメーター`false`し、返します`null`です。 これにより、<xref:System.Web.SessionState.SessionStateModule>を呼び出すオブジェクト、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>データ ストアの新しいセッション項目を作成するメソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A></xref:System.Web.SessionState.SessionStateModule>。 場合セッション項目データ ストアでデータが見つかりましたが、データがロックされている GetItemExclusive メソッドのセット、 `locked` `out`パラメーターを`true`、設定、 `lockAge` `out`パラメーターを現在の日付と時刻-日付と時刻アイテムがロックされている場合 (これは、データ ストアから取得)、設定、 `lockId` `out`ロック識別子へのパラメーターがデータ ストア、および返しますから取得`null`です。 これにより、<xref:System.Web.SessionState.SessionStateModule>セッション項目情報を取得し、データのロックを取得しようとする&0;.5 秒間隔の後にもう一度 GetItemExclusive メソッドを呼び出すオブジェクト</xref:System.Web.SessionState.SessionStateModule>。 場合、値を`lockAge``out`を超えていますパラメーターが設定されている、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値、<xref:System.Web.SessionState.SessionStateModule>呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>セッション項目データのロックを消去するメソッドを GetItemExclusive メソッドを呼び出して、再度と</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>。       `actionFlags`パラメーターが使用されるときに、`cookieless`と`regenerateExpiredSessionId`属性に設定されて`true`です。 `actionFlags`値に設定<xref:System.Web.SessionState.SessionStateActions>セッション データ ストア内のエントリが初期化を必要とする新しいセッションであることを示します</xref:System.Web.SessionState.SessionStateActions>。 セッションのデータ ストアの初期化されていないエントリがへの呼び出しによって作成された、<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>。 セッションのデータ ストアからアイテムが、初期化されていない項目ではない場合、`actionFlags`のパラメーターを&0; に設定されます。       Cookie なしのセッションをサポートするカスタムのセッション状態ストアの実行者に設定する必要があります、 `actionFlags` `out`セッション データ ストアから現在のアイテムのパラメーターの値が返されます。 場合、`actionFlags`要求されたセッション ストアのパラメーター値が項目と等しい、<xref:System.Web.SessionState.SessionStateActions>列挙値が GetItemExclusive メソッドは、設定後に&0; に、データ ストアに値を設定する必要があります、 `actionFlags` `out`のパラメーターです</xref:System.Web.SessionState.SessionStateActions>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>現在の要求に対する</xref:System.Web.SessionState.HttpSessionState.SessionID*>。"
    - id: locked
      type: System.Boolean
      description: "このメソッドが戻るときに設定されるブール値が含まれています。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>ロックが正常に取得した、それ以外の場合は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: lockAge
      type: System.TimeSpan
      description: "このメソッドが戻るとき、<xref:System.TimeSpan>セッション データ ストア内の項目がロックされている時間に設定されているオブジェクト</xref:System.TimeSpan>。"
    - id: lockId
      type: System.Object
      description: "このメソッドが戻るときに、現在の要求に対するロックの識別子に設定されているオブジェクトが含まれています。 ロック識別子の詳細については、「セッション ストア データのロック」を参照してください、 <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref>クラスの概要です。"
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "このメソッドが戻るときの&1; つを含む、 <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref>現在のセッションが初期化されていない cookie なしのセッションであるかどうかを示す値。"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "A <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>セッション値およびセッション データ ストアからの情報が設定されています。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "によって呼び出される、 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref>要求ごとの初期化のオブジェクト。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、その他を呼び出す前に InitializeRequest メソッドを呼び出して<xref:System.Web.SessionState.SessionStateStoreProviderBase>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase></xref:System.Web.SessionState.SessionStateModule>。 セッション状態ストアのプロバイダーによって要求される要求ごとの初期化を行うには、InitializeRequest メソッドを使用できます。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "リリース セッション データ内の項目のロックを格納します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、有効期限を更新し、セッション データ ストア内の項目のロックを解除する ReleaseItemExclusive メソッドを呼び出します</xref:System.Web.SessionState.SessionStateModule>。 中に、要求の終了時に呼び出されます、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント、セッションの値が変更されていない場合</xref:System.Web.HttpApplication.ReleaseRequestState>。 セッションの値が変更された場合、<xref:System.Web.SessionState.SessionStateModule>オブジェクト呼び出しの代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A></xref:System.Web.SessionState.SessionStateModule>。       <xref:System.Web.SessionState.SessionStateModule>オブジェクトは、セッション データ ストア内の項目のロックを超過した場合も ReleaseItemExclusive メソッドを呼び出して、<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>値</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A></xref:System.Web.SessionState.SessionStateModule>。 詳細については、ロックとロックの識別子の詳細は、「セッション ストア データをロックする」を参照してください、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要。</xref:System.Web.SessionState.SessionStateStoreProviderBase>       ReleaseItemExclusive メソッドでは、指定されたセッションに一致する現在のアプリケーションのセッションのデータ ストア内の項目から、ロックが削除されるだけ`id`と`lockId`値。 場合、`lockId`と一致しない&1; つのデータ ストアには、ReleaseItemExclusive メソッドは、何も行われません。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "現在の要求のセッション識別子。"
    - id: lockId
      type: System.Object
      description: "現在の要求に対するロックの識別子です。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "項目のセッションのデータ ストアからデータを削除します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、中に、要求の最後に RemoveItem メソッドを呼び出して、<xref:System.Web.HttpApplication.ReleaseRequestState>セッション データ ストアからセッションのアイテムのデータを削除する、イベント、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出された</xref:System.Web.SessionState.HttpSessionState.Abandon%2A></xref:System.Web.HttpApplication.ReleaseRequestState></xref:System.Web.SessionState.SessionStateModule>。 指定されたセッションに一致する現在のアプリケーションのセッション データのみ`id`と`lockId`値を削除します。 詳細については、ロックとロックの識別子の詳細は、「セッション ストア データをロックする」を参照してください、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要。</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "現在の要求のセッション識別子。"
    - id: lockId
      type: System.Object
      description: "現在の要求に対するロックの識別子です。"
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>データ ストアから削除する項目を表すです。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションのデータ ストア内の項目の有効期限日時を更新します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、現在の日付と時刻と、セッションに、有効期限の日付と時刻のセッションを更新する ResetItemTimeout メソッドを呼び出します<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>ときの値か: -<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性は`true`、または、要求は発生しませんでした、<xref:System.Web.HttpApplication.AcquireRequestState>と<xref:System.Web.HttpApplication.ReleaseRequestState>エラーのためのイベント</xref:System.Web.HttpApplication.ReleaseRequestState></xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.Configuration.PagesSection.EnableSessionState%2A></xref:System.Web.SessionState.HttpSessionState.Timeout%2A></xref:System.Web.SessionState.SessionStateModule>。       ASP.NET ページが要求されている場合、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性に設定されている`false`ResetItemTimeout もメソッドが、有効期限の日付と時刻のセッションのデータ ストア内のデータを更新する</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "現在の要求のセッション識別子。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の要求からの値を持つセッション状態のデータ ストアにセッション項目情報を更新し、データのロックを解除します。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>オブジェクトは、中に、要求の最後に SetAndReleaseItemExclusive メソッドを呼び出して、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント、データ ストアに現在のセッション項目情報を挿入またはアイテムの有効期限を更新して、データのロックを解除するのには、現在の値を持つデータ ストア内の既存のセッション項目情報を更新します</xref:System.Web.HttpApplication.ReleaseRequestState></xref:System.Web.SessionState.SessionStateModule>。 指定されたセッションに一致する現在のアプリケーションのセッション データのみ`id`と`lockId`値を更新します。 ロックの詳細についてを参照してください「セッション ストアのデータのロック」、<xref:System.Web.SessionState.SessionStateStoreProviderBase>クラスの概要</xref:System.Web.SessionState.SessionStateStoreProviderBase>。       現在の要求のセッションの値が変更されていない場合、SetAndReleaseItemExclusive メソッドは呼び出されません。 代わりに、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>メソッドが呼び出されます</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>。       場合、<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>メソッドが呼び出されて、SetAndReleaseItemExclusive メソッドは呼び出されません</xref:System.Web.SessionState.HttpSessionState.Abandon%2A>。 代わりに、<xref:System.Web.SessionState.SessionStateModule>オブジェクトの呼び出し、<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>メソッドは、データ ソースからセッション項目データを削除する</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A></xref:System.Web.SessionState.SessionStateModule>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求。"
    - id: id
      type: System.String
      description: "現在の要求のセッション識別子。"
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>を格納する現在のセッションの値を含むオブジェクト。"
    - id: lockId
      type: System.Object
      description: "現在の要求に対するロックの識別子です。"
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しい項目としてセッション項目を識別するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>セッション項目を既存の項目を識別します。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "参照を設定、 <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref>の委任、 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> Global.asax ファイルで定義されたイベント。"
  remarks: "<xref:System.Web.SessionState.SessionStateModule>を決定する、モジュールが初期化されたときに、オブジェクトが SetItemExpireCallback メソッドを呼び出すかどうかを呼び出す、`Session_OnEnd`でサポートされているイベント、<xref:System.Web.SessionState.SessionStateStoreProviderBase>実装とを関連付ける、<xref:System.Web.SessionState.SessionStateItemExpireCallback>を持つデリゲート、`Session_OnEnd`イベント</xref:System.Web.SessionState.SessionStateItemExpireCallback></xref:System.Web.SessionState.SessionStateStoreProviderBase></xref:System.Web.SessionState.SessionStateModule>。       カスタム セッション状態ストア プロバイダーの実装側で SetItemExpireCallback メソッドを使用して通知する必要があります、<xref:System.Web.SessionState.SessionStateModule>オブジェクトかどうかへの呼び出し、`Session_OnEnd`イベントがサポートされているローカル参照に設定して、<xref:System.Web.SessionState.SessionStateItemExpireCallback>によって提供されるデリゲート、`expireCallback`パラメーター</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> 。 カスタムの実装は、タイミングを決定する必要があります、ローカル<xref:System.Web.SessionState.SessionStateItemExpireCallback>デリゲートが呼び出されます</xref:System.Web.SessionState.SessionStateItemExpireCallback>。 たとえば、呼び出し中に、デリゲートを呼び出すことができます、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>、セッションが中断されるときに呼び出されるメソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>。"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "<xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref>の委任、 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> Global.asax ファイルで定義されたイベント。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セッション状態ストアのプロバイダーは、呼び出しをサポートする場合、 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref>イベントです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
