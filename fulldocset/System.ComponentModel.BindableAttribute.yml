### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.BindableAttribute
  id: BindableAttribute
  children:
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.Bindable
  - System.ComponentModel.BindableAttribute.Default
  - System.ComponentModel.BindableAttribute.Direction
  - System.ComponentModel.BindableAttribute.Equals(System.Object)
  - System.ComponentModel.BindableAttribute.GetHashCode
  - System.ComponentModel.BindableAttribute.IsDefaultAttribute
  - System.ComponentModel.BindableAttribute.No
  - System.ComponentModel.BindableAttribute.Yes
  langs:
  - csharp
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
  type: Class
  summary: "バインディングの通常のメンバーが使用されるかどうかを指定します。 このクラスは継承できません。"
  remarks: "複数のメンバーでは、通常のプロパティで、コントロールのこの属性を指定することができます。       プロパティに設定 BindableAttribute でマークされているかどうかは`true`をそのプロパティのプロパティの変更通知を発生する必要があります。 つまり、<xref:System.ComponentModel.BindableAttribute.Bindable%2A>プロパティは<xref:System.ComponentModel.BindableAttribute.Yes>、双方向データ バインディングをサポートします</xref:System.ComponentModel.BindableAttribute.Yes></xref:System.ComponentModel.BindableAttribute.Bindable%2A>。 場合<xref:System.ComponentModel.BindableAttribute.Bindable%2A>は<xref:System.ComponentModel.BindableAttribute.No>、プロパティにもバインドできますが、必要がありますは示されませんプロパティの既定のセットに、バインドする場合がありますか、プロパティの変更通知を発生させることがないためです</xref:System.ComponentModel.BindableAttribute.No></xref:System.ComponentModel.BindableAttribute.Bindable%2A>。      > [!NOTE] > を持つプロパティを指定すると<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>&quot;éý&quot; `true`、この属性の値が定数メンバー <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes>設定</xref:System.ComponentModel.BindableAttribute.%23ctor%2A> マークされたプロパティの<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>&quot;éý&quot; `false`、値が<xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> したがって、コード内でこの属性の値を確認する必要があります属性を指定する、<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>または<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>。</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName></xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>として      > [!CAUTION] > デザイン時にのみ、この属性を使用することができます。 何もできなくなりますバインディング任意のプロパティに実行時。       詳細については、次を参照してください。[属性](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example marks a property as appropriate to bind data to.  \n  \n [!code-cs[Classic BindableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._142_1.cs)]\n [!code-vb[Classic BindableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._142_1.vb)]\n [!code-cpp[Classic BindableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._142_1.cpp)]  \n  \n The next code example shows how to check the value of the BindableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Finally, the code returns the attributes for this property and saves them in the attributes variable. The code example presents two different ways to check the value of the BindableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._142_2.cs)]\n [!code-vb[Classic BindableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._142_2.vb)]\n [!code-cpp[Classic BindableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._142_2.cpp)]  \n  \n If you marked a class with the BindableAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._142_3.cs)]\n [!code-vb[Classic BindableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._142_3.vb)]\n [!code-cpp[Classic BindableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._142_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class BindableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>ブール値を持つクラス。"
  remarks: "持つプロパティを指定すると、<xref:System.ComponentModel.BindableAttribute>に設定`true`、この属性の値が定数メンバー <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes>設定</xref:System.ComponentModel.BindableAttribute> マークされたプロパティの<xref:System.ComponentModel.BindableAttribute>&quot;éý&quot; `false`、値が<xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> したがって、コード内でこの属性の値を確認する必要があります属性を指定する、<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>または<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>。</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName></xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>として"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cs[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._14_1.cs)]\n [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._14_1.vb)]\n [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._14_1.cpp)]"
  syntax:
    content: public BindableAttribute (bool bindable);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>バインディングのプロパティを使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  id: '#ctor(System.ComponentModel.BindableSupport)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>のいずれかのクラス、 <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref>値。"
  remarks: "持つプロパティを指定すると、<xref:System.ComponentModel.BindableAttribute>に設定`true`、この属性の値が定数メンバー <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes>設定</xref:System.ComponentModel.BindableAttribute> マークされたプロパティの<xref:System.ComponentModel.BindableAttribute>&quot;éý&quot; `false`、値が<xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> したがって、コード内でこの属性の値を確認する必要があります属性を指定する、<xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>または<xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>。</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName></xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>として"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/cpp/f23f7ef8-7d45-4e98-96fc-_1.cpp)]\n [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/visualbasic/f23f7ef8-7d45-4e98-96fc-_1.vb)]\n [!code-cs[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/csharp/f23f7ef8-7d45-4e98-96fc-_1.cs)]"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "1 つ、 <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref>値。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  id: '#ctor(System.Boolean,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>バインディングのプロパティを使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "1 つ、 <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref>値。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  id: '#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "1 つ、 <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref>値。"
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "1 つ、 <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref>値。"
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Bindable
  id: Bindable
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "バインディングのプロパティが通常使用されることを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BindableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \n  \n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see  \n  \n [Assembly Names](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._3_1.cs)]\n [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._3_1.cpp)]\n [!code-vb[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._3_1.vb)]"
  syntax:
    content: public bool Bindable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プロパティは、通常、バインドに使用される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.BindableAttribute.Bindable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Default
  id: Default
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "既定値を指定します、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>、これは<xref href=&quot;System.ComponentModel.BindableAttribute.No&quot;></xref>です。 このフィールドは、読み取り専用です。"
  remarks: "<xref:System.ComponentModel.BindableAttribute>定数メンバー <xref:System.ComponentModel.BindableAttribute>。</xref:System.ComponentModel.BindableAttribute>に設定されている</xref:System.ComponentModel.BindableAttribute>、この値を持つプロパティをマークする場合 そのため、属性がコード内でこの値に設定されているかどうか確認する場合は、する必要がありますを指定する属性<xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>。</xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>として"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Default;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Direction
  id: Direction
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このプロパティのデータ バインディングの方向を示す値を取得します。"
  syntax:
    content: public System.ComponentModel.BindingDirection Direction { get; }
    return:
      type: System.ComponentModel.BindingDirection
      description: "このプロパティのデータ バインディングの方向です。"
  overload: System.ComponentModel.BindableAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "2 つあるかどうかを決定<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>オブジェクトが等しい。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>が現在に等しい<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>です。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>が等しくない場合。"
  overload: System.ComponentModel.BindableAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "ハッシュ関数として機能、 <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のハッシュ コード<xref href=&quot;System.ComponentModel.BindableAttribute&quot;></xref>です。"
  overload: System.ComponentModel.BindableAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "この属性が既定値であるかどうかを判断します。"
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>属性がこの属性クラスの既定値である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.No
  id: No
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロパティが通常はバインドに使用されないことを指定します。 このフィールドは、読み取り専用です。"
  remarks: "[いいえ] フィールドは<xref:System.ComponentModel.BindableAttribute>。</xref:System.ComponentModel.BindableAttribute>の既定の設定       持つプロパティを指定すると、<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>値のコンス トラクター`false,`定数メンバーいいえこの属性の値が設定</xref:System.ComponentModel.BindableAttribute.%23ctor%2A>。 したがって、属性がコード内でこの値に設定されているかどうかを確認する必要があります属性を指定する [いいえ] として"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute No;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "バインディングのプロパティが通常使用されることを指定します。 このフィールドは、読み取り専用です。"
  remarks: "持つプロパティを指定すると、<xref:System.ComponentModel.BindableAttribute.%23ctor%2A>値のコンス トラクター`true`の値、<xref:System.ComponentModel.BindableAttribute>定数メンバー [はい] に設定されている</xref:System.ComponentModel.BindableAttribute></xref:System.ComponentModel.BindableAttribute.%23ctor%2A>。 そのため、属性がコード内でこの値を設定するかどうかを確認するには、[はい] 属性を指定する必要があります。"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Yes;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
- uid: System.ComponentModel.BindableSupport
  parent: System.ComponentModel
  isExternal: false
  name: BindableSupport
  nameWithType: BindableSupport
  fullName: System.ComponentModel.BindableSupport
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
- uid: System.ComponentModel.BindingDirection
  parent: System.ComponentModel
  isExternal: false
  name: BindingDirection
  nameWithType: BindingDirection
  fullName: System.ComponentModel.BindingDirection
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
- uid: System.ComponentModel.BindableAttribute.Bindable
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Default
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
- uid: System.ComponentModel.BindableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Direction
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.BindableAttribute.No
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
- uid: System.ComponentModel.BindableAttribute.Yes
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
- uid: System.ComponentModel.BindableAttribute.#ctor*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Bindable*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Direction*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals
  nameWithType: BindableAttribute.Equals
- uid: System.ComponentModel.BindableAttribute.GetHashCode*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: BindableAttribute.GetHashCode
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: BindableAttribute.IsDefaultAttribute
