### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  id: DetailsViewCommandEventHandler
  langs:
  - csharp
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  type: Delegate
  summary: "処理するメソッドを表す、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>制御が発生し、<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>内でクリックしたときにイベント、 <xref:System.Web.UI.WebControls.ButtonField>、 <xref:System.Web.UI.WebControls.CommandField>、または<xref:System.Web.UI.WebControls.TemplateField>行フィールドをクリックします</xref:System.Web.UI.WebControls.TemplateField></xref:System.Web.UI.WebControls.CommandField></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.DetailsView.ItemCommand></xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント ハンドラーを提供できます。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DetailsView>コントロールには、特定のボタンがクリックされたときにその他の特殊なイベントもを発生させます (ボタン、`CommandName`プロパティが&quot;Delete&quot;、&quot;Insert&quot;、&quot;Page&quot;または「更新」に設定).</xref:System.Web.UI.WebControls.DetailsView> これらのボタンのいずれかを使用する場合は、コントロールによって提供される特殊なイベントのいずれかの使用を検討する必要があります (など<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>または<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>       DetailsViewCommandEventHandler デリゲートを作成するときに、イベントを処理するメソッドを特定します。 イベントをイベント ハンドラーに関連付けるには、イベントに、デリゲートのインスタンスを追加します。 デリゲートを削除しない限り、イベントが発生するたびに、イベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。"
  example:
  - "The following code example demonstrates how to programmatically add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control. This example uses the single-file coding model.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_1.aspx)]\n [!code-cs[DetailsViewCommandEventHandlerCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_1.aspx)]  \n  \n The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  \n  \n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_2.aspx)]\n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_2.aspx)]  \n  \n The following code example shows the code-behind file for the previous example.  \n  \n [!code-vb[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_3.vb)]\n [!code-cs[DetailsViewCommandEventHandlerCodeBehind#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_3.cs)]  \n  \n The following code example demonstrates how to declaratively add a DetailsViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_123_4.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_123_4.aspx)]"
  syntax:
    content: public delegate void DetailsViewCommandEventHandler(object sender, DetailsViewCommandEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
