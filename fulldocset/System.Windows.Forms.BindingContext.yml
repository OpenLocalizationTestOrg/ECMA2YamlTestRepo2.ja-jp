### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingContext
  id: BindingContext
  children:
  - System.Windows.Forms.BindingContext.#ctor
  - System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.Clear
  - System.Windows.Forms.BindingContext.ClearCore
  - System.Windows.Forms.BindingContext.CollectionChanged
  - System.Windows.Forms.BindingContext.Contains(System.Object)
  - System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  - System.Windows.Forms.BindingContext.IsReadOnly
  - System.Windows.Forms.BindingContext.Item(System.Object)
  - System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  - System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.BindingContext.Remove(System.Object)
  - System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  langs:
  - csharp
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
  type: Class
  summary: "コレクションを管理<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>から継承する任意のオブジェクトのオブジェクト、 <xref href=&quot;System.Windows.Forms.Control&quot;> </xref>クラスです。"
  remarks: "各 Windows フォームが管理するには、少なくとも&1; つの BindingContext オブジェクト、<xref:System.Windows.Forms.BindingManagerBase>フォームのオブジェクト</xref:System.Windows.Forms.BindingManagerBase>。 <xref:System.Windows.Forms.BindingManagerBase>クラスは抽象である戻り値の型、<xref:System.Windows.Forms.BindingContext.Item%2A>プロパティは、いずれか<xref:System.Windows.Forms.CurrencyManager>または<xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingContext.Item%2A> </xref:System.Windows.Forms.BindingManagerBase> データ ソースは、オブジェクトではなく、オブジェクトの一覧)、1 つのプロパティのみを返すことができるかどうか<xref:System.Type>は<xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Type> たとえば、指定した場合、<xref:System.Windows.Forms.TextBox>データ ソースとして、<xref:System.Windows.Forms.PropertyManager>が返されます</xref:System.Windows.Forms.PropertyManager></xref:System.Windows.Forms.TextBox>。 その一方で、データ ソースが実装するオブジェクトである場合<xref:System.Collections.IList>または<xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.CurrencyManager>が返されます</xref:System.Windows.Forms.CurrencyManager></xref:System.ComponentModel.IBindingList></xref:System.Collections.IList>。       Windows フォームでのデータ ソースごとに&1; つある<xref:System.Windows.Forms.CurrencyManager>または<xref:System.Windows.Forms.PropertyManager>。</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> Windows フォームに関連付けられている複数のデータ ソースである可能性があります、ため BindingContext を取得できます特定<xref:System.Windows.Forms.CurrencyManager>データ ソースに関連付けられている</xref:System.Windows.Forms.CurrencyManager>。      > [!NOTE] > を使用する場合、<xref:System.Windows.Forms.BindingContext.Item%2A>プロパティ、BindingContext 新たに作成<xref:System.Windows.Forms.BindingManagerBase>が既に存在しない場合</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.Item%2A>。 これには、する一覧 (または、一覧)、返されたオブジェクトは管理されません可能性があります、混乱を招くことができます。 無効なを返すことを防ぐために<xref:System.Windows.Forms.BindingManagerBase>を使用して、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドかどうかを目的の<xref:System.Windows.Forms.BindingManagerBase>既に存在します</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.Contains%2A></xref:System.Windows.Forms.BindingManagerBase>。       などのコンテナー コントロールを使用する場合、 <xref:System.Windows.Forms.GroupBox>、 <xref:System.Windows.Forms.Panel>、または<xref:System.Windows.Forms.TabControl>、データ バインド コントロールを含めるためのコンテナー コントロールだけとそのコントロールの BindingContext を作成することができます</xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Panel></xref:System.Windows.Forms.GroupBox>。 独自で、フォームの各部分を管理することができますし、 <xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> 参照してください、<xref:System.Windows.Forms.BindingContext.%23ctor%2A>詳細については、複数のコンス トラクター <xref:System.Windows.Forms.BindingManagerBase>、同じデータ ソースのオブジェクト</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.%23ctor%2A>。       追加する場合、<xref:System.Windows.Forms.TextBox>コントロールをフォームとコントロールがそのフォームの BindingContext と通信する、データセット内のテーブルの列にバインドします</xref:System.Windows.Forms.TextBox>。 BindingContext がさらに、固有の仕様に伝える<xref:System.Windows.Forms.CurrencyManager>のデータの関連付け</xref:System.Windows.Forms.CurrencyManager>。 クエリを実行する場合、`Position`のプロパティ、 <xref:System.Windows.Forms.CurrencyManager>、バインディングされるは、現在のレコードを報告するよう<xref:System.Windows.Forms.TextBox>コントロール</xref:System.Windows.Forms.TextBox></xref:System.Windows.Forms.CurrencyManager>。 次のコード例では、<xref:System.Windows.Forms.TextBox>コントロールにバインドする、`FirstName`の列、`Customers`テーブルに対して、`dataSet1`上にあるフォームの BindingContext を介してデータセット</xref:System.Windows.Forms.TextBox>。      ```vb#   TextBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;)      ```      ```c#   textBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);      ```      ```cpp   textBox1->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);   ```2 番目を追加することができます<xref:System.Windows.Forms.TextBox>コントロール (`TextBox2`) をフォームにバインドし、`LastName`の列、`Customers`同じデータセット内のテーブル</xref:System.Windows.Forms.TextBox>。 BindingContext は最初のバインドの認識 (`TextBox1`に`Customers.FirstName`) で使用する同じため、<xref:System.Windows.Forms.CurrencyManager>両方のテキスト ボックスが、同じデータセットにバインドされているように、(`DataSet1`).</xref:System.Windows.Forms.CurrencyManager>      ```vb#   TextBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;)      ```      ```c#   textBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);      ```      ```cpp   textBox2->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);   ```バインドする場合`TextBox2`別のデータセットに BindingContext を作成および<xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager>&2; 台目の管理       設定する方法を統一することが重要、<xref:System.Windows.Forms.ListControl.DataSource%2A>と<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティですそれ以外の場合、BindingContext 作成複数の通貨にエラーが発生する、同じデータセットに、管理者。</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DataSource%2A> 。 次のコード例では、プロパティと、関連付けられた BindingContext オブジェクトを設定するいくつかの方法を示します。 コード全体で一貫性のある限りは、次のいずれかを使用してプロパティを設定できます。      ```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = &quot;Customers.FirstName&quot;   Me.BindingContext(dataSet1, &quot;Customers&quot;).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = &quot;Customers.FirstName&quot;;   this.BindingContext[dataSet1, &quot;Customers&quot;].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = &quot;Customers.FirstName&quot;;   this->BindingContext->get_Item(dataSet1, &quot;Customers&quot;)->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = &quot;FirstName&quot;   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = &quot;FirstName&quot;;   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = &quot;FirstName&quot;;   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE]> <xref:System.Windows.Forms.BindingSource>。</xref:System.Windows.Forms.BindingSource>を通じてほとんどの Windows フォーム アプリケーションのバインドします。 <xref:System.Windows.Forms.BindingSource>コンポーネントをカプセル化、<xref:System.Windows.Forms.CurrencyManager>を公開し、<xref:System.Windows.Forms.CurrencyManager>プログラミング インターフェイスです</xref:System.Windows.Forms.CurrencyManager></xref:System.Windows.Forms.CurrencyManager></xref:System.Windows.Forms.BindingSource>。 使用する場合、<xref:System.Windows.Forms.BindingSource>バインディングの場合は、によって公開されるメンバーを使用する必要があります、 <xref:System.Windows.Forms.BindingSource>&quot;currency&quot;を操作する (つまり、 `Position`) BindingContext を通過するのではなく</xref:System.Windows.Forms.BindingSource></xref:System.Windows.Forms.BindingSource>。"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources. The BindingContext is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_7_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_7_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      public class BindingContext : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>クラスです。"
  remarks: "複数の<xref:System.Windows.Forms.BindingManagerBase>新しい<xref:System.Windows.Forms.BindingContext><xref:System.Windows.Forms.Control.BindingContext%2A><xref:System.Windows.Forms.Control>クラス</xref:System.Windows.Forms.Control>を継承するオブジェクトのプロパティ</xref:System.Windows.Forms.Control.BindingContext%2A>を設定し</xref:System.Windows.Forms.BindingContext>同じデータ ソースのインスタンスが作成</xref:System.Windows.Forms.BindingManagerBase>する場合 たとえば、2 つある<xref:System.Windows.Forms.BindingManagerBase>オブジェクト (から&2; つの異なる<xref:System.Windows.Forms.BindingContext>オブジェクト)、設定することができます、<xref:System.Windows.Forms.BindingManagerBase.Position%2A>の各プロパティ<xref:System.Windows.Forms.BindingManagerBase>ごとに異なる値</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingManagerBase.Position%2A></xref:System.Windows.Forms.BindingContext></xref:System.Windows.Forms.BindingManagerBase>。 これにより、同じデータ ソースから別の値を表示するデータ バインド コントロールの各セットです。"
  example:
  - "The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control. `GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class). The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member. The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.  \n  \n [!code-cs[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_17_1.cs)]\n [!code-cpp[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_17_1.cpp)]\n [!code-vb[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_17_1.vb)]"
  syntax:
    content: public BindingContext ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  id: Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "追加、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>をコレクションに特定のデータ ソースに関連付けられています。"
  syntax:
    content: protected void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>に関連付けられている、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref></xref:System.Object> 。"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  id: AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "追加、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>をコレクションに特定のデータ ソースに関連付けられています。"
  syntax:
    content: protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "関連付けられているオブジェクト、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>です。"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataSource</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>listManager</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Clear
  id: Clear
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "いずれかのコレクションをクリア<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>オブジェクト。"
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.ClearCore
  id: ClearCore
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションをクリアします。"
  syntax:
    content: protected virtual void ClearCore ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.ClearCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "常に発生させる、<xref:System.NotImplementedException>を処理するとき</xref:System.NotImplementedException>。"
  remarks: "CollectionChanged イベントは廃止されておりを生成常に、<xref:System.NotImplementedException>を処理するとき</xref:System.NotImplementedException>。 イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "追加します。"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "すべてのケースで発生します。"
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>が含まれています、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定されたデータ ソースに関連付けられています。"
  remarks: "参照してください、<xref:System.Windows.Forms.Binding>利用できるデータ ソースとコントロールとデータ ソース間のバインディングの作成に関する情報の一覧のクラス</xref:System.Windows.Forms.Binding>。       参照してください、<xref:System.Windows.Forms.BindingContext.Item%2A>を取得する方法については、プロパティ、<xref:System.Windows.Forms.BindingManagerBase>データ ソースのみを使用します</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.Item%2A>。"
  example:
  - "The following code example uses the Contains method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form. The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.  \n  \n [!code-vb[Classic BindingContext.Contains Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_9_1.vb)]\n [!code-cs[Classic BindingContext.Contains Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_9_1.cs)]\n [!code-cpp[Classic BindingContext.Contains Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_9_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>データ ソースを表す</xref:System.Object>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 、指定されたを含む<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  id: Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>が含まれています、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定したデータ ソースとデータ メンバーに関連付けられています。"
  remarks: "参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラス</xref:System.Windows.Forms.Binding>。       参照してください、<xref:System.Windows.Forms.BindingContext.Item%2A>を取得する方法については、プロパティ、<xref:System.Windows.Forms.BindingManagerBase>データ ソースおよびデータ メンバーを使用します</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.Item%2A>。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.  \n  \n [!code-cs[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_18_1.cs)]\n [!code-vb[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_18_1.vb)]\n [!code-cpp[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_18_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource, string dataMember);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>データ ソースを表す</xref:System.Object>。"
    - id: dataMember
      type: System.String
      description: "特定の解決に必要な情報<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> 、指定されたを含む<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションは読み取り専用であるかどうかを示す値を取得します。"
  remarks: "このプロパティはから派生<xref:System.Collections.ICollection>、常にオーバーライドと`false`</xref:System.Collections.ICollection>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションが読み取り専用の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定されたデータ ソースに関連付けられています。"
  remarks: "このオーバー ロードを使用<xref:System.Windows.Forms.BindingManagerBase>ナビゲーション パスは必要ありません</xref:System.Windows.Forms.BindingManagerBase> たとえば場合、<xref:System.Windows.Forms.BindingManagerBase>のセットを管理<xref:System.Windows.Forms.Binding>使用するオブジェクト、<xref:System.Collections.ArrayList>または<xref:System.Data.DataTable>として、 <xref:System.Windows.Forms.Binding.DataSource%2A>、ナビゲーション パスは必要ありません</xref:System.Windows.Forms.Binding.DataSource%2A></xref:System.Data.DataTable></xref:System.Collections.ArrayList></xref:System.Windows.Forms.Binding></xref:System.Windows.Forms.BindingManagerBase>。      > [!NOTE] >、項目のプロパティは常に返します、 <xref:System.Windows.Forms.BindingManagerBase>、返すことはありませんし`null`</xref:System.Windows.Forms.BindingManagerBase>。       参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラス</xref:System.Windows.Forms.Binding>。"
  example:
  - "The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic BindingContext.this Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_30_1.cs)]\n [!code-cpp[Classic BindingContext.this Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_30_1.cpp)]\n [!code-vb[Classic BindingContext.this Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_30_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "特定の関連付けられているデータ ソース<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>です。"
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "A <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>の指定したデータ ソース。"
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  id: Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定したデータ ソースとデータ メンバーに関連付けられています。"
  remarks: "このオーバー ロードするときに使用する、<xref:System.Windows.Forms.BindingManagerBase>のセットを管理<xref:System.Windows.Forms.Binding>オブジェクト データ ソースが複数のオブジェクトが含まれます</xref:System.Windows.Forms.Binding></xref:System.Windows.Forms.BindingManagerBase>。 たとえば、<xref:System.Data.DataSet>いくつかを含めることができます<xref:System.Data.DataTable>によってリンクされているオブジェクト<xref:System.Data.DataRelation>オブジェクト</xref:System.Data.DataRelation></xref:System.Data.DataTable></xref:System.Data.DataSet>。 このような場合は、ナビゲーション パス対応が必要には、<xref:System.Windows.Forms.BindingContext>正しい<xref:System.Windows.Forms.BindingManagerBase>。</xref:System.Windows.Forms.BindingManagerBase>を返す</xref:System.Windows.Forms.BindingContext>      > [!NOTE] >、項目のプロパティは常に返します、<xref:System.Windows.Forms.BindingManagerBase>ときに、`dataMember`パラメーターが無効です</xref:System.Windows.Forms.BindingManagerBase>。 返されません`null`です。       参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラス</xref:System.Windows.Forms.Binding>。       場合、必要な<xref:System.Windows.Forms.BindingManagerBase>管理の一覧は、ナビゲーション パスは一覧で終わってもする必要があります</xref:System.Windows.Forms.BindingManagerBase>。 たとえば、次の c# コードがバインドされて、<xref:System.Windows.Forms.TextBox>の orders テーブルで、注文日を制御します</xref:System.Windows.Forms.TextBox>。 ナビゲーション パスが含まれる、 <xref:System.Data.DataTable.TableName%2A>、 <xref:System.Data.DataRelation.RelationName%2A>、 <xref:System.Data.DataColumn.ColumnName%2A></xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> 。 ただし、<xref:System.Windows.Forms.BindingManagerBase>のみを使用して取得する必要があります、<xref:System.Data.DataTable.TableName%2A>と<xref:System.Data.DataRelation.RelationName%2A>(これは、リストに解決).</xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> </xref:System.Windows.Forms.BindingManagerBase>      ```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (&quot;Text&quot;, dataSet1, &quot;Customers.custToOrders.OrderDate&quot;);   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, &quot;Customers.custToOrders&quot;];   ```<xref:System.Windows.Forms.BindingManagerBase><xref:System.Windows.Forms.Binding>およびナビゲーション パスのみを変更</xref:System.Windows.Forms.Binding>と同じデータ ソースを使用する必要があります</xref:System.Windows.Forms.BindingManagerBase>を返す場合       使用して、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドかどうかを必要な<xref:System.Windows.Forms.BindingManagerBase>既に存在します</xref:System.Windows.Forms.BindingManagerBase></xref:System.Windows.Forms.BindingContext.Contains%2A>。"
  example:
  - "The following code example demonstrates how to use the Item to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding. It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/p-system.windows.forms.b_17_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/p-system.windows.forms.b_17_1.cs)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "特定の関連付けられているデータ ソース<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>です。"
    - id: dataMember
      type: System.String
      description: "特定の解決の情報を含むナビゲーション パス<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref>です。"
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定したデータ ソースとデータ メンバーにします。"
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "指定した<code> dataMember </code>データ ソース内に存在しません。"
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.BindingContext.CollectionChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnCollectionChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.BindingContext.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "削除、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定されたデータ ソースに関連付けられています。"
  syntax:
    content: protected void Remove (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "データ ソースに関連付けられている、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>を削除します。"
  overload: System.Windows.Forms.BindingContext.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  id: RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "削除、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>指定されたデータ ソースに関連付けられています。"
  syntax:
    content: protected virtual void RemoveCore (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "データ ソースに関連付けられている、 <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>を削除します。"
  overload: System.Windows.Forms.BindingContext.RemoveCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションのインデックスを開始位置を指定した配列にコレクションの要素をコピーします。"
  remarks: ''
  example:
  - >-
    [!code-cs[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/csharp/030fb284-4e33-401e-88b7-_1.cs)]
     [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/cpp/030fb284-4e33-401e-88b7-_1.cpp)]
     [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/visualbasic/030fb284-4e33-401e-88b7-_1.vb)]
  syntax:
    content: void ICollection.CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "<xref:System.Array>にコピーする</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "コレクションのインデックスからコピーを開始します。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "合計数を取得<xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref>によって管理されるオブジェクト、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/visualbasic/24e4ccaa-040d-4b41-b443-_1.vb)]\n [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/cpp/24e4ccaa-040d-4b41-b443-_1.cpp)]\n [!code-cs[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/csharp/24e4ccaa-040d-4b41-b443-_1.cs)]"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "によって管理されるデータ ソースの数、 <xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションが同期されているかどうかを示す値を取得します。"
  remarks: "このプロパティはから派生<xref:System.Collections.ICollection>、常にオーバーライドと`false`</xref:System.Collections.ICollection>。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションがスレッド セーフである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "同期 (スレッド セーフティ) に使用するオブジェクトを取得します。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "このプロパティはから派生<xref:System.Collections.ICollection>、常にオーバーライドと<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションの列挙子を取得します。"
  remarks: "<xref:System.Collections.IEnumerator>メソッドでは、 <xref:System.Windows.Forms.BindingContext>。</xref:System.Windows.Forms.BindingContext>が管理するコレクションを反復処理することができます IEnumerable.GetEnumerator によって返される</xref:System.Collections.IEnumerator>"
  example:
  - "The following code example uses the IEnumerable.GetEnumerator method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-cs[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/csharp/dec1c1ce-5dab-481d-86dd-_1.cs)]\n [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/cpp/dec1c1ce-5dab-481d-86dd-_1.cpp)]\n [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/visualbasic/dec1c1ce-5dab-481d-86dd-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>のコレクション</xref:System.Collections.IEnumerator>。"
  overload: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  id: UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "関連付けます、 <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>を新しい<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>です。"
  remarks: "このメソッドを実装するコンポーネントのバインドを更新、<xref:System.Windows.Forms.IBindableComponent>ときに、その<xref:System.Windows.Forms.BindingContext>変更します</xref:System.Windows.Forms.BindingContext></xref:System.Windows.Forms.IBindableComponent>。"
  syntax:
    content: public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);
    parameters:
    - id: newBindingContext
      type: System.Windows.Forms.BindingContext
      description: "新しい<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>に関連付ける、 <xref href=&quot;System.Windows.Forms.Binding&quot;></xref>です。"
    - id: binding
      type: System.Windows.Forms.Binding
      description: "<xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>に関連付ける新しい<xref href=&quot;System.Windows.Forms.BindingContext&quot;></xref>です。"
  overload: System.Windows.Forms.BindingContext.UpdateBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.BindingContext.#ctor
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingManagerBase
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerBase
  nameWithType: BindingManagerBase
  fullName: System.Windows.Forms.BindingManagerBase
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingContext.Clear
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
- uid: System.Windows.Forms.BindingContext.ClearCore
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Binding
  parent: System.Windows.Forms
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Forms.Binding
- uid: System.Windows.Forms.BindingContext.#ctor*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext.BindingContext
- uid: System.Windows.Forms.BindingContext.Add*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add
  nameWithType: BindingContext.Add
- uid: System.Windows.Forms.BindingContext.AddCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore
  nameWithType: BindingContext.AddCore
- uid: System.Windows.Forms.BindingContext.Clear*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear
  nameWithType: BindingContext.Clear
- uid: System.Windows.Forms.BindingContext.ClearCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore
  nameWithType: BindingContext.ClearCore
- uid: System.Windows.Forms.BindingContext.Contains*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains
  nameWithType: BindingContext.Contains
- uid: System.Windows.Forms.BindingContext.IsReadOnly*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item
  nameWithType: BindingContext.Item
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged
  nameWithType: BindingContext.OnCollectionChanged
- uid: System.Windows.Forms.BindingContext.Remove*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove
  nameWithType: BindingContext.Remove
- uid: System.Windows.Forms.BindingContext.RemoveCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore
  nameWithType: BindingContext.RemoveCore
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding
  nameWithType: BindingContext.UpdateBinding
