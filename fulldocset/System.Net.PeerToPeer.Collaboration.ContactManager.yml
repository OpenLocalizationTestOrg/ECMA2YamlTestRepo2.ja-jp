### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.ContactManager
  id: ContactManager
  children:
  - System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  - System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged
  - System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  - System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)
  - System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted
  - System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  - System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.Collaboration.ContactManager.Dispose
  - System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts
  - System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact
  - System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged
  - System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged
  - System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged
  - System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged
  - System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  langs:
  - csharp
  name: ContactManager
  nameWithType: ContactManager
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> Windows アドレス帳で保持するオブジェクト。"
  remarks: "このクラスには、パブリック コンス トラクターがないへの参照が、<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>クラス</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>によって返されるため       アドレス帳に関連付けられている<xref:System.Net.PeerToPeer.Collaboration.PeerContact>ホスト ピアとリモートのピアに関連付けられている管理も含まれます</xref:System.Net.PeerToPeer.Collaboration.PeerContact>。  どちらのコンピューターと連携して他のピアです。ピアがリモートのピアがホストのピアではなくローカルの場合は、ホストのピアの ContactManager に追加できます。 など、ContactManager で特定の操作がクラス<xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A>と<xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>リモート ピアの Windows アドレス帳で実行されている関連する操作を相互に関連付けたり、</xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A> </xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> 。       ホストのピアがのこの永続的ストレージへのアクセスを持つ<xref:System.Net.PeerToPeer.Collaboration.PeerContact>については、参加しているつもりピア アプリケーションと関連付けることができます</xref:System.Net.PeerToPeer.Collaboration.PeerContact>。 A <xref:System.Net.PeerToPeer.Collaboration.PeerApplication>ContactManager 永続的なストア、コンピューター上のユーザーとして自分自身を識別できます</xref:System.Net.PeerToPeer.Collaboration.PeerApplication>。"
  example:
  - "The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local ContactManager:  \n  \n [!code-cs[NCLPNRPContacts#3](~/add/codesnippet/csharp/t-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: 'public sealed class ContactManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  id: AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: AddContact(PeerContact)
  nameWithType: ContactManager.AddContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(PeerContact)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "指定した追加<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>を<xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>ローカル ピアのです。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  example:
  - "The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  \n  \n [!code-cs[NCLPNRPContacts#3](~/add/codesnippet/csharp/81d16a23-573c-4055-a7f3-_1.cs)]"
  syntax:
    content: public void AddContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);
    parameters:
    - id: peerContact
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>を追加するインスタンス<xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>によって指定された<code> peerContact </code>既に存在します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerContact</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "指定した<code> peerContact </code>は破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>によって指定された<code> peerContact </code>シリアル化された XML 形式から再構成するされませんでした。      ローカルのピアを追加できません、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>インスタンスが構築されます。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged
  id: ApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: ApplicationChanged
  nameWithType: ContactManager.ApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "発生するたびに、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>関連付け、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>で、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>が変更されました。"
  remarks: "このメソッドには、呼び出し元のピアのアドレス帳によって発行されたアプリケーションのみを返します。       このイベントを発生させることができます、リモートのピアの現在のユーザー リモート ピアのコラボレーション イベントにサブスクライブする必要があります。 使用してサブスクリプションには、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>メソッド</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs> ApplicationChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出し元のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  id: CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: CreateContact(PeerNearMe)
  nameWithType: ContactManager.CreateContact(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(PeerNearMe)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "作成、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 、指定されたインスタンス<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>オブジェクト。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact CreateContact (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe);
    parameters:
    - id: peerNearMe
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>に関連付ける新しい<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>インスタンス。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 、指定されたインスタンス<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerNearMe</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-リモートのピアの連絡先のマネージャーが渡された<code> peerNearMe </code>に到達できませんでした、または連絡先がそこから読み取れませんでした。      - <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>に渡された<code> peerNearMe </code>設定されているエンドポイントがありません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)
  id: CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: CreateContactAsync(PeerNearMe,Object)
  nameWithType: ContactManager.CreateContactAsync(PeerNearMe,Object)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(PeerNearMe,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "指定された連絡先のインスタンスを作成<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>オブジェクト。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public void CreateContactAsync (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken);
    parameters:
    - id: peerNearMe
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>に関連付ける新しい<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>インスタンス。"
    - id: userToken
      type: System.Object
      description: "ユーザー定義<xref:System.Object>CreateContactAsync 操作に関する情報を格納します</xref:System.Object>。 識別用の非同期操作のコールバックに渡されます。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>userToken</code>既に存在し、使用されています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerNearMe</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: '-指定した<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>インスタンスに設定されているエンドポイントがありません。'
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted
  id: CreateContactCompleted
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: CreateContactCompleted
  nameWithType: ContactManager.CreateContactCompleted
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "発生するたびに、<xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact*>メソッドが完了した</xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact*>。"
  remarks: "このイベントが発生したときに、<xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A>メソッドが完了した</xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A>。 場合にも発生、<xref:System.Net.PeerToPeer.Collaboration.ContactManager>操作がエラーで完了したかが取り消されました</xref:System.Net.PeerToPeer.Collaboration.ContactManager>。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs> CreateContactCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出し元のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  id: DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: DeleteContact(PeerContact)
  nameWithType: ContactManager.DeleteContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(PeerContact)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "指定された削除<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>から、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>ローカル ピアのです。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  example:
  - "The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  \n  \n [!code-cs[NCLPNRPContacts#6](~/add/codesnippet/csharp/db10d948-c4c4-4e4d-b7f8-_1.cs)]"
  syntax:
    content: public void DeleteContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);
    parameters:
    - id: peerContact
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>から削除する、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerContact</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)
  id: DeleteContact(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: DeleteContact(PeerName)
  nameWithType: ContactManager.DeleteContact(PeerName)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "削除、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref> 、指定したに関連付けられている<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>から、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>ローカル ピアの</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  example:
  - "The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  \n  \n [!code-cs[NCLPNRPContacts#6](~/add/codesnippet/csharp/273f7c06-3678-44ac-8469-_1.cs)]"
  syntax:
    content: public void DeleteContact (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>から削除する、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref></xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> 。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>に関連付けられている<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>連絡先のマネージャーで見つかりませんでした</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが既に<xref:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose*>以前の呼び出しし、今後実行されるには使用できません</xref:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose*>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "完了できません<xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact*>操作。</xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact*> 。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: ContactManager.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>オブジェクト。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)
  id: GetContact(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: GetContact(PeerName)
  nameWithType: ContactManager.GetContact(PeerName)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "返します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>指定<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*></xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>オブジェクト。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact GetContact (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>を取得する</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>指定された<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>関連付け"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>オブジェクトは破棄されました</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-連絡先は見つかりません<xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。      指定された<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>の連絡先を取得できません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts
  id: GetContacts
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: GetContacts()
  nameWithType: ContactManager.GetContacts()
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "返します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContactCollection&quot;> </xref>内のすべての連絡先を格納している、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>リモート ピアのです。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  example:
  - "The following code example illustrates how to retrieve a <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> representing the contacts contained in the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  \n  \n [!code-cs[NCLPNRPContacts#3](~/add/codesnippet/csharp/m-system.net.peertopeer._3_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContactCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContactCollection&quot;></xref>内のすべての連絡先を格納している、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>リモート ピアのです。       連絡先のマネージャーが空の場合、サイズのコレクション ゼロ (0) が返されます。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "このメソッドを列挙しようとすると、無効な値が返された、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>このピア コレクションに接続します。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact
  id: LocalContact
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: LocalContact
  nameWithType: ContactManager.LocalContact
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>ローカル ピアを表すです。"
  remarks: "このプロパティの既定値は、指定しない限り、`null`です。       このプロパティを使用して、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerContact LocalContact { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>ローカル ピアを表すインスタンス。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged
  id: NameChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: NameChanged
  nameWithType: ContactManager.NameChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "発生するたびに、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>で、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>が変更されました</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。"
  remarks: "関連付けられたコールバックが新しい<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>への参照を提供します。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs> NameChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.NameChangedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出し元のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged
  id: ObjectChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: ObjectChanged
  nameWithType: ContactManager.ObjectChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "連絡先内のオブジェクトの登録されているときに発生<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>オブジェクトが変更されています。"
  remarks: "このイベントを発生させることができます、リモートのピアの現在のユーザー ホスト ピアのコラボレーション イベントにサブスクライブする必要があります。 サブスクリプションは、PeerContact によって実現されます<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>メソッド。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs> ObjectChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged
  id: PresenceChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: PresenceChanged
  nameWithType: ContactManager.PresenceChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ときに発生の状態、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>で、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;> </xref>が変更されました。"
  remarks: "このイベントを発生させることができます、リモートのピアの現在のユーザー ホスト ピアのコラボレーション イベントにサブスクライブする必要があります。 使用してサブスクリプションには、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>メソッド</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs> PresenceChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged
  id: SubscriptionListChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: SubscriptionListChanged
  nameWithType: ContactManager.SubscriptionListChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "サブスクライブされた連絡先の一覧が変更されたときに発生します。"
  remarks: "サブスクリプションは、プロセスごとではなく、アプリケーション ドメインごとまたはユーザーごとには、以降、ホストで実行されている別のアプリケーションはこのイベントを発生させるで場合もあります。       このイベントは、 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs> SubscriptionListChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: ContactManager.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "すべてのイベントを非同期操作の結果としては起動しませんが<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>。</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>固有の仕様を作成したスレッドでコールバック関連付けられているイベント ハンドラーがこのプロパティの値が設定されている場合"
  remarks: "このプロパティの既定の設定値は`null`システムのスレッド プールのスレッドですべてのイベント ハンドラーを呼び出すことを知らせます。       このプロパティは通常に設定する UI 要素など、<xref:System.Windows.Forms.Form>インスタンス</xref:System.Windows.Forms.Form>。"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;> </xref>インターフェイスし、この型のインスタンスによって作成されたスレッドでイベント ハンドラーの同期に使用します。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出し元のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  id: UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  langs:
  - csharp
  name: UpdateContact(PeerContact)
  nameWithType: ContactManager.UpdateContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(PeerContact)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "関連付けられているデータを更新、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>です。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public void UpdateContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);
    parameters:
    - id: peerContact
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>を更新します。"
  overload: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '-   <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>含まれない<xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerContact</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "UpdateContact 操作を完了できません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: AddContact(PeerContact)
  nameWithType: ContactManager.AddContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(PeerContact)
- uid: System.Net.PeerToPeer.Collaboration.PeerContact
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerContact
  nameWithType: PeerContact
  fullName: System.Net.PeerToPeer.Collaboration.PeerContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: ApplicationChanged
  nameWithType: ContactManager.ApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ApplicationChangedEventArgs>
  nameWithType: EventHandler<ApplicationChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
    name: ApplicationChangedEventArgs
    nameWithType: ApplicationChangedEventArgs
    fullName: ApplicationChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: CreateContact(PeerNearMe)
  nameWithType: ContactManager.CreateContact(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(PeerNearMe)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerNearMe
  nameWithType: PeerNearMe
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: CreateContactAsync(PeerNearMe,Object)
  nameWithType: ContactManager.CreateContactAsync(PeerNearMe,Object)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(PeerNearMe,Object)
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: CreateContactCompleted
  nameWithType: ContactManager.CreateContactCompleted
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreateContactCompletedEventArgs>
  nameWithType: EventHandler<CreateContactCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs
    name: CreateContactCompletedEventArgs
    nameWithType: CreateContactCompletedEventArgs
    fullName: CreateContactCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: DeleteContact(PeerContact)
  nameWithType: ContactManager.DeleteContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(PeerContact)
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: DeleteContact(PeerName)
  nameWithType: ContactManager.DeleteContact(PeerName)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(PeerName)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: Dispose()
  nameWithType: ContactManager.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: GetContact(PeerName)
  nameWithType: ContactManager.GetContact(PeerName)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(PeerName)
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: GetContacts()
  nameWithType: ContactManager.GetContacts()
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts()
- uid: System.Net.PeerToPeer.Collaboration.PeerContactCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerContactCollection
  nameWithType: PeerContactCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerContactCollection
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: LocalContact
  nameWithType: ContactManager.LocalContact
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: NameChanged
  nameWithType: ContactManager.NameChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.NameChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<NameChangedEventArgs>
  nameWithType: EventHandler<NameChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.NameChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.NameChangedEventArgs
    name: NameChangedEventArgs
    nameWithType: NameChangedEventArgs
    fullName: NameChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: ObjectChanged
  nameWithType: ContactManager.ObjectChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ObjectChangedEventArgs>
  nameWithType: EventHandler<ObjectChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs
    name: ObjectChangedEventArgs
    nameWithType: ObjectChangedEventArgs
    fullName: ObjectChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: PresenceChanged
  nameWithType: ContactManager.PresenceChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PresenceChangedEventArgs>
  nameWithType: EventHandler<PresenceChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs
    name: PresenceChangedEventArgs
    nameWithType: PresenceChangedEventArgs
    fullName: PresenceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: SubscriptionListChanged
  nameWithType: ContactManager.SubscriptionListChanged
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SubscriptionListChangedEventArgs>
  nameWithType: EventHandler<SubscriptionListChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs
    name: SubscriptionListChangedEventArgs
    nameWithType: SubscriptionListChangedEventArgs
    fullName: SubscriptionListChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: SynchronizingObject
  nameWithType: ContactManager.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: UpdateContact(PeerContact)
  nameWithType: ContactManager.UpdateContact(PeerContact)
  fullName: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(PeerContact)
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.AddContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: AddContact
  nameWithType: ContactManager.AddContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: CreateContact
  nameWithType: ContactManager.CreateContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: CreateContactAsync
  nameWithType: ContactManager.CreateContactAsync
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: DeleteContact
  nameWithType: ContactManager.DeleteContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: Dispose
  nameWithType: ContactManager.Dispose
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: GetContact
  nameWithType: ContactManager.GetContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: GetContacts
  nameWithType: ContactManager.GetContacts
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: LocalContact
  nameWithType: ContactManager.LocalContact
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: SynchronizingObject
  nameWithType: ContactManager.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact*
  parent: System.Net.PeerToPeer.Collaboration.ContactManager
  isExternal: false
  name: UpdateContact
  nameWithType: ContactManager.UpdateContact
