### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy
  id: RegistryProxy
  children:
  - Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  - Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  - Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  - Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  langs:
  - csharp
  name: RegistryProxy
  nameWithType: RegistryProxy
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy
  type: Class
  summary: "プロパティとレジストリを操作するためのメソッドを提供します。"
  remarks: "これらのプロパティを使用するのにはからの読み取りと書き込みのアクセス許可が必要、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 完全な信頼で実行されるコード (既定のセキュリティ ポリシーは、ユーザーのローカル ハード ドライブにインストールされている任意のコード)、レジストリにアクセスするために必要なアクセス許可を持っています。 詳細については、<xref:System.Security.Permissions.RegistryPermission>クラス</xref:System.Security.Permissions.RegistryPermission>を参照してください。       次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリからデータを読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a message box.  \n  \n [!code-vb[VbVbalrMyRegistry#8](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class RegistryProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  id: ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_CLASSES_ROOT&quot; name=&quot;HKEY_CLASSES_ROOT&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_CLASSES_ROOT`Windows でファイルの関連付けに関する情報を格納する、主に使用します。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な権限のみを付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the names of the subkeys for the `ClassesRoot` registry key and adds them to `ListBox1`.  \n  \n [!code-vb[VbVbalrMyRegistry#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._0_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` in your project."
  syntax:
    content: public Microsoft.Win32.RegistryKey ClassesRoot { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  id: CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_CURRENT_CONFIG&quot; name=&quot;HKEY_CURRENT_CONFIG&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_CURRENT_CONFIG`コンピューターのデバイスの設定を格納する、主に使用します。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な権限のみを付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the subkey `MyDeviceSettings`.  \n  \n [!code-vb[VbVbalrMyRegistry#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._48_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentConfig { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  id: CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_CURRENT_USER&quot; name=&quot;HKEY_CURRENT_USER&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_CURRENT_USER`Windows で、色やフォントなどのユーザーごとの設定を格納する、主に使用します。 キーは、ユーザーによって異なります。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な最小限の権限を付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey `Software\\MyCompany\\Preferences\\UserData`.  \n  \n [!code-vb[VbVbalrMyRegistry#2](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._47_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CurrentUser { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  id: DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_DYNDATA&quot; name=&quot;HKEY_DYNDATA&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_DYNDATA`仮想デバイス ドライバーが使用するなどの動的なレジストリ データを格納するために使用し、Windows 95/98 システムでのみサポートされます。 Windows 95/98 システムから返されたキーの任意のメソッドを呼び出して`Registry.DynData`など`CreateSubKey`、 `DeleteSubKey`、 `GetSubKeyCount`、`GetValueCount`など、 <xref:System.IO.IOException>.</xref:System.IO.IOException>がスローされます       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な最小限の権限を付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the subkey tree `Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey DynData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  id: GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "レジストリ キーから値を取得します。"
  remarks: "`valueName`小文字は区別されません。       レジストリ キーには、任意の名前に関連付けられていない&1; つの値を含めることができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を取得するには、null または空の文字列のいずれかを指定します (&quot;&quot;) の`valueName`します。       次の表に、関連するタスクの例については、`GetValue`メソッドです。      ||参照してください |  |--------|---------|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the value `Name` from `HKEY_CURRENT_USER\\Software\\MyApp` and displays it in a `MessageBox`.  \n  \n [!code-vb[VbVbalrMyRegistry#9](~/add/codesnippet/visualbasic/9a93dcf8-9de6-432f-a595-_1.vb)]"
  syntax:
    content: public object GetValue (string keyName, string valueName, object defaultValue);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 元の値を取得するキー。 必須。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 取得する値。 必須。"
    - id: defaultValue
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 既定値を値が存在しない場合に指定します。 必須。"
    return:
      type: System.Object
      description: "レジストリ キーから値を取得します。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が削除対象としてマークされています。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>有効なレジストリ ルートで始まらないです。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  id: LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_LOCAL_MACHINE&quot; name=&quot;HKEY_LOCAL_MACHINE&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_LOCAL_MACHINE`通常 Windows ユーザーを変化しない設定の格納に使用されます。 コンピューターのすべてのユーザーは、このキーを共有します。 5 つサブキー (`Hardware`、 `SAM`、 `Security`、 `Software`、および`System`)、ローカル コンピューターの構成データを保持します。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な最小限の権限を付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the subkey `Software\\MyCompany\\Preferences` and sets the value `FontColor` to `\"red\"`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._97_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey LocalMachine { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  id: PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_PERFORMANCE_DATA&quot; name=&quot;HKEY_PERFORMANCE_DATA&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_PERFORMANCE_DATA`ソフトウェア コンポーネントに関するパフォーマンス情報へのアクセスに使用されます。 各ソフトウェア コンポーネントがインストールされているが実行中に、カウンター データを書き込むときに、そのオブジェクトとカウンターのキーが作成されます。 レジストリがへのアクセスに使用されますが、このデータはレジストリで、格納されません。 使用してレジストリ関数を呼び出す代わりに、`HKEY_PERFORMANCE_DATA`により、システムが適切なシステム オブジェクト マネージャーからデータを収集します。       このキーは Windows 98 システム; に存在しません呼び出し元以外の使用を`Name`メソッドでは、 <xref:System.IO.IOException>.</xref:System.IO.IOException>をスローします。       このキー通常書き込むことができません。<xref:System.IO.IOException>。</xref:System.IO.IOException>がスローされますのサブキーを作成しようとしています。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な最小限の権限を付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |説明 |  |-----------|-----------------|  |AllAccess |作成、読み取り、およびレジストリ変数への書き込みアクセス |。  |作成 |レジストリ変数へのアクセスを作成します |。  |NoAccess |レジストリ変数へのアクセスなし |。  |読み取り |レジストリ変数への読み取りアクセス |。  |書き込む |レジストリ変数への書き込みアクセス |。      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      ||参照してください |  |--------|---------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example gets the value `ThisSoftwar`e from the `MyCompany` subkey.  \n  \n [!code-vb[VbVbalrMyRegistry#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._57_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey PerformanceData { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  id: SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "レジストリ キーに値を書き込みます。"
  remarks: "指定されたキーまたは値が存在しない場合は作成されます。       関連するタスクの例をここでは、`My.Computer.Registry.SetValue`メソッドです。      ||参照してください |  |--------|---------|  |レジストリ キーの値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/fde3d5e5-73de-4529-936f-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 書き込まれるキーの名前。 必須。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 書き込まれる値の名前です。 必須。"
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 書き込む値。 必須。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>有効なレジストリ ルートで始まらないです。       - または -<code>valueName</code>が許可された最大の長さ (255 文字) を超えています。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>は読み取り専用と、したがってできません書き込みができませんたとえば、ルート レベル ノード、または書き込みアクセスで開かれていません.。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを変更するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "レジストリ キーに値を書き込みます。"
  remarks: "指定されたキーまたは値が存在しない場合は作成されます。       関連するタスクの例をここでは、`My.Computer.Registry.SetValue`メソッドです。      ||参照してください |  |--------|---------|  |レジストリ キーの値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example sets the value `FontColor` to \"red\" in the key `HKEY_LOCAL_MACHINE\\Software\\MyCompany\\Preferences`.  \n  \n [!code-vb[VbVbalrMyRegistry#3](~/add/codesnippet/visualbasic/a630d4af-e057-4eda-b2b5-_1.vb)]"
  syntax:
    content: public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: keyName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 書き込まれるキーの名前。 必須。"
    - id: valueName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 書き込まれる値の名前です。 必須。"
    - id: value
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. 書き込む値。 必須。"
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "<xref href=&quot;Microsoft.Win32.RegistryValueKind&quot;></xref>. 必須。"
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyName</code>有効なレジストリ ルートで始まらないです。       - または -<code>keyName</code>が許可された最大の長さ (255 文字) を超えています。       - または - の種類<code>value</code>で指定されたレジストリ データ型と一致しません<code>valueKind</code>データが正しく変換できないためです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>は読み取り専用、および、したがってできません書き込みができません。 たとえば、ルート レベル ノード、または書き込みアクセスで開かれていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを変更するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  id: Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  langs:
  - csharp
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "返します、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>へのアクセスを提供する型<xref uid=&quot;langword_csharp_HKEY_USERS&quot; name=&quot;HKEY_USERS&quot; href=&quot;&quot;></xref>です。"
  remarks: "`HKEY_USERS`初めてユーザーの既定の設定を格納する、主に使用します。       <xref:System.Security.Permissions.RegistryPermission>では、クラス、<xref:System.Security.Permissions>名前空間は、レジストリ変数へのアクセスを制御します</xref:System.Security.Permissions></xref:System.Security.Permissions.RegistryPermission>。 メモリ位置に格納しないレジストリ変数にないコードをここで<xref:System.Security.Permissions.RegistryPermission>にアクセスできます</xref:System.Security.Permissions.RegistryPermission>。 同様に、アクセス許可を付与する場合は、ジョブの実行に必要な最小限の権限を付与します。       レジストリのアクセス許可のアクセス値は、<xref:System.Security.Permissions.RegistryPermissionAccess>列挙体です</xref:System.Security.Permissions.RegistryPermissionAccess>。 次の表では、そのメンバーについて説明します。      |値 |レジストリ変数へのアクセス |  |-----------|----------------------------------|  |AllAccess |作成、読み取り、および書き込み |  |作成 |作成 |  |NoAccess |アクセスはありません |。  |読み取り |読み取り |  |書き込む |書き込む |      次の表に、関連するタスクの例については、`My.Computer.Registry`オブジェクト。      |**To**|**See**|  |------------|-------------|  |レジストリ キーを作成し、その値を設定 |[する方法: レジストリ キーを作成し、その値を設定](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーの削除 |[する方法: レジストリ キーの削除](~/add/includes/ajax-current-ext-md.md)|  |レジストリ キーから値を読み取る |[する方法: レジストリ キーから値を読み取る](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example counts and displays the number of values in the registry key.  \n  \n [!code-vb[VbVbalrMyRegistry#4](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._74_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey Users { get; }
    return:
      type: Microsoft.Win32.RegistryKey
      description: <xref href="Microsoft.Win32.RegistryKey"></xref>
  overload: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue(String,String,Object)
  nameWithType: RegistryProxy.GetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object)
  nameWithType: RegistryProxy.SetValue(String,String,Object)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object)
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue(String,String,Object,RegistryValueKind)
  nameWithType: RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(String,String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
  fullName: Microsoft.VisualBasic.MyServices.RegistryProxy.Users
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: ClassesRoot
  nameWithType: RegistryProxy.ClassesRoot
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentConfig
  nameWithType: RegistryProxy.CurrentConfig
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: CurrentUser
  nameWithType: RegistryProxy.CurrentUser
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.DynData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: DynData
  nameWithType: RegistryProxy.DynData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: GetValue
  nameWithType: RegistryProxy.GetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: LocalMachine
  nameWithType: RegistryProxy.LocalMachine
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: PerformanceData
  nameWithType: RegistryProxy.PerformanceData
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: SetValue
  nameWithType: RegistryProxy.SetValue
- uid: Microsoft.VisualBasic.MyServices.RegistryProxy.Users*
  parent: Microsoft.VisualBasic.MyServices.RegistryProxy
  isExternal: false
  name: Users
  nameWithType: RegistryProxy.Users
