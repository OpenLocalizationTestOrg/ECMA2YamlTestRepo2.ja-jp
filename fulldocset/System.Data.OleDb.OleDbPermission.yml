### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbPermission
  id: OleDbPermission
  children:
  - System.Data.OleDb.OleDbPermission.#ctor
  - System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.OleDb.OleDbPermission.Copy
  - System.Data.OleDb.OleDbPermission.Provider
  langs:
  - csharp
  name: OleDbPermission
  nameWithType: OleDbPermission
  fullName: System.Data.OleDb.OleDbPermission
  type: Class
  summary: "OLE DB、OLE DB データ ソースにアクセスするための十分なセキュリティ レベルをユーザーが持っているかどうかを確認するには、.NET Framework Data Provider を使用できます。"
  remarks: "部分信頼シナリオで、.NET Framework Data Provider for OLE DB が有効にすると、このクラスは将来使用するためものです。 現在、.NET Framework Data Provider for OLE DB には、FullTrust アクセス許可が必要です。 現時点を使用して、`OleDbPermission`クラスが影響を与えません。 詳細については、次を参照してください。[コード アクセス セキュリティと ADO.NET](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public sealed class OleDbPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.OleDb.OleDbPermission.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbPermission
  langs:
  - csharp
  name: OleDbPermission()
  nameWithType: OleDbPermission.OleDbPermission()
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbPermission&quot;> </xref>クラスです。"
  syntax:
    content: public OleDbPermission ();
    parameters: []
  overload: System.Data.OleDb.OleDbPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.OleDb.OleDbPermission
  langs:
  - csharp
  name: OleDbPermission(PermissionState)
  nameWithType: OleDbPermission.OleDbPermission(PermissionState)
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbPermission&quot;> </xref>クラスです。"
  syntax:
    content: public OleDbPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Data.OleDb.OleDbPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.OleDb.OleDbPermission
  langs:
  - csharp
  name: OleDbPermission(PermissionState,Boolean)
  nameWithType: OleDbPermission.OleDbPermission(PermissionState,Boolean)
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbPermission&quot;> </xref>クラスです。"
  remarks: "<xref:System.Security.Permissions.PermissionState>列挙型よりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティ</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A></xref:System.Security.Permissions.PermissionState>。 そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Security.Permissions.PermissionState>に`None`をユーザーが、空白のパスワードを使用して接続するを防ぐ</xref:System.Security.Permissions.PermissionState></xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>。"
  syntax:
    content: public OleDbPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
    - id: allowBlankPassword
      type: System.Boolean
      description: "空のパスワードを許可するかどうかを示します。"
  overload: System.Data.OleDb.OleDbPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbPermission.Copy
  id: Copy
  parent: System.Data.OleDb.OleDbPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: OleDbPermission.Copy()
  fullName: System.Data.OleDb.OleDbPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Returns the <xref href=&quot;System.Data.OleDb.OleDbPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトのコピー。"
  overload: System.Data.OleDb.OleDbPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbPermission.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbPermission
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbPermission.Provider
  fullName: System.Data.OleDb.OleDbPermission.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "このプロパティは、不使用とマークされています。 このプロパティを設定する効果はありません。"
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "このプロパティは、不使用とマークされています。 このプロパティを設定する効果はありません。"
  overload: System.Data.OleDb.OleDbPermission.Provider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.OleDb.OleDbPermission.#ctor
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: OleDbPermission()
  nameWithType: OleDbPermission.OleDbPermission()
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission()
- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: OleDbPermission(PermissionState)
  nameWithType: OleDbPermission.OleDbPermission(PermissionState)
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: OleDbPermission(PermissionState,Boolean)
  nameWithType: OleDbPermission.OleDbPermission(PermissionState,Boolean)
  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbPermission.Copy
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: Copy()
  nameWithType: OleDbPermission.Copy()
  fullName: System.Data.OleDb.OleDbPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.OleDb.OleDbPermission.Provider
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: Provider
  nameWithType: OleDbPermission.Provider
  fullName: System.Data.OleDb.OleDbPermission.Provider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbPermission.#ctor*
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: OleDbPermission
  nameWithType: OleDbPermission.OleDbPermission
- uid: System.Data.OleDb.OleDbPermission.Copy*
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: Copy
  nameWithType: OleDbPermission.Copy
- uid: System.Data.OleDb.OleDbPermission.Provider*
  parent: System.Data.OleDb.OleDbPermission
  isExternal: false
  name: Provider
  nameWithType: OleDbPermission.Provider
