### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializerFactory
  id: XmlSerializerFactory
  children:
  - System.Xml.Serialization.XmlSerializerFactory.#ctor
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  langs:
  - csharp
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory
  fullName: System.Xml.Serialization.XmlSerializerFactory
  type: Class
  summary: "型指定されたバージョンが作成、<xref:System.Xml.Serialization.XmlSerializer>より効率的なシリアル化します</xref:System.Xml.Serialization.XmlSerializer>。"
  syntax:
    content: public class XmlSerializerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref>クラスです。"
  syntax:
    content: public XmlSerializerFactory ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  id: CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref>指定した型のシリアル化に使用されるクラスです。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生、<xref:System.Xml.Serialization.XmlSerializer>具体的には、指定した型のシリアル化に作成されるクラス</xref:System.Xml.Serialization.XmlSerializer>。"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  id: CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref>クラス別に&1; つの型をマップするオブジェクトを使用します。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);
    parameters:
    - id: xmlTypeMapping
      type: System.Xml.Serialization.XmlTypeMapping
      description: "<xref:System.Xml.Serialization.XmlTypeMapping>別に対応する&1; つの型</xref:System.Xml.Serialization.XmlTypeMapping>。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生、<xref:System.Xml.Serialization.XmlSerializer>がマップされた型のシリアル化に作成されているクラス</xref:System.Xml.Serialization.XmlSerializer>。"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref>名前空間と指定した型のシリアル化に使用されるクラスです。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    - id: defaultNamespace
      type: System.String
      description: "すべての XML 要素を使用する既定の名前空間。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "派生、<xref:System.Xml.Serialization.XmlSerializer>具体的には、指定した型のシリアル化に作成されるクラス</xref:System.Xml.Serialization.XmlSerializer>。"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  id: CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref>指定した型のシリアル化に使用されるクラスです。 プロパティまたはフィールドが、配列を返す場合、 <code> extraTypes </code>パラメーター配列に挿入できるオブジェクトを指定します。"
  remarks: "このオーバー ロードが呼び出しに似ています、 [XmlSerializer (型、型\\[\\])](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>クラス</xref:System.Xml.Serialization.XmlSerializer>のインスタンスを作成するには"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, Type[] extraTypes);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>シリアル化する追加のオブジェクトの種類の配列</xref:System.Type>。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、<xref:System.Xml.Serialization.XmlSerializer>を XML ドキュメントでは、指定した型のオブジェクトをシリアル化できるクラスと、その逆</xref:System.Xml.Serialization.XmlSerializer>。 各オブジェクトをシリアル化を含めることができます自体クラスで、このオーバー ロードは、他のクラスでオーバーライドできますのインスタンス。"
  remarks: "このオーバー ロードを呼び出すこと<xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29><xref:System.Xml.Serialization.XmlSerializer>クラス</xref:System.Xml.Serialization.XmlSerializer>のインスタンスを作成する</xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>呼び出しに似ています"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>既定のシリアル化の動作をオーバーライドするフィールドを格納している</xref:System.Xml.Serialization.XmlAttributeOverrides>。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、<xref:System.Xml.Serialization.XmlSerializer>を XML ドキュメントでは、指定した型のオブジェクトをシリアル化できるクラスと、その逆</xref:System.Xml.Serialization.XmlSerializer>。 XML ルート要素を表すオブジェクトを指定します。"
  remarks: "このオーバー ロードを呼び出すこと<xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName><xref:System.Xml.Serialization.XmlSerializer>クラス</xref:System.Xml.Serialization.XmlSerializer>のインスタンスを作成する</xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>呼び出しに似ています"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML ルート要素を表す</xref:System.Xml.Serialization.XmlRootAttribute>。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref:System.Xml.Serialization.XmlSerializer>XML ドキュメントのインスタンスに指定した型のオブジェクトをシリアル化できるクラスと、その逆</xref:System.Xml.Serialization.XmlSerializer>。 各オブジェクトをシリアル化を含めることができます自体クラスで、このオーバー ロードは、他のクラスでオーバーライドできますのインスタンス。 このオーバー ロードには、すべての XML 要素と XML ルート要素として使用するクラスの既定の名前空間も指定します。"
  remarks: "このオーバー ロードを呼び出すことは、呼び出しに似ています、 [XmlSerializer (型、XmlAttributeOverrides、Type\\[\\]、XmlRootAttribute, String)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>クラス</xref:System.Xml.Serialization.XmlSerializer>のインスタンスを作成するには"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>シリアル化する</xref:System.Type>。"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>既定のシリアル化の動作をオーバーライドするフィールドを格納している</xref:System.Xml.Serialization.XmlAttributeOverrides>。"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>シリアル化する追加のオブジェクトの種類の配列</xref:System.Type>。"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML ルート要素を表す</xref:System.Xml.Serialization.XmlRootAttribute>。"
    - id: defaultNamespace
      type: System.String
      description: "XML ドキュメント内のすべての XML 要素の既定の名前空間。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref:System.Xml.Serialization.XmlSerializer>XML ドキュメントのインスタンスに指定した型のオブジェクトをシリアル化できるクラスと、その逆</xref:System.Xml.Serialization.XmlSerializer>。 各オブジェクトをシリアル化を含めることができます自体クラスで、このオーバー ロードは、他のクラスでオーバーライドできますのインスタンス。 このオーバー ロードには、すべての XML 要素と XML ルート要素として使用するクラスの既定の名前空間も指定します。"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>オブジェクトのこの<xref:System.Xml.Serialization.XmlSerializer>シリアル化できます</xref:System.Xml.Serialization.XmlSerializer></xref:System.Type>。"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>を拡張または型パラメーターで指定されたクラスの動作をオーバーライドします</xref:System.Xml.Serialization.XmlAttributeOverrides>。"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>シリアル化する追加のオブジェクトの種類の配列</xref:System.Type>。"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML ルート要素のプロパティを定義する</xref:System.Xml.Serialization.XmlRootAttribute>。"
    - id: defaultNamespace
      type: System.String
      description: "XML ドキュメント内のすべての XML 要素の既定の名前空間。"
    - id: location
      type: System.String
      description: "型の場所を指定するパス。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "派生を返します、 <xref:System.Xml.Serialization.XmlSerializer>XML ドキュメントのインスタンスに指定した型のオブジェクトをシリアル化できるクラスと、その逆</xref:System.Xml.Serialization.XmlSerializer>。 各オブジェクトをシリアル化を含めることができます自体クラスで、このオーバー ロードは、他のクラスでオーバーライドできますのインスタンス。 このオーバー ロードには、すべての XML 要素と XML ルート要素として使用するクラスの既定の名前空間も指定します。"
  remarks: "このオーバー ロードを呼び出すことは、呼び出しに似ています、 [XmlSerializer (型、XmlAttributeOverrides、Type\\[\\]、XmlRootAttribute、文字列、文字列、証拠)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>クラス</xref:System.Xml.Serialization.XmlSerializer>のインスタンスを作成するには"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>オブジェクトのこの<xref:System.Xml.Serialization.XmlSerializer>シリアル化できます</xref:System.Xml.Serialization.XmlSerializer></xref:System.Type>。"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>を拡張または型パラメーターで指定されたクラスの動作をオーバーライドします</xref:System.Xml.Serialization.XmlAttributeOverrides>。"
    - id: extraTypes
      type: System.Type[]
      description: "A<xref:System.Type>シリアル化する追加のオブジェクトの種類の配列</xref:System.Type>。"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML ルート要素のプロパティを定義する</xref:System.Xml.Serialization.XmlRootAttribute>。"
    - id: defaultNamespace
      type: System.String
      description: "XML ドキュメント内のすべての XML 要素の既定の名前空間。"
    - id: location
      type: System.String
      description: "型の場所を指定するパス。"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "インスタンス、 <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>型にアクセスするために必要な資格情報を含むクラスです。"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>。</xref:System.Xml.Serialization.XmlSerializer>から派生"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
- uid: System.Xml.Serialization.XmlSerializer
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
- uid: System.Xml.Serialization.XmlTypeMapping
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlTypeMapping
  nameWithType: XmlTypeMapping
  fullName: System.Xml.Serialization.XmlTypeMapping
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
- uid: System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory.XmlSerializerFactory
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer
  nameWithType: XmlSerializerFactory.CreateSerializer
