### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommandBuilder
  id: OleDbCommandBuilder
  children:
  - System.Data.OleDb.OleDbCommandBuilder.#ctor
  - System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  - System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  langs:
  - csharp
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder
  fullName: System.Data.OleDb.OleDbCommandBuilder
  type: Class
  summary: "加えられた変更を調整するために使用される単一テーブル コマンドを自動的に生成、 <xref href=&quot;System.Data.DataSet&quot;> </xref>データベースに関連付けられました。 このクラスは継承できません。"
  remarks: "<xref:System.Data.OleDb.OleDbDataAdapter>に加えられた変更を調整するために必要な SQL ステートメントを自動的に生成しない、<xref:System.Data.DataSet>と関連付けられているデータ ソース</xref:System.Data.DataSet></xref:System.Data.OleDb.OleDbDataAdapter>。 ただし、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> <xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>のプロパティ</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>を設定した場合、SQL ステートメントの&1; つのテーブルの更新プログラムを自動的に生成する OleDbCommandBuilder オブジェクトを作成することができます。 次に、設定しない追加の SQL ステートメントは、OleDbCommandBuilder によって生成されます。       OleDbCommandBuilder では、自身を登録するためのリスナーとして<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>を設定する場合に、イベント、<xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A>プロパティ</xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A></xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>。 関連付けることができますのみ<xref:System.Data.OleDb.OleDbDataAdapter>または OleDbCommandBuilder オブジェクト互いに一度に&1; つ</xref:System.Data.OleDb.OleDbDataAdapter>。       INSERT、UPDATE、または DELETE ステートメントを生成する、OleDbCommandBuilder を使用して、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>自動的に必要な一連のメタデータを取得するプロパティ</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>。 変更した場合、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>メタデータが取得された後、呼び出す必要があります最初の更新の後など、<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>にメタデータを更新する方法</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A></xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>。       また、OleDbCommandBuilder、使用、 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>、 <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>、 <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>によって参照されるプロパティ</xref:System.Data.OleDb.OleDbCommand.Transaction%2A>と</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.Connection%2A> ユーザーが呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>1 つ以上のこれらのプロパティを変更すると場合、または、<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>自体は置き換えられます</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A></xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>、 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>、および<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>プロパティは、前回の値を保持します</xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A></xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A></xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>。       呼び出す場合<xref:System.ComponentModel.Component.Dispose%2A>、OleDbCommandBuilder 関連付けが解除され、 <xref:System.Data.OleDb.OleDbDataAdapter>、され、生成されたコマンドは使用されなく</xref:System.Data.OleDb.OleDbDataAdapter></xref:System.ComponentModel.Component.Dispose%2A>。"
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OleDbCommandBuilder.  \n  \n [!code-cs[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: 'public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public OleDbCommandBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  id: '#ctor(System.Data.OleDb.OleDbDataAdapter)'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;> </xref> 、関連付けられているクラス<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>オブジェクト。"
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>自体のリスナーとして登録<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>によって生成されるイベント、<xref:System.Data.OleDb.OleDbDataAdapter>このプロパティで指定します</xref:System.Data.OleDb.OleDbDataAdapter></xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating></xref:System.Data.OleDb.OleDbCommandBuilder>。       新しいインスタンスを作成する場合<xref:System.Data.OleDb.OleDbCommandBuilder>、既存<xref:System.Data.OleDb.OleDbCommandBuilder>これに関連付けられている<xref:System.Data.OleDb.OleDbDataAdapter>を解放します</xref:System.Data.OleDb.OleDbDataAdapter></xref:System.Data.OleDb.OleDbCommandBuilder></xref:System.Data.OleDb.OleDbCommandBuilder>。"
  syntax:
    content: public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.OleDb.OleDbDataAdapter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "追加します。"
    - id: datarow
      type: System.Data.DataRow
      description: "追加します。"
    - id: statementType
      type: System.Data.StatementType
      description: "追加します。"
    - id: whereClause
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または設定、 <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>オブジェクトの SQL ステートメントが自動的に生成します。"
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>自体のリスナーとして登録<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>によって生成されるイベント、<xref:System.Data.OleDb.OleDbDataAdapter>このプロパティで指定します</xref:System.Data.OleDb.OleDbDataAdapter></xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating></xref:System.Data.OleDb.OleDbCommandBuilder>。       新しいインスタンスを作成する場合<xref:System.Data.OleDb.OleDbCommandBuilder>、既存<xref:System.Data.OleDb.OleDbCommandBuilder>これに関連付けられている<xref:System.Data.OleDb.OleDbDataAdapter>を解放します</xref:System.Data.OleDb.OleDbDataAdapter></xref:System.Data.OleDb.OleDbCommandBuilder></xref:System.Data.OleDb.OleDbCommandBuilder>。"
  syntax:
    content: public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.OleDb.OleDbDataAdapter
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref>オブジェクト。"
  overload: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  id: DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "指定されたストアド プロシージャからパラメーター情報を取得、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>取り込んで、<xref:System.Data.OleDb.OleDbCommand.Parameters*>の指定されたコレクション<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>オブジェクト</xref:System.Data.OleDb.OleDbCommand.Parameters*>。"
  remarks: "DeriveParameters <xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>の既存のパラメーター情報が上書きされます。       DeriveParameters は、情報を取得するデータ ソースに追加の呼び出しが必要です。 パラメーター情報が事前にわかっている場合は、情報を明示的に設定して、パラメーター コレクションを設定する方が効率的です。       DeriveParameters は、ストアド プロシージャでのみ使用できます。 DeriveParameters は設定に使用することはできません、<xref:System.Data.OleDb.OleDbParameterCollection>パラメーター化された SELECT ステートメントなど、任意の TRANSACT-SQL ステートメントを使用します</xref:System.Data.OleDb.OleDbParameterCollection>。       詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);
    parameters:
    - id: command
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>が、パラメーター情報の派生元となるストアド プロシージャを参照します。 派生パラメーターに追加されます、<xref:System.Data.OleDb.OleDbCommand.Parameters*>のコレクション、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref></xref:System.Data.OleDb.OleDbCommand.Parameters*> 。"
  overload: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基になる OLE DB プロバイダーがストアド プロシージャのパラメーター情報を返すことをサポートしていない、コマンド テキストが有効なストアド プロシージャ名、または<xref:System.Data.OleDb.OleDbCommand.CommandType*>でした指定<xref uid=&quot;langword_csharp_StoredProcedure&quot; name=&quot;StoredProcedure&quot; href=&quot;&quot;> </xref></xref:System.Data.OleDb.OleDbCommand.CommandType*> 。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>データ ソースの削除を実行するために必要なオブジェクトです。"
  remarks: "アプリケーションは、返すために、情報やトラブルシューティングのための GetDeleteCommand メソッドを使用できます、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand>。       また、変更されたコマンドの基礎として GetDeleteCommand を使用することができます。 たとえば、可能性があります GetDeleteCommand を呼び出し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetDeleteCommand がなりますまだ正しくない可能性があります、前のステートメントからの情報を使用します。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または GetDeleteCommand</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>削除を実行するために必要なオブジェクトです。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>データ ソースの削除を実行するために必要なオブジェクトです。"
  remarks: "アプリケーションで使用できます、<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>メソッド情報やトラブルシューティングの目的を返すので、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。       使用することも<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>変更されたコマンドの基礎として</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>はまだ正しくない可能性があります、前のステートメントからの情報を使用する</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       使用するパラメーター名を生成するときに、既定の動作は、 @p1、 @p2、さまざまなパラメーターについてです。 渡す`true`の`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.OleDb.OleDbCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.OleDb.OleDbCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さ</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>削除を実行するために必要なオブジェクトです。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>データ ソースでの挿入を実行するために必要なオブジェクトです。"
  remarks: "アプリケーションは、のテキストを返すために、情報やトラブルシューティングのための GetInsertCommand メソッドを使用できます、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand>。       また、変更されたコマンドの基礎として GetInsertCommand を使用することができます。 たとえば、可能性があります GetInsertCommand を呼び出し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetInsertCommand がなりますまだ正しくない可能性があります、前のステートメントからの情報を使用します。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または GetInsertCommand</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>挿入を実行するために必要なオブジェクトです。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>データ ソースでの挿入を実行するために必要なオブジェクトです。"
  remarks: "アプリケーションで使用できます、<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>メソッド情報やトラブルシューティングを目的のテキストを返すので、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。       使用することも<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>変更されたコマンドの基礎として</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>はまだ正しくない可能性があります、前のステートメントからの情報を使用する</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       使用するパラメーター名を生成するときに、既定の動作は、 @p1、 @p2、さまざまなパラメーターについてです。 渡す`true`の`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.OleDb.OleDbCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.OleDb.OleDbCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さ</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>挿入を実行するために必要なオブジェクトです。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>オブジェクト、データ ソースの更新を実行するために必要です。"
  remarks: "アプリケーションは、返すために、情報やトラブルシューティングのための GetUpdateCommand メソッドを使用できます、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand>。       また、変更されたコマンドの基礎として GetUpdateCommand を使用することができます。 たとえば、可能性があります GetUpdateCommand を呼び出し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetUpdateCommand がなりますまだ正しくない可能性があります、前のステートメントからの情報を使用します。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または GetUpdateCommand</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>オブジェクトの更新を実行するために必要です。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "自動的に生成された取得<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>必要に応じてパラメーターの名前の列を使用して、データ ソースで更新を実行するために必要なオブジェクトです。"
  remarks: "アプリケーションで使用できます、<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>メソッド情報やトラブルシューティングの目的を返すので、<xref:System.Data.OleDb.OleDbCommand>を実行するオブジェクト</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。       使用することも<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>変更されたコマンドの基礎として</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>し<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>値、および<xref:System.Data.OleDb.OleDbDataAdapter>。</xref:System.Data.OleDb.OleDbDataAdapter>ことを明示的に設定</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>を変更</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>       アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>はまだ正しくない可能性があります、前のステートメントからの情報を使用する</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>または<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       使用するパラメーター名を生成するときに、既定の動作は、 @p1、 @p2、さまざまなパラメーターについてです。 渡す`true`の`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.OleDb.OleDbCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.OleDb.OleDbCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さ</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "自動的に生成された<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>オブジェクトの更新を実行するために必要です。"
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "正しいカタログ ケースで囲まれていない識別子、指定したを返します、正しい形式の id を引用符で囲まれました。 これには、識別子に埋め込まれた引用符は、正しくエスケープが含まれます。"
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "元の囲まれていない識別子です。"
    return:
      type: System.String
      description: "引用符で囲まれた識別子のバージョンです。 Id 内に埋め込まれた引用符は、正しくエスケープします。"
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "正しいカタログ ケースで囲まれていない識別子、指定したを返します、正しい形式の id を引用符で囲まれました。 これには、識別子に埋め込まれた引用符は、正しくエスケープが含まれます。"
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "引用符で囲まれた形式で返される囲まれていない識別子です。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "接続が渡されると、OLE DB プロバイダーからの引用符文字を取得するマネージ ラッパーが行われます。 接続が渡されない場合、文字列は引用符で囲まれた値を使用して<> *> と<> *> です。"
    return:
      type: System.String
      description: "引用符で囲まれた識別子のバージョンです。 Id 内に埋め込まれた引用符は、正しくエスケープします。"
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "引用符で囲まれた識別子では、指定した識別子の正しい引用符なしの形式を返します。 これが正常に含まれますがエスケープされていないいずれかに埋め込まれた引用符識別子。"
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "埋め込まれた引用符が削除される id。"
    return:
      type: System.String
      description: "正しくエスケープされていない埋め込み文字を引用符で囲まれていない識別子です。"
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "引用符で囲まれた識別子では、指定した識別子の正しい引用符なしの形式を返します。 これが正常に含まれますがエスケープされていないいずれかに埋め込まれた引用符識別子。"
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "埋め込まれた引用符が削除される id。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "The <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>."
    return:
      type: System.String
      description: "正しくエスケープされていない埋め込み文字を引用符で囲まれていない識別子です。"
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
- uid: System.Data.OleDb.OleDbDataAdapter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OleDbCommandBuilder.DeriveParameters
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OleDbCommandBuilder.GetDeleteCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OleDbCommandBuilder.GetInsertCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OleDbCommandBuilder.GetParameterName
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OleDbCommandBuilder.GetUpdateCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OleDbCommandBuilder.QuoteIdentifier
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier
