### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseEventArgs
  id: MouseEventArgs
  children:
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  langs:
  - csharp
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
  type: Class
  summary: "データは、マウス関連のルーティング イベントを具体的には関係しないマウス ボタンやマウスのホイール、たとえば<xref href=&quot;System.Windows.UIElement.MouseMove&quot;></xref>です。"
  remarks: "このイベント データ クラスには、次の添付イベントを使用します。      - <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>-<xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>このイベント データ クラスは、次のルーティング イベントと共に使用します</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName></xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName></xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName></xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName></xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName></xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>。 これらのルーティング イベントがより一般的な要素のモデルにアクセスできるようにする上記のアタッチされたイベントを転送[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]です。      - <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>- <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>-<xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>添付イベントおよび基本要素のルーティング イベントのイベント データを共有し、バブルとトンネル ルーティング イベントのバージョンは、イベント データを共有も</xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName></xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName></xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName></xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName></xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName></xref:System.Windows.UIElement.MouseMove?displayProperty=fullName></xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName></xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>。 イベント ルートをたどる際は、イベントの処理の特性に影響することができます。 詳細については、「[入力概要](~/add/includes/ajax-current-ext-md.md)です。       Other than、<xref:System.Windows.RoutedEventArgs>すべてのルーティング イベントの使用可能性のある MouseEventArgs の最も興味深いプロパティに関連するプロパティ、<xref:System.Windows.Input.MouseEventHandler>実装は現在のボタンの状態を公開するいくつかのプロパティ (など<xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) および<xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>).</xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> </xref:System.Windows.Input.MouseEventArgs.LeftButton%2A> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.RoutedEventArgs> <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A><xref:System.Windows.Input.MouseDevice.Captured%2A>それ</xref:System.Windows.Input.MouseDevice.Captured%2A>を確認するために特に便利です。</xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>       特にマウス ボタンのイベントを処理するイベントが別のイベント データ クラスは、 <xref:System.Windows.Input.MouseButtonEventArgs>。</xref:System.Windows.Input.MouseButtonEventArgs>を使用することに注意してください。 入力モードや、ボタンを含むボタン以外のイベントを処理している場合でも相互作用がある場合に、マウス ボタンのプロパティは MouseEventArgs でご確認いただけます。       <xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  syntax:
    content: 'public class MouseEventArgs : System.Windows.Input.InputEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>クラス<xref href=&quot;System.Windows.Input.MouseDevice&quot;></xref>とタイムスタンプ"
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "このイベントに関連付けられているマウス デバイス。"
    - id: timestamp
      type: System.Int32
      description: "入力が発生した時刻。"
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>クラス<xref href=&quot;System.Windows.Input.MouseDevice&quot;> </xref>、タイムスタンプ、および<xref href=&quot;System.Windows.Input.StylusDevice&quot;></xref>です。"
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "このイベントに関連付けられているマウス デバイス。"
    - id: timestamp
      type: System.Int32
      description: "入力が発生した時刻。"
    - id: stylusDevice
      type: System.Windows.Input.StylusDevice
      description: "このイベントに関連付けられている論理スタイラス デバイス。"
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素に相対的なマウス ポインターの位置を返します。"
  remarks: "ポイント (0,&0;) は、参照のフレームの左上隅です。       静的な<xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName>メソッドは、マウスの位置を取得するも使用できます</xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "マウス ポインターの位置を計算するための基準枠として使用する要素。"
    return:
      type: System.Windows.Point
      description: "指定したオブジェクトを基準としたマウス ポインターの位置の x 座標と y 座標。"
  overload: System.Windows.Input.MouseEventArgs.GetPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "イベントのシステムの効率を高めることができます、型固有の方法でイベント ハンドラーを呼び出します。"
  remarks: "この実装では、ジェネリック ハンドラーをキャスト<xref:System.Windows.Input.MouseEventHandler>してそれを呼び出します</xref:System.Windows.Input.MouseEventHandler> この実装パターンとその理由の詳細については、次を参照してください<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 。"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "型固有の方法で呼び出すジェネリック ハンドラー。"
    - id: genericTarget
      type: System.Object
      description: "ハンドラーを呼び出すターゲット。"
  overload: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウスの左ボタンの現在の状態を取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example prints a message if the state of the LeftButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsleftbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsleftbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "次のいずれか、マウスの左ボタンの現在の状態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>または<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>です。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウスの中央ボタンの現在の状態を取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example prints a message if the state of the MiddleButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmiddlebuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "次のいずれか、マウスの中央ボタンの現在の状態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>または<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>です。 既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  id: MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このイベントに関連付けられているマウス デバイスを取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example gets the <xref:System.Windows.Input.MouseDevice> associated with an input event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmousedevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmousedevice)]"
  syntax:
    content: public System.Windows.Input.MouseDevice MouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "このイベントに関連付けられているマウス デバイス。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.MouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウスの右ボタンの現在の状態を取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example prints a message if the state of the RightButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsrightbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsrightbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "次のいずれか、マウスの右ボタンの現在の状態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>または<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>です。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  id: StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このイベントに関連付けられているスタイラス デバイスを取得します。"
  remarks: ''
  example:
  - "The following example shows how to retrieve the <xref:System.Windows.Input.StylusDevice> associated with an event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsstylusdevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsstylusdevice)]"
  syntax:
    content: public System.Windows.Input.StylusDevice StylusDevice { get; }
    return:
      type: System.Windows.Input.StylusDevice
      description: "このイベントに関連付けられているスタイラスです。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.StylusDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "最初の拡張のマウス ボタンの現在の状態を取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example prints a message if the state of the XButton1 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton1buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "いずれか&1; 拡張ボタンの現在の状態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>または<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>です。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "2 番目の拡張のマウス ボタンの状態を取得します。"
  remarks: "<xref:System.Windows.Input.Mouse>クラスには、追加のプロパティと、マウスの状態を判断するためのメソッドが用意されています</xref:System.Windows.Input.Mouse>。"
  example:
  - "The following example prints a message if the state of the XButton2 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton2buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "2 番目の拡張のマウス ボタンを次のいずれかの現在の状態<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>または<xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>です。  既定値はありません。"
  overload: System.Windows.Input.MouseEventArgs.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputEventArgs
  isExternal: false
  name: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
- uid: System.Windows.Input.StylusDevice
  parent: System.Windows.Input
  isExternal: false
  name: StylusDevice
  nameWithType: StylusDevice
  fullName: System.Windows.Input.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
- uid: System.Windows.Input.MouseEventArgs.#ctor*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs.MouseEventArgs
- uid: System.Windows.Input.MouseEventArgs.GetPosition*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: MouseEventArgs.GetPosition
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseEventArgs.InvokeEventHandler
- uid: System.Windows.Input.MouseEventArgs.LeftButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseEventArgs.MiddleButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
