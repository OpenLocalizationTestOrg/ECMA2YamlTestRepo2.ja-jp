### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.VirtualizationCacheLength
  id: VirtualizationCacheLength
  children:
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  - System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  - System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.ToString
  langs:
  - csharp
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
  type: Struct
  summary: "測定値を表す、 &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt;添付プロパティ。"
  remarks: "<xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>添付プロパティでは、空白の大きさを指定する、<xref:System.Windows.Controls.VirtualizingPanel>前に、または後に、ビュー ポート (領域の項目が表示されます)、項目は、仮想化します</xref:System.Windows.Controls.VirtualizingPanel></xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>。  1 つのパラメーターを受け取るコンス トラクターを使用して、VirtualizationCacheLength を作成する 均一なキャッシュの長さを指定できます。  異なる値を指定する&2; つのパラメーターを受け取るコンス トラクターを使用することができます、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>と<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティ</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))]

      public struct VirtualizationCacheLength : IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>両側のビューポートの統一されたキャッシュ長を持つクラス。"
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);
    parameters:
    - id: cacheBeforeAndAfterViewport
      type: System.Double
      description: "ビューポートの前後に、キャッシュのサイズ。"
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>ビューポートのそれぞれの側の指定されたキャッシュ長を持つクラス。"
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);
    parameters:
    - id: cacheBeforeViewport
      type: System.Double
      description: "ビューポートの前に、キャッシュのサイズ。"
    - id: cacheAfterViewport
      type: System.Double
      description: "ビューポートの後に、キャッシュのサイズ。"
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  id: CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "ビューポートの前に、キャッシュのサイズを取得時に、 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref>が仮想化します。"
  remarks: "このコンテキストで「仮想」手法を使用して参照するのサブセット[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]より多くのデータ項目が画面に表示するアイテムに基づくから要素が生成されます。 キャッシュを使用して生成を回避する[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素ように、スクロールして表示します。"
  syntax:
    content: public double CacheAfterViewport { get; }
    return:
      type: System.Double
      description: "ビューポートの後に、キャッシュのサイズと、 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref>が仮想化します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  id: CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "ビューポートの後に、キャッシュのサイズを取得時に、 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref>が仮想化します。"
  remarks: "このコンテキストで「仮想」手法を使用して参照するのサブセット[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]より多くのデータ項目が画面に表示するアイテムに基づくから要素が生成されます。 キャッシュを使用して生成を回避する[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素ように、スクロールして表示します。"
  syntax:
    content: public double CacheBeforeViewport { get; }
    return:
      type: System.Double
      description: "ビューポートの後に、キャッシュのサイズと、 <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref>が仮想化します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "指定したオブジェクトが現在と等しいかどうかを判断<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>値の等価性を確認します</xref:System.Windows.Controls.VirtualizationCacheLength>。  つまり、2 つのオブジェクトが等しい場合、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>プロパティの値が等しいとその<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティの値が等しい</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: public override bool Equals (object oCompare);
    parameters:
    - id: oCompare
      type: System.Object
      description: "現在と比較するオブジェクト<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したオブジェクトが現在に等しい場合<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  id: Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "決定するかどうか、指定した<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>が現在に等しい<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>値の等価性を確認します</xref:System.Windows.Controls.VirtualizationCacheLength>。  つまり、2 つのオブジェクトが等しい場合、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>プロパティの値が等しいとその<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティの値が等しい</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);
    parameters:
    - id: cacheLength
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "現在と比較するオブジェクト<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したオブジェクトが現在に等しい場合<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "現在のハッシュ コードを取得<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のハッシュ コード<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  overload: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "指定した&2; つあるかどうかを判定<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>オブジェクトが等しい。"
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>値の等価性を確認します</xref:System.Windows.Controls.VirtualizationCacheLength>。  つまり、2 つのオブジェクトが等しい場合、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>プロパティの値が等しいとその<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティの値が等しい</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "比較する最初のオブジェクト。"
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "比較する&2; 番目のオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "指定した&2; つあるかどうかを判定<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>オブジェクトが等しい。"
  remarks: "<xref:System.Windows.Controls.VirtualizationCacheLength>値の等価性を確認します</xref:System.Windows.Controls.VirtualizationCacheLength>。  つまり、2 つのオブジェクトが等しい場合、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>プロパティの値が等しいとその<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティの値が等しい</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "比較する最初のオブジェクト。"
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "比較する&2; 番目のオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>します。"
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  id: ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "現在を表す文字列を返します<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  remarks: "ToString メソッドの値を表示する文字列を返します、<xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>と<xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>プロパティ</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A></xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在を表す文字列<xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;></xref>です。"
  overload: System.Windows.Controls.VirtualizationCacheLength.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength
  parent: System.Windows.Controls
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals
  nameWithType: VirtualizationCacheLength.Equals
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode
  nameWithType: VirtualizationCacheLength.GetHashCode
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality
  nameWithType: VirtualizationCacheLength.op_Equality
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality
  nameWithType: VirtualizationCacheLength.op_Inequality
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString
  nameWithType: VirtualizationCacheLength.ToString
