### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe
  id: PeerNearMe
  children:
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  langs:
  - csharp
  name: PeerNearMe
  nameWithType: PeerNearMe
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe
  type: Class
  summary: "「近くの人」インフラストラクチャであるピアを表します。"
  remarks: "このクラスのインスタンスを直接作成することはできません。  静的なを使用して、「近く」呼び出し元のピア ピアへの参照を取得する代わりに、<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe%2A>近くにあるピアのコレクションを返すメソッド</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe%2A>。       PeerNearMe オブジェクトによって表されるピアが必ずしも呼び出し元のピアのアドレス帳に。"
  syntax:
    content: 'public class PeerNearMe : System.Net.PeerToPeer.Collaboration.Peer, IEquatable<System.Net.PeerToPeer.Collaboration.PeerNearMe>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Net.PeerToPeer.Collaboration.Peer
  implements:
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.PeerNearMe>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMe()
  nameWithType: PeerNearMe.PeerNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "新しい既定のインスタンスを初期化、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>クラスです。"
  syntax:
    content: public PeerNearMe ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMe(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "新しい初期化<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>シリアル化に必要な関連付けられているパラメーターを持つインスタンス。"
  syntax:
    content: protected PeerNearMe (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>です。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "関連付けられているシリアル化先、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  id: AddToContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: AddToContactManager()
  nameWithType: PeerNearMe.AddToContactManager()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "生成、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>から、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトに関連付けます、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact AddToContactManager ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "作成し、コラボレーション インフラストラクチャが失敗しました、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>で、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  id: AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: AddToContactManager(String,String,MailAddress)
  nameWithType: PeerNearMe.AddToContactManager(String,String,MailAddress)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(String,String,MailAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "生成、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>から関連付けられているわかりやすいパラメーターを使用して、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトに関連付けます、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerContact AddToContactManager (string displayName, string nickname, System.Net.Mail.MailAddress emailAddress);
    parameters:
    - id: displayName
      type: System.String
      description: "新しく作成されたメンバーに割り当てられた表示名。"
    - id: nickname
      type: System.String
      description: "`nickname`を新しく作成した担当者に割り当てます。"
    - id: emailAddress
      type: System.Net.Mail.MailAddress
      description: "<xref href=&quot;System.Net.Mail.MailAddress&quot;></xref>新しく作成された連絡先に代入する電子メール アドレスを指定するオブジェクト。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerContact
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>わかりやすいパラメーターを含むです。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "コラボレーション インフラストラクチャが作成または更新に失敗しました、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerContact&quot;> </xref>で、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.ContactManager&quot;></xref>です。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: CreateFromPeerEndPoint(PeerEndPoint)
  nameWithType: PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "生成、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトから提供されている<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>です。"
  remarks: "場合、指定した<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>は、同じサブネット上のサインインがピアにマップされない`null`が返されます</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>。"
  syntax:
    content: public static System.Net.PeerToPeer.Collaboration.PeerNearMe CreateFromPeerEndPoint (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>ピアに関連付けられているエンドポイントを指定するオブジェクト。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerEndPoint</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "参照されている<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint*>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint*> 。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNearMe.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトをオプションでマネージ リソースも解放します。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  id: Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(PeerNearMe)
  nameWithType: PeerNearMe.Equals(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(PeerNearMe)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "比較、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>を指定した<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>インスタンス。"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.PeerNearMe other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.PeerNearMe
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンスが等しいかどうかをテストします。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>指定されたインスタンスが一致するデータ、else <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>other</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerNearMe.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "比較、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>指定したオブジェクトのインスタンス。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "等しいかどうかをテストするオブジェクト。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>指定されたインスタンスが一致するデータ、else <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  id: Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Equals(Object,Object)
  nameWithType: PeerNearMe.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "決定するかどうか、指定した<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>インスタンスが等しいと見なされます。"
  syntax:
    content: public static bool Equals (object objA, object objB);
    parameters:
    - id: objA
      type: System.Object
      description: "最初の<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>を比較します。"
    - id: objB
      type: System.Object
      description: "2 番目<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>提供するインスタンスには他のデータを対応する<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerNearMe.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ハッシュ コードを返します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビットには、この型のインスタンスを比較に使用される整数ハッシュ コードが署名されています。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 、指定したシリアル化に必要なデータを<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>です。 派生型が基本型を呼び出す必要があります<xref:System.Runtime.Serialization.ISerializable.GetObjectData*>メソッド</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>。"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "シリアル化先。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  id: InternalRefreshData(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InternalRefreshData(Object)
  nameWithType: PeerNearMe.InternalRefreshData(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "固有のアプリケーションやオブジェクトが存在するデータを取得するネットワーク操作を開始、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス。"
  remarks: "取得されたデータがによってアクセスされるキャッシュに格納されている、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>と<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>メソッドだけでなく<xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>プロパティ</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>。 のみ InternalRefreshData メソッドを呼び出し元がサブスクライブしていない場合に使用する必要がありますを指定した<xref:System.Net.PeerToPeer.Collaboration.Peer>、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>、または<xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer>       このメソッドは、ネットワーク操作が完了し、キャッシュが更新されるまで、追加の呼び出しをブロックします。       呼び出し元がサインインに使用する必要はありません、<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>メソッドやユーザー インターフェイスを使用してこの操作を正常に完了するのです</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>。"
  syntax:
    content: protected void InternalRefreshData (object state);
    parameters:
    - id: state
      type: System.Object
      description: "関連するアプリケーション、オブジェクト、および存在するデータを指定します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Invite()
  nameWithType: PeerNearMe.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "リモートのピアにピア共同作業アプリケーションへの招待を送信します。"
  syntax:
    content: public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref>関連する格納しているオブジェクト<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType&quot;></xref>リモートのピアで指定された値。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>によって指定された、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>か、&quot;0&quot; に関連付けられたエンドポイントの値の数。      A<xref:System.Guid>が現在のピア ツー ピア アプリケーションに関連付けられていません</xref:System.Guid>。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: PeerNearMe.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "説明またはアプリケーションへの招待を指定するデータが含まれるリモート ピアにピア共同作業アプリケーションへの招待を送信します。"
  syntax:
    content: public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "によって表される関連のピア コラボレーション アプリケーションを指定します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>インスタンス。"
    - id: message
      type: System.String
      description: "アプリケーションへの招待とリモートのピアに送信するメッセージ。  メッセージは、255 個の Unicode 文字にすることができます。"
    - id: invitationData
      type: System.Byte[]
      description: "ユーザーには、招待に関連付けるデータ blob が定義されています。  サイズは 16 K (16,384 バイト) に制限されます。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref>関連する格納しているオブジェクト<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType&quot;></xref>リモートのピアで指定された値。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> applicationToInvite </code>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<code> applicationToInvite </code> <xref:System.Guid>.</xref:System.Guid> 、空を指定します。      - <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>によって指定された、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>か、&quot;0&quot; に関連付けられたエンドポイントの値の数。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: PeerNearMe.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ピアからの応答を受け取りますピア共同作業アプリケーションへの参加に関すます。"
  syntax:
    content: public override void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "ユーザー定義のオブジェクトは、識別するための非同期操作のコールバックに渡されます。 この必須パラメーターは、すべての非同期招待操作、処理中で一意である必要があります。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> userToken </code>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "これは、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>オブジェクトが有効な<xref:System.Guid>.</xref:System.Guid>が指定されていません"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ピア共同作業アプリケーションへの招待に関するピアからの応答を受け取ります。"
  syntax:
    content: public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "によって表されるピア コラボレーションの関連アプリケーション情報を指定します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>オブジェクト。"
    - id: message
      type: System.String
      description: "アプリケーションへの招待とリモートのピアに送信するメッセージ。 メッセージは、255 個の Unicode 文字にすることができます。"
    - id: invitationData
      type: System.Byte[]
      description: "ユーザーには、招待に関連付けるデータ blob が定義されています。  サイズは 16 K に制限されます。"
    - id: userToken
      type: System.Object
      description: "ユーザー定義のオブジェクトは、識別するための非同期操作のコールバックに渡されます。 この必須パラメーターは、すべての非同期招待操作、処理中で一意である必要があります。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> applicationToInvite </code>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> userToken </code>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-によって指定されたエンドポイント<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>が見つかりませんでした。      - <code> applicationToInvite </code> <xref:System.Guid>.</xref:System.Guid> 、空を指定します。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  id: Nickname
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: Nickname
  nameWithType: PeerNearMe.Nickname
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得または設定、<xref:System.String>のニックネームを表す、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクト</xref:System.String>。"
  remarks: "連絡先がから生成される場合、<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>オブジェクト、関連付けられている連絡先ニックネームには、このプロパティの値が格納されます</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。"
  syntax:
    content: public string Nickname { get; }
    return:
      type: System.String
      description: "<xref:System.String>ニックネームを表す、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクト。</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  id: OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  nameWithType: PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "信号、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted&quot;> </xref>イベント。"
  remarks: "このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted>イベントが発生します</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted>。       このメソッドは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected void OnRefreshDataCompleted (System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
      description: "含まれているイベント データ、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs&quot;> </xref>インスタンス。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  id: PeerNearMeChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: PeerNearMeChanged
  nameWithType: PeerNearMe.PeerNearMeChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ときに、新しい通知<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>インスタンスが見つかると、不要になった使用可能なまたは、関連付けられている<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>オブジェクト情報が変更されました。"
  syntax:
    content: public static event EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs> PeerNearMeChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  id: RefreshData
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshData()
  nameWithType: PeerNearMe.RefreshData()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "固有のアプリケーションやオブジェクトが存在するデータを取得するネットワーク操作を開始、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス。"
  remarks: "取得されたデータがによってアクセスされるキャッシュに格納されている、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>と<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>メソッドだけでなく<xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>プロパティ</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>。 このメソッドはのみ、呼び出し元がサブスクライブしていない場合に使用する必要がありますを指定した<xref:System.Net.PeerToPeer.Collaboration.Peer>、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>、または<xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer>       このメソッドは、ネットワーク操作が完了し、キャッシュが更新されるまで、追加の呼び出しをブロックします。       呼び出し元がサインインに使用する必要はありません、<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>メソッドやユーザー インターフェイスを使用してこの操作を正常に完了するのです</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>。"
  syntax:
    content: public void RefreshData ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  id: RefreshDataAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshDataAsync(Object)
  nameWithType: PeerNearMe.RefreshDataAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "固有のアプリケーションやオブジェクトが存在するデータを取得するネットワーク操作を開始、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス。"
  remarks: "取得されたデータがによってアクセスされるキャッシュに格納されている、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>と<xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A>メソッドだけでなく<xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A>プロパティ</xref:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications%2A>。  <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData%2A>のみメソッドを呼び出し元がサブスクライブしていない場合に使用する必要がありますを指定した<xref:System.Net.PeerToPeer.Collaboration.Peer>、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>、または<xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.Peer> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData%2A>       このメソッドは、ネットワーク操作が完了し、キャッシュが更新されるまで、追加の呼び出しをブロックします。       呼び出し元がサインインに使用する必要はありません、<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>メソッドやユーザー インターフェイスを使用してこの操作を正常に完了するのです</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>。"
  syntax:
    content: public void RefreshDataAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "このメソッドは、操作を完了すると、デリゲートに渡されるユーザー指定の状態オブジェクト。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code>指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "前回の RefreshDataAsync 呼び出しはまだ完了していません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  id: RefreshDataCompleted
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: RefreshDataCompleted
  nameWithType: PeerNearMe.RefreshDataCompleted
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "通知されるときに、 <> </> *> または<> *> の操作、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンスが完了しました。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs> RefreshDataCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "現在の設定<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;></xref>シリアル化されたソースから取得したデータを持つインスタンス。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "シリアル化先。"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerNearMe.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "返します<xref:System.String>を表す、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>インスタンス</xref:System.String>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String>表す、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>です。</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerNearMe&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
references:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe()
  nameWithType: PeerNearMe.PeerNearMe()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMe(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager()
  nameWithType: PeerNearMe.AddToContactManager()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager()
- uid: System.Net.PeerToPeer.Collaboration.PeerContact
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerContact
  nameWithType: PeerContact
  fullName: System.Net.PeerToPeer.Collaboration.PeerContact
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager(String,String,MailAddress)
  nameWithType: PeerNearMe.AddToContactManager(String,String,MailAddress)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(String,String,MailAddress)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.MailAddress
  parent: System.Net.Mail
  isExternal: false
  name: MailAddress
  nameWithType: MailAddress
  fullName: System.Net.Mail.MailAddress
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: CreateFromPeerEndPoint(PeerEndPoint)
  nameWithType: PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerNearMe
  nameWithType: PeerNearMe
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNearMe.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(PeerNearMe)
  nameWithType: PeerNearMe.Equals(PeerNearMe)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(PeerNearMe)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerNearMe.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals(Object,Object)
  nameWithType: PeerNearMe.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(Object,Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerNearMe.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InternalRefreshData(Object)
  nameWithType: PeerNearMe.InternalRefreshData(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite()
  nameWithType: PeerNearMe.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: PeerNearMe.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: PeerNearMe.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Nickname
  nameWithType: PeerNearMe.Nickname
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  nameWithType: PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(RefreshDataCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: RefreshDataCompletedEventArgs
  nameWithType: RefreshDataCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMeChanged
  nameWithType: PeerNearMe.PeerNearMeChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PeerNearMeChangedEventArgs>
  nameWithType: EventHandler<PeerNearMeChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs
    name: PeerNearMeChangedEventArgs
    nameWithType: PeerNearMeChangedEventArgs
    fullName: PeerNearMeChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshData()
  nameWithType: PeerNearMe.RefreshData()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataAsync(Object)
  nameWithType: PeerNearMe.RefreshDataAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataCompleted
  nameWithType: PeerNearMe.RefreshDataCompleted
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<RefreshDataCompletedEventArgs>
  nameWithType: EventHandler<RefreshDataCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
    name: RefreshDataCompletedEventArgs
    nameWithType: RefreshDataCompletedEventArgs
    fullName: RefreshDataCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: ToString()
  nameWithType: PeerNearMe.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString()
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: PeerNearMe
  nameWithType: PeerNearMe.PeerNearMe
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: AddToContactManager
  nameWithType: PeerNearMe.AddToContactManager
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: CreateFromPeerEndPoint
  nameWithType: PeerNearMe.CreateFromPeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Dispose
  nameWithType: PeerNearMe.Dispose
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Equals
  nameWithType: PeerNearMe.Equals
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetHashCode
  nameWithType: PeerNearMe.GetHashCode
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNearMe.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InternalRefreshData
  nameWithType: PeerNearMe.InternalRefreshData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Invite
  nameWithType: PeerNearMe.Invite
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: InviteAsync
  nameWithType: PeerNearMe.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: Nickname
  nameWithType: PeerNearMe.Nickname
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: OnRefreshDataCompleted
  nameWithType: PeerNearMe.OnRefreshDataCompleted
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshData
  nameWithType: PeerNearMe.RefreshData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: RefreshDataAsync
  nameWithType: PeerNearMe.RefreshDataAsync
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNearMe.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString*
  parent: System.Net.PeerToPeer.Collaboration.PeerNearMe
  isExternal: false
  name: ToString
  nameWithType: PeerNearMe.ToString
