### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken
  id: SrgsToken
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  langs:
  - csharp
  name: SrgsToken
  nameWithType: SrgsToken
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken
  type: Class
  summary: "認識できる短い語句を表します。"
  remarks: "SrgsToken クラスのメンバーを使用して、単語の&3; つの形式を指定できます。<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>フォーム、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>フォーム、およびカスタム<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>という単語を</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>。       1 つの SrgsToken オブジェクトには、複数の単語が格納されている、内部的には、結果にさまざまなトークンとして扱われます各はします。       このクラスを表します、 `token` World Wide Web Consortium (W3C) で定義されている要素[音声認識の文法の仕様 (SRGS) バージョン 1.0。](http://go.microsoft.com/fwlink/?LinkId=201761)です。 については、SRGS`token`要素および System.Speech でのサポートに関する詳細を参照してください。[トークン要素](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)です。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")]

      public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref>クラスし、認識されるようにテキストを指定します。"
  remarks: "作成、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>オブジェクト<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>プロパティが最初の値、`text`パラメーター</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> 。"
  syntax:
    content: public SrgsToken (string text);
    parameters:
    - id: text
      type: System.String
      description: "新しいテキスト<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;></xref>クラスのインスタンス。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>text</code>空です。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  id: Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得または読み上げるテキストの表示形式を設定します。"
  remarks: "フォームの表示が、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>語句の形式</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>よりも異なる可能性がありますが、通常、同じ値を表す、 たとえば、フォームの表示では頭字語、&quot;USA&quot;などとするテキストを読み上げられる中に可能性があります、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>「アメリカ合衆国」を適用されます</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>。"
  syntax:
    content: public string Display { get; set; }
    return:
      type: System.String
      description: "トークンの表現が表示されます。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "表示を設定しようとしましたが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "表示する、空の文字列を代入しようとするとします。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  id: Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得またはトークンの発音を定義する文字列を設定します。"
  remarks: "携帯電話は、文字または音声のサウンドを表す記号です。 System.Speech カスタム発音を指定する&3; つの phonetic アルファベットをサポートしています: ユニバーサル電話設定 (UPS)、Speech API (SAPI) 電話設定 で、および国際音声記号 (IPA)。 発音で指定した電話が<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>で指定された発音記号に一致する必要があります。 参照してください[辞書と音声のアルファベット](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)詳細についてはします。       発音で指定された携帯電話を示す方法の内容<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>成功認識用に増大する必要があります</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。  音声認識エンジンが音声入力に一致する発音で指定された発音を使用しに含まれる文字列を返します<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>認識結果の</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。       認識エンジンが<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>に含まれる、word の有効な発音として指定された発音を認識しない場合は、携帯電話がスペースで区切られたか、指定した文字列には、認識されない電話が含まれています、       発音で指定された発音文法または認識エンジンに関連付けられた辞書で指定された発音よりも優先されます。 発音プロパティに発音が<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>に含まれる語句の&1; 回の発生にのみ適用されますも、"
  example:
  - "The grammar in the following example contains slang words and also has an uncommon word: \"whatchamacallit\". Adding a custom, inline pronunciation using the Pronunciation property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> class can improve the accuracy of recognition for the word \"whatchamacallit\" as well as for the entire phrase that contains it. The example uses phones from the Microsoft Universal Phone Set (UPS) to define the custom pronunciations.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an instance of the in-process recognizer.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\"en-US\")))  \n      {  \n  \n        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  \n        SrgsOneOf gimme = new SrgsOneOf(  \n          new string[] { \"give me\", \"gimme\", \"hand me\", \"ha'me\" });  \n        SrgsOneOf the = new SrgsOneOf(new string[] { \"the\", \"duh\" });  \n  \n        // Build the one-of element that contains the pronunciation.  \n        SrgsItem thing = new SrgsItem(\"thingamajig\");  \n        SrgsItem whatcha = new SrgsItem();  \n        SrgsToken callit = new SrgsToken(\"whatchamacallit\");  \n        callit.Pronunciation = \"W AE T CH AE M AE K AA L IH T\";  \n        whatcha.Add(callit);  \n        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  \n  \n        // Create the rule from the SrgsOneOf objects.  \n        SrgsRule slangRule = new SrgsRule(\"slang\", gimme, the, what);  \n  \n        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  \n        SrgsDocument tokenPron = new SrgsDocument(slangRule);  \n        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  \n  \n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \n        Grammar g_Slang = new Grammar(tokenPron);  \n        g_Slang.Name = (\"Slang Pronunciation\");  \n        recognizer.LoadGrammarAsync(g_Slang);  \n  \n        // Configure recognizer input.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=   \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Start asynchronous recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting asynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Recognized phrase: \" + e.Result.Text);  \n      Console.WriteLine(\"Confidence: \" + e.Result.Confidence);  \n      Console.WriteLine(\"  Word summary: \");  \n      foreach (RecognizedWordUnit word in e.Result.Words)  \n      {  \n        Console.WriteLine(  \n          \"    Lexical form ({1})\" +  \n          \" Pronunciation ({0})\" +  \n          \" Confidence ({2})\",  \n          word.Pronunciation, word.LexicalForm, word.Confidence);  \n      }  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public string Pronunciation { get; set; }
    return:
      type: System.String
      description: "<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>で指定された発音記号からの電話を含む文字列を返します"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "発音を設定しようとしましたが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "発音を空の文字列を代入しようとするとします。"
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  id: Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "取得または使用する単語の記述形式を設定します。"
  remarks: "テキスト形式を<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A><xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>語句の形式</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>とは異なる可能性がありますが、通常、同じ値を表す、 たとえば、<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>フォームの頭字語、&quot;USA&quot;など、読み上げられるテキストとする可能性があります、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>「アメリカ合衆国」を適用されます</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A></xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>。       Text プロパティの既定値は空の文字列:&quot;&quot;です。"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "含まれるテキスト、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref>クラスのインスタンス。"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "テキストを設定しようとしましたが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "テキストを空の文字列を代入しようとするとします。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "テキストを引用符 (&quot;) を表す文字列を代入しようとしました。"
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken
  nameWithType: SrgsToken.SrgsToken
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
