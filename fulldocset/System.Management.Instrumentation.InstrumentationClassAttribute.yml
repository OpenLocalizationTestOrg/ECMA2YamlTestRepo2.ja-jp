### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.InstrumentationClassAttribute
  id: InstrumentationClassAttribute
  children:
  - System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)
  - System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)
  - System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType
  - System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName
  langs:
  - csharp
  name: InstrumentationClassAttribute
  nameWithType: InstrumentationClassAttribute
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute
  type: Class
  summary: "クラスがイベントまたはインスタンスの実装を提供することを指定します。       注: WMI .NET ライブラリと見なされます最終的な状態は、およびなし開発ではさらに、拡張機能、または更新をこれらのライブラリに影響を与えるセキュリティ以外の関連する問題を利用できます。 [MI Api](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)すべての新しい開発で使用する必要があります。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)]

      public class InstrumentationClassAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)
  id: '#ctor(System.Management.Instrumentation.InstrumentationType)'
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  langs:
  - csharp
  name: InstrumentationClassAttribute(InstrumentationType)
  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management.Instrumentation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Management.Instrumentation.InstrumentationClassAttribute&quot;> </xref>を持つ別の型からこの型を派生している場合に使用されるクラス、 <xref href=&quot;System.Management.Instrumentation.InstrumentationClassAttribute&quot;> </xref>属性、または最上位レベルの実装クラスの場合 (から派生した、インスタンスまたは抽象クラスが基底クラス、またはイベントがない場合など、 **__ExtrinsicEvent**)。"
  remarks: "##直前の呼び出し元の .NET framework のセキュリティの完全な信頼。 このメンバーは、部分信頼コードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType);
    parameters:
    - id: instrumentationType
      type: System.Management.Instrumentation.InstrumentationType
      description: "このクラスが提供する実装の型。"
  overload: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)
  id: '#ctor(System.Management.Instrumentation.InstrumentationType,System.String)'
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  langs:
  - csharp
  name: InstrumentationClassAttribute(InstrumentationType,String)
  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType,String)
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType,String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management.Instrumentation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Management.Instrumentation.InstrumentationClassAttribute&quot;> </xref>を既存の基本クラスのスキーマを持つクラス。 クラスは、既存の WMI の基本クラスのプロパティの適切なメンバーの定義を含める必要があります。"
  remarks: "##直前の呼び出し元の .NET framework のセキュリティの完全な信頼。 このメンバーは、部分信頼コードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public InstrumentationClassAttribute (System.Management.Instrumentation.InstrumentationType instrumentationType, string managedBaseClassName);
    parameters:
    - id: instrumentationType
      type: System.Management.Instrumentation.InstrumentationType
      description: "このクラスが提供する実装の型。"
    - id: managedBaseClassName
      type: System.String
      description: "基本クラスの名前。"
  overload: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType
  id: InstrumentationType
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  langs:
  - csharp
  name: InstrumentationType
  nameWithType: InstrumentationClassAttribute.InstrumentationType
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management.Instrumentation
  summary: "取得またはこのクラスが提供する実装の種類を設定します。"
  remarks: "##プロパティの値には、<xref:System.Management.Instrumentation.InstrumentationType>これはインストルメント化されたイベント、インスタンス、または。 抽象型かどうかを示す値</xref:System.Management.Instrumentation.InstrumentationType>が含まれます。      ## 直前の呼び出し元の .NET framework のセキュリティの完全な信頼。 このメンバーは、部分信頼コードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Management.Instrumentation.InstrumentationType InstrumentationType { get; }
    return:
      type: System.Management.Instrumentation.InstrumentationType
      description: "返します、 <xref href=&quot;System.Management.Instrumentation.InstrumentationType&quot;> </xref>このクラスが提供する実装の種類を表す列挙値。"
  overload: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName
  id: ManagedBaseClassName
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  langs:
  - csharp
  name: ManagedBaseClassName
  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management.Instrumentation
  summary: "取得またはこのインストルメンテーション クラスの基底クラスの名前を設定します。"
  remarks: "##プロパティの値以外の場合`null`、この文字列は、このクラスは、CIM スキーマ内から継承する WMI の基本クラスを示します。      ## 直前の呼び出し元の .NET framework のセキュリティの完全な信頼。 このメンバーは、部分信頼コードから使用することはできません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public string ManagedBaseClassName { get; }
    return:
      type: System.String
      description: "<xref:System.String>このインストルメンテーション クラスの基底クラスの名前を含む値</xref:System.String>を返します"
  overload: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: InstrumentationClassAttribute(InstrumentationType)
  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType)
- uid: System.Management.Instrumentation.InstrumentationType
  parent: System.Management.Instrumentation
  isExternal: false
  name: InstrumentationType
  nameWithType: InstrumentationType
  fullName: System.Management.Instrumentation.InstrumentationType
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: InstrumentationClassAttribute(InstrumentationType,String)
  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType,String)
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationClassAttribute(InstrumentationType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: InstrumentationType
  nameWithType: InstrumentationClassAttribute.InstrumentationType
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: ManagedBaseClassName
  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName
  fullName: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.#ctor*
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: InstrumentationClassAttribute
  nameWithType: InstrumentationClassAttribute.InstrumentationClassAttribute
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType*
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: InstrumentationType
  nameWithType: InstrumentationClassAttribute.InstrumentationType
- uid: System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName*
  parent: System.Management.Instrumentation.InstrumentationClassAttribute
  isExternal: false
  name: ManagedBaseClassName
  nameWithType: InstrumentationClassAttribute.ManagedBaseClassName
