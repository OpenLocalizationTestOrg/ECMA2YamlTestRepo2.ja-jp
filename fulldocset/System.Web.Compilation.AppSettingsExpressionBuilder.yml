### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.AppSettingsExpressionBuilder
  id: AppSettingsExpressionBuilder
  children:
  - System.Web.Compilation.AppSettingsExpressionBuilder.#ctor
  - System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String)
  - System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String,System.Type,System.String)
  - System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: AppSettingsExpressionBuilder
  nameWithType: AppSettingsExpressionBuilder
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder
  type: Class
  summary: "宣言型の式で指定されている、値を取得、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションです。"
  remarks: "AppSettingsExpressionBuilder クラス内の値へのアクセスを提供する、 `<appSettings>` Web.config ファイルのセクションです。 `<appSettings>` Web.config ファイルのセクションには、キー/値ペア内のアプリケーション固有の値が含まれています。       アプリケーション値を形式の式を割り当てることによって取得`<%$ AppSettings: appSettingsKey %>`コントロール宣言内のプロパティにします。 コロン (:) の前に式の一部は、コロンがキーを示す後に式を取得して、一部の種類を指定します。 直前の正規表現は、Web.config ファイルから次の値を取得するは。       `<appSettings>`       `<add key=&quot;appSettingsKey&quot; value=&quot;appSettingsValue&quot;/>`       `</appSettings>`ページのパーサーを持つ式を検出した場合、`AppSettings`プレフィックス、式を処理する AppSettingsExpressionBuilder クラスのインスタンスを作成します。       コンパイルされるページで、式が検出した場合、AppSettingsExpressionBuilder オブジェクトは、Web.config ファイルから指定した値を取得するコードを生成します。 このコードは、生成されたページ クラスの実行中に実行されます。 式はコンパイルされませんが、ページで、検出した場合、AppSettingsExpressionBuilder オブジェクトは、ページの解析および実行時、Web.config ファイルから値を返します。"
  example:
  - "The following code example demonstrates how to retrieve an application settings value in a page that is not compiled.  \n  \n [!code-vb[System.Web.Compilation.AppSettingsExpressionBuilder#1](~/add/codesnippet/visualbasic/t-system.web.compilation_6_1.aspx)]\n [!code-cs[System.Web.Compilation.AppSettingsExpressionBuilder#1](~/add/codesnippet/csharp/t-system.web.compilation_6_1.aspx)]  \n  \n This code retrieves the following expression from the Web.config file.  \n  \n `<configuration xmlns=\"http://schemas.microsoft.com/.NetConfiguration/v2.0\">`  \n  \n `<appSettings>`  \n  \n `<add key=\"thisSeason\" value=\"Fall\"/>`  \n  \n `</appSettings>`  \n  \n `</configuration>`"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.AppSettingsExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("AppSettings")]

      public class AppSettingsExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: AppSettingsExpressionBuilder()
  nameWithType: AppSettingsExpressionBuilder.AppSettingsExpressionBuilder()
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.AppSettingsExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.AppSettingsExpressionBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public AppSettingsExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: AppSettingsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "値を返します、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションです。"
  remarks: 'このメソッドは、フォームの式`<%$ AppSettings: someApplicationSetting %>`コンパイルなし ページで発生しました。 キー/値ペアから適切な値を取得、 `<appSettings>` Web.config ファイルのセクションです。 このメソッドは<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>を呼び出して、<xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting%2A>メソッドを<xref:System.Web.UI.BoundPropertyEntry.Expression%2A>プロパティとして、 `key` 、パラメーター、<xref:System.Web.UI.PropertyEntry.Name%2A>プロパティを<xref:System.Web.UI.PropertyEntry.PropertyInfo%2A?displayProperty=fullName>プロパティとして、`propertyName`パラメーター、および<xref:System.Type>の`target`パラメーターとして、`targetType`パラメーター</xref:System.Type> </xref:System.Web.UI.PropertyEntry.PropertyInfo%2A?displayProperty=fullName> </xref:System.Web.UI.PropertyEntry.Name%2A> </xref:System.Web.UI.BoundPropertyEntry.Expression%2A> </xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting%2A> </xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 。'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "プロパティのエントリを格納するオブジェクト。"
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "式がバインドされているプロパティ."
    - id: parsedData
      type: System.Object
      description: "表すオブジェクトを解析済みデータが<xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>。</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>によって返される"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.Object
      description: "<xref:System.Object>内のキーに関連付けられている、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクション</xref:System.Object>。"
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String)
  id: GetAppSetting(System.String)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: GetAppSetting(String)
  nameWithType: AppSettingsExpressionBuilder.GetAppSetting(String)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "値を返します、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションです。"
  remarks: "このメソッドは、キーと値のペアから適切な値を取得、 `<appSettings>` Web.config ファイルのセクションです。 取得することによって、値を取得、<xref:System.Configuration.ConfigurationManager.AppSettings%2A>インデックスとしてキーを持つプロパティです</xref:System.Configuration.ConfigurationManager.AppSettings%2A>。 <xref:System.Object>種類<xref:System.String>。</xref:System.String>が返されますが</xref:System.Object>"
  syntax:
    content: public static object GetAppSetting (string key);
    parameters:
    - id: key
      type: System.String
      description: "構成ファイルから取得する値のキー。"
    return:
      type: System.Object
      description: "<xref:System.Object>内のキーに関連付けられている、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクション</xref:System.Object>。"
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Web.config で、キーが見つかりませんでした。"
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String,System.Type,System.String)
  id: GetAppSetting(System.String,System.Type,System.String)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: GetAppSetting(String,Type,String)
  nameWithType: AppSettingsExpressionBuilder.GetAppSetting(String,Type,String)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(String,Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "値を返します、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref>値を含む Web.config ファイルのセクションでは、ターゲット型に変換します。"
  remarks: "このメソッドは、キーと値のペアから適切な値を取得、 `<appSettings>` Web.config ファイルのセクションです。 取得することによって、値を取得、<xref:System.Configuration.ConfigurationManager.AppSettings%2A>インデックスとしてキーを持つプロパティです</xref:System.Configuration.ConfigurationManager.AppSettings%2A>。 結果の文字列値がに基づいて新しい型に変換された、`targetType`と`propertyName`パラメーター。"
  syntax:
    content: public static object GetAppSetting (string key, Type targetType, string propertyName);
    parameters:
    - id: key
      type: System.String
      description: "構成ファイルから取得する値のキー。"
    - id: targetType
      type: System.Type
      description: "プロパティのエントリを格納しているオブジェクトの型。"
    - id: propertyName
      type: System.String
      description: "式がバインドされているプロパティの名前。"
    return:
      type: System.Object
      description: "<xref:System.Object>内のキーに関連付けられている、 <xref uid=&quot;langword_csharp_&lt;appSettings&gt;&quot; name=&quot;&lt;appSettings&gt;&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクション</xref:System.Object>。"
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The key is not found in Web.config.  \n  \n \\- or -  \n  \n The return value could not be converted."
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: AppSettingsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "生成されたページ クラスのプロパティの割り当てを実行するために使用されるコード式を返します。"
  remarks: "このメソッドは、ページまたはコントロールの CodeDOM の作成時に呼び出されます。 返される<xref:System.CodeDom.CodeExpression>オブジェクトは、生成されたページ クラスのプロパティの割り当てを追加するコード式を表します。</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "式がバインドされているプロパティです。"
    - id: parsedData
      type: System.Object
      description: "表すオブジェクトを解析済みデータが<xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>。</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>によって返される"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>プロパティの割り当てに使用されます。"
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: AppSettingsExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイルされていない ページで、式を評価できるかどうかを示す値を返します。"
  remarks: "SupportsEvaluate プロパティを示すかどうか、<xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A>メソッドがクラスに実装されているし、式の値を返すことができます</xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A>。 <xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A>コンパイルされていない ページで評価される式の式ビルダー以内に実装する必要があります。</xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.AppSettingsExpressionBuilder>クラスをサポートしているアプリケーション設定の評価がコンパイルされていないページで、常に返すように`true`</xref:System.Web.Compilation.AppSettingsExpressionBuilder>。"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.#ctor
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: AppSettingsExpressionBuilder()
  nameWithType: AppSettingsExpressionBuilder.AppSettingsExpressionBuilder()
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.AppSettingsExpressionBuilder()
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: AppSettingsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: GetAppSetting(String)
  nameWithType: AppSettingsExpressionBuilder.GetAppSetting(String)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(System.String,System.Type,System.String)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: GetAppSetting(String,Type,String)
  nameWithType: AppSettingsExpressionBuilder.GetAppSetting(String,Type,String)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: AppSettingsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: AppSettingsExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.#ctor*
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: AppSettingsExpressionBuilder
  nameWithType: AppSettingsExpressionBuilder.AppSettingsExpressionBuilder
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: AppSettingsExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetAppSetting*
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: GetAppSetting
  nameWithType: AppSettingsExpressionBuilder.GetAppSetting
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: AppSettingsExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.AppSettingsExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.AppSettingsExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: AppSettingsExpressionBuilder.SupportsEvaluate
