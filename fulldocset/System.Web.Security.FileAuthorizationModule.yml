### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "ユーザーが要求されたファイルにアクセスする権限を持っていることを確認します。 このクラスは継承できません。"
  remarks: "このモジュールは、アクセス制御リスト (Acl) にファイル システムに対する承認サービスを提供します。 ときに、`mode`の属性、[認証要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2)に設定されている構成要素`Windows`できるように、<xref:System.Web.Security.WindowsAuthenticationModule>がアプリケーションで使用されているモジュールにより、要求元のユーザーが許可されている持ちますの読み取りまたは書き込み要求を実行する前に、要求の動詞に応じて、リソースにアクセスします</xref:System.Web.Security.WindowsAuthenticationModule>。 詳細については、次を参照してください、<xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>メソッド。</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> 。"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。       ASP.NET は、<xref:System.Web.Security.FileAuthorizationModule>クラス</xref:System.Web.Security.FileAuthorizationModule>のインスタンスを作成するこのコンス トラクターを呼び出します コンス トラクターを呼び出す、<xref:System.Web.Security.FileAuthorizationModule.Init%2A>新しい初期化するメソッドを<xref:System.Web.Security.FileAuthorizationModule>オブジェクト</xref:System.Web.Security.FileAuthorizationModule></xref:System.Web.Security.FileAuthorizationModule.Init%2A>。"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーが要求されたファイルへのアクセスを持つかどうかを判断します。"
  remarks: "CheckFileAccessForUser メソッドは、Windows のアクセス トークンによって表される、現在のユーザーがファイル システム アクセス制御リスト (Acl) で要求されたファイルへのアクセスを許可しているかどうかを確認します。 仮想パスは、チェックが行われる前に、物理ファイル システム パスにマップされます。       かどうか、要求に使用される HTTP 動詞は`GET`、 `POST`、または`HEAD`、CheckFileAccessForUser メソッドは、ファイルへの読み取りアクセスを確認します。 その他の動詞を使用する場合、CheckFileAccessForUser メソッド ファイルへの読み取り/書き込みアクセス許可を確認します。       **セキュリティに関する注意**場合、<xref:System.Web.Security.FileAuthorizationModule>でモジュールが定義されていない、 `httpModules` 、アプリケーションの構成セクション、<xref:System.Web.Security.FileAuthorizationModule>モジュールが常に返す`true`</xref:System.Web.Security.FileAuthorizationModule></xref:System.Web.Security.FileAuthorizationModule>。"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ファイルへの仮想パス。"
    - id: token
      type: System.IntPtr
      description: "ユーザーを表す Windows アクセス トークンです。"
    - id: verb
      type: System.String
      description: "HTTP 動詞の要求を行うために使用します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表される、現在の Windows ユーザー場合<code> token </code>指定された HTTP 動詞を使用して、ファイルへのアクセス権場合、または、 <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>モジュールがアプリケーションの構成ファイルで定義されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>Web アプリケーションのアプリケーションのディレクトリ構造ではありません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "によって指定されたファイル<code> virtualPath </code>存在しません。"
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "によって使用されるメモリ以外のすべてのリソースを解放、 <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;></xref>です。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初期化、 <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>オブジェクト。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       Init メソッドにより、<xref:System.Web.Security.FileAuthorizationModule>の処理に含まれる、<xref:System.Web.HttpApplication.AuthorizeRequest>イベント</xref:System.Web.HttpApplication.AuthorizeRequest></xref:System.Web.Security.FileAuthorizationModule>。"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "現在<xref href=&quot;System.Web.HttpApplication&quot;></xref>インスタンス。"
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
