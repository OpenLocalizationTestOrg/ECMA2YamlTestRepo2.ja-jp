### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ScriptMethodAttribute
  id: ScriptMethodAttribute
  children:
  - System.Web.Script.Services.ScriptMethodAttribute.#ctor
  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  langs:
  - csharp
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute
  fullName: System.Web.Script.Services.ScriptMethodAttribute
  type: Class
  summary: "メソッド、および応答の形式を呼び出すために使用する HTTP 動詞を指定します。 このクラスは継承できません。"
  remarks: "この属性を使用してをクライアント スクリプトから呼び出すことができるメソッドについてを指定します。 属性を使用して、メソッドを呼び出すに使用できる HTTP 動詞 (GET または POST) を指定できます。 また、JavaScript Object Notation (JSON) または XML を使用して、応答が書式設定するかどうかを指定することもできます。       ScriptMethodAttribute 属性は省略できます。 (ただし、クライアント スクリプトから呼び出すことができるメソッドがあります、<xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName>属性を適用します)。</xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> 。 場合は、メソッドは、ScriptMethodAttribute でマークされていない、HTTP POST コマンドを使用して、メソッドが呼び出され、応答を JSON としてシリアル化されます。 スクリプトからは、この設定を上書きすることはできません。       名前付きパラメーターのみを ScriptMethodAttribute 受け取ります。 名前付きパラメーターとして使用できる ScriptMethodAttribute クラスのプロパティを次に示します:- <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>HTTP GET コマンドを使用して、メソッドが呼び出されるかどうかを指定します</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>。 既定値は`false`します。          > [!IMPORTANT] > 設定、<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>プロパティを`true`機密データまたはトランザクションで作業している場合、アプリケーションのセキュリティ上のリスクを引き起こす可能性が</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>。 GET 要求では、メッセージは、ブラウザーによって URL にエンコードされ、改ざんの簡単なターゲットであるため。 GET と POST の両方の要求の機密性の高いデータを保護するセキュリティ ガイドラインに従ってください。      -<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>形式として JSON または XML として、応答をシリアル化にするかどうかを指定します</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>。 既定値は`Json`します。 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>プロパティ、メソッドが戻るときに、戻り値の型としての XML を指定すると便利です、<xref:System.Xml.XmlDocument>または<xref:System.Xml.XmlElement>オブジェクト</xref:System.Xml.XmlElement></xref:System.Xml.XmlDocument></xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>。      -<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>文字列型など、戻り値のすべての型が XML としてシリアル化するかどうかを指定します</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>。 値、<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>応答が JSON としてシリアル化する場合、プロパティは無視されます</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>。       属性を使用する方法の詳細については、次を参照してください。[属性](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ScriptMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Script.Services.ScriptMethodAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public ScriptMethodAttribute ();
    parameters: []
  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  id: ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "取得またはメソッドの応答の形式を設定します。"
  remarks: "戻り値の型の形式として XML を指定する場合は、ResponseFormat プロパティを使用します。 これにより、メソッドが戻るとき、<xref:System.Xml.XmlDocument>または<xref:System.Xml.XmlElement>オブジェクト</xref:System.Xml.XmlElement></xref:System.Xml.XmlDocument>。       ResponseFormat プロパティに設定するときに`Xml`、パブリック フィールドと、戻り値の型を持つプロパティ、<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>適用された属性は無視されません</xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>。 これは、それらを使用してシリアル化するため、<xref:System.Xml.Serialization.XmlSerializer>オブジェクトの代わりに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>オブジェクト</xref:System.Web.Script.Serialization.JavaScriptSerializer></xref:System.Xml.Serialization.XmlSerializer>。 適用する必要があります、<xref:System.Xml.Serialization.XmlIgnoreAttribute>属性を<xref:System.Xml.Serialization.XmlSerializer>無視、またはこれらのパブリック フィールドと戻り値の型のプロパティをスキップします</xref:System.Xml.Serialization.XmlSerializer></xref:System.Xml.Serialization.XmlIgnoreAttribute>。"
  example:
  - "The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }
    return:
      type: System.Web.Script.Services.ResponseFormat
      description: "1 つ、 <xref href=&quot;System.Web.Script.Services.ResponseFormat&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Json&quot; name=&quot;Json&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  id: UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "取得または HTTP GET を使用して、メソッドを呼び出すかどうかを示す値を設定します。"
  remarks: "クライアントのように ECMAScript (JavaScript) からこのプロパティをオーバーライドすることはできません。 このプロパティ設定されている場合`true`、スクリプトからは、メソッドの呼び出しは常に HTTP GET を使用します。       このプロパティに設定するときに`true`、クライアント プロキシ コードで HTTP GET を使用して、Web サービスを呼び出します。 メソッドの入力パラメーターは、Web メソッドの呼び出しに使用される URL のクエリ パラメーターとして表示されます。 パラメーター値の JavaScript Object Notation (JSON) シリアル化と、パラメーターの値の URL エンコードを取得します。       Web サービス メソッドを呼び出すための HTTP GET を使用では、他の Web の対話のため、同じガイドラインに従います。 機微なデータが公開されていないと、サーバーの処理に副作用があるない場合にのみ操作の HTTP GET を使用する必要があります。      > [!IMPORTANT] > UseHttpGet プロパティを設定`true`機密データまたはトランザクションで作業している場合、アプリケーションのセキュリティ上の問題可能性があります。 GET 要求では、メッセージは、ブラウザーによって URL にエンコードされ、改ざんの簡単なターゲットであるため。"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseHttpGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>HTTP GET コマンドを使用して、メソッドが呼び出された場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> HTTP POST コマンドを使用して、メソッドが呼び出された場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  id: XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "取得またはすべての戻り値の型が文字列型を含む XML としてシリアル化するかどうかを示す値を設定します。"
  remarks: "このプロパティに設定するときに`false`、すべての戻り値の型が XML マークアップとして解釈されますが、文字列を除く、XML としてシリアル化します。 値が場合`false`、シリアル化された文字列が可能になっている場合、戻り値の型は、文字列であり、その結果が成功コールバック関数が呼び出される、文字列に整形式 XML ドキュメントに対応する XML マークアップが含まれていない場合`null`です。       XmlSerializeString の値は無視されるときに、<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>プロパティに設定されている`Json`</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>。"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool XmlSerializeString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての戻り値の型が XML としてシリアル化される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ResponseFormat
  parent: System.Web.Script.Services
  isExternal: false
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: System.Web.Script.Services.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
