### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher
  id: ChannelDispatcher
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  langs:
  - csharp
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher
  type: Class
  summary: "チャネルを受け入れるし、サービスを関連付けるコンポーネント。"
  remarks: "ChannelDispatcher オブジェクトは、<xref:System.ServiceModel.Channels.IChannelListener>サービスのインスタンスに特定の URI (リッスン URI と呼ばれます) にします</xref:System.ServiceModel.Channels.IChannelListener>。 各<xref:System.ServiceModel.ServiceHost>オブジェクトは、多くの ChannelDispatcher オブジェクトを持つことができます、それぞれ異なるリスナーに関連付けられているし、そのサービスの URI をリッスンします</xref:System.ServiceModel.ServiceHost>。       ChannelDispatcher クエリ関連付けられている<xref:System.ServiceModel.Dispatcher.EndpointDispatcher>エンドポイントが、メッセージを受け入れることができ、その分からないにメッセージを渡すかどうかのオブジェクト</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>の各メッセージが到着すると、 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>オブジェクトは、メッセージの送信先アドレスと一致する場合、ChannelDispatcher からメッセージの処理を担当する、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>プロパティ一致しており、メッセージ アクション、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>プロパティ</xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A></xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A></xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。       有効期間とチャネル セッションの動作を制御するすべてのプロパティを検査または ChannelDispatcher オブジェクトに対する変更を利用できます。 加え、 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>、ユーザー設定が含まれます<xref:System.ServiceModel.Dispatcher.IChannelInitializer>、オブジェクト、 <xref:System.ServiceModel.Channels.IChannelListener>、<xref:System.ServiceModel.ServiceHost>では、関連および<xref:System.ServiceModel.InstanceContext>.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.IChannelInitializer> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#0](~/add/codesnippet/csharp/t-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_0_1.vb)]
  syntax:
    content: 'public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref>クラスです。"
  remarks: "新しいインスタンスを初期化、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>システムが提供する既定のタイムアウトを持つ、指定されたリスナーからのクラス</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#1](~/add/codesnippet/csharp/c36e66cf-4fd5-4f92-a03a-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#1](~/add/codesnippet/visualbasic/c36e66cf-4fd5-4f92-a03a-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref>チャネル ディスパッチャーのです。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref>クラスです。"
  remarks: "新しいインスタンスを初期化、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>から、指定したリスナーとバインディング、およびシステムが提供する既定のタイムアウトを持つクラス</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#2](~/add/codesnippet/csharp/a9625d03-f4da-4d72-ae2d-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#2](~/add/codesnippet/visualbasic/a9625d03-f4da-4d72-ae2d-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref>チャネル ディスパッチャーのです。"
    - id: bindingName
      type: System.String
      description: "サービスの構成に使用するバインディングの名前です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref>クラスです。"
  remarks: "新しいインスタンスを初期化、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>から、指定したリスナーとバインディング、および指定された既定のタイムアウトを持つクラス</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#3](~/add/codesnippet/csharp/cadf0641-a6e2-46bb-8257-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#3](~/add/codesnippet/visualbasic/cadf0641-a6e2-46bb-8257-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref>サービス。"
    - id: bindingName
      type: System.String
      description: "サービスの構成に使用するバインディングの名前です。"
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>サービス</xref:System.ServiceModel.IDefaultCommunicationTimeouts>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  id: AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "受け入れるかどうか、トランザクション処理されたリスナーに対するメソッド呼び出しが非同期かを示す値を取得します。"
  syntax:
    content: public bool AsynchronousTransactedAcceptEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トランザクションを受け入れるリスナーに対してメソッドを呼び出す場合は非同期です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーをホストにアタッチします。"
  remarks: "このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  syntax:
    content: protected override void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>サービス。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  id: BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "サービスの構成に使用するバインディングの名前を取得します。"
  remarks: "このチャネル ディスパッチャーが関連付けられているバインディングのバインディング名を取得するために使用します。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#4](~/add/codesnippet/csharp/p-system.servicemodel.di_13_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#4](~/add/codesnippet/visualbasic/p-system.servicemodel.di_13_1.vb)]
  syntax:
    content: public string BindingName { get; }
    return:
      type: System.String
      description: "サービスのバインディング名。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  id: ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "一連の取得<xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;></xref>検査し、最初に作成されたときに、チャネルに状態を追加に使用できるオブジェクト。"
  remarks: "このプロパティを使用して、カスタムのチャネル初期化子は、コレクションに挿入する、初期化を検査またはが作成されるときに、チャネルの状態を変更します。 またこれは、ディスパッチャーに関連付けられているコントラクトが双方向コントラクトの場合、送信チャネルの動作は同じを実行すると便利です。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#5](~/add/codesnippet/csharp/p-system.servicemodel.di_14_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#5](~/add/codesnippet/visualbasic/p-system.servicemodel.di_14_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer> ChannelInitializers { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt;型の<xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;></xref>オブジェクト。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいチャネルを受け入れるリスナーを停止します。"
  remarks: "このメソッドを呼び出すと、リスナーがリッスンを停止します。"
  syntax:
    content: public override void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーを閉じるための時間の既定の間隔を取得します。"
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>。</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>を使用して、この既定の close タイムアウトを設定することができます。 それ以外の場合、サービス モデルの既定値の 1 分が使用されます。"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル ディスパッチャーを閉じるための時間の既定の間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "既定のチャネル ディスパッチャーを開くための時間を取得します。"
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>。</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>を使用して、この既定の open タイムアウトを設定することができます。 それ以外の場合、サービス モデルの既定値の 1 分が使用されます。"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル ディスパッチャーを閉じるための時間の既定の間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーからサービス ホストをデタッチします。"
  remarks: "<xref:System.ServiceModel.ServiceHostBase>できるときにのみ切断のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher></xref:System.ServiceModel.ServiceHostBase>。       セット、<xref:System.ServiceModel.ServiceHostBase>チャネル ディスパッチャーに関連付けられている`null`</xref:System.ServiceModel.ServiceHostBase>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#18](~/add/codesnippet/csharp/334cfaeb-0991-457b-b54b-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#18](~/add/codesnippet/visualbasic/334cfaeb-0991-457b-b54b-_1.vb)]
  syntax:
    content: protected override void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>サービス。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  id: Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネルのエンドポイントにメッセージを転送するエンドポイント ディスパッチャーを取得します。"
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>が明確な<xref:System.ServiceModel.Dispatcher.EndpointDispatcher>チャネルをサポートできるエンドポイントごとにします</xref:System.ServiceModel.Dispatcher.EndpointDispatcher></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。       使用して、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher>エンドポイント全体のランタイムをカスタマイズできるランタイム プロパティへのアクセスを取得します</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#6](~/add/codesnippet/csharp/p-system.servicemodel.di_17_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#6](~/add/codesnippet/visualbasic/p-system.servicemodel.di_17_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher> Endpoints { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt;の<xref:System.ServiceModel.Dispatcher.EndpointDispatcher>チャネルのエンドポイントにメッセージを転送する</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  id: ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "一連の取得<xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;></xref>カスタム エラー処理エンドポイントの機能を挿入するために使用できるオブジェクト。"
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#7](~/add/codesnippet/csharp/p-system.servicemodel.di_10_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#7](~/add/codesnippet/visualbasic/p-system.servicemodel.di_10_1.vb)]
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler> ErrorHandlers { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
      description: "A &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt;の<xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;></xref>オブジェクト。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ディスパッチャーに関連付けられているサービスのホストを取得します。"
  remarks: "各<xref:System.ServiceModel.ServiceHost>オブジェクトが持つ多く<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>オブジェクトを別に関連付けられている各<xref:System.ServiceModel.Channels.IChannelListener>のサービスに対する</xref:System.ServiceModel.Channels.IChannelListener></xref:System.ServiceModel.Dispatcher.ChannelDispatcher></xref:System.ServiceModel.ServiceHost>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#8](~/add/codesnippet/csharp/p-system.servicemodel.di_8_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#8](~/add/codesnippet/visualbasic/p-system.servicemodel.di_8_1.vb)]
  syntax:
    content: public override System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>ディスパッチャーに関連付けられているサービスです。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得または例外に関する詳細をエラーに含めるかどうかを示す値を設定します。"
  remarks: "このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#19](~/add/codesnippet/csharp/01ac9eb7-71a0-4d33-b665-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#19](~/add/codesnippet/visualbasic/01ac9eb7-71a0-4d33-b665-_1.vb)]
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>エラーの例外に関する詳細が含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  id: IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "リスナーに対する受け入れメソッド呼び出しがトランザクションの下で行われたかどうかを示す値を取得します。"
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#9](~/add/codesnippet/csharp/p-system.servicemodel.di_7_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#9](~/add/codesnippet/visualbasic/p-system.servicemodel.di_7_1.vb)]
  syntax:
    content: public bool IsTransactedAccept { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リスナーに対する受け入れメソッド呼び出しがトランザクションで行われた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  id: IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "リスナーに対する受信メソッド呼び出しがトランザクションの下で行われたかどうかを示す値を取得します。"
  remarks: "IsTransactedReceive プロパティできるときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#10](~/add/codesnippet/csharp/p-system.servicemodel.di_11_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#10](~/add/codesnippet/visualbasic/p-system.servicemodel.di_11_1.vb)]
  syntax:
    content: public bool IsTransactedReceive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リスナーに対する受信メソッド呼び出しがトランザクションで行われた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーに関連付けられているリスナーを取得します。"
  remarks: "A<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>関連付けます、<xref:System.ServiceModel.Channels.IChannelListener>サービスのインスタンスに特定の uri</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#11](~/add/codesnippet/csharp/p-system.servicemodel.di_5_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#11](~/add/codesnippet/visualbasic/p-system.servicemodel.di_5_1.vb)]
  syntax:
    content: public override System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref>チャネル ディスパッチャーに関連付けられています。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはチャネル ディスパッチャーが要求/応答メッセージにアドレス指定ヘッダーを追加するかどうかを示す値を設定します。"
  remarks: "このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。       設定、<xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>プロパティを`true`クライアントがメッセージの ID を追加することを防止する場合と、アプリケーションがこれらのヘッダーを制御できるように、要求/応答メッセージにヘッダーをアドレス指定 ReplyTo</xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#12](~/add/codesnippet/csharp/p-system.servicemodel.di_6_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#12](~/add/codesnippet/visualbasic/p-system.servicemodel.di_6_1.vb)]
  syntax:
    content: public bool ManualAddressing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プロキシがアドレス指定ヘッダー; を追加しない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 「解説」を参照してください。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  id: MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはチャネルごとの保留メッセージの最大値を設定します。"
  syntax:
    content: public int MaxPendingReceives { get; set; }
    return:
      type: System.Int32
      description: "メッセージの最大数を表す整数。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  id: MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはトランザクション バッチの最大サイズを設定します。"
  remarks: "MaxTransactedBatchSize プロパティできるときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#13](~/add/codesnippet/csharp/p-system.servicemodel.di_9_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#13](~/add/codesnippet/visualbasic/p-system.servicemodel.di_9_1.vb)]
  syntax:
    content: public int MaxTransactedBatchSize { get; set; }
    return:
      type: System.Int32
      description: "トランザクション バッチの最大サイズ。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定されている値が&0; 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得または SOAP メッセージおよび Ws-addressing のバージョンを使用または予想されるを設定します。"
  remarks: "メッセージとその交換に関連付けられている SOAP と Ws-addressing のバージョンを指定します。       このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#20](~/add/codesnippet/csharp/p-system.servicemodel.di_1_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#20](~/add/codesnippet/visualbasic/p-system.servicemodel.di_1_1.vb)]
  syntax:
    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "<xref:System.ServiceModel.Channels.MessageVersion>を使用または予想される</xref:System.ServiceModel.Channels.MessageVersion>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ディスパッチャーに関連付けられているリスナーを中止します。"
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "指定した時間間隔内に完了する必要がありますディスパッチャーのチャネル リスナーを閉じる非同期操作を開始します。"
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>クローズ操作がタイムアウトするまでに完了するがどのくらいの期間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>閉じる操作の非同期完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>をディスパッチャーのチャネル リスナーを閉じる非同期操作を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "指定した時間間隔内に完了する必要がありますディスパッチャーのチャネル リスナーを開く非同期操作を開始します。"
  remarks: "チャネル ディスパッチャーが以外を関連付ける必要がある`null`このメソッドが呼び出されたときに、サービス ホスト。"
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>オープン操作がタイムアウトするまでに完了するがどのくらいの期間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>の open 操作の非同期完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の open 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>をディスパッチャーのチャネル リスナーを開く非同期操作を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストまたはメッセージのバージョンが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ディスパッチャーに関連付けられた、指定した時間間隔内でチャネル リスナーを閉じます。"
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>リスナーを閉じるための時間間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  id: OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーに関連付けられているエンドポイント ディスパッチャーを閉じるときのトレースを提供します。"
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ディスパッチャーのチャネル リスナーを閉じる非同期操作を完了します。"
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*>メソッド</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*></xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "ディスパッチャーのチャネル リスナーを開く非同期操作を完了します。"
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*>メソッド</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*></xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーに関連付けられているリスナーを開きます。"
  remarks: "チャネル ディスパッチャーが以外を関連付ける必要がある`null`サービス ホストの場合、このメソッドが呼び出され、メッセージ バージョンを以外に設定する必要があります`null`値。"
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>リスナーを開くための時間間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストまたはメッセージのバージョンが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  id: OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "作成して、エンドポイントへのディスパッチに使用するフィルター テーブルを検証します。"
  remarks: "チャネル ディスパッチャーが以外を関連付ける必要がある`null`このメソッドが呼び出されたときに、サービス ホスト。"
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "チャネル ディスパッチャーがホストに接続されているかどうかを確認します。"
  remarks: "チャネル ディスパッチャーが以外を関連付ける必要がある`null`を開くときのサービス ホスト。"
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得または ReceiveContext が有効になっているかどうかを設定します。"
  remarks: "ReceiveContext をロックするなど、メッセージのために必要な場合に限り、サービスがメッセージを処理する方法を制御します。"
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ReceiveContext が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはディスパッチャーが同期呼び出しを使用してチャネルからメッセージを読み取るかどうかを指定する値を設定します。"
  remarks: "バインディングを実装する場合<xref:System.ServiceModel.Channels.IBindingRuntimePreferences>、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]の値を割り当てます、<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>このプロパティをプロパティ</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A></xref:System.ServiceModel.Channels.IBindingRuntimePreferences>。 したがって、この値は`true`、`false`の既定値<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>はオーバーライドします</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>。       このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#14](~/add/codesnippet/csharp/p-system.servicemodel.di_3_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#14](~/add/codesnippet/visualbasic/p-system.servicemodel.di_3_1.vb)]
  syntax:
    content: public bool ReceiveSynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディスパッチャーが同期メソッドを使用してチャネルからメッセージを読み取る場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  id: SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはメッセージが非同期的に送信されるかどうかを設定します。"
  syntax:
    content: public bool SendAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メッセージを非同期的に送信する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  id: ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはチャネル ディスパッチャーに関連付けられているサービスのサービス スロットルを設定します。"
  remarks: "これは、可用性とサービスのパフォーマンスを最適化するために使用されているコントロールへのアクセスを提供します。       このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#15](~/add/codesnippet/csharp/p-system.servicemodel.di_16_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#15](~/add/codesnippet/visualbasic/p-system.servicemodel.di_16_1.vb)]
  syntax:
    content: public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ServiceThrottle
      description: "A <xref href=&quot;System.ServiceModel.Dispatcher.ServiceThrottle&quot;></xref> object."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはトランザクションの既定の分離レベルを設定します。"
  remarks: "取得またはサービスのディスパッチャーによって作成された新しいトランザクションの既定の分離レベルを設定するには、TransactionIsolationLevel プロパティを使用します。       このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#16](~/add/codesnippet/csharp/p-system.servicemodel.di_2_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#16](~/add/codesnippet/visualbasic/p-system.servicemodel.di_2_1.vb)]
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "1 つ、 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>値。 既定値は<xref href=&quot;System.Transactions.IsolationLevel&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "分離レベルを設定が定義されていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "取得またはサービスに代わってディスパッチャーによって作成された新しいトランザクションの既定のタイムアウトを指定する値を設定します。"
  remarks: "このプロパティがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#17](~/add/codesnippet/csharp/p-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#17](~/add/codesnippet/visualbasic/p-system.servicemodel.di_0_1.vb)]
  syntax:
    content: public TimeSpan TransactionTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をトランザクションの既定のタイムアウト期間を表す値</xref:System.TimeSpan>。 既定値は<xref:System.TimeSpan>。</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定されている値は&0; より小さいかが大きすぎます。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: System.ServiceModel.Dispatcher.ChannelDispatcherBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<IChannelInitializer>
  nameWithType: SynchronizedCollection<IChannelInitializer>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IChannelInitializer
    name: IChannelInitializer
    nameWithType: IChannelInitializer
    fullName: IChannelInitializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<EndpointDispatcher>
  nameWithType: SynchronizedCollection<EndpointDispatcher>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.EndpointDispatcher
    name: EndpointDispatcher
    nameWithType: EndpointDispatcher
    fullName: EndpointDispatcher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<IErrorHandler>
  nameWithType: Collection<IErrorHandler>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IErrorHandler
    name: IErrorHandler
    nameWithType: IErrorHandler
    fullName: IErrorHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher.ChannelDispatcher
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcher.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcher.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcher.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort
  nameWithType: ChannelDispatcher.OnAbort
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose
  nameWithType: ChannelDispatcher.OnBeginClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen
  nameWithType: ChannelDispatcher.OnBeginOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose
  nameWithType: ChannelDispatcher.OnClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed
  nameWithType: ChannelDispatcher.OnClosed
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose
  nameWithType: ChannelDispatcher.OnEndClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen
  nameWithType: ChannelDispatcher.OnEndOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen
  nameWithType: ChannelDispatcher.OnOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened
  nameWithType: ChannelDispatcher.OnOpened
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening
  nameWithType: ChannelDispatcher.OnOpening
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
