### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "デジタル署名の生成に使用される暗号化キーとセキュリティ アルゴリズムを表します。"
  remarks: "SigningCredentials クラスを使用して、署名キー、署名キー識別子、およびセキュリティ アルゴリズムによって使用されている[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion>のデジタル署名を生成するには デジタル署名の詳細を設定するには、<xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A><xref:System.IdentityModel.Tokens.SamlAssertion>クラス</xref:System.IdentityModel.Tokens.SamlAssertion>のプロパティ</xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A>を設定します。"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref>クラスです。"
  remarks: "使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>クラスを指定する、`signatureAlgorithm`と`digestAlgorithm`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。 <xref:System.IdentityModel.Tokens.SecurityAlgorithms>クラスには、暗号アルゴリズムを表す静的な定数文字列のセットが含まれています</xref:System.IdentityModel.Tokens.SecurityAlgorithms>。 持つメンバー、`Signature`サフィックスを指定するために使用できる、`signatureAlgoritm`パラメーターと、メンバーを持つ、`Digest`を指定するサフィックスを使用することができます、`digestAlgorithm`パラメーター。"
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>デジタル署名を生成するために使用される暗号化キーを格納しています。"
    - id: signatureAlgorithm
      type: System.String
      description: "デジタル署名を生成するために使用される暗号アルゴリズムを表す URI。"
    - id: digestAlgorithm
      type: System.String
      description: "デジタル署名される SOAP メッセージの部分のダイジェストの計算に使用される暗号アルゴリズムを表す URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref>クラスです。"
  remarks: "使用して、<xref:System.IdentityModel.Tokens.SecurityAlgorithms>クラスを指定する、`signatureAlgorithm`と`digestAlgorithm`パラメーター</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 。 <xref:System.IdentityModel.Tokens.SecurityAlgorithms>クラスには、暗号アルゴリズムを表す静的定数文字列のセットが含まれています</xref:System.IdentityModel.Tokens.SecurityAlgorithms>。 持つメンバー、`Signature`サフィックスを指定するために使用できる、`signatureAlgoritm`パラメーターと、メンバーを持つ、`Digest`を指定するサフィックスを使用することができます、`digestAlgorithm`パラメーター。"
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>デジタル署名を生成するために使用される暗号化キーを格納しています。"
    - id: signatureAlgorithm
      type: System.String
      description: "デジタル署名を生成するために使用される暗号アルゴリズムを表す URI。"
    - id: digestAlgorithm
      type: System.String
      description: "デジタル署名される SOAP メッセージの部分のダイジェストの計算に使用される暗号アルゴリズムを表す URI。"
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>デジタル署名の作成に使用されるキーを表す識別子を指定します。"
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "デジタル署名される SOAP メッセージの部分のダイジェストの計算に使用される暗号アルゴリズムを取得します。"
  remarks: "DigestAlgorithm プロパティを設定するを受け取るコンス トラクターのいずれかの操作を使用して、`digestAlgorithm`パラメーター。"
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "デジタル署名される SOAP メッセージの部分のダイジェストの計算に使用される暗号アルゴリズムを表す URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "デジタル署名を生成するために使用される暗号アルゴリズムを取得します。"
  remarks: "SignatureAlgorithm プロパティを設定するを受け取るコンス トラクターのいずれかの操作を使用して、`signatureAlgorithm`パラメーター。"
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "デジタル署名を生成するために使用される暗号アルゴリズムを表す URI。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "デジタル署名を生成するために使用される暗号化キーを取得します。"
  remarks: "SigningKey プロパティを設定するを受け取るコンス トラクターを使用して、`signingKey`パラメーター。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>デジタル署名を生成するために使用される暗号化キーを格納しています。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "デジタル署名の作成に使用されるキーを表す識別子を取得します。"
  remarks: "SigningKeyIdentifier プロパティを設定するを受け取るコンス トラクターを使用して、`signingKeyIdentifier`パラメーター。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>デジタル署名の作成に使用されるキーを表す識別子を指定します。"
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
