### YamlMime:ManagedReference
items:
- uid: System.Data.Services.DataServiceHost
  id: DataServiceHost
  children:
  - System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  langs:
  - csharp
  name: DataServiceHost
  nameWithType: DataServiceHost
  fullName: System.Data.Services.DataServiceHost
  type: Class
  summary: "[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]から派生したクラス<xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;></xref>データ サービスのインスタンスを作成するために使用します。"
  remarks: "[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]自律的なサーバー エンティティではありません。 代わりに、サービスは、中核となるサーバーのネットワーク機能を提供する Windows Communication Foundation (WCF) など、環境でホストされるコンポーネントです。 具体的には、サービスにバインドできません、および、Representational State Transfer (REST) のエントリ ポイントへの着信要求のネットワーク ソケットでリッスンしません。 ホストのハンドル、ネットワークとの対話、キャッシュ、スケーラビリティ、および認証モジュールをサポートできます。       [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]汎用ホスト インターフェイスを定義<xref:System.Data.Services.IDataServiceHost>、特定のホストからその実装を抽象化です</xref:System.Data.Services.IDataServiceHost>。 これにより、[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]多様なホスティング環境で実行します。 詳細については、次を参照してください。[データ サービスのホスティング](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public class DataServiceHost : System.ServiceModel.Web.WebServiceHost
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.ServiceHost
  - System.ServiceModel.Web.WebServiceHost
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  - System.ServiceModel.Web.WebServiceHost.OnOpening
  platform:
  - net462
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.Data.Services.DataServiceHost
  langs:
  - csharp
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "インスタンス化<xref href=&quot;System.Data.Services.DataServiceHost&quot;></xref>の[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]します。"
  remarks: '[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]汎用ホスト インターフェイスを定義<xref:System.Data.Services.IDataServiceHost>、特定のホストからその実装を抽象化です</xref:System.Data.Services.IDataServiceHost>。 これにより、[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]多様なホスティング環境で実行します。 このインターフェイスと混同しない<xref:System.Data.Services.DataServiceHost>、登録とアクティブ化サービスの代わりに処理します</xref:System.Data.Services.DataServiceHost>。 既定の<xref:System.Data.Services.IDataServiceHost>このケースが使用されます</xref:System.Data.Services.IDataServiceHost>。'
  syntax:
    content: public DataServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "識別、[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]をホストします。"
    - id: baseAddresses
      type: System.Uri[]
      description: "ホストの URI。"
  overload: System.Data.Services.DataServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: System.ServiceModel.Web.WebServiceHost
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.Data.Services.DataServiceHost
  isExternal: false
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Services.DataServiceHost.#ctor*
  parent: System.Data.Services.DataServiceHost
  isExternal: false
  name: DataServiceHost
  nameWithType: DataServiceHost.DataServiceHost
