### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder
  id: ConnectionStringsExpressionBuilder
  children:
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.#ctor
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString(System.String)
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(System.String)
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ConnectionStringsExpressionBuilder
  nameWithType: ConnectionStringsExpressionBuilder
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder
  type: Class
  summary: "取得した場合、またはから値を取得するコードを生成、 &lt; <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;> </xref> &gt; Web.config ファイルのセクションです。"
  remarks: "ConnectionStringsExpressionBuilder クラス内の値へのアクセスを提供する、 `connectionStrings`>、Web.config ファイルのセクションです。 `connectionStrings`>、Web.config ファイルのセクションには、名前/値ペア内の接続文字列の値が含まれています。       接続文字列の値を形式の式を割り当てることによって取得`<%$ ConnectionStrings: secureConnectionString %>`コントロールのプロパティにします。 コロン (:) の前に式の一部は、コロンは、接続文字列の名前を示します後に式を取得して、一部の種類を指定します。 直前の正規表現は、Web.config ファイルから次の値を取得するは。       `<connectionStrings>`       `<add name=&quot;secureConnectionString&quot; connectionString=&quot;Data`       `Source=localhost;Integrated Security=SSPI;Initial`       `Catalog=Northwind;&quot; providerName=&quot;System.Data.SqlClient&quot; />`       `</connectionStrings>`ページのパーサーが、プレフィックスを持つ式を検出すると`ConnectionStrings`式を処理する ConnectionStringsExpressionBuilder クラスのインスタンスを作成します。       コンパイルされるページで、式が検出した場合、ConnectionStringsExpressionBuilder オブジェクトは、Web.config ファイルから指定された接続文字列を取得するコードを生成します。 式はコンパイルされませんが、ページで、検出した場合、ConnectionStringsExpressionBuilder オブジェクトは、ページが解析される際に、Web.config ファイルから値を返します。"
  example:
  - "The following code example demonstrates how to declaratively use a <xref:System.Web.UI.WebControls.SqlDataSource> control to retrieve data from a computer running Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/t-system.web.compilation_7_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/t-system.web.compilation_7_1.aspx)]  \n  \n The code retrieves the following connection string from the Web.config file.  \n  \n `<configuration   xmlns=\"http://schemas.microsoft.com/.NetConfiguration/v2.0\">`  \n  \n `<connectionStrings>`  \n  \n `<add name=\"MyNorthwind\" connectionString=\"Data`  \n  \n `Source=localhost;Integrated Security=SSPI;Initial`  \n  \n `Catalog=Northwind;\" providerName=\"System.Data.SqlClient\" />`  \n  \n `</connectionStrings>`  \n  \n `</configuration>`"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ConnectionStringsExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("ConnectionStrings")]

      public class ConnectionStringsExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: ConnectionStringsExpressionBuilder()
  nameWithType: ConnectionStringsExpressionBuilder.ConnectionStringsExpressionBuilder()
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.ConnectionStringsExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ConnectionStringsExpressionBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public ConnectionStringsExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "値を返します、 &lt; <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;> </xref> &gt; Web.config ファイルのセクションです。"
  remarks: 'このメソッドは、フォームの式`<%$ ConnectionStrings: secureConnectionString %>`がコンパイルされていないページで、発生しました。 適切な値を取得、 `connectionStrings`>、Web.config ファイルのセクションです。 このメソッドは、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドを呼び出して、<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString%2A>メソッドで、接続文字列が含まれている場合、`parsedData`パラメーター、または呼び出すことによって、<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName%2A>メソッドで、接続文字列が含まれていない場合、`parsedData`パラメーター</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName%2A> </xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString%2A> </xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 。'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "式を含むオブジェクト。"
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "式がバインドされているプロパティです。"
    - id: parsedData
      type: System.Object
      description: "表すオブジェクトを解析済みデータが<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*>。</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*>によって返される"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.Object
      description: "<xref:System.Object>内のキーに関連付けられている、 &lt; <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;> </xref> &gt; Web.config ファイルのセクション</xref:System.Object>。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続文字列名は、Web.config ファイルで見つかりませんでした。"
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コード ページの解析中に評価する式を返します。"
  remarks: "このメソッドは、ページまたはコントロールの CodeDOM の作成時に呼び出されます。 <xref:System.CodeDom.CodeExpression>返されるオブジェクトの種類が<xref:System.CodeDom.CodeMethodInvokeExpression>、接続文字列の値を取得するときに呼び出すメソッドを表します</xref:System.CodeDom.CodeMethodInvokeExpression></xref:System.CodeDom.CodeExpression>。"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "式でバインドされているプロパティに関する情報を表すオブジェクト。"
    - id: parsedData
      type: System.Object
      description: "表すオブジェクトを解析済みデータが<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*>。</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*>によって返される"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>メソッドを呼び出します。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString(System.String)
  id: GetConnectionString(System.String)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: GetConnectionString(String)
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionString(String)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "接続文字列を返します、 &lt; <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;> </xref> &gt; Web.config ファイルのセクションです。"
  remarks: "<xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A>プロパティが接続のコレクションを文字列値を返します</xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A>。 GetConnectionString メソッドは、この接続文字列名に関連付けられているコレクションから値を返します。"
  syntax:
    content: public static string GetConnectionString (string connectionStringName);
    parameters:
    - id: connectionStringName
      type: System.String
      description: "接続文字列の名前。"
    return:
      type: System.String
      description: "接続文字列として、<xref:System.String>この接続文字列名</xref:System.String>。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続文字列名は、Web.config ファイルで見つかりませんでした。"
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(System.String)
  id: GetConnectionStringProviderName(System.String)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: GetConnectionStringProviderName(String)
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(String)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "接続文字列のプロバイダーを返します、 &lt; <xref uid=&quot;langword_csharp_connectionStrings&quot; name=&quot;connectionStrings&quot; href=&quot;&quot;> </xref> &gt; Web.config ファイルのセクションです。"
  remarks: "<xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A?displayProperty=fullName>プロパティが接続のコレクションを文字列値を返します</xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A?displayProperty=fullName>。 GetConnectionStringProviderName メソッドは、この接続文字列名に関連付けられているコレクションからの値プロバイダーを返します。"
  syntax:
    content: public static string GetConnectionStringProviderName (string connectionStringName);
    parameters:
    - id: connectionStringName
      type: System.String
      description: "接続文字列の名前。"
    return:
      type: System.String
      description: "プロバイダーとして、<xref:System.String>この接続文字列名</xref:System.String>。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続文字列名は、Web.config ファイルで見つかりませんでした。"
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "解析された式を表すオブジェクトを返します。"
  remarks: "返される<xref:System.Object>型<xref:System.Web.UI.Pair>。</xref:System.Web.UI.Pair> </xref:System.Object> これは、<xref:System.Web.UI.Pair>オブジェクトを渡すには、両方の<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A>メソッドおよび<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression%2A>メソッドとして`parsedData`</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression%2A></xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A></xref:System.Web.UI.Pair>。 <xref:System.Web.UI.Pair>オブジェクトには、名前と接続文字列の値が含まれています</xref:System.Web.UI.Pair>。"
  syntax:
    content: public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "宣言型の式の値。"
    - id: propertyType
      type: System.Type
      description: "式の対象となる型。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.Object
      description: "<xref:System.Object>を含む式の解析済み表現</xref:System.Object>。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ConnectionStringsExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイルされていない ページで、式を評価できるかどうかを示す値を返します。"
  remarks: "SupportsEvaluate プロパティを示すかどうかの<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A>メソッドは、クラスに実装されています</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A>コンパイルされていない ページで評価される式の式ビルダー以内に実装する必要があります。</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>そのため、接続文字列のコンパイルなしの評価をサポートしている`true`が常に返されます。</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.#ctor
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: ConnectionStringsExpressionBuilder()
  nameWithType: ConnectionStringsExpressionBuilder.ConnectionStringsExpressionBuilder()
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.ConnectionStringsExpressionBuilder()
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString(System.String)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetConnectionString(String)
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionString(String)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(System.String)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetConnectionStringProviderName(String)
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(String)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName(String)
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ConnectionStringsExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ConnectionStringsExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: ConnectionStringsExpressionBuilder
  nameWithType: ConnectionStringsExpressionBuilder.ConnectionStringsExpressionBuilder
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ConnectionStringsExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ConnectionStringsExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionString*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetConnectionString
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionString
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.GetConnectionStringProviderName*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: GetConnectionStringProviderName
  nameWithType: ConnectionStringsExpressionBuilder.GetConnectionStringProviderName
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ConnectionStringsExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ConnectionStringsExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ConnectionStringsExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ConnectionStringsExpressionBuilder.SupportsEvaluate
