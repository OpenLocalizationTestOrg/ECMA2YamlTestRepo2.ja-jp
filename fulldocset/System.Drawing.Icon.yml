### YamlMime:ManagedReference
items:
- uid: System.Drawing.Icon
  id: Icon
  children:
  - System.Drawing.Icon.#ctor(System.IO.Stream)
  - System.Drawing.Icon.#ctor(System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.Type,System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  - System.Drawing.Icon.Clone
  - System.Drawing.Icon.Dispose
  - System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  - System.Drawing.Icon.Finalize
  - System.Drawing.Icon.FromHandle(System.IntPtr)
  - System.Drawing.Icon.Handle
  - System.Drawing.Icon.Height
  - System.Drawing.Icon.Save(System.IO.Stream)
  - System.Drawing.Icon.Size
  - System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Icon.ToBitmap
  - System.Drawing.Icon.ToString
  - System.Drawing.Icon.Width
  langs:
  - csharp
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
  type: Class
  summary: "オブジェクトを表すために使用される小さなビットマップ イメージには、Windows のアイコンを表します。 アイコンはようなものの透明なビットマップが、そのサイズは、システムによって決まります。"
  remarks: "ファイル、ストリーム、または埋め込みリソースからアイコン オブジェクトを構築できます。 コンス トラクターの一覧は、 <xref:System.Drawing.Icon.%23ctor%2A>。</xref:System.Drawing.Icon.%23ctor%2A>を参照してください。 使用して、ビットマップ、アイコンを変換することも、<xref:System.Drawing.Icon.ToBitmap%2A>メソッド</xref:System.Drawing.Icon.ToBitmap%2A>。       アイコン リソースは、複数のアイコン イメージを含めることができます。 1 つのアイコン ファイルのサイズと色深度をいくつかのイメージがあります。 アプリケーションで使用されるイメージは、オペレーティング システムと設定によって異なります。 次の一覧では、アイコンの一般的なサイズの詳細: - 16 ピクセル x 16 - 32 ピクセル x 32 ピクセル - 48 ピクセル x 48 ピクセル"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/t-system.drawing.icon_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/t-system.drawing.icon_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/t-system.drawing.icon_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))]

      public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定したデータ ストリームからクラス。"
  remarks: "アイコン リソースは、複数のアイコン イメージを含めることができます。 1 つのアイコン ファイルのサイズと色深度をいくつかのイメージがあります。 アプリケーションで使用されるイメージは、オペレーティング システムと設定によって異なります。 次の一覧では、アイコンの一般的なサイズの詳細: - 16 ピクセル x 16 - 32 ピクセル x 32 ピクセル - 48 ピクセル x 48 ピクセルをこのコンス トラクターは、指定したストリームに含まれる最小のイメージを返します。"
  syntax:
    content: public Icon (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "読み込み元のデータ ストリーム、 <xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>クラス指定したファイル名から。"
  remarks: "アイコン リソースは、複数のアイコン イメージを含めることができます。 1 つのアイコン ファイルのサイズと色深度をいくつかのイメージがあります。 アプリケーションで使用されるイメージは、オペレーティング システムと設定によって異なります。 次の一覧では、アイコンの一般的なサイズの詳細: - 16 ピクセル x 16 - 32 ピクセル x 32 ピクセル - 48 ピクセル x 48 ピクセルをこのコンス トラクターは、指定したファイルに含まれる最小のイメージを返します。"
  syntax:
    content: public Icon (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "読み込むファイルの<xref href=&quot;System.Drawing.Icon&quot;></xref>からです。"
  overload: System.Drawing.Icon.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  id: '#ctor(System.Drawing.Icon,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>クラスと、要求されたサイズに一致するアイコンのバージョンの検索を試行します。"
  remarks: "サイズを正確に一致するバージョンが見つからない場合、最も近い一致が使用されます。 場合、`original`パラメーターは、 <xref:System.Drawing.Icon>1 つの大きさを持つ、このメソッドは、重複するアイコンをのみを作成します</xref:System.Drawing.Icon>。 伸縮機能を使用して、<xref:System.Drawing.Graphics.DrawImage%2A>アイコンのサイズを変更するメソッド</xref:System.Drawing.Graphics.DrawImage%2A>。"
  syntax:
    content: public Icon (System.Drawing.Icon original, System.Drawing.Size size);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>サイズが変更されたアイコンの読み込み先となるからです。"
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>構造体の新しい幅と高さを指定する<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  id: '#ctor(System.IO.Stream,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定したストリームから指定したサイズのクラスです。"
  syntax:
    content: public Icon (System.IO.Stream stream, System.Drawing.Size size);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "アイコンのデータを格納しているストリーム。"
    - id: size
      type: System.Drawing.Size
      description: "アイコンの必要なサイズ。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> stream </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>またはイメージ データは含まれません。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  id: '#ctor(System.String,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定したファイルから指定したサイズのクラスです。"
  remarks: "指定したファイルに必要なサイズに合ったイメージが含まれていない場合に最も近いサイズのアイコンが返されます。       `fileName`が現在のアプリケーション ディレクトリにない場合、完全なパスを含める必要があります。"
  syntax:
    content: public Icon (string fileName, System.Drawing.Size size);
    parameters:
    - id: fileName
      type: System.String
      description: "名前とアイコンのデータを格納しているファイルへのパス。"
    - id: size
      type: System.Drawing.Size
      description: "アイコンの必要なサイズ。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>またはイメージ データは含まれません。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定したアセンブリ内のリソースからクラスです。"
  remarks: "このコンス トラクターを作成、<xref:System.Drawing.Icon>で指定された名前のリソースから、`resource`パラメーターで指定された型を含むアセンブリに、`type`パラメーター</xref:System.Drawing.Icon> 。       このコンス トラクターは、リソースの文字列名と共に指定された型の名前空間を結合し、アセンブリ マニフェスト内の一致を検索します。 たとえばに渡すことができます、<xref:System.Windows.Forms.Control>型および`Error.ico`をこのコンス トラクター、およびそのリソースを検索という`System.Windows.Forms.Error.ico`</xref:System.Windows.Forms.Control>。"
  example:
  - "The following code example demonstrates how to use the Icon constructor. To run this example, paste the code into a Windows Form and handle the form's <xref:System.Windows.Forms.Control.Paint> event. Call the `ConstructAnIconFromAType` method from the <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.EventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#3](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#3](~/add/codesnippet/csharp/m-system.drawing.icon.sh_0_1.cs)]"
  syntax:
    content: public Icon (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>リソースを検索する対象のアセンブリを指定します</xref:System.Type>。"
    - id: resource
      type: System.String
      description: "読み込むリソース名。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたアイコン<code> resource </code>を含む、指定されたアセンブリで見つからない<code> type</code>です。"
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Icon,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>クラスと、要求されたサイズに一致するアイコンのバージョンの検索を試行します。"
  remarks: "サイズを正確に一致するバージョンが見つからない場合、最も近い一致が使用されます。 場合、`original`パラメーターは、 <xref:System.Drawing.Icon>1 つの大きさを持つ、このメソッドは、重複するアイコンをのみを作成します</xref:System.Drawing.Icon>。 伸縮機能を使用して、<xref:System.Drawing.Graphics.DrawImage%2A>アイコンのサイズを変更するメソッド</xref:System.Drawing.Graphics.DrawImage%2A>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.sh_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.sh_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_1_1.vb)]"
  syntax:
    content: public Icon (System.Drawing.Icon original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "別のサイズを読み込むアイコンです。"
    - id: width
      type: System.Int32
      description: "新しいアイコンの幅。"
    - id: height
      type: System.Int32
      description: "新しいアイコンの高さ。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定された幅と高さを使用して、指定したデータ ストリームからのクラスです。"
  syntax:
    content: public Icon (System.IO.Stream stream, int width, int height);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "アイコンの読み込み元のデータ ストリーム。"
    - id: width
      type: System.Int32
      description: "(ピクセル単位) アイコンの幅。"
    - id: height
      type: System.Int32
      description: "(ピクセル単位) アイコンの高さ。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>指定された幅と高さを指定したファイルからのクラスです。"
  remarks: "指定したファイルに必要な高さと幅に一致するイメージが含まれていない場合に最も近いサイズのアイコンが返されます。       `fileName`が現在のアプリケーション ディレクトリにない場合、完全なパスを含める必要があります。"
  syntax:
    content: public Icon (string fileName, int width, int height);
    parameters:
    - id: fileName
      type: System.String
      description: "含むファイルへのパスと名前、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>データ。"
    - id: width
      type: System.Int32
      description: "幅、 <xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さを<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>またはイメージ データは含まれません。"
  platform:
  - net462
- uid: System.Drawing.Icon.Clone
  id: Clone
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "クローン、 <xref href=&quot;System.Drawing.Icon&quot;> </xref>、重複するイメージを作成します。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "キャスト可能なオブジェクト、 <xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Dispose
  id: Dispose
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  remarks: "呼び出す`Dispose`により、これによって使用されているリソース<xref:System.Drawing.Icon>を他の目的に再割り当てされます</xref:System.Drawing.Icon>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Icon.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  id: ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したファイルに含まれているイメージのアイコン表現を返します。"
  remarks: "相対パスは、現在の作業ディレクトリに対して相対的であると見なされます。       アプリケーションを実行しているシステムにサムネイル画像として表示するビットマップ ファイルの原因となるレジストリ設定がある場合、ExtractAssociatedIcon 使用すると、ビットマップとアイコンの代わりにサムネイル画像を返される可能性があります。"
  example:
  - "The following code example demonstrates how to use the ExtractAssociatedIcon method. To run this example, paste the code into a Windows Form and call `ExtractAssociatedIconEx` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-vb[System.Drawing.Misc3#2](~/add/codesnippet/visualbasic/m-system.drawing.icon.ex_1.vb)]\n [!code-cs[System.Drawing.Misc3#2](~/add/codesnippet/csharp/m-system.drawing.icon.ex_1.cs)]"
  syntax:
    content: public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "イメージを含むファイルへのパス。"
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>指定したファイルに含まれているイメージの形式です。"
  overload: System.Drawing.Icon.ExtractAssociatedIcon*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> filePath </code>は有効なファイルを示しません。       - または -、 <code> filePath </code>汎用名前付け規則 (UNC) パスを示します。"
  platform:
  - net462
- uid: System.Drawing.Icon.Finalize
  id: Finalize
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~Icon ();
    parameters: []
  overload: System.Drawing.Icon.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "GDI + 作成<xref href=&quot;System.Drawing.Icon&quot;></xref>アイコンを指定した Windows ハンドルから (<xref uid=&quot;langword_csharp_HICON&quot; name=&quot;HICON&quot; href=&quot;&quot;></xref>)。"
  remarks: "使用して元のアイコンを破棄する必要がありますをこのメソッドを使用する場合、`DestroyIcon`リソースが解放されることを確認する Win32 API のメソッドです。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n-   Calls the Win32 API function `DestroyIcon` to release resources.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.icon.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.icon.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.icon.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Icon FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "アイコンへの Windows ハンドル。"
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref>このメソッドを作成します。"
  overload: System.Drawing.Icon.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Handle
  id: Handle
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この Windows ハンドルを取得<xref href=&quot;System.Drawing.Icon&quot;></xref>です。 これは、ハンドルのコピーではありません。解放しないでください。"
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle using the <xref:System.Drawing.GraphicsUnit> enumeration and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/p-system.drawing.icon.ha_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/p-system.drawing.icon.ha_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/p-system.drawing.icon.ha_1.cpp)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "アイコンの Windows ハンドル。"
  overload: System.Drawing.Icon.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Height
  id: Height
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの高さを取得<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "この高さ<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この保存<xref href=&quot;System.Drawing.Icon&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream>指定の出力"
  syntax:
    content: public void Save (System.IO.Stream outputStream);
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>に保存します</xref:System.IO.Stream>。"
  overload: System.Drawing.Icon.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Size
  id: Size
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このサイズを取得<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>これの高さと幅を指定する構造体<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化するために必要なデータを使用します。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>データを読み込む先します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "宛先 (を参照してください<xref:System.Runtime.Serialization.StreamingContext>) このシリアル化します</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToBitmap
  id: ToBitmap
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この変換<xref href=&quot;System.Drawing.Icon&quot;> </xref> GDI + <xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "ビットマップに変換され、結果のビットマップの透明色に設定されているアイコンの透明な領域は失われます`RGB(13,11,12)`です。 返されるビットマップは、元のアイコンと同じ高さと幅がします。      > [!NOTE] >.Ico ファイルの PNG フレームの先頭に framework バージョン 4.6 のサポートが追加されました。 次の行を追加することで、新しい動作を 4.6 ビットで実行されているは以前のバージョンの framework を対象するアプリケーションで選択できます、 `<runtime>` app.config ファイルのセクション。`<AppContextSwitchOverrides value=&quot;Switch.System.Drawing.DontSupportPngFramesInIcons=false&quot; />`"
  example:
  - "The following code example demonstrates how to use the ToBitmap method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's .<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.to_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.to_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.to_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap ToBitmap ();
    parameters: []
    return:
      type: System.Drawing.Bitmap
      description: "A <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>を表す、変換された<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.ToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToString
  id: ToString
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "説明を人間が判読できる文字列を取得、 <xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "説明する文字列、 <xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Width
  id: Width
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの幅を取得<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "この幅<xref href=&quot;System.Drawing.Icon&quot;></xref>です。"
  overload: System.Drawing.Icon.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Icon.#ctor(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
- uid: System.Drawing.Icon.Clone
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Icon.Dispose
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
- uid: System.Drawing.Icon.Finalize
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Icon.Handle
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
- uid: System.Drawing.Icon.Height
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
- uid: System.Drawing.Icon.Size
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Icon.ToBitmap
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Icon.ToString
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
- uid: System.Drawing.Icon.Width
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
- uid: System.Drawing.Icon.#ctor*
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon
  nameWithType: Icon.Icon
- uid: System.Drawing.Icon.Clone*
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone
  nameWithType: Icon.Clone
- uid: System.Drawing.Icon.Dispose*
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose
  nameWithType: Icon.Dispose
- uid: System.Drawing.Icon.ExtractAssociatedIcon*
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon
  nameWithType: Icon.ExtractAssociatedIcon
- uid: System.Drawing.Icon.Finalize*
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize
  nameWithType: Icon.Finalize
- uid: System.Drawing.Icon.FromHandle*
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle
  nameWithType: Icon.FromHandle
- uid: System.Drawing.Icon.Handle*
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
- uid: System.Drawing.Icon.Height*
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
- uid: System.Drawing.Icon.Save*
  parent: System.Drawing.Icon
  isExternal: false
  name: Save
  nameWithType: Icon.Save
- uid: System.Drawing.Icon.Size*
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Icon.ToBitmap*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap
  nameWithType: Icon.ToBitmap
- uid: System.Drawing.Icon.ToString*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString
  nameWithType: Icon.ToString
- uid: System.Drawing.Icon.Width*
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
