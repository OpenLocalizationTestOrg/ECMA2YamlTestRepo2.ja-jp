### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "クライアント ベースのアプリケーションの設定プロバイダーの拡張機能を定義します。"
  remarks: "アプリケーション設定アーキテクチャでは、 <xref:System.Configuration.SettingsProvider>。</xref:System.Configuration.SettingsProvider>から派生したクラスであるカスタム設定プロバイダーを作成することでアプリケーションの設定のカスタム ストレージ機構を提供できます。 このようなクラスには、格納およびプロパティを取得するための基本的な機能が含まれています。 ただし、カスタム設定プロバイダーで IApplicationSettingsProvider インターフェイスを実装することによって、追加の標準化された機能を追加できます。 このインターフェイスには、主に設定プロバイダーをより的確にアプリケーションのバージョン変更処理を有効にする&3; つのメソッドが含まれています。 通常、設定プロバイダーが、次の状況を予測するとは別に、アプリケーションの異なるバージョンのアプリケーション設定を格納:-アプリケーションの異なるバージョンのサイド バイ サイド実行します。      -アプリケーションをアップグレードするときに、アプリケーションの設定を保持します。      -アプリケーションの設定に現在使用されているバージョンの既定値をリセットしています。       <xref:System.Configuration.LocalFileSettingsProvider>クラス IApplicationSettingsProvider インターフェイスを実装します</xref:System.Configuration.LocalFileSettingsProvider>。 同じ IApplicationSettingsProvider によって含まれているメソッドのセットも存在、<xref:System.Configuration.ApplicationSettingsBase>アプリケーション設定ラッパーとその設定プロバイダー間の定義済みの通信チャネルを確立するクラス</xref:System.Configuration.ApplicationSettingsBase>。      > [!NOTE] > このインターフェイスは省略可能です。 プロバイダーがこのインターフェイスを実装していない場合は、このインターフェイスによって定義されたメソッドのいずれかにアクセスを試みる場合通知することがなく設定インフラストラクチャが失敗します。"
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "同じアプリケーションの以前のバージョンの指定した設定のプロパティの値を返します。"
  remarks: "組み合わせて GetPreviousVersion メソッドを使用することができます、<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>中または新しいバージョンのアプリケーションのインストール後に、アプリケーションの設定を移行する方法</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>。"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>値が返されます。"
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref>最後に、アプリケーションの以前のバージョンに設定された、指定したプロパティの設定の値を含むまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>設定が見つからない場合。"
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "既定値に指定されたアプリケーションに関連付けられているアプリケーションの設定をリセットします。"
  remarks: "Reset メソッドには、指定したアプリケーションの設定グループの格納された値が再初期化します。 これに対し、<xref:System.Configuration.DefaultSettingValueAttribute>格納されている値が存在しない場合、プロパティの初期化中に&1; つの設定のプロパティの既定値を提供します</xref:System.Configuration.DefaultSettingValueAttribute>。       設定プロバイダーは、適切な既定値が、アプリケーションの設定の指定したグループを決定します。 たとえば、実装では、<xref:System.Configuration.LocalFileSettingsProvider>で共有値にユーザー スコープ設定をリセット、`application.exe.config`ファイルですこれに対し、アプリケーション スコープ設定を変更せずに任せます。</xref:System.Configuration.LocalFileSettingsProvider> 。"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "プロバイダーにアプリケーションをアップグレードすることを示します。 これは、プロバイダーに、必要に応じて、保存された設定をアップグレードする機会を提供します。"
  remarks: ".NET Framework では、同じアプリケーションの異なるバージョンのサイド バイ サイド インストールと実行を使用できます。 アプリケーションの設定プロバイダーでは、分離するとは別にアプリケーションの各バージョンのアプリケーション設定を格納します。 ただし、現在のバージョンにアプリケーションの以前のバージョンからの設定を移行することがあります。 この移行機能を提供するには、 <xref:System.Configuration.SettingsProvider>。</xref:System.Configuration.SettingsProvider>から派生したクラスに実装されているアップグレードのメソッドを使用します。       組み合わせてアップグレード方法を使用することができます、<xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>中または新しいバージョンのアプリケーションのインストール後に、アプリケーションの設定を移行する方法</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>。       このメソッドは<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>、または全体の設定のラッパー クラスに適用、 <xref:System.Configuration.ApplicationSettingsBase>。</xref:System.Configuration.ApplicationSettingsBase>から派生した</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>すべてのアプリケーション設定を抑制する必要があります。"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>取得するのには、値が設定プロパティのグループを含むです。"
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
