### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.OidEnumerator
  id: OidEnumerator
  children:
  - System.Security.Cryptography.OidEnumerator.Current
  - System.Security.Cryptography.OidEnumerator.MoveNext
  - System.Security.Cryptography.OidEnumerator.Reset
  - System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: OidEnumerator
  nameWithType: OidEnumerator
  fullName: System.Security.Cryptography.OidEnumerator
  type: Class
  summary: "間を移動する機能を提供する<xref href=&quot;System.Security.Cryptography.OidCollection&quot;></xref>オブジェクト。 このクラスは継承できません。"
  remarks: "このクラスは、実装、<xref:System.Collections.IEnumerator>インターフェイス</xref:System.Collections.IEnumerator>。"
  example:
  - "The following code example shows how to use the OidEnumerator class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/t-system.security.crypto_54_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/t-system.security.crypto_54_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/t-system.security.crypto_54_1.cpp)]"
  syntax:
    content: 'public sealed class OidEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.OidEnumerator.Current
  id: Current
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: OidEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "現在の取得<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>内のオブジェクト、 <xref href=&quot;System.Security.Cryptography.OidCollection&quot;> </xref>オブジェクト。"
  remarks: "列挙子を作成した後、<xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A>列挙子を現在のプロパティの値を読み取る前に、コレクションの最初の要素に進めるメソッドを呼び出す必要があります現在がを返しますそれ以外の場合、`null`か例外をスローします。</xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 。       現在も返します`null`最後の呼び出しは例外をスローまたは<xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A>返します`false`コレクションの末尾に達していることを示します</xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A>。       現在は、列挙子の位置を移動していないと、現在を連続して呼び出すまで、同じオブジェクトを返す<xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A>と呼びます</xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A>。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/p-system.security.crypto_54_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/p-system.security.crypto_54_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/p-system.security.crypto_54_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Oid Current { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "現在<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>コレクション内のオブジェクト。"
  overload: System.Security.Cryptography.OidEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.OidEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: OidEnumerator.MoveNext()
  fullName: System.Security.Cryptography.OidEnumerator.MoveNext()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "次に進みます<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>内のオブジェクト、 <xref href=&quot;System.Security.Cryptography.OidCollection&quot;> </xref>オブジェクト。"
  remarks: "列挙子を作成した後、コレクションの最初の要素の前に配置されていると、MoveNext メソッドの最初の呼び出しが、列挙子をコレクションの最初の要素の上に移動します。 その後は、MoveNext 進歩過去の後続の項目コレクションの列挙子を呼び出します。       コレクションの末尾が渡されると、MoveNext を呼び出すが返されます`false`です。       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子が無効になると、次に MoveNext <xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_125_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_125_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_125_1.cpp)]"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、列挙子が次の要素に正常に進んだ場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>列挙子がコレクションの末尾を越えた場合は、します。"
  overload: System.Security.Cryptography.OidEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コレクションは、列挙子が作成された後に変更されました。"
  platform:
  - net462
- uid: System.Security.Cryptography.OidEnumerator.Reset
  id: Reset
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: OidEnumerator.Reset()
  fullName: System.Security.Cryptography.OidEnumerator.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "列挙子を初期位置に設定します。"
  remarks: "列挙子の最初の位置は、最初の要素の前に、<xref:System.Security.Cryptography.OidCollection>オブジェクト</xref:System.Security.Cryptography.OidCollection>。 コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は無効となる Reset メソッドを次に呼び出したスロー <xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_89_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_89_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_89_1.cpp)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Cryptography.OidEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コレクションは、列挙子が作成された後に変更されました。"
  platform:
  - net462
- uid: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: OidEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "現在の取得<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>内のオブジェクト、 <xref href=&quot;System.Security.Cryptography.OidCollection&quot;> </xref>オブジェクト。"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "現在の<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>オブジェクト。"
  overload: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.OidEnumerator.Current
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: Current
  nameWithType: OidEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.Current
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.OidEnumerator.MoveNext
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: OidEnumerator.MoveNext()
  fullName: System.Security.Cryptography.OidEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.OidEnumerator.Reset
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: Reset()
  nameWithType: OidEnumerator.Reset()
  fullName: System.Security.Cryptography.OidEnumerator.Reset()
- uid: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: OidEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Cryptography.OidEnumerator.Current*
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: Current
  nameWithType: OidEnumerator.Current
- uid: System.Security.Cryptography.OidEnumerator.MoveNext*
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: OidEnumerator.MoveNext
- uid: System.Security.Cryptography.OidEnumerator.Reset*
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: Reset
  nameWithType: OidEnumerator.Reset
- uid: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Cryptography.OidEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: OidEnumerator.System.Collections.IEnumerator.Current
