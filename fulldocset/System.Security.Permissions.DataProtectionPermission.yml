### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.DataProtectionPermission
  id: DataProtectionPermission
  children:
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  - System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.DataProtectionPermission.Copy
  - System.Security.Permissions.DataProtectionPermission.Flags
  - System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  - System.Security.Permissions.DataProtectionPermission.ToXml
  - System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission
  fullName: System.Security.Permissions.DataProtectionPermission
  type: Class
  summary: "暗号化されたデータとメモリにアクセスを制御します。 このクラスは継承できません。"
  remarks: "このアクセス許可を使用してデータとメモリを使用して暗号化する機能を制御する、<xref:System.Security.Cryptography.ProtectedData>と<xref:System.Security.Cryptography.ProtectedMemory>クラス</xref:System.Security.Cryptography.ProtectedMemory></xref:System.Security.Cryptography.ProtectedData>。"
  syntax:
    content: 'public sealed class DataProtectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  id: '#ctor(System.Security.Permissions.DataProtectionPermissionFlags)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;> </xref>クラスの指定したアクセス許可フラグを使用します。"
  remarks: ''
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/cpp/a7af2eef-8910-4637-aff8-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/csharp/a7af2eef-8910-4637-aff8-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#2](~/add/codesnippet/visualbasic/a7af2eef-8910-4637-aff8-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.DataProtectionPermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref>値。"
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>有効な組み合わせではありません、 <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.DataProtectionPermission&quot;> </xref>指定されたアクセス許可の状態を持つクラス。"
  remarks: "作成するか`None`(完全に制限される) または`Unrestricted`データとメモリにアクセスします。"
  example:
  - "The following code example shows the use of the DataProtectionPermission constructor. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/cpp/0fcdac9b-6e0b-490f-9cfa-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/csharp/0fcdac9b-6e0b-490f-9cfa-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#9](~/add/codesnippet/visualbasic/0fcdac9b-6e0b-490f-9cfa-_1.vb)]"
  syntax:
    content: public DataProtectionPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Security.Permissions.DataProtectionPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>有効ではありません<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>値。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  id: Copy
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "作成して、現在のアクセス許可の完全なコピーを返します。"
  remarks: "アクセス許可のコピーは、元のアクセス許可としてリソースに対して同じアクセス権を表します。"
  example:
  - "The following code example shows the use of the Copy method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/cpp/m-system.security.permis_7_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/csharp/m-system.security.permis_7_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#5](~/add/codesnippet/visualbasic/m-system.security.permis_7_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可のコピー。"
  overload: System.Security.Permissions.DataProtectionPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  id: Flags
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "取得または、データおよびメモリ保護フラグを設定します。"
  remarks: "このプロパティを指定するかどうか、`Protect`と`Unprotect`のメソッド、<xref:System.Security.Cryptography.ProtectedData>と<xref:System.Security.Cryptography.ProtectedMemory>クラスを使用できます</xref:System.Security.Cryptography.ProtectedMemory></xref:System.Security.Cryptography.ProtectedData>。"
  example:
  - "The following code example shows the use of the Flags property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/p-system.security.permis_11_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/p-system.security.permis_11_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/p-system.security.permis_11_1.vb)]"
  syntax:
    content: public System.Security.Permissions.DataProtectionPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.DataProtectionPermissionFlags
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref>値。"
  overload: System.Security.Permissions.DataProtectionPermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定した値がの有効な組み合わせではありません、 <xref href=&quot;System.Security.Permissions.DataProtectionPermissionFlags&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "XML エンコードから特定の状態で、アクセス許可を再構築します。"
  remarks: "FromXml メソッドが<xref:System.Security.Permissions.DataProtectionPermission><xref:System.Security.SecurityElement>クラス</xref:System.Security.SecurityElement>によって定義された XML エンコードからオブジェクト</xref:System.Security.Permissions.DataProtectionPermission>を再構築します。 使用して、 <xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>XML エンコード方法、 <xref:System.Security.Permissions.DataProtectionPermission>、状態情報を含むします</xref:System.Security.Permissions.DataProtectionPermission></xref:System.Security.Permissions.DataProtectionPermission.ToXml%2A>。"
  example:
  - "The following code example shows the use of the FromXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/600f1736-4257-4de6-bfa2-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/600f1736-4257-4de6-bfa2-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/600f1736-4257-4de6-bfa2-_1.vb)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>アクセス許可の再構築に使用する XML エンコードを格納しています。"
  overload: System.Security.Permissions.DataProtectionPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>有効なアクセス許可要素ではありません。       - または - のバージョン番号<code>securityElement</code>はサポートされていません。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  remarks: "2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。 個々 の両方の権限を通過する要求だけでは、積集合を渡されます。"
  example:
  - "The following code example shows the use of the Intersect method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/cpp/28e519e8-73a0-40f3-bd6c-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/csharp/28e519e8-73a0-40f3-bd6c-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#10](~/add/codesnippet/visualbasic/28e519e8-73a0-40f3-bd6c-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 現在のアクセス許可と同じ型の可能性があります。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Security.Permissions.DataProtectionPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。"
  remarks: "現在のアクセス許可は、現在のアクセス許可を指定した権限で完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。  アクセス許可など、<xref:System.Security.Permissions.DataProtectionPermissionFlags>アクセスに対するアクセス許可のサブセットである<xref:System.Security.Permissions.DataProtectionPermissionFlags>アクセス</xref:System.Security.Permissions.DataProtectionPermissionFlags></xref:System.Security.Permissions.DataProtectionPermissionFlags>。"
  example:
  - "The following code example shows the use of the IsSubsetOf method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/cpp/f5f850fa-1969-4642-a180-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/csharp/f5f850fa-1969-4642-a180-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#3](~/add/codesnippet/visualbasic/f5f850fa-1969-4642-a180-_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係性をテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型である必要があります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が無制限かどうかを示す値を返します。"
  remarks: "無制限のアクセス許可は、アクセス許可によって保護されているすべてのリソースへのアクセスを表します。"
  example:
  - "The following code example shows the use of the IsUnrestricted method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/cpp/m-system.security.permis_28_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/csharp/m-system.security.permis_28_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#4](~/add/codesnippet/visualbasic/m-system.security.permis_28_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が無制限ではない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "アクセス許可と、現在の状態の XML エンコードを作成します。"
  remarks: "<xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A> <xref:System.Security.SecurityElement>。</xref:System.Security.SecurityElement>から状態情報を復元する方法</xref:System.Security.Permissions.DataProtectionPermission.FromXml%2A>を使用して"
  example:
  - "The following code example shows the use of the ToXml method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/cpp/m-system.security.permis_9_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/csharp/m-system.security.permis_9_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#7](~/add/codesnippet/visualbasic/m-system.security.permis_9_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、アクセス許可の XML エンコード。"
  overload: System.Security.Permissions.DataProtectionPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  remarks: "共用体への呼び出しの結果は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表すアクセス許可です。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。"
  example:
  - "The following code example shows the use of the Union method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.DataProtectionPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/cpp/67e342ee-9a58-40b8-a0ec-_1.cpp)]\n [!code-cs[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/csharp/67e342ee-9a58-40b8-a0ec-_1.cs)]\n [!code-vb[System.Security.Permissions.DataProtectionPermission2#6](~/add/codesnippet/visualbasic/67e342ee-9a58-40b8-a0ec-_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。"
  overload: System.Security.Permissions.DataProtectionPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(DataProtectionPermissionFlags)
  nameWithType: DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(DataProtectionPermissionFlags)
- uid: System.Security.Permissions.DataProtectionPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: DataProtectionPermissionFlags
  nameWithType: DataProtectionPermissionFlags
  fullName: System.Security.Permissions.DataProtectionPermissionFlags
- uid: System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission(PermissionState)
  nameWithType: DataProtectionPermission.DataProtectionPermission(PermissionState)
  fullName: System.Security.Permissions.DataProtectionPermission.DataProtectionPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.DataProtectionPermission.Copy
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy()
  nameWithType: DataProtectionPermission.Copy()
  fullName: System.Security.Permissions.DataProtectionPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.DataProtectionPermission.Flags
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
  fullName: System.Security.Permissions.DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DataProtectionPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.DataProtectionPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DataProtectionPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Intersect(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DataProtectionPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DataProtectionPermission.IsUnrestricted()
  fullName: System.Security.Permissions.DataProtectionPermission.IsUnrestricted()
- uid: System.Security.Permissions.DataProtectionPermission.ToXml
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml()
  nameWithType: DataProtectionPermission.ToXml()
  fullName: System.Security.Permissions.DataProtectionPermission.ToXml()
- uid: System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DataProtectionPermission.Union(IPermission)
  fullName: System.Security.Permissions.DataProtectionPermission.Union(IPermission)
- uid: System.Security.Permissions.DataProtectionPermission.#ctor*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: DataProtectionPermission
  nameWithType: DataProtectionPermission.DataProtectionPermission
- uid: System.Security.Permissions.DataProtectionPermission.Copy*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Copy
  nameWithType: DataProtectionPermission.Copy
- uid: System.Security.Permissions.DataProtectionPermission.Flags*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Flags
  nameWithType: DataProtectionPermission.Flags
- uid: System.Security.Permissions.DataProtectionPermission.FromXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: FromXml
  nameWithType: DataProtectionPermission.FromXml
- uid: System.Security.Permissions.DataProtectionPermission.Intersect*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Intersect
  nameWithType: DataProtectionPermission.Intersect
- uid: System.Security.Permissions.DataProtectionPermission.IsSubsetOf*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DataProtectionPermission.IsSubsetOf
- uid: System.Security.Permissions.DataProtectionPermission.IsUnrestricted*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DataProtectionPermission.IsUnrestricted
- uid: System.Security.Permissions.DataProtectionPermission.ToXml*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: ToXml
  nameWithType: DataProtectionPermission.ToXml
- uid: System.Security.Permissions.DataProtectionPermission.Union*
  parent: System.Security.Permissions.DataProtectionPermission
  isExternal: false
  name: Union
  nameWithType: DataProtectionPermission.Union
