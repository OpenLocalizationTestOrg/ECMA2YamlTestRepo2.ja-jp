### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventArgs
  id: RoutedEventArgs
  children:
  - System.Windows.RoutedEventArgs.#ctor
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  langs:
  - csharp
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
  type: Class
  summary: "ルーティング イベントに関連付けられている状態情報とイベント データが含まれています。"
  remarks: "異なる RoutedEventArgs は、1 つ<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>。</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>で使用できます。 このクラスは、イベントのデータをパッケージ化する、 <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>、余分なイベントの状態情報を提供すること、およびルーティング イベントに関連付けられたハンドラーを呼び出すことのイベント システムによって使用されます</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>。"
  syntax:
    content: 'public class RoutedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor
  id: '#ctor'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>クラスです。"
  remarks: "このパラメーターなしコンス トラクター、新しいすべてのパブリック プロパティを使用する場合<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています:-<xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.RoutedEvent%2A></xref:System.Windows.RoutedEventArgs>。      -<xref:System.Windows.RoutedEventArgs.Handled%2A>の既定値は`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.Source%2A></xref:System.Windows.RoutedEventArgs.Handled%2A>。      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>。       値は null<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>のみからといって、<xref:System.Windows.RoutedEventArgs>データは、ソースを指定する操作を行わない</xref:System.Windows.RoutedEventArgs></xref:System.Windows.RoutedEventArgs.OriginalSource%2A></xref:System.Windows.RoutedEventArgs.Source%2A>。 呼び出しでのこのインスタンスを使用する場合<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>、イベントを発生させるし、ルーティングをリスナー渡されますを要素に基づく値が設定されます</xref:System.Windows.RoutedEventArgs.OriginalSource%2A></xref:System.Windows.RoutedEventArgs.Source%2A></xref:System.Windows.UIElement.RaiseEvent%2A>。"
  syntax:
    content: public RoutedEventArgs ();
    parameters: []
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>クラス、指定したルーティング イベントの識別子を使用します。"
  remarks: "このオーバー ロードされたコンス トラクターを使用する場合に新しいプロパティが指定されていない<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています:-<xref:System.Windows.RoutedEventArgs.Handled%2A>の既定値は`false`-<xref:System.Windows.RoutedEventArgs.Source%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.Source%2A></xref:System.Windows.RoutedEventArgs.Handled%2A></xref:System.Windows.RoutedEventArgs>。      -<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>。       値は null<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>のみからといってこの<xref:System.Windows.RoutedEventArgs>されないため、ソースを指定します</xref:System.Windows.RoutedEventArgs></xref:System.Windows.RoutedEventArgs.OriginalSource%2A></xref:System.Windows.RoutedEventArgs.Source%2A>。 呼び出しでのこのインスタンスを使用する場合<xref:System.Windows.UIElement.RaiseEvent%2A>、<xref:System.Windows.RoutedEventArgs.Source%2A>と<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>、イベントを発生させるし、ルーティングをリスナー渡されますを要素に基づく値が設定されます</xref:System.Windows.RoutedEventArgs.OriginalSource%2A></xref:System.Windows.RoutedEventArgs.Source%2A></xref:System.Windows.UIElement.RaiseEvent%2A>。"
  example:
  - "The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.  \n  \n [!code-cs[RoutedEventCustom#RaiseEvent](~/add/codesnippet/csharp/RoutedEventCustom/SDKSampleLibrary/class1.cs#raiseevent)]\n [!code-vb[RoutedEventCustom#RaiseEvent](~/add/codesnippet/visualbasic/SDKSampleLibrary/Class1.vb#raiseevent)]"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "このインスタンスにルーティングされたイベント識別子、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>クラスです。"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  id: '#ctor(System.Windows.RoutedEvent,System.Object)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>クラス、指定したルーティング イベントの識別子を使用して、別のソース イベントを宣言する機会を提供することです。"
  remarks: "このオーバー ロードされたコンス トラクターを使用する場合に新しいプロパティが指定されていない<xref:System.Windows.RoutedEventArgs>インスタンスには、次の既定値が前提としています:-<xref:System.Windows.RoutedEventArgs.Handled%2A>の既定値は`false`-<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>の既定値は`null`</xref:System.Windows.RoutedEventArgs.OriginalSource%2A></xref:System.Windows.RoutedEventArgs.Handled%2A></xref:System.Windows.RoutedEventArgs>。       値は null<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>は、イベントを発生させるし、ルーティング経由で渡されますを要素に基づいて入力は読み取られます`null`呼び出しの前にします</xref:System.Windows.RoutedEventArgs.OriginalSource%2A>。       渡すときは、この署名を使用して<xref:System.Windows.RoutedEventArgs>などの仮想メソッドを<xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>の呼び出しに引数を使用する場所、<xref:System.Windows.UIElement.RaiseEvent%2A>内部的にします</xref:System.Windows.UIElement.RaiseEvent%2A></xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A></xref:System.Windows.RoutedEventArgs>。"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "このインスタンスにルーティングされたイベント識別子、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>クラスです。"
    - id: source
      type: System.Object
      description: "イベントを処理するときに報告される代替のソース。 これを事前に入力、<xref:System.Windows.RoutedEventArgs.Source*>プロパティ</xref:System.Windows.RoutedEventArgs.Source*>。"
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Handled
  id: Handled
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得またはイベントがルートをたどるようルーティング イベントの処理の現在の状態を示す値を設定します。"
  remarks: "イベントを処理済みのマークを付けると、イベントのルーティング上のリスナーにルーティングされたイベントの可視性が制限されます。 イベントは、ルートの残りの部分を移動してもが、唯一のハンドラーは、特にを追加`HandledEventsToo``true`で、<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>メソッドの呼び出しが応答で呼び出されます</xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>。 既定のインスタンスのリスナーのハンドラー (で表されるものなど[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]) は呼び出されません。 処理済みとマークされているイベントの処理は、一般的なシナリオではないです。       コントロール作成者の場合は、上の決定を行う独自のイベントを定義するイベント クラスに処理に関するレベルは影響を与える、コントロールのユーザーだけでなく、派生のコントロールのすべてのユーザーと可能性のある、コントロールには、その他の要素が含まれるまたはコントロールが含まれているします。 詳細については、次を参照してください。 [Handled、クラス処理とルーティング イベントをマーク](~/add/includes/ajax-current-ext-md.md)です。       非常にまれな状況ではイベントを処理する適切な Handled がマークされている`true`、Handled を変更することによって、イベント引数を変更および`false`です。 キーを処理などのコントロールの入力イベントの特定の領域で構成に必要なできます<xref:System.Windows.UIElement.KeyDown>と<xref:System.Windows.UIElement.TextInput>、それぞれ別のルーティング方法を使用しようと、下位レベルと高レベルの入力イベントの処理の競合が発生します</xref:System.Windows.UIElement.TextInput></xref:System.Windows.UIElement.KeyDown>。"
  example:
  - "The following example implements an event handler that marks the event handled.  \n  \n [!code-vb[ClassHandling#OnStarClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#onstarclasshandler)]\n [!code-cs[ClassHandling#OnStarClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#onstarclasshandler)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "設定する場合に設定<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>それ以外の処理済みとしてマークする場合は、イベント<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 この値を読み取る場合<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>クラス ハンドラーまたは経路には、いくつかのインスタンス ハンドラーのいずれかがこのイベントを処理のマークでが既にあることを示します。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>このようなハンドラーがイベントを処理済みマークされません .indicates です。       既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.RoutedEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "派生クラスでオーバーライドされると、ときに、基本実装より効率を高めることができます、型固有の方法でイベント ハンドラーを呼び出す方法を提供します。"
  remarks: "基底の実装には、いかなる場合においても、ハンドラーが行われていない文字どおりの右側のハンドラーを決定するためにリフレクションが組み込まれています<xref:System.Windows.RoutedEventHandler>、しており、このリフレクション手順がいくつかのパフォーマンスの影響。</xref:System.Windows.RoutedEventHandler> 。 呼び出しによってリフレクションに依存しないがより効率的な行われたことができます。 これは、このメソッドをオーバーライドすることを選択、ルーティングされたイベント引数クラスで使用されるこのメソッドを用途シナリオです。 実装呼び出す必要はありません、ベースこのメソッドの実装を既にタイプ セーフなハンドラーを呼び出すにする必要があります。"
  example:
  - "The following is pseudocode that illustrates a basic pattern that can be used for implementation. Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.  \n  \n [!code-cs[CorePseudocode#RoutedEventArgs](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#routedeventargs)]\n [!code-vb[CorePseudocode#RoutedEventArgs](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#routedeventargs)]"
  syntax:
    content: protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "ジェネリック ハンドラー/デリゲート実装を呼び出します。"
    - id: genericTarget
      type: System.Object
      description: "指定したハンドラーが呼び出されるターゲット。"
  overload: System.Windows.RoutedEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  id: OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "派生クラスでオーバーライドされると、通知コールバックのエントリを提供するたびにポイントの値、<xref:System.Windows.RoutedEventArgs.Source*>インスタンス変更のプロパティ</xref:System.Windows.RoutedEventArgs.Source*>。"
  syntax:
    content: protected virtual void OnSetSource (object source);
    parameters:
    - id: source
      type: System.Object
      description: "新しい値<xref:System.Windows.RoutedEventArgs.Source*>に設定されています</xref:System.Windows.RoutedEventArgs.Source*>。"
  overload: System.Windows.RoutedEventArgs.OnSetSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.OriginalSource
  id: OriginalSource
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "元のレポートを取得ソース定めるところによる純粋なヒット テスト、可能な<xref:System.Windows.RoutedEventArgs.Source*>親クラスで調整</xref:System.Windows.RoutedEventArgs.Source*>する前に"
  remarks: "このプロパティは、クラスの前にイベント ハンドラーまたは任意のインスタンス ハンドラーが呼び出され、この時点以降は調整しないと、その値を取得します。 元のソース情報は、イベント データで報告されているのと同様はクラス ハンドラーまたはクラスの実装に対して読み取り専用です。       ソースを調整することが一般的なケースに含まれるコントロールのコンテンツ モデル内のコンテンツの要素 (たとえば、リスト項目の内容は、リスト項目要素としてを報告、 <xref:System.Windows.RoutedEventArgs.Source%2A>、一覧項目内で実際の要素には、OriginalSource</xref:System.Windows.RoutedEventArgs.Source%2A> 。       さまざまな要素とのコンテンツ モデルでソース調整では、クラスによって異なります。 イベント ソースを調整する各クラスが、ソースは、最も役に立つレポートの最も入力シナリオとシナリオをクラスは、おり<xref:System.Windows.RoutedEventArgs.Source%2A>。</xref:System.Windows.RoutedEventArgs.Source%2A>としてそのソースを設定するかを予測しようとしています。 このソースがイベントの処理に関連性のあるものでない場合は、別のソースがより適していますが、報告かどうかを表示する代わりに OriginalSource を確認してください。 入力イベントの詳細については、次を参照してください。[入力概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public object OriginalSource { get; }
    return:
      type: System.Object
      description: "可能性のあるすべての前に、元の報告ソース<xref:System.Windows.RoutedEventArgs.Source*>で複合要素ツリーを平坦化する実行されているクラス処理によって行われた調整します</xref:System.Windows.RoutedEventArgs.Source*>。"
  overload: System.Windows.RoutedEventArgs.OriginalSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得または設定に関連付けられた RoutedEvent <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>インスタンス。"
  remarks: "この値を設定することはできません、<xref:System.Windows.RoutedEventArgs>を既ににルーティングされました (たとえば、ハンドラーを引数を取得した) 場合</xref:System.Windows.RoutedEventArgs>。 これを行うにしようとすると、例外が生成されます。 イベントの呼び出しの生成に使用されていないインスタンスでのみ設定できます。       RoutedEvent の値にすることはできません`null`いつでもできます。"
  example:
  - "The following example creates new routed event data with an initial constructor and then sets the RoutedEvent property as a subsequent operation. You must have RoutedEvent set prior to raising the routed event.  \n  \n [!code-cs[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/csharp/ColorPicker/ColorPicker.cs#routedeventargsroutedevent)]\n [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/add/codesnippet/visualbasic/colorpicker/colorpicker.vb#routedeventargsroutedevent)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "呼び出されているイベントの識別子。"
  overload: System.Windows.RoutedEventArgs.RoutedEvent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "イベントがルーティングされている間、RoutedEvent 値を変更しようとしています。"
  platform:
  - net462
- uid: System.Windows.RoutedEventArgs.Source
  id: Source
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得またはイベントを発生させたオブジェクトへの参照を設定します。"
  remarks: "発生元の要素の次のルートを実際に通過したイベントのルーティング、バブルとソースの値がの値と異なる場合になります、トンネリング ルーティングする原因となった要素までトンネリングされたがないイベントの`sender`イベント引数クラスのパラメーターです。 任意の特定のハンドラーで最も重要度は、イベントに関連する&2; つの要素の (ソース、原因となった要素または`sender`、処理は、現在の要素) は、ハンドラーのアドレスを指定するアプリケーション ロジックに依存します。       このプロパティの設定は通常ときにのみ実行オーバーライドまたは実装するその他の[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]ときなど、イベント ソースを調整するクラスのイベントを処理します。 特に、処理済みとして、ハンドラーが、イベントをマークしない場合に、インスタンス ハンドラーからイベント ソースのリセットはお勧めしません。       場合は、別のイベント ソースをレポートするソースをリセットしないで<xref:System.Windows.RoutedEventArgs.OriginalSource%2A>元によって最初にソースが発生したレポートは引き続き<xref:System.Windows.UIElement.RaiseEvent%2A>を呼び出す</xref:System.Windows.UIElement.RaiseEvent%2A></xref:System.Windows.RoutedEventArgs.OriginalSource%2A>。"
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "イベントを発生させたオブジェクト。"
  overload: System.Windows.RoutedEventArgs.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.RoutedEventArgs.#ctor
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs()
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent,Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
  fullName: System.Windows.RoutedEventArgs.RoutedEventArgs(RoutedEvent,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: System.Windows.RoutedEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RoutedEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: System.Windows.RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: System.Windows.RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: System.Windows.RoutedEventArgs.Source
- uid: System.Windows.RoutedEventArgs.#ctor*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.Handled*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RoutedEventArgs.InvokeEventHandler
- uid: System.Windows.RoutedEventArgs.OnSetSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource
  nameWithType: RoutedEventArgs.OnSetSource
- uid: System.Windows.RoutedEventArgs.OriginalSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
