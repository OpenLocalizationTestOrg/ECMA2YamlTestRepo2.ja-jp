### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlString
  id: SqlString
  children:
  - System.Data.SqlTypes.SqlString.#ctor(System.String)
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.BinarySort
  - System.Data.SqlTypes.SqlString.BinarySort2
  - System.Data.SqlTypes.SqlString.Clone
  - System.Data.SqlTypes.SqlString.CompareInfo
  - System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CultureInfo
  - System.Data.SqlTypes.SqlString.Equals(System.Object)
  - System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GetHashCode
  - System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.IgnoreCase
  - System.Data.SqlTypes.SqlString.IgnoreKanaType
  - System.Data.SqlTypes.SqlString.IgnoreNonSpace
  - System.Data.SqlTypes.SqlString.IgnoreWidth
  - System.Data.SqlTypes.SqlString.IsNull
  - System.Data.SqlTypes.SqlString.LCID
  - System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.Null
  - System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  - System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  - System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.SqlCompareOptions
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlString.ToSqlBoolean
  - System.Data.SqlTypes.SqlString.ToSqlByte
  - System.Data.SqlTypes.SqlString.ToSqlDateTime
  - System.Data.SqlTypes.SqlString.ToSqlDecimal
  - System.Data.SqlTypes.SqlString.ToSqlDouble
  - System.Data.SqlTypes.SqlString.ToSqlGuid
  - System.Data.SqlTypes.SqlString.ToSqlInt16
  - System.Data.SqlTypes.SqlString.ToSqlInt32
  - System.Data.SqlTypes.SqlString.ToSqlInt64
  - System.Data.SqlTypes.SqlString.ToSqlMoney
  - System.Data.SqlTypes.SqlString.ToSqlSingle
  - System.Data.SqlTypes.SqlString.ToString
  - System.Data.SqlTypes.SqlString.Value
  langs:
  - csharp
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
  type: Struct
  summary: "格納されているか、データベースから取得する文字の可変長のストリームを表します。 SqlString がその対応する .NET Framework から別の基になるデータ構造を持つ<xref:System.String>データ型</xref:System.String>。"
  remarks: "<xref:System.String>既定値は常に使用<xref:System.Globalization.CultureInfo>現在のスレッドからが SqlString に独自のロケール Id と比較フラグが含まれています</xref:System.Globalization.CultureInfo>。</xref:System.String> SqlString 構造体の&2; つの比較結果は、オペレーティング システムと現在のスレッド ロケールに依存しません。       SqlString 比較演算子を使用する場合は、引数の Lcid が異なる場合、比較関数が例外をスローする比較できないために注意してください。 たとえば、ステートメント```   SqlString mySqlString = new SqlString(&quot;abc&quot;);   ```と同じです```   SqlString mySqlString = new SqlString(&quot;abc&quot;, CultureInfo.CurrentCulture.LCID);   ```"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlString : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>指定した文字列を使用して構造体します。"
  syntax:
    content: public SqlString (string data);
    parameters:
    - id: data
      type: System.String
      description: "格納する文字列。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>指定した文字列とロケール id の値を使用して構造体します。"
  syntax:
    content: public SqlString (string data, int lcid);
    parameters:
    - id: data
      type: System.String
      description: "格納する文字列。"
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>指定されたロケール id を使用して、オプション、およびデータを比較します。"
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data);
    parameters:
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "新しい比較オプションを指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: data
      type: System.Byte[]
      description: "格納するデータの配列。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  id: '#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>指定した文字列、ロケール id を使用して構造体し、オプションの値を比較します。"
  syntax:
    content: public SqlString (string data, int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: data
      type: System.String
      description: "格納する文字列。"
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "新しい比較オプションを指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>クラスです。"
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "新しい比較オプションを指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: data
      type: System.Byte[]
      description: "格納するデータの配列。"
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Unicode でエンコードされました。 場合、 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>クラスです。"
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count);
    parameters:
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "新しい比較オプションを指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: data
      type: System.Byte[]
      description: "格納するデータの配列。"
    - id: index
      type: System.Int32
      description: "配列内の開始インデックス。"
    - id: count
      type: System.Int32
      description: "インデックスからコピーする文字数。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>クラスです。"
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "新しいの地理的なロケールと言語を指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "新しい比較オプションを指定<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    - id: data
      type: System.Byte[]
      description: "格納するデータの配列。"
    - id: index
      type: System.Int32
      description: "配列内の開始インデックス。"
    - id: count
      type: System.Int32
      description: "インデックスからコピーする文字数。"
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Unicode でエンコードされました。 場合、 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定した&2; つを連結<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>新しいを作成する値<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  remarks: '`x`結果の先頭に表示されます<xref:System.Data.SqlTypes.SqlString>で始まり、 `y`</xref:System.Data.SqlTypes.SqlString> 。'
  syntax:
    content: public static System.Data.SqlTypes.SqlString Add (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref> that is the concatenated value of <code>x</code> and <code>y</code>."
  overload: System.Data.SqlTypes.SqlString.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort
  id: BinarySort
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "そのアルファベット順の値ではなく文字の数値に基づいて並べ替えますが基づいていることを指定します。"
  remarks: "<xref:System.Data.SqlTypes.SqlString>クラス</xref:System.Data.SqlTypes.SqlString>の定数として BinarySort 関数"
  syntax:
    content: public static readonly int BinarySort;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  id: BinarySort2
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "並べ替えがアルファベット順の値ではなく、文字の数値に基づいていることを指定します。"
  syntax:
    content: public static readonly int BinarySort2;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Clone
  id: Clone
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このコピーを作成<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Data.SqlTypes.SqlString Clone ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オブジェクトのすべてのプロパティの値は、元と同じです。"
  overload: System.Data.SqlTypes.SqlString.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "取得、<xref:System.Globalization.CompareInfo>この文字列の比較を実行する方法を定義するオブジェクト<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造</xref:System.Globalization.CompareInfo>。"
  syntax:
    content: public System.Globalization.CompareInfo CompareInfo { get; }
    return:
      type: System.Globalization.CompareInfo
      description: "A <xref uid=&quot;langword_csharp_CompareInfo&quot; name=&quot;CompareInfo&quot; href=&quot;&quot;> </xref>この文字列の比較を定義するオブジェクト<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  overload: System.Data.SqlTypes.SqlString.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  id: CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "取得、<xref:System.Globalization.CompareOptions>の指定した列挙体 equilvalent <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref>値</xref:System.Globalization.CompareOptions>。"
  syntax:
    content: public static System.Globalization.CompareOptions CompareOptionsFromSqlCompareOptions (System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref>この比較オプションを示す値<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
    return:
      type: System.Globalization.CompareOptions
      description: "A <xref uid=&quot;langword_csharp_CompareOptions&quot; name=&quot;CompareOptions&quot; href=&quot;&quot;> </xref>に対応する値、 <xref uid=&quot;langword_csharp_SqlCompareOptions&quot; name=&quot;SqlCompareOptions&quot; href=&quot;&quot;> </xref>この<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  overload: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  id: CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "これと比較<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>を指定されたインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>し、これらの相対値を示す値を返します。"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlString value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>と比較します。"
    return:
      type: System.Int32
      description: "インスタンスとオブジェクトの相対値を示す符号付き数値。       <table><thead><tr><th> 戻り値       </th><th> 条件       </th></tr></thead><tbody><tr><td> 0 より小さい値       </td><td> このインスタンスは、オブジェクトより小さいです。       </td></tr><tr><td> 0       </td><td> このインスタンスは、オブジェクトと同じです。       </td></tr><tr><td> 0 より大きい値       </td><td> このインスタンスは、オブジェクトまたはオブジェクトが null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "これと比較<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>を指定されたオブジェクト<xref:System.Object>し、これらの相対値を示す値を返します</xref:System.Object>。"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>と比較する</xref:System.Object>。"
    return:
      type: System.Int32
      description: "インスタンスとオブジェクトの相対値を示す符号付き数値。       <table><thead><tr><th> 戻り値       </th><th> 条件       </th></tr></thead><tbody><tr><td> 0 より小さい値       </td><td> このインスタンスは、オブジェクトより小さいです。       </td></tr><tr><td> 0       </td><td> このインスタンスは、オブジェクトと同じです。       </td></tr><tr><td> 0 より大きい値       </td><td> このインスタンスは、オブジェクトまたはオブジェクトが null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定された&2; つを連結<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  syntax:
    content: public static System.Data.SqlTypes.SqlString Concat (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 、2 つの内容を表す新しく連結された値を格納している<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>パラメーター。"
  overload: System.Data.SqlTypes.SqlString.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  id: CultureInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "取得、<xref:System.Globalization.CultureInfo>このカルチャに関する情報を表す構造<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オブジェクト</xref:System.Globalization.CultureInfo>。"
  syntax:
    content: public System.Globalization.CultureInfo CultureInfo { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>など、カルチャ、およびの名前、書記体系、使用する暦、この SqlString 構造体のカルチャに関する情報を記述する構造体と日付の書式設定文字列の並べ替えなどの一般的な操作のメソッドを提供するカルチャ固有のオブジェクトへのアクセス</xref:System.Globalization.CultureInfo>。"
  overload: System.Data.SqlTypes.SqlString.CultureInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定したオブジェクトのパラメーターを<xref:System.Data.SqlTypes.SqlString.Value*>のプロパティ、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>オブジェクト</xref:System.Data.SqlTypes.SqlString.Value*>。"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "Equals を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、オブジェクトのインスタンスでは<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 、それ以外の&2; つ<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは、等しいかどうかを確認します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つの値が等しい場合は。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 どちらのインスタンスが null の場合、 <xref uid=&quot;langword_csharp_SqlString&quot; name=&quot;SqlString&quot; href=&quot;&quot;> </xref>は null になります。"
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このインスタンスのハッシュ コードを取得します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.Data.SqlTypes.SqlString.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  id: GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "内容を含むバイトの配列を取得、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> ANSI 形式でします。"
  syntax:
    content: public byte[] GetNonUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "バイト配列の内容を含む、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> ANSI 形式でします。"
  overload: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  id: GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "内容を含むバイトの配列を取得、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> Unicode 形式でします。"
  syntax:
    content: public byte[] GetUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "バイト配列の内容を含む、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> Unicode 形式でします。"
  overload: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定した XML スキーマ定義言語 (XSD) を返します<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>です。"
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>の指定された XSD を示す値<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オペランドを&1; つは、2 番目より大きいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンスより大きい場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オペランドを&1; つは、2 番目以上かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以上の場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  id: IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定する<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>比較で大文字小文字を区別する必要があります。"
  remarks: "<xref:System.Data.SqlTypes.SqlString>クラス</xref:System.Data.SqlTypes.SqlString>の定数として IgnoreCase 関数"
  syntax:
    content: public static readonly int IgnoreCase;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  id: IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "文字列の比較がカナ型を無視する必要がありますを指定します。"
  remarks: "ひらがなとカタカナは、日本語の発音を表す日本語のひらがなとカタカナの文字を指します。 ひらがなネイティブ日本語の表現および使用語、「コンピューター」または&quot;Internet&quot;など、他の言語から借用語のカタカナが使用されます。 ひらがなとカタカナの両方では、発音を表現できます。 この値は、選択した場合、1 つのサウンドを示すひらがなが同じ発音のカタカナに等しいと見なされます。       <xref:System.Data.SqlTypes.SqlString>クラス</xref:System.Data.SqlTypes.SqlString>の定数として IgnoreKanaType 関数"
  syntax:
    content: public static readonly int IgnoreKanaType;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  id: IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "文字列比較で分音文字などの空白結合文字を無視するかを指定します。"
  remarks: "Unicode 規格では、文字列は、新しい文字を生成するために基本文字の結合である結合文字を定義します。 空白以外の組み合わせ文字では、表示されるときに単独で文字のスペースは使用しません。 詳細については、空白結合文字、http://www.unicode.org で Unicode 標準を参照してください。       <xref:System.Data.SqlTypes.SqlString>クラス</xref:System.Data.SqlTypes.SqlString>の定数として IgnoreNonSpace 関数"
  syntax:
    content: public static readonly int IgnoreNonSpace;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  id: IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "文字列比較で文字幅を無視するかを指定します。"
  remarks: "たとえば、全角と半角日本語のカタカナの文字を書き込むことが、この値は、選択した場合、カタカナの文字を全角として書き込まれますが等しいと見なさ半角で記述された同じ文字に。       <xref:System.Data.SqlTypes.SqlString>クラス</xref:System.Data.SqlTypes.SqlString>の定数として IgnoreWidth 関数"
  syntax:
    content: public static readonly int IgnoreWidth;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "示すかどうかこの<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造が null です。"
  remarks: "詳細については、次を参照してください。 [Null 値の処理](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref:System.Data.SqlTypes.SqlString.Value*> is <xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;></xref>.</xref:System.Data.SqlTypes.SqlString.Value*> それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LCID
  id: LCID
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "地理的なロケールと言語の指定、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>構造体。"
  syntax:
    content: public int LCID { get; }
    return:
      type: System.Int32
      description: "格納された文字列のロケール id、<xref:System.Data.SqlTypes.SqlString.Value*>プロパティ</xref:System.Data.SqlTypes.SqlString.Value*>。"
  overload: System.Data.SqlTypes.SqlString.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>最初が小さいかどうかを判断するオペランド&2; 番目よりです。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが小さい場合は、2 番目のインスタンスよりもします。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは、最初は、2 番目以下かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以下の場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは両者が等しくないかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "表す、 <xref href=&quot;System.DBNull&quot;> </xref>のこのインスタンスに割り当て可能な<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  remarks: '`Null`関数の定数として、<xref:System.Data.SqlTypes.SqlString>構造</xref:System.Data.SqlTypes.SqlString>。  詳細については、次を参照してください。 [Null 値の処理](~/add/includes/ajax-current-ext-md.md)です。'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlString Null;
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定された&2; つを連結<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Addition (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 、2 つの内容を表す新しく連結された値を格納している<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>パラメーター。"
  overload: System.Data.SqlTypes.SqlString.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは、等しいかどうかを確認します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合、または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDateTime x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlGuid x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static string op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オペランドを&1; つは、2 番目より大きいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンスより大きい場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>オペランドを&1; つは、2 番目以上かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以上の場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  id: op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Implicit (string x);
    parameters:
    - id: x
      type: System.String
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlString.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは両者が等しくないかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>最初が小さいかどうかを判断するオペランド&2; 番目よりです。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが小さい場合は、2 番目のインスタンスよりもします。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つの論理比較を実行<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>のオペランドは、最初は、2 番目以下かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以下の場合。 それ以外の場合、 <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  id: SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "1 つまたは複数の組み合わせ、 <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref>をこの方法を表す列挙値<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>互いに比較する必要があります<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions SqlCompareOptions { get; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "指定する値がこの方法<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>互いに比較する必要があります<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。"
  overload: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーは、.NET Framework インフラストラクチャをサポートしているをコードから直接使用するものではありません。"
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーは、.NET Framework インフラストラクチャをサポートしているをコードから直接使用するものではありません。"
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーは、.NET Framework インフラストラクチャをサポートしているをコードから直接使用するものではありません。"
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.Data.SqlTypes.SqlString.Value*>は&0; 以外の場合です。 場合、<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は&0; ですそれ以外の場合は Null です。</xref:System.Data.SqlTypes.SqlString.Value*> 。"
  overload: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlByte&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "新しい<xref uid=&quot;langword_csharp_SqlByte&quot; name=&quot;SqlByte&quot; href=&quot;&quot;></xref>構造体が<xref:System.Data.SqlTypes.SqlByte.Value*>これによって表される数と等しく<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造</xref:System.Data.SqlTypes.SqlByte.Value*>。"
  overload: System.Data.SqlTypes.SqlString.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  id: ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlDateTime ToSqlDateTime ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "新しい<xref uid=&quot;langword_csharp_SqlDateTime&quot; name=&quot;SqlDateTime&quot; href=&quot;&quot;></xref>これによって表される日付値を格納する構造体<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;></xref>の値を格納している<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;></xref>構造体が<xref:System.Data.SqlTypes.SqlGuid.Value*>は、 <xref uid=&quot;langword_csharp_Guid&quot; name=&quot;Guid&quot; href=&quot;&quot;> </xref>これによって表される<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造</xref:System.Data.SqlTypes.SqlGuid.Value*>。"
  overload: System.Data.SqlTypes.SqlString.ToSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlString.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造の<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "新しい<xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;></xref>の値がこの数値に<xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "変換、 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> <xref:System.String></xref:System.String>オブジェクト。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>これと同じ値を持つ<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造</xref:System.String>。"
  overload: System.Data.SqlTypes.SqlString.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Value
  id: Value
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "これに格納されている文字列を取得<xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>構造体。 このプロパティは、読み取り専用です。"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "格納されている文字列。"
  overload: System.Data.SqlTypes.SqlString.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "文字列の値は<xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlString.BinarySort
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
- uid: System.Data.SqlTypes.SqlString.Clone
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
- uid: System.Globalization.CompareInfo
  parent: System.Globalization
  isExternal: true
  name: CompareInfo
  nameWithType: CompareInfo
  fullName: System.Globalization.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
- uid: System.Globalization.CompareOptions
  parent: System.Globalization
  isExternal: true
  name: CompareOptions
  nameWithType: CompareOptions
  fullName: System.Globalization.CompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
- uid: System.Data.SqlTypes.SqlString.IsNull
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.Null
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlString.ToString
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
- uid: System.Data.SqlTypes.SqlString.Value
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
- uid: System.Data.SqlTypes.SqlString.#ctor*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString
  nameWithType: SqlString.SqlString
- uid: System.Data.SqlTypes.SqlString.Add*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add
  nameWithType: SqlString.Add
- uid: System.Data.SqlTypes.SqlString.Clone*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone
  nameWithType: SqlString.Clone
- uid: System.Data.SqlTypes.SqlString.CompareInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo
  nameWithType: SqlString.CompareTo
- uid: System.Data.SqlTypes.SqlString.Concat*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat
  nameWithType: SqlString.Concat
- uid: System.Data.SqlTypes.SqlString.CultureInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals
  nameWithType: SqlString.Equals
- uid: System.Data.SqlTypes.SqlString.GetHashCode*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode
  nameWithType: SqlString.GetHashCode
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes
  nameWithType: SqlString.GetNonUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes
  nameWithType: SqlString.GetUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetXsdType*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType
  nameWithType: SqlString.GetXsdType
- uid: System.Data.SqlTypes.SqlString.GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan
  nameWithType: SqlString.GreaterThan
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlString.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.IsNull*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan
  nameWithType: SqlString.LessThan
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlString.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.NotEquals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals
  nameWithType: SqlString.NotEquals
- uid: System.Data.SqlTypes.SqlString.op_Addition*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition
  nameWithType: SqlString.op_Addition
- uid: System.Data.SqlTypes.SqlString.op_Equality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality
  nameWithType: SqlString.op_Equality
- uid: System.Data.SqlTypes.SqlString.op_Explicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit
  nameWithType: SqlString.op_Explicit
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlString.op_GreaterThan
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlString.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.op_Implicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit
  nameWithType: SqlString.op_Implicit
- uid: System.Data.SqlTypes.SqlString.op_Inequality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality
  nameWithType: SqlString.op_Inequality
- uid: System.Data.SqlTypes.SqlString.op_LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan
  nameWithType: SqlString.op_LessThan
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlString.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlString.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlString.ToSqlByte*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlString.ToSqlByte
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime
  nameWithType: SqlString.ToSqlDateTime
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlString.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlString.ToSqlDouble
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid
  nameWithType: SqlString.ToSqlGuid
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlString.ToSqlInt16
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlString.ToSqlInt32
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlString.ToSqlInt64
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlString.ToSqlMoney
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlString.ToSqlSingle
- uid: System.Data.SqlTypes.SqlString.ToString*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString
  nameWithType: SqlString.ToString
- uid: System.Data.SqlTypes.SqlString.Value*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
