### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  id: X509CertificateInitiatorServiceCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  type: Class
  summary: "クライアントが提示した証明書を検証するサービスで使用する設定を表します。 クライアントの応答またはコールバックを暗号化に使用するサービスの証明書も含まれています。 ときに<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>メッセージ セキュリティ認証モードを使用します。"
  remarks: "このクラスで設定される証明書が構成されているバインディングのみを対象クライアントへのメッセージの暗号化に使用される`MutualCertificateDuplex`メッセージ セキュリティ認証モードです。"
  syntax:
    content: public sealed class X509CertificateInitiatorServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "認証時に、クライアントから提示された証明書の検証に使用する設定を取得します。"
  remarks: ''
  example:
  - "The following code shows how to use this property to set the certificate authentication properties.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ClientCertificateAuthentication
      description: "認証時に、クライアントから提示された証明書を検証するために使用する設定です。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得または設定に使用する証明書<xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;></xref>メッセージ セキュリティ認証モードです。"
  remarks: "このプロパティはメッセージ セキュリティ モードに構成されているバインディングの使用時に`MutualCertificateDuplex`メッセージ セキュリティ認証モードを使用します。"
  example:
  - "The following code shows how to use this property to get the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>非相関双方向トランスポートの場合に、サービスによってクライアントに送信されるメッセージの暗号化に使用する、 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref>メッセージ セキュリティ認証モードを使用します。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "読み取り専用の資格情報を設定しようとしました。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "サブジェクト識別名を指定することによって、クライアントのメッセージの暗号化に使用する証明書を指定できます。 構成されているバインディングでのみこの設定が使用される、 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref>メッセージ セキュリティ認証モードです。"
  remarks: "[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]`subjectName`パラメーター、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>を参照してください。       値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル コンピューター (既定値) に割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザーによって使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       クライアント アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> クライアント アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "サブジェクト識別名。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスを使用して、証明書を取得する証明書ストアの場所です。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "クライアントのメッセージの暗号化に使用する証明書を指定します。 構成されているバインディングでのみこの設定が使用される、 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref>メッセージ セキュリティ認証モードです。"
  remarks: "値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル コンピューター (既定値) に割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザーによって使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。       値を`findType`に含まれる、<xref:System.Security.Cryptography.X509Certificates.X509FindType>列挙体です</xref:System.Security.Cryptography.X509Certificates.X509FindType>。       最もよく使用される列挙体は<xref:System.Security.Cryptography.X509Certificates.X509FindType>、指定されたストアに証明書のサブジェクト名の大文字と小文字の検索にはどの</xref:System.Security.Cryptography.X509Certificates.X509FindType>。 これにより、不正確な検索があります。 証明書がありませんか、条件に一致する複数の証明書が見つからない場合は、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException>。"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスを使用して、証明書を取得する証明書ストアの場所です。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "実行する X.509 検索の種類。"
    - id: findValue
      type: System.Object
      description: "X.509 証明書ストアで検索する値。"
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509ClientCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ClientCertificateAuthentication
  nameWithType: X509ClientCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ClientCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate
