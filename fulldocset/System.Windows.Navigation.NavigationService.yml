### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.NavigationService
  id: NavigationService
  children:
  - System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  - System.Windows.Navigation.NavigationService.CanGoBack
  - System.Windows.Navigation.NavigationService.CanGoForward
  - System.Windows.Navigation.NavigationService.Content
  - System.Windows.Navigation.NavigationService.CurrentSource
  - System.Windows.Navigation.NavigationService.FragmentNavigation
  - System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  - System.Windows.Navigation.NavigationService.GoBack
  - System.Windows.Navigation.NavigationService.GoForward
  - System.Windows.Navigation.NavigationService.LoadCompleted
  - System.Windows.Navigation.NavigationService.Navigate(System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  - System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  - System.Windows.Navigation.NavigationService.Navigated
  - System.Windows.Navigation.NavigationService.Navigating
  - System.Windows.Navigation.NavigationService.NavigationFailed
  - System.Windows.Navigation.NavigationService.NavigationProgress
  - System.Windows.Navigation.NavigationService.NavigationStopped
  - System.Windows.Navigation.NavigationService.Refresh
  - System.Windows.Navigation.NavigationService.RemoveBackEntry
  - System.Windows.Navigation.NavigationService.Source
  - System.Windows.Navigation.NavigationService.StopLoading
  langs:
  - csharp
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
  type: Class
  summary: "メソッド、プロパティ、およびナビゲーションをサポートするためにイベントが含まれています。"
  remarks: "NavigationService は、ブラウザー スタイルのナビゲーションのコンテキスト内でコンテンツをダウンロードする機能をカプセル化します。       コンテンツできる任意の種類の[!INCLUDE[TLA2#tla_winfx](~/add/includes/tla2sharptla-winfx-md.md)]オブジェクトおよび[!INCLUDE[TLA#tla_html](~/add/includes/tlasharptla-html-md.md)]ファイル。 一般は、ページがナビゲーションのパッケージ コンテンツにする方法として推奨される (を参照してください<xref:System.Windows.Controls.Page>).</xref:System.Windows.Controls.Page>       オブジェクトのインスタンスを提供することのオーバー ロードを呼び出すことによりにコンテンツを移動する、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>オブジェクトを受け取るメソッドを:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>-<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>相対パスを渡すことによってに移動または絶対コンテンツを使用できる別の方法として、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]のいずれかに、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>メソッドのオーバー ロードを受け付ける、 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>-<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName>ときのコンテンツに移動して[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]NavigationService は、コンテンツを含むオブジェクトを返します</xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%2A>。       ナビゲーションの有効期間は、次のイベントを追跡できます:- <xref:System.Windows.Navigation.NavigationService.Navigating>- <xref:System.Windows.Navigation.NavigationService.Navigated>- <xref:System.Windows.Navigation.NavigationService.NavigationProgress>- <xref:System.Windows.Navigation.NavigationService.NavigationFailed>- <xref:System.Windows.Navigation.NavigationService.NavigationStopped>- <xref:System.Windows.Navigation.NavigationService.LoadCompleted>- <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.</xref:System.Windows.Navigation.NavigationService.FragmentNavigation> </xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.NavigationFailed> </xref:System.Windows.Navigation.NavigationService.NavigationProgress> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationService.Navigating>       すべてのイベントはたびに発生する、ナビゲーションが発生します。(キャンセル、停止、または失敗) は、発生するイベントのセットをナビゲーション (コンテンツまたはコンテンツ フラグメント) に発生して、ナビゲーションの完了方法の種類によって決まります。       次の図は、これらのイベントが発生するシーケンスを示しています:![ページ ナビゲーションのフロー チャート](~/add/media/navigationoverviewfigure11.png &quot;ページ ナビゲーションのフロー チャート&quot;)NavigationService がは、移動先などのコンテンツに関する情報を提供中に、または、ナビゲーションの後に、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]移動先のコンテンツの (<xref:System.Windows.Navigation.NavigationService.Source%2A>) では、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]の現在のコンテンツ (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)、および移動先の内容を格納しているオブジェクト (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。</xref:System.Windows.Navigation.NavigationService.Content%2A> </xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> </xref:System.Windows.Navigation.NavigationService.Source%2A> 。       コンテンツを移動する、NavigationService はナビゲーション履歴にエントリとしてナビゲーションを記録します。 ナビゲーション履歴のバックアップを作成して呼び出すことによって、どちらか、新しいナビゲーションが発生したときに、エントリが追加、<xref:System.Windows.Navigation.NavigationService.Navigate%2A>メソッドを呼び出して<xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> &quot;進む&quot;ナビゲーション履歴内のエントリに移動して</xref:System.Windows.Navigation.NavigationService.Navigate%2A> エントリが追加&quot;進む&quot;ナビゲーション履歴を戻るのエントリに移動してナビゲーション履歴<xref:System.Windows.Navigation.NavigationService.GoBack%2A>。</xref:System.Windows.Navigation.NavigationService.GoBack%2A>を呼び出すことによって <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>および<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>があるか前に、&quot;進む&quot;ナビゲーション履歴の場合は、それぞれを報告します</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>。</xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> ナビゲーション履歴に最新のエントリを削除して<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>。</xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>を呼び出すことによっても、       既定では、NavigationService は格納されませんコンテンツ オブジェクトのインスタンスでナビゲーション履歴。 代わりに、NavigationService は、ナビゲーション履歴を使用して、移動するたびに、コンテンツ オブジェクトの新しいインスタンス作成します。 この動作は数値が大きいとコンテンツの大きなデータは移動先ときに、過度なメモリ消費を避けるために設計されています。 その結果、次に、コンテンツの状態は&1; つのナビゲーションからに記憶されません。 ただし、[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]ナビゲーション履歴にコンテンツの状態の一部を格納する、いくつかの方法を提供します。       使用して<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>、単一のページ インスタンスの状態の複数のセットも覚えておいてください</xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>。       NavigationService は`sealed`クラスし、そのため、インスタンス化できません。 代わりに、NavigationService 使用ナビゲーターによってナビゲーションを有効にします。 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]、2 つのナビゲーターがある: <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame></xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 。       視覚的に、[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]として、統合されたユーザー エクスペリエンスを提供するためのナビゲーター。 物理的に、ただし、[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]を実際に使用<xref:System.Windows.Navigation.NavigationWindow>ナビゲーター; として、<xref:System.Windows.Application.MainWindow%2A>のプロパティ、[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]で実行されている[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]への参照を返す、<xref:System.Windows.Navigation.NavigationWindow>とで管理されているナビゲーション履歴、<xref:System.Windows.Navigation.NavigationWindow>で管理されているナビゲーション履歴に統合されて[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]次の方法で: 呼び出すことによってコンテンツが移動先とするときに<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、および<xref:System.Windows.Navigation.NavigationService.GoForward%2A>内から、[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]関連ナビゲーション履歴のエントリに追加されます[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]ナビゲーション履歴</xref:System.Windows.Navigation.NavigationService.GoForward%2A></xref:System.Windows.Navigation.NavigationService.GoBack%2A></xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationWindow></xref:System.Windows.Navigation.NavigationWindow></xref:System.Windows.Application.MainWindow%2A></xref:System.Windows.Navigation.NavigationWindow>。      -内のエントリ、[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]ナビゲーション[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]が選択されている[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]NavigationService に移動すると、またはこれらのエントリに関連付けられているコンテンツを転送します。      > [!NOTE] >、<xref:System.Windows.Controls.Frame>独自のナビゲーション履歴を提供したりそれをホストする、ナビゲーターのナビゲーション履歴の使用</xref:System.Windows.Controls.Frame> 場合<xref:System.Windows.Controls.Frame>独自ナビゲーション履歴を提供表示できるように、独自のナビゲーション[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]ナビゲーション履歴にエントリを移動するホスト ナビゲーターのナビゲーション履歴にこれらのエントリは追加されません (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>、 [!INCLUDE[TLA2#tla_iegeneric](~/add/includes/tla2sharptla-iegeneric-md.md)]) と、その結果のナビゲーションに移動することはできません[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]各 (を参照してください<xref:System.Windows.Controls.Frame.JournalOwnership%2A>).</xref:System.Windows.Controls.Frame.JournalOwnership%2A> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame>"
  syntax:
    content: public sealed class NavigationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  id: AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "バックアップが含まれるナビゲーション履歴にエントリを追加、 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref>オブジェクト。"
  remarks: "ため、 <xref:System.Windows.Navigation.CustomContentState>、および<xref:System.Windows.Navigation.IProvideCustomContentState>、現在のコンテンツの状態のセットを複数記憶のために使用します</xref:System.Windows.Navigation.IProvideCustomContentState></xref:System.Windows.Navigation.CustomContentState>。"
  syntax:
    content: public void AddBackEntry (System.Windows.Navigation.CustomContentState state);
    parameters:
    - id: state
      type: System.Windows.Navigation.CustomContentState
      description: "A <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref>特定のコンテンツに関連付けられているアプリケーション定義の状態を表すオブジェクト。"
  overload: System.Windows.Navigation.NavigationService.AddBackEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>state</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、および<xref href=&quot;System.Windows.Navigation.CustomContentState&quot;></xref>から返されたオブジェクトがない<xref:System.Windows.Navigation.IProvideCustomContentState.GetContentState*>です。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  id: CanGoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "ナビゲーション履歴には、少なくとも&1; つのエントリがあるかどうかを示す値を取得します。"
  remarks: "CanGoBack&quot;戻る&quot;ナビゲーション履歴には、少なくとも&1; つのエントリがあるかどうかを判断します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoBack%2A>以外の場合は<xref:System.Windows.Navigation.NavigationService.GoBack%2A>が呼び出された&quot;戻る&quot;ナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException></xref:System.Windows.Navigation.NavigationService.GoBack%2A></xref:System.Windows.Navigation.NavigationService.GoBack%2A>。      > [!NOTE] > をナビゲーション履歴が複数のナビゲーターで共有される場合 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、最も最近エントリ背面にナビゲーション履歴が追加されていないによって、<xref:System.Windows.Navigation.NavigationService>の現在のナビゲーター</xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 。"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻るナビゲーション履歴に少なくとも&1; つのエントリがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  id: CanGoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "次に進むナビゲーション履歴に少なくとも&1; つのエントリがあるかどうかを示す値を取得します。"
  remarks: "CanGoForward&quot;進む&quot;ナビゲーション履歴に少なくとも&1; つのエントリがあるかどうかを判断します。 このプロパティを呼び出す前に検査する必要があります<xref:System.Windows.Navigation.NavigationService.GoForward%2A>以外の場合は<xref:System.Windows.Navigation.NavigationService.GoForward%2A>が呼び出された&quot;進む&quot;ナビゲーション履歴にエントリがないと、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException></xref:System.Windows.Navigation.NavigationService.GoForward%2A></xref:System.Windows.Navigation.NavigationService.GoForward%2A>。"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>次に進むナビゲーション履歴に少なくとも&1; つのエントリがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Content
  id: Content
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得または現在のコンテンツを含むオブジェクトへの参照を設定します。"
  remarks: "2 つの方法のいずれかでコンテンツを設定することができます: - オブジェクトへの参照を設定することによって直接、します。      -呼び出すことによって間接的に<xref:System.Windows.Navigation.NavigationService.Navigate%2A>、 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>、または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A>       設定<xref:System.Windows.Navigation.NavigationService>新しいナビゲーションを開始する; ナビゲーションは、コンテンツの非同期なのでは、直後に設定されていることを検査は場合に、値に返されません</xref:System.Windows.Navigation.NavigationService>。"
  syntax:
    content: public object Content { get; set; }
    return:
      type: System.Object
      description: "現在のコンテンツを含むオブジェクトへの参照であるオブジェクトです。"
  overload: System.Windows.Navigation.NavigationService.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  id: CurrentSource
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]されたコンテンツを最後に移動されました。"
  remarks: "別のナビゲーションまで CurrentSource プロパティの値が変更されない[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]が正常に完了します。       フラグメントのみを設定する CurrentSource[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]です。"
  syntax:
    content: public Uri CurrentSource { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>の最後に移動したを使用してに移動する場合、コンテンツ、 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Uri> 。"
  overload: System.Windows.Navigation.NavigationService.CurrentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  id: FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "コンテンツ フラグメントへのナビゲーションが開始されると、すぐに、発生する場合は、目的のフラグメントは、現在のコンテンツまたはソースの後に発生した[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]フラグメント場合は、必要な別のコンテンツにコンテンツが読み込まれました。"
  remarks: "By default, a content fragment is content that is contained by a named <xref:System.Windows.UIElement>, which is a <xref:System.Windows.UIElement> whose <xref:System.Windows.FrameworkElement.Name%2A> attribute is set, eg:  \n  \n```  \n<TextBlock Name=\"FragmentName\">...</TextBlock>  \n```  \n  \n You navigate to a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fragment by providing a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] with a suffix in the following format:  \n  \n \\#*FragmentName*  \n  \n The following shows an example of a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that refers to a content fragment:  \n  \n `http://www.microsoft.com/targetpage.xaml#FragmentName`  \n  \n After the source page loads (after <xref:System.Windows.Navigation.NavigationService.LoadCompleted> event is raised), fragment navigation begins and the <xref:System.Windows.Navigation.NavigationService> attempts to locate the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment. If the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment is found, <xref:System.Windows.Navigation.NavigationService> instructs the content navigator  (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) to show the fragment. If you need to change this behavior, you can handle FragmentNavigation to provide your own fragment navigation behavior. FragmentNavigation is passed a <xref:System.Windows.Navigation.FragmentNavigationEventArgs> parameter which exposes properties that are useful for this purpose, including:  \n  \n-   The navigator that owns this navigation service (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  \n  \n-   The fragment name.  \n  \n You can handle FragmentNavigation to override the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment implementation with your own custom implementation. If you do so, you need to set <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> to `true`; otherwise, the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment processing behavior is applied.  \n  \n You should avoid directly initiating navigation from within a FragmentNavigation event handler. Since FragmentNavigation is raised during an existing navigation, initiating a new navigation from a FragmentNavigation event handler creates a nested navigation that can cause the <xref:System.ExecutionEngineException> to be thrown. Instead, you can indirectly initiate navigation by creating an asynchronous work item using the <xref:System.Windows.Threading.Dispatcher>.  \n  \n> [!NOTE]\n>  When <xref:System.Windows.Navigation.NavigationService> raises FragmentNavigation, it also raises <xref:System.Windows.Application.FragmentNavigation?displayProperty=fullName> event on the <xref:System.Windows.Application> object.  \n  \n> [!IMPORTANT]\n>  Fragment navigation is not supported for loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] pages (markup-only [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] files with `Page` as the root element) in the following cases:  \n>   \n>  • When navigating to a fragment in a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  • When navigating from a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page to a fragment in another loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  However, a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page can navigate to its own fragments."
  example:
  - "The following example shows how to handle FragmentNavigation to provide custom fragment navigation behavior. In this case, the example opens an error [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page if the fragment in the source [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page is not found.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]"
  syntax:
    content: public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;
    return:
      type: System.Windows.Navigation.FragmentNavigationEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  id: GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "参照を取得、 <xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref>の内容が含まれていますが、指定された、ナビゲーターの<xref href=&quot;System.Windows.DependencyObject&quot;></xref>です。"
  remarks: "ナビゲーターは、<xref:System.Windows.Navigation.NavigationService>コンテンツ ナビゲーションを処理する</xref:System.Windows.Navigation.NavigationService>。 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]2 つのナビゲーター: <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame></xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 。 ナビゲーション要求を処理し、ナビゲーションの有効期間を管理、ナビゲーターを使用して、 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Navigation.NavigationService>クラス</xref:System.Windows.Navigation.NavigationService>として実装されているナビゲーション サービス ナビゲーターによってホストされているコンテンツがナビゲーターへの参照を取得できます<xref:System.Windows.Navigation.NavigationService>GetNavigationService メソッドを呼び出します</xref:System.Windows.Navigation.NavigationService>。       GetNavigationService 返します`null`ときに、 `dependencyObject`:-は<xref:System.Windows.Navigation.NavigationWindow>.</xref:System.Windows.Navigation.NavigationWindow>      は、<xref:System.Windows.Controls.Frame>を: 1</xref:System.Windows.Controls.Frame> 。  別のナビゲーターによってホストされます。          2.  その<xref:System.Windows.Controls.Frame.JournalOwnership%2A><xref:System.Windows.Navigation.JournalOwnership>。</xref:System.Windows.Navigation.JournalOwnership>プロパティ</xref:System.Windows.Controls.Frame.JournalOwnership%2A>      -ナビゲーターによってホストされているコンテンツの一部ではないのです。       [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]参照を取得するための&2; つのショートカットを提供、 <xref:System.Windows.Navigation.NavigationService>: -<xref:System.Windows.Navigation.NavigationService>へのナビゲーションを処理する、<xref:System.Windows.Controls.Page>からアクセスできる、<xref:System.Windows.Controls.Page>自体の値を取得することによってその<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName>プロパティ</xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName></xref:System.Windows.Controls.Page></xref:System.Windows.Controls.Page></xref:System.Windows.Navigation.NavigationService></xref:System.Windows.Navigation.NavigationService>。      -<xref:System.Windows.Navigation.NavigationService>によって使用される、<xref:System.Windows.Controls.Frame>ナビゲーションを処理するの値を取得することによってアクセスできる、<xref:System.Windows.Controls.Frame.NavigationService%2A>プロパティ</xref:System.Windows.Controls.Frame.NavigationService%2A></xref:System.Windows.Controls.Frame></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how a <xref:System.Windows.Controls.UserControl> can retrieve a navigation service by calling GetNavigationService.  \n  \n [!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]\n [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode1)]  \n[!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]\n[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode2)]"
  syntax:
    content: public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.DependencyObject&quot;> </xref>ナビゲーターによってホストされているコンテンツでします。"
    return:
      type: System.Windows.Navigation.NavigationService
      description: "参照、 <xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref>の内容が含まれていますが、指定された、ナビゲーターの<xref href=&quot;System.Windows.DependencyObject&quot;> </xref>; できる<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合によっては (「解説」を参照してください)。"
  overload: System.Windows.Navigation.NavigationService.GetNavigationService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencyObject</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoBack
  id: GoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "最新のエントリに移動戻るナビゲーション履歴に&1; つを使用する必要がある場合。"
  remarks: "GoBack を呼び出す前に、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます</xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>。"
  example:
  - "The following example navigates to the most recent entry in back navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowbackcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowbackcode)]"
  syntax:
    content: public void GoBack ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoBack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GoBack は、ナビゲーション履歴にエントリがないときに呼び出されます。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoForward
  id: GoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "1 つを使用する必要がある場合は、次に進むナビゲーション履歴に最新のエントリに移動します。"
  remarks: "GoForward を呼び出す前に、 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>&quot;進む&quot;ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>。"
  example:
  - "The following example navigates to the most recent entry in forward navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowforwardcode)]"
  syntax:
    content: public void GoForward ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoForward*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GoForward は、次に進むナビゲーション履歴にエントリがないときに呼び出されます。"
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "移動先のコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。"
  remarks: "LoadCompleted を処理するは、負荷の完了時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトを LoadCompleted イベント ハンドラーに渡され、含まれています:-コンテンツとその[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</xref:System.Windows.Navigation.NavigationEventArgs>。      -ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -追加のデータは、ナビゲーションがいずれか<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。</xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationService.Navigate%2A>を呼び出すことによって開始された場合、      -応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト).</xref:System.Net.WebResponse>       元のページが見つからないか、読み込まれている場合と LoadCompleted は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します</xref:System.Windows.Navigation.NavigationService.NavigationFailed>。      > [!NOTE] > とき<xref:System.Windows.Navigation.NavigationService>LoadCompleted、発生もを発生させます<xref:System.Windows.Application.LoadCompleted?displayProperty=fullName>でイベントを<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application></xref:System.Windows.Application.LoadCompleted?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how to handle LoadCompleted.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowloadcompletedcode)]"
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  id: Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "オブジェクトによって格納されているコンテンツを非同期的に移動します。"
  remarks: "移動を移動、<xref:System.Object>によって指定された`root`、次の条件に該当する場合: -<xref:System.Windows.Navigation.NavigationService.Navigating>イベントは取り消されません</xref:System.Windows.Navigation.NavigationService.Navigating></xref:System.Object>。      -Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます</xref:System.Windows.Navigation.NavigationService.Navigating>。       場合`root`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています</xref:System.Windows.Navigation.NavigationService.Content%2A>。      > [!NOTE] > Web コンテンツをダウンロードするときに、Web の例外が表示される可能性があります (たとえば、404: ファイルが見つかりません)。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>。</xref:System.Windows.Navigation.NavigationService.NavigationFailed>からこのような例外を処理することができます。"
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content tree.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigateobjectcode)]"
  syntax:
    content: public bool Navigate (object root);
    parameters:
    - id: root
      type: System.Object
      description: "移動先のコンテンツを格納するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションがキャンセルされない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "指定されているコンテンツを非同期に移動して、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]です。"
  remarks: "値`source`Web を指定できます[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]または、有効なパック[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)](を参照してください[WPF のパック Uri](~/add/includes/ajax-current-ext-md.md))。       移動に移動し、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]によって指定された`source`、次の条件に該当する場合: -<xref:System.Windows.Navigation.NavigationService.Navigating>イベントは取り消されません</xref:System.Windows.Navigation.NavigationService.Navigating>。      -Web 要求 (を参照してください<xref:System.Windows.Navigation.NavigationService.Navigating>) を作成できます</xref:System.Windows.Navigation.NavigationService.Navigating>。       場合`source`は`null`、既存のコンテンツ (<xref:System.Windows.Navigation.NavigationService.Content%2A>) がオフになっています</xref:System.Windows.Navigation.NavigationService.Content%2A>。      > [!NOTE] > Web コンテンツをダウンロードするときに、Web の例外が表示される可能性があります (たとえば、404: ファイルが見つかりません)。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>。</xref:System.Windows.Navigation.NavigationService.NavigationFailed>からこのような例外を処理することができます。       [移動] を使用すると、コンテンツ フラグメントへ移動します。 によってコンテンツが識別される場合、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]現在はコンテンツでは、再ダウンロードされません。"
  example:
  - "The following example shows how to navigate to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatecode)]"
  syntax:
    content: public bool Navigate (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>オブジェクトを初期化して、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目的のコンテンツ</xref:System.Uri>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションがキャンセルされない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  id: Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "オブジェクトが格納されているコンテンツを非同期に移動し、ナビゲーション中に処理するために使用するデータを格納しているオブジェクトを渡します。"
  remarks: "このメソッドと同じ動作<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>の代わりに、オブジェクトが渡されますが、 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName> 。"
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content, and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateObjectStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateobjectstatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (object root, object navigationState);
    parameters:
    - id: root
      type: System.Object
      description: "移動先のコンテンツを格納するオブジェクト。"
    - id: navigationState
      type: System.Object
      description: "ナビゲーション中に処理するために使用するデータを格納するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションがキャンセルされない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  id: Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "あるソース コンテンツを非同期に移動して、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]ナビゲーション中に処理するために使用するデータを含むオブジェクトを渡します。"
  remarks: "ナビゲーションは非同期にあるために、複数のナビゲーションで同時に進行中である可能性があります。 たとえば、1 ページに&2; つの子フレームがある場合両方のフレームは移動可能性があります。 この場合、によって発生するさまざまなナビゲーション イベント<xref:System.Windows.Navigation.NavigationService>複数回、それぞれの移動、コンテンツの&1; つ発生しては限りませんようにするためのナビゲーションを要求した可能性があります</xref:System.Windows.Navigation.NavigationService>。 したがって、特定のナビゲーション要求は、個々 の要求に固有のデータを処理する場合、すべてのナビゲーション要求に使用可能なデータは使用できません。 使用する代わりに、`navigationState`ナビゲーション処理は&1; つのナビゲーション要求に固有のデータを渡すことです。       ナビゲーション状態へのアクセスを提供する次のイベント引数:- <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>(に渡される、<xref:System.Windows.Navigation.NavigationService.Navigating>イベント).</xref:System.Windows.Navigation.NavigationService.Navigating> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>      - <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>(に渡される、 <xref:System.Windows.Navigation.NavigationService.Navigated>、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped>、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>イベント ハンドラー).</xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>"
  example:
  - "The following example demonstrates navigating to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateUriStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateuristatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (Uri source, object navigationState);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>オブジェクトを初期化して、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目的のコンテンツ</xref:System.Uri>。"
    - id: navigationState
      type: System.Object
      description: "ナビゲーション中に処理するために使用するデータを格納するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションがキャンセルされない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  id: Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "あるソース コンテンツを非同期に移動して、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]ナビゲーション、およびサンド ボックスの中に、コンテンツを処理するためのナビゲーション状態を含むオブジェクトを渡します。"
  remarks: "このメソッドはスタンドアロン アプリケーションののみと[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]コンテンツ。       このメソッドと同じ動作が発生<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>、部分信頼セキュリティ サンド ボックスにダウンロードされているコンテンツが配置されるようにすることでそれを拡張し、(権限での既定のインターネット ゾーン セットで、次を参照してください[WPF 部分信頼セキュリティ](~/add/includes/ajax-current-ext-md.md))。</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName> 。"
  syntax:
    content: public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);
    parameters:
    - id: source
      type: System.Uri
      description: "A<xref:System.Uri>オブジェクトを初期化して、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]目的のコンテンツ</xref:System.Uri>。"
    - id: navigationState
      type: System.Object
      description: "ナビゲーション中に処理するために使用するデータを格納するオブジェクト。"
    - id: sandboxExternalContent
      type: System.Boolean
      description: "部分信頼セキュリティ サンド ボックスにコンテンツをダウンロード (インターネット既定値は、権限のセットがゾーンに場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションがキャンセルされない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigated
  id: Navigated
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "移動先のコンテンツが見つかるとから利用できるときに発生、<xref:System.Windows.Navigation.NavigationService.Content*>プロパティ、可能性がありますが、完了していない読み込みが</xref:System.Windows.Navigation.NavigationService.Content*>。"
  remarks: "ダウンロードの開始時に、ナビゲーション要求に関する情報を確認する必要がある場合は、Navigated を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトを Navigated イベント ハンドラーに渡され、含まれています:-ソース ページ</xref:System.Windows.Navigation.NavigationEventArgs>。 Navigated が発生したときに元のページの一部には、少なくとも[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]ツリーを解析され、対象のコンテンツ コントロールにアタッチします。      -要求された[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]です。      -ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -追加のデータは、ナビゲーションがいずれか<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。</xref:System.Windows.Navigation.NavigationService.Navigate%2A></xref:System.Windows.Navigation.NavigationService.Navigate%2A>を呼び出すことによって開始された場合、      -応答の詳細 (を使用して、<xref:System.Net.WebResponse>オブジェクト).</xref:System.Net.WebResponse>       移動したときに、元のページが見つからないか、読み込まれている場合は発生しません<xref:System.Windows.Navigation.NavigationService.NavigationFailed>が発生します</xref:System.Windows.Navigation.NavigationService.NavigationFailed>。      > [!NOTE] > とき<xref:System.Windows.Navigation.NavigationService>を発生させます<xref:System.Windows.Navigation.NavigationService.NavigationFailed>もを発生させます<xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>でイベントを<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application></xref:System.Windows.Application.NavigationFailed?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.NavigationFailed></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how to handle Navigated.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigating
  id: Navigating
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "新しいナビゲーションが要求されたときに発生します。"
  remarks: "移動する、新しいナビゲーションが要求されるを含め、コンテンツが要求されたソースの前に:-<xref:System.Windows.Navigation.NavigationService.Navigate%2A>と呼びます</xref:System.Windows.Navigation.NavigationService.Navigate%2A>。      -<xref:System.Windows.Navigation.NavigationService.GoBack%2A>または<xref:System.Windows.Navigation.NavigationService.GoForward%2A>と呼びます (またはナビゲーションのエントリが選択されて[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]).</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A>      -コンテンツ フラグメントに移動します。       ナビゲーションが開始する前に、ナビゲーション要求に関する情報を確認する必要がある場合は、ナビゲーションを処理します。 この情報は、 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>Navigating イベント ハンドラーに渡されるオブジェクト</xref:System.Windows.Navigation.NavigatingCancelEventArgs>。       A<xref:System.Net.WebRequest>ナビゲーションが作成されから使用可能なオブジェクト、<xref:System.Windows.Navigation.NavigatingCancelEventArgs>パラメーターであるため、実際の要求は、この時点で化されていないを再構成できます、<xref:System.Net.WebRequest>オブジェクトを必要な場合</xref:System.Net.WebRequest></xref:System.Windows.Navigation.NavigatingCancelEventArgs></xref:System.Net.WebRequest>。       処理も<xref:System.Windows.Navigation.NavigatingCancelEventArgs>設定で、必要な場合、ナビゲーションをキャンセルする<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>true に設定します</xref:System.ComponentModel.CancelEventArgs.Cancel%2A></xref:System.Windows.Navigation.NavigatingCancelEventArgs>。 ナビゲーションをキャンセルすると、その他のナビゲーション イベントは発生しません。      > [!NOTE] >、アプリケーションがブラウザーでホストされている場合は、Navigating イベントを取り消すと、アプリケーションから移動からユーザーを防ぐことはできません。       コンテンツの最初の部分がナビゲーターによってに移動した後 (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>)、それぞれからコンテンツがナビゲーション履歴に追加されます</xref:System.Windows.Controls.Frame></xref:System.Windows.Navigation.NavigationWindow>。 切り替えを移動するコンテンツに関する状態情報を保存する必要がある場合する状態そのコンテンツのジャーナル エントリを設定して追加できます<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>で、<xref:System.Windows.Navigation.CustomContentState>オブジェクト</xref:System.Windows.Navigation.CustomContentState></xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>。      > [!NOTE] > とき<xref:System.Windows.Navigation.NavigationService>の移動を発生させますもを発生させます<xref:System.Windows.Application.Navigating?displayProperty=fullName>でイベントを<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application></xref:System.Windows.Application.Navigating?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how to handle Navigating to detect whether a request to refresh static content has been made and, if so, to cancel the request.  \n  \n Navigating.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatingcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  id: NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "要求されたコンテンツへの移動中にエラーが発生したときに発生します。"
  remarks: "ときにいずれか、<xref:System.Net.WebException>または<xref:System.IO.IOException>イベントが発生した NavigationFailed、ナビゲーション中にスローされます</xref:System.IO.IOException></xref:System.Net.WebException>。 NavigationFailed が渡される、<xref:System.Windows.Navigation.NavigationFailedEventArgs>例外と例外の原因となったナビゲーションの詳細の両方の情報をカプセル化する</xref:System.Windows.Navigation.NavigationFailedEventArgs>。       この順で、次のイベントが発生した例外は、障害が発生したナビゲーションの結果し、が処理されない、: NavigationFailed です。      -   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName> or <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName></xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.DispatcherUnhandledException>.</xref:System.Windows.Application.DispatcherUnhandledException>       場合、ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) が&1; つ以上のナビゲーターによってホストされる`NavigationFailed`のうちのどれでもは発生しません</xref:System.Windows.Controls.Frame></xref:System.Windows.Navigation.NavigationWindow>。"
  example:
  - "The following example shows how to handle NavigationFailed.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationfailedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;
    return:
      type: System.Windows.Navigation.NavigationFailedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  id: NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "ナビゲーション進行状況に関する情報を提供するダウンロード中に定期的に発生します。"
  remarks: "NavigationProgress が渡される、<xref:System.Windows.Navigation.NavigationProgressEventArgs>次の進行状況に関する情報を公開する:-これまでにダウンロードされたバイト数 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).</xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> </xref:System.Windows.Navigation.NavigationProgressEventArgs>      -の合計バイト数をダウンロードする (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>       NavigationProgress は、コンテンツの 1024 バイトごとにダウンロードされると、し、もう一度残りのバイト数が 1024 バイト未満であることである場合に発生します。 このため、NavigationProgress の処理を追跡し、現在のダウンロードの進行状況を表示する便利な方法を提供します。       場合によっては、コンテンツの同じ部分を移動する場合などとコンテンツ フラグメントへの移動が現在読み込まれているコンテンツに NavigationProgress を発生しません (の値、<xref:System.Windows.Navigation.NavigationService.Content%2A>プロパティ).</xref:System.Windows.Navigation.NavigationService.Content%2A>       コンパイルされた XAML リソースに移動するときに、最終的な NavigationProgress イベントが発生していない可能性があります。 つまり、ダウンロードの最後に、最後に報告している<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>値が等しくない場合があります、<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>値</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A></xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>。 処理、<xref:System.Windows.Navigation.NavigationService.LoadCompleted>ナビゲーションを終えたときに通知するイベントです</xref:System.Windows.Navigation.NavigationService.LoadCompleted>。      > [!NOTE] > とき<xref:System.Windows.Navigation.NavigationService>NavigationProgress を発生させますもを発生させます<xref:System.Windows.Application.NavigationProgress?displayProperty=fullName>でイベントを<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application></xref:System.Windows.Application.NavigationProgress?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how to handle NavigationProgress.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationprogresscode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;
    return:
      type: System.Windows.Navigation.NavigationProgressEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  id: NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "発生したときに、<xref:System.Windows.Navigation.NavigationService.StopLoading*>メソッドを呼び出して、または現在のナビゲーションが進行中は新しいナビゲーションは、要求された場合</xref:System.Windows.Navigation.NavigationService.StopLoading*>。"
  remarks: "ダウンロードを停止すると、ナビゲーション要求に関する情報を確認する必要がある場合は、NavigationStopped を処理します。 この情報は、<xref:System.Windows.Navigation.NavigationEventArgs>オブジェクトを NavigationStopped イベント ハンドラーに渡され、含まれています:-要求された[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</xref:System.Windows.Navigation.NavigationEventArgs>。      -ナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -追加のデータは、ナビゲーションがいずれか<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>または<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>。</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>を呼び出すことによって開始された場合、      > [!NOTE] > とき<xref:System.Windows.Navigation.NavigationService>NavigationStopped を発生させますもを発生させます<xref:System.Windows.Application.NavigationStopped?displayProperty=fullName>でイベントを<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application></xref:System.Windows.Application.NavigationStopped?displayProperty=fullName></xref:System.Windows.Navigation.NavigationService>。"
  example:
  - "The following example shows how to handle NavigationStopped.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;
    return:
      type: System.Windows.Navigation.NavigationStoppedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Refresh
  id: Refresh
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "現在のコンテンツを再読み込みします。"
  remarks: "場合、現在のコンテンツ (の値で指定された、<xref:System.Windows.Navigation.NavigationService.Source%2A>プロパティ)、もう一度への移動が<xref:System.Windows.Navigation.NavigationService>コンテンツが再度ダウンロードしない</xref:System.Windows.Navigation.NavigationService></xref:System.Windows.Navigation.NavigationService.Source%2A>。 強制的に<xref:System.Windows.Navigation.NavigationService>コンテンツに再度移動するには、するには、更新を呼び出します</xref:System.Windows.Navigation.NavigationService>。       注意してください現在のコンテンツへの移動がもう一度、かどうかを呼び出して<xref:System.Windows.Navigation.NavigationService.Navigate%2A>または更新、新しいエントリがナビゲーション履歴に追加されません。</xref:System.Windows.Navigation.NavigationService.Navigate%2A> 。"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  id: RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "バックアップ履歴から最新の履歴エントリを削除します。"
  remarks: "場合は&2; つ以上のナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) 同じナビゲーション履歴情報を共有、1 つのナビゲーターは、RemoveBackEntry を使用して別のナビゲーターで行われたナビゲーションの [戻る] ナビゲーション履歴のエントリを取得することができます</xref:System.Windows.Controls.Frame></xref:System.Windows.Navigation.NavigationWindow>。"
  syntax:
    content: public System.Windows.Navigation.JournalEntry RemoveBackEntry ();
    parameters: []
    return:
      type: System.Windows.Navigation.JournalEntry
      description: "最新<xref href=&quot;System.Windows.Navigation.JournalEntry&quot;> </xref> &quot;戻る&quot;ナビゲーション履歴に&1; つを使用する必要がある場合。"
  overload: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Source
  id: Source
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "取得または設定、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]の現在のコンテンツまたは[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]現在移動先の新しいコンテンツのです。"
  remarks: "別のサーバーに対するこのプロパティを設定する場合[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]よりも、現在表示されているナビゲーター (<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>) を指定した移動[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</xref:System.Windows.Controls.Frame></xref:System.Windows.Navigation.NavigationWindow>。       ソースから読み込まれているコンテンツに設定されて、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]ナビゲーションが取り消された場合を除きに移動します。       フラグメントのみを設定するソース[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]に設定することができます`null`です。"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>を格納している、[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]の現在のコンテンツやコンテンツは現在移動先</xref:System.Uri>。"
  overload: System.Windows.Navigation.NavigationService.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.StopLoading
  id: StopLoading
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "さらに、現在のナビゲーション要求のコンテンツのダウンロードを停止します。"
  remarks: "StopLoading を呼び出すことができる限り早い時点に<xref:System.Windows.Navigation.NavigationService.Navigate%2A>から制御が戻るし、子フレームで進行中のナビゲーションを停止します</xref:System.Windows.Navigation.NavigationService.Navigate%2A>。       (<xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame>       StopLoading メソッド、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>イベント</xref:System.Windows.Navigation.NavigationService.NavigationStopped>。      > [!NOTE] > StopLoading をナビゲーションを開始したのと同じスレッドで呼び出す必要があります。"
  example:
  - "The following example demonstrates how to stop loading.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowstoploadingcode)]"
  syntax:
    content: public void StopLoading ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.StopLoading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
- uid: System.Windows.Navigation.CustomContentState
  parent: System.Windows.Navigation
  isExternal: false
  name: CustomContentState
  nameWithType: CustomContentState
  fullName: System.Windows.Navigation.CustomContentState
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
- uid: System.Windows.Navigation.FragmentNavigationEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: FragmentNavigationEventHandler
  nameWithType: FragmentNavigationEventHandler
  fullName: System.Windows.Navigation.FragmentNavigationEventHandler
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
- uid: System.Windows.Navigation.NavigationService
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Navigation.NavigationService.GoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
- uid: System.Windows.Navigation.NavigationService.GoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
- uid: System.Windows.Navigation.NavigationService.Navigated
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigating
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
- uid: System.Windows.Navigation.NavigationFailedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationFailedEventHandler
  nameWithType: NavigationFailedEventHandler
  fullName: System.Windows.Navigation.NavigationFailedEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
- uid: System.Windows.Navigation.NavigationProgressEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationProgressEventHandler
  nameWithType: NavigationProgressEventHandler
  fullName: System.Windows.Navigation.NavigationProgressEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
- uid: System.Windows.Navigation.NavigationStoppedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationStoppedEventHandler
  nameWithType: NavigationStoppedEventHandler
  fullName: System.Windows.Navigation.NavigationStoppedEventHandler
- uid: System.Windows.Navigation.NavigationService.Refresh
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
- uid: System.Windows.Navigation.JournalEntry
  parent: System.Windows.Navigation
  isExternal: false
  name: JournalEntry
  nameWithType: JournalEntry
  fullName: System.Windows.Navigation.JournalEntry
- uid: System.Windows.Navigation.NavigationService.Source
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
- uid: System.Windows.Navigation.NavigationService.AddBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry
  nameWithType: NavigationService.AddBackEntry
- uid: System.Windows.Navigation.NavigationService.CanGoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
- uid: System.Windows.Navigation.NavigationService.CanGoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
- uid: System.Windows.Navigation.NavigationService.GetNavigationService*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService
  nameWithType: NavigationService.GetNavigationService
- uid: System.Windows.Navigation.NavigationService.GoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack
  nameWithType: NavigationService.GoBack
- uid: System.Windows.Navigation.NavigationService.GoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward
  nameWithType: NavigationService.GoForward
- uid: System.Windows.Navigation.NavigationService.Navigate*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate
  nameWithType: NavigationService.Navigate
- uid: System.Windows.Navigation.NavigationService.Refresh*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh
  nameWithType: NavigationService.Refresh
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry
  nameWithType: NavigationService.RemoveBackEntry
- uid: System.Windows.Navigation.NavigationService.Source*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading
  nameWithType: NavigationService.StopLoading
