### YamlMime:ManagedReference
items:
- uid: System.Net.SocketPermission
  id: SocketPermission
  children:
  - System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  - System.Net.SocketPermission.AcceptList
  - System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  - System.Net.SocketPermission.AllPorts
  - System.Net.SocketPermission.ConnectList
  - System.Net.SocketPermission.Copy
  - System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  - System.Net.SocketPermission.Intersect(System.Security.IPermission)
  - System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.SocketPermission.IsUnrestricted
  - System.Net.SocketPermission.ToXml
  - System.Net.SocketPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SocketPermission
  nameWithType: SocketPermission
  fullName: System.Net.SocketPermission
  type: Class
  summary: "作成およびトランスポート アドレスで接続を受け入れる権限を制御します。"
  remarks: "SocketPermission インスタンス接続を受け入れるかを開始するアクセス許可を制御する<xref:System.Net.Sockets.Socket>接続</xref:System.Net.Sockets.Socket>。 A<xref:System.Net.Sockets.Socket>ホスト名または IP アドレス、ポート番号、およびトランスポート プロトコルに対してアクセス許可を設定できます</xref:System.Net.Sockets.Socket>。      > [!NOTE] > これらの名前を IP アドレスに解決する必要があるし、スタックを妨げる可能性があるこのホスト名を使用して、ソケットのアクセス許可を作成しないでください。"
  example:
  - "The following example demonstrates how to use the SocketPermission class to set, change, and enforce various socket access restrictions.  \n  \n [!code-cs[SocketPermissionExample#1](~/add/codesnippet/csharp/t-system.net.socketpermi_1.cs)]\n [!code-vb[SocketPermissionExample#1](~/add/codesnippet/visualbasic/t-system.net.socketpermi_1.vb)]\n [!code-cpp[SocketPermissionExample#1](~/add/codesnippet/cpp/t-system.net.socketpermi_1.cpp)]"
  syntax:
    content: 'public sealed class SocketPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: SocketPermission(PermissionState)
  nameWithType: SocketPermission.SocketPermission(PermissionState)
  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref> 、 <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>へのアクセスを許可または拒否</xref:System.Net.Sockets.Socket>に無制限にアクセスできるようにするクラス"
  remarks: "場合、<xref:System.Net.SocketPermission>でインスタンスが作成、`Unrestricted`値から<xref:System.Security.Permissions.PermissionState>、<xref:System.Net.SocketPermission>インスタンスは、すべての要求を渡します</xref:System.Net.SocketPermission></xref:System.Security.Permissions.PermissionState></xref:System.Net.SocketPermission>。 その他の値の`state`<xref:System.Net.SocketPermission><xref:System.Net.SocketPermission.AddPermission%2A></xref:System.Net.SocketPermission.AddPermission%2A>トランスポート アドレスのアクセス許可を追加しない限り、すべての要求に失敗したインスタンス</xref:System.Net.SocketPermission>の結果。"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Security.Permissions.PermissionState> enumerated value.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/0407ee1f-774e-4447-a7b4-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/0407ee1f-774e-4447-a7b4-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/0407ee1f-774e-4447-a7b4-_1.cs)]"
  syntax:
    content: public SocketPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Net.SocketPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  id: '#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)'
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: SocketPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>指定した権限を持つ指定したトランスポート アドレスのクラスです。"
  remarks: "このコンス トラクターを作成、<xref:System.Net.SocketPermission>を指定したアクセスを制御する`hostName`と`portNumber`指定して`transport`</xref:System.Net.SocketPermission>。       `hostName` DNS 名、IP アドレス、または 192.168.1.* など、指定された IP サブネットを指定できます。       `portNumber`任意の有効なポート番号は、トランスポート、または<xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>.</xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>によって"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Net.NetworkAccess> enumerated value, a <xref:System.Net.TransportType> enumerated value, the hostname, and the port number.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/1e71f379-a56e-49d8-98b6-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/1e71f379-a56e-49d8-98b6-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/1e71f379-a56e-49d8-98b6-_1.cs)]"
  syntax:
    content: public SocketPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "1 つ、 <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>値。"
    - id: transport
      type: System.Net.TransportType
      description: "1 つ、 <xref href=&quot;System.Net.TransportType&quot;> </xref>値。"
    - id: hostName
      type: System.String
      description: "トランスポート アドレスのホスト名。"
    - id: portNumber
      type: System.Int32
      description: "トランスポート アドレスのポート番号。"
  overload: System.Net.SocketPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.SocketPermission.AcceptList
  id: AcceptList
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
  fullName: System.Net.SocketPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "一覧を取得<xref href=&quot;System.Net.EndpointPermission&quot;></xref>権限このインスタンス下で許可されるエンドポイントを識別するインスタンス。"
  remarks: ''
  example:
  - "The following example uses the AcceptList property to return a list of endpoints to which accept privileges are granted.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/p-system.net.socketpermi_1_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/p-system.net.socketpermi_1_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/p-system.net.socketpermi_1_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "実装するインスタンス、<xref:System.Collections.IEnumerator>を含むインターフェイス<xref href=&quot;System.Net.EndpointPermission&quot;></xref>インスタンス</xref:System.Collections.IEnumerator>。"
  overload: System.Net.SocketPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  id: AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "トランスポートのアドレスに対する権限のセットにアクセス許可を追加します。"
  remarks: "`hostName` DNS 名、IP アドレス、または 192.168.1.* など、指定された IP サブネットを指定できます。"
  example:
  - "The following example uses the AddPermission method to add connection permissions to the specified host.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/d5f881e9-ca35-4558-976c-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/d5f881e9-ca35-4558-976c-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/d5f881e9-ca35-4558-976c-_1.cs)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "1 つ、 <xref href=&quot;System.Net.NetworkAccess&quot;> </xref>値。"
    - id: transport
      type: System.Net.TransportType
      description: "1 つ、 <xref href=&quot;System.Net.TransportType&quot;> </xref>値。"
    - id: hostName
      type: System.String
      description: "トランスポート アドレスのホスト名。"
    - id: portNumber
      type: System.Int32
      description: "トランスポート アドレスのポート番号。"
  overload: System.Net.SocketPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.SocketPermission.AllPorts
  id: AllPorts
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AllPorts
  nameWithType: SocketPermission.AllPorts
  fullName: System.Net.SocketPermission.AllPorts
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "すべてのポートを表す定数を定義します。"
  remarks: "このフィールドは、読み取り専用です。 このフィールドの値は-1 です。"
  example:
  - "The following example uses the AllPorts property to provide connection permissions to all of the resources ports.  \n  \n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/f-system.net.socketpermi_1.cpp)]\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/f-system.net.socketpermi_1.vb)]\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/f-system.net.socketpermi_1.cs)]"
  syntax:
    content: public const int AllPorts = -1;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.ConnectList
  id: ConnectList
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
  fullName: System.Net.SocketPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "一覧を取得<xref href=&quot;System.Net.EndpointPermission&quot;></xref>を下にあるこのアクセス許可のインスタンスに接続できるエンドポイントを識別するインスタンス。"
  remarks: ''
  example:
  - "The following example uses the ConnectList property to return a list of endpoints to which connection privileges are granted.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/p-system.net.socketpermi_0_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/p-system.net.socketpermi_0_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/p-system.net.socketpermi_0_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "実装するインスタンス、<xref:System.Collections.IEnumerator>を含むインターフェイス<xref href=&quot;System.Net.EndpointPermission&quot;></xref>インスタンス</xref:System.Collections.IEnumerator>。"
  overload: System.Net.SocketPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.Copy
  id: Copy
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SocketPermission.Copy()
  fullName: System.Net.SocketPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "コピーを作成、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>インスタンス。"
  remarks: "このメソッドによって返されるオブジェクトでは、現在のインスタンスと同じレベルのアクセスを表します。 このメソッドは<xref:System.Security.CodeAccessPermission.Copy%2A>サポートするために実装されると、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission></xref:System.Security.CodeAccessPermission.Copy%2A>。"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> by taking a copy of an existing <xref:System.Net.SocketPermission>.  \n  \n [!code-cs[SocketPermissionExample#4](~/add/codesnippet/csharp/m-system.net.socketpermi_2_1.cs)]\n [!code-vb[SocketPermissionExample#4](~/add/codesnippet/visualbasic/m-system.net.socketpermi_2_1.vb)]\n [!code-cpp[SocketPermissionExample#4](~/add/codesnippet/cpp/m-system.net.socketpermi_2_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "新しいインスタンス、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>現在のインスタンスのコピーであるクラスです。"
  overload: System.Net.SocketPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SocketPermission.FromXml(SecurityElement)
  fullName: System.Net.SocketPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "再構築、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref> XML エンコーディング用のインスタンス。"
  remarks: "FromXml メソッドが<xref:System.Net.SocketPermission><xref:System.Security.SecurityElement>クラス</xref:System.Security.SecurityElement>によって定義された XML エンコードからのインスタンス</xref:System.Net.SocketPermission>を再構築します。       使用して、<xref:System.Net.SocketPermission.ToXml%2A>のエンコード方法、<xref:System.Net.SocketPermission>を XML で、状態情報を含むインスタンス</xref:System.Net.SocketPermission></xref:System.Net.SocketPermission.ToXml%2A>。"
  example:
  - "The following example uses the FromXml method to convert XML encoded data to a <xref:System.Net.SocketPermission> instance.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_6_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_6_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_6_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "再構築に使用する XML エンコード、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>インスタンス。"
  overload: System.Net.SocketPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>securityElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> securityElement </code>この種類のアクセス許可要素ではありません。"
  platform:
  - net462
- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SocketPermission.Intersect(IPermission)
  fullName: System.Net.SocketPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "2 つの論理積を返します<xref href=&quot;System.Net.SocketPermission&quot;></xref>インスタンス。"
  remarks: "2 つのアクセス許可の積集合は、リソースと両方のアクセス許可によって保護されている操作を保護するアクセス許可がします。 具体的には、両方のアクセス許可に適合するすべての要求では、それぞれの積集合もが成功するように、最小限のアクセス許可を表します。 このメソッドは<xref:System.Security.CodeAccessPermission.Intersect%2A>サポートするために実装されると、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission></xref:System.Security.CodeAccessPermission.Intersect%2A>。"
  example:
  - "The following example uses the Intersect method to obtain a logical intersection between two <xref:System.Net.SocketPermission> instances.  \n  \n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_0_1.cpp)]\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_0_1.vb)]\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref>現在のインスタンスと交差するインスタンス。"
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref>を&2; つの交差部分を表すインスタンス<xref href=&quot;System.Net.SocketPermission&quot;></xref>インスタンス。 このメソッドを返しますの積集合が空<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 場合、 <code> target </code>パラメーターが null 参照の場合、メソッドが返されます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.SocketPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not a <xref href=&quot;System.Net.SocketPermission&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref href=&quot;System.Net.DnsPermission&quot;></xref>メソッドの呼び出し元に付与されていません。"
  platform:
  - net462
- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SocketPermission.IsSubsetOf(IPermission)
  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。"
  remarks: "現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。       たとえば、192.168.1.1:80 へのアクセスを表すアクセス許可は、192.168.1.1:Any へのアクセスを表すアクセス許可のサブセットです。 このメソッドが戻る場合`true`、現在のアクセス許可は、アクセスは保護されたリソースには、指定した権限を表します。"
  example:
  - "The following example uses the IsSubsetOf method to determine if one <xref:System.Net.SocketPermission> is the subset of another.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_5_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_5_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_5_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.SocketPermission&quot;> </xref>サブセットの関係をテストすることができます。"
    return:
      type: System.Boolean
      description: "場合<code> target </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> ; のアクセス許可を定義する、現在のインスタンスがいない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<code> target </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、現在のインスタンスのサブセットを定義する<code> target </code>アクセス許可、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.SocketPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref:System.Net.Sockets.SocketException>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref href=&quot;System.Net.DnsPermission&quot;></xref>メソッドの呼び出し元に付与されていません。"
  platform:
  - net462
- uid: System.Net.SocketPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: SocketPermission.IsUnrestricted()
  fullName: System.Net.SocketPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "オブジェクトの全体的なアクセス許可の状態を確認します。"
  remarks: ''
  example:
  - "The following example checks the IsUnrestricted property to determine if the specified <xref:System.Net.SocketPermission> has any restrictions.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_4_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_4_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_4_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>でインスタンスが作成、 <xref uid=&quot;langword_csharp_Unrestricted&quot; name=&quot;Unrestricted&quot; href=&quot;&quot;> </xref>値から<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.SocketPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.ToXml
  id: ToXml
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SocketPermission.ToXml()
  fullName: System.Net.SocketPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "XML エンコードを作成、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>インスタンスと、現在の状態。"
  remarks: "ToXml メソッドを作成、<xref:System.Security.SecurityElement>の表現をエンコードするインスタンス、<xref:System.Net.SocketPermission>を XML で、状態情報を含むインスタンス</xref:System.Net.SocketPermission></xref:System.Security.SecurityElement>。       使用して、<xref:System.Net.SocketPermission.FromXml%2A>から状態情報を復元する方法、<xref:System.Security.SecurityElement>インスタンス</xref:System.Security.SecurityElement></xref:System.Net.SocketPermission.FromXml%2A>。"
  example:
  - "The following example uses the ToXml method to convert a <xref:System.Net.SocketPermission> to XML.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_1_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_1_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_1_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>インスタンスの XML でエンコードされた表現を含む、 <xref href=&quot;System.Net.SocketPermission&quot;> </xref>状態情報を含むインスタンス。"
  overload: System.Net.SocketPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SocketPermission.Union(IPermission)
  fullName: System.Net.SocketPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "2 つの論理的な和集合を返します<xref href=&quot;System.Net.SocketPermission&quot;></xref>インスタンス。"
  remarks: "共用体への呼び出しの結果はすべてへのアクセスを表す権限<xref:System.Net.Sockets.Socket>によって表される、アクセスと同様に、現在のインスタンスによって表される接続`target`</xref:System.Net.Sockets.Socket>。 現在のいずれかのインスタンスに適合する要求または`target`共用体を渡します。 このメソッドは<xref:System.Security.CodeAccessPermission.Union%2A>サポートするために実装されると、<xref:System.Security.IPermission>インターフェイス</xref:System.Security.IPermission></xref:System.Security.CodeAccessPermission.Union%2A>。"
  example:
  - "The following example uses the Union method to return the logical union of two existing <xref:System.Net.SocketPermission> instances.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_3_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_3_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_3_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref>インスタンスを現在のインスタンスに結合します。"
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref>&2; つの和集合を表すインスタンス<xref href=&quot;System.Net.SocketPermission&quot;></xref>インスタンス。 場合<code> target </code>パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、現在のインスタンスのコピーを返します。"
  overload: System.Net.SocketPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>is not a <xref href=&quot;System.Net.SocketPermission&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission(PermissionState)
  nameWithType: SocketPermission.SocketPermission(PermissionState)
  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.Net.TransportType
  parent: System.Net
  isExternal: false
  name: TransportType
  nameWithType: TransportType
  fullName: System.Net.TransportType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.SocketPermission.AcceptList
  parent: System.Net.SocketPermission
  isExternal: false
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
  fullName: System.Net.SocketPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  isExternal: false
  name: AddPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
- uid: System.Net.SocketPermission.AllPorts
  parent: System.Net.SocketPermission
  isExternal: false
  name: AllPorts
  nameWithType: SocketPermission.AllPorts
  fullName: System.Net.SocketPermission.AllPorts
- uid: System.Net.SocketPermission.ConnectList
  parent: System.Net.SocketPermission
  isExternal: false
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
  fullName: System.Net.SocketPermission.ConnectList
- uid: System.Net.SocketPermission.Copy
  parent: System.Net.SocketPermission
  isExternal: false
  name: Copy()
  nameWithType: SocketPermission.Copy()
  fullName: System.Net.SocketPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.SocketPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SocketPermission.FromXml(SecurityElement)
  fullName: System.Net.SocketPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SocketPermission.Intersect(IPermission)
  fullName: System.Net.SocketPermission.Intersect(IPermission)
- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SocketPermission.IsSubsetOf(IPermission)
  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.SocketPermission.IsUnrestricted
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: SocketPermission.IsUnrestricted()
  fullName: System.Net.SocketPermission.IsUnrestricted()
- uid: System.Net.SocketPermission.ToXml
  parent: System.Net.SocketPermission
  isExternal: false
  name: ToXml()
  nameWithType: SocketPermission.ToXml()
  fullName: System.Net.SocketPermission.ToXml()
- uid: System.Net.SocketPermission.Union(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SocketPermission.Union(IPermission)
  fullName: System.Net.SocketPermission.Union(IPermission)
- uid: System.Net.SocketPermission.#ctor*
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission
  nameWithType: SocketPermission.SocketPermission
- uid: System.Net.SocketPermission.AcceptList*
  parent: System.Net.SocketPermission
  isExternal: false
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
- uid: System.Net.SocketPermission.AddPermission*
  parent: System.Net.SocketPermission
  isExternal: false
  name: AddPermission
  nameWithType: SocketPermission.AddPermission
- uid: System.Net.SocketPermission.ConnectList*
  parent: System.Net.SocketPermission
  isExternal: false
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
- uid: System.Net.SocketPermission.Copy*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Copy
  nameWithType: SocketPermission.Copy
- uid: System.Net.SocketPermission.FromXml*
  parent: System.Net.SocketPermission
  isExternal: false
  name: FromXml
  nameWithType: SocketPermission.FromXml
- uid: System.Net.SocketPermission.Intersect*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Intersect
  nameWithType: SocketPermission.Intersect
- uid: System.Net.SocketPermission.IsSubsetOf*
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SocketPermission.IsSubsetOf
- uid: System.Net.SocketPermission.IsUnrestricted*
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: SocketPermission.IsUnrestricted
- uid: System.Net.SocketPermission.ToXml*
  parent: System.Net.SocketPermission
  isExternal: false
  name: ToXml
  nameWithType: SocketPermission.ToXml
- uid: System.Net.SocketPermission.Union*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Union
  nameWithType: SocketPermission.Union
