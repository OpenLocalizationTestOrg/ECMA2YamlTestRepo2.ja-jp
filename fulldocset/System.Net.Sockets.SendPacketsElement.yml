### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SendPacketsElement
  id: SendPacketsElement
  children:
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.Buffer
  - System.Net.Sockets.SendPacketsElement.Count
  - System.Net.Sockets.SendPacketsElement.EndOfPacket
  - System.Net.Sockets.SendPacketsElement.FilePath
  - System.Net.Sockets.SendPacketsElement.Offset
  langs:
  - csharp
  name: SendPacketsElement
  nameWithType: SendPacketsElement
  fullName: System.Net.Sockets.SendPacketsElement
  type: Class
  summary: "SendPacketsElement 配列内の要素を表します。"
  remarks: "SendPacketsElement クラスが強化するために使用される、<xref:System.Net.Sockets.Socket>最高のパフォーマンスを実現するために非同期のネットワーク I/O を使用するサーバー アプリケーションで使用されるクラス</xref:System.Net.Sockets.Socket>。 SendPacketsElement クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>。"
  syntax:
    content: public class SendPacketsElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスの指定されたバッファーを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>データのバイト配列を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。"
  syntax:
    content: public SendPacketsElement (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "使用して送信するデータのバイト配列、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buffer </code>パラメーターを null にすることはできません"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラス、指定したファイルを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>ファイルのファイル名を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。       汎用名前付け規則 (UNC) パスがサポートされている、`filepath`パラメーター。 ファイルが現在の作業ディレクトリ内にある場合は、パス情報なしを指定する必要です。"
  syntax:
    content: public SendPacketsElement (string filepath);
    parameters:
    - id: filepath
      type: System.String
      description: "使用して転送するファイルのファイル名、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> filepath </code>パラメーターを null にすることはできません"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスの指定されたバッファー、バッファー オフセットおよびカウントを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>データのバイト配列を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。"
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "使用して送信するデータのバイト配列、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`内の場所に、`buffer`で指定されるデータの送信を開始する、`buffer`パラメーター。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`offset`パラメーター。 場合`count`0 の場合は、バイト数は送信されません。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buffer </code>パラメーターを null にすることはできません"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code>と<code> count </code>パラメーターが&0; 以上にする必要があります。       <code> offset </code>と<code> count </code>バッファーのサイズより小さくなければなりません"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラス ファイル名の指定したパス、オフセット、およびカウントを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>ファイルのファイル名を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。       汎用名前付け規則 (UNC) パスがサポートされている、`filepath`パラメーター。 ファイルが現在の作業ディレクトリ内にある場合は、パス情報なしを指定する必要です。"
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count);
    parameters:
    - id: filepath
      type: System.String
      description: "使用して転送するファイルのファイル名、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
    - id: offset
      type: System.Int32
      description: "指定されたファイルの送信を開始するファイル内の場所にファイルの先頭からのバイト単位のオフセット、`filepath`パラメーター。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`offset`パラメーター。 場合`count`0 の場合は、ファイル全体を送信します。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> filepath </code>パラメーターを null にすることはできません"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code>と<code> count </code>パラメーターが&0; 以上にする必要があります。       <code> offset </code>と<code> count </code>で指定されたファイルのサイズより小さくする必要があります、 <code> filepath </code>パラメーター。"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスな sockets 層から、トランスポートへの単一の送信要求の次の要素を持つには、この要素を結合するオプションを使用して、指定されたバッファー、バッファー オフセットとカウントを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>データのバイト配列を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。"
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "使用して送信するデータのバイト配列、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`内の場所に、`buffer`で指定されるデータの送信を開始する、`buffer`パラメーター。"
    - id: count
      type: System.Int32
      description: "送信するバイト数です、`offset`パラメーター。 場合`count`0 の場合は、バイト数は送信されません。"
    - id: endOfPacket
      type: System.Boolean
      description: "この要素が&1; つの次の要素と組み合わされていない必要がありますを指定するブール値は、トランスポートにソケット レイヤーからの要求を送信します。 このフラグは、データグラムまたはメッセージ指向のソケット上の各メッセージの内容の詳細に制御に使用されます。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> buffer </code>パラメーターを null にすることはできません"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code>と<code> count </code>パラメーターが&0; 以上にする必要があります。       <code> offset </code>と<code> count </code>バッファーのサイズより小さくなければなりません"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスな sockets 層から、トランスポートへの単一の送信要求の次の要素を持つには、この要素を結合するオプションを使用して、指定したファイル名パス、バッファー オフセットとカウントを使用します。"
  remarks: "SendPacketsElement コンス トラクターは、の新しいインスタンスを初期化、<xref:System.Net.Sockets.SendPacketsElement>ファイルのファイル名を持つクラス</xref:System.Net.Sockets.SendPacketsElement>。 <xref:System.Net.Sockets.SendPacketsElement>クラスが使用されて、<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName>を取得または送信されるファイルまたはデータ バッファーを設定するプロパティを使用して、<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName></xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName></xref:System.Net.Sockets.SendPacketsElement>。       汎用名前付け規則 (UNC) パスがサポートされている、`filepath`パラメーター。 ファイルが現在の作業ディレクトリ内にある場合は、パス情報なしを指定する必要です。"
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);
    parameters:
    - id: filepath
      type: System.String
      description: "使用して転送するファイルのファイル名、 &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt;メソッドです。"
    - id: offset
      type: System.Int32
      description: "指定されたファイルの送信を開始するファイル内の場所にファイルの先頭からのバイト単位のオフセット、`filepath`パラメーター。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`offset`パラメーター。 場合`count`0 の場合は、ファイル全体を送信します。"
    - id: endOfPacket
      type: System.Boolean
      description: "この要素が&1; つの次の要素と組み合わされていない必要がありますを指定するブール値は、トランスポートにソケット レイヤーからの要求を送信します。 このフラグは、データグラムまたはメッセージ指向のソケット上の各メッセージの内容の詳細に制御に使用されます。"
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> filepath </code>パラメーターを null にすることはできません"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code>と<code> count </code>パラメーターが&0; 以上にする必要があります。       <code> offset </code>と<code> count </code>で指定されたファイルのサイズより小さくする必要があります、 <code> filepath </code>パラメーター。"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  id: Buffer
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "場合に送信するバッファーを取得、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスが初期化されましたが、 <code> buffer </code>パラメーター。"
  remarks: "バッファーのプロパティの既定値には長さ&0; の配列がある場合、<xref:System.Net.Sockets.SendPacketsElement>使用クラスが初期化されていない、`buffer`パラメーター</xref:System.Net.Sockets.SendPacketsElement> 。"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "場合に送信するバイトのバッファー、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスが初期化されましたが、 <code> buffer </code>パラメーター。"
  overload: System.Net.Sockets.SendPacketsElement.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Count
  id: Count
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "送信するバイト数を取得します。"
  remarks: "Count プロパティの既定値の場合は&0;、<xref:System.Net.Sockets.SendPacketsElement>使用クラスが初期化されていない、`count`パラメーター</xref:System.Net.Sockets.SendPacketsElement> 。       カウントが、ファイルのゼロの場合は、ファイル全体が送信されます。 カウントが&0;、バッファーのバイト数は送信されません。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "場合に送信するバイト数、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスが初期化されましたが、 <code> count </code>パラメーター。"
  overload: System.Net.Sockets.SendPacketsElement.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  id: EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "この要素をトランスポートにソケット レイヤーから単一の送信要求の次の要素と組み合わせることはできないかどうかを示すブール値を取得します。"
  remarks: "EndOfPacket プロパティの既定値が false 場合、<xref:System.Net.Sockets.SendPacketsElement>使用クラスが初期化されていない、`endOfPacket`パラメーターが true に設定します</xref:System.Net.Sockets.SendPacketsElement>。"
  syntax:
    content: public bool EndOfPacket { get; }
    return:
      type: System.Boolean
      description: "この要素を単一の次の要素と組み合わせることはできないかどうかを示すブール値では、要求を送信します。"
  overload: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  id: FilePath
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "場合に送信するファイルのファイル名を取得、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスが初期化されましたが、 <code> filepath </code>パラメーター。"
  remarks: "FilePath プロパティによって、汎用名前付け規則 (UNC) パスがサポートされます。 ファイルが現在の作業ディレクトリ内にある場合は、パス情報なしを指定する必要です。       FilePath プロパティの既定値には、空の文字列がある場合、<xref:System.Net.Sockets.SendPacketsElement>使用クラスが初期化されていない、`filepath`パラメーター</xref:System.Net.Sockets.SendPacketsElement> 。"
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "場合に送信するファイルのファイル名、 <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;> </xref>クラスが初期化されましたが、 <code> filepath </code>パラメーター。"
  overload: System.Net.Sockets.SendPacketsElement.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Offset
  id: Offset
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "(バイト単位) でバッファーまたはファイル内のデータの送信を開始する場所にファイルをデータ バッファーの先頭からのオフセットを取得します。"
  remarks: "オフセット プロパティの既定値の場合は&0;、<xref:System.Net.Sockets.SendPacketsElement>使用クラスが初期化されていない、`offset`パラメーター</xref:System.Net.Sockets.SendPacketsElement> 。"
  syntax:
    content: public int Offset { get; }
    return:
      type: System.Int32
      description: "バッファーまたはファイル内のデータの送信を開始する場所にファイルをデータ バッファーの先頭からのバイト オフセット。"
  overload: System.Net.Sockets.SendPacketsElement.Offset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
- uid: System.Net.Sockets.SendPacketsElement.#ctor*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement
  nameWithType: SendPacketsElement.SendPacketsElement
- uid: System.Net.Sockets.SendPacketsElement.Buffer*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
