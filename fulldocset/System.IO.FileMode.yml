### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "オペレーティング システムがファイルを開く方法を指定します。"
  remarks: "ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[する方法: テキスト ファイルを書き込む](~/add/includes/ajax-current-ext-md.md)です。 ファイルからテキストの読み取りの例は、次を参照してください。[する方法: テキスト ファイルからの読み取り](~/add/includes/ajax-current-ext-md.md)です。 読み取りと書き込み、バイナリ ファイルの例は、次を参照してください。[する方法: 新しく作成されたデータ ファイルに読み書き](~/add/includes/ajax-current-ext-md.md)です。       A`FileMode`多くのコンス トラクターのパラメーターが指定されて<xref:System.IO.FileStream>、 <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>、し、、`Open`方法<xref:System.IO.File>と<xref:System.IO.FileInfo>ファイルを開く方法を制御する</xref:System.IO.FileInfo></xref:System.IO.File></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream></xref:System.IO.FileStream>。       `FileMode`パラメーター コントロール、ファイルを上書きすると、作成するかどうかを開く、またはその組み合わせです。 使用して`Open`を既存のファイルを開きます。 ファイルへの追加を使用して`Append`です。 ファイルの切り捨てが存在しない場合、ファイルの作成を使用してまたは`Create`です。"
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "存在して、ファイルの末尾にシークまたは新しいファイルを作成する場合は、ファイルを開きます。 これは、必要があります&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt;権限です。 <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>組み合わせてのみ使用できます<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;></xref>です。 ファイルがスローされますが終わる前に位置をシークしようとして、<xref:System.IO.IOException>例外、および読み取りが失敗してスローするあらゆる試み、<xref:System.NotSupportedException>例外です</xref:System.NotSupportedException></xref:System.IO.IOException>。"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "オペレーティング システムが新しいファイルを作成する必要がありますを指定します。 ファイルが既に存在する場合は上書きされます。 これは、必要があります&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;権限です。 <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>ファイルが存在しない場合を使用する CreateNew; の要求に相当それ以外の場合、切り捨てを使用します。 ファイルは既に存在しますが、隠しファイルである場合、<xref:System.UnauthorizedAccessException>例外がスローされます</xref:System.UnauthorizedAccessException>。"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "オペレーティング システムが新しいファイルを作成する必要がありますを指定します。 これは、必要があります&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;権限です。 ファイルが既に存在する場合、<xref:System.IO.IOException>例外がスローされます</xref:System.IO.IOException>。"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "オペレーティング システムが、既存のファイルを開く必要がありますを指定します。 ファイルを開くことがで指定された値に依存する、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>列挙します。 A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt;ファイルが存在しない場合、例外がスローされます。"
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "存在する場合、オペレーティング システムがファイルを開くことを指定しますそれ以外の場合、新しいファイルを作成する必要があります。 ファイルが開かれている場合<xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>、 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;アクセス許可が必要です。 ファイルへのアクセス場合<xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>、 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;アクセス許可が必要です。 ファイルが開かれている場合<xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;></xref>の両方を&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt;と&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;アクセス許可が必要です。"
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "オペレーティング システムが、既存のファイルを開く必要がありますを指定します。 ファイルが開かれたときに、サイズがゼロ バイトように切り捨てる必要があります。 これは、必要があります&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt;権限です。 ファイルからの読み取りに使用して開いた<xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;></xref>が発生する、<xref:System.ArgumentException>例外です</xref:System.ArgumentException>。"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
