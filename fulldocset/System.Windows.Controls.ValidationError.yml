### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "表す、検証エラーは、バインドによって作成される場合にエンジン、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> 、検証エラーを報告または、<xref:System.Windows.Controls.Validation.MarkInvalid*>メソッドに明示的にします</xref:System.Windows.Controls.Validation.MarkInvalid*>。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルで検証規則を関連付けることができます、<xref:System.Windows.Data.Binding>オブジェクト</xref:System.Windows.Data.Binding>。 コンバーターが呼び出される前に、ターゲットからソース値の転送中に検証が行われます。 次の例は、検証プロセスを説明します。      1.  値は、転送中、ターゲット プロパティからプロパティのソースとでデータ バインディング エンジンに追加された任意の ValidationError が最初に削除されます、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>添付プロパティのバインド要素</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>。 その<xref:System.Windows.Data.Binding><xref:System.Windows.Controls.ValidationRule.Validate%2A>各<xref:System.Windows.Controls.ValidationRule>パスはすべてのまで、またはそれらのいずれかが失敗するまで</xref:System.Windows.Controls.ValidationRule>のメソッド</xref:System.Windows.Controls.ValidationRule.Validate%2A>を呼び出す場合、</xref:System.Windows.Data.Binding>カスタム検証ルールを定義するかどうかがチェックされます。      2.  バインディング エンジンが ValidationError オブジェクトを作成しに追加をパスしないカスタム ルールがあると、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>バインドされている要素のコレクション</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>。 ときに<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>は空でなく、<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>接続されている要素のプロパティが`true`</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName></xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>。 また場合、<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>のプロパティ、<xref:System.Windows.Data.Binding>に設定されている`true`、バインディング エンジンが発生し、<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>添付要素のイベント</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName></xref:System.Windows.Data.Binding></xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>。      3.  すべてのルールに合格した場合、バインド エンジンを呼び出しますコンバーターが存在する場合。      4.  コンバーターが成功した場合、バインディング エンジンは、基になるプロパティの set アクセス操作子を呼び出します。      5.  バインディングの場合、<xref:System.Windows.Controls.ExceptionValidationRule>関連付けられているし、手順 3 または 4 の間に例外がスローされた、 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>がないかどうかを確認、バインド エンジン</xref:System.Windows.Controls.ExceptionValidationRule> 使用することができます、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>例外を処理するためのカスタム ハンドラーを提供するコールバック</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>。 場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>が指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンが例外に、ValidationError を作成しを追加、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>バインドされている要素のコレクション</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName></xref:System.Windows.Data.Binding></xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>。       どちらの方向 (ソースまたはターゲットをソースにターゲット) に有効な値の転送がクリアされます、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>添付プロパティ</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>。"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>指定されたパラメーターを持つクラス。"
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "検証エラーを検出するルール。"
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>または<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>妥当性確認エラーを持つオブジェクト。"
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>指定されたパラメーターを持つクラス。"
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "検証エラーを検出するルール。"
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>または<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>妥当性確認エラーを持つオブジェクト。"
    - id: errorContent
      type: System.Object
      description: "エラーに関する情報です。"
    - id: exception
      type: System.Exception
      description: "検証エラーの原因となった例外。 このパラメーターは省略可能でありに設定することができます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. オブジェクト無効か、マークされた明示的にまたは失敗した検証規則がします。"
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "この追加のコンテキストを提供するオブジェクトを取得または<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>エラーを説明する文字列など。"
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a>## 例については、セクションの例では、XAML テキストの使用方法を参照してください。"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "この追加のコンテキストを提供するオブジェクト<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>です。"
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定、<xref:System.Exception>この問題の原因となったオブジェクト<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>エラー例外の結果である場合は、</xref:System.Exception> 。"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>オブジェクト、エラーが例外の結果である場合</xref:System.Exception>。"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>この問題の原因となったオブジェクト<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>エラーが、検証規則の結果である場合、します。"
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "<xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>オブジェクト、エラーが、検証規則の結果である場合。"
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
