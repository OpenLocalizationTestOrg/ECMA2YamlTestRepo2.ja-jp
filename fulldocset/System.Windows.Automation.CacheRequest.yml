### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.CacheRequest
  id: CacheRequest
  children:
  - System.Windows.Automation.CacheRequest.#ctor
  - System.Windows.Automation.CacheRequest.Activate
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.CacheRequest.AutomationElementMode
  - System.Windows.Automation.CacheRequest.Clone
  - System.Windows.Automation.CacheRequest.Current
  - System.Windows.Automation.CacheRequest.Pop
  - System.Windows.Automation.CacheRequest.Push
  - System.Windows.Automation.CacheRequest.TreeFilter
  - System.Windows.Automation.CacheRequest.TreeScope
  langs:
  - csharp
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
  type: Class
  summary: "プロパティを指定し、パターンを[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]framework キャッシュ時に、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>を取得します。"
  remarks: "プロパティとパターンを取得する[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]パフォーマンスが低速化できる、プロセス間呼び出しが必要です。 バッチ操作でプロパティおよびパターンの値をキャッシュすることによって、アプリケーションのパフォーマンスを強化できます。       クラスのコンス トラクターを呼び出すことによって、新しいキャッシュ要求を作成します。 繰り返し呼び出すは、要求が表示されます、<xref:System.Windows.Automation.CacheRequest.Add%2A>メソッド</xref:System.Windows.Automation.CacheRequest.Add%2A>。       1 つの CacheRequest のみをアクティブにできます。 要求をアクティブ化する&2; つの方法があります:-呼び出し<xref:System.Windows.Automation.CacheRequest.Activate%2A>要求でします</xref:System.Windows.Automation.CacheRequest.Activate%2A>。 要求をスタックにプッシュし、オブジェクトが破棄されるときに、要求がポップされます。 確実に破棄、例外が発生した場合でもからの戻り値を使用して<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using`で[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]).</xref:System.Windows.Automation.CacheRequest.Activate%2A>      -要求、スタックに入れた内部<xref:System.Windows.Automation.CacheRequest.Push%2A>。</xref:System.Windows.Automation.CacheRequest.Push%2A>を呼び出すことによって スタックの最上位の要求のみがアクティブであり、 <xref:System.Windows.Automation.CacheRequest.Pop%2A>。</xref:System.Windows.Automation.CacheRequest.Pop%2A>によってスタックから削除された次のいずれかをする必要があります。 要求はポップ非アクティブにします。       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]要求がアクティブな状態を取得した要素には、プロパティとパターンが指定の値がキャッシュがされます。"
  example:
  - "The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]  \n  \n The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public sealed class CacheRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.#ctor
  id: '#ctor'
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
  type: Constructor
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>クラスです。"
  remarks: "ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty></xref:System.Windows.Automation.CacheRequest>。"
  syntax:
    content: public CacheRequest ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Activate
  id: Activate
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "この設定<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>ときに返される項目のアクティブな仕様として、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>が同じスレッドで要求します。"
  remarks: "このメソッドを使用して<xref:System.Windows.Automation.CacheRequest.Push%2A><xref:System.Windows.Automation.CacheRequest.Pop%2A><xref:System.Windows.Automation.CacheRequest>。</xref:System.Windows.Automation.CacheRequest>をアクティブ化するための手段として</xref:System.Windows.Automation.CacheRequest.Pop%2A></xref:System.Windows.Automation.CacheRequest.Push%2A>使用する方が便利 アクティブ化が呼び出され、破棄されるときにポップときに、オブジェクトはスタックにプッシュします。 確実に破棄、配置内で戻り値、`using`ブロック (`Using`で[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])。"
  example:
  - "The following example shows how to use Activate to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public IDisposable Activate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "破棄するために使用できるオブジェクト、 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>です。"
  overload: System.Windows.Automation.CacheRequest.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  id: Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指定した追加<xref href=&quot;System.Windows.Automation.AutomationPattern&quot;></xref>識別子をこの<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>です。"
  remarks: "キャッシュ要求に既にあるパターンを追加しても効果はありません。"
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "キャッシュへのパターンを指定する識別子です。"
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>がアクティブです。"
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  id: Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指定した追加<xref href=&quot;System.Windows.Automation.AutomationProperty&quot;></xref>識別子をこの<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>です。"
  remarks: "ときに、<xref:System.Windows.Automation.CacheRequest>が作成される、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>識別子は、既定のプロパティとしてキャッシュに追加されます</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty></xref:System.Windows.Automation.CacheRequest>。       キャッシュ要求に既にあるプロパティを追加しても効果はありません。"
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "キャッシュするプロパティ値を指定する識別子。"
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>がアクティブです。"
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  id: AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "返される要素が、基になる完全参照を含めるかどうかを指定する値の設定を取得または[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]、またはキャッシュされた情報だけです。"
  remarks: "<xref:System.Windows.Automation.AutomationElementMode>既定値は、返される要素が、基になる完全参照を含むことを指定[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]です。</xref:System.Windows.Automation.AutomationElementMode> <xref:System.Windows.Automation.AutomationElementMode>返される要素に、基になるへの参照がないことを指定[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]、キャッシュされた情報のみを含めるとします。</xref:System.Windows.Automation.AutomationElementMode>       などの要素で特定の操作<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>、および<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>、完全なリファレンスが必要ですこれらの実行を試みている<xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>を [なし] を持つ要素が結果</xref:System.Windows.Automation.AutomationElement.SetFocus%2A></xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A></xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。       使用して<xref:System.Windows.Automation.AutomationElementMode>する方が効率的プロパティのみが必要な場合にオーバーヘッドを回避できるので完全参照の設定に関係している</xref:System.Windows.Automation.AutomationElementMode>。"
  example:
  - "In the following example, AutomationElementMode is set to <xref:System.Windows.Automation.AutomationElementMode>, with the result that only cached properties and patterns are available for the retrieved object.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }
    return:
      type: System.Windows.Automation.AutomationElementMode
      description: "<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>返される要素が、基になる完全参照を持つ場合[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]それ以外の<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>です。"
  overload: System.Windows.Automation.CacheRequest.AutomationElementMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Clone
  id: Clone
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このコピーを作成<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>です。"
  syntax:
    content: public System.Windows.Automation.CacheRequest Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.CacheRequest
      description: "現在のオブジェクトの変更可能なコピーです。"
  overload: System.Windows.Automation.CacheRequest.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Current
  id: Current
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得、 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>現在のスレッドでアクティブになっています。"
  syntax:
    content: public static System.Windows.Automation.CacheRequest Current { get; }
    return:
      type: System.Windows.Automation.CacheRequest
      description: "アクティブな<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>です。"
  overload: System.Windows.Automation.CacheRequest.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Pop
  id: Pop
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "削除、アクティブな<xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>現在のスレッドを内部スタックからです。"
  remarks: "Pop メソッドを使用して、現在アクティブな要求のみを削除できます。 いない、現在&1; つの結果、例外は、要求を削除しようとしています。       使用することをお勧めはのキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置する</xref:System.Windows.Automation.CacheRequest.Activate%2A>。 その理由は、使用できること<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using`で[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])、例外が発生した場合でも、スタックから要求がポップされことを確認します</xref:System.Windows.Automation.CacheRequest.Activate%2A>。"
  example:
  - "The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using Pop.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Pop ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "スタックにプッシュされた最後の&1; つキャッシュ要求を削除しようとしました。"
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Push
  id: Push
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "場所、 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>内部状態スタックのことが現在のスレッドでアクティブな要求です。"
  remarks: "複数<xref:System.Windows.Automation.CacheRequest>状態スタックにオブジェクトを配置することができます</xref:System.Windows.Automation.CacheRequest>。 プッシュされた順序でスタックからのキャッシュ要求を削除する必要があります。それ以外の場合、<xref:System.InvalidOperationException>例外がスローされます</xref:System.InvalidOperationException>。       使用することをお勧めはのキャッシュ要求を入れ子にする場合を除き、<xref:System.Windows.Automation.CacheRequest.Activate%2A>スタックに要求を配置する</xref:System.Windows.Automation.CacheRequest.Activate%2A>。 その理由は、使用できること<xref:System.Windows.Automation.CacheRequest.Activate%2A>内で、`using`ブロック (`Using`で[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])、例外が発生した場合でも、スタックから要求がポップされことを確認します</xref:System.Windows.Automation.CacheRequest.Activate%2A>。"
  example:
  - "The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using Push.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Push ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Push*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  id: TreeFilter
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得または設定のビューを指定する値、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]キャッシュ時に使用する要素のツリーです。"
  remarks: "ビューの詳細については、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]要素ツリーを参照してください[UI オートメーション ツリーの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "In the following example, TreeFilter is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.Condition TreeFilter { get; set; }
    return:
      type: System.Windows.Automation.Condition
      description: "表示、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]要素ツリー。 既定の表示は<xref href=&quot;System.Windows.Automation.Automation.ControlViewCondition&quot;></xref>です。"
  overload: System.Windows.Automation.CacheRequest.TreeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeScope
  id: TreeScope
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得またはキャッシュを実行するか、サブツリーのルートに対してのみ、または子または子孫にも指定する値を設定します。"
  remarks: "キャッシュのスコープまたは複数のオブジェクトに関連してフェッチされる、対象となるオブジェクトに関連していない<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>または<xref:System.Windows.Automation.AutomationElement.FindAll%2A>と呼びます</xref:System.Windows.Automation.AutomationElement.FindAll%2A></xref:System.Windows.Automation.AutomationElement.FindFirst%2A>。 この例を参照してください。"
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and TreeScope is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.TreeScope TreeScope { get; set; }
    return:
      type: System.Windows.Automation.TreeScope
      description: "One or more of <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>. 既定値は<xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>です。"
  overload: System.Windows.Automation.CacheRequest.TreeScope*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティを設定しようとしましたが<xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>または<xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.CacheRequest.#ctor
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
- uid: System.Windows.Automation.CacheRequest.Activate
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.AutomationElementMode
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementMode
  nameWithType: AutomationElementMode
  fullName: System.Windows.Automation.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Current
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
- uid: System.Windows.Automation.CacheRequest.Push
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.CacheRequest.TreeScope
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.CacheRequest.#ctor*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Activate*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate
  nameWithType: CacheRequest.Activate
- uid: System.Windows.Automation.CacheRequest.Add*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add
  nameWithType: CacheRequest.Add
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone
  nameWithType: CacheRequest.Clone
- uid: System.Windows.Automation.CacheRequest.Current*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop
  nameWithType: CacheRequest.Pop
- uid: System.Windows.Automation.CacheRequest.Push*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push
  nameWithType: CacheRequest.Push
- uid: System.Windows.Automation.CacheRequest.TreeFilter*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
- uid: System.Windows.Automation.CacheRequest.TreeScope*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
