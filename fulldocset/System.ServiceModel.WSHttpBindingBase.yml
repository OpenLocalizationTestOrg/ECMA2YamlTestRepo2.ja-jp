### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSHttpBindingBase
  id: WSHttpBindingBase
  children:
  - System.ServiceModel.WSHttpBindingBase.#ctor
  - System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)
  - System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  - System.ServiceModel.WSHttpBindingBase.CreateBindingElements
  - System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity
  - System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  - System.ServiceModel.WSHttpBindingBase.GetTransport
  - System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  - System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  - System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  - System.ServiceModel.WSHttpBindingBase.MessageEncoding
  - System.ServiceModel.WSHttpBindingBase.ProxyAddress
  - System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ReliableSession
  - System.ServiceModel.WSHttpBindingBase.Scheme
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding
  - System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WSHttpBindingBase.TextEncoding
  - System.ServiceModel.WSHttpBindingBase.TransactionFlow
  - System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  langs:
  - csharp
  name: WSHttpBindingBase
  nameWithType: WSHttpBindingBase
  fullName: System.ServiceModel.WSHttpBindingBase
  type: Class
  summary: "共通するメンバーを持つ基本クラスを提供、 <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref>と<xref href=&quot;System.ServiceModel.WSFederationHttpBinding&quot;></xref>です。"
  remarks: "WSHttpBindingBase によって実装されるなど、セキュリティで保護された、信頼性、および相互運用可能な Web サービスを構成するためのバインディングの基本的な機能を提供する、<xref:System.ServiceModel.WSHttpBinding>の非双方向サービス コントラクト、および、特に複数のセキュリティで保護されたと相互運用可能な<xref:System.ServiceModel.WSFederationHttpBinding>Ws-federation プロトコルをサポートする</xref:System.ServiceModel.WSFederationHttpBinding></xref:System.ServiceModel.WSHttpBinding>。       既定では、メッセージ セキュリティと認証、メッセージ配信用 HTTP、および TEXT/XML メッセージ エンコーディングの Ws-security を使用するランタイム スタックを生成します。 信頼性のも、Ws-reliablemessaging を使用するように構成します。       Ws-reliablemessaging を使用するには、オプションを使用して構成可能な`reliableSessionEnabled`パラメーター。"
  example:
  - "The following example shows how to use the functionality provided by the WSHttpBindingBase class with the derived classes, <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.WSFederationHttpBinding>.  \n  \n [!code-cs[WSHttpBindingBase#0](~/add/codesnippet/csharp/t-system.servicemodel.ws_1_1.cs)]\n [!code-vb[WSHttpBindingBase#0](~/add/codesnippet/visualbasic/t-system.servicemodel.ws_1_1.vb)]"
  syntax:
    content: 'public abstract class WSHttpBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: WSHttpBindingBase()
  nameWithType: WSHttpBindingBase.WSHttpBindingBase()
  fullName: System.ServiceModel.WSHttpBindingBase.WSHttpBindingBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WSHttpBindingBase&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "This example shows how to use the default constructor.  \n  \n [!code-cs[WSHttpBindingBase#1](~/add/codesnippet/csharp/m-system.servicemodel.ws_7_1.cs)]\n [!code-vb[WSHttpBindingBase#1](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_7_1.vb)]"
  syntax:
    content: protected WSHttpBindingBase ();
    parameters: []
  overload: System.ServiceModel.WSHttpBindingBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: WSHttpBindingBase(Boolean)
  nameWithType: WSHttpBindingBase.WSHttpBindingBase(Boolean)
  fullName: System.ServiceModel.WSHttpBindingBase.WSHttpBindingBase(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WSHttpBindingBase&quot;> </xref>信頼できるセッションが有効になっているかどうかを示す値を持つクラス。"
  syntax:
    content: protected WSHttpBindingBase (bool reliableSessionEnabled);
    parameters:
    - id: reliableSessionEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、信頼できるセッションが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WSHttpBindingBase.BypassProxyOnLocal
  fullName: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはローカル アドレスに対してプロキシ サーバーをバイパスするかどうかを示す値を設定します。"
  remarks: "インターネット リソースは、ローカル アドレスを持つ場合ローカルです。 ローカル アドレスは同じコンピューター、ローカル LAN またはイントラネット上およびによって識別される、構文的などのピリオド (.)、Uri http://webserver/&quot;と&quot;http://localhost/&quot;がないことです。       BypassProxyOnLocal 設定プロパティを決定するかどうかで構成されたエンドポイント、<xref:System.ServiceModel.WSHttpBindingBase>ローカル リソースにアクセスするときにプロキシ サーバーを使用します</xref:System.ServiceModel.WSHttpBindingBase>。       BypassProxyOnLocal 場合`true`、ローカル インターネット リソースへの要求はプロキシ サーバーを使用しないでください。 WhenBypassProxyOnLocal は`false`、すべてのインターネット要求はプロキシ サーバーを通じて行われます。"
  example:
  - "[C#]  \n  \n The following example sets this property to indicate that the proxy should be bypassed for local resources.  \n  \n [!code-cs[WSHttpBindingBase#3](~/add/codesnippet/csharp/p-system.servicemodel.ws_24_1.cs)]\n [!code-vb[WSHttpBindingBase#3](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_24_1.vb)]  \n  \n The value of this property can also be set in the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ローカル アドレスでプロキシ サーバーをバイパスするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WSHttpBindingBase.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBindingBase.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "現在のバインディングに含まれるバインディング要素の順序付けられたコレクションを返します。"
  remarks: "バインド要素の順序が重要です。 プロトコルおよびトランスポート チャネルが構築され、スタックの順序を反映します。"
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#16](~/add/codesnippet/csharp/m-system.servicemodel.ws_4_1.cs)]\n [!code-vb[WSHttpBindingBase#16](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_4_1.vb)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A<xref:System.ServiceModel.Channels.BindingElementCollection>を格納している、<xref:System.ServiceModel.Channels.BindingElement>バインディング用</xref:System.ServiceModel.Channels.BindingElement></xref:System.ServiceModel.Channels.BindingElementCollection>。"
  overload: System.ServiceModel.WSHttpBindingBase.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity
  id: CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: CreateMessageSecurity()
  nameWithType: WSHttpBindingBase.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "派生クラスで実装された場合を返します、<xref:System.ServiceModel.Channels.SecurityBindingElement>現在のバインドから</xref:System.ServiceModel.Channels.SecurityBindingElement>。"
  syntax:
    content: protected abstract System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.SecurityBindingElement
      description: "A<xref:System.ServiceModel.Channels.SecurityBindingElement>現在のバインドから</xref:System.ServiceModel.Channels.SecurityBindingElement>。"
  overload: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WSHttpBindingBase.EnvelopeVersion
  fullName: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "このバインディングによって処理されるメッセージに使用される SOAP のバージョンを取得します。"
  remarks: ''
  example:
  - "This example shows how to get the envelope version.  \n  \n [!code-cs[WSHttpBindingBase#4](~/add/codesnippet/csharp/p-system.servicemodel.ws_13_1.cs)]\n [!code-vb[WSHttpBindingBase#4](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_13_1.vb)]"
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "値、<xref:System.ServiceModel.EnvelopeVersion>このバインディングで使用される</xref:System.ServiceModel.EnvelopeVersion>。 値は、常に SOAP 1.2 です。"
  overload: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.GetTransport
  id: GetTransport
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: GetTransport()
  nameWithType: WSHttpBindingBase.GetTransport()
  fullName: System.ServiceModel.WSHttpBindingBase.GetTransport()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "派生クラスとして実装された場合は、現在のバインドからトランスポート バインド要素を返します。"
  syntax:
    content: protected abstract System.ServiceModel.Channels.TransportBindingElement GetTransport ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.TransportBindingElement
      description: "<xref:System.ServiceModel.Channels.TransportBindingElement>現在のバインドから</xref:System.ServiceModel.Channels.TransportBindingElement>。"
  overload: System.ServiceModel.WSHttpBindingBase.GetTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WSHttpBindingBase.HostNameComparisonMode
  fullName: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または URI の照合時に、サービスに到達するホスト名を使用するかどうかを示す値を設定します。"
  remarks: ''
  example:
  - "This example shows how to get the <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode%2A> value.  \n  \n [!code-cs[WSHttpBindingBase#5](~/add/codesnippet/csharp/p-system.servicemodel.ws_15_1.cs)]\n [!code-vb[WSHttpBindingBase#5](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_15_1.vb)]"
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>ホスト名が URI で一致する場合に、サービスに到達するために使用するかどうかを示す値</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>。 既定値は<xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>、一致しているホスト名を無視します。"
  overload: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WSHttpBindingBase.MaxBufferPoolSize
  fullName: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または設定に割り当てられたメモリをバイト単位でこのバインドを使用してエンドポイントによって必要とするバッファーを管理するバッファー マネージャーの最大量。"
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>バッファーを使用するバッファー プールによるコストを最小化しようとしています</xref:System.ServiceModel.Channels.BufferManager>。 バッファーは、チャネルから出てくる場合に、サービスによってメッセージを処理する必要があります。 メッセージの読み込みを処理するバッファー プール内に十分なメモリがない場合、<xref:System.ServiceModel.Channels.BufferManager>がガベージ コレクションのオーバーヘッドが増えるため、CLR ヒープから追加のメモリを割り当てる必要があります</xref:System.ServiceModel.Channels.BufferManager>。 CLR ガベージ ヒープから多大な割り当ては MaxBufferPoolSize 制限を増やすことより大きな割り当てにパフォーマンスを向上できること、およびバッファー プール サイズが小さすぎることを示します。"
  example:
  - "This example shows how to get the MaxBufferPoolSize value.  \n  \n [!code-cs[WSHttpBindingBase#6](~/add/codesnippet/csharp/p-system.servicemodel.ws_22_1.cs)]\n [!code-vb[WSHttpBindingBase#6](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_22_1.vb)]"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "このバインディングで構成されるエンドポイントによって使用されるバッファーのプールのバイト単位で最大サイズ。 既定値は 524, 288 バイトです。"
  overload: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WSHttpBindingBase.MaxReceivedMessageSize
  fullName: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または、バインディングにより処理可能なメッセージのバイト単位で最大のサイズを設定します。"
  remarks: "サービスを使用して、ネットワーク上で受信できるメッセージのサイズ、<xref:System.ServiceModel.WSHttpBindingBase>メッセージごとに割り当てられたメモリの量に制限されます</xref:System.ServiceModel.WSHttpBindingBase>。 このメッセージ サイズは、拒否 (dos) 攻撃への露出を制限するものです。"
  example:
  - "This example shows how to get the maximum size for a message  \n  \n [!code-cs[WSHttpBindingBase#7](~/add/codesnippet/csharp/p-system.servicemodel.ws_8_1.cs)]\n [!code-vb[WSHttpBindingBase#7](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_8_1.vb)]"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "最大サイズ (バイト単位)、バインディングによって処理されるメッセージ。 既定値は、65,536 バイトです。"
  overload: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値が&0; 未満です。"
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "メッセージには、割り当てられた最大サイズを超えています。"
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.MessageEncoding
  id: MessageEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: MessageEncoding
  nameWithType: WSHttpBindingBase.MessageEncoding
  fullName: System.ServiceModel.WSHttpBindingBase.MessageEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または SOAP メッセージのエンコードに MTOM または TEXT/XML が使用するかどうかを設定します。"
  remarks: ''
  example:
  - "This example shows how to get the maximum size for a message  \n  \n [!code-cs[WSHttpBindingBase#8](~/add/codesnippet/csharp/p-system.servicemodel.ws_21_1.cs)]\n [!code-vb[WSHttpBindingBase#8](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_21_1.vb)]"
  syntax:
    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: "値<xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;> </xref> SOAP メッセージのエンコードに MTOM または Text が使用されるかどうかを示すです。 既定値は<xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.MessageEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WSHttpBindingBase.ProxyAddress
  fullName: System.ServiceModel.WSHttpBindingBase.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または HTTP プロキシの URI アドレスを設定します。"
  remarks: "場合、<xref:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy%2A>に設定されている`true`メタベースの値は無視されます</xref:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy%2A>。"
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#9](~/add/codesnippet/csharp/p-system.servicemodel.ws_14_1.cs)]\n [!code-vb[WSHttpBindingBase#9](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_14_1.vb)]"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>HTTP プロキシのアドレスとして機能する</xref:System.Uri>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WSHttpBindingBase.ReaderQuotas
  fullName: System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または、このバインディングで構成されるエンドポイントにより処理可能な SOAP メッセージの複雑さに対する制約を設定します。"
  remarks: "複雑さの制約には、要素の最大深度、メッセージ内の文字列コンテンツの最大長などの項目が含まれます。 制約は、拒否をメッセージの複雑さを使用してエンドポイント処理リソースを停滞させるサービス拒否 (DoS) 攻撃のクラスから保護します。"
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#10](~/add/codesnippet/csharp/p-system.servicemodel.ws_9_1.cs)]\n [!code-vb[WSHttpBindingBase#10](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_9_1.vb)]"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "<xref:System.Xml.XmlDictionaryReaderQuotas>複雑さの制約を指定します</xref:System.Xml.XmlDictionaryReaderQuotas>。"
  overload: System.ServiceModel.WSHttpBindingBase.ReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ReliableSession
  id: ReliableSession
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ReliableSession
  nameWithType: WSHttpBindingBase.ReliableSession
  fullName: System.ServiceModel.WSHttpBindingBase.ReliableSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "システム指定のバインディングのいずれかを使用するときに使用できる信頼できるセッション バインド要素のプロパティに簡単にアクセスを提供するオブジェクトを取得します。"
  remarks: "信頼できるセッションで有効になる、<xref:System.ServiceModel.WSHttpBindingBase.%23ctor%28System.Boolean%29>コンス トラクター</xref:System.ServiceModel.WSHttpBindingBase.%23ctor%28System.Boolean%29> 。"
  example:
  - "This example shows how to get the properties of a reliable session binding.  \n  \n [!code-cs[WSHttpBindingBase#11](~/add/codesnippet/csharp/p-system.servicemodel.ws_2_1.cs)]\n [!code-vb[WSHttpBindingBase#11](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_2_1.vb)]"
  syntax:
    content: public System.ServiceModel.OptionalReliableSession ReliableSession { get; set; }
    return:
      type: System.ServiceModel.OptionalReliableSession
      description: "<xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref>システム指定のバインディングのいずれかを使用するときに使用できる信頼できるセッション バインド要素のプロパティに簡単にアクセスを提供します。"
  overload: System.ServiceModel.WSHttpBindingBase.ReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.Scheme
  id: Scheme
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: Scheme
  nameWithType: WSHttpBindingBase.Scheme
  fullName: System.ServiceModel.WSHttpBindingBase.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "チャネルとこのバインディングで構成されているリスナーの URI トランスポート スキームを取得します。"
  remarks: ''
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#12](~/add/codesnippet/csharp/p-system.servicemodel.ws_31_1.cs)]\n [!code-vb[WSHttpBindingBase#12](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_31_1.vb)]"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "&quot;http&quot;<xref:System.ServiceModel.SecurityMode>にトランスポート バインド要素のセキュリティ モードが設定されている場合または<xref:System.ServiceModel.SecurityMode>です。セキュリティ モードがそれ以外の場合に設定されている場合は、&quot;https&quot;.</xref:System.ServiceModel.SecurityMode> </xref:System.ServiceModel.SecurityMode>"
  overload: System.ServiceModel.WSHttpBindingBase.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSHttpBindingBase.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.WSHttpBindingBase.ReaderQuotas*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.WSHttpBindingBase.ReaderQuotas*>。"
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.WSHttpBindingBase.ReaderQuotas*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.WSHttpBindingBase.ReaderQuotas*> 。"
  overload: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession
  id: ShouldSerializeReliableSession
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ShouldSerializeReliableSession()
  nameWithType: WSHttpBindingBase.ShouldSerializeReliableSession()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.WSHttpBindingBase.ReliableSession*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.WSHttpBindingBase.ReliableSession*>。"
  syntax:
    content: public bool ShouldSerializeReliableSession ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.WSHttpBindingBase.ReliableSession*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.WSHttpBindingBase.ReliableSession*> 。"
  overload: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding
  id: ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: ShouldSerializeTextEncoding()
  nameWithType: WSHttpBindingBase.ShouldSerializeTextEncoding()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.WSHttpBindingBase.TextEncoding*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.WSHttpBindingBase.TextEncoding*>。"
  syntax:
    content: public bool ShouldSerializeTextEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.WSHttpBindingBase.TextEncoding*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.WSHttpBindingBase.TextEncoding*> 。"
  overload: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSHttpBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WSHttpBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "同期または非同期に受信した要求を処理するかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "This example shows how to use the ReceiveSynchronously member.  \n  \n [!code-cs[WSHttpBindingBase#19](~/add/codesnippet/csharp/9518f656-2e09-4d2e-809e-_1.cs)]\n [!code-vb[WSHttpBindingBase#19](~/add/codesnippet/visualbasic/9518f656-2e09-4d2e-809e-_1.vb)]"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要求が同期的に処理される場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>非同期的に処理される場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>に要求を非同期的に処理します。"
  overload: System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: TextEncoding
  nameWithType: WSHttpBindingBase.TextEncoding
  fullName: System.ServiceModel.WSHttpBindingBase.TextEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはメッセージ テキストに使用される文字エンコーディングを設定します。"
  remarks: ''
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#13](~/add/codesnippet/csharp/p-system.servicemodel.ws_19_1.cs)]\n [!code-vb[WSHttpBindingBase#13](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_19_1.vb)]"
  syntax:
    content: public System.Text.Encoding TextEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>を示すために使用される文字エンコーディングします</xref:System.Text.Encoding>。 既定値は<xref:System.Text.UTF8Encoding>。</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.WSHttpBindingBase.TextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.TransactionFlow
  id: TransactionFlow
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: TransactionFlow
  nameWithType: WSHttpBindingBase.TransactionFlow
  fullName: System.ServiceModel.WSHttpBindingBase.TransactionFlow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または、このバインディングが Ws-transactions をサポートするかどうかを示す値を設定します。"
  remarks: ''
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#14](~/add/codesnippet/csharp/p-system.servicemodel.ws_29_1.cs)]\n [!code-vb[WSHttpBindingBase#14](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_29_1.vb)]"
  syntax:
    content: public bool TransactionFlow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トランザクションのフローがサポートされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.TransactionFlow*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WSHttpBindingBase
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WSHttpBindingBase.UseDefaultWebProxy
  fullName: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはを使用可能な場合は、システムの自動設定 HTTP プロキシを使用するかどうかを示す値を設定します。"
  remarks: "ある場合はエラーである`true`と<xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A>以外である`null`</xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A>。"
  example:
  - "This example shows how to get the maximum size for a message.  \n  \n [!code-cs[WSHttpBindingBase#15](~/add/codesnippet/csharp/p-system.servicemodel.ws_32_1.cs)]\n [!code-vb[WSHttpBindingBase#15](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_32_1.vb)]"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用可能な場合、システムの自動設定 HTTP プロキシを使用する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ServiceModel.WSHttpBindingBase.#ctor
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: WSHttpBindingBase()
  nameWithType: WSHttpBindingBase.WSHttpBindingBase()
  fullName: System.ServiceModel.WSHttpBindingBase.WSHttpBindingBase()
- uid: System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: WSHttpBindingBase(Boolean)
  nameWithType: WSHttpBindingBase.WSHttpBindingBase(Boolean)
  fullName: System.ServiceModel.WSHttpBindingBase.WSHttpBindingBase(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSHttpBindingBase.BypassProxyOnLocal
  fullName: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
- uid: System.ServiceModel.WSHttpBindingBase.CreateBindingElements
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WSHttpBindingBase.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBindingBase.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: CreateMessageSecurity()
  nameWithType: WSHttpBindingBase.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity()
- uid: System.ServiceModel.Channels.SecurityBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: System.ServiceModel.Channels.SecurityBindingElement
- uid: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSHttpBindingBase.EnvelopeVersion
  fullName: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WSHttpBindingBase.GetTransport
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: GetTransport()
  nameWithType: WSHttpBindingBase.GetTransport()
  fullName: System.ServiceModel.WSHttpBindingBase.GetTransport()
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
- uid: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSHttpBindingBase.HostNameComparisonMode
  fullName: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSHttpBindingBase.MaxBufferPoolSize
  fullName: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSHttpBindingBase.MaxReceivedMessageSize
  fullName: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
- uid: System.ServiceModel.WSHttpBindingBase.MessageEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MessageEncoding
  nameWithType: WSHttpBindingBase.MessageEncoding
  fullName: System.ServiceModel.WSHttpBindingBase.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: false
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel.WSHttpBindingBase.ProxyAddress
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ProxyAddress
  nameWithType: WSHttpBindingBase.ProxyAddress
  fullName: System.ServiceModel.WSHttpBindingBase.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSHttpBindingBase.ReaderQuotas
  fullName: System.ServiceModel.WSHttpBindingBase.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WSHttpBindingBase.ReliableSession
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ReliableSession
  nameWithType: WSHttpBindingBase.ReliableSession
  fullName: System.ServiceModel.WSHttpBindingBase.ReliableSession
- uid: System.ServiceModel.OptionalReliableSession
  parent: System.ServiceModel
  isExternal: false
  name: OptionalReliableSession
  nameWithType: OptionalReliableSession
  fullName: System.ServiceModel.OptionalReliableSession
- uid: System.ServiceModel.WSHttpBindingBase.Scheme
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: Scheme
  nameWithType: WSHttpBindingBase.Scheme
  fullName: System.ServiceModel.WSHttpBindingBase.Scheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSHttpBindingBase.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeReliableSession()
  nameWithType: WSHttpBindingBase.ShouldSerializeReliableSession()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession()
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeTextEncoding()
  nameWithType: WSHttpBindingBase.ShouldSerializeTextEncoding()
  fullName: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding()
- uid: System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSHttpBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WSHttpBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WSHttpBindingBase.TextEncoding
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: TextEncoding
  nameWithType: WSHttpBindingBase.TextEncoding
  fullName: System.ServiceModel.WSHttpBindingBase.TextEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WSHttpBindingBase.TransactionFlow
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: TransactionFlow
  nameWithType: WSHttpBindingBase.TransactionFlow
  fullName: System.ServiceModel.WSHttpBindingBase.TransactionFlow
- uid: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSHttpBindingBase.UseDefaultWebProxy
  fullName: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
- uid: System.ServiceModel.WSHttpBindingBase.#ctor*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: WSHttpBindingBase
  nameWithType: WSHttpBindingBase.WSHttpBindingBase
- uid: System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSHttpBindingBase.BypassProxyOnLocal
- uid: System.ServiceModel.WSHttpBindingBase.CreateBindingElements*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSHttpBindingBase.CreateBindingElements
- uid: System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: CreateMessageSecurity
  nameWithType: WSHttpBindingBase.CreateMessageSecurity
- uid: System.ServiceModel.WSHttpBindingBase.EnvelopeVersion*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSHttpBindingBase.EnvelopeVersion
- uid: System.ServiceModel.WSHttpBindingBase.GetTransport*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: GetTransport
  nameWithType: WSHttpBindingBase.GetTransport
- uid: System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSHttpBindingBase.HostNameComparisonMode
- uid: System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSHttpBindingBase.MaxBufferPoolSize
- uid: System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSHttpBindingBase.MaxReceivedMessageSize
- uid: System.ServiceModel.WSHttpBindingBase.MessageEncoding*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: MessageEncoding
  nameWithType: WSHttpBindingBase.MessageEncoding
- uid: System.ServiceModel.WSHttpBindingBase.ProxyAddress*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ProxyAddress
  nameWithType: WSHttpBindingBase.ProxyAddress
- uid: System.ServiceModel.WSHttpBindingBase.ReaderQuotas*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSHttpBindingBase.ReaderQuotas
- uid: System.ServiceModel.WSHttpBindingBase.ReliableSession*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ReliableSession
  nameWithType: WSHttpBindingBase.ReliableSession
- uid: System.ServiceModel.WSHttpBindingBase.Scheme*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: Scheme
  nameWithType: WSHttpBindingBase.Scheme
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WSHttpBindingBase.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeReliableSession
  nameWithType: WSHttpBindingBase.ShouldSerializeReliableSession
- uid: System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: ShouldSerializeTextEncoding
  nameWithType: WSHttpBindingBase.ShouldSerializeTextEncoding
- uid: System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSHttpBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WSHttpBindingBase.TextEncoding*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: TextEncoding
  nameWithType: WSHttpBindingBase.TextEncoding
- uid: System.ServiceModel.WSHttpBindingBase.TransactionFlow*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: TransactionFlow
  nameWithType: WSHttpBindingBase.TransactionFlow
- uid: System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy*
  parent: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSHttpBindingBase.UseDefaultWebProxy
