### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.TransactionMessageProperty
  id: TransactionMessageProperty
  children:
  - System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  langs:
  - csharp
  name: TransactionMessageProperty
  nameWithType: TransactionMessageProperty
  fullName: System.ServiceModel.Channels.TransactionMessageProperty
  type: Class
  summary: "トランザクションを挿入する、独自のトランザクション フロー メカニズムを使用して、カスタム チャネルによる、により、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]フレームワークです。 このクラスは継承できません。"
  remarks: "このクラスは、サード パーティ製のチャネル開発者は、チャネルの独自のトランザクション フロー メカニズムを使用して、独自のトランザクションを ServiceModel フレームワークに導入するを使用します。 サービス メソッドを実行するときに、トランザクションが使用されます。 このメカニズムは<xref:System.ServiceModel.TransactionFlowAttribute>。</xref:System.ServiceModel.TransactionFlowAttribute>と組み合わせて使用することはできません。"
  syntax:
    content: public sealed class TransactionMessageProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  id: Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "サービス メソッドを実行するときに使用されるトランザクションを設定します。"
  remarks: "カスタム受信チャネル (サービスのチャネル スタックの一部である) を追加するには、このメソッドを呼び出すことができます、<xref:System.ServiceModel.Channels.TransactionMessageProperty>を含む、`transaction`パラメーターを`Properties`のコレクション、`message`パラメーター</xref:System.ServiceModel.Channels.TransactionMessageProperty> 。 これにより、インフラストラクチャを作成する、<xref:System.Transactions.TransactionScope>受信メッセージで要求されているサービス メソッドを呼び出す前に、渡されたトランザクションを使用してインスタンスします</xref:System.Transactions.TransactionScope>。 サービス メソッドがあります、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>プロパティに設定`true`</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>。"
  syntax:
    content: public static void Set (System.Transactions.Transaction transaction, System.ServiceModel.Channels.Message message);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "サービス メソッドを実行するときに使用されるトランザクションです。"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "サービス メソッドの呼び出しを発生させる受信メッセージ。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  exceptions:
  - type: System.ServiceModel.FaultException
    commentId: T:System.ServiceModel.FaultException
    description: "プロパティに設定されて既に<code> message</code>です。"
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "<code>transaction</code>マーシャ リングを解除する必要があり操作が失敗します。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  id: Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "サービス メソッドを実行するときに使用されるトランザクションを取得します。"
  syntax:
    content: public System.Transactions.Transaction Transaction { get; }
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>インスタンスをサービス メソッドを実行するときに使用します。"
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.FaultException
  isExternal: true
  name: System.ServiceModel.FaultException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set
  nameWithType: TransactionMessageProperty.Set
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
