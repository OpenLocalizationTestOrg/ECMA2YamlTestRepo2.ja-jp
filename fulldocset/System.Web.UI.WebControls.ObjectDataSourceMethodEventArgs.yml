### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  id: ObjectDataSourceMethodEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  langs:
  - csharp
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Inserting&quot;> </xref>、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Updating&quot;> </xref>、および<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Deleting&quot;></xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロール。"
  remarks: "ObjectDataSourceMethodEventArgs クラスが使用されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>、および<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>に渡される入力パラメーターへのアクセスを提供するメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>、および<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>のメソッド、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>。 これらのパラメーターを使用してアクセス、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>。 処理するデリゲートを追加することによって、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、または<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベントを確認およびパラメーターの値を操作して必要な追加の処理を実行できます</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。 このディクショナリ内のパラメーターへの変更は、操作のどのメソッド オーバー ロードを呼び出すに影響します。 ときに、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを設定すると、このディクショナリ内の項目のデータ オブジェクトのプロパティを変更することができますのみです追加またはパラメーターを削除することはできません。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>を参照してください。       <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが基になるビジネス オブジェクトのライフ サイクルのさまざまなタイミングで操作を処理できる多くのイベントを公開します</xref:System.Web.UI.WebControls.ObjectDataSource>。 次の表は、イベントの一覧し、関連付けられている<xref:System.EventArgs>クラスとイベント ハンドラー デリゲート</xref:System.EventArgs>。      |イベント |`EventArgs`クラス |イベント ハンドラー デリゲート |  |-----------|-----------------------|---------------------------|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> ビジネス オブジェクトのインスタンスが作成される直前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> ビジネス オブジェクトのインスタンスが作成直後後に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> データを取得する前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 更新プログラム、または削除操作が実行される挿入、前に発生します |。ObjectDataSourceMethodEventArgs |<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler><br /><br /> データの取得後に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 発生した、insert、update、または削除操作が完了した |。<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  |<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> ビジネス オブジェクトが破棄される前に発生します |。<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example middle-tier business object that is used by the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button, and the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property will identify which method performs the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> action.  \n  \n In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_181_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_181_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The following list describes the two major classes that are defined in the code example:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n In addition, a `NorthwindDataException` class is provided as a convenience.  \n  \n This set of example classes uses the Northwind Traders database, which is an example database available with Microsoft SQL Server and Microsoft Access. For a complete working example, use these classes by placing them in the App_Code directory under the application root or by compiling them and placing the resulting DLL in the Bin directory. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_181_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_181_2.cs)]"
  syntax:
    content: 'public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  id: '#ctor(System.Collections.Specialized.IOrderedDictionary)'
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  langs:
  - csharp
  name: ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>クラスの指定した入力パラメーターのコレクションを使用します。"
  syntax:
    content: public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);
    parameters:
    - id: inputParameters
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>の<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>ビジネス オブジェクトのメソッドとその関連値のパラメーターの名前を表すオブジェクト。"
  overload: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  id: InputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  langs:
  - csharp
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビジネス オブジェクト メソッドのパラメーターとその値を格納するコレクションを取得します。"
  remarks: "パラメーターは、参照渡しまたは値によってビジネス オブジェクトのメソッドに渡すことができます。 使用する場合、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>を処理するオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>、または<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>イベントにアクセスして、入力パラメーターのプロパティを使用してこれらのパラメーターを操作します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting></xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating></xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>。 このディクショナリ内のパラメーターへの変更は、操作のどのメソッド オーバー ロードを呼び出すに影響します。  ときに、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを設定すると、このディクショナリ内の項目のデータ オブジェクトのプロパティのみを変更することができます追加またはパラメーターを削除することはできません。</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> 。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>を参照してください。       参照によって渡されるパラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind Employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> property contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList> control, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method is only enabled after an employee is selected.  \n  \n In this example, the `NorthwindEmployeeUpdating` method is called before the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> method to add the correct parameters and values to the InputParameters collection. You can add the parameters and values dynamically, as demonstrated, or declaratively.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_736_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_736_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref:System.Collections.IDictionary>ビジネス オブジェクト メソッドのパラメーターとその対応する値を表す名前/値ペア</xref:System.Collections.IDictionary>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs(IOrderedDictionary)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  isExternal: false
  name: InputParameters
  nameWithType: ObjectDataSourceMethodEventArgs.InputParameters
