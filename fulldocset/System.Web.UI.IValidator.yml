### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IValidator
  id: IValidator
  children:
  - System.Web.UI.IValidator.ErrorMessage
  - System.Web.UI.IValidator.IsValid
  - System.Web.UI.IValidator.Validate
  langs:
  - csharp
  name: IValidator
  nameWithType: IValidator
  fullName: System.Web.UI.IValidator
  type: Interface
  summary: "プロパティと Web フォームの検証に参加しているオブジェクトを実装する必要があるメソッドを定義します。"
  remarks: "このインターフェイスを実装するクラスは、ユーザー入力エラーを表します。 ときに、<xref:System.Web.UI.IValidator.Validate%2A>メソッドは、クラスの更新、<xref:System.Web.UI.IValidator.IsValid%2A>エラーが発生したかどうかを示すプロパティです</xref:System.Web.UI.IValidator.IsValid%2A></xref:System.Web.UI.IValidator.Validate%2A>。 <xref:System.Web.UI.IValidator.ErrorMessage%2A>プロパティには、エラーが発生したときに表示されるエラー状態の説明テキストが含まれています</xref:System.Web.UI.IValidator.ErrorMessage%2A>。       <xref:System.Web.UI.WebControls.BaseValidator>クラスは、このインターフェイスを実装しすべての他の ASP.NET 検証サーバー コントロール クラスから継承<xref:System.Web.UI.WebControls.BaseValidator>。</xref:System.Web.UI.WebControls.BaseValidator> </xref:System.Web.UI.WebControls.BaseValidator> 検証サーバー コントロールとそのしくみについては、次を参照してください。 [ASP.NET の検証コントロール](~/add/includes/ajax-current-ext-md.md)です。       カスタム ASP.NET 検証サーバー コントロールを開発する方法の詳細については、「[する方法: ASP.NET サーバー コントロールのカスタム関数を使用して検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/t-system.web.ui.ivalidator_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/t-system.web.ui.ivalidator_1.aspx)]"
  syntax:
    content: public interface IValidator
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.ErrorMessage
  id: ErrorMessage
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
  fullName: System.Web.UI.IValidator.ErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "クラスに実装すると、失敗の検証条件の中に生成されたエラー メッセージ テキストを取得または設定します。"
  remarks: "ASP.NET 開発者は、検証サーバー コントロールの開始タグで宣言には、このプロパティにアクセスします。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。"
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/p-system.web.ui.ivalidat_1_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/p-system.web.ui.ivalidat_1_1.aspx)]"
  syntax:
    content: public string ErrorMessage { get; set; }
    return:
      type: System.String
      description: "生成するエラー メッセージ。"
  overload: System.Web.UI.IValidator.ErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.IsValid
  id: IsValid
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: IsValid
  nameWithType: IValidator.IsValid
  fullName: System.Web.UI.IValidator.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "クラスに実装すると、指定したコントロールのユーザーが入力した内容が検証に合格するかどうかを示す値を取得または設定します。"
  remarks: ''
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/p-system.web.ui.ivalidat_0_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/p-system.web.ui.ivalidat_0_1.aspx)]"
  syntax:
    content: public bool IsValid { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コンテンツが無効です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.IValidator.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.Validate
  id: Validate
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: Validate()
  nameWithType: IValidator.Validate()
  fullName: System.Web.UI.IValidator.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "クラスによって実装された場合、条件を評価することを確認および更新、<xref:System.Web.UI.IValidator.IsValid*>プロパティ</xref:System.Web.UI.IValidator.IsValid*>。"
  remarks: ''
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/m-system.web.ui.ivalidat_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/m-system.web.ui.ivalidat_1.aspx)]"
  syntax:
    content: public void Validate ();
    parameters: []
  overload: System.Web.UI.IValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IValidator.ErrorMessage
  parent: System.Web.UI.IValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
  fullName: System.Web.UI.IValidator.ErrorMessage
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IValidator.IsValid
  parent: System.Web.UI.IValidator
  isExternal: false
  name: IsValid
  nameWithType: IValidator.IsValid
  fullName: System.Web.UI.IValidator.IsValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.IValidator.Validate
  parent: System.Web.UI.IValidator
  isExternal: false
  name: Validate()
  nameWithType: IValidator.Validate()
  fullName: System.Web.UI.IValidator.Validate()
- uid: System.Web.UI.IValidator.ErrorMessage*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
- uid: System.Web.UI.IValidator.IsValid*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: IsValid
  nameWithType: IValidator.IsValid
- uid: System.Web.UI.IValidator.Validate*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: Validate
  nameWithType: IValidator.Validate
