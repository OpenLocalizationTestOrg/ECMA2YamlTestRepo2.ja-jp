### YamlMime:ManagedReference
items:
- uid: System.Windows.Thickness
  id: Thickness
  children:
  - System.Windows.Thickness.#ctor(System.Double)
  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Thickness.Bottom
  - System.Windows.Thickness.Equals(System.Object)
  - System.Windows.Thickness.Equals(System.Windows.Thickness)
  - System.Windows.Thickness.GetHashCode
  - System.Windows.Thickness.Left
  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.Right
  - System.Windows.Thickness.Top
  - System.Windows.Thickness.ToString
  langs:
  - csharp
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
  type: Struct
  summary: "四角形の枠の太さについて説明します。 次の&4; つ<xref:System.Double>値について説明する、 <> </> *>、 <> </> *>、 <> </> *>、および<> *>、四角形の辺それぞれ</xref:System.Double>。"
  remarks: "太さ値は、2 つの方法で指定できます。 4 つ渡した場合<xref:System.Double>、構造体に値を表す、 <xref:System.Windows.Thickness.Left%2A>、 <xref:System.Windows.Thickness.Top%2A>、<xref:System.Windows.Thickness.Right%2A>と<xref:System.Windows.Thickness.Bottom%2A>辺、それぞれ、外接する四角形の</xref:System.Windows.Thickness.Bottom%2A></xref:System.Windows.Thickness.Right%2A></xref:System.Windows.Thickness.Top%2A></xref:System.Windows.Thickness.Left%2A></xref:System.Double>。 外接する四角形の辺に統一された値を適用、単一の値を指定することもできます。      <a name=&quot;xamlAttributeUsage_Thickness&quot;></a>## XAML 属性の使用```   <object property=&quot;left&quot;/>   - or -   <object property=&quot;left,top&quot;/>   - or -   <object property=&quot; left,top,right,bottom&quot; ... />   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> ## XAML 値*左*いずれかとして説明されているフレームの左のエッジ、<xref:System.Double>を指定する値、[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]メジャー、または、 *qualifiedDouble* (下記参照).</xref:System.Double>       だけを&1; つのメジャーを指定すると、そのメジャーは、左、上、右、下の値、幅のすべてに適用されます。 だけを左と上のメジャーのペアを指定すると、これらのメジャーは、対称的に適用、太さ: 左の値が右の使用上位の値は、下に使用されます。       *上部*いずれかとして説明されている、フレームの上部エッジ、<xref:System.Double>を指定する値、[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]メジャー、または、 *qualifiedDouble* (下記参照).</xref:System.Double> だけを左と上のメジャーのペアを指定すると、これらのメジャーは、対称的に適用、太さ: 左の値が右の使用上位の値は、下に使用されます。       *右*いずれかとして説明されているフレームの右の端、<xref:System.Double>を指定する値、[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]メジャー、または、 *qualifiedDouble* (下記参照).</xref:System.Double> 左側の値を指定しない場合は、左の値に使用されます。       *下部にある*いずれかとして説明されている、フレームの下端、<xref:System.Double>を指定する値、[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]メジャー、または、 *qualifiedDouble* (下記参照).</xref:System.Double> 左側の値を指定しない場合は、左の値に使用されます。       *qualifiedDouble* A*二重*値のいずれかのメジャー、前述のよう続けて次の単位の宣言文字列のいずれかの: `px`、 `in`、 `cm`、`pt`です。       `px`(既定値) は[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]`in`インチ; に 1 96px を = =`cm`センチメートル; は、1cm==(96/2.54) px`pt`ポイント; 1pt==(96/72) px > [!NOTE] > 値が必要な小数点文字列として指定するときに明示的に含まれていません。        文字列「1」で提供される[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]1.0 コードで参照されている場合の値に評価します。"
  example:
  - "The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Thickness : IEquatable<System.Windows.Thickness>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Thickness>
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Thickness&quot;> </xref>をそれぞれの側で指定された uniform 長さを持つ構造体。"
  syntax:
    content: public Thickness (double uniformLength);
    parameters:
    - id: uniformLength
      type: System.Double
      description: "外接する四角形の&4; つの辺をすべてに適用される一定の長さ。"
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Thickness&quot;> </xref>を特定の長さを持つ構造体 (として指定された、 <xref:System.Double>) 四角形の各辺に適用します</xref:System.Double>。"
  remarks: ''
  example:
  - "The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: public Thickness (double left, double top, double right, double bottom);
    parameters:
    - id: left
      type: System.Double
      description: "四角形の左側の太さ。"
    - id: top
      type: System.Double
      description: "四角形の上側の太さです。"
    - id: right
      type: System.Double
      description: "四角形の右側の太さ"
    - id: bottom
      type: System.Double
      description: "四角形の下側の太さです。"
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Bottom
  id: Bottom
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または外接する四角形の下のピクセル単位の幅を設定します。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Bottom { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>のこのインスタンスの外接する四角形の下のピクセル単位の幅を表す<xref href=&quot;System.Windows.Thickness&quot;> </xref></xref:System.Double> 。 ピクセルは 1/96 インチになります。 既定値は 0 です。"
  overload: System.Windows.Thickness.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "これと比較<xref href=&quot;System.Windows.Thickness&quot;></xref>を別の構造体<xref:System.Object>等しいかどうか</xref:System.Object>。"
  remarks: "論理的に等価な&2; つの浮動小数点値に等しいかどうかテストは、有効桁数エラーように、値が演算を蓄積する可能性が失敗する可能性があります。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトが等しい場合はそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  id: Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "これと比較<xref href=&quot;System.Windows.Thickness&quot;></xref>を別の構造体<xref href=&quot;System.Windows.Thickness&quot;></xref>構造が等しいかどうか。"
  remarks: "等値演算子または非等値と論理的に等価である&2; つの浮動小数点値のテストは、有効桁数エラーように、値が演算を蓄積する可能性が失敗する可能性があります。"
  syntax:
    content: public bool Equals (System.Windows.Thickness thickness);
    parameters:
    - id: thickness
      type: System.Windows.Thickness
      description: "インスタンス<xref href=&quot;System.Windows.Thickness&quot;></xref>等しいかどうかを比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つの<xref href=&quot;System.Windows.Thickness&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.GetHashCode
  id: GetHashCode
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "構造体のハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "このインスタンスのハッシュ コード<xref href=&quot;System.Windows.Thickness&quot;></xref>です。"
  overload: System.Windows.Thickness.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Left
  id: Left
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または外接する四角形の左端のピクセル単位の幅を設定します。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Left { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>のこのインスタンスの外接する四角形の左端のピクセル単位の幅を表す<xref href=&quot;System.Windows.Thickness&quot;> </xref></xref:System.Double> 。 ピクセルは 1/96 インチになります。 既定値は 0 です。"
  overload: System.Windows.Thickness.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "2 つの値を比較<xref href=&quot;System.Windows.Thickness&quot;></xref>構造が等しいかどうか。"
  remarks: "論理的に等価な&2; つの浮動小数点値に等しいかどうかテストは、有効桁数エラーように、値が演算を蓄積する可能性が失敗する可能性があります。"
  syntax:
    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "比較する最初の構造体。"
    - id: t2
      type: System.Windows.Thickness
      description: "その他の構造体と比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つの<xref href=&quot;System.Windows.Thickness&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Thickness.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "比較する&2; つ<xref href=&quot;System.Windows.Thickness&quot;></xref>非等値の構造体。"
  remarks: "等値演算子または非等値と論理的に等価である&2; つの浮動小数点値のテストは、有効桁数エラーように、値が演算を蓄積する可能性が失敗する可能性があります。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "比較する最初の構造体。"
    - id: t2
      type: System.Windows.Thickness
      description: "その他の構造体と比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つの<xref href=&quot;System.Windows.Thickness&quot;></xref>が等しくない。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Thickness.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Right
  id: Right
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または四角形領域の右側のピクセル単位の幅を設定します。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Right { get; set; }
    return:
      type: System.Double
      description: "A <xref:System.Double>(ピクセル単位) のこのインスタンスの外接する四角形の右側にある、幅を表す<xref href=&quot;System.Windows.Thickness&quot;> </xref></xref:System.Double> 。 ピクセルは 1/96 インチになります。 既定値は 0 です。"
  overload: System.Windows.Thickness.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Top
  id: Top
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または外接する四角形の上のピクセル単位の幅を設定します。"
  remarks: ''
  example:
  - "The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Top { get; set; }
    return:
      type: System.Double
      description: "A<xref:System.Double>面の上のこのインスタンスの外接する四角形のピクセル単位の幅を表す<xref href=&quot;System.Windows.Thickness&quot;> </xref></xref:System.Double> 。 ピクセルは 1/96 インチになります。 既定値は 0 です。"
  overload: System.Windows.Thickness.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.ToString
  id: ToString
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "文字列表現を返します、 <xref href=&quot;System.Windows.Thickness&quot;> </xref>構造体。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>を表す、 <xref href=&quot;System.Windows.Thickness&quot;> </xref>値</xref:System.String>。"
  overload: System.Windows.Thickness.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Thickness.#ctor(System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
- uid: System.Windows.Thickness.Bottom
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
- uid: System.Windows.Thickness.Equals(System.Object)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.GetHashCode
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Thickness.Left
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
- uid: System.Windows.Thickness.Right
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
- uid: System.Windows.Thickness.Top
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
- uid: System.Windows.Thickness.ToString
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Thickness.#ctor*
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness
  nameWithType: Thickness.Thickness
- uid: System.Windows.Thickness.Bottom*
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
- uid: System.Windows.Thickness.Equals*
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals
  nameWithType: Thickness.Equals
- uid: System.Windows.Thickness.GetHashCode*
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode
  nameWithType: Thickness.GetHashCode
- uid: System.Windows.Thickness.Left*
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
- uid: System.Windows.Thickness.op_Equality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality
  nameWithType: Thickness.op_Equality
- uid: System.Windows.Thickness.op_Inequality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality
  nameWithType: Thickness.op_Inequality
- uid: System.Windows.Thickness.Right*
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
- uid: System.Windows.Thickness.Top*
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
- uid: System.Windows.Thickness.ToString*
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString
  nameWithType: Thickness.ToString
