### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  id: ContractBasedImportDefinition
  children:
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  langs:
  - csharp
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  type: Class
  summary: "必要なインポートを表す、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>オブジェクトとは、コントラクト名とメタデータの両方を指定できます。"
  syntax:
    content: 'public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ImportDefinition
  implements: []
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality
  - System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite
  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable
  - System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>クラスです。"
  syntax:
    content: protected ContractBasedImportDefinition ();
    parameters: []
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>クラスの指定したコントラクト名、必要な型 id、必要なメタデータ、基数、および作成ポリシーを使用して、定義のインポートが再合成可能かどうかの前提条件を示します。"
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);
    parameters:
    - id: contractName
      type: System.String
      description: "コントラクト名、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>定義のインポートに必要なオブジェクトです。"
    - id: requiredTypeIdentity
      type: System.String
      description: "エクスポートの型の型の id。 使用して、<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>指定された型の型 id を生成する方法</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>。 特定の種類が不要な場合を使用して<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "メタデータの名前と定義のインポート; で必要な型を格納するキー/値ペアのコレクションまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を設定する、<xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>プロパティを空に&lt;xref:System.Collections.Generic.IEnumerable%601&gt;コレクションです</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>。"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "基数を示す列挙値のいずれか、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>定義のインポートに必要なオブジェクトです。"
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>有効期間全体で複数回定義のインポートを満たすことができることを指定する、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前に条件が満たされるインポート定義が必要なことを指定する、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>エクスポート オブジェクトの開始を生成したことができます。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "このインポートを満たすために使用されるエクスポートの特定の作成ポリシーがインポーターにする必要があるかを示す値。 特定の作成ポリシーが必要ではない場合、既定値は<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>です。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>空の文字列 (&quot;&quot;) です。       - または -<code>requiredMetadata</code>にある要素を含む<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または -<code>cardinality</code>のいずれかではない、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref>クラスの指定したコントラクト名、必要な型 id、必須および省略可能なメタデータ、基数、および作成ポリシーを使用して、定義のインポートが再合成可能かどうかの前提条件を示します。"
  syntax:
    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata);
    parameters:
    - id: contractName
      type: System.String
      description: "コントラクト名、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>定義のインポートに必要なオブジェクトです。"
    - id: requiredTypeIdentity
      type: System.String
      description: "エクスポートの型の型の id。 使用して、<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>指定された型の型 id を生成する方法</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>。 特定の種類が不要な場合を使用して<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: requiredMetadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "メタデータの名前と定義のインポート; で必要な型を格納するキー/値ペアのコレクションまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を設定する、<xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>プロパティを空に&lt;xref:System.Collections.Generic.IEnumerable%601&gt;コレクションです</xref:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*>。"
    - id: cardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: "基数を示す列挙値のいずれか、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>定義のインポートに必要なオブジェクトです。"
    - id: isRecomposable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>有効期間全体で複数回定義のインポートを満たすことができることを指定する、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: isPrerequisite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前に条件が満たされるインポート定義が必要なことを指定する、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref>エクスポート オブジェクトの開始を生成したことができます。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: requiredCreationPolicy
      type: System.ComponentModel.Composition.CreationPolicy
      description: "このインポートを満たすために使用されるエクスポートの特定の作成ポリシーがインポーターにする必要があるかを示す値。 特定の作成ポリシーが必要ではない場合、既定値は<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>です。"
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "このインポートに関連付けられたメタデータ。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contractName</code>空の文字列 (&quot;&quot;) です。       - または -<code>requiredMetadata</code>にある要素を含む<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または -<code>cardinality</code>のいずれかではない、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportCardinality&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  id: Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "このインポート定義で説明されているインポートを満たすために一致する必要がある条件を定義する式を取得します。"
  syntax:
    content: public override System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> Constraint { get; }
    return:
      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
      description: "含む式を&lt;xref:System.Func%602&gt;の一致する必要がある条件を定義するオブジェクト、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref>によって満たされると、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;></xref>です。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  id: IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "指定したエクスポート定義で表されるエクスポートによってこのオブジェクトによって表される制約を満たしているかどうかを示す値を返します。"
  syntax:
    content: public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);
    parameters:
    - id: exportDefinition
      type: System.ComponentModel.Composition.Primitives.ExportDefinition
      description: "テストするエクスポート定義します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>制約を満たしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "インポーターが特定する必要があるかを示す値を取得または<xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>このインポートを満たすために使用するエクスポートします。"
  syntax:
    content: public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "次の値のいずれかの: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>インポーターは、固有の仕様を必要としない場合、 <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>です。       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>コンテナー内のすべてのインポーターでは、すべてエクスポートに使用されることを要求するを共有する必要があります。       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>非共有コンテナーに使用されるすべてのエクスポートがであることが必要です。 この場合、各インポーターは、別のインスタンスを受け取ります。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  id: RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "定義のインポートに必要なエクスポートのメタデータの名前を取得します。"
  remarks: "このプロパティのオーバーライドが返りません`null`または戻り値の<xref:System.Collections.Generic.IEnumerable%601>である要素を格納しているコレクション`null`</xref:System.Collections.Generic.IEnumerable%601>。 定義に必要なメタデータが含まれていない場合は、空を返す<xref:System.Collections.Generic.IEnumerable%601>コレクション代わりにします</xref:System.Collections.Generic.IEnumerable%601>。"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> RequiredMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
      description: "コレクション<xref:System.String>のメタデータの名前を格納するオブジェクト、 <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref>に必要なオブジェクト、 <xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;> </xref></xref:System.String> 。 既定値は、空&lt;xref:System.Collections.Generic.IEnumerable%601&gt;コレクション。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  id: RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "これに一致するエクスポートの予期される型を取得<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>です。"
  syntax:
    content: public virtual string RequiredTypeIdentity { get; }
    return:
      type: System.String
      description: "呼び出すことによって生成される文字列、<xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>このインポートが必要ですが、型にメソッド</xref:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*>。 値が場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このインポートは、特定の型を想定していません。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  langs:
  - csharp
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Primitives
  summary: "この文字列表現を返します<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>オブジェクト。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "この文字列形式を<xref href=&quot;System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition&quot;></xref>オブジェクト。"
  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition()
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Type>>
  nameWithType: IEnumerable<KeyValuePair<String,Type>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportCardinality
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportCardinality
  nameWithType: ImportCardinality
  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ContractBasedImportDefinition(String,String,IEnumerable<KeyValuePair<String,Type>>,ImportCardinality,Boolean,Boolean,CreationPolicy,IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint
- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<ExportDefinition,Boolean>>
  nameWithType: Expression<Func<ExportDefinition,Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy(ExportDefinition)
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)
- uid: System.ComponentModel.Composition.Primitives.ExportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ExportDefinition
  nameWithType: ExportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString()
  nameWithType: ContractBasedImportDefinition.ToString()
  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString()
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ContractBasedImportDefinition
  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: Constraint
  nameWithType: ContractBasedImportDefinition.Constraint
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: IsConstraintSatisfiedBy
  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredMetadata
  nameWithType: ContractBasedImportDefinition.RequiredMetadata
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: RequiredTypeIdentity
  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity
- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*
  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
  isExternal: false
  name: ToString
  nameWithType: ContractBasedImportDefinition.ToString
