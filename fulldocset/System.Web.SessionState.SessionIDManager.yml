### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionIDManager
  id: SessionIDManager
  children:
  - System.Web.SessionState.SessionIDManager.#ctor
  - System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Decode(System.String)
  - System.Web.SessionState.SessionIDManager.Encode(System.String)
  - System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Initialize
  - System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  - System.Web.SessionState.SessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: SessionIDManager
  nameWithType: SessionIDManager
  fullName: System.Web.SessionState.SessionIDManager
  type: Class
  summary: "ASP.NET セッション状態の一意の識別子を管理します。"
  remarks: "SessionIDManager クラスは、ASP.NET セッション状態で使用するための一意のセッション識別子を管理する HTTP モジュールです。 ASP.NET セッションの一意の識別子は、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>プロパティ、<xref:System.Web.HttpContext.Session%2A>現在の<xref:System.Web.HttpContext>または<xref:System.Web.UI.Page>。</xref:System.Web.UI.Page></xref:System.Web.HttpContext>プロパティ</xref:System.Web.HttpContext.Session%2A>からアクセスできます。</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> ASP.NET セッション識別子は、小文字から成る 24 文字の文字列をエンコードしてランダムに生成された番号、z および数字の 0 ~ 5 にします。       既定では、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、ASP.NET アプリケーションに要求ごとに cookie で送信します</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 含む cookie の名前、<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値は、既定である asp.net_sessionid を使用します</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。 別の cookie 名を構成するには、設定、`cookieName`の属性、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)目的 cookie の名前にします。       場合は、ASP.NET アプリケーションでは cookie の使用を無効にし、依然としてセッション状態を使用して、cookie ではなく、URL に設定してセッション識別子を格納するアプリケーションを構成することができます、`cookieless`の属性、`sessionState`要素`true`アプリケーションの Web.config ファイルにします。 詳細については、次を参照してください、<xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>プロパティ。</xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> 。"
  syntax:
    content: 'public class SessionIDManager : System.Web.SessionState.ISessionIDManager'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionIDManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。       ASP.NET は、<xref:System.Web.SessionState.SessionIDManager>クラス</xref:System.Web.SessionState.SessionIDManager>のインスタンスを作成するこのコンス トラクターを呼び出します ASP.NET を呼び出し、コンス トラクターを呼び出すと、<xref:System.Web.SessionState.SessionIDManager.Initialize%2A>新しい初期化するメソッドを<xref:System.Web.SessionState.SessionIDManager>オブジェクト</xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.SessionIDManager.Initialize%2A>。"
  syntax:
    content: public SessionIDManager ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションの一意のセッション識別子を作成します。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       CreateSessionID メソッドは、小文字から成る 24 文字の文字列をエンコードしてランダムに生成された数値の一意のセッション識別子を返します、z および数字の 0 ~ 5 にします。"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the CreateSessionID and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/e6d29e71-07f8-4130-8db5-_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/e6d29e71-07f8-4130-8db5-_1.vb)]  \n  \n To use the custom class demonstrated in this example, configure the sessionIDManagerType attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element, as shown in the following example.  \n  \n```  \n<sessionState  \n  Mode=\"InProc\"  \n  stateConnectionString=\"tcp=127.0.0.1:42424\"  \n  stateNetworkTimeout=\"10\"  \n  sqlConnectionString=\"data source=127.0.0.1;Integrated Security=SSPI\"  \n  sqlCommandTimeout=\"30\"  \n  customProvider=\"\"  \n  cookieless=\"false\"  \n  regenerateExpiredSessionId=\"false\"  \n  timeout=\"20\"  \n  sessionIDManagerType=\"Your.ID.Manager.Type,  \n    CustomAssemblyNameInBinFolder\"  \n/>  \n```"
  syntax:
    content: public virtual string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    return:
      type: System.String
      description: "一意のセッション識別子です。"
  overload: System.Web.SessionState.SessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  id: Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "クッキーまたは URL から取得したセッションの URL でエンコードされた識別子をデコードします。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       このメソッドは内部で使用される、<xref:System.Web.SessionState.SessionIDManager>カスタムをデコードするクラス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>継承クラスによって作成された値、<xref:System.Web.SessionState.SessionIDManager>クラスし、オーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド</xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.SessionIDManager>。 HTTP 要求から取得したカスタムのセッション識別子の値の忠実性を確認してください、 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>、メソッド、<xref:System.Web.SessionState.SessionIDManager>カスタム値を使用して、デコード、<xref:System.Web.HttpUtility.UrlDecode%2A>メソッド</xref:System.Web.HttpUtility.UrlDecode%2A></xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>。"
  syntax:
    content: public virtual string Decode (string id);
    parameters:
    - id: id
      type: System.String
      description: "セッション識別子をデコードします。"
    return:
      type: System.String
      description: "デコードされたセッションの識別子です。"
  overload: System.Web.SessionState.SessionIDManager.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  id: Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "クッキーまたは URL のいずれかに保存するためのセッション識別子をエンコードします。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       このメソッドは内部で使用される、<xref:System.Web.SessionState.SessionIDManager>ユーザー設定をエンコードするクラス<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>継承クラスによって作成された値、<xref:System.Web.SessionState.SessionIDManager>クラスし、オーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド</xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.SessionIDManager>。 HTTP 応答本文で格納されているカスタムのセッション id 値の忠実性を確認する、 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>、メソッド、<xref:System.Web.SessionState.SessionIDManager>を使用して、カスタム値をエンコード、<xref:System.Web.HttpUtility.UrlEncode%2A>メソッド</xref:System.Web.HttpUtility.UrlEncode%2A></xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>。       継承するクラスの例については、<xref:System.Web.SessionState.SessionIDManager>クラスおよびオーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>と<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドを参照してください、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッド</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager>。"
  syntax:
    content: public virtual string Encode (string id);
    parameters:
    - id: id
      type: System.String
      description: "エンコードするセッション識別子です。"
    return:
      type: System.String
      description: "エンコードされたセッションの識別子です。"
  overload: System.Web.SessionState.SessionIDManager.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の Web 要求からのセッション識別子の値を取得します。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       <xref:System.Web.SessionState.SessionStateModule><xref:System.Web.HttpApplication.AcquireRequestState><xref:System.Web.SessionState.HttpSessionState.SessionID%2A>現在の<xref:System.Web.HttpRequest>。</xref:System.Web.HttpRequest>から</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>取得するイベント</xref:System.Web.HttpApplication.AcquireRequestState>を処理中に GetSessionID メソッドを呼び出します</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    return:
      type: System.String
      description: "現在<xref:System.Web.SessionState.HttpSessionState.SessionID*>。</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
  overload: System.Web.SessionState.SessionIDManager.GetSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "セッション id 値の長さの取得 HTTP から要求を超えています、<xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>値</xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "初期化、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>構成ファイルから情報を持つオブジェクト。"
  remarks: "Initialize メソッド、セッション構成からデータを読み取る、 [sessionState 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)構成ファイルの構成要素。"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "要求ごとの初期化を実行、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>オブジェクト。"
  remarks: "ときに、`cookieless`の属性、`sessionState`要素に設定されている`AutoDetect`、<xref:System.Web.SessionState.SessionIDManager>オブジェクトは、接続元のブラウザーが cookie をサポートしているかどうかを決定する同じパスにリダイレクトされます</xref:System.Web.SessionState.SessionIDManager>。 場合、`suppressAutoDetectRedirect`パラメーター`false`サーバーがこのリダイレクトを実行できません。       `supportSessionIDReissue`パラメーターが返されます`false`要求は、セッション id で cookie を使用している場合。"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求に関する情報を含むオブジェクト。"
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>cookie のサポートの決定にリダイレクトするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>クッキー サポートの決定に自動リダイレクトを抑制します。"
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "このメソッドが戻るときを示すブール値を格納するかどうか、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>オブジェクトは、元の ID が古い場合に、発行元の新しいセッション Id をサポートしています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>示すために、 <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref>オブジェクトには、cookie のサポートを確認へのリダイレクトが行われた場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "HTTP 応答からのセッション識別子 cookie を削除します。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       <xref:System.Web.SessionState.SessionStateModule>中に RemoveSessionID メソッドを呼び出して、<xref:System.Web.HttpApplication.ReleaseRequestState>からのセッション識別子を削除するイベント、<xref:System.Web.HttpResponse.Cookies%2A>のコレクション、<xref:System.Web.HttpResponse>かどうか、新しいセッションが作成されましたが使用されませんでした</xref:System.Web.HttpResponse></xref:System.Web.HttpResponse.Cookies%2A></xref:System.Web.HttpApplication.ReleaseRequestState></xref:System.Web.SessionState.SessionStateModule>。"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
  overload: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "HTTP 応答には、新しく作成されたセッション識別子を保存します。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       SaveSessionID メソッドによって呼び出されます、<xref:System.Web.SessionState.SessionStateModule>中に、<xref:System.Web.HttpApplication.AcquireRequestState>イベント</xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.SessionState.SessionStateModule>。 SaveSessionID メソッドは、(cookie なしのセッション状態が使用される) 場合、いずれかの URL または期限切れのないセッションの cookie、セッション識別子を格納します。       既定では、<xref:System.Web.SessionState.SessionIDManager>無期限セッション cookie に一意のセッション識別子を配置し、設定、`cookieAdded`パラメーターを`true`</xref:System.Web.SessionState.SessionIDManager>。       Cookie なしのセッション状態の<xref:System.Web.SessionState.SessionIDManager>オブジェクトの一意のセッション識別子を現在の URL に挿入、ブラウザー、新しい URL にリダイレクトするセッション識別子が含まれていて、設定、`redirected`パラメーターを`true`</xref:System.Web.SessionState.SessionIDManager>。"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 要求を処理するサーバー オブジェクトを参照するオブジェクトを使用 (たとえば、 <> </> *> と<> *> プロパティ)。"
    - id: id
      type: System.String
      description: "セッションの識別子です。"
    - id: redirected
      type: System.Boolean
      description: "このメソッドが戻るときに、ブール値が含まれています<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref>応答が、URL に追加したセッション識別子を持つ現在の URL にリダイレクトされる、それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: cookieAdded
      type: System.Boolean
      description: "このメソッドが戻るときに、ブール値が含まれています<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;></xref> HTTP 応答に追加されます。 それ以外の場合、cookie があった場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionIDManager.SaveSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "応答は既に送信されています。       または、このメソッドが失敗しました検証に渡されたセッション ID。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  id: SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "有効なセッションの識別子の最大長を取得します。"
  remarks: "セッション識別子の最大長は、80 文字です。       によって作成されたセッション id を中に、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッドは 24 文字の長さで許可されているセッション識別子の最大長、<xref:System.Web.SessionState.SessionIDManager>クラスは、80 文字です</xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>。 これは、カスタム<xref:System.Web.SessionState.SessionIDManager>。</xref:System.Web.SessionState.SessionIDManager>を実装する場合に特に重要です。 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>を現在のセッション識別子の値を取得するメソッドを<xref:System.Web.HttpRequest>、値は、SessionIDMaxLength 値を超えていないことと、セッション識別子が、小文字のみを含む 24 文字の文字列であることを確認、z および数字 0 ~ 5 を呼び出して、<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッド</xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.HttpRequest></xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>。 カスタムを実装する場合<xref:System.Web.SessionState.SessionIDManager>を継承するクラス、<xref:System.Web.SessionState.SessionIDManager>クラスおよびオーバーライド、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッドですが、<xref:System.Web.SessionState.SessionIDManager.Validate%2A>メソッドをカスタムのセッション識別子の値は、上記の制約を満たす必要があります</xref:System.Web.SessionState.SessionIDManager.Validate%2A></xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager></xref:System.Web.SessionState.SessionIDManager>。 オーバーライドする例については、<xref:System.Web.SessionState.SessionIDManager>クラスし、これらのメソッドを実装する方法についてを参照してください、<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>メソッド</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A></xref:System.Web.SessionState.SessionIDManager>。"
  syntax:
    content: public static int SessionIDMaxLength { get; }
    return:
      type: System.Int32
      description: "有効なセッションの識別子の最大長。"
  overload: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション識別子が有効かどうかを示す値を取得します。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       Validate メソッドであることを確認、指定された`id`24 文字の文字列から文字を小文字から成る、z および数字の 0 ~ 5 とその最大の長さ、セッション ID を超えない 80 文字です。       <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>メソッドが提供されているセッション識別子が正しくフォーマットされていることを確認する、HTTP 要求からのセッション識別子を取得するときに、検証メソッドを呼び出します</xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>。"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and Validate methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/m-system.web.sessionstat_5_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/m-system.web.sessionstat_5_1.vb)]  \n  \n To use the custom class demonstrated in this example, replace the `SessionID` HTTP module in your Web.config file with your custom class, as shown in the following example.  \n  \n```  \n<httpModules>  \n  <remove name=\"SessionID\" />  \n  <add name=\"SessionID\"  \n       type=\"Samples.AspNet.Session.GuidSessionIDManager\" />  \n</httpModules>  \n```"
  syntax:
    content: public virtual bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "検証するセッション識別子。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セッション識別子が無効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionIDManager.#ctor
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.Initialize
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
- uid: System.Web.SessionState.SessionIDManager.#ctor*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager
  nameWithType: SessionIDManager.SessionIDManager
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: SessionIDManager.CreateSessionID
- uid: System.Web.SessionState.SessionIDManager.Decode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode
  nameWithType: SessionIDManager.Decode
- uid: System.Web.SessionState.SessionIDManager.Encode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode
  nameWithType: SessionIDManager.Encode
- uid: System.Web.SessionState.SessionIDManager.GetSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: SessionIDManager.GetSessionID
- uid: System.Web.SessionState.SessionIDManager.Initialize*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: SessionIDManager.Initialize
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionIDManager.InitializeRequest
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: SessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: SessionIDManager.SaveSessionID
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
- uid: System.Web.SessionState.SessionIDManager.Validate*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate
  nameWithType: SessionIDManager.Validate
