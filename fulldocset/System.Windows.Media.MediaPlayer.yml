### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.MediaPlayer
  id: MediaPlayer
  children:
  - System.Windows.Media.MediaPlayer.#ctor
  - System.Windows.Media.MediaPlayer.Balance
  - System.Windows.Media.MediaPlayer.BufferingEnded
  - System.Windows.Media.MediaPlayer.BufferingProgress
  - System.Windows.Media.MediaPlayer.BufferingStarted
  - System.Windows.Media.MediaPlayer.CanPause
  - System.Windows.Media.MediaPlayer.Clock
  - System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.Close
  - System.Windows.Media.MediaPlayer.CreateInstanceCore
  - System.Windows.Media.MediaPlayer.DownloadProgress
  - System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.HasAudio
  - System.Windows.Media.MediaPlayer.HasVideo
  - System.Windows.Media.MediaPlayer.IsBuffering
  - System.Windows.Media.MediaPlayer.IsMuted
  - System.Windows.Media.MediaPlayer.MediaEnded
  - System.Windows.Media.MediaPlayer.MediaFailed
  - System.Windows.Media.MediaPlayer.MediaOpened
  - System.Windows.Media.MediaPlayer.NaturalDuration
  - System.Windows.Media.MediaPlayer.NaturalVideoHeight
  - System.Windows.Media.MediaPlayer.NaturalVideoWidth
  - System.Windows.Media.MediaPlayer.Open(System.Uri)
  - System.Windows.Media.MediaPlayer.Pause
  - System.Windows.Media.MediaPlayer.Play
  - System.Windows.Media.MediaPlayer.Position
  - System.Windows.Media.MediaPlayer.ReadPreamble
  - System.Windows.Media.MediaPlayer.ScriptCommand
  - System.Windows.Media.MediaPlayer.ScrubbingEnabled
  - System.Windows.Media.MediaPlayer.Source
  - System.Windows.Media.MediaPlayer.SpeedRatio
  - System.Windows.Media.MediaPlayer.Stop
  - System.Windows.Media.MediaPlayer.Volume
  - System.Windows.Media.MediaPlayer.WritePreamble
  langs:
  - csharp
  name: MediaPlayer
  nameWithType: MediaPlayer
  fullName: System.Windows.Media.MediaPlayer
  type: Class
  summary: "描画のメディアの再生を提供します。"
  remarks: "このクラスのインスタンスを宣言することができますが[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]、読み込みし、コードを使用せず、そのメディアを再生することはできません。 メディアを再生する[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.Controls.MediaElement>.</xref:System.Windows.Controls.MediaElement>をのみ、使用 またのインスタンスを宣言する場合[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]、唯一の現実的な使用のプロパティ要素構文を入力する、<xref:System.Windows.Media.VideoDrawing.Player%2A>プロパティ</xref:System.Windows.Media.VideoDrawing.Player%2A>。       アプリケーションを使用してメディアを配布するときは、プロジェクト リソースとしてメディア ファイルを使うことはできません。 プロジェクト ファイルで設定する必要あります代わりに、メディアの種類`Content`設定と`CopyToOutputDirectory`に`PreserveNewest`または`Always`です。       Media Player は、player を与えているに応じて、2 つの異なるモードで使用できます: 独立モードまたはクロック モード。 独立したモードでは、media Player は、イメージに似ていますし、メディアが開かれて、<xref:System.Windows.Media.MediaPlayer.Open%2A>メソッド ドライブ再生</xref:System.Windows.Media.MediaPlayer.Open%2A>。 クロック モードで MediaPlayer でく、アニメーションの対象と考えるためには対応する<xref:System.Windows.Media.Animation.Timeline>と<xref:System.Windows.Media.Animation.Clock>タイミング内のエントリのツリー コントロール再生</xref:System.Windows.Media.Animation.Clock></xref:System.Windows.Media.Animation.Timeline>。 メディア モードの詳細については、次を参照してください。、[マルチ メディア概要](~/add/includes/ajax-current-ext-md.md)です。       Media Player とは異なる、<xref:System.Windows.Controls.MediaElement>に直接追加できるコントロールではないことで、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]アプリケーションの</xref:System.Windows.Controls.MediaElement>。 Media Player を使用して読み込まれたメディアを表示する、<xref:System.Windows.Media.VideoDrawing>または<xref:System.Windows.Media.DrawingContext>使用する必要があります</xref:System.Windows.Media.DrawingContext></xref:System.Windows.Media.VideoDrawing>。"
  example:
  - '[How to: Play Media using a VideoDrawing](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: 'public class MediaPlayer : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.Clone
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.#ctor
  id: '#ctor'
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>クラスです。"
  syntax:
    content: public MediaPlayer ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Balance
  id: Balance
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または左と右のスピーカーのボリュームのバランスを設定します。"
  remarks: "値-1 は、左側にあるスピーカーの 100% と右側にあるスピーカーの 1 は 100% を表します。"
  syntax:
    content: public double Balance { get; set; }
    return:
      type: System.Double
      description: "-1 ~ 1 の間の範囲内で、左右のスピーカーのボリュームの比率。 既定値は 0 です。"
  overload: System.Windows.Media.MediaPlayer.Balance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  id: BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "バッファリングが完了したときに発生します。"
  syntax:
    content: public event EventHandler BufferingEnded;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  id: BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "バッファリングがコンテンツのストリーミングに完了した割合を取得します。"
  syntax:
    content: public double BufferingProgress { get; }
    return:
      type: System.Double
      description: "バッファリングが 0 ~ 1 の値で表されるコンテンツのストリーミングに完了した割合。"
  overload: System.Windows.Media.MediaPlayer.BufferingProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  id: BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "バッファリングが開始されたときに発生します。"
  syntax:
    content: public event EventHandler BufferingStarted;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CanPause
  id: CanPause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアを一時停止できるかどうかを示す値を取得します。"
  syntax:
    content: public bool CanPause { get; }
    return:
      type: System.Boolean
      description: "メディアを一時停止できる場合は true。それ以外の場合は false です。"
  overload: System.Windows.Media.MediaPlayer.CanPause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Clock
  id: Clock
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.MediaClock&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Windows.Media.MediaTimeline&quot;> </xref>再生できるようにします。"
  remarks: "このプロパティを設定、<xref:System.Windows.Media.MediaPlayer>クロックであるクロック モードでプレーヤーを配置すること、タイミング エンジンを利用します</xref:System.Windows.Media.MediaPlayer>。 メディアを再生しているが停止していると、<xref:System.Uri>新しいに関連付けられているクロックが開かれている</xref:System.Uri>。       プレーヤーがクロック モードのときは、シークを使用して<xref:System.Windows.Media.MediaPlayer.Position%2A>呼び出したり、 <xref:System.Windows.Media.MediaPlayer.Play%2A>、 <xref:System.Windows.Media.MediaPlayer.Pause%2A>、 <xref:System.Windows.Media.MediaPlayer.Stop%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>をスローするメソッド</xref:System.Windows.Media.MediaPlayer.Stop%2A>または</xref:System.Windows.Media.MediaPlayer.Pause%2A></xref:System.Windows.Media.MediaPlayer.Play%2A></xref:System.Windows.Media.MediaPlayer.Position%2A> これらの操作は、時計、プレーヤーが null の場合にのみ使用できます。"
  syntax:
    content: public System.Windows.Media.MediaClock Clock { get; set; }
    return:
      type: System.Windows.Media.MediaClock
      description: "関連付けられているクロック、 <xref href=&quot;System.Windows.Media.MediaTimeline&quot;> </xref>再生できるようにします。 既定値は null です。"
  overload: System.Windows.Media.MediaPlayer.Clock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "このインスタンスの指定した詳細コピー <xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>です。 依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。"
  remarks: "このメソッドは、<xref:System.Windows.Freezable.Clone%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、</xref:System.Windows.Freezable.Clone%2A> 。 現在のオブジェクトの変更可能なコピーを作成するには<xref:System.Windows.Freezable.Clone%2A>このメソッドを直接呼び出す代わりにします</xref:System.Windows.Freezable.Clone%2A>。       詳細については、 <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>を複製します。"
  overload: System.Windows.Media.MediaPlayer.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "このインスタンスの指定した場合は、変更可能な詳細コピー <xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>プロパティの現在の値を使用します。 リソース参照、データ バインディング、およびアニメーションはコピーされませんが、現在の値。"
  remarks: "このメソッドは、<xref:System.Windows.Freezable.CloneCurrentValue%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、</xref:System.Windows.Freezable.CloneCurrentValue%2A> 。 現在のオブジェクトの変更可能なコピーを作成するには<xref:System.Windows.Freezable.CloneCurrentValue%2A>このメソッドを直接呼び出す代わりにします</xref:System.Windows.Freezable.CloneCurrentValue%2A>。       詳細については、 <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>を複製します。"
  overload: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Close
  id: Close
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "基になるメディアを閉じます。"
  remarks: "<xref:System.Windows.Media.MediaPlayer>を呼び出してもう一度開くことができます、<xref:System.Windows.Media.MediaPlayer.Open%2A>メソッド</xref:System.Windows.Media.MediaPlayer.Open%2A></xref:System.Windows.Media.MediaPlayer>。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "新たに作成<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>インスタンス。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新しい<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>インスタンス。"
  overload: System.Windows.Media.MediaPlayer.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  id: DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "リモート サーバーにあるコンテンツのダウンロードの進行状況の割合を取得します。"
  syntax:
    content: public double DownloadProgress { get; }
    return:
      type: System.Double
      description: "0 ~ 1 の値で表されるリモート サーバーにあるコンテンツのダウンロードの進行状況の割合。 既定値は 0 です。"
  overload: System.Windows.Media.MediaPlayer.DownloadProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "このインスタンスの指定した<xref href=&quot;System.Windows.Media.MediaPlayer&quot;></xref>オブジェクト。"
  remarks: "依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。 これらのプロパティには、データ バインディングまたはリソースの参照が含まれている場合ことに注意して<xref:System.Windows.Freezable.GetAsFrozen%2A>に失敗する、オブジェクトを圧縮しようとしていると、 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>がスローされます</xref:System.Windows.Freezable.GetAsFrozen%2A>       このメソッドは、<xref:System.Windows.Freezable.GetAsFrozen%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、</xref:System.Windows.Freezable.GetAsFrozen%2A> 。 現在のオブジェクトの固定コピーを作成するには<xref:System.Windows.Freezable.GetAsFrozen%2A>このメソッドを直接呼び出す代わりにします</xref:System.Windows.Freezable.GetAsFrozen%2A>。       詳細については、 <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.MediaPlayer&quot;> </xref>複製し、凍結するオブジェクト。"
  overload: System.Windows.Media.MediaPlayer.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.HasAudio
  id: HasAudio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアにオーディオ出力が含まれているかどうかを示す値を取得します。"
  syntax:
    content: public bool HasAudio { get; }
    return:
      type: System.Boolean
      description: "メディアにオーディオ出力がある場合は trueそれ以外の場合は false です。"
  overload: System.Windows.Media.MediaPlayer.HasAudio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.HasVideo
  id: HasVideo
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアがビデオ出力を持つかどうかを示す値を取得します。"
  syntax:
    content: public bool HasVideo { get; }
    return:
      type: System.Boolean
      description: "メディアには、ビデオ出力が含まれている場合は true。それ以外の場合は false です。"
  overload: System.Windows.Media.MediaPlayer.HasVideo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  id: IsBuffering
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアをバッファリングするかどうかを示す値を取得します。"
  syntax:
    content: public bool IsBuffering { get; }
    return:
      type: System.Boolean
      description: "true の場合は、メディアのバッファリングが;それ以外の場合は false です。"
  overload: System.Windows.Media.MediaPlayer.IsBuffering*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.IsMuted
  id: IsMuted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアがミュートになっているかどうかを示す値を取得します。"
  syntax:
    content: public bool IsMuted { get; set; }
    return:
      type: System.Boolean
      description: "メディアがミュートの場合は true。それ以外の場合は false です。"
  overload: System.Windows.Media.MediaPlayer.IsMuted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  id: MediaEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアの再生が完了したときに発生します。"
  syntax:
    content: public event EventHandler MediaEnded;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  id: MediaFailed
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "エラーが発生したときに発生します。"
  remarks: "<a name=&quot;xamlAttributeUsage_MediaFailed&quot;></a>## XAML 属性の使用方法```   <object MediaFailed=&quot;EventHandler&quot;/>   ```"
  syntax:
    content: public event EventHandler<System.Windows.Media.ExceptionEventArgs> MediaFailed;
    return:
      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  id: MediaOpened
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアが開かれたときに発生します。"
  syntax:
    content: public event EventHandler MediaOpened;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアの自然な期間を取得します。"
  remarks: "NaturalDuration まで識別できない後<xref:System.Windows.Media.MediaPlayer.MediaOpened>が発生しました</xref:System.Windows.Media.MediaPlayer.MediaOpened>。"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "メディアの自然な期間です。 既定値は<xref:System.Windows.Duration.Automatic*>。</xref:System.Windows.Duration.Automatic*>"
  overload: System.Windows.Media.MediaPlayer.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  id: NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビデオのピクセルの高さを取得します。"
  remarks: "メディアの種類がオーディオの場合は、null が返されます。"
  syntax:
    content: public int NaturalVideoHeight { get; }
    return:
      type: System.Int32
      description: "ビデオのピクセルの高さ。"
  overload: System.Windows.Media.MediaPlayer.NaturalVideoHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  id: NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビデオの幅をピクセル単位を取得します。"
  remarks: "メディアの種類がオーディオの場合は、null が返されます。"
  syntax:
    content: public int NaturalVideoWidth { get; }
    return:
      type: System.Int32
      description: "ビデオのピクセル幅。"
  overload: System.Windows.Media.MediaPlayer.NaturalVideoWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  id: Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "開き、指定された<xref:System.Uri>メディア再生の</xref:System.Uri>。"
  syntax:
    content: public void Open (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "メディア ソース<xref:System.Uri>。</xref:System.Uri>"
  overload: System.Windows.Media.MediaPlayer.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Pause
  id: Pause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアの再生を一時停止します。"
  remarks: "プレーヤーがある<xref:System.Windows.Media.MediaPlayer.Clock%2A><xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>がスローされます</xref:System.Windows.Media.MediaPlayer.Clock%2A>が関連付けられている場合に、一時停止を呼び出す タイミング エンジン ドライブ メディアの再生中に、一時停止を呼び出すことができません。"
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Play
  id: Play
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "現在の<xref:System.Windows.Media.MediaPlayer.Position*>。</xref:System.Windows.Media.MediaPlayer.Position*>からメディアを再生します。"
  remarks: "再生を呼び出すこと、プレーヤーがある、関連する<xref:System.Windows.Media.MediaPlayer.Clock%2A><xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>がスローされます。</xref:System.Windows.Media.MediaPlayer.Clock%2A> タイミング エンジン ドライブ メディアの再生中に、再生を呼び出すことができません。"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Play*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Position
  id: Position
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得またはメディアの現在の位置を設定します。"
  remarks: "場合は、プレーヤーがある、関連付けられている<xref:System.Windows.Media.MediaPlayer.Clock%2A>位置を設定すると、 <xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>がスローされます。</xref:System.Windows.Media.MediaPlayer.Clock%2A> タイミング エンジン ドライブ メディアの再生中に、位置を設定することはできません。      <a name=&quot;xamlTextUsage_Position&quot;></a>## XAML テキスト使用状況いないで通常使用される[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: public TimeSpan Position { get; set; }
    return:
      type: System.TimeSpan
      description: "メディアの現在の位置。"
  overload: System.Windows.Media.MediaPlayer.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  id: ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "MediaPlayer が有効なスレッドからアクセスしていることを確認します。"
  syntax:
    content: protected void ReadPreamble ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.ReadPreamble*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  id: ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "スクリプト コマンドがメディア内で発生した場合に発生します。"
  remarks: "<a name=&quot;xamlAttributeUsage_ScriptCommand&quot;></a>## XAML 属性の使用方法```   <object ScriptCommand=&quot;EventHandler&quot;/>   ```"
  syntax:
    content: public event EventHandler<System.Windows.Media.MediaScriptCommandEventArgs> ScriptCommand;
    return:
      type: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  id: ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得またはスクラブが有効になっているかどうかを示す値を設定します。"
  syntax:
    content: public bool ScrubbingEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スクラブが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.MediaPlayer.ScrubbingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Source
  id: Source
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディア<xref:System.Uri>。</xref:System.Uri>の取得します。"
  remarks: "ソースとは、読み取り専用です。 このプロパティを取得<xref:System.Uri>、<xref:System.Windows.Media.MediaPlayer.Open%2A>メソッドまたは<xref:System.Uri><xref:System.Windows.Media.MediaPlayer.Clock%2A>。</xref:System.Windows.Media.MediaPlayer.Clock%2A>に関連付けられている</xref:System.Uri></xref:System.Windows.Media.MediaPlayer.Open%2A>開かれている</xref:System.Uri>"
  syntax:
    content: public Uri Source { get; }
    return:
      type: System.Uri
      description: "現在のメディア<xref:System.Uri>。</xref:System.Uri>"
  overload: System.Windows.Media.MediaPlayer.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定の速度比率でメディアを再生します。"
  remarks: "値のいずれかのより速く標準の再生より大きい値の標準の再生より&1; つ未満遅くです。       プレーヤーが関連付けられている<xref:System.Windows.Media.MediaPlayer.Clock%2A>、SpeedRatio を設定することはできません</xref:System.Windows.Media.MediaPlayer.Clock%2A>。 タイミング エンジン ドライブ メディアの再生中に、SpeedRatio を設定することはできません。       オーディオの再生とは限りませんとき<xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>は`1`</xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>。      <a name=&quot;xamlTextUsage_SpeedRatio&quot;></a>## XAML テキスト使用状況いないで通常使用される[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "メディアの再生速度の比率 0 と最大の double 値間の値で表される。 既定値は 1.0 です。"
  overload: System.Windows.Media.MediaPlayer.SpeedRatio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Stop
  id: Stop
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "メディアの再生を停止します。"
  remarks: "プレーヤーがある<xref:System.Windows.Media.MediaPlayer.Clock%2A><xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>がスローされます</xref:System.Windows.Media.MediaPlayer.Clock%2A>が関連付けられている場合、Stop を呼び出す タイミング エンジン ドライブ メディアの再生中に、停止を呼び出すことができません。"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.Volume
  id: Volume
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得またはメディアのボリュームを設定します。"
  remarks: "<a name=&quot;xamlTextUsage_Volume&quot;></a>## XAML テキスト使用状況いないで通常使用される[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: public double Volume { get; set; }
    return:
      type: System.Double
      description: "メディアのボリュームが 0 ~ 1 の間の線形スケール上で表されます。 既定値は 0.5 です。"
  overload: System.Windows.Media.MediaPlayer.Volume*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  id: WritePreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "MediaPlayer が固定されていないと、有効なスレッド コンテキストからアクセスしていることを確認します。"
  syntax:
    content: protected void WritePreamble ();
    parameters: []
  overload: System.Windows.Media.MediaPlayer.WritePreamble*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.MediaPlayer.#ctor
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
- uid: System.Windows.Media.MediaPlayer.Balance
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
- uid: System.Windows.Media.MediaPlayer.CanPause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.Clock
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
- uid: System.Windows.Media.MediaClock
  parent: System.Windows.Media
  isExternal: false
  name: MediaClock
  nameWithType: MediaClock
  fullName: System.Windows.Media.MediaClock
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.MediaPlayer.Close
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.MediaPlayer.HasAudio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
- uid: System.Windows.Media.MediaPlayer.HasVideo
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
- uid: System.Windows.Media.MediaPlayer.IsMuted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
- uid: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ExceptionEventArgs>
  nameWithType: EventHandler<ExceptionEventArgs>
  fullName: System.EventHandler<System.Windows.Media.ExceptionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.ExceptionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.ExceptionEventArgs
    name: ExceptionEventArgs
    nameWithType: ExceptionEventArgs
    fullName: ExceptionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.MediaPlayer.Pause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
- uid: System.Windows.Media.MediaPlayer.Play
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
- uid: System.Windows.Media.MediaPlayer.Position
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
- uid: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<MediaScriptCommandEventArgs>
  nameWithType: EventHandler<MediaScriptCommandEventArgs>
  fullName: System.EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.MediaScriptCommandEventArgs
    name: MediaScriptCommandEventArgs
    nameWithType: MediaScriptCommandEventArgs
    fullName: MediaScriptCommandEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
- uid: System.Windows.Media.MediaPlayer.Source
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
- uid: System.Windows.Media.MediaPlayer.Stop
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
- uid: System.Windows.Media.MediaPlayer.Volume
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
- uid: System.Windows.Media.MediaPlayer.#ctor*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaPlayer
  nameWithType: MediaPlayer.MediaPlayer
- uid: System.Windows.Media.MediaPlayer.Balance*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Balance
  nameWithType: MediaPlayer.Balance
- uid: System.Windows.Media.MediaPlayer.BufferingProgress*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
- uid: System.Windows.Media.MediaPlayer.CanPause*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CanPause
  nameWithType: MediaPlayer.CanPause
- uid: System.Windows.Media.MediaPlayer.Clock*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Clock
  nameWithType: MediaPlayer.Clock
- uid: System.Windows.Media.MediaPlayer.CloneCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCore
  nameWithType: MediaPlayer.CloneCore
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: MediaPlayer.CloneCurrentValueCore
- uid: System.Windows.Media.MediaPlayer.Close*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Close
  nameWithType: MediaPlayer.Close
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CreateInstanceCore
  nameWithType: MediaPlayer.CreateInstanceCore
- uid: System.Windows.Media.MediaPlayer.DownloadProgress*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: MediaPlayer.GetAsFrozenCore
- uid: System.Windows.Media.MediaPlayer.HasAudio*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
- uid: System.Windows.Media.MediaPlayer.HasVideo*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
- uid: System.Windows.Media.MediaPlayer.IsBuffering*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
- uid: System.Windows.Media.MediaPlayer.IsMuted*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
- uid: System.Windows.Media.MediaPlayer.NaturalDuration*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
- uid: System.Windows.Media.MediaPlayer.Open*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Open
  nameWithType: MediaPlayer.Open
- uid: System.Windows.Media.MediaPlayer.Pause*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Pause
  nameWithType: MediaPlayer.Pause
- uid: System.Windows.Media.MediaPlayer.Play*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Play
  nameWithType: MediaPlayer.Play
- uid: System.Windows.Media.MediaPlayer.Position*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Position
  nameWithType: MediaPlayer.Position
- uid: System.Windows.Media.MediaPlayer.ReadPreamble*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ReadPreamble
  nameWithType: MediaPlayer.ReadPreamble
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
- uid: System.Windows.Media.MediaPlayer.Source*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Source
  nameWithType: MediaPlayer.Source
- uid: System.Windows.Media.MediaPlayer.SpeedRatio*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
- uid: System.Windows.Media.MediaPlayer.Stop*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Stop
  nameWithType: MediaPlayer.Stop
- uid: System.Windows.Media.MediaPlayer.Volume*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Volume
  nameWithType: MediaPlayer.Volume
- uid: System.Windows.Media.MediaPlayer.WritePreamble*
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: WritePreamble
  nameWithType: MediaPlayer.WritePreamble
