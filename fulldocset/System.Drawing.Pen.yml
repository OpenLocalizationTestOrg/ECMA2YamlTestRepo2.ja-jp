### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: "直線と曲線の描画に使用するオブジェクトを定義します。 このクラスは継承できません。"
  remarks: "ペンでは、指定された幅とスタイルの直線を描画します。 使用して、<xref:System.Drawing.Drawing2D.DashStyle>破線のいくつかの種類を描画するプロパティ</xref:System.Drawing.Drawing2D.DashStyle>。 ペンで描画される線は、さまざまな塗りつぶしスタイル (純色、テクスチャをなど) で入力できます。 塗りつぶしのスタイルは、ブラシまたはテクスチャ、塗りつぶしオブジェクトとして使用されているかによって異なります。"
  example:
  - "The following code example demonstrates constructing a Pen with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a Pen.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/t-system.drawing.pen_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/t-system.drawing.pen_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/t-system.drawing.pen_1.cpp)]"
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Brush&quot;></xref>です。"
  remarks: "<xref:System.Drawing.Pen.Brush%2A>プロパティを決定する方法、<xref:System.Drawing.Pen>線を描画します</xref:System.Drawing.Pen></xref:System.Drawing.Pen.Brush%2A>。 塗りつぶされた四角形、指定した<xref:System.Drawing.Brush>。</xref:System.Drawing.Brush>の特性を持つ場合、線は描画します。       <xref:System.Drawing.Pen.Width%2A>新しいプロパティ<xref:System.Drawing.Pen>が 1 (既定) に設定します</xref:System.Drawing.Pen></xref:System.Drawing.Pen.Width%2A>。"
  example:
  - "The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.sha_2_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_2_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.sha_2_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref>これの塗りつぶしプロパティを決定する<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Pen&quot;> </xref>指定された色を持つクラス。"
  remarks: "<xref:System.Drawing.Color>プロパティによって指定された色に設定されて、`color`パラメーター</xref:System.Drawing.Color> 。 <xref:System.Drawing.Pen.Width%2A>プロパティが 1 (既定) に設定します</xref:System.Drawing.Pen.Width%2A>。"
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>これの色を示す構造<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Brush&quot;> </xref> <xref:System.Drawing.Pen.Width*></xref:System.Drawing.Pen.Width*> 。"
  remarks: "<xref:System.Drawing.Brush>で指定された色に設定されている、 `brush` 、パラメーター、<xref:System.Drawing.Pen.Width%2A>で指定された値に設定されて、`width`パラメーター、および単位<xref:System.Drawing.GraphicsUnit>.</xref:System.Drawing.GraphicsUnit>が設定されて</xref:System.Drawing.Pen.Width%2A></xref:System.Drawing.Brush>       なお、`brush`パラメーターは、<xref:System.Drawing.Color>この<xref:System.Drawing.Pen>。</xref:System.Drawing.Pen>プロパティ</xref:System.Drawing.Color>もを指定します。       A `width` 0 になります、<xref:System.Drawing.Pen>幅が 1 であるかのように描画します</xref:System.Drawing.Pen>。"
  example:
  - "The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_0_1.vb)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref>これの特性を決定する<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
    - id: width
      type: System.Single
      description: "新しい幅<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Color&quot;></xref>と<xref:System.Drawing.Pen.Width*>プロパティ</xref:System.Drawing.Pen.Width*>。"
  remarks: "<xref:System.Drawing.Color>プロパティによって指定された色に設定されて、`color`パラメーター</xref:System.Drawing.Color> 。 <xref:System.Drawing.Pen.Width%2A>で指定された値に設定されて、`width`パラメーター</xref:System.Drawing.Pen.Width%2A> 。 A `width` 0 になります、<xref:System.Drawing.Pen>幅が 1 であるかのように描画します</xref:System.Drawing.Pen>。"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_1_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>これの色を示す構造<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
    - id: width
      type: System.Single
      description: "この幅を示す値<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この配置の設定を取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "このプロパティを決定する方法、<xref:System.Drawing.Pen>閉じた曲線および多角形を描画します</xref:System.Drawing.Pen>。 <xref:System.Drawing.Drawing2D.PenAlignment>列挙体を&5; つの値を指定しますただし、2 つだけの値:<xref:System.Drawing.Drawing2D.PenAlignment>と<xref:System.Drawing.Drawing2D.PenAlignment>— 描いた線の外観を変更します。</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> 。 <xref:System.Drawing.Drawing2D.PenAlignment>このプロパティの既定値は、曲線または多角形のアウトライン ペンの幅の中心ことを指定します。</xref:System.Drawing.Drawing2D.PenAlignment> 値<xref:System.Drawing.Drawing2D.PenAlignment>このプロパティは、ペンの幅が、曲線または多角形の輪郭内にあるを指定します</xref:System.Drawing.Drawing2D.PenAlignment>。 他の&3; つの値、 <xref:System.Drawing.Drawing2D.PenAlignment>、 <xref:System.Drawing.Drawing2D.PenAlignment>、および<xref:System.Drawing.Drawing2D.PenAlignment>、中心とするペンになります</xref:System.Drawing.Drawing2D.PenAlignment></xref:System.Drawing.Drawing2D.PenAlignment></xref:System.Drawing.Drawing2D.PenAlignment>。       A<xref:System.Drawing.Pen>に設定、アラインメントを持つ<xref:System.Drawing.Drawing2D.PenAlignment>場合もあります描画埋め込みの位置が、および場合によっては、中央の位置で信頼性の低い結果が生成されます</xref:System.Drawing.Drawing2D.PenAlignment></xref:System.Drawing.Pen>。 また、ペンの複合直線の描画に使用することはできません。、 <xref:System.Drawing.Drawing2D.DashCap>dash 英</xref:System.Drawing.Drawing2D.DashCap>の破線を描画することはできません。"
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref>この配置を表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.Alignment*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定した値がのメンバーではない<xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "配置プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Brush&quot;> </xref>この属性を決定する<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "このプロパティを割り当てると、塗りつぶされた直線と曲線を描画するペンがさせます。 <xref:System.Drawing.Color> <xref:System.Drawing.Pen>。</xref:System.Drawing.Pen>プロパティ</xref:System.Drawing.Color>はオーバーライドされます。"
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref>この属性を決定する<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.Brush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ブラシ プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの正確なコピーが作成<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Creates a copy of that pen.  \n  \n-   Draws a line to the screen, using the copy of the pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/cpp/m-system.drawing.pen.clone_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/csharp/m-system.drawing.pen.clone_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.clone_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>にキャストできる、 <xref href=&quot;System.Drawing.Pen&quot;> </xref></xref:System.Object> 。"
  overload: System.Drawing.Pen.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この色の設定を取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>これの色を表す構造<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.Color*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "カラー プロパティの変更できない<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または複合ペンを指定する値の配列を設定します。 複合ペンでは、平行線と空白の構成される複合直線を描画します。"
  remarks: "複合直線は、平行線と空白さまざまな幅を代替の構成されます。 配列内の値は、複合直線、ペンの幅に対して相対的の各コンポーネントの開始ポイントを指定します。 配列の最初の値は、ペンの幅にまたがって距離の分数として最初のコンポーネント (行) 開始位置を指定します。 配列内の&2; 番目の値は、ペンの幅にまたがって、距離の分数として次のコンポーネント (スペース) の先頭を指定します。 配列内の最後の値は、最後のコンポーネントが終了する位置を指定します。       2 つの行を区切るスペースの幅が、ペンの 50% がペンの幅の 20% を最初の行の幅がここでは 2 つの並列線を描画するペンをするとします &quot; s はペンの幅の 30% の幅、および 2 番目の行の幅。 まずを作成して、<xref:System.Drawing.Pen>と実数の配列</xref:System.Drawing.Pen>。 このプロパティに値 0.0、0.2、0.7、および 1.0 を使用して配列を渡すことによって、複合配列を設定します。       このプロパティを設定しない場合<xref:System.Drawing.Pen>はその<xref:System.Drawing.Pen.Alignment%2A>プロパティ<xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment>に設定</xref:System.Drawing.Pen.Alignment%2A></xref:System.Drawing.Pen>"
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: "複合配列を指定する実数の配列。 配列内の要素は、昇順に並べ替えより小さい 0 ではない、1 より大きくしたりする必要があります。"
  overload: System.Drawing.Pen.CompoundArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CompoundArray プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された直線の終点で使用する、カスタム キャップを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref>これで描画された直線の終点で使用されたキャップを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.CustomEndCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomEndCap プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された直線の始点で使用する、カスタム キャップを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref>これで描画された直線の始点で使用されたキャップを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.CustomStartCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomStartCap プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された破線で構成されるダッシュの最後に使用するキャップ スタイルを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "このプロパティ設定しないでください<xref:System.Drawing.Drawing2D.DashCap>場合<xref:System.Drawing.Pen>その<xref:System.Drawing.Pen.Alignment%2A><xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment>プロパティ</xref:System.Drawing.Pen.Alignment%2A>が</xref:System.Drawing.Pen></xref:System.Drawing.Drawing2D.DashCap>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the DashCap, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_0_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_0_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_0_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref>の先頭と末尾これで描画された破線で構成されるダッシュに使用されるキャップ スタイルを表す値<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.DashCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定した値がのメンバーではない<xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティを変更できない<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得またはダッシュ パターンの先頭に、行の先頭からの距離を設定します。"
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: "直線の始点からダッシュ パターンの始点までの距離。"
  overload: System.Drawing.Pen.DashOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashOffset プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得またはカスタム ダッシュと空白の配列を設定します。"
  remarks: "以外の値を割り当てる`null`このプロパティには<xref:System.Drawing.Drawing2D.DashStyle>この<xref:System.Drawing.Pen><xref:System.Drawing.Drawing2D.DashStyle></xref:System.Drawing.Drawing2D.DashStyle></xref:System.Drawing.Pen>のプロパティ</xref:System.Drawing.Drawing2D.DashStyle>を設定。       内の要素、`dashArray`配列はダッシュのパターンでは各ダッシュと空白の長さを設定します。 最初の要素をダッシュの長さを設定する、2 番目の要素が空白の長さを設定、3 番目の要素は、ダッシュ、およびなの長さを設定します。 その結果、各要素は、0 以外の正の数値をする必要があります。       各ダッシュとダッシュのパターンの空白の長さが、配列の要素の値の積と<xref:System.Drawing.Pen>。</xref:System.Drawing.Pen>の幅"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, DashPattern, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_1_1.cpp)]"
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: "代替ダッシュと空白破線内の長さを指定する実数の配列。"
  overload: System.Drawing.Pen.DashPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashPattern プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された破線で使用されるスタイルを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "<xref:System.Drawing.Drawing2D.DashStyle>このプロパティの<xref:System.Drawing.Pen.DashPattern%2A>プロパティをこの<xref:System.Drawing.Pen>。</xref:System.Drawing.Pen>で描画された直線の構成</xref:System.Drawing.Pen.DashPattern%2A>でのハイフン、スペース、カスタム パターンを定義することを指定</xref:System.Drawing.Drawing2D.DashStyle>の値 このプロパティの値がある場合<xref:System.Drawing.Drawing2D.DashStyle>の値、<xref:System.Drawing.Pen.DashPattern%2A>プロパティは`null`ペンが純色の線を描画します</xref:System.Drawing.Pen.DashPattern%2A></xref:System.Drawing.Drawing2D.DashStyle>。"
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: "A <xref href=&quot;System.Drawing.Drawing2D.DashStyle&quot;> </xref>これで描画された破線で使用されるスタイルを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.DashStyle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashStyle プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "Dispose を呼び出すことにより、これによって使用されるリソース<xref:System.Drawing.Brush>を他の目的に再割り当てされます</xref:System.Drawing.Brush>。       <xref:System.Drawing.Pen>。</xref:System.Drawing.Pen>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Drawing.Pen>使用不可の状態</xref:System.Drawing.Pen>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Drawing.Pen>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Drawing.Pen>占有されていた</xref:System.Drawing.Pen></xref:System.Drawing.Pen>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Drawing.Pen></xref:System.Drawing.Pen>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Drawing.Pen>オブジェクトの`Finalize`メソッド</xref:System.Drawing.Pen>。"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the Dispose method for a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.dis_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.dis_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.dis_1.cpp)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Pen.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された直線の終点で使用するキャップ スタイルを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and EndCap properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.end_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.end_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.end_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>これで描画された直線の終点で使用するキャップ スタイルを表す値<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.EndCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定した値がのメンバーではない<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "エンド キャップ プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~Pen ();
    parameters: []
  overload: System.Drawing.Pen.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された連続する行を&2; 本の終点の接合スタイルを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "直線の接合部は、2 本の線の端を満たすことや、重ねてによって形成される一般的な領域です。 3 つの結合線がある: つながる、傾斜、および丸めます。  直線の接合スタイル<xref:System.Drawing.Pen>オブジェクトでそのペンを使用して描画<xref:System.Drawing.Drawing2D.GraphicsPath>オブジェクトに接続されているすべての行への接合スタイルが適用されることを指定するとします。次の図は、直線の面取りの結合の例の結果を示します</xref:System.Drawing.Drawing2D.GraphicsPath></xref:System.Drawing.Pen>。       ![ペン](~/add/media/pens5.gif &quot;ペン&quot;)"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and LineJoin properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.lin_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.lin_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.lin_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref>本これで描画された&2; つの連続した直線の終点の接合スタイルを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.LineJoin*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "LineJoin プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得またはマイター隅の接合部の太さの限度を設定します。"
  remarks: "マイター長とは、結合外部で線の壁の積集合を結合の内側の線の壁の積集合からの距離。 2 本の線の間の角度が小さい場合、マイター長が大きくなることができます。 マイターは、線の幅にマイター長の最大許容比率です。 既定値は 10.0f です。       マイター長の交差部分への参加は、結合の制限を超える場合、結合は交差部分の結合の制限内で保持する傾斜します。"
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: "マイター隅の接合部の太さの限度です。"
  overload: System.Drawing.Pen.MiterLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MiterLimit プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この変換行列の乗算<xref href=&quot;System.Drawing.Pen&quot;></xref>において指定した<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>です。"
  remarks: "このメソッドの前に指定された乗算行列、`matrix`乗算演算の変換行列のパラメーターです。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/cpp/m-system.drawing.pen.mul_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/csharp/m-system.drawing.pen.mul_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.pen.mul_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>変換行列の乗算に使用するオブジェクト。"
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この変換行列の乗算<xref href=&quot;System.Drawing.Pen&quot;></xref>において指定した<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>指定した順序で。"
  remarks: "このメソッドを使用して、<xref:System.Drawing.Drawing2D.MatrixOrder>列挙要素 (前または後) で指定した、`order`乗算演算を実行するパラメーター</xref:System.Drawing.Drawing2D.MatrixOrder> 。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/cpp/b3caf9f4-4a37-409d-bccb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/csharp/b3caf9f4-4a37-409d-bccb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/visualbasic/b3caf9f4-4a37-409d-bccb-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>変換行列の乗算に使用します。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "乗算演算を実行する順序です。"
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された直線のスタイルを取得<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "A<xref:System.Drawing.Pen>純色の線、塗りつぶし線、またはのメンバーで指定されたスタイルに応じて、テクスチャの線を描画することができます、<xref:System.Drawing.Drawing2D.PenType>列挙体です</xref:System.Drawing.Drawing2D.PenType></xref:System.Drawing.Pen>。"
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenType&quot;> </xref>この描画された直線のスタイルを指定する列挙体<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.PenType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このジオメトリック変換行列にリセット<xref href=&quot;System.Drawing.Pen&quot;> </xref> id にします。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  \n  \n-   Draws a line to the screen.  \n  \n-   Resets the transformation matrix to identity.  \n  \n-   Draws a second line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/cpp/m-system.drawing.pen.res_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/csharp/m-system.drawing.pen.res_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.pen.res_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Pen.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した角度だけローカル ジオメトリック変換を回転します。 このメソッドの前に回転変換を行います。"
  remarks: "ペンの形状は、循環であるため、回転ありません目立った影響ペンが x 軸または y 軸方向に拡大縮小しない限り。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/cpp/m-system.drawing.pen.rot_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/csharp/m-system.drawing.pen.rot_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.pen.rot_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "回転の角度。"
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した順序で指定した角度だけローカル ジオメトリック変換を回転します。"
  remarks: "ペンの形状は、循環であるため、回転ありません目立った影響ペンが x 軸または y 軸方向に拡大縮小しない限り。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/cpp/35c127d1-4f45-4168-8641-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/csharp/35c127d1-4f45-4168-8641-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/visualbasic/35c127d1-4f45-4168-8641-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "回転の角度。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref>回転行列やまたは追加するかどうかを指定します。"
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した係数だけローカル ジオメトリック変換をスケーリングします。 このメソッドの前にスケーリング行列変換を行います。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n Creates a <xref:System.Drawing.Pen>.  \n  \n Draws a rectangle using the pen.  \n  \n Scales the pen by 2 times in the x-axis direction.  \n  \n Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/cpp/m-system.drawing.pen.sca_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/csharp/m-system.drawing.pen.sca_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.pen.sca_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "X 軸方向に変換をスケーリング ファクター。"
    - id: sy
      type: System.Single
      description: "Y 軸方向に変換をスケーリング ファクター。"
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した順序で指定した係数だけローカル ジオメトリック変換をスケーリングします。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/cpp/f408f2ab-3827-481d-becb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/csharp/f408f2ab-3827-481d-becb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/visualbasic/f408f2ab-3827-481d-becb-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "X 軸方向に変換をスケーリング ファクター。"
    - id: sy
      type: System.Single
      description: "Y 軸方向に変換をスケーリング ファクター。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref>を追加または拡大縮小行列を付加するかどうかを指定します。"
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これによって描画された最後の行に使用されたキャップのスタイルを決定する値を設定<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/cpp/40b79849-2bf1-4135-844f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/csharp/40b79849-2bf1-4135-844f-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/visualbasic/40b79849-2bf1-4135-844f-_1.vb)]"
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>これで描画された直線の始点で使用するキャップ スタイルを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>これで描画された直線の終点で使用するキャップ スタイルを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>の先頭または末尾に描画される破線で使用するキャップ スタイルを表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.SetLineCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで描画された直線の始点で使用するキャップ スタイルを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the StartCap and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.sta_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.sta_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.sta_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>これで描画された直線の始点で使用するキャップ スタイルを表す値<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.StartCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定した値がのメンバーではない<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StartCap プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このジオメトリ変換のコピーを取得または<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  remarks: "このプロパティは、楕円、ペン先端の形を定義します。 この楕円は、変換行列を適用することで、既定の円形から取得されます。 行列の平行移動の部分は無視されることに注意してください。 マトリックスが返されるプロパティの変換で、ペンのジオメトリック変換のコピーであるためが不要になったときに、マトリックスを破棄する必要があります。"
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "コピー、 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>これのジオメトリック変換を表す<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.Transform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "変換プロパティが変更できないで<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した寸法でローカル ジオメトリック変換を変換します。 このメソッドの前に平行移動、変換を行います。"
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "X の平行移動の値。"
    - id: dy
      type: System.Single
      description: "Y の平行移動の値。"
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した順序で指定した寸法でローカル ジオメトリック変換を変換します。"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "X の平行移動の値。"
    - id: dy
      type: System.Single
      description: "Y の平行移動の値。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "順序 (前または後)、平行移動を適用します。"
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この幅取得または設定<xref href=&quot;System.Drawing.Pen&quot;> </xref>、単位で、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>オブジェクトの描画に使用します。"
  remarks: "長さの単位にアクセスすることができます、<xref:System.Drawing.Graphics>オブジェクトを使用してその<xref:System.Drawing.Graphics.PageUnit%2A>プロパティ</xref:System.Drawing.Graphics.PageUnit%2A></xref:System.Drawing.Graphics>。 測定単位は、通常、ピクセルです。 幅を 0 になります、<xref:System.Drawing.Pen>幅が 1 であるかのように描画します</xref:System.Drawing.Pen>。"
  example:
  - "The following code example demonstrates the effects of setting the Width and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.width_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.width_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.width_1.cpp)]"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "この幅<xref href=&quot;System.Drawing.Pen&quot;></xref>です。"
  overload: System.Drawing.Pen.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "変更できないの Width プロパティが設定されて<xref href=&quot;System.Drawing.Pen&quot;> </xref>、によって返されるものなど、 <xref href=&quot;System.Drawing.Pens&quot;> </xref>クラスです。"
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Drawing.Pen.#ctor*
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen
  nameWithType: Pen.Pen
- uid: System.Drawing.Pen.Alignment*
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
- uid: System.Drawing.Pen.Brush*
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
- uid: System.Drawing.Pen.Clone*
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone
  nameWithType: Pen.Clone
- uid: System.Drawing.Pen.Color*
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
- uid: System.Drawing.Pen.CompoundArray*
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
- uid: System.Drawing.Pen.CustomEndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
- uid: System.Drawing.Pen.CustomStartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
- uid: System.Drawing.Pen.DashOffset*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
- uid: System.Drawing.Pen.Dispose*
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose
  nameWithType: Pen.Dispose
- uid: System.Drawing.Pen.EndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
- uid: System.Drawing.Pen.Finalize*
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize
  nameWithType: Pen.Finalize
- uid: System.Drawing.Pen.LineJoin*
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
- uid: System.Drawing.Pen.MiterLimit*
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.PenType*
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
- uid: System.Drawing.Pen.ResetTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform
  nameWithType: Pen.ResetTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.SetLineCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap
  nameWithType: Pen.SetLineCap
- uid: System.Drawing.Pen.StartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
- uid: System.Drawing.Pen.Transform*
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
- uid: System.Drawing.Pen.Width*
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
