### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListBox
  id: ListBox
  children:
  - System.Windows.Forms.ListBox.#ctor
  - System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  - System.Windows.Forms.ListBox.AllowSelection
  - System.Windows.Forms.ListBox.BackColor
  - System.Windows.Forms.ListBox.BackgroundImage
  - System.Windows.Forms.ListBox.BackgroundImageChanged
  - System.Windows.Forms.ListBox.BackgroundImageLayout
  - System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  - System.Windows.Forms.ListBox.BeginUpdate
  - System.Windows.Forms.ListBox.BorderStyle
  - System.Windows.Forms.ListBox.ClearSelected
  - System.Windows.Forms.ListBox.Click
  - System.Windows.Forms.ListBox.ColumnWidth
  - System.Windows.Forms.ListBox.CreateItemCollection
  - System.Windows.Forms.ListBox.CreateParams
  - System.Windows.Forms.ListBox.CustomTabOffsets
  - System.Windows.Forms.ListBox.DefaultItemHeight
  - System.Windows.Forms.ListBox.DefaultSize
  - System.Windows.Forms.ListBox.DrawItem
  - System.Windows.Forms.ListBox.DrawMode
  - System.Windows.Forms.ListBox.EndUpdate
  - System.Windows.Forms.ListBox.FindString(System.String)
  - System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  - System.Windows.Forms.ListBox.FindStringExact(System.String)
  - System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  - System.Windows.Forms.ListBox.Font
  - System.Windows.Forms.ListBox.ForeColor
  - System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  - System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  - System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.GetSelected(System.Int32)
  - System.Windows.Forms.ListBox.HorizontalExtent
  - System.Windows.Forms.ListBox.HorizontalScrollbar
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  - System.Windows.Forms.ListBox.IntegralHeight
  - System.Windows.Forms.ListBox.ItemHeight
  - System.Windows.Forms.ListBox.Items
  - System.Windows.Forms.ListBox.MeasureItem
  - System.Windows.Forms.ListBox.MouseClick
  - System.Windows.Forms.ListBox.MultiColumn
  - System.Windows.Forms.ListBox.NoMatches
  - System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.Padding
  - System.Windows.Forms.ListBox.PaddingChanged
  - System.Windows.Forms.ListBox.Paint
  - System.Windows.Forms.ListBox.PreferredHeight
  - System.Windows.Forms.ListBox.Refresh
  - System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  - System.Windows.Forms.ListBox.RefreshItems
  - System.Windows.Forms.ListBox.ResetBackColor
  - System.Windows.Forms.ListBox.ResetForeColor
  - System.Windows.Forms.ListBox.RightToLeft
  - System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.ScrollAlwaysVisible
  - System.Windows.Forms.ListBox.SelectedIndex
  - System.Windows.Forms.ListBox.SelectedIndexChanged
  - System.Windows.Forms.ListBox.SelectedIndices
  - System.Windows.Forms.ListBox.SelectedItem
  - System.Windows.Forms.ListBox.SelectedItems
  - System.Windows.Forms.ListBox.SelectionMode
  - System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  - System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  - System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  - System.Windows.Forms.ListBox.Sort
  - System.Windows.Forms.ListBox.Sorted
  - System.Windows.Forms.ListBox.Text
  - System.Windows.Forms.ListBox.TextChanged
  - System.Windows.Forms.ListBox.TopIndex
  - System.Windows.Forms.ListBox.ToString
  - System.Windows.Forms.ListBox.UseCustomTabOffsets
  - System.Windows.Forms.ListBox.UseTabStops
  - System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  - System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: ListBox
  nameWithType: ListBox
  fullName: System.Windows.Forms.ListBox
  type: Class
  summary: "項目の一覧を表示する Windows コントロールを表します。"
  remarks: "ListBox コントロールでは、ユーザーをクリックして選択できることをユーザーに項目の一覧を表示することができます。 1 つまたは複数の選択内容を使用して、リスト ボックス コントロールを提供できます、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectionMode%2A>。 リスト ボックスにも用意されています、<xref:System.Windows.Forms.ListBox.MultiColumn%2A>まっすぐ垂直方向の一覧ではなく列では項目の項目の表示を有効にするプロパティ</xref:System.Windows.Forms.ListBox.MultiColumn%2A>。 これにより、コントロールが複数表示されている項目を表示できるし、ユーザーがアイテムにスクロールする必要はなくなります。       通常、Windows は、リスト ボックスに表示するアイテムの描画のタスクを処理します。 使用することができます、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティ、およびハンドル、<xref:System.Windows.Forms.ListBox.MeasureItem>と<xref:System.Windows.Forms.ListBox.DrawItem>描画 Windows が自動をオーバーライドするためのイベントを提供し、項目を描画します</xref:System.Windows.Forms.ListBox.DrawItem></xref:System.Windows.Forms.ListBox.MeasureItem></xref:System.Windows.Forms.ListBox.DrawMode%2A>。 オーナー描画リスト ボックス コントロールを使用すると、一覧に変数高さアイテム、画像、または別の色または各アイテムのテキストのフォントを表示します。 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>プロパティ、 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>、および<xref:System.Windows.Forms.ListBox.GetItemRectangle%2A>独自の項目を描画することにも役立ちます</xref:System.Windows.Forms.ListBox.GetItemRectangle%2A></xref:System.Windows.Forms.ListBox.GetItemHeight%2A></xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>。       リスト ボックスには、表示と選択の機能に加え、効率的に項目を追加するリスト ボックスに、リストの項目内のテキストを検索できるようにする機能も用意されています。 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A>と<xref:System.Windows.Forms.ListBox.EndUpdate%2A>メソッドでは、項目が一覧に追加されるたびに再描画するコントロールを使用せず、リスト ボックスに多数のアイテムを追加できます</xref:System.Windows.Forms.ListBox.EndUpdate%2A></xref:System.Windows.Forms.ListBox.BeginUpdate%2A>。 <xref:System.Windows.Forms.ListBox.FindString%2A>と<xref:System.Windows.Forms.ListBox.FindStringExact%2A>メソッドでは、特定の検索文字列を含む、リスト内の項目を検索できます</xref:System.Windows.Forms.ListBox.FindStringExact%2A></xref:System.Windows.Forms.ListBox.FindString%2A>。       <xref:System.Windows.Forms.ListBox.Items%2A>、 <xref:System.Windows.Forms.ListBox.SelectedItems%2A>、および<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>プロパティは、リスト ボックスで使用される&3; つのコレクションへのアクセスを提供します</xref:System.Windows.Forms.ListBox.SelectedIndices%2A></xref:System.Windows.Forms.ListBox.SelectedItems%2A></xref:System.Windows.Forms.ListBox.Items%2A>。 次の表では、リスト ボックスおよびその使用方法、コントロール内で使用される&3; つのコレクションについて説明します。      |コレクション クラス |リスト ボックス内で使用する |  |----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|  |<xref:System.Windows.Forms.ListBox.ObjectCollection>|リスト ボックス コントロールに含まれるすべての項目を格納します |。  |<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>|ListBox コントロールに含まれるアイテムのサブセットである、選択した項目のコレクションを格納します |。  |<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>|<xref:System.Windows.Forms.ListBox.ObjectCollection>.</xref:System.Windows.Forms.ListBox.ObjectCollection>のインデックスのサブセットである、選択されたインデックスのコレクションを格納</xref:System.Windows.Forms.ListBox.SelectedIndexCollection></xref:System.Windows.Forms.ListBox.SelectedObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection> これらのインデックスが選択されている項目を指定します |。      次の&3; つの例では、リスト ボックス クラスでサポートされる&3; つのインデックス付きコレクションを表示します。       次の表は、方法の例を示しています<xref:System.Windows.Forms.ListBox.ObjectCollection>例リスト ボックス内の選択状態と同様に、リスト ボックスの項目を格納します。</xref:System.Windows.Forms.ListBox.ObjectCollection> 。      |インデックス |項目 |リスト ボックス内で選択状態 |  |-----------|----------|----------------------------------------|  |&0; | object1 |選択されていない |  |&1; | object2 |選択されている |  |&2; | object3 |選択されていない |  |&3; | object4 |選択されている |  |&4; | object5 |選択されている |      に基づいて、 <xref:System.Windows.Forms.ListBox.ObjectCollection>、前の表に示すように、この表の方法、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>が表示されます</xref:System.Windows.Forms.ListBox.SelectedObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection>。      |インデックス |項目 |  |-----------|----------|  |&0; | object2 |  |&1; | object4 |  |&2; | object5 |      に基づいて、 <xref:System.Windows.Forms.ListBox.ObjectCollection>、前の表に示すように、この表の方法、<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>が表示されます</xref:System.Windows.Forms.ListBox.SelectedIndexCollection></xref:System.Windows.Forms.ListBox.ObjectCollection>。      |インデックス |項目のインデックス |  |-----------|-------------------|  |&0; |&1; |  |&1; |&3; |  |&2; |&4; |      <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラスでは、リスト ボックスに項目を追加することができます</xref:System.Windows.Forms.ListBox.ObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>。 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>リスト ボックスに、メンバーを追加するときに、メソッドは任意のオブジェクトを受け入れることができます</xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>。 コントロールがで定義されているテキストを使用してオブジェクトをリスト ボックスに追加されている、ときに、<xref:System.Object.ToString%2A>オブジェクトのメソッドは、メンバーの名前、オブジェクト内でない限りで指定された、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティ</xref:System.Windows.Forms.ListControl.DisplayMember%2A></xref:System.Object.ToString%2A>。 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A><xref:System.Windows.Forms.ListBox.ObjectCollection><xref:System.Windows.Forms.ListControl.DataSource%2A><xref:System.Windows.Forms.ListControl>クラス</xref:System.Windows.Forms.ListControl>のプロパティ</xref:System.Windows.Forms.ListControl.DataSource%2A>を使用して項目を追加することもできます。 クラス</xref:System.Windows.Forms.ListBox.ObjectCollection>のメソッド</xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>を使用して項目を追加するだけでなく      > [!NOTE] >、リスト ボックスがあれば<xref:System.Windows.Forms.ComboBox>、または<xref:System.Windows.Forms.CheckedListBox>、基本 Windows フォームおよび派生 Windows フォームでのそれらのコントロールの文字列コレクションを変更するでは、基本の Windows フォームでコントロールの文字列コレクションを空にする必要があります</xref:System.Windows.Forms.CheckedListBox></xref:System.Windows.Forms.ComboBox>。 文字列のコレクションが空でない場合になる読み取り専用で別の Windows フォームを派生させる場合。"
  example:
  - "The following code example demonstrates how to create a ListBox control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the ListBox using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.l_19_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.l_19_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("SelectedValue")]

      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.DefaultProperty("Items")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ListBox : System.Windows.Forms.ListControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ListControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ListControl.DataManager
  - System.Windows.Forms.ListControl.DataSource
  - System.Windows.Forms.ListControl.DataSourceChanged
  - System.Windows.Forms.ListControl.DisplayMember
  - System.Windows.Forms.ListControl.DisplayMemberChanged
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)
  - System.Windows.Forms.ListControl.Format
  - System.Windows.Forms.ListControl.FormatInfo
  - System.Windows.Forms.ListControl.FormatInfoChanged
  - System.Windows.Forms.ListControl.FormatString
  - System.Windows.Forms.ListControl.FormatStringChanged
  - System.Windows.Forms.ListControl.FormattingEnabled
  - System.Windows.Forms.ListControl.FormattingEnabledChanged
  - System.Windows.Forms.ListControl.GetItemText(System.Object)
  - System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)
  - System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.SelectedValue
  - System.Windows.Forms.ListControl.SelectedValueChanged
  - System.Windows.Forms.ListControl.ValueMember
  - System.Windows.Forms.ListControl.ValueMemberChanged
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_9_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_9_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_9_1.vb)]"
  syntax:
    content: public ListBox ();
    parameters: []
  overload: System.Windows.Forms.ListBox.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  id: AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このメンバーは、古い形式と交換はありません。"
  syntax:
    content: protected virtual void AddItemsCore (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "オブジェクトの配列。"
  overload: System.Windows.Forms.ListBox.AddItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AllowSelection
  id: AllowSelection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>リスト項目の選択を現在有効にします。"
  syntax:
    content: protected override bool AllowSelection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> is not <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.AllowSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackColor
  id: BackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの背景色を設定します。"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>コントロールの背景色を表すです。 既定の値は、<xref:System.Windows.Forms.Control.DefaultBackColor*>プロパティ</xref:System.Windows.Forms.Control.DefaultBackColor*>。"
  overload: System.Windows.Forms.ListBox.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティはこのクラスは使用されません。"
  remarks: "このプロパティはこのクラスは使用されません。"
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "フォームの背景イメージです。"
  overload: System.Windows.Forms.ListBox.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.ListBox.BackgroundImage*>ラベルの変更のプロパティ</xref:System.Windows.Forms.ListBox.BackgroundImage*>。"
  remarks: "このイベントは、このクラスに関連します。"
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定の背景画像のレイアウト、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>で定義されている、 <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref>列挙します。"
  remarks: "このプロパティはこのクラスは使用されません。"
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "値のいずれかの<xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>です。 The values are <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Stretch&quot; name=&quot;Stretch&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Tile&quot; name=&quot;Tile&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Zoom&quot; name=&quot;Zoom&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>既定値です。"
  overload: System.Windows.Forms.ListBox.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "指定された列挙値が存在しません。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>プロパティが変更された</xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>。"
  remarks: "このイベントは、このクラスに関連します。"
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BeginUpdate
  id: BeginUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "項目を追加中にパフォーマンスを維持、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロールを描画するまでに防ぐことで一度に&1; つずつ、<xref:System.Windows.Forms.ListBox.EndUpdate*>メソッドが呼び出されます</xref:System.Windows.Forms.ListBox.EndUpdate*>。"
  remarks: "複数の項目を追加することをお勧め、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス (を通じて、<xref:System.Windows.Forms.ListBox.Items%2A>のプロパティ、 <xref:System.Windows.Forms.ListBox>).</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> これにより、単一の操作でリストに項目の配列を追加することができます。 ただしを追加する場合は、項目を一度に&1; つを使用して、時間、<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス、コントロールが再描画するを防ぐため BeginUpdate メソッドを使用することができます、<xref:System.Windows.Forms.ListBox>項目が一覧に追加されるたびにします</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.ObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>。 項目を一覧に追加するタスクを完了すると、呼び出し、<xref:System.Windows.Forms.ListBox.EndUpdate%2A>を有効にする方法、<xref:System.Windows.Forms.ListBox>に再描画します</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.EndUpdate%2A>。 この方法で項目を追加するときにちらつきませんの描画、<xref:System.Windows.Forms.ListBox>多数のアイテムの一覧に追加する場合</xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example uses the BeginUpdate and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_14_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_14_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_14_1.vb)]"
  syntax:
    content: public void BeginUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定の周囲に描画される境界線の種類、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref>値。 既定値は<xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ClearSelected
  id: ClearSelected
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "すべてのアイテムの選択を解除、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "同じことには、このメソッドを呼び出す、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティを負の&1; (-1).</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> このメソッドを使用すると、リスト内のすべての項目をすばやく選択解除します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the ClearSelected method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/m-system.windows.forms.l_12_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/m-system.windows.forms.l_12_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public void ClearSelected ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ClearSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Click
  id: Click
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロールをクリックします。"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ColumnWidth
  id: ColumnWidth
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "列の幅を複数の列で設定を取得または<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "ゼロ (0) に値を設定する場合は、各列に既定の幅が割り当てられます。 場合、 <xref:System.Windows.Forms.ListBox>、複数の列は、 <xref:System.Windows.Forms.ListBox>、このプロパティは、一覧の各列の現在の幅を返します</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox>。 このプロパティを使用するには、複数の列で各列を確実に<xref:System.Windows.Forms.ListBox>そのアイテムを正しく表示することができます</xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_20_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_20_1.vb)]"
  syntax:
    content: public int ColumnWidth { get; set; }
    return:
      type: System.Int32
      description: "コントロール内の各列のピクセル単位の幅。 既定値は 0 です。"
  overload: System.Windows.Forms.ListBox.ColumnWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティには、ゼロ未満の値が割り当てられます。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  id: CreateItemCollection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクション内の項目の新しいインスタンスを作成します。"
  syntax:
    content: protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();
    parameters: []
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "A<xref:System.Windows.Forms.ListBox.ObjectCollection>新しい項目のコレクションを表す</xref:System.Windows.Forms.ListBox.ObjectCollection>。"
  overload: System.Windows.Forms.ListBox.CreateItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロール ハンドルが作成されるときに、必要な作成パラメーターを取得します。"
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref>コントロールへのハンドルが作成されたときに必要な作成パラメーターを格納します。"
  overload: System.Windows.Forms.ListBox.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  id: CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内の項目間のタブの幅を取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "整数の配列には、昇順でタブのスペースが含まれています。"
  syntax:
    content: public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }
    return:
      type: System.Windows.Forms.ListBox.IntegerCollection
      description: "タブ幅を表す整数のコレクション。"
  overload: System.Windows.Forms.ListBox.CustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  id: DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オーナー描画の既定の項目の高さを示す<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  syntax:
    content: public const int DefaultItemHeight = 13;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールの既定のサイズを取得します。"
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "既定値<xref href=&quot;System.Drawing.Size&quot;></xref>コントロールのです。"
  overload: System.Windows.Forms.ListBox.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オーナー描画のビジュアルな部分のときに発生<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>変更します。"
  remarks: "このイベントは、オーナー描画<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>使用します。 イベントは、のみいつ発生するか、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されている`DrawMode.OwnerDrawFixed`または`DrawMode.OwnerDrawVariable`</xref:System.Windows.Forms.ListBox.DrawMode%2A>。 このイベントを使用するには<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>項目を描画するのにために必要なタスクを実行するには 可変サイズの項目がある場合 (ときに、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されている`DrawMode.OwnerDrawVariable`)、項目を描画する前に、<xref:System.Windows.Forms.ListBox.MeasureItem>イベントが発生します</xref:System.Windows.Forms.ListBox.MeasureItem></xref:System.Windows.Forms.ListBox.DrawMode%2A>。 イベント ハンドラーを作成することができます、<xref:System.Windows.Forms.ListBox.MeasureItem>しようとする描画 DrawItem イベントのイベント ハンドラーで、項目のサイズを指定するイベントです</xref:System.Windows.Forms.ListBox.MeasureItem>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the DrawItem event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the DrawItem event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_2_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/e-system.windows.forms.l_2_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawMode
  id: DrawMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの描画モードを設定します。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the DrawMode property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_42_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/p-system.windows.forms.l_42_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }
    return:
      type: System.Windows.Forms.DrawMode
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.DrawMode&quot;> </xref>コントロールの項目を描画するためのモードを表す値です。 既定値は<xref uid=&quot;langword_csharp_DrawMode.Normal&quot; name=&quot;DrawMode.Normal&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.DrawMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "プロパティに割り当てられた値がのメンバーではない、 <xref href=&quot;System.Windows.Forms.DrawMode&quot;> </xref>列挙します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "複数の列、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>可変サイズの高さを持つことはできません。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.EndUpdate
  id: EndUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "描画を再開、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロールによって描画が中断された後、<xref:System.Windows.Forms.ListBox.BeginUpdate*>メソッド</xref:System.Windows.Forms.ListBox.BeginUpdate*>。"
  remarks: "項目を追加することをお勧め、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス (を通じて、<xref:System.Windows.Forms.ListBox.Items%2A>のプロパティ、 <xref:System.Windows.Forms.ListBox>).</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> これにより、一度に&1; つのリストに項目の配列を追加することができます。 ただしを追加する場合は、項目を一度に&1; つを使用して、時間、<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラスを使用することができます、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A>メソッドをコントロールが再描画するを防ぐために、<xref:System.Windows.Forms.ListBox>項目が一覧に追加されるたびにします</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.BeginUpdate%2A></xref:System.Windows.Forms.ListBox.ObjectCollection></xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>。 項目を一覧に追加するタスクを完了すると、メソッドを呼び出して EndUpdate を有効にする、<xref:System.Windows.Forms.ListBox>に再描画します</xref:System.Windows.Forms.ListBox>。 この方法で項目を追加するときにちらつきませんの描画、<xref:System.Windows.Forms.ListBox>多数のアイテムの一覧に追加する場合</xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and EndUpdate methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_0_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_0_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_0_1.vb)]"
  syntax:
    content: public void EndUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  id: FindString(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "最初の項目を検索、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>指定した文字列で始まります。"
  remarks: "このメソッドによって実行される検索小文字は区別されません。 検索では、指定した検索文字列パラメーターを部分的に一致する語句`s`です。 このメソッドを使用すると、指定した文字列と一致する最初の項目を検索します。 使用して検索テキストを表す項目を削除するなどのタスクを行うことができますし、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッドまたは項目のテキストを変更します</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>。 この<xref:System.Windows.Forms.ListBox>バージョンの<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内の開始インデックスを指定するためのパラメーターを提供する FindString メソッドを使用することができます、</xref:System.Windows.Forms.ListBox>内のテキストの他のインスタンスを検索する場合、指定したテキストが見つかった場合 部分的な一致ではなく、正確な単語の一致の検索を実行する場合を使用して、<xref:System.Windows.Forms.ListBox.FindStringExact%2A>メソッド</xref:System.Windows.Forms.ListBox.FindStringExact%2A>。"
  example:
  - "The following code example demonstrates how to use the FindString method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>. If no items are found that match the search string FindString returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[ListBox.FindString2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_13_1.cs)]\n [!code-cpp[ListBox.FindString2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_13_1.cpp)]\n [!code-vb[ListBox.FindString2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_13_1.vb)]"
  syntax:
    content: public int FindString (string s);
    parameters:
    - id: s
      type: System.String
      description: "検索するテキストです。"
    return:
      type: System.Int32
      description: "最初に見つかった項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値、 <code> s </code>パラメーターが-1 未満またはより大きいか、項目数と同じです。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  id: FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "最初の項目を検索、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>指定した文字列で始まります。 指定した開始インデックスから検索を開始します。"
  remarks: "このメソッドによって実行される検索小文字は区別されません。 検索では、指定した検索文字列パラメーターを部分的に一致する語句`s`です。 このメソッドを使用するには、指定した文字列<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>の項目のリスト内で指定した開始インデックス位置に一致する最初の項目を検索するには 使用して検索テキストを表す項目を削除するなどのタスクを行うことができますし、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッドまたは項目のテキストを変更します</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>。 このメソッドは通常、この開始インデックスが指定されていないメソッドのバージョンを使用して、呼び出しが行われた後に使用されます。 一覧で、最初の項目が見つかった後、このメソッドを内のインデックス位置を指定することによってさらに、検索テキストのインスタンスを検索する用い、`startIndex`最初に見つかった項目の検索テキストの後の項目のパラメーターです。 部分的な一致ではなく、正確な単語の一致の検索を実行する場合を使用して、<xref:System.Windows.Forms.ListBox.FindStringExact%2A>メソッド</xref:System.Windows.Forms.ListBox.FindStringExact%2A>。      > [!NOTE] > 検索がの下部に達したとき、<xref:System.Windows.Forms.ListBox>の先頭から検索を続けますが、<xref:System.Windows.Forms.ListBox>で指定された項目に戻り、`startIndex`パラメーター</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/m-system.windows.forms.l_10_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/m-system.windows.forms.l_10_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_10_1.vb)]"
  syntax:
    content: public int FindString (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "検索するテキストです。"
    - id: startIndex
      type: System.Int32
      description: "最初の項目を検索する前に、の項目の&0; から始まるインデックス。 コントロールの先頭から検索する負の&1; (-1) に設定されます。"
    return:
      type: System.Int32
      description: "最初に見つかった項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code>パラメーターは、ゼロ未満かより大きいか<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス</xref:System.Windows.Forms.ListBox.ObjectCollection>のプロパティ</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>の値に等しい"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  id: FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "最初の項目を検索、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>指定した文字列を正確に一致します。"
  remarks: "このメソッドによって実行される検索小文字は区別されません。 検索では、検索文字列のパラメーターで指定した語と完全に一致`s`です。 このメソッドを使用すると、指定した文字列と一致する最初の項目を検索します。 使用して検索テキストを表す項目を削除するなどのタスクを行うことができますし、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッドまたは項目のテキストを変更します</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>。 この<xref:System.Windows.Forms.ListBox>バージョンの<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内の開始インデックスを指定するためのパラメーターを提供する FindStringExact メソッドを使用することができます、</xref:System.Windows.Forms.ListBox>内のテキストの他のインスタンスを検索する場合、指定したテキストが見つかった場合 Word の正確な一致ではなく単語の一部の検索を実行する場合を使用して、<xref:System.Windows.Forms.ListBox.FindString%2A>メソッド</xref:System.Windows.Forms.ListBox.FindString%2A>。"
  example:
  - "The following code example demonstrates how to use the FindStringExact method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string. If no items are found that match the search string, FindStringExact returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-vb[ListBox.FindStringExact#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_16_1.vb)]\n [!code-cs[ListBox.FindStringExact#1](~/add/codesnippet/csharp/m-system.windows.forms.l_16_1.cs)]\n [!code-cpp[ListBox.FindStringExact#1](~/add/codesnippet/cpp/m-system.windows.forms.l_16_1.cpp)]"
  syntax:
    content: public int FindStringExact (string s);
    parameters:
    - id: s
      type: System.String
      description: "検索するテキストです。"
    return:
      type: System.Int32
      description: "最初に見つかった項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  id: FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "最初の項目を検索、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>指定した文字列を正確に一致します。 指定した開始インデックスから検索を開始します。"
  remarks: "このメソッドによって実行される検索小文字は区別されません。 検索は、指定した検索文字列パラメーターと完全に一致する単語`s`です。 このメソッドを使用するには、指定した文字列<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>の項目のリスト内で指定した開始インデックス位置に一致する最初の項目を検索するには 使用して検索テキストを含む、アイテムの削除などのタスクを行うことができますし、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッドまたは項目のテキストを変更します</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>。 このメソッドは通常、この開始インデックスが指定されていないメソッドのバージョンを使用して、呼び出しが行われた後に使用されます。 一覧で、最初の項目が見つかった後、このメソッドを内のインデックス位置を指定することによってさらに、検索テキストのインスタンスを検索する用い、`startIndex`最初に見つかった項目の検索テキストの後の項目のパラメーターです。 Word の正確な一致ではなく単語の一部の検索を実行する場合を使用して、<xref:System.Windows.Forms.ListBox.FindString%2A>メソッド</xref:System.Windows.Forms.ListBox.FindString%2A>。      > [!NOTE] > 検索がの下部に達したとき、<xref:System.Windows.Forms.ListBox>の先頭から検索を続けますが、<xref:System.Windows.Forms.ListBox>で指定された項目に戻り、`startIndex`パラメーター</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cs[ListBox.FindStringExact2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_5_1.cs)]\n [!code-cpp[ListBox.FindStringExact2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_5_1.cpp)]\n [!code-vb[ListBox.FindStringExact2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_5_1.vb)]"
  syntax:
    content: public int FindStringExact (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "検索するテキストです。"
    - id: startIndex
      type: System.Int32
      description: "最初の項目を検索する前に、の項目の&0; から始まるインデックス。 コントロールの先頭から検索する負の&1; (-1) に設定されます。"
    return:
      type: System.Int32
      description: "最初に見つかった項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code>パラメーターは、ゼロ未満かより大きいか<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス</xref:System.Windows.Forms.ListBox.ObjectCollection>のプロパティ</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>の値に等しい"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Font
  id: Font
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールによって表示されるテキストのフォントを設定します。"
  syntax:
    content: public override System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>コントロールによって表示されるテキストに適用します。 既定の値は、<xref:System.Windows.Forms.Control.DefaultFont*>プロパティ</xref:System.Windows.Forms.Control.DefaultFont*>。"
  overload: System.Windows.Forms.ListBox.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールの前景色を設定します。"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "フォア グラウンド<xref href=&quot;System.Drawing.Color&quot;></xref>コントロールのです。 既定の値は、<xref:System.Windows.Forms.Control.DefaultForeColor*>プロパティ</xref:System.Windows.Forms.Control.DefaultForeColor*>。"
  overload: System.Windows.Forms.ListBox.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  id: GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内のアイテムの高さを返します、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "場合、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されていない`DrawMode.OwnerDrawVariable`、すべての項目、標準的なために、インデックス パラメーターの値は無視されます<xref:System.Windows.Forms.ListBox>サイズは同じです</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.DrawMode%2A>。 使用する場合、オーナー描画<xref:System.Windows.Forms.ListBox><xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内の任意のアイテムのサイズを調べるに</xref:System.Windows.Forms.ListBox>は、このプロパティを使用することができます。"
  syntax:
    content: public int GetItemHeight (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "高さが返される項目の&0; から始まるインデックス。"
    return:
      type: System.Int32
      description: "指定した項目のピクセル単位の高さ。"
  overload: System.Windows.Forms.ListBox.GetItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された値、 <code> index </code>パラメーターは、ゼロ未満か、項目数より大きい。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  id: GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内の項目の外接する四角形を返します、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "項目が指定されている場合、`index`パラメーターが表示されていない、このメソッドによって返される四角形は、コントロールの表示部分の外側になります。 このメソッドを使用すると、一覧内のアイテムの位置とサイズを決定します。 項目の高さを取得する可変サイズのオーナー描画リスト項目特に行うこともできます、<xref:System.Windows.Forms.ListBox.GetItemHeight%2A>メソッド</xref:System.Windows.Forms.ListBox.GetItemHeight%2A>。"
  syntax:
    content: public System.Drawing.Rectangle GetItemRectangle (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "項目の外接する四角形が取得するの&0; から始まるインデックス。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>を表す、指定した項目の外接する四角形。"
  overload: System.Windows.Forms.ListBox.GetItemRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>パラメーターは、ゼロ未満かより大きいか<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス</xref:System.Windows.Forms.ListBox.ObjectCollection>のプロパティ</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>の値に等しい"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内部で境界を取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>のスケールが設定されます。"
  remarks: "<xref:System.Windows.Forms.ListBox>クラスのオーバーライド、<xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName>メソッドを現在の高さではなく、要求された高さが調整されることを確認します</xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName></xref:System.Windows.Forms.ListBox>。"
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>ディスプレイの範囲を取得する対象の領域を指定します。"
    - id: factor
      type: System.Drawing.SizeF
      description: "高さとコントロールの境界の幅。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "値のいずれかの<xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref>サイズと位置を定義するときに使用するコントロールの境界を指定します。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>コントロール スケールが設定される境界を表すです。"
  overload: System.Windows.Forms.ListBox.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  id: GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した項目が選択されているかどうかを示す値を返します。"
  remarks: "このメソッドを使用すると、指定した項目が選択されているかどうかをすばやく確認します。 このメソッドは、特定の操作の場合、複数選択内の特定の項目を実行する必要があるとき<xref:System.Windows.Forms.ListBox>が選択されている</xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates how to use the GetSelected method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/m-system.windows.forms.l_4_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/m-system.windows.forms.l_4_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_4_1.vb)]"
  syntax:
    content: public bool GetSelected (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "選択されているかどうかを決定する項目の&0; から始まるインデックス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した項目が現在選択されている場合、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.GetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>パラメーターは、ゼロ未満かより大きいか<xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス</xref:System.Windows.Forms.ListBox.ObjectCollection>のプロパティ</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*>の値に等しい"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  id: HorizontalExtent
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得する幅を設定またはの水平スクロール バー、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>スクロールできます。"
  remarks: "このプロパティは、場合のみ役に立つ値を報告、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>プロパティに設定されている`true`</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>。 場合、<xref:System.Windows.Forms.ListBox>水平スクロール<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>内の項目を水平方向にスクロール バーは、このプロパティの値よりも小さい</xref:System.Windows.Forms.ListBox>の幅 場合の幅、<xref:System.Windows.Forms.ListBox>は、この値以上になると、水平スクロール バーを非表示にします</xref:System.Windows.Forms.ListBox>。 <xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>はこのプロパティの値を動的に更新されません。 このプロパティはいつの項目を<xref:System.Windows.Forms.ListBox>オーナー描画します</xref:System.Windows.Forms.ListBox>。 たとえば場合のオーナー描画項目、<xref:System.Windows.Forms.ListBox>は 200 ピクセルですが、 <xref:System.Windows.Forms.ListBox>60 ピクセル、HorizontalExtent プロパティ、コントロールの表示領域に、アイテムの右端をスクロールするために 200 に設定する必要があります</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and HorizontalExtent properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_74_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_74_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_74_1.vb)]"
  syntax:
    content: public int HorizontalExtent { get; set; }
    return:
      type: System.Int32
      description: "幅 (ピクセル単位)、水平スクロール バー コントロールをスクロールできること。 既定値は&0; です。"
  overload: System.Windows.Forms.ListBox.HorizontalExtent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  id: HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールに水平スクロール バーを表示するかどうかを示す値を設定します。"
  remarks: "HorizontalScrollbar プロパティを決定するかどうか、<xref:System.Windows.Forms.ListBox>水平スクロールを表示する必要がありますバーの場合内のアイテムの幅、<xref:System.Windows.Forms.ListBox>コントロールの右端を超える</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox>。 このプロパティに設定するときに`true`、 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>内のアイテムの幅に基づく、スクロール バーが自動的に表示 場合、<xref:System.Windows.Forms.ListBox>オーナー描画<xref:System.Windows.Forms.ListBox>、水平スクロール バーを正しく表示するために設定する必要があります、<xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>プロパティ</xref:System.Windows.Forms.ListBox.HorizontalExtent%2A></xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates how to use the HorizontalScrollbar and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_12_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_12_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public bool HorizontalScrollbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールに水平スクロール バーを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.HorizontalScrollbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  id: IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した座標位置にある項目の&0; から始まるインデックスを返します。"
  remarks: "このメソッドでは、コントロール内で特定の場所にある項目を確認することができます。 このメソッドを使用するには、ユーザーが<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>を右クリックしたときに選択されている項目リスト内を決定するには カーソルの位置を決定しに渡される、`p`ユーザーが項目を決定する IndexFromPoint メソッドのパラメーター経由でマウスを右クリックします。 タスクと特定の項目に基づく機能を提供するユーザーに、ショートカット メニューを表示できます。"
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_20_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_20_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_20_1.cs)]"
  syntax:
    content: public int IndexFromPoint (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>項目のインデックスを取得するために使用する座標を格納しているオブジェクト。"
    return:
      type: System.Int32
      description: "指定した座標にある項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  id: IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した座標位置にある項目の&0; から始まるインデックスを返します。"
  remarks: "このメソッドは、コントロール内の特定の場所にある項目を特定することができます。 このメソッドを使用するには、ユーザーが<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>を右クリックしたときに選択されている項目リスト内を決定するには カーソルの位置を決定しに渡される、`x`と`y`のパラメーター、<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを呼び出せば確認する項目のユーザーが経由でマウスを右クリックした</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>。 タスクと特定の項目に基づく機能を提供するユーザーに、ショートカット メニューを表示できます。"
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_18_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_18_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_18_1.cs)]"
  syntax:
    content: public int IndexFromPoint (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "検索する位置の x 座標。"
    - id: y
      type: System.Int32
      description: "検索する位置の y 座標。"
    return:
      type: System.Int32
      description: "指定した座標にある項目の&0; から始まるインデックス返します<xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IntegralHeight
  id: IntegralHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または部分的な項目が表示されないように、コントロールのサイズを変更する必要があるかどうかを示す値を設定します。"
  remarks: "このプロパティに設定するときに`true`コントロールに自動的にサイズを変更し、項目が部分的に表示されないことを確認してください。 元のサイズを維持する場合、<xref:System.Windows.Forms.ListBox>にこのプロパティを設定する、フォームの領域の要件に基づき、 `false`</xref:System.Windows.Forms.ListBox> 。       既定では、<xref:System.Windows.Forms.ListBox>と<xref:System.Windows.Forms.CheckedListBox>サイズは、全体の項目のみが表示されるようにします</xref:System.Windows.Forms.CheckedListBox></xref:System.Windows.Forms.ListBox>。 場合は、<xref:System.Windows.Forms.ListBox>または<xref:System.Windows.Forms.CheckedListBox>を完全にドッキングされている領域を埋める、éý IntegralHeight `false`</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ListBox> 。 これにより、領域に完全にコントロールが、最後の項目は完全に表示されません。       場合、 <xref:System.Windows.Forms.ListBox>、項目が含まれていないこのプロパティは影響を与えません</xref:System.Windows.Forms.ListBox>。      > [!NOTE] > 整数の高さがの高さに基づく、 <xref:System.Windows.Forms.ListBox>、クライアント領域の高さではなく</xref:System.Windows.Forms.ListBox>。 IntegralHeight プロパティを設定するとにその結果、`true`項目をまだ部分的に表示するスクロール バーが表示されます。      > [!NOTE] > 場合、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されている`DrawMode.OwnerDrawVariable`、このプロパティは影響を与えません</xref:System.Windows.Forms.ListBox.DrawMode%2A>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the IntegralHeight property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_40_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_40_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_40_1.vb)]"
  syntax:
    content: public bool IntegralHeight { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>そのが一部の項目を表示しない場合はそのため、コントロールのサイズ変更それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.IntegralHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ItemHeight
  id: ItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定内のアイテムの高さ、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "ときに、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されている`DrawMode.OwnerDrawFixed`、すべてのアイテムを同じ高さがある</xref:System.Windows.Forms.ListBox.DrawMode%2A>。 ときに、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティに設定されている`DrawMode.OwnerDrawVariable`、ItemHeight プロパティ<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>に追加された各項目の高さを指定する</xref:System.Windows.Forms.ListBox.DrawMode%2A> オーナー描画のリスト内の各項目が別の高さを持てないため<xref:System.Windows.Forms.ListBox.GetItemHeight%2A><xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内の特定の項目の高さを取得するメソッド</xref:System.Windows.Forms.ListBox.GetItemHeight%2A>を使用することができます。 ItemHeight プロパティを使用する場合、<xref:System.Windows.Forms.ListBox>可変の高さの項目をこのプロパティは、コントロール内の最初の項目の高さを返します</xref:System.Windows.Forms.ListBox>。       最大の高さ、<xref:System.Windows.Forms.ListBox>項目は、255 ピクセル</xref:System.Windows.Forms.ListBox>。"
  syntax:
    content: public virtual int ItemHeight { get; set; }
    return:
      type: System.Int32
      description: "コントロール内の項目のピクセル単位の高さ。"
  overload: System.Windows.Forms.ListBox.ItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ItemHeight プロパティが設定された 0 または 255 よりも多くのピクセルより低くします。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Items
  id: Items
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "項目を取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "このプロパティでは、 <xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>に格納されている項目の一覧への参照を取得できます。 この参照に項目を追加、アイテムを削除して、コレクション内の項目の数を取得します。 項目のコレクションで実行できるタスクの詳細については、次を参照してください、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラスのリファレンス トピック。</xref:System.Windows.Forms.ListBox.ObjectCollection> 。       項目を操作することも、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティ</xref:System.Windows.Forms.ListControl.DataSource%2A></xref:System.Windows.Forms.ListBox>。 <xref:System.Windows.Forms.ListControl.DataSource%2A><xref:System.Windows.Forms.ListBox><xref:System.Windows.Forms.ListBox>アイテム プロパティは追加できませんを使用して、または一覧からアイテムを削除する<xref:System.Windows.Forms.ListBox.ObjectCollection>。</xref:System.Windows.Forms.ListBox.ObjectCollection>のメソッドを使用して</xref:System.Windows.Forms.ListBox>項目を表示する、</xref:System.Windows.Forms.ListBox>項目を追加するプロパティ</xref:System.Windows.Forms.ListControl.DataSource%2A>を使用する場合"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.l_50_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.l_50_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_50_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.ObjectCollection Items { get; }
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "<xref:System.Windows.Forms.ListBox.ObjectCollection>の項目を表す、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref></xref:System.Windows.Forms.ListBox.ObjectCollection> 。"
  overload: System.Windows.Forms.ListBox.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オーナー描画ときに発生<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>が作成され、リスト項目のサイズが決定されます。"
  remarks: "項目になりますで描画する前にサイズを指定するには、このイベントのイベント ハンドラーを作成することができます、<xref:System.Windows.Forms.ListBox.DrawItem>イベント</xref:System.Windows.Forms.ListBox.DrawItem>。 イベントは、いつ発生する<xref:System.Windows.Forms.ListBox.DrawMode%2A><xref:System.Windows.Forms.DrawMode></xref:System.Windows.Forms.DrawMode>プロパティを設定</xref:System.Windows.Forms.ListBox.DrawMode%2A>する。       有効な最大の高さ、<xref:System.Windows.Forms.ListBox>項目は、255 ピクセル</xref:System.Windows.Forms.ListBox>。 設定、<xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>のプロパティ、<xref:System.Windows.Forms.MeasureItemEventArgs>予期しない結果が生じるこのイベントを処理するときに 255 より大きい値にします</xref:System.Windows.Forms.MeasureItemEventArgs></xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and MeasureItem events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_12_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/e-system.windows.forms.l_12_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/e-system.windows.forms.l_12_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザーがクリックしたときに発生、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>マウス ポインターを持つコントロール。"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MultiColumn
  id: MultiColumn
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>複数の列をサポートしています。"
  remarks: "複数の列、 <xref:System.Windows.Forms.ListBox>、垂直方向のスクロールが不要に必要な列の数にアイテムを配置します</xref:System.Windows.Forms.ListBox>。 ユーザーは、キーボードを使用して、現在表示されていない列に移動します。 設定、<xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>プロパティを`true`を<xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox>の可視領域に現在表示されていない列にスクロールするユーザーを有効にする水平スクロール バーを表示する</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 値、<xref:System.Windows.Forms.ListBox.ColumnWidth%2A>プロパティは、各列の幅を決定します</xref:System.Windows.Forms.ListBox.ColumnWidth%2A>。"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_52_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_52_1.vb)]"
  syntax:
    content: public bool MultiColumn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>複数の列をサポートしています。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.MultiColumn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "複数の列、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>可変サイズの高さを持つことはできません。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.NoMatches
  id: NoMatches
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "検索時に一致が検出されないことを指定します。"
  remarks: "この定数は、によって返される、 <xref:System.Windows.Forms.ListBox.FindString%2A>、 <xref:System.Windows.Forms.ListBox.FindStringExact%2A>、および<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドの検索に一致する値が見つからない場合は</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></xref:System.Windows.Forms.ListBox.FindStringExact%2A></xref:System.Windows.Forms.ListBox.FindString%2A>。"
  syntax:
    content: public const int NoMatches = -1;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.ListBox.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListControl.DataSourceChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  id: OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListControl.DisplayMemberChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnDisplayMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListBox.DrawItem&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnDrawItem メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/6b0d67e7-dfbb-4ef8-bf2d-_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/6b0d67e7-dfbb-4ef8-bf2d-_1.cs)]"
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.ListBox.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "列の幅とその他の特性を設定できるように、ウィンドウのハンドルが作成されたときに指定します。 呼び出すクラスを継承する必要があります<xref uid=&quot;langword_csharp_base.OnHandleCreated&quot; name=&quot;base.OnHandleCreated&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "項目が設定されていることを確認オーバーライド設定および消去アウト正しくです。 呼び出すコントロールを継承する必要があります<xref uid=&quot;langword_csharp_base.OnHandleDestroyed&quot; name=&quot;base.OnHandleDestroyed&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListBox.MeasureItem&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnMeasureItem メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.ListBox.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.Control.Resize&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  id: OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnSelectedValueChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Padding
  id: Padding
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティはこのクラスは使用されません。"
  remarks: "このプロパティはこのクラスは使用されません。"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.ListBox.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.ListBox.Padding*>プロパティが変更された</xref:System.Windows.Forms.ListBox.Padding*>。"
  remarks: "イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Paint
  id: Paint
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロールを描画します。"
  remarks: "このイベントは、このクラスではありません。"
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "すべてのアイテムの高さの合計を取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "このプロパティを使用する、高さを決定すること、<xref:System.Windows.Forms.ListBox>サイズを調整できないリスト内の利用可能なすべての項目を表示するために、垂直スクロール バーが表示されないようにする必要があります</xref:System.Windows.Forms.ListBox>。 場合内の項目の金額、<xref:System.Windows.Forms.ListBox>のサイズが大きいプロパティが発生する可能性があります PreferredHeight の値を使用して、コントロールをサイズ変更、<xref:System.Windows.Forms.ListBox>フォームのクライアント領域の外部でサイズまたは<xref:System.Windows.Forms.ListBox>コンテナー</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 。"
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the PreferredHeight property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListBox.PreferredHeight#1](~/add/codesnippet/csharp/p-system.windows.forms.l_37_1.cs)]\n [!code-vb[ListBox.PreferredHeight#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_37_1.vb)]\n [!code-cpp[ListBox.PreferredHeight#1](~/add/codesnippet/cpp/p-system.windows.forms.l_37_1.cpp)]"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "結合の高さ (ピクセル単位)、コントロール内のすべての項目の。"
  overload: System.Windows.Forms.ListBox.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Refresh
  id: Refresh
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "クライアント領域を無効にし、すぐに自動的に再描画するコントロールとその子コントロールを強制します。"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  id: RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したインデックスに含まれる項目を更新します。"
  remarks: "場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティ セットに割り当てられているデータ ソースのプロパティは、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、変更、値を更新する RefreshItem メソッドを使用して、<xref:System.Windows.Forms.ListBox>コントロール</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListControl.DisplayMember%2A></xref:System.Windows.Forms.ListControl.DisplayMember%2A>。"
  syntax:
    content: protected override void RefreshItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "更新する要素の&0; から始まるインデックス。"
  overload: System.Windows.Forms.ListBox.RefreshItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItems
  id: RefreshItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "すべて更新<xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>アイテムし、それらの新しい文字列を取得します。"
  syntax:
    content: protected override void RefreshItems ();
    parameters: []
  overload: System.Windows.Forms.ListBox.RefreshItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "リセット、<xref:System.Windows.Forms.Control.BackColor*>プロパティをその既定値にします</xref:System.Windows.Forms.Control.BackColor*>。"
  syntax:
    content: public override void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "リセット、<xref:System.Windows.Forms.Control.ForeColor*>プロパティをその既定値にします</xref:System.Windows.Forms.Control.ForeColor*>。"
  syntax:
    content: public override void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールによって表示されるテキストが右から左へ表示されるかどうかを示す値を設定します。"
  remarks: "このプロパティは、右から左に記述されている言語をサポートするメニューを使用します。 このプロパティに設定するときに`true`項目のテキストが右から左から右のメソッドに既定ではなく左に表示されます。"
  syntax:
    content: public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref>値。"
  overload: System.Windows.Forms.ListBox.RightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールの場所、サイズ、埋め込みと余白のスケールを設定します。"
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "コントロールの幅と高さのスケーリングを係数。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref>サイズと位置を定義するときに使用するコントロールの境界を指定する値。"
  overload: System.Windows.Forms.ListBox.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  id: ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または垂直スクロール バーを常に表示するかどうかを示す値を設定します。"
  remarks: "ScrollAlwaysVisible プロパティは、垂直スクロール バーが常に表示されるかどうかを示す場合でも<xref:System.Windows.Forms.ListBox>、垂直スクロール バーを表示するには必要ありません</xref:System.Windows.Forms.ListBox>内の項目数 既定では、<xref:System.Windows.Forms.ListBox>だけを表示することを保証するための十分な項目があるときに垂直スクロール バーが表示されます</xref:System.Windows.Forms.ListBox>。 複数の列の<xref:System.Windows.Forms.ListBox>、ScrollAlwaysVisible プロパティは、水平スクロール バーが表示されることを示します</xref:System.Windows.Forms.ListBox>。 複数列<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>のこのプロパティの値に関係なく、垂直スクロール バーが表示されません。"
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and ScrollAlwaysVisible properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_65_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/p-system.windows.forms.l_65_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/p-system.windows.forms.l_65_1.cpp)]"
  syntax:
    content: public bool ScrollAlwaysVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、垂直スクロール バーは、常に表示される必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndex
  id: SelectedIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定で現在選択されている項目の&0; から始まるインデックス、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "標準的な<xref:System.Windows.Forms.ListBox><xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択した項目のインデックスを確認するには、このプロパティを使用することができます、</xref:System.Windows.Forms.ListBox> 場合、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`SelectionMode.MultiSimple`または`SelectionMode.MultiExtended`(複数選択を示す<xref:System.Windows.Forms.ListBox>) 一覧で複数の項目が選択されていると、このプロパティは、選択したアイテムにインデックスを返すことができます</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.SelectionMode%2A>。       選択した項目を複数選択内のすべてのインデックスを含むコレクションを取得する<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndices%2A></xref:System.Windows.Forms.ListBox>。 現在選択されている項目を取得する場合、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.SelectedItem%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedItem%2A></xref:System.Windows.Forms.ListBox>。 さらに、<xref:System.Windows.Forms.ListBox.SelectedItems%2A>複数選択<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択されたすべての項目を取得するプロパティ</xref:System.Windows.Forms.ListBox.SelectedItems%2A>を使用できます。"
  example:
  - "The following code example demonstrates how to use the SelectedIndex property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_3_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_3_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_3_1.vb)]"
  syntax:
    content: public override int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "現在選択されている項目の&0; から始まるインデックス。 項目が選択されていない場合は-1 が返されます負の値。"
  overload: System.Windows.Forms.ListBox.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "割り当てられた値は、-1 未満またはより大きいか、項目数と同じです。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>プロパティに設定されている<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref></xref:System.Windows.Forms.ListBox.SelectionMode*> 。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <> </> *> プロパティまたは<> *> コレクションが変更されました。"
  remarks: "タイミングを決定するには、このイベントのイベント ハンドラーを作成することで選択されたインデックス、<xref:System.Windows.Forms.ListBox>が変更されました</xref:System.Windows.Forms.ListBox>。 これを利用する<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>の現在の選択に基づくその他のコントロールに情報を表示する必要がある場合 このイベントのイベント ハンドラーを使用して、他のコントロールでの情報を読み込むことができます。       場合、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>プロパティに設定されている<xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>または<xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>、変更、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>などの選択項目から項目を削除するコレクションがこのイベントを発生します</xref:System.Windows.Forms.ListBox.SelectedIndices%2A></xref:System.Windows.Forms.SelectionMode?displayProperty=fullName></xref:System.Windows.Forms.SelectionMode?displayProperty=fullName></xref:System.Windows.Forms.ListBox.SelectionMode%2A>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the SelectedIndexChanged event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the SelectedIndexChanged event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the SelectedIndexChanged event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.l_7_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_7_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.l_7_1.cs)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndices
  id: SelectedIndices
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在選択されているすべての項目の&0; から始まるインデックスを含むコレクションを取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "複数選択<xref:System.Windows.Forms.ListBox>、このプロパティは<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択されているすべての項目のインデックスを含むコレクションを返します</xref:System.Windows.Forms.ListBox> 単一選択<xref:System.Windows.Forms.ListBox>、このプロパティは<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>の唯一の選択した項目のインデックスを含む&1; つの要素を含むコレクションを返します</xref:System.Windows.Forms.ListBox> コレクションの項目を操作する方法の詳細については、 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>。</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>を参照してください。       <xref:System.Windows.Forms.ListBox>クラスには、選択した項目を参照する方法の数が用意されています</xref:System.Windows.Forms.ListBox>。 SelectedIndices プロパティを使用して、単一選択で現在選択されている項目のインデックス位置を取得するのではなく<xref:System.Windows.Forms.ListBox>、使用することができます、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndex%2A></xref:System.Windows.Forms.ListBox>。 現在選択されている項目を取得する場合、 <xref:System.Windows.Forms.ListBox>、項目のインデックス位置ではなくを使用して、<xref:System.Windows.Forms.ListBox.SelectedItem%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedItem%2A></xref:System.Windows.Forms.ListBox>。 さらに、<xref:System.Windows.Forms.ListBox.SelectedItems%2A>複数選択<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択されたすべての項目を取得する場合は、プロパティ</xref:System.Windows.Forms.ListBox.SelectedItems%2A>を使用できます。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/p-system.windows.forms.l_81_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/p-system.windows.forms.l_81_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_81_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedIndexCollection
      description: "A <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>、コントロールで現在選択されている項目のインデックスを格納します</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>。 項目が選択されていない場合、空<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>が返されます</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>。"
  overload: System.Windows.Forms.ListBox.SelectedIndices*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItem
  id: SelectedItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または現在選択されている項目を設定、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "標準的な<xref:System.Windows.Forms.ListBox><xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択されている項目を決定するには、このプロパティを使用することができます、</xref:System.Windows.Forms.ListBox> 場合、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`SelectionMode.MultiSimple`または`SelectionMode.MultiExtended`(複数選択を示す<xref:System.Windows.Forms.ListBox>) 一覧で複数の項目が選択されていると、このプロパティは、選択した項目を返すことができます</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.SelectionMode%2A>。       複数選択で選択されているすべての項目を含むコレクションを取得する<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.SelectedItems%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedItems%2A></xref:System.Windows.Forms.ListBox>。 現在選択されている項目のインデックス位置を取得するかどうか、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndex%2A></xref:System.Windows.Forms.ListBox>。 さらに、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>複数選択<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内のすべての選択されたインデックスを取得するプロパティ</xref:System.Windows.Forms.ListBox.SelectedIndices%2A>を使用できます。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the SelectedItem property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by SelectedItem in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/p-system.windows.forms.l_49_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_49_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/p-system.windows.forms.l_49_1.cs)]"
  syntax:
    content: public object SelectedItem { get; set; }
    return:
      type: System.Object
      description: "コントロールの現在の選択を表すオブジェクト。"
  overload: System.Windows.Forms.ListBox.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItems
  id: SelectedItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在選択されている項目を含むコレクションを取得、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "複数選択<xref:System.Windows.Forms.ListBox>、このプロパティは<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で選択されているすべての項目を含むコレクションを返します</xref:System.Windows.Forms.ListBox> 単一選択<xref:System.Windows.Forms.ListBox>、このプロパティは<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>だけ選択した項目を含む&1; つの要素を含むコレクションを返します</xref:System.Windows.Forms.ListBox> コレクションの項目を操作する方法の詳細については、 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>。</xref:System.Windows.Forms.ListBox.SelectedObjectCollection>を参照してください。       <xref:System.Windows.Forms.ListBox>クラスには、選択した項目を参照する方法の数が用意されています</xref:System.Windows.Forms.ListBox>。 SelectedItems プロパティを使用して、単一選択で現在選択されている項目を取得するのではなく<xref:System.Windows.Forms.ListBox>、使用することができます、<xref:System.Windows.Forms.ListBox.SelectedItem%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedItem%2A></xref:System.Windows.Forms.ListBox>。 現在選択されている項目のインデックス位置を取得する場合、 <xref:System.Windows.Forms.ListBox>、項目自体ではなくを使用して、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndex%2A></xref:System.Windows.Forms.ListBox>。 さらに、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>複数選択<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>内のすべての選択した項目のインデックス位置を取得する場合は、プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndices%2A>を使用できます。"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedObjectCollection
      description: "A<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>コントロールで現在選択されている項目を格納します</xref:System.Windows.Forms.ListBox.SelectedObjectCollection>。"
  overload: System.Windows.Forms.ListBox.SelectedItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectionMode
  id: SelectionMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定の項目を選択するメソッド、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "SelectionMode プロパティでは、項目の数を決定することができます、 <xref:System.Windows.Forms.ListBox>、ユーザーが同時に選択できるし、ユーザーが複数選択を許可する方法</xref:System.Windows.Forms.ListBox>。 SelectionMode プロパティに設定するときに`SelectionMode.MultiExtended`、shift キーを押し、マウスのクリックしてやキーを押してシフトし、方向キー (上向きの矢印、下向きの矢印、左矢印および右矢印) のいずれか、選択範囲を以前に選択した項目から現在のアイテムにします。 CTRL キーを押し、マウスをクリックして、選択または、リスト内の項目の選択を解除します。 プロパティを設定すると`SelectionMode.MultiSimple`マウスのクリックして、または space キーを押して選択または、リスト内の項目を選択解除します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the SelectionMode property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_28_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_28_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_28_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.SelectionMode
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.SelectionMode&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_SelectionMode.One&quot; name=&quot;SelectionMode.One&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.SelectionMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "割り当てられた値が、 <xref href=&quot;System.Windows.Forms.SelectionMode&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した境界を設定、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロール。"
  remarks: "高さ、<xref:System.Windows.Forms.ListBox>コントロールが増加し、複数の減少、<xref:System.Windows.Forms.ListBox.ItemHeight%2A>プロパティ</xref:System.Windows.Forms.ListBox.ItemHeight%2A></xref:System.Windows.Forms.ListBox>。 高さが数値の倍数ではないを<xref:System.Windows.Forms.ListBox.ItemHeight%2A>の高さ、<xref:System.Windows.Forms.ListBox>複数である高さより小さい最大によって変更されます</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.ItemHeight%2A>。       通常、その現在の値を使用して、指定されたパラメーターに含まれていない境界に対応するパラメーターが渡されます。 たとえば、 `height`、 `width`、または`x`または`y`のプロパティ、<xref:System.Windows.Forms.Control.Location%2A>プロパティは、コントロールの現在のインスタンスへの参照で渡すことができます</xref:System.Windows.Forms.Control.Location%2A>。 ただしで渡されるすべての値が受け入れられ、コントロールに適用します。       `specified`パラメーターは、コントロールの要素を表す<xref:System.Windows.Forms.Control.Bounds%2A>アプリケーションで変更されました</xref:System.Windows.Forms.Control.Bounds%2A>。 たとえば、変更する場合、 <xref:System.Windows.Forms.Control.Size%2A>、コントロールの`specified`パラメーター値が<xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Size%2A> ただし場合、<xref:System.Windows.Forms.Control.Size%2A>への応答の調整、<xref:System.Windows.Forms.Control.Dock%2A>プロパティが設定されている、`specified`パラメーター値が<xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Left*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Left*>。"
    - id: y
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Top*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Top*>。"
    - id: width
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Width*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Width*>。"
    - id: height
      type: System.Int32
      description: "新しい<xref:System.Windows.Forms.Control.Height*>コントロールのプロパティの値</xref:System.Windows.Forms.Control.Height*>。"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref>値。"
  overload: System.Windows.Forms.ListBox.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  id: SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "派生クラスでは、指定したインデックスを持つオブジェクトを設定します。"
  syntax:
    content: protected override void SetItemCore (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "オブジェクトの配列インデックス。"
    - id: value
      type: System.Object
      description: "オブジェクト。"
  overload: System.Windows.Forms.ListBox.SetItemCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  id: SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内容をクリア、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>し、コントロールに指定した項目を追加します。"
  syntax:
    content: protected override void SetItemsCore (System.Collections.IList value);
    parameters:
    - id: value
      type: System.Collections.IList
      description: "コントロールに挿入するオブジェクトの配列。"
  overload: System.Windows.Forms.ListBox.SetItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  id: SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "選択または指定された項目の選択を解除、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "このプロパティを使用するには、複数選択の<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で項目の選択を設定するには 単一選択項目を選択する<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティ</xref:System.Windows.Forms.ListBox.SelectedIndex%2A></xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the SetSelected method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_1_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_1_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_1_1.vb)]"
  syntax:
    content: public void SetSelected (int index, bool value);
    parameters:
    - id: index
      type: System.Int32
      description: "内の項目の&0; から始まるインデックス、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>を選択するか選択をクリアします。"
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した項目を選択するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.SetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定されたインデックスは、有効な値の範囲外でした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>プロパティに設定された<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref></xref:System.Windows.Forms.ListBox.SelectionMode*> 。"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sort
  id: Sort
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "内の項目を並べ替えて、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "並べ替えには、場合に、それ自体への各項目を追加するコレクションが強制実行、<xref:System.Windows.Forms.ListBox.Sorted%2A>プロパティは`true`</xref:System.Windows.Forms.ListBox.Sorted%2A>。 各項目は、正しい位置に挿入されます。"
  example:
  - "The following code example demonstrates using the Sort method. The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the Sort method in the derived class to perform a user-defined sort. To run this example paste the following code in an empty form.  \n  \n [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/cpp/m-system.windows.forms.l_19_1.cpp)]\n [!code-cs[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/csharp/m-system.windows.forms.l_19_1.cs)]\n [!code-vb[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: protected virtual void Sort ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sorted
  id: Sorted
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定を示す値かどうかの項目、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>はアルファベット順に並べ替えられます。"
  remarks: "Sorted プロパティを使用して自動的に<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>でアルファベット順に文字列を並べ替える 項目が追加されると、並べ替えに<xref:System.Windows.Forms.ListBox>、項目が並べ替えられたリスト内の適切な場所に移動されます</xref:System.Windows.Forms.ListBox>。 項目を追加するときに、 <xref:System.Windows.Forms.ListBox>、最初の項目を並べ替えるし、新しい項目を追加する方が効率的です</xref:System.Windows.Forms.ListBox>。       A <xref:System.Windows.Forms.ListBox>、Sorted に設定と`true`を使用してデータにバインドされていません、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティ</xref:System.Windows.Forms.ListControl.DataSource%2A></xref:System.Windows.Forms.ListBox>。 バインドされたデータを並べ替えられて表示を<xref:System.Windows.Forms.ListBox>、並べ替えをサポートするデータ ソースにバインドし、並べ替えを提供するデータ ソースを保持する必要があります</xref:System.Windows.Forms.ListBox>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the Sorted property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_17_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_17_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_17_1.vb)]"
  syntax:
    content: public bool Sorted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロール内の項目が並べ替えられる場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.Sorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Text
  id: Text
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはで現在選択されている項目のテキストを検索、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "このプロパティの値が、文字列値に設定されている場合、<xref:System.Windows.Forms.ListBox>内で項目を検索、<xref:System.Windows.Forms.ListBox>を指定したテキストと一致する、項目を選択します</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox>。 <xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>で現在選択されている項目を決定するのに、このプロパティを使用することもできます。 場合、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`SelectionMode.MultiExtended`、このプロパティは、最初に選択した項目のテキストを返します</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.SelectionMode%2A>。 場合、<xref:System.Windows.Forms.ListBox.SelectionMode%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されていない`SelectionMode.None`、このプロパティは、最初に選択した項目のテキストを返します</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.SelectionMode%2A>。"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "コントロールで現在選択されている項目のテキスト。"
  overload: System.Windows.Forms.ListBox.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.ListBox.Text*>プロパティが変更されました</xref:System.Windows.Forms.ListBox.Text*>。"
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TopIndex
  id: TopIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定で最初に表示される項目のインデックス、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  remarks: "<xref:System.Windows.Forms.ListBox>。</xref:System.Windows.Forms.ListBox>の可視領域の上部にあるインデックス位置のゼロ (0) を持つ項目は、最初に、します。 場合の内容、<xref:System.Windows.Forms.ListBox>がスクロールされた、コントロールの表示領域の上部にある別のアイテムがあります</xref:System.Windows.Forms.ListBox>。 内のインデックスを取得するこのプロパティを使用することができます、<xref:System.Windows.Forms.ListBox.ObjectCollection>の<xref:System.Windows.Forms.ListBox>がコントロールの表示領域の上部にある現在配置されている項目の</xref:System.Windows.Forms.ListBox></xref:System.Windows.Forms.ListBox.ObjectCollection>。 このプロパティは、コントロールの表示領域の上部にある一覧でアイテムを配置にも使用できます。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the TopIndex property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_70_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_70_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_70_1.vb)]"
  syntax:
    content: public int TopIndex { get; set; }
    return:
      type: System.Int32
      description: "コントロールで最初に表示される項目の&0; から始まるインデックス。"
  overload: System.Windows.Forms.ListBox.TopIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ToString
  id: ToString
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "文字列表現を返します、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "コントロールを示す文字列を入力、内の項目の数、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>制御、および最初の項目のテキスト プロパティ、 <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>カウントがない場合、0 です。"
  overload: System.Windows.Forms.ListBox.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  id: UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>を認識し、その文字列を使用して描画するときに、タブ文字を拡張、<xref:System.Windows.Forms.ListBox.CustomTabOffsets*>整数の配列</xref:System.Windows.Forms.ListBox.CustomTabOffsets*>。"
  syntax:
    content: public bool UseCustomTabOffsets { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>を認識し、タブ文字が展開され、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseTabStops
  id: UseTabStops
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>認識し、その文字列を描画するときに、タブ文字を展開できます。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.  \n  \n [!code-cs[ListBox.UseTabStops#1](~/add/codesnippet/csharp/p-system.windows.forms.l_62_1.cs)]\n [!code-vb[ListBox.UseTabStops#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_62_1.vb)]\n [!code-cpp[ListBox.UseTabStops#1](~/add/codesnippet/cpp/p-system.windows.forms.l_62_1.cpp)]"
  syntax:
    content: public bool UseTabStops { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがタブ文字を展開する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.ListBox.UseTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  id: WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コマンド メッセージを処理、 <xref href=&quot;System.Windows.Forms.ListView&quot;> </xref>コントロールがトップレベル ウィンドウから受信します。"
  syntax:
    content: protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "<xref href=&quot;System.Windows.Forms.Message&quot;> </xref>がトップレベル ウィンドウに送信される、 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>コントロール。"
  overload: System.Windows.Forms.ListBox.WmReflectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "一覧のウィンドウ プロシージャです。"
  remarks: "継承したクラスはこれをオーバーライドして、機能を追加しますが、一覧を続行する適切に機能することを確認する基本クラスで WndProc メソッドを呼び出す必要があります。"
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows メッセージ オブジェクトです。"
  overload: System.Windows.Forms.ListBox.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ListControl
  isExternal: false
  name: System.Windows.Forms.ListControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Forms.ListBox.#ctor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.ListBox.AllowSelection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListBox.BackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListBox.BackgroundImage
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.ListBox.BeginUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
- uid: System.Windows.Forms.ListBox.BorderStyle
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
- uid: System.Windows.Forms.ListBox.Click
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
- uid: System.Windows.Forms.ListBox.ColumnWidth
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
- uid: System.Windows.Forms.ListBox.ObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+ObjectCollection
  nameWithType: ListBox+ObjectCollection
  fullName: System.Windows.Forms.ListBox+ObjectCollection
- uid: System.Windows.Forms.ListBox.CreateParams
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.IntegerCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+IntegerCollection
  nameWithType: ListBox+IntegerCollection
  fullName: System.Windows.Forms.ListBox+IntegerCollection
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
- uid: System.Windows.Forms.ListBox.DefaultSize
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ListBox.DrawItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.ListBox.DrawMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
- uid: System.Windows.Forms.DrawMode
  parent: System.Windows.Forms
  isExternal: false
  name: DrawMode
  nameWithType: DrawMode
  fullName: System.Windows.Forms.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
- uid: System.Windows.Forms.ListBox.Font
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.ListBox.ForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
- uid: System.Windows.Forms.ListBox.IntegralHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
- uid: System.Windows.Forms.ListBox.MeasureItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.ListBox.MouseClick
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.ListBox.MultiColumn
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.NoMatches
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.Padding
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.ListBox.PaddingChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
- uid: System.Windows.Forms.ListBox.Paint
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.ListBox.PreferredHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
- uid: System.Windows.Forms.ListBox.RefreshItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
- uid: System.Windows.Forms.ListBox.ResetBackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
- uid: System.Windows.Forms.ListBox.ResetForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
- uid: System.Windows.Forms.ListBox.RightToLeft
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
- uid: System.Windows.Forms.ListBox.SelectedIndices
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedIndexCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedIndexCollection
  nameWithType: ListBox+SelectedIndexCollection
  fullName: System.Windows.Forms.ListBox+SelectedIndexCollection
- uid: System.Windows.Forms.ListBox.SelectedItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ListBox.SelectedItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectedObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedObjectCollection
  nameWithType: ListBox+SelectedObjectCollection
  fullName: System.Windows.Forms.ListBox+SelectedObjectCollection
- uid: System.Windows.Forms.ListBox.SelectionMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
- uid: System.Windows.Forms.SelectionMode
  parent: System.Windows.Forms
  isExternal: false
  name: SelectionMode
  nameWithType: SelectionMode
  fullName: System.Windows.Forms.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
- uid: System.Windows.Forms.ListBox.Sort
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
- uid: System.Windows.Forms.ListBox.Sorted
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
- uid: System.Windows.Forms.ListBox.TextChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
- uid: System.Windows.Forms.ListBox.TopIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
- uid: System.Windows.Forms.ListBox.#ctor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox
  nameWithType: ListBox.ListBox
- uid: System.Windows.Forms.ListBox.AddItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore
  nameWithType: ListBox.AddItemsCore
- uid: System.Windows.Forms.ListBox.AllowSelection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
- uid: System.Windows.Forms.ListBox.BackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
- uid: System.Windows.Forms.ListBox.BackgroundImage*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ListBox.BeginUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate
  nameWithType: ListBox.BeginUpdate
- uid: System.Windows.Forms.ListBox.BorderStyle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected
  nameWithType: ListBox.ClearSelected
- uid: System.Windows.Forms.ListBox.ColumnWidth*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
- uid: System.Windows.Forms.ListBox.CreateItemCollection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection
  nameWithType: ListBox.CreateItemCollection
- uid: System.Windows.Forms.ListBox.CreateParams*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.DefaultSize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
- uid: System.Windows.Forms.ListBox.DrawMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate
  nameWithType: ListBox.EndUpdate
- uid: System.Windows.Forms.ListBox.FindString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString
  nameWithType: ListBox.FindString
- uid: System.Windows.Forms.ListBox.FindStringExact*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact
  nameWithType: ListBox.FindStringExact
- uid: System.Windows.Forms.ListBox.Font*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
- uid: System.Windows.Forms.ListBox.ForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight
  nameWithType: ListBox.GetItemHeight
- uid: System.Windows.Forms.ListBox.GetItemRectangle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle
  nameWithType: ListBox.GetItemRectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds
  nameWithType: ListBox.GetScaledBounds
- uid: System.Windows.Forms.ListBox.GetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected
  nameWithType: ListBox.GetSelected
- uid: System.Windows.Forms.ListBox.HorizontalExtent*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint
  nameWithType: ListBox.IndexFromPoint
- uid: System.Windows.Forms.ListBox.IntegralHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
- uid: System.Windows.Forms.ListBox.MultiColumn*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.OnChangeUICues*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues
  nameWithType: ListBox.OnChangeUICues
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: ListBox.OnDataSourceChanged
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged
  nameWithType: ListBox.OnDisplayMemberChanged
- uid: System.Windows.Forms.ListBox.OnDrawItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem
  nameWithType: ListBox.OnDrawItem
- uid: System.Windows.Forms.ListBox.OnFontChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged
  nameWithType: ListBox.OnFontChanged
- uid: System.Windows.Forms.ListBox.OnHandleCreated*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated
  nameWithType: ListBox.OnHandleCreated
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: ListBox.OnHandleDestroyed
- uid: System.Windows.Forms.ListBox.OnMeasureItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem
  nameWithType: ListBox.OnMeasureItem
- uid: System.Windows.Forms.ListBox.OnParentChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged
  nameWithType: ListBox.OnParentChanged
- uid: System.Windows.Forms.ListBox.OnResize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize
  nameWithType: ListBox.OnResize
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: ListBox.OnSelectedIndexChanged
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged
  nameWithType: ListBox.OnSelectedValueChanged
- uid: System.Windows.Forms.ListBox.Padding*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
- uid: System.Windows.Forms.ListBox.PreferredHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh
  nameWithType: ListBox.Refresh
- uid: System.Windows.Forms.ListBox.RefreshItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem
  nameWithType: ListBox.RefreshItem
- uid: System.Windows.Forms.ListBox.RefreshItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems
  nameWithType: ListBox.RefreshItems
- uid: System.Windows.Forms.ListBox.ResetBackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor
  nameWithType: ListBox.ResetBackColor
- uid: System.Windows.Forms.ListBox.ResetForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor
  nameWithType: ListBox.ResetForeColor
- uid: System.Windows.Forms.ListBox.RightToLeft*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl
  nameWithType: ListBox.ScaleControl
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndices*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
- uid: System.Windows.Forms.ListBox.SelectedItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectionMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore
  nameWithType: ListBox.SetBoundsCore
- uid: System.Windows.Forms.ListBox.SetItemCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore
  nameWithType: ListBox.SetItemCore
- uid: System.Windows.Forms.ListBox.SetItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore
  nameWithType: ListBox.SetItemsCore
- uid: System.Windows.Forms.ListBox.SetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected
  nameWithType: ListBox.SetSelected
- uid: System.Windows.Forms.ListBox.Sort*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort
  nameWithType: ListBox.Sort
- uid: System.Windows.Forms.ListBox.Sorted*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
- uid: System.Windows.Forms.ListBox.TopIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString
  nameWithType: ListBox.ToString
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand
  nameWithType: ListBox.WmReflectCommand
- uid: System.Windows.Forms.ListBox.WndProc*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc
  nameWithType: ListBox.WndProc
