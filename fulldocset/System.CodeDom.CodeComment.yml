### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeComment
  id: CodeComment
  children:
  - System.CodeDom.CodeComment.#ctor
  - System.CodeDom.CodeComment.#ctor(System.String)
  - System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)
  - System.CodeDom.CodeComment.DocComment
  - System.CodeDom.CodeComment.Text
  langs:
  - csharp
  name: CodeComment
  nameWithType: CodeComment
  fullName: System.CodeDom.CodeComment
  type: Class
  summary: "コメントを表します。"
  remarks: "単一行コメントを表す CodeComment を使用できます。       A <xref:System.CodeDom.CodeCommentStatement>、CodeComment を含めることができ、ステートメントとして扱われ、ステートメントのコレクション内のコードとして生成することができます</xref:System.CodeDom.CodeCommentStatement>。 複数行コメントを複数の表せる<xref:System.CodeDom.CodeCommentStatement>オブジェクト</xref:System.CodeDom.CodeCommentStatement>。       ソース コードを生成できる CodeDOM グラフにコメントを含める、追加する CodeComment、 <xref:System.CodeDom.CodeCommentStatement>、これをステートメントのコレクション、<xref:System.CodeDom.CodeMemberMethod>またはコメントのコレクション、<xref:System.CodeDom.CodeNamespace>または<xref:System.CodeDom.CodeTypeMember>.</xref:System.CodeDom.CodeTypeMember>から派生した任意のオブジェクト</xref:System.CodeDom.CodeNamespace>を</xref:System.CodeDom.CodeMemberMethod>追加および</xref:System.CodeDom.CodeCommentStatement>"
  example:
  - "This example demonstrates using a CodeComment to represent a comment in source code.  \n  \n [!code-cs[CodeCommentExample#2](~/add/codesnippet/csharp/t-system.codedom.codecom_3_1.cs)]\n [!code-cpp[CodeCommentExample#2](~/add/codesnippet/cpp/t-system.codedom.codecom_3_1.cpp)]\n [!code-vb[CodeCommentExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecom_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeComment : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeComment.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeComment
  langs:
  - csharp
  name: CodeComment()
  nameWithType: CodeComment.CodeComment()
  fullName: System.CodeDom.CodeComment.CodeComment()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeComment&quot;> </xref>クラスです。"
  syntax:
    content: public CodeComment ();
    parameters: []
  overload: System.CodeDom.CodeComment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeComment.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeComment
  langs:
  - csharp
  name: CodeComment(String)
  nameWithType: CodeComment.CodeComment(String)
  fullName: System.CodeDom.CodeComment.CodeComment(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeComment&quot;> </xref>内容として、指定したテキストを持つクラス。"
  syntax:
    content: public CodeComment (string text);
    parameters:
    - id: text
      type: System.String
      description: "コメントの内容です。"
  overload: System.CodeDom.CodeComment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.CodeDom.CodeComment
  langs:
  - csharp
  name: CodeComment(String,Boolean)
  nameWithType: CodeComment.CodeComment(String,Boolean)
  fullName: System.CodeDom.CodeComment.CodeComment(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeComment&quot;> </xref>クラスの指定されたテキストおよびドキュメントのコメントのフラグを使用します。"
  syntax:
    content: public CodeComment (string text, bool docComment);
    parameters:
    - id: text
      type: System.String
      description: "コメントの内容です。"
    - id: docComment
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コメント、ドキュメントのコメントです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.CodeComment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeComment.DocComment
  id: DocComment
  parent: System.CodeDom.CodeComment
  langs:
  - csharp
  name: DocComment
  nameWithType: CodeComment.DocComment
  fullName: System.CodeDom.CodeComment.DocComment
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "取得またはコメントがドキュメント コメントであるかどうかを示す値を設定します。"
  remarks: "一部の言語では、特殊な種類のドキュメントでは、ソース コードを自動的に抽出できるコメントをサポートします。 コメントが別の構文を生成する可能性があります、ドキュメントのコメントであるかどうかを指定するのには、このプロパティを使用できます。 この例は、C# の場合を使用して&quot;//&quot;通常のコメントおよび「//」ドキュメント コメント用です。"
  syntax:
    content: public bool DocComment { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コメント、ドキュメントのコメントです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.CodeComment.DocComment*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeComment.Text
  id: Text
  parent: System.CodeDom.CodeComment
  langs:
  - csharp
  name: Text
  nameWithType: CodeComment.Text
  fullName: System.CodeDom.CodeComment.Text
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "取得またはコメントのテキストを設定します。"
  remarks: "このプロパティのテキストでは、改行を含めることはできません。 複数の行が必要な場合、複数<xref:System.CodeDom.CodeComment>オブジェクトを定義する必要があります</xref:System.CodeDom.CodeComment>。"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "コメント テキストを含む文字列。"
  overload: System.CodeDom.CodeComment.Text*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.CodeDom.CodeComment.#ctor
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: CodeComment()
  nameWithType: CodeComment.CodeComment()
  fullName: System.CodeDom.CodeComment.CodeComment()
- uid: System.CodeDom.CodeComment.#ctor(System.String)
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: CodeComment(String)
  nameWithType: CodeComment.CodeComment(String)
  fullName: System.CodeDom.CodeComment.CodeComment(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: CodeComment(String,Boolean)
  nameWithType: CodeComment.CodeComment(String,Boolean)
  fullName: System.CodeDom.CodeComment.CodeComment(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeComment.DocComment
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: DocComment
  nameWithType: CodeComment.DocComment
  fullName: System.CodeDom.CodeComment.DocComment
- uid: System.CodeDom.CodeComment.Text
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: Text
  nameWithType: CodeComment.Text
  fullName: System.CodeDom.CodeComment.Text
- uid: System.CodeDom.CodeComment.#ctor*
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: CodeComment
  nameWithType: CodeComment.CodeComment
- uid: System.CodeDom.CodeComment.DocComment*
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: DocComment
  nameWithType: CodeComment.DocComment
- uid: System.CodeDom.CodeComment.Text*
  parent: System.CodeDom.CodeComment
  isExternal: false
  name: Text
  nameWithType: CodeComment.Text
