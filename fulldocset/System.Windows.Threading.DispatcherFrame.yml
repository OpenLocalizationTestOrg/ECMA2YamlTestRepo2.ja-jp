### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherFrame
  id: DispatcherFrame
  children:
  - System.Windows.Threading.DispatcherFrame.#ctor
  - System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  - System.Windows.Threading.DispatcherFrame.Continue
  langs:
  - csharp
  name: DispatcherFrame
  nameWithType: DispatcherFrame
  fullName: System.Windows.Threading.DispatcherFrame
  type: Class
  summary: "実行ループを表します、 <xref href=&quot;System.Windows.Threading.Dispatcher&quot;></xref>です。"
  remarks: "通常 DispatcherFrame オブジェクトが&2; つのカテゴリに分類されます。-実行時間の長い、一般的な目的のフレームに指示があった場合は、その終了します。  これらのフレームには、要求されたときを終了する必要があります。      -短時間実行され、特定の非常には、重要な条件が満たされたときにその終了をフレームです。  これらのフレームは、独自の終了条件が満たされるを待って優先して要求されたときの終了が検討してください。  これらのフレームには、それらに関連付けられているタイムアウトが必要です。      <a name=&quot;xamlTextUsage_DispatcherFrame&quot;></a>## XAML テキスト使用状況このマネージ クラスは使用できませんで[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  example:
  - "The following example shows how to use a DispatcherFrame to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: 'public class DispatcherFrame : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref>クラスです。"
  syntax:
    content: public DispatcherFrame ();
    parameters: []
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;> </xref>クラスを使用して、指定された、要求フラグを終了します。"
  remarks: "<xref:System.Windows.Threading.DispatcherFrame>通常は&2; つのカテゴリに分類されます。 - 実行する、一般的な時間の長いに指示があった場合に終了したフレームの目的。</xref:System.Windows.Threading.DispatcherFrame>  これらのフレームには、要求されたときを終了する必要があります。      -短時間実行され、特定の非常には、重要な条件が満たされたときにその終了をフレームです。  これらのフレームは、独自の終了条件が満たされるを待って優先して要求されたときに終了していないことを検討できます。  これらのフレームには、それらに関連付けられているタイムアウトが必要です。      -アプリケーションのシャット ダウン、すべてのフレームがの終了を要求します。"
  syntax:
    content: public DispatcherFrame (bool exitWhenRequested);
    parameters:
    - id: exitWhenRequested
      type: System.Boolean
      description: "すべてのフレームが終了するように要求されたときにこのフレームが終了するかどうかを示します。"
  overload: System.Windows.Threading.DispatcherFrame.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherFrame.Continue
  id: Continue
  parent: System.Windows.Threading.DispatcherFrame
  langs:
  - csharp
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "取得または設定を示す値かどうかこの<xref href=&quot;System.Windows.Threading.DispatcherFrame&quot;></xref>続行する必要があります。"
  remarks: "続行各ディスパッチャー ループの上部にあるクエリを実行します。       アプリケーションのシャット ダウン、すべてのフレームが終了を要求します。      <a name=&quot;xamlTextUsage_Continue&quot;></a>## このクラスの XAML テキスト使用状況のメンバーは、通常使用されないかの[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]では使用できませんまたは[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  example:
  - "The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.  \n  \n [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/visualbasic/dispatchersnippets/window1.xaml.vb#dispatcherdispatcherframedoevents)]\n [!code-cs[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/add/codesnippet/csharp/DispatcherSnippets/Window1.xaml.cs#dispatcherdispatcherframedoevents)]"
  syntax:
    content: public bool Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、フレームを続行する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。  既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Threading.DispatcherFrame.Continue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Threading.DispatcherFrame.#ctor
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame()
  nameWithType: DispatcherFrame.DispatcherFrame()
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame()
- uid: System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame(Boolean)
  nameWithType: DispatcherFrame.DispatcherFrame(Boolean)
  fullName: System.Windows.Threading.DispatcherFrame.DispatcherFrame(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherFrame.Continue
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
  fullName: System.Windows.Threading.DispatcherFrame.Continue
- uid: System.Windows.Threading.DispatcherFrame.#ctor*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: DispatcherFrame
  nameWithType: DispatcherFrame.DispatcherFrame
- uid: System.Windows.Threading.DispatcherFrame.Continue*
  parent: System.Windows.Threading.DispatcherFrame
  isExternal: false
  name: Continue
  nameWithType: DispatcherFrame.Continue
