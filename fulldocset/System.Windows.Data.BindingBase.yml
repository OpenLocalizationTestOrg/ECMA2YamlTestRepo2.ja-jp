### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingBase
  id: BindingBase
  children:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  langs:
  - csharp
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
  type: Class
  summary: "一般的な特性を定義、 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>、 <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>、および<xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>クラスです。"
  remarks: "<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>メソッドはシールされていると、カスタム バインディングから派生するクラス BindingBase が正しく機能しません、[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]マークアップ拡張機能</xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]

      public abstract class BindingBase : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.BindingGroupName
  id: BindingGroupName
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または設定の名前、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>このバインディングが属しています。"
  remarks: "BindingGroupName が設定されていない場合、バインディングが属する、<xref:System.Windows.Data.BindingGroup>場合にのみ、バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>の親を持つ要素を<xref:System.Windows.Data.BindingGroup>同じオブジェクトです</xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A></xref:System.Windows.Data.BindingGroup>。       バインディングが属する BindingGroupName が値に設定されている場合、 <xref:System.Windows.Data.BindingGroup>、次の条件に該当する場合: -<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>BindingGroupName が等しいと</xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup.Name%2A></xref:System.Windows.Data.BindingGroup>。      -<xref:System.Windows.Data.BindingGroup>バインディングのターゲット要素の親要素に属している</xref:System.Windows.Data.BindingGroup>。       BindingGroupName に設定されている場合`null`、バインディングが<xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup>の一部であることはありません       異なるソースのバインドを含めることができます、<xref:System.Windows.FrameworkElement.DataContext%2A>の親を持つ要素を<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と同じ値にバインディングの BindingGroupName プロパティ</xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup.Name%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A>。  同じソースのバインドを除外する<xref:System.Windows.FrameworkElement.DataContext%2A>の親を持つ要素を<xref:System.Windows.Data.BindingGroup>を設定して<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>と異なる値へのバインドの BindingGroupName プロパティ</xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup.Name%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A>。"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the BindingGroupName of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.  In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string BindingGroupName { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>このバインディングが属しています。"
  overload: System.Windows.Data.BindingBase.BindingGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.Delay
  id: Delay
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得またはターゲットの変更の値の後に、バインディング ソースを更新する前に待機するミリ秒単位で、時間を設定します。"
  remarks: "<xref:System.Windows.Data.BindingMode><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A><xref:System.Windows.Data.Binding.Mode%2A>プロパティ</xref:System.Windows.Data.Binding.Mode%2A></xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A></xref:System.Windows.Data.BindingMode>を設定するターゲットのプロパティの値が変更されるたびに、バインディング ソースを更新する、バインディングを使用するとき  このような状況では、ターゲットが変更されたときと、ソースが更新されたときの間の遅延時間が存在するかどうかを指定するのに遅延プロパティを使用できます。  これは、機能は、ソース オブジェクトのプロパティを変更するユーザーを有効にするがソースにすぐにコミットするには、各変更したくない場合に便利です。  たとえば、双方向にデータ バインドされたデータ オブジェクトのプロパティをテキスト ボックスがあるとします。  ユーザーには、テキスト ボックスに値が変更された、ときに、ソースの更新を取得します。  このシナリオを有効にするには、<xref:System.Windows.Data.Binding.Mode%2A><xref:System.Windows.Data.Binding>および<xref:System.Windows.Data.BindingMode><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A><xref:System.Windows.Data.UpdateSourceTrigger>。</xref:System.Windows.Data.UpdateSourceTrigger></xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A></xref:System.Windows.Data.BindingMode></xref:System.Windows.Data.Binding>プロパティ</xref:System.Windows.Data.Binding.Mode%2A>を設定します。  すべてのキーストロークで、ソース オブジェクトの更新を避けるためには、バインディングを入力するユーザーによって中止されたために、期間が経過した後に更新する適切な値に遅延プロパティを設定します。"
  syntax:
    content: public int Delay { get; set; }
    return:
      type: System.Int32
      description: "バインディング ソースを更新する前に待機するミリ秒単位の時間数。"
  overload: System.Windows.Data.BindingBase.Delay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.FallbackValue
  id: FallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または値を返すことではないときに使用する値を設定します。"
  remarks: "バインディングの値を返しますが正常に: 1。  バインディング ソースへのパスを正常に解決します。      2.  値コンバーター、存在する場合は、結果の値を変換することです。      3.  結果の値は、バインディング ターゲット (ターゲット) プロパティに対して無効です。       1 と 2 を返す場合<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>、target プロパティが、FallbackValue の値に設定が 1 つが利用可能な場合</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>。 FallbackValue がない場合は、ターゲット プロパティの既定値が使用されます。       値<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>成功の戻り値とは見なされません</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>。      <a name=&quot;xamlTextUsage_FallbackValue&quot;></a>## XAML テキストの使用方法```   <object FallbackValue=&quot;fallbackValue&quot; />   ``` **- または -** ```   <object>     <object.FallbackValue>       fallbackValue       </object.FallbackValue>   </object>   ``` <a name=&quot;xamlValues_FallbackValue&quot;> </a> ## XAML 値*fallbackValue*ターゲット プロパティと同じ型の属性またはオブジェクト要素の値。                    XAML の使用方法については、その型のドキュメントを参照してください。 その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。 ターゲット プロパティの型 FallbackValue プロパティの値を使用する構文ので影響を与えます。"
  syntax:
    content: public object FallbackValue { get; set; }
    return:
      type: System.Object
      description: "既定値は<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;></xref>です。"
  overload: System.Windows.Data.BindingBase.FallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "このバインディングおよび拡張機能が適用されたプロパティに設定するオブジェクトを返します。"
  remarks: "この実装を提供をバインドの基本構文サポート[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]実用的な派生クラスが提供されるすべての (<xref:System.Windows.Data.Binding>、 <xref:System.Windows.Data.PriorityBinding>、および<xref:System.Windows.Data.MultiBinding>).</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>       <xref:System.Windows.Data.BindingBase>このメソッドのクラスの実装がバインディングの結果である式オブジェクトを取得するが必要です</xref:System.Windows.Data.BindingBase>。 連結のプロパティの動作が、指定された<xref:System.Windows.DependencyProperty>特定の<xref:System.Windows.DependencyObject>。</xref:System.Windows.DependencyObject></xref:System.Windows.DependencyProperty>対象にします。 クエリを実行してこれらの&2; つの情報は送信、<xref:System.Windows.Markup.IProvideValueTarget>上の実装、 `serviceProvider`、どの、 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]リーダーは、バインディングの解析中に使用できるようにします</xref:System.Windows.Markup.IProvideValueTarget>。 この基本クラス実装は、有効な<xref:System.Windows.DependencyProperty>と<xref:System.Windows.DependencyObject>。</xref:System.Windows.DependencyObject></xref:System.Windows.DependencyProperty>のチェック これらが見つからない場合は、バインド式を返すの実際の実装は、基本クラスの呼び出し内部抽象メソッドを持つによって実装されるさまざまな派生クラスになります。 それ以外の場合、拡張機能には、バインディング オブジェクト自体が返されます。 型の不一致エラーの結果、バインディング自体を返すことが、これは通常の状況で発生しません。      > [!IMPORTANT] > ためを通じてバインドの構文[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]で実装されているこのメソッドは、内部のオーバーライドを実装に依存し、ProvideValue 自体が封印されているため、カスタム バインドの派生クラスで<xref:System.Windows.Data.BindingBase>として正しく機能しません、[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]マークアップ拡張機能</xref:System.Windows.Data.BindingBase>。"
  syntax:
    content: public override sealed object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "マークアップ拡張機能のサービスを提供できるオブジェクト。 あります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; 詳細については「解説」セクションを参照してください。"
    return:
      type: System.Object
      description: "バインディング ターゲット プロパティに設定する値。"
  overload: System.Windows.Data.BindingBase.ProvideValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  id: ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "シリアル化プロセスが<xref:System.Windows.Data.BindingBase.FallbackValue*>このクラスのインスタンスのプロパティ</xref:System.Windows.Data.BindingBase.FallbackValue*>の有効な値をシリアル化する必要があるかどうかを示す値を返します"
  syntax:
    content: public bool ShouldSerializeFallbackValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Windows.Data.BindingBase.FallbackValue*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Data.BindingBase.FallbackValue*> 。"
  overload: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  id: ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "示す値を返すかどうか、<xref:System.Windows.Data.BindingBase.TargetNullValue*>プロパティをシリアル化する必要があります</xref:System.Windows.Data.BindingBase.TargetNullValue*>。"
  syntax:
    content: public bool ShouldSerializeTargetNullValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Windows.Data.BindingBase.TargetNullValue*>プロパティは、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Data.BindingBase.TargetNullValue*> 。"
  overload: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.StringFormat
  id: StringFormat
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得またはバインドされた値を文字列として表示される場合、バインディングの書式を設定する方法を指定する文字列を設定します。"
  remarks: "StringFormat には、定義済み、複合、またはカスタムの文字列形式を指定できます。 文字列形式の詳細については、次を参照してください。[型の書式設定](~/add/includes/ajax-current-ext-md.md)です。       設定した場合、 <xref:System.Windows.Data.Binding.Converter%2A>StringFormat プロパティは、コンバーターが最初に、データ値に適用され、StringFormat を適用し、および</xref:System.Windows.Data.Binding.Converter%2A>。       StringFormat を設定すると、<xref:System.Windows.Data.Binding>複合文字列の形式では、1 つだけのパラメーターを指定できます</xref:System.Windows.Data.Binding>。       使用すると<xref:System.Windows.Data.MultiBinding>、のみが設定されている場合、 <xref:System.Windows.Data.MultiBinding>。</xref:System.Windows.Data.MultiBinding> StringFormat プロパティが適用されます。</xref:System.Windows.Data.MultiBinding>  すべての子に設定されている StringFormat 値<xref:System.Windows.Data.Binding>オブジェクトは無視されます</xref:System.Windows.Data.Binding>。  複合文字列の形式でパラメーターの数は、子<xref:System.Windows.Data.Binding><xref:System.Windows.Data.MultiBinding>。</xref:System.Windows.Data.MultiBinding>内のオブジェクト</xref:System.Windows.Data.Binding>の数を超えることはできません。       使用すると、 <xref:System.Windows.Data.PriorityBinding>、上、StringFormat を設定することができます、 <xref:System.Windows.Data.PriorityBinding>、バインディングの子オブジェクト、またはその両方でします</xref:System.Windows.Data.PriorityBinding></xref:System.Windows.Data.PriorityBinding>。  適用される子のバインドに、StringFormat を設定すると、その値が使用されます。  子でバインドが適用されるの StringFormat、StringFormat が設定されていない場合、<xref:System.Windows.Data.PriorityBinding>設定されている場合に適用します</xref:System.Windows.Data.PriorityBinding>。"
  example:
  - "The following example uses the StringFormat property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.  \n  \n [!code-xml[ContentStringSnippets#Binding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#binding)]  \n  \n The following example uses the StringFormat property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.  \n  \n [!code-xml[ContentStringSnippets#MultiBinding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#multibinding)]"
  syntax:
    content: public string StringFormat { get; set; }
    return:
      type: System.String
      description: "バインドされた値を文字列として表示される場合、バインディングの書式を設定する方法を指定する文字列。"
  overload: System.Windows.Data.BindingBase.StringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.TargetNullValue
  id: TargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "ソースの値が、ターゲットのために使用される値を設定を取得または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  remarks: "<a name=&quot;xamlTextUsage_TargetNullValue&quot;></a>## XAML テキストの使用方法```   <object TargetNullValue=&quot;nullValue&quot; />   ``` **- または -** ```   <object>     <object.TargetNullValue>       nullValue       </object.TargetNullValue>   </object>   ``` <a name=&quot;xamlValues_TargetNullValue&quot;> </a> ## XAML 値*nullValue*ターゲット プロパティと同じ型の属性またはオブジェクト要素の値。                    XAML の使用方法については、その型のドキュメントを参照してください。 その種類可能性があります、その値に対して属性の構文をサポートしない可能性がありますまたは可能性があります、またはオブジェクトの要素の構文を必要とする型に既定のコンス トラクター) をサポートしていません。"
  example:
  - "The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.  If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays \"please enter a string.\"  \n  \n [!code-xml[BindingGroupSnippets#TargetNullValue](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#targetnullvalue)]"
  syntax:
    content: public object TargetNullValue { get; set; }
    return:
      type: System.Object
      description: "ソースの値が、ターゲットで使用されている値<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingBase.TargetNullValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase.BindingGroupName
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingBase.Delay
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
- uid: System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.BindingGroupName*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
- uid: System.Windows.Data.BindingBase.Delay*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
- uid: System.Windows.Data.BindingBase.FallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.ProvideValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue
  nameWithType: BindingBase.ProvideValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue
  nameWithType: BindingBase.ShouldSerializeFallbackValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue
  nameWithType: BindingBase.ShouldSerializeTargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
