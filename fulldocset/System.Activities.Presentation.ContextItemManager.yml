### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.ContextItemManager
  id: ContextItemManager
  children:
  - System.Activities.Presentation.ContextItemManager.#ctor
  - System.Activities.Presentation.ContextItemManager.Contains(System.Type)
  - System.Activities.Presentation.ContextItemManager.Contains``1
  - System.Activities.Presentation.ContextItemManager.GetEnumerator
  - System.Activities.Presentation.ContextItemManager.GetTarget(System.Delegate)
  - System.Activities.Presentation.ContextItemManager.GetValue(System.Type)
  - System.Activities.Presentation.ContextItemManager.GetValue``1
  - System.Activities.Presentation.ContextItemManager.NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)
  - System.Activities.Presentation.ContextItemManager.RemoveCallback(System.Delegate,System.Delegate)
  - System.Activities.Presentation.ContextItemManager.SetValue(System.Activities.Presentation.ContextItem)
  - System.Activities.Presentation.ContextItemManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  - System.Activities.Presentation.ContextItemManager.Subscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  - System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.ContextItemManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  - System.Activities.Presentation.ContextItemManager.Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  langs:
  - csharp
  name: ContextItemManager
  nameWithType: ContextItemManager
  fullName: System.Activities.Presentation.ContextItemManager
  type: Class
  summary: "デザイナー編集コンテキストに発行されたコンテキスト項目のセットを保持するクラスを表します。 このクラスは抽象クラスです。"
  remarks: "各<xref:System.Activities.Presentation.ContextItem><xref:System.Activities.Presentation.WorkflowDesigner>。</xref:System.Activities.Presentation.WorkflowDesigner>一時的な状態の一部を ContextItemManager に含まれています。</xref:System.Activities.Presentation.ContextItem>"
  syntax:
    content: 'public abstract class ContextItemManager : System.Collections.Generic.IEnumerable<System.Activities.Presentation.ContextItem>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Activities.Presentation.ContextItem>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: ContextItemManager()
  nameWithType: ContextItemManager.ContextItemManager()
  fullName: System.Activities.Presentation.ContextItemManager.ContextItemManager()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "新しいインスタンスを開始、 <xref href=&quot;System.Activities.Presentation.ContextItemManager&quot;> </xref>クラスです。"
  syntax:
    content: protected ContextItemManager ();
    parameters: []
  overload: System.Activities.Presentation.ContextItemManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Contains(System.Type)
  id: Contains(System.Type)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Contains(Type)
  nameWithType: ContextItemManager.Contains(Type)
  fullName: System.Activities.Presentation.ContextItemManager.Contains(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "派生クラスでオーバーライドされると、指定した型の項目が項目マネージャーにあるかどうかを示す値を返します。"
  syntax:
    content: public abstract bool Contains (Type itemType);
    parameters:
    - id: itemType
      type: System.Type
      description: "チェックする項目の種類。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンテキストには、指定した項目の種類のインスタンスが含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.ContextItemManager.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>itemType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Contains``1
  id: Contains``1
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Contains()
  nameWithType: ContextItemManager.Contains()
  fullName: System.Activities.Presentation.ContextItemManager.Contains()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: 'public bool Contains<TItemType> () where TItemType : System.Activities.Presentation.ContextItem;'
    parameters: []
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Activities.Presentation.ContextItemManager.Contains<TItemType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ContextItemManager.GetEnumerator()
  fullName: System.Activities.Presentation.ContextItemManager.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "派生クラスでオーバーライドされると、編集コンテキストでコンテキスト項目を列挙します。 この列挙体には、隔離されたレイヤーにぶつからない限り、前のレイヤーが含まれています。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.Activities.Presentation.ContextItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Activities.Presentation.ContextItem}
      description: "返します&lt;xref:System.Collections.Generic.IEnumerator%601&gt;、コンテキスト アイテムの列挙が含まれています。"
  overload: System.Activities.Presentation.ContextItemManager.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.GetTarget(System.Delegate)
  id: GetTarget(System.Delegate)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: GetTarget(Delegate)
  nameWithType: ContextItemManager.GetTarget(Delegate)
  fullName: System.Activities.Presentation.ContextItemManager.GetTarget(Delegate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "デリゲートに対して、ターゲット オブジェクトを返すヘルパー メソッドを表します。 デリゲートは、汎用デリゲートにプロキシに作成された、このメソッドはプロキシではなく、元のオブジェクトを返します。"
  syntax:
    content: protected static object GetTarget (Delegate callback);
    parameters:
    - id: callback
      type: System.Delegate
      description: "目的のターゲットのコールバック。"
    return:
      type: System.Object
      description: "返します<xref:System.Object>、コールバックのターゲット オブジェクトが含まれています</xref:System.Object>。"
  overload: System.Activities.Presentation.ContextItemManager.GetTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.GetValue(System.Type)
  id: GetValue(System.Type)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: GetValue(Type)
  nameWithType: ContextItemManager.GetValue(Type)
  fullName: System.Activities.Presentation.ContextItemManager.GetValue(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "派生クラスでオーバーライドされると、要求された項目の種類のインスタンスを返します。 指定された種類のコンテキスト項目がない、空の項目は作成します。"
  syntax:
    content: public abstract System.Activities.Presentation.ContextItem GetValue (Type itemType);
    parameters:
    - id: itemType
      type: System.Type
      description: "返す項目の型。"
    return:
      type: System.Activities.Presentation.ContextItem
      description: "返します<xref href=&quot;System.Activities.Presentation.ContextItem&quot;> </xref>、要求された型のコンテキスト項目が含まれています。 この型のコンテキスト内に項目がない場合、既定値&1; が作成されます。"
  overload: System.Activities.Presentation.ContextItemManager.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>itemType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.GetValue``1
  id: GetValue``1
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: GetValue()
  nameWithType: ContextItemManager.GetValue()
  fullName: System.Activities.Presentation.ContextItemManager.GetValue()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: 'public TItemType GetValue<TItemType> () where TItemType : System.Activities.Presentation.ContextItem;'
    parameters: []
    return:
      type: TItemType
      description: "追加します。"
  overload: System.Activities.Presentation.ContextItemManager.GetValue<TItemType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)
  id: NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: NotifyItemChanged(EditingContext,ContextItem,ContextItem)
  nameWithType: ContextItemManager.NotifyItemChanged(EditingContext,ContextItem,ContextItem)
  fullName: System.Activities.Presentation.ContextItemManager.NotifyItemChanged(EditingContext,ContextItem,ContextItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "保護されたを呼び出すヘルパー メソッドを表す<xref:System.Activities.Presentation.ContextItem.OnItemChanged*>メソッド</xref:System.Activities.Presentation.ContextItem.OnItemChanged*>。"
  syntax:
    content: protected static void NotifyItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem item, System.Activities.Presentation.ContextItem previousItem);
    parameters:
    - id: context
      type: System.Activities.Presentation.EditingContext
      description: "The <xref href=&quot;System.Activities.Presentation.EditingContext&quot;></xref> in use."
    - id: item
      type: System.Activities.Presentation.ContextItem
      description: "The new <xref href=&quot;System.Activities.Presentation.ContextItem&quot;></xref>."
    - id: previousItem
      type: System.Activities.Presentation.ContextItem
      description: "前の<xref href=&quot;System.Activities.Presentation.ContextItem&quot;></xref>です。"
  overload: System.Activities.Presentation.ContextItemManager.NotifyItemChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>, <code>item</code>, or <code>previousItem</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.RemoveCallback(System.Delegate,System.Delegate)
  id: RemoveCallback(System.Delegate,System.Delegate)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: RemoveCallback(Delegate,Delegate)
  nameWithType: ContextItemManager.RemoveCallback(Delegate,Delegate)
  fullName: System.Activities.Presentation.ContextItemManager.RemoveCallback(Delegate,Delegate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "デリゲート削除を実行して、汎用コールバックのプロキシであるデリゲートのラップを解除するヘルパー メソッドを表します。"
  remarks: "実装にこのメソッドを使用して、<xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A>メソッド</xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A>。"
  syntax:
    content: protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);
    parameters:
    - id: existing
      type: System.Delegate
      description: "既存のデリゲート。"
    - id: toRemove
      type: System.Delegate
      description: "削除するデリゲート`existing`です。"
    return:
      type: System.Delegate
      description: "返します<xref:System.Delegate>を新しいデリゲートを割り当てる必要がありますが含まれている<code> existing </code></xref:System.Delegate> 。"
  overload: System.Activities.Presentation.ContextItemManager.RemoveCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.SetValue(System.Activities.Presentation.ContextItem)
  id: SetValue(System.Activities.Presentation.ContextItem)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: SetValue(ContextItem)
  nameWithType: ContextItemManager.SetValue(ContextItem)
  fullName: System.Activities.Presentation.ContextItemManager.SetValue(ContextItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: public abstract void SetValue (System.Activities.Presentation.ContextItem value);
    parameters:
    - id: value
      type: System.Activities.Presentation.ContextItem
      description: "追加します。"
  overload: System.Activities.Presentation.ContextItemManager.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  id: Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Subscribe(Type,SubscribeContextCallback)
  nameWithType: ContextItemManager.Subscribe(Type,SubscribeContextCallback)
  fullName: System.Activities.Presentation.ContextItemManager.Subscribe(Type,SubscribeContextCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "派生クラスでオーバーライドされると、指定した項目の種類の変更のコンテキスト項目ときに呼び出されるイベント コールバックを追加します。"
  syntax:
    content: public abstract void Subscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);
    parameters:
    - id: contextItemType
      type: System.Type
      description: "サブスクライブする項目の種類。"
    - id: callback
      type: System.Activities.Presentation.SubscribeContextCallback
      description: "<xref href=&quot;System.Activities.Presentation.SubscribeContextCallback&quot;> </xref>されているときに呼び出されました`contextItemType`変更します。"
  overload: System.Activities.Presentation.ContextItemManager.Subscribe*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextItemType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Subscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  id: Subscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Subscribe(SubscribeContextCallback<TContextItemType>)
  nameWithType: ContextItemManager.Subscribe(SubscribeContextCallback<TContextItemType>)
  fullName: System.Activities.Presentation.ContextItemManager.Subscribe(SubscribeContextCallback<TContextItemType>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: 'public void Subscribe<TContextItemType> (System.Activities.Presentation.SubscribeContextCallback<TContextItemType> callback) where TContextItemType : System.Activities.Presentation.ContextItem;'
    parameters:
    - id: callback
      type: System.Activities.Presentation.SubscribeContextCallback`1
      description: "追加します。"
  overload: System.Activities.Presentation.ContextItemManager.Subscribe<TContextItemType>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ContextItemManager.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.ContextItemManager.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "編集コンテキストでコンテキスト項目を列挙します。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>。</xref:System.Collections.IEnumerator>を返します。"
  overload: System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  id: Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Unsubscribe(Type,SubscribeContextCallback)
  nameWithType: ContextItemManager.Unsubscribe(Type,SubscribeContextCallback)
  fullName: System.Activities.Presentation.ContextItemManager.Unsubscribe(Type,SubscribeContextCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "派生クラスでオーバーライドされると、サブスクリプションを削除します。"
  syntax:
    content: public abstract void Unsubscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);
    parameters:
    - id: contextItemType
      type: System.Type
      description: "コールバックの削除先コンテキスト項目の種類。"
    - id: callback
      type: System.Activities.Presentation.SubscribeContextCallback
      description: "<xref href=&quot;System.Activities.Presentation.SubscribeContextCallback&quot;> </xref>を削除します。"
  overload: System.Activities.Presentation.ContextItemManager.Unsubscribe*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  id: Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  parent: System.Activities.Presentation.ContextItemManager
  langs:
  - csharp
  name: Unsubscribe(SubscribeContextCallback<TContextItemType>)
  nameWithType: ContextItemManager.Unsubscribe(SubscribeContextCallback<TContextItemType>)
  fullName: System.Activities.Presentation.ContextItemManager.Unsubscribe(SubscribeContextCallback<TContextItemType>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  syntax:
    content: 'public void Unsubscribe<TContextItemType> (System.Activities.Presentation.SubscribeContextCallback<TContextItemType> callback) where TContextItemType : System.Activities.Presentation.ContextItem;'
    parameters:
    - id: callback
      type: System.Activities.Presentation.SubscribeContextCallback`1
      description: "追加します。"
  overload: System.Activities.Presentation.ContextItemManager.Unsubscribe<TContextItemType>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.ContextItemManager.#ctor
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: ContextItemManager()
  nameWithType: ContextItemManager.ContextItemManager()
  fullName: System.Activities.Presentation.ContextItemManager.ContextItemManager()
- uid: System.Activities.Presentation.ContextItemManager.Contains(System.Type)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Contains(Type)
  nameWithType: ContextItemManager.Contains(Type)
  fullName: System.Activities.Presentation.ContextItemManager.Contains(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.ContextItemManager.Contains``1
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Contains()
  nameWithType: ContextItemManager.Contains()
  fullName: System.Activities.Presentation.ContextItemManager.Contains()
- uid: System.Activities.Presentation.ContextItemManager.GetEnumerator
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetEnumerator()
  nameWithType: ContextItemManager.GetEnumerator()
  fullName: System.Activities.Presentation.ContextItemManager.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Activities.Presentation.ContextItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ContextItem>
  nameWithType: IEnumerator<ContextItem>
  fullName: System.Collections.Generic.IEnumerator<System.Activities.Presentation.ContextItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Activities.Presentation.ContextItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.ContextItem
    name: ContextItem
    nameWithType: ContextItem
    fullName: ContextItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.ContextItemManager.GetTarget(System.Delegate)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetTarget(Delegate)
  nameWithType: ContextItemManager.GetTarget(Delegate)
  fullName: System.Activities.Presentation.ContextItemManager.GetTarget(Delegate)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Activities.Presentation.ContextItemManager.GetValue(System.Type)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetValue(Type)
  nameWithType: ContextItemManager.GetValue(Type)
  fullName: System.Activities.Presentation.ContextItemManager.GetValue(Type)
- uid: System.Activities.Presentation.ContextItem
  parent: System.Activities.Presentation
  isExternal: false
  name: ContextItem
  nameWithType: ContextItem
  fullName: System.Activities.Presentation.ContextItem
- uid: System.Activities.Presentation.ContextItemManager.GetValue``1
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetValue()
  nameWithType: ContextItemManager.GetValue()
  fullName: System.Activities.Presentation.ContextItemManager.GetValue()
- uid: TItemType
  isExternal: true
  name: TItemType
  nameWithType: TItemType
  fullName: TItemType
- uid: System.Activities.Presentation.ContextItemManager.NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: NotifyItemChanged(EditingContext,ContextItem,ContextItem)
  nameWithType: ContextItemManager.NotifyItemChanged(EditingContext,ContextItem,ContextItem)
  fullName: System.Activities.Presentation.ContextItemManager.NotifyItemChanged(EditingContext,ContextItem,ContextItem)
- uid: System.Activities.Presentation.EditingContext
  parent: System.Activities.Presentation
  isExternal: false
  name: EditingContext
  nameWithType: EditingContext
  fullName: System.Activities.Presentation.EditingContext
- uid: System.Activities.Presentation.ContextItemManager.RemoveCallback(System.Delegate,System.Delegate)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: RemoveCallback(Delegate,Delegate)
  nameWithType: ContextItemManager.RemoveCallback(Delegate,Delegate)
  fullName: System.Activities.Presentation.ContextItemManager.RemoveCallback(Delegate,Delegate)
- uid: System.Activities.Presentation.ContextItemManager.SetValue(System.Activities.Presentation.ContextItem)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: SetValue(ContextItem)
  nameWithType: ContextItemManager.SetValue(ContextItem)
  fullName: System.Activities.Presentation.ContextItemManager.SetValue(ContextItem)
- uid: System.Activities.Presentation.ContextItemManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Subscribe(Type,SubscribeContextCallback)
  nameWithType: ContextItemManager.Subscribe(Type,SubscribeContextCallback)
  fullName: System.Activities.Presentation.ContextItemManager.Subscribe(Type,SubscribeContextCallback)
- uid: System.Activities.Presentation.SubscribeContextCallback
  parent: System.Activities.Presentation
  isExternal: false
  name: SubscribeContextCallback
  nameWithType: SubscribeContextCallback
  fullName: System.Activities.Presentation.SubscribeContextCallback
- uid: System.Activities.Presentation.ContextItemManager.Subscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Subscribe(SubscribeContextCallback<TContextItemType>)
  nameWithType: ContextItemManager.Subscribe(SubscribeContextCallback<TContextItemType>)
  fullName: System.Activities.Presentation.ContextItemManager.Subscribe(SubscribeContextCallback<TContextItemType>)
- uid: System.Activities.Presentation.SubscribeContextCallback`1
  parent: System.Activities.Presentation
  isExternal: false
  name: SubscribeContextCallback<TContextItemType>
  nameWithType: SubscribeContextCallback<TContextItemType>
  fullName: System.Activities.Presentation.SubscribeContextCallback<TContextItemType>
- uid: System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ContextItemManager.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.ContextItemManager.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Unsubscribe(Type,SubscribeContextCallback)
  nameWithType: ContextItemManager.Unsubscribe(Type,SubscribeContextCallback)
  fullName: System.Activities.Presentation.ContextItemManager.Unsubscribe(Type,SubscribeContextCallback)
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback`1)
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Unsubscribe(SubscribeContextCallback<TContextItemType>)
  nameWithType: ContextItemManager.Unsubscribe(SubscribeContextCallback<TContextItemType>)
  fullName: System.Activities.Presentation.ContextItemManager.Unsubscribe(SubscribeContextCallback<TContextItemType>)
- uid: System.Activities.Presentation.ContextItemManager.#ctor*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: ContextItemManager
  nameWithType: ContextItemManager.ContextItemManager
- uid: System.Activities.Presentation.ContextItemManager.Contains*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Contains
  nameWithType: ContextItemManager.Contains
- uid: System.Activities.Presentation.ContextItemManager.Contains<TItemType>*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Contains<TItemType>
  nameWithType: ContextItemManager.Contains<TItemType>
- uid: System.Activities.Presentation.ContextItemManager.GetEnumerator*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetEnumerator
  nameWithType: ContextItemManager.GetEnumerator
- uid: System.Activities.Presentation.ContextItemManager.GetTarget*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetTarget
  nameWithType: ContextItemManager.GetTarget
- uid: System.Activities.Presentation.ContextItemManager.GetValue*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetValue
  nameWithType: ContextItemManager.GetValue
- uid: System.Activities.Presentation.ContextItemManager.GetValue<TItemType>*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: GetValue<TItemType>
  nameWithType: ContextItemManager.GetValue<TItemType>
- uid: System.Activities.Presentation.ContextItemManager.NotifyItemChanged*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: NotifyItemChanged
  nameWithType: ContextItemManager.NotifyItemChanged
- uid: System.Activities.Presentation.ContextItemManager.RemoveCallback*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: RemoveCallback
  nameWithType: ContextItemManager.RemoveCallback
- uid: System.Activities.Presentation.ContextItemManager.SetValue*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: SetValue
  nameWithType: ContextItemManager.SetValue
- uid: System.Activities.Presentation.ContextItemManager.Subscribe*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Subscribe
  nameWithType: ContextItemManager.Subscribe
- uid: System.Activities.Presentation.ContextItemManager.Subscribe<TContextItemType>*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Subscribe<TContextItemType>
  nameWithType: ContextItemManager.Subscribe<TContextItemType>
- uid: System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ContextItemManager.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Unsubscribe
  nameWithType: ContextItemManager.Unsubscribe
- uid: System.Activities.Presentation.ContextItemManager.Unsubscribe<TContextItemType>*
  parent: System.Activities.Presentation.ContextItemManager
  isExternal: false
  name: Unsubscribe<TContextItemType>
  nameWithType: ContextItemManager.Unsubscribe<TContextItemType>
