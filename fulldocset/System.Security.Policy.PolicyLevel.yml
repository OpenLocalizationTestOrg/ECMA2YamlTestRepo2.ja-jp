### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.PolicyLevel
  id: PolicyLevel
  children:
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  - System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  - System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.PolicyLevel.FullTrustAssemblies
  - System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Label
  - System.Security.Policy.PolicyLevel.NamedPermissionSets
  - System.Security.Policy.PolicyLevel.Recover
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Reset
  - System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.RootCodeGroup
  - System.Security.Policy.PolicyLevel.StoreLocation
  - System.Security.Policy.PolicyLevel.ToXml
  - System.Security.Policy.PolicyLevel.Type
  langs:
  - csharp
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
  type: Class
  summary: "共通言語ランタイムのセキュリティ ポリシー レベルを表します。 このクラスは継承できません。"
  remarks: "> [!IMPORTANT]> 以降で、 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]、共通言語ランタイム (CLR) のコンピューターのセキュリティ ポリシーを提供することから離れた場所に移動します。 使用することをお勧め[Windows ソフトウェア制限ポリシー (SRP)](http://go.microsoft.com/fwlink/?LinkId=178101)または[AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) CLR セキュリティ ポリシーの代わりにします。 このトピックの情報は、.NET Framework バージョン 3.5 以前; に適用されます。適用されません、[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]およびそれ以降。 この変更およびその他の変更の詳細については、次を参照してください。[セキュリティの変更点](~/add/includes/ajax-current-ext-md.md)です。       最上位レベルのセキュリティ ポリシーは、エンタープライズ全体です。 階層の連続する下位レベルでは、さらに、ポリシーの制限を表しますより高いレベルで許可されている以上のアクセス許可を与えることはできません。 次のポリシー レベルが実装されます。 1。  エンタープライズ内のすべてのマネージ コードの Enterprise: セキュリティ ポリシー。      2.  マシン: すべてのマネージ コードのセキュリティ ポリシーは、コンピューターで実行します。      3.  ユーザー: すべてのマネージ コードのセキュリティ ポリシーは、ユーザーが実行されます。      4.  アプリケーション ドメイン: アプリケーション内のすべてのマネージ コードのセキュリティ ポリシー。       ポリシー レベルは、1 つのツリーに編成されたコード グループのセットで構成されます (を参照してください<xref:System.Security.Policy.CodeGroup>)、コード グループに属するコードに付与されるアクセス許可を指定するのには、コード グループによって参照されている名前付き権限セットのセットと完全に信頼されたアセンブリの一覧</xref:System.Security.Policy.CodeGroup>。       使用して<xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>をポリシー レベルを列挙します</xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PolicyLevel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  id: AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "追加、 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>を指定された対応する<xref href=&quot;System.Security.Policy.StrongName&quot;></xref>の一覧に<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリが評価する必要がないアセンブリのグループのメンバーであるかどうかを判別するために使用します。"
  remarks: "AddFullTrustAssembly メソッドは、完全信頼アセンブリの一覧は、これらのバージョンでは使用されないため、.NET framework 2.0 以降のバージョンではサポートされません。"
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>作成に使用される、 <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>のリストに追加する<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリが評価する必要がないアセンブリのグループのメンバーであるかどうかを判別するために使用します。"
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>によって指定された、 <code> sn </code>パラメーターは既に完全な信頼。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定した追加<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>の一覧に<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリが評価する必要がないアセンブリのグループのメンバーであるかどうかを判別するために使用します。"
  remarks: "AddFullTrustAssembly メソッドは、完全信頼アセンブリの一覧は、これらのバージョンでは使用されないため、.NET framework 2.0 以降のバージョンではサポートされません。"
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>のリストに追加する<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリが評価する必要がないアセンブリのグループのメンバーであるかどうかを判別するために使用します。"
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>によって指定された、 <code> snMC </code>パラメーターは既に完全な信頼。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  id: AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "追加、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を現在のポリシー レベルにします。"
  remarks: "ポリシー レベルでは、名前付き権限セットがスコープ設定されます。"
  syntax:
    content: public void AddNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を現在のポリシー レベルに追加します。"
  overload: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> permSet </code>パラメーターには、同じ名前の既存<xref href=&quot;System.Security.NamedPermissionSet&quot;></xref>で、 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  id: ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "置換、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 、指定した現在のポリシー レベルで<xref href=&quot;System.Security.PermissionSet&quot;></xref>です。"
  syntax:
    content: public System.Security.NamedPermissionSet ChangeNamedPermissionSet (string name, System.Security.PermissionSet pSet);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を置き換えます。"
    - id: pSet
      type: System.Security.PermissionSet
      description: "<xref href=&quot;System.Security.PermissionSet&quot;> </xref>を置き換える、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>によって指定された、`name`パラメーター。"
    return:
      type: System.Security.NamedPermissionSet
      description: "コピー、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>が置き換えられました。"
  overload: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>pSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code>パラメーターは、予約済みのアクセス許可セットの名前と同じです。       - または -、 <xref href=&quot;System.Security.PermissionSet&quot;> </xref>によって指定された、 <code> pSet </code>パラメーターが見つかりません。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  id: CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "アプリケーション ドメインのポリシー レベルで使用するための新しいポリシー レベルを作成します。"
  remarks: "このメソッドは、新しい作成<xref:System.Security.Policy.PolicyLevel>で、 <xref:System.Security.Policy.PolicyLevel.Label%2A>&quot;AppDomain&quot;.</xref:System.Security.Policy.PolicyLevel.Label%2A> </xref:System.Security.Policy.PolicyLevel> 新しい<xref:System.Security.Policy.PolicyLevel>同じを最初に含まれて<xref:System.Security.NamedPermissionSet>既定コンピューター ポリシー、およびはのようにオブジェクトを付与する&1; つのルート コード グループがある`FullTrust`すべてのコードにします</xref:System.Security.NamedPermissionSet></xref:System.Security.Policy.PolicyLevel>。"
  syntax:
    content: public static System.Security.Policy.PolicyLevel CreateAppDomainLevel ();
    parameters: []
    return:
      type: System.Security.Policy.PolicyLevel
      description: "新しく作成された<xref href=&quot;System.Security.Policy.PolicyLevel&quot;></xref>です。"
  overload: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。"
  syntax:
    content: public void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "XML は、セキュリティ オブジェクトを再構築に使用するエンコーディングします。"
  overload: System.Security.Policy.PolicyLevel.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.SecurityElement&quot;> </xref>によって指定された、 <code> e </code>パラメーターが無効です。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "一覧を取得<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリがセキュリティ ポリシーの評価に使用されるアセンブリのグループのメンバーであるかどうかを判別するために使用します。"
  remarks: "FullTrustAssemblies は、一覧にないアセンブリのセキュリティ ポリシーの評価中に完全信頼が与えられますが、完全な信頼ポリシーのセキュリティ システムによって直接評価されるときに自動的に付与されません。       完全信頼アセンブリの一覧は、これらのバージョンでは使用されないために、FullTrustAssemblies プロパティは、.NET framework 2.0 以降のバージョンでサポートされていません。"
  syntax:
    content: public System.Collections.IList FullTrustAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "一連の<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>オブジェクトのアセンブリがセキュリティ ポリシーの評価に使用されるアセンブリのグループのメンバーであるかどうかを判別するために使用します。 これらのアセンブリには、一覧にないアセンブリのセキュリティ ポリシーの評価中に完全信頼が与えられます。"
  overload: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  id: GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "返します、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>指定した名前と現在のポリシー レベルにします。"
  syntax:
    content: public System.Security.NamedPermissionSet GetNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を検索します。"
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 、それ以外の場合は、指定した名前と現在のポリシー レベルで<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Label
  id: Label
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ポリシー レベルのわかりやすいラベルを取得します。"
  remarks: "ラベルは、ポリシー レベルを識別する管理者のために使用します。"
  syntax:
    content: public string Label { get; }
    return:
      type: System.String
      description: "ポリシー レベルに関連付けられているラベルです。"
  overload: System.Security.Policy.PolicyLevel.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  id: NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "名前付き権限セットをポリシー レベルの定義の一覧を取得します。"
  syntax:
    content: public System.Collections.IList NamedPermissionSets { get; }
    return:
      type: System.Collections.IList
      description: "名前付き権限セットをポリシー レベルの定義の一覧。"
  overload: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Recover
  id: Recover
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "この構成ファイルを置き換えます<xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> (保存された前回の時刻より前にポリシーの状態を反映する) 最後のバックアップを返すと、最後の状態を保存します。"
  remarks: "このメソッドは現在<xref:System.Security.Policy.PolicyLevel>。</xref:System.Security.Policy.PolicyLevel>への変更を加えません。 代わりに、更新、<xref:System.Security.Policy.PolicyLevel>オブジェクトのファイルと<xref:System.Security.Policy.PolicyLevel>ポリシーを評価する、セキュリティ システムを使用している</xref:System.Security.Policy.PolicyLevel></xref:System.Security.Policy.PolicyLevel>。       このメソッドは、caspol によって使用-オプションの回復 (を参照してください[Caspol.exe (コード アクセス セキュリティ ポリシー ツール)](~/add/includes/ajax-current-ext-md.md))。"
  syntax:
    content: public void Recover ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Recover*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "ポリシー レベルには、有効な構成ファイルはありません。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定したアセンブリを削除<xref href=&quot;System.Security.Policy.StrongName&quot;></xref>アセンブリの一覧から、ポリシー レベルを使用してポリシーを評価します。"
  remarks: "RemoveFullTrustAssembly メソッドは、完全信頼アセンブリの一覧は、これらのバージョンでは使用されないため、.NET framework 2.0 以降のバージョンではサポートされません。"
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "<xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>のポリシーを評価するためのアセンブリの一覧から削除するアセンブリ。"
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "使用して、アセンブリ、 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>によって指定された、 <code> sn </code>パラメーターには、完全な信頼はありません。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定したアセンブリを削除<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;></xref>アセンブリの一覧から、ポリシー レベルを使用してポリシーを評価します。"
  remarks: "RemoveFullTrustAssembly メソッドは、完全信頼アセンブリの一覧は、これらのバージョンでは使用されないため、.NET framework 2.0 以降のバージョンではサポートされません。"
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>のポリシーを評価するためのアセンブリの一覧から削除するアセンブリ。"
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref>によって指定された、 <code> snMC </code>パラメーターには、完全な信頼はありません。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  id: RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定された削除<xref href=&quot;System.Security.NamedPermissionSet&quot;></xref>現在のポリシー レベルから。"
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を現在のポリシー レベルから削除します。"
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>が削除されました。"
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>によって指定された、 <code> permSet </code>パラメーターが見つかりませんでした。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  id: RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "削除、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>現在のポリシー レベルから指定した名前です。"
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>を削除します。"
    return:
      type: System.Security.NamedPermissionSet
      description: "<xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>が削除されました。"
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code>パラメーターは、予約済みのアクセス許可セットの名前と同じです。       - または -、 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref>指定した名前が見つかりません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Reset
  id: Reset
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "既定の状態には、現在のポリシー レベルを返します。"
  remarks: "既定の状態は、ポリシー レベルごとに異なります。"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ポリシー レベルの証拠に基づいてポリシーを解決し、その結果を返します<xref href=&quot;System.Security.Policy.PolicyStatement&quot;></xref>です。"
  remarks: "解決操作では、基本的なポリシー評価のポリシー レベルです。 入力としての証拠のセットを指定するには、このメソッドは、ルートから開始し、一致するコード グループのメンバーシップ条件をテストします。 一致するコードから結果として得られる権限の組み合わせを生成をグループ化、<xref:System.Security.Policy.PolicyStatement>返される</xref:System.Security.Policy.PolicyStatement>。       コードへのアクセス許可を付与するのには、セキュリティ ポリシーは、すべての適用可能なポリシー レベルは、コード アクセス許可の要求と共に、解決済みのポリシー ステートメントを使用します。"
  example:
  - "The following code shows the use of the Resolve method. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#13](~/add/codesnippet/cpp/m-system.security.policy_27_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#13](~/add/codesnippet/csharp/m-system.security.policy_27_1.cs)]\n [!code-vb[system.Security.policy.policylevel#13](~/add/codesnippet/visualbasic/m-system.security.policy_27_1.vb)]"
  syntax:
    content: public System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>解決に使用する、 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;></xref>です。"
    return:
      type: System.Security.Policy.PolicyStatement
      description: "その結果、 <xref href=&quot;System.Security.Policy.PolicyStatement&quot;></xref>です。"
  overload: System.Security.Policy.PolicyLevel.Resolve*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "ポリシー レベルには、排他的としてマークされている複数の一致するコード グループが含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ポリシー レベルでポリシーを解決し、証拠に一致するコード グループ ツリーのルートを返します。"
  remarks: "このメソッドを使用すると、特定の証拠のセットに対してポリシー レベル内のコード グループの効果を分析します。 たとえば、セキュリティ ポリシーは、アセンブリが必要な最小限のコードの要求権限を許可されませんが場合、によって正確な位置、問題がコード グループの検査に指示するが困難ができます。       このメソッドが子コード グループを持つことができるコード グループを返すので、管理者は、コード グループとその子コード グループを確認し、どのコード グループ一致を判断する可能性があります。"
  syntax:
    content: public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>ポリシーを解決するために使用します。"
    return:
      type: System.Security.Policy.CodeGroup
      description: "A <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref>指定した証拠と一致するコード グループのツリーのルートを表すです。"
  overload: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "ポリシー レベルには、排他的としてマークされている複数の一致するコード グループが含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  id: RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得またはポリシー レベルのルート コード グループを設定します。"
  remarks: "すべてのポリシー レベルが&1; つのルート<xref:System.Security.Policy.CodeGroup>。</xref:System.Security.Policy.CodeGroup>"
  syntax:
    content: public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }
    return:
      type: System.Security.Policy.CodeGroup
      description: "<xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref>ポリシー レベルのコード グループのツリーのルートはします。"
  overload: System.Security.Policy.PolicyLevel.RootCodeGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "RootCodeGroup の値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  id: StoreLocation
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ポリシー ファイルが格納されているパスを取得します。"
  remarks: ''
  example:
  - "The following code shows how to display the store location for a policy level. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#15](~/add/codesnippet/cpp/p-system.security.policy_12_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#15](~/add/codesnippet/csharp/p-system.security.policy_12_1.cs)]\n [!code-vb[system.Security.policy.policylevel#15](~/add/codesnippet/visualbasic/p-system.security.policy_12_1.vb)]"
  syntax:
    content: public string StoreLocation { get; }
    return:
      type: System.String
      description: "ポリシー ファイルの格納場所のパスまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>記憶域の場所はありません。"
  overload: System.Security.Policy.PolicyLevel.StoreLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ToXml
  id: ToXml
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "セキュリティ オブジェクトと現在の状態の XML エンコードを作成します。"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、セキュリティ オブジェクトの XML エンコード。"
  overload: System.Security.Policy.PolicyLevel.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Type
  id: Type
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ポリシー レベルの種類を取得します。"
  remarks: "最上位レベルのセキュリティ ポリシーは、エンタープライズ全体です。 階層の連続する下位レベルでは、さらに、ポリシーの制限を表しますより高いレベルで許可されている以上のアクセス許可を与えることはできません。 次の順序でのポリシー レベルに示します。      1.  Enterprise 2。  Machine 3 です。  ユーザー 4。  詳細については、アプリケーション ドメインは、 <xref:System.Security.PolicyLevelType>。</xref:System.Security.PolicyLevelType>を参照してください。"
  syntax:
    content: public System.Security.PolicyLevelType Type { get; }
    return:
      type: System.Security.PolicyLevelType
      description: "1 つ、 <xref href=&quot;System.Security.PolicyLevelType&quot;> </xref>値。"
  overload: System.Security.Policy.PolicyLevel.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
- uid: System.Security.Policy.StrongName
  parent: System.Security.Policy
  isExternal: false
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.StrongNameMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: StrongNameMembershipCondition
  nameWithType: StrongNameMembershipCondition
  fullName: System.Security.Policy.StrongNameMembershipCondition
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Label
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Reset
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.CodeGroup
  parent: System.Security.Policy
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
- uid: System.Security.Policy.PolicyLevel.Type
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly
  nameWithType: PolicyLevel.AddFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet
  nameWithType: PolicyLevel.AddNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet
  nameWithType: PolicyLevel.ChangeNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel
  nameWithType: PolicyLevel.CreateAppDomainLevel
- uid: System.Security.Policy.PolicyLevel.FromXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml
  nameWithType: PolicyLevel.FromXml
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet
  nameWithType: PolicyLevel.GetNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Label*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover
  nameWithType: PolicyLevel.Recover
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly
  nameWithType: PolicyLevel.RemoveFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet
  nameWithType: PolicyLevel.RemoveNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Reset*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset
  nameWithType: PolicyLevel.Reset
- uid: System.Security.Policy.PolicyLevel.Resolve*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve
  nameWithType: PolicyLevel.Resolve
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml
  nameWithType: PolicyLevel.ToXml
- uid: System.Security.Policy.PolicyLevel.Type*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
