### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  id: KeyContainerPermissionAccessEntryCollection
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>オブジェクト。 このクラスは継承できません。"
  remarks: "<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトは、特定のキー コンテナーのアクセス権を指定します。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "追加、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>オブジェクトをコレクション。"
  remarks: "<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトがコレクションの末尾に追加します</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。"
  syntax:
    content: public int Add (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>を追加するオブジェクト。"
    return:
      type: System.Int32
      description: "新しい要素の挿入位置のインデックス。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  id: Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "すべてを削除、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>コレクションからオブジェクト。"
  remarks: "このメソッドを使用して、 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>。</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>を空にします。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  id: CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ターゲット配列の指定したインデックスから始まる、互換性のある&1; 次元配列にコレクションの要素をコピーします。"
  syntax:
    content: public void CopyTo (System.Security.Permissions.KeyContainerPermissionAccessEntry[] array, int index);
    parameters:
    - id: array
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "1 次元<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>現在のコレクションからコピーされた要素のコピー先である配列。"
    - id: index
      type: System.Int32
      description: "内のインデックス`array`コピーの開始位置。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>下限値よりも小さい<code>array</code>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - コレクション内の要素の数がから利用可能な領域より大きく<code>index</code>変換先の末尾に<code>array</code>です。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  id: Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "コレクション内の項目数を取得します。"
  remarks: "数を決定する、Count プロパティを使用して<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>内のオブジェクト、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>コレクションです</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection></xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。 Count プロパティはコレクションを反復処理するときにコレクションの上限を確認します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "数<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>コレクション内のオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "返します、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref>コレクション内のオブジェクトを反復処理に使用できるオブジェクト。"
  remarks: "このメソッドを使用して、作成、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>を各項目を取得するコレクションを反復処理に使用できるオブジェクト</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>。       使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>コレクション内で現在の項目を取得する列挙子のプロパティが指す</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>。       使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッドの列挙子はコレクション内の次の項目に移動します</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>。       使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>メソッドの列挙子を初期位置に移動します</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>。      > [!NOTE] > を作成した後、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>オブジェクト、またはを使用して、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>列挙子をコレクションの最初の項目に移動するメソッドを呼び出す必要があります、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>メソッド</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A></xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>。 によって表される項目のそれ以外の場合、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>プロパティが定義されていません</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>。"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref>コレクションを反復処理するために使用できるオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "指定したコレクションのインデックスを取得<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>オブジェクトをコレクション内に存在する場合。"
  remarks: "このメソッドを使用して、指定したインデックス番号を特定する<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>コレクション内のオブジェクト</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。 場合、指定した<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトが見つからない、値-1 が返されます</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。"
  syntax:
    content: public int IndexOf (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>検索するオブジェクト。"
    return:
      type: System.Int32
      description: "指定したインデックス<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>一致が見つからない場合、コレクション、または –&1; 内のオブジェクトします。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "コレクションが同期されているかどうかを示す値 (スレッド セーフである) を取得します。"
  remarks: "このプロパティを実装して、<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>プロパティと、常に返します`false`</xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "コレクション内の指定したインデックス位置の項目を取得します。"
  remarks: "このインデクサーを使用して、取得、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>オブジェクトから、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>配列表記を使用して、指定したインデックス位置</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection></xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "アクセスする要素の&0; から始まるインデックス。"
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>オブジェクト、コレクション内の指定したインデックス位置。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>コレクションの数以上です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>index</code>負の値。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "指定された削除<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>オブジェクトをコレクションからです。"
  remarks: "コレクションから項目を削除するときに、コレクション内の後続の項目のインデックス値が変更されます。 削除された項目に関するすべての情報が削除されます。 削除する実際の項目を指定することによって、特定のアイテムを削除する場合は、このメソッドを使用します。 一覧からすべての項目を削除するには、使用、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>メソッド</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>。"
  syntax:
    content: public void Remove (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>削除するオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: "この実装で返されるオブジェクトは、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>オブジェクト自体です</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>。       SyncRoot プロパティの詳細については、次を参照してください、<xref:System.Collections.ICollection.SyncRoot%2A>のプロパティ、<xref:System.Collections.ICollection?displayProperty=fullName>インターフェイス。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A> 。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するために使用できるオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ターゲット配列の指定したインデックスから始まる、互換性のある&1; 次元配列にコレクションの要素をコピーします。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "現在のコレクションからコピーされた要素のコピー先である&1; 次元配列。"
    - id: index
      type: System.Int32
      description: "内のインデックス`array`コピーの開始位置。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>下限値よりも小さい<code>array</code>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - コレクション内の要素の数がから利用可能な領域より大きく<code>index</code>変換先の末尾に<code>array</code>です。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "返します、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref>コレクション内のオブジェクトを反復処理に使用できるオブジェクト。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref>コレクションを反復処理するために使用できるオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator
