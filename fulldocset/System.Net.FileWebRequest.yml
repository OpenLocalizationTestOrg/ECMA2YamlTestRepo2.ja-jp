### YamlMime:ManagedReference
items:
- uid: System.Net.FileWebRequest
  id: FileWebRequest
  children:
  - System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.FileWebRequest.Abort
  - System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FileWebRequest.ConnectionGroupName
  - System.Net.FileWebRequest.ContentLength
  - System.Net.FileWebRequest.ContentType
  - System.Net.FileWebRequest.Credentials
  - System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.FileWebRequest.GetRequestStream
  - System.Net.FileWebRequest.GetResponse
  - System.Net.FileWebRequest.Headers
  - System.Net.FileWebRequest.Method
  - System.Net.FileWebRequest.PreAuthenticate
  - System.Net.FileWebRequest.Proxy
  - System.Net.FileWebRequest.RequestUri
  - System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.FileWebRequest.Timeout
  - System.Net.FileWebRequest.UseDefaultCredentials
  langs:
  - csharp
  name: FileWebRequest
  nameWithType: FileWebRequest
  fullName: System.Net.FileWebRequest
  type: Class
  summary: "<xref:System.Net.WebRequest>クラス</xref:System.Net.WebRequest>のファイル システムの実装を提供します。"
  remarks: "FileWebRequest クラスが実装、<xref:System.Net.WebRequest>`abstract`を使用する Uniform Resource Identifier (Uri) の基本クラス、`file://`スキームがローカル ファイルを要求します。</xref:System.Net.WebRequest>       使用しないで、<xref:System.Net.FileWebRequest.%23ctor%2A>コンス トラクター</xref:System.Net.FileWebRequest.%23ctor%2A> 。 <xref:System.Net.WebRequest.Create%2A?displayProperty=fullName>FileWebRequest クラスの新しいインスタンスを初期化するメソッド</xref:System.Net.WebRequest.Create%2A?displayProperty=fullName>を使用して URI スキームが場合`file://`、 <xref:System.Net.WebRequest.Create%2A>FileWebRequest オブジェクトを返します</xref:System.Net.WebRequest.Create%2A>。       <xref:System.Net.FileWebRequest.GetResponse%2A>メソッドは、同期要求で指定されたファイルの<xref:System.Net.FileWebRequest.RequestUri%2A>プロパティを返す、<xref:System.Net.FileWebResponse>の応答を格納するオブジェクト</xref:System.Net.FileWebResponse></xref:System.Net.FileWebRequest.RequestUri%2A></xref:System.Net.FileWebRequest.GetResponse%2A>。 使用してファイルへの非同期要求を行うことができます、<xref:System.Net.FileWebRequest.BeginGetResponse%2A>と<xref:System.Net.FileWebRequest.EndGetResponse%2A>メソッド</xref:System.Net.FileWebRequest.EndGetResponse%2A></xref:System.Net.FileWebRequest.BeginGetResponse%2A>。       ファイルにデータを記述するときに、<xref:System.Net.FileWebRequest.GetRequestStream%2A>メソッドを返します、<xref:System.IO.Stream>インスタンスへの書き込みを</xref:System.IO.Stream></xref:System.Net.FileWebRequest.GetRequestStream%2A>。 <xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.FileWebRequest.EndGetRequestStream%2A>メソッドは、書き込みのデータ ストリームに非同期アクセスを提供します</xref:System.Net.FileWebRequest.EndGetRequestStream%2A></xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>。       FileWebRequest クラスの依存、<xref:System.IO.File>エラー処理とコード アクセス セキュリティのクラス</xref:System.IO.File>。"
  example:
  - "The following code example uses the FileWebRequest class to access a file system resource.  \n  \n [!code-cs[System.Net.FileWebRequest#1](~/add/codesnippet/csharp/t-system.net.filewebrequ_1.cs)]\n [!code-vb[System.Net.FileWebRequest#1](~/add/codesnippet/visualbasic/t-system.net.filewebrequ_1.vb)]\n [!code-cpp[System.Net.FileWebRequest#1](~/add/codesnippet/cpp/t-system.net.filewebrequ_1.cpp)]"
  syntax:
    content: 'public class FileWebRequest : System.Net.WebRequest, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Net.WebRequest
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: FileWebRequest(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.FileWebRequest(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.FileWebRequest(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.FileWebRequest&quot;> </xref>クラスの指定したインスタンスから、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>と<xref:System.Runtime.Serialization.StreamingContext>クラス</xref:System.Runtime.Serialization.StreamingContext>。"
  remarks: "このコンス トラクターは、<xref:System.Runtime.Serialization.ISerializable><xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>のインターフェイス</xref:System.Runtime.Serialization.ISerializable>を実装します。"
  syntax:
    content: protected FileWebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>新しいシリアル化するために必要な情報を含むオブジェクト<xref href=&quot;System.Net.FileWebRequest&quot;></xref>オブジェクト。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>、新規に関連付けられているシリアル化ストリームのソースを格納しているオブジェクト<xref href=&quot;System.Net.FileWebRequest&quot;></xref>オブジェクト</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Net.FileWebRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.Abort
  id: Abort
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FileWebRequest.Abort()
  fullName: System.Net.FileWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "インターネット リソースへの要求を取り消します。"
  remarks: "Abort メソッドでは、リソースへの要求を取り消します。 要求が取り消されると後の呼び出し、 <xref:System.Net.FileWebRequest.GetResponse%2A>、 <xref:System.Net.FileWebRequest.BeginGetResponse%2A>、 <xref:System.Net.FileWebRequest.EndGetResponse%2A>、 <xref:System.Net.FileWebRequest.GetRequestStream%2A>、 <xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>、<xref:System.Net.FileWebRequest.EndGetRequestStream%2A><xref:System.Net.WebException><xref:System.Net.WebException.Status%2A><xref:System.Net.WebExceptionStatus></xref:System.Net.WebExceptionStatus>プロパティを設定</xref:System.Net.WebException.Status%2A>する</xref:System.Net.WebException>と、メソッド</xref:System.Net.FileWebRequest.EndGetRequestStream%2A>または</xref:System.Net.FileWebRequest.BeginGetRequestStream%2A></xref:System.Net.FileWebRequest.GetRequestStream%2A></xref:System.Net.FileWebRequest.EndGetResponse%2A></xref:System.Net.FileWebRequest.BeginGetResponse%2A></xref:System.Net.FileWebRequest.GetResponse%2A>。       **注**このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。 詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FileWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FileWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FileWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "非同期要求を開始、<xref:System.IO.Stream>データの書き込みに使用するオブジェクト</xref:System.IO.Stream>。"
  remarks: "BeginGetRequestStream メソッドでは、ファイル システム リソースへのデータの送信に使用されるストリームへの非同期要求を開始します。 実装するコールバック メソッド、<xref:System.AsyncCallback>使用を委任、<xref:System.Net.FileWebRequest.EndGetRequestStream%2A>要求ストリームを返すメソッド</xref:System.Net.FileWebRequest.EndGetRequestStream%2A></xref:System.AsyncCallback>。"
  example:
  - "The following code example uses BeginGetRequestStream to make an asynchronous request for a <xref:System.IO.Stream> object.  \n  \n [!code-cpp[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/cpp/092a81af-2a35-44ca-8486-_1.cpp)]\n [!code-cs[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/csharp/092a81af-2a35-44ca-8486-_1.cs)]\n [!code-vb[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/visualbasic/092a81af-2a35-44ca-8486-_1.vb)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委任します</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "この要求の状態情報を格納するオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期要求を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.FileWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "<xref:System.Net.FileWebRequest.Method*>プロパティは`GET`し、アプリケーションが、ストリームに書き込みます</xref:System.Net.FileWebRequest.Method*>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ストリームは、BeginGetRequestStream を以前の呼び出しによって使用されています。"
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "書き込みストリームがありません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref href=&quot;System.Net.FileWebRequest&quot;> </xref>が中止されました。"
  platform:
  - net462
- uid: System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FileWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FileWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "ファイル システム リソースへの非同期要求を開始します。"
  remarks: "<xref:System.AsyncCallback>デリゲートは<xref:System.Net.FileWebRequest.EndGetResponse%2A>実際の<xref:System.Net.FileWebResponse>。</xref:System.Net.FileWebResponse>を返すメソッド</xref:System.Net.FileWebRequest.EndGetResponse%2A></xref:System.AsyncCallback>を実装する非同期コールバック メソッド"
  example:
  - "The following code example uses the BeginGetResponse method to asynchronously access a file system resource.  \n  \n [!code-cs[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/csharp/m-system.net.filewebrequ_2_1.cs)]\n [!code-cpp[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/cpp/m-system.net.filewebrequ_2_1.cpp)]\n [!code-vb[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/visualbasic/m-system.net.filewebrequ_2_1.vb)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>委任します</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "この要求の状態情報を格納するオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期要求を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.FileWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ストリームは既に処理前の呼び出しによって使用されています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref href=&quot;System.Net.FileWebRequest&quot;> </xref>が中止されました。"
  platform:
  - net462
- uid: System.Net.FileWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FileWebRequest.ConnectionGroupName
  fullName: System.Net.FileWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または要求の接続グループの名前を設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "ConnectionGroupName プロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "要求の接続グループの名前。"
  overload: System.Net.FileWebRequest.ConnectionGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FileWebRequest.ContentLength
  fullName: System.Net.FileWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または送信されるデータのコンテンツの長さを設定します。"
  remarks: ''
  example:
  - "The following code example sets the content length of the data being sent. Refer to the complete example in the <xref:System.Net.FileWebRequest> class.  \n  \n [!code-cs[System.Net.FileWebRequest#4](~/add/codesnippet/csharp/p-system.net.filewebrequ_0_1.cs)]\n [!code-vb[System.Net.FileWebRequest#4](~/add/codesnippet/visualbasic/p-system.net.filewebrequ_0_1.vb)]\n [!code-cpp[System.Net.FileWebRequest#4](~/add/codesnippet/cpp/p-system.net.filewebrequ_0_1.cpp)]"
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "送信される要求データのバイト数。"
  overload: System.Net.FileWebRequest.ContentLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "正の数値が 0 未満です。"
  platform:
  - net462
- uid: System.Net.FileWebRequest.ContentType
  id: ContentType
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FileWebRequest.ContentType
  fullName: System.Net.FileWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または送信されるデータのコンテンツの種類を設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "ContentType プロパティには、送信されるデータのメディアの種類が含まれています。 これは、通常、MIME コンテンツのエンコーディングします。 ContentType プロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "送信されるデータのコンテンツの種類。"
  overload: System.Net.FileWebRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.Credentials
  id: Credentials
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FileWebRequest.Credentials
  fullName: System.Net.FileWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または、この要求に関連付けられている資格情報を設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "<xref:System.Net.FileWebRequest>クラスは、ローカル ファイル システムからファイルへの要求を認証しないのいずれか、資格情報のプロパティ、内容は無視されます</xref:System.Net.FileWebRequest>。 認証を<xref:System.Net.FileWebRequest>基になるファイル システム内のファイル リソースのアクセス制御リストによって処理されます</xref:System.Net.FileWebRequest>。"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>この要求に関連付けられている認証の資格情報を含む</xref:System.Net.ICredentials>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.FileWebRequest.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FileWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FileWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "非同期要求を終了、<xref:System.IO.Stream>アプリケーションがデータの書き込みに使用するインスタンス</xref:System.IO.Stream>。"
  remarks: "EndGetRequestStream メソッドには、によって開始された非同期ストリーム要求が完了すると、<xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>メソッド</xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>。      > [!NOTE] > ガベージ コレクションのタイミングに関する問題を避けるためには、必ずを呼び出すことで、応答ストリームを閉じる、<xref:System.IO.Stream.Close%2A>メソッドによって返されたストリームを<xref:System.Net.FileWebResponse.GetResponseStream%2A>メソッドを呼び出した後、<xref:System.Net.FileWebRequest.EndGetResponse%2A>メソッド</xref:System.Net.FileWebRequest.EndGetResponse%2A></xref:System.Net.FileWebResponse.GetResponseStream%2A></xref:System.IO.Stream.Close%2A>。"
  example:
  - "The following example uses the EndGetRequestStream method to end the asynchronous request for a <xref:System.IO.Stream> object.  \n  \n [!code-cpp[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/cpp/m-system.net.filewebrequ_1_1.cpp)]\n [!code-cs[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/csharp/m-system.net.filewebrequ_1_1.cs)]\n [!code-vb[FileWebRequest_ReqBeginEnd#2](~/add/codesnippet/visualbasic/m-system.net.filewebrequ_1_1.vb)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>ストリームの保留中の要求を参照する</xref:System.IAsyncResult>。"
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>データの書き込みアプリケーションを使用するオブジェクトします</xref:System.IO.Stream>。"
  overload: System.Net.FileWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FileWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FileWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "ファイル システム リソースへの非同期要求を終了します。"
  remarks: "EndGetResponse メソッドで開始したファイル システム リソースへの非同期要求が完了すると、<xref:System.Net.FileWebRequest.BeginGetResponse%2A>メソッド</xref:System.Net.FileWebRequest.BeginGetResponse%2A>。"
  example:
  - "The following code example uses the EndGetResponse method to end an asynchronous request for a file system resource.  \n  \n [!code-cs[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/csharp/m-system.net.filewebrequ_4_1.cs)]\n [!code-cpp[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/cpp/m-system.net.filewebrequ_4_1.cpp)]\n [!code-vb[FileWebRequest_ResBeginEnd#2](~/add/codesnippet/visualbasic/m-system.net.filewebrequ_4_1.vb)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>応答の保留中の要求を参照する</xref:System.IAsyncResult>。"
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>、ファイル システムのリソースからの応答を格納している</xref:System.Net.WebResponse>。"
  overload: System.Net.FileWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化するために必要なデータを使用します。"
  remarks: "含まれているすべてのオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタによってシリアル化します</xref:System.Runtime.Serialization.SerializationInfo>。"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A<xref:System.Runtime.Serialization.StreamingContext>このシリアル化のシリアル化先を指定します</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Net.FileWebRequest.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FileWebRequest.GetRequestStream()
  fullName: System.Net.FileWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "返します、 <xref:System.IO.Stream>、ファイル システムのリソースにデータを書き込むためのオブジェクト</xref:System.IO.Stream>。"
  remarks: "Getrequeststream を呼び出しますメソッドは、 <xref:System.IO.Stream>。</xref:System.IO.Stream>への同期アクセスを提供します。 非同期のアクセスを使用して、<xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.FileWebRequest.EndGetRequestStream%2A>メソッド</xref:System.Net.FileWebRequest.EndGetRequestStream%2A></xref:System.Net.FileWebRequest.BeginGetRequestStream%2A>。"
  example:
  - "The following code example uses the GetRequestStream method to obtain a stream instance used to write to the file. Refer to the complete example in the <xref:System.Net.FileWebRequest> class.  \n  \n [!code-cs[System.Net.FileWebRequest#5](~/add/codesnippet/csharp/m-system.net.filewebrequ_3_1.cs)]\n [!code-vb[System.Net.FileWebRequest#5](~/add/codesnippet/visualbasic/m-system.net.filewebrequ_3_1.vb)]\n [!code-cpp[System.Net.FileWebRequest#5](~/add/codesnippet/cpp/m-system.net.filewebrequ_3_1.cpp)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>、ファイル システムのリソースにデータを書き込むためです</xref:System.IO.Stream>。"
  overload: System.Net.FileWebRequest.GetRequestStream*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求がタイムアウトになりました。"
  platform:
  - net462
- uid: System.Net.FileWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FileWebRequest.GetResponse()
  fullName: System.Net.FileWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "ファイル システムの要求に応答を返します。"
  remarks: "GetResponse メソッドを返します、 <xref:System.Net.WebResponse>、ファイル システムのリソースからの応答を格納しているオブジェクト</xref:System.Net.WebResponse>。       GetResponse メソッドは、 <xref:System.Net.WebResponse>。</xref:System.Net.WebResponse>への同期アクセスを提供します。 非同期のアクセスを使用して、<xref:System.Net.FileWebRequest.BeginGetResponse%2A>と<xref:System.Net.FileWebRequest.EndGetResponse%2A>メソッド</xref:System.Net.FileWebRequest.EndGetResponse%2A></xref:System.Net.FileWebRequest.BeginGetResponse%2A>。"
  example:
  - "The following code example uses the GetResponse method to return a file system request response.  \n  \n [!code-cpp[System.Net.FilewebRequest.GetResponse#1](~/add/codesnippet/cpp/m-system.net.filewebrequ_0_1.cpp)]\n [!code-cs[System.Net.FilewebRequest.GetResponse#1](~/add/codesnippet/csharp/m-system.net.filewebrequ_0_1.cs)]\n [!code-vb[System.Net.FilewebRequest.GetResponse#1](~/add/codesnippet/visualbasic/m-system.net.filewebrequ_0_1.vb)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>、ファイル システムのリソースからの応答を格納している</xref:System.Net.WebResponse>。"
  overload: System.Net.FileWebRequest.GetResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求がタイムアウトしました。"
  platform:
  - net462
- uid: System.Net.FileWebRequest.Headers
  id: Headers
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FileWebRequest.Headers
  fullName: System.Net.FileWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "要求に関連付けられている名前/値ペアのコレクションを取得します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "ヘッダーのプロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A<xref:System.Net.WebHeaderCollection>この要求に関連付けられたヘッダーの名前/値ペアを格納する</xref:System.Net.WebHeaderCollection>。"
  overload: System.Net.FileWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.Method
  id: Method
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FileWebRequest.Method
  fullName: System.Net.FileWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または要求に使用するプロトコル メソッドを設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "メソッドのプロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  example:
  - "The following code example sets the protocol method used for the request. Refer to the complete example in the <xref:System.Net.FileWebRequest> class.  \n  \n [!code-cs[System.Net.FileWebRequest#2](~/add/codesnippet/csharp/p-system.net.filewebrequ_1_1.cs)]\n [!code-vb[System.Net.FileWebRequest#2](~/add/codesnippet/visualbasic/p-system.net.filewebrequ_1_1.vb)]\n [!code-cpp[System.Net.FileWebRequest#2](~/add/codesnippet/cpp/p-system.net.filewebrequ_1_1.cpp)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "この要求で使用するプロトコル メソッド。"
  overload: System.Net.FileWebRequest.Method*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FileWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FileWebRequest.PreAuthenticate
  fullName: System.Net.FileWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または要求を事前認証するかどうかを示す値を設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "PreAuthenticate プロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>を事前認証するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.FileWebRequest.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.Proxy
  id: Proxy
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FileWebRequest.Proxy
  fullName: System.Net.FileWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または、この要求に使用するネットワーク プロキシを設定します。 このプロパティは、将来の使用に備えて予約されています。"
  remarks: "プロキシのプロパティが<xref:System.Net.FileWebRequest>クラス</xref:System.Net.FileWebRequest>によって使用されていません。"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "<xref:System.Net.IWebProxy>を示す、この要求に使用するネットワーク プロキシ</xref:System.Net.IWebProxy>。"
  overload: System.Net.FileWebRequest.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FileWebRequest.RequestUri
  fullName: System.Net.FileWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "要求の統一リソース識別子 (URI) を取得します。"
  remarks: ''
  example:
  - "The following code example uses the RequestUri property to get the URI of the request.  \n  \n [!code-cs[FileWebRequest_ContentLength#2](~/add/codesnippet/csharp/p-system.net.filewebrequ_2_1.cs)]\n [!code-vb[FileWebRequest_ContentLength#2](~/add/codesnippet/visualbasic/p-system.net.filewebrequ_2_1.vb)]\n [!code-cpp[FileWebRequest_ContentLength#2](~/add/codesnippet/cpp/p-system.net.filewebrequ_2_1.cpp)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>要求の URI を格納している</xref:System.Uri>。"
  overload: System.Net.FileWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>オブジェクトのシリアル化に必要なデータを<xref href=&quot;System.Net.FileWebRequest&quot;></xref>です。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>のシリアル化されたデータを保持する、 <xref href=&quot;System.Net.FileWebRequest&quot;></xref>です。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>、新規に関連付けられているシリアル化ストリームの送信先を格納している<xref href=&quot;System.Net.FileWebRequest&quot;> </xref></xref:System.Runtime.Serialization.StreamingContext> 。"
  overload: System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FileWebRequest.Timeout
  id: Timeout
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FileWebRequest.Timeout
  fullName: System.Net.FileWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または要求がタイムアウトするまでに時間の長さを設定します。"
  remarks: "ドメイン ネーム システム (DNS) クエリは、最大 15 秒を返すまたはタイムアウトにかかる場合があります。 要求には、解像度を必要とするホスト名が含まれています設定するとタイムアウト値より小さい 15 秒、かかることがありますする前に 15 秒以上、<xref:System.Net.WebException>要求タイムアウトを示すためにスローされます。</xref:System.Net.WebException> 。"
  example:
  - "The following code example sets the Timeout property. Refer to the complete example in the <xref:System.Net.FileWebRequest> class.  \n  \n [!code-cs[System.Net.FileWebRequest#3](~/add/codesnippet/csharp/p-system.net.filewebrequ_3_1.cs)]\n [!code-vb[System.Net.FileWebRequest#3](~/add/codesnippet/visualbasic/p-system.net.filewebrequ_3_1.vb)]\n [!code-cpp[System.Net.FileWebRequest#3](~/add/codesnippet/cpp/p-system.net.filewebrequ_3_1.cpp)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "要求がタイムアウトするまでのミリ秒でかを示す値&lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;を要求にタイムアウトがないことを示します。"
  overload: System.Net.FileWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された値が&0; 未満でありいない<xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  platform:
  - net462
- uid: System.Net.FileWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FileWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FileWebRequest.UseDefaultCredentials
  fullName: System.Net.FileWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "<xref:System.NotSupportedException>。</xref:System.NotSupportedException>は常にスローします。"
  remarks: "他の実装と互換性のためだけに提供される偽造しているプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス</xref:System.Net.WebResponse></xref:System.Net.WebRequest>。 偽造しているを使用する必要はありません。"
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref:System.NotSupportedException>。</xref:System.NotSupportedException>は常にスローします。"
  overload: System.Net.FileWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "既定の資格情報は、ファイルの Uniform Resource Identifier (Uri) のサポートされていません。"
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: FileWebRequest(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.FileWebRequest(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.FileWebRequest(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.FileWebRequest.Abort
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FileWebRequest.Abort()
  fullName: System.Net.FileWebRequest.Abort()
- uid: System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FileWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FileWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FileWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FileWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FileWebRequest.ConnectionGroupName
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FileWebRequest.ConnectionGroupName
  fullName: System.Net.FileWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FileWebRequest.ContentLength
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FileWebRequest.ContentLength
  fullName: System.Net.FileWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FileWebRequest.ContentType
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FileWebRequest.ContentType
  fullName: System.Net.FileWebRequest.ContentType
- uid: System.Net.FileWebRequest.Credentials
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FileWebRequest.Credentials
  fullName: System.Net.FileWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FileWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FileWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FileWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FileWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.FileWebRequest.GetRequestStream
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FileWebRequest.GetRequestStream()
  fullName: System.Net.FileWebRequest.GetRequestStream()
- uid: System.Net.FileWebRequest.GetResponse
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FileWebRequest.GetResponse()
  fullName: System.Net.FileWebRequest.GetResponse()
- uid: System.Net.FileWebRequest.Headers
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Headers
  nameWithType: FileWebRequest.Headers
  fullName: System.Net.FileWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FileWebRequest.Method
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Method
  nameWithType: FileWebRequest.Method
  fullName: System.Net.FileWebRequest.Method
- uid: System.Net.FileWebRequest.PreAuthenticate
  parent: System.Net.FileWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FileWebRequest.PreAuthenticate
  fullName: System.Net.FileWebRequest.PreAuthenticate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FileWebRequest.Proxy
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FileWebRequest.Proxy
  fullName: System.Net.FileWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FileWebRequest.RequestUri
  parent: System.Net.FileWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FileWebRequest.RequestUri
  fullName: System.Net.FileWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.FileWebRequest
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.FileWebRequest.Timeout
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FileWebRequest.Timeout
  fullName: System.Net.FileWebRequest.Timeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FileWebRequest.UseDefaultCredentials
  parent: System.Net.FileWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FileWebRequest.UseDefaultCredentials
  fullName: System.Net.FileWebRequest.UseDefaultCredentials
- uid: System.Net.FileWebRequest.#ctor*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: FileWebRequest
  nameWithType: FileWebRequest.FileWebRequest
- uid: System.Net.FileWebRequest.Abort*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Abort
  nameWithType: FileWebRequest.Abort
- uid: System.Net.FileWebRequest.BeginGetRequestStream*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FileWebRequest.BeginGetRequestStream
- uid: System.Net.FileWebRequest.BeginGetResponse*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FileWebRequest.BeginGetResponse
- uid: System.Net.FileWebRequest.ConnectionGroupName*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FileWebRequest.ConnectionGroupName
- uid: System.Net.FileWebRequest.ContentLength*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FileWebRequest.ContentLength
- uid: System.Net.FileWebRequest.ContentType*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FileWebRequest.ContentType
- uid: System.Net.FileWebRequest.Credentials*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FileWebRequest.Credentials
- uid: System.Net.FileWebRequest.EndGetRequestStream*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FileWebRequest.EndGetRequestStream
- uid: System.Net.FileWebRequest.EndGetResponse*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FileWebRequest.EndGetResponse
- uid: System.Net.FileWebRequest.GetObjectData*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetObjectData
  nameWithType: FileWebRequest.GetObjectData
- uid: System.Net.FileWebRequest.GetRequestStream*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FileWebRequest.GetRequestStream
- uid: System.Net.FileWebRequest.GetResponse*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FileWebRequest.GetResponse
- uid: System.Net.FileWebRequest.Headers*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Headers
  nameWithType: FileWebRequest.Headers
- uid: System.Net.FileWebRequest.Method*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Method
  nameWithType: FileWebRequest.Method
- uid: System.Net.FileWebRequest.PreAuthenticate*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FileWebRequest.PreAuthenticate
- uid: System.Net.FileWebRequest.Proxy*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FileWebRequest.Proxy
- uid: System.Net.FileWebRequest.RequestUri*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FileWebRequest.RequestUri
- uid: System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.FileWebRequest.Timeout*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FileWebRequest.Timeout
- uid: System.Net.FileWebRequest.UseDefaultCredentials*
  parent: System.Net.FileWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FileWebRequest.UseDefaultCredentials
