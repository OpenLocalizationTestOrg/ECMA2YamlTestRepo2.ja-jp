### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "コントロールの既定のプロパティを指定する、 <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;> </xref>オブジェクトは実行時にバインドします。 このクラスは継承できません。"
  remarks: "定義するときに、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクト、通常バインドするコントロールのプロパティをパラメーターに両方を設定して、<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>と<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティ</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A></xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A></xref:System.Web.UI.WebControls.ControlParameter>。 場合、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティが設定されていない、既定のプロパティを使用します</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>。 ControlValuePropertyAttribute 属性が既定のプロパティを指定するコントロールに適用される、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトは実行時にバインドします</xref:System.Web.UI.WebControls.ControlParameter>。       属性の使用方法の詳細については、次を参照してください。[属性](~/add/includes/ajax-current-ext-md.md)です。       ControlValuePropertyAttribute クラスのインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>コンス トラクター。</xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A> 。"
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>クラスの指定したプロパティ名を使用します。"
  remarks: "新しいインスタンスを作成するこのコンス トラクターを使用して、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名を使用します</xref:System.Web.UI.ControlValuePropertyAttribute>。 次の表は、<xref:System.Web.UI.ControlValuePropertyAttribute>クラス</xref:System.Web.UI.ControlValuePropertyAttribute>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|値、`name`パラメーターです |</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A> 。"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "コントロールの既定のプロパティ。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>クラスの指定したプロパティ名と既定値を使用します。"
  remarks: "新しいインスタンスを作成するこのコンス トラクターを使用して、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名と既定値を使用します</xref:System.Web.UI.ControlValuePropertyAttribute>。 次の表は、<xref:System.Web.UI.ControlValuePropertyAttribute>クラス</xref:System.Web.UI.ControlValuePropertyAttribute>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|値、`name`パラメーターです |。  |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|値、`defaultValue`パラメーターです |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A> 。"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "コントロールの既定のプロパティ。"
    - id: defaultValue
      type: System.Object
      description: "既定のプロパティの既定値。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>クラスの指定したプロパティ名と既定値を使用します。 既定値は、指定したデータ型にも変換されます。"
  remarks: "新しいインスタンスを作成するこのコンス トラクターを使用して、<xref:System.Web.UI.ControlValuePropertyAttribute>クラスの指定したプロパティ名と既定値を使用します</xref:System.Web.UI.ControlValuePropertyAttribute>。 このバージョンのコンス トラクターも変換しようと既定値で指定されたデータ型を`type`パラメーター。 既定値を変換できない場合、<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>プロパティが設定されていません</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>。 次の表は、<xref:System.Web.UI.ControlValuePropertyAttribute>クラス</xref:System.Web.UI.ControlValuePropertyAttribute>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|値、`name`パラメーターです |。  |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|値、`defaultValue`値で指定されたデータ型に変換できる場合は、パラメーター、`type`パラメーターです |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A> 。"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "コントロールの既定のプロパティ。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>に既定値は変換されます</xref:System.Type>。"
    - id: defaultValue
      type: System.String
      description: "既定のプロパティの既定値。"
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールの既定のプロパティの既定値を取得します。"
  remarks: "プロパティが指定されている場合、<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>プロパティが設定されていないプロパティの既定値を決定するプロパティを使用してください</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>。"
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "コントロールの既定のプロパティの既定値。"
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定するかどうかの現在のインスタンス、 <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>オブジェクトが、指定したオブジェクトと等しい。"
  remarks: "Equals メソッドを使用しているかどうかの現在のインスタンス、<xref:System.Web.UI.ControlValuePropertyAttribute>オブジェクトが、指定したオブジェクトと等しい</xref:System.Web.UI.ControlValuePropertyAttribute>。 オブジェクトが等しい場合は、次の条件を満たしている必要があります: 1。  含まれているオブジェクト、`obj`パラメーターである必要があります、<xref:System.Web.UI.ControlValuePropertyAttribute>オブジェクト</xref:System.Web.UI.ControlValuePropertyAttribute>。      2.  <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>と<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>両方のオブジェクトのプロパティを等しくする必要があります</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A></xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>。      > [!NOTE] > このメソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>このインスタンスと比較する</xref:System.Object>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>オブジェクトが含まれている場合、 <code> obj </code>パラメーターがの現在のインスタンスに等しい<xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "このインスタンスのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールの既定のプロパティを取得します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトが定義されていない場合、<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>プロパティの設定、名前プロパティにバインドされている既定のプロパティを使用して、<xref:System.Web.UI.WebControls.ControlParameter>実行時にオブジェクト</xref:System.Web.UI.WebControls.ControlParameter></xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A></xref:System.Web.UI.WebControls.ControlParameter>。"
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "コントロールの既定のプロパティ。"
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
