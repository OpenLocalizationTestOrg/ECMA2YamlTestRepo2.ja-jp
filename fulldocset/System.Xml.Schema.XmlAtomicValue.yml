### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlAtomicValue
  id: XmlAtomicValue
  children:
  - System.Xml.Schema.XmlAtomicValue.Clone
  - System.Xml.Schema.XmlAtomicValue.IsNode
  - System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  - System.Xml.Schema.XmlAtomicValue.ToString
  - System.Xml.Schema.XmlAtomicValue.TypedValue
  - System.Xml.Schema.XmlAtomicValue.Value
  - System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  - System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  - System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  - System.Xml.Schema.XmlAtomicValue.ValueAsInt
  - System.Xml.Schema.XmlAtomicValue.ValueAsLong
  - System.Xml.Schema.XmlAtomicValue.ValueType
  - System.Xml.Schema.XmlAtomicValue.XmlType
  langs:
  - csharp
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
  type: Class
  summary: "検証済みの XML 要素または属性の型指定された値を表します。 Xmlatomicvalue でないクラスは継承できません。"
  syntax:
    content: 'public sealed class XmlAtomicValue : System.Xml.XPath.XPathItem, ICloneable'
  inheritance:
  - System.Object
  - System.Xml.XPath.XPathItem
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Xml.XPath.XPathItem.ValueAs(System.Type)
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  id: Clone
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "このコピーを返します<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Xml.Schema.XmlAtomicValue Clone ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlAtomicValue
      description: "<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;> </xref>オブジェクトのこのコピー <xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;> </xref>オブジェクト。"
  overload: System.Xml.Schema.XmlAtomicValue.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  id: IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証済みの XML 要素または属性が XPath ノードまたはアトミック値であるかどうかを示す値を取得します。"
  remarks: "IsNode プロパティは常に返す`false`です。"
  syntax:
    content: public override bool IsNode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証済みの XML 要素または属性が XPath ノード以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>検証済みの XML 要素または属性がアトミック値の場合。"
  overload: System.Xml.Schema.XmlAtomicValue.IsNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Xml.Schema.XmlAtomicValue.Clone%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.Schema.XmlAtomicValue>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Xml.Schema.XmlAtomicValue>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "このコピーを返します<xref href=&quot;System.Xml.Schema.XmlAtomicValue&quot;></xref>オブジェクト。"
  overload: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  id: ToString
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得、 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>検証済みの XML 要素または属性の値。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>検証済みの XML 要素または属性の値。"
  overload: System.Xml.Schema.XmlAtomicValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  id: TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "スキーマの種類に応じて、最も適切な Microsoft .NET Framework 型のボックス化されたオブジェクトとして現在の検証 XML 要素または属性を取得します。"
  remarks: "値に TypedValue プロパティの値は、項目の値が指定されたスキーマの種類に応じて、有効でない場合、<xref:System.Xml.Schema.XmlAtomicValue.Value%2A>プロパティ</xref:System.Xml.Schema.XmlAtomicValue.Value%2A>。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override object TypedValue { get; }
    return:
      type: System.Object
      description: "現在は、最も適切な .NET Framework 型のボックス化されたオブジェクトとして XML 要素または属性を検証します。"
  overload: System.Xml.Schema.XmlAtomicValue.TypedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.Value
  id: Value
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得、 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>検証済みの XML 要素または属性の値。"
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>検証済みの XML 要素または属性の値。"
  overload: System.Xml.Schema.XmlAtomicValue.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "使用して指定された型として検証済みの XML 要素または属性の値を返します、<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスを解決するのには指定されたオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
  remarks: "ValueAs メソッドでは、検証済みの XML 要素または属性の値を指定された Microsoft .NET Framework 型に変換しようとしています。       <xref:System.Xml.IXmlNamespaceResolver>型の変換に関連する名前空間プレフィックスを解決するのにはオブジェクトを使用します</xref:System.Xml.IXmlNamespaceResolver>。 たとえば、変換するときに、`xs:QName`に、`xs:string`です。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override object ValueAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: type
      type: System.Type
      description: "検証済みの XML 要素または属性の値を返す型。"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスの解決に使用されるオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
    return:
      type: System.Object
      description: "検証済みの XML 要素または属性として要求されている型の値。"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "検証済みの XML 要素または属性の値がターゲット型の正しい形式ではありません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行されたキャストは有効ではありません。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "試行されたキャストの結果オーバーフローが発生しました。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  id: ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref:System.Boolean>。</xref:System.Boolean>として検証済みの XML 要素または属性の値を取得します。"
  remarks: "ValueAsBoolean プロパティが、Microsoft .NET Framework に検証済みの XML 要素または属性の値を変換しようとしています<xref:System.Boolean>、XPath 2.0 規則に従って、項目の型キャストの型。</xref:System.Boolean> 。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override bool ValueAsBoolean { get; }
    return:
      type: System.Boolean
      description: "検証済みの XML 要素または属性の値を<xref:System.Boolean>。</xref:System.Boolean>として"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "正しい形式で検証済みの XML 要素または属性の値が、<xref:System.Boolean>型です</xref:System.Boolean>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Boolean>が正しくありません</xref:System.Boolean>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  id: ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref:System.DateTime>。</xref:System.DateTime>として検証済みの XML 要素または属性の値を取得します。"
  remarks: "ValueAsDateTime プロパティが、Microsoft .NET Framework に検証済みの XML 要素または属性の値を変換しようとしています<xref:System.DateTime>、XPath 2.0 規則に従って、項目の型キャストの型。</xref:System.DateTime> 。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override DateTime ValueAsDateTime { get; }
    return:
      type: System.DateTime
      description: "検証済みの XML 要素または属性の値を<xref:System.DateTime>。</xref:System.DateTime>として"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "正しい形式で検証済みの XML 要素または属性の値が、<xref:System.DateTime>型です</xref:System.DateTime>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.DateTime>が正しくありません</xref:System.DateTime>。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  id: ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref:System.Double>。</xref:System.Double>として検証済みの XML 要素または属性の値を取得します。"
  remarks: "ValueAsDouble プロパティが、Microsoft .NET Framework に検証済みの XML 要素または属性の値を変換しようとしています<xref:System.Double>、XPath 2.0 規則に従って、項目の型キャストの型。</xref:System.Double> 。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override double ValueAsDouble { get; }
    return:
      type: System.Double
      description: "検証済みの XML 要素または属性の値を<xref:System.Double>。</xref:System.Double>として"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "正しい形式で検証済みの XML 要素または属性の値が、<xref:System.Double>型です</xref:System.Double>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Double>が正しくありません</xref:System.Double>。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "試行されたキャストの結果オーバーフローが発生しました。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  id: ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref:System.Int32>。</xref:System.Int32>として検証済みの XML 要素または属性の値を取得します。"
  remarks: "ValueAsInt プロパティが、Microsoft .NET Framework に検証済みの XML 要素または属性の値を変換しようとしています<xref:System.Int32>、XPath 2.0 規則に従って、項目の型キャストの型。</xref:System.Int32> 。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override int ValueAsInt { get; }
    return:
      type: System.Int32
      description: "検証済みの XML 要素または属性の値を<xref:System.Int32>。</xref:System.Int32>として"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "正しい形式で検証済みの XML 要素または属性の値が、<xref:System.Int32>型です</xref:System.Int32>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Int32>が正しくありません</xref:System.Int32>。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "試行されたキャストの結果オーバーフローが発生しました。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  id: ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "<xref:System.Int64>。</xref:System.Int64>として検証済みの XML 要素または属性の値を取得します。"
  remarks: "ValueAsLong プロパティが、Microsoft .NET Framework に検証済みの XML 要素または属性の値を変換しようとしています<xref:System.Int64>、XPath 2.0 規則に従って、項目の型キャストの型。</xref:System.Int64> 。       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override long ValueAsLong { get; }
    return:
      type: System.Int64
      description: "検証済みの XML 要素または属性の値を<xref:System.Int64>。</xref:System.Int64>として"
  overload: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "正しい形式で検証済みの XML 要素または属性の値が、<xref:System.Int64>型です</xref:System.Int64>。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Int64>が正しくありません</xref:System.Int64>。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "試行されたキャストの結果オーバーフローが発生しました。"
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "検証済みの XML 要素または属性の Microsoft .NET Framework の型を取得します。"
  remarks: "ValueType プロパティは、検証済みの XML 要素または属性の型指定された値の .NET Framework の型を取得します。       型の要素など、`xs:int`の ValueType が<xref:System.Int32>既定</xref:System.Int32>。 ただし、ValueType にマップできる有効な型のいずれかの可能性があります`xs:int`、<xref:System.Int16>または<xref:System.Double>.</xref:System.Double></xref:System.Int16>など       サポートする型の詳細については、<xref:System.Xml?displayProperty=fullName>名前空間を参照してください[System.Xml クラスで型をサポート](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml?displayProperty=fullName>。"
  syntax:
    content: public override Type ValueType { get; }
    return:
      type: System.Type
      description: "検証済みの XML 要素または属性の .NET Framework の型。 既定値は<xref:System.String>。</xref:System.String>"
  overload: System.Xml.Schema.XmlAtomicValue.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  id: XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  langs:
  - csharp
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>検証済みの XML 要素または属性です。"
  remarks: "Xml 型のプロパティを取得、<xref:System.Xml.Schema.XmlSchemaType>検証済みの XML 要素または属性</xref:System.Xml.Schema.XmlSchemaType>。 たとえば、 <xref:System.Xml.Schema.XmlSchemaSimpleType>、または<xref:System.Xml.Schema.XmlSchemaComplexType>.</xref:System.Xml.Schema.XmlSchemaComplexType> </xref:System.Xml.Schema.XmlSchemaSimpleType>"
  syntax:
    content: public override System.Xml.Schema.XmlSchemaType XmlType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>検証済みの XML 要素または属性です。"
  overload: System.Xml.Schema.XmlAtomicValue.XmlType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XPath.XPathItem
  isExternal: false
  name: System.Xml.XPath.XPathItem
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Xml.Schema.XmlAtomicValue.Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone()
  nameWithType: XmlAtomicValue.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.Clone()
- uid: System.Xml.Schema.XmlAtomicValue
  parent: System.Xml.Schema
  isExternal: false
  name: XmlAtomicValue
  nameWithType: XmlAtomicValue
  fullName: System.Xml.Schema.XmlAtomicValue
- uid: System.Xml.Schema.XmlAtomicValue.IsNode
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
  fullName: System.Xml.Schema.XmlAtomicValue.IsNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: XmlAtomicValue.System.ICloneable.Clone()
  fullName: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlAtomicValue.ToString
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString()
  nameWithType: XmlAtomicValue.ToString()
  fullName: System.Xml.Schema.XmlAtomicValue.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
  fullName: System.Xml.Schema.XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
  fullName: System.Xml.Schema.XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAs(Type,IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsDouble
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsInt
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
  fullName: System.Xml.Schema.XmlAtomicValue.ValueAsLong
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.Schema.XmlAtomicValue.ValueType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
  fullName: System.Xml.Schema.XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
  fullName: System.Xml.Schema.XmlAtomicValue.XmlType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlAtomicValue.Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Clone
  nameWithType: XmlAtomicValue.Clone
- uid: System.Xml.Schema.XmlAtomicValue.IsNode*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: IsNode
  nameWithType: XmlAtomicValue.IsNode
- uid: System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: XmlAtomicValue.System.ICloneable.Clone
- uid: System.Xml.Schema.XmlAtomicValue.ToString*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ToString
  nameWithType: XmlAtomicValue.ToString
- uid: System.Xml.Schema.XmlAtomicValue.TypedValue*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: TypedValue
  nameWithType: XmlAtomicValue.TypedValue
- uid: System.Xml.Schema.XmlAtomicValue.Value*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: Value
  nameWithType: XmlAtomicValue.Value
- uid: System.Xml.Schema.XmlAtomicValue.ValueAs*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAs
  nameWithType: XmlAtomicValue.ValueAs
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsBoolean*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XmlAtomicValue.ValueAsBoolean
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDateTime*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XmlAtomicValue.ValueAsDateTime
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsDouble*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsDouble
  nameWithType: XmlAtomicValue.ValueAsDouble
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsInt*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsInt
  nameWithType: XmlAtomicValue.ValueAsInt
- uid: System.Xml.Schema.XmlAtomicValue.ValueAsLong*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueAsLong
  nameWithType: XmlAtomicValue.ValueAsLong
- uid: System.Xml.Schema.XmlAtomicValue.ValueType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: ValueType
  nameWithType: XmlAtomicValue.ValueType
- uid: System.Xml.Schema.XmlAtomicValue.XmlType*
  parent: System.Xml.Schema.XmlAtomicValue
  isExternal: false
  name: XmlType
  nameWithType: XmlAtomicValue.XmlType
