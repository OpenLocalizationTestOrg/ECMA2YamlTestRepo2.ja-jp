### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)
  - System.Web.Configuration.ExpressionBuilder.ExpressionPrefix
  - System.Web.Configuration.ExpressionBuilder.Properties
  - System.Web.Configuration.ExpressionBuilder.Type
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Configuration.ExpressionBuilder
  type: Class
  summary: "コンパイル時に動的なリソースを取得します。"
  remarks: "ASP.NET は、ページの ExpressionBuilder クラスを使用して解析中に自動的に式を評価します。 <xref:System.Web.Configuration.ExpressionBuilderCollection>で構成された、コレクション、`expressionBuilders`に含まれる要素の`compilation`構成セクション</xref:System.Web.Configuration.ExpressionBuilderCollection>。 ExpressionBuilder には、キー/値ペア内の特定値が含まれています。       フォームの式を含めることによって、値が取得`<%$ ExpressionPrefix: ExpressionKey %>`ページ内で。 `ExpressionPrefix`を入力するか、共通式ビルダーとして取得する式の型をマップ (つまり、 <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) またはカスタム式ビルダーの型</xref:System.Web.Compilation.AppSettingsExpressionBuilder>。 `ExpressionKey`戻り値を参照するために使用するキーを指定します。       式ビルダーの一般的な型を実装する場合は、構成に関連するセクション名を式ビルダーをマップする必要があります。 カスタム式ビルダー型を実装する場合は、ExpressionBuilder クラスから派生する必要がありますが、カスタム式ビルダー クラスに、式ビルダーをマップする必要があります。"
  syntax:
    content: 'public sealed class ExpressionBuilder : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Configuration.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder(String,String)
  nameWithType: ExpressionBuilder.ExpressionBuilder(String,String)
  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionBuilder(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Configuration.ExpressionBuilder&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create an <xref:System.Web.Configuration.ExpressionBuilder> object. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ExpressionBuilderCollection> class.  \n  \n [!code-cs[System.Web.Configuration.ExpressionBuilderCollection#2](~/add/codesnippet/csharp/e711f1b6-36ca-4643-bdf7-_1.cs)]\n [!code-vb[System.Web.Configuration.ExpressionBuilderCollection#2](~/add/codesnippet/visualbasic/e711f1b6-36ca-4643-bdf7-_1.vb)]"
  syntax:
    content: public ExpressionBuilder (string expressionPrefix, string theType);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "取得する式の型を識別する文字列。"
    - id: theType
      type: System.String
      description: "式の型を指定する文字列。"
  overload: System.Web.Configuration.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.Configuration.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionBuilder.ExpressionPrefix
  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得または設定を取得する式の型を識別する文字列。"
  remarks: "されて式共通式の型に対する構成に関連するセクション名を割り当てたり、式を式のカスタム クラスにマップします。"
  syntax:
    content: public string ExpressionPrefix { get; set; }
    return:
      type: System.String
      description: "取得する式の型を識別する文字列。"
  overload: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ExpressionBuilder.Properties
  id: Properties
  parent: System.Web.Configuration.ExpressionBuilder
  langs:
  - csharp
  name: Properties
  nameWithType: ExpressionBuilder.Properties
  fullName: System.Web.Configuration.ExpressionBuilder.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "追加します。"
  overload: System.Web.Configuration.ExpressionBuilder.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ExpressionBuilder.Type
  id: Type
  parent: System.Web.Configuration.ExpressionBuilder
  langs:
  - csharp
  name: Type
  nameWithType: ExpressionBuilder.Type
  fullName: System.Web.Configuration.ExpressionBuilder.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得または式の型を指定する文字列を設定します。"
  remarks: "種類は、式の値を決定するために使用するオブジェクトの種類を指定します。 型には、構成内のセクションまたはカスタム クラスのいずれかを指定できます。"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "式の型を指定する文字列。"
  overload: System.Web.Configuration.ExpressionBuilder.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder(String,String)
  nameWithType: ExpressionBuilder.ExpressionBuilder(String,String)
  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionBuilder(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionBuilder.ExpressionPrefix
  fullName: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix
- uid: System.Web.Configuration.ExpressionBuilder.Properties
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: Properties
  nameWithType: ExpressionBuilder.Properties
  fullName: System.Web.Configuration.ExpressionBuilder.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ExpressionBuilder.Type
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: Type
  nameWithType: ExpressionBuilder.Type
  fullName: System.Web.Configuration.ExpressionBuilder.Type
- uid: System.Web.Configuration.ExpressionBuilder.#ctor*
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionBuilder.ExpressionPrefix
- uid: System.Web.Configuration.ExpressionBuilder.Properties*
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: Properties
  nameWithType: ExpressionBuilder.Properties
- uid: System.Web.Configuration.ExpressionBuilder.Type*
  parent: System.Web.Configuration.ExpressionBuilder
  isExternal: false
  name: Type
  nameWithType: ExpressionBuilder.Type
