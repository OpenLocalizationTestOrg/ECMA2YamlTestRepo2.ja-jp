### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  langs:
  - csharp
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  summary: "Zip アーカイブ内の圧縮ファイルを表します。"
  remarks: "Zip アーカイブには、圧縮されたファイルごとにエントリが含まれています。 ZipArchiveEntry クラスでは、エントリのプロパティを確認し、開くか、エントリを削除することができます。 エントリを開くときに、圧縮されたファイルのストリームに書き込むことによって、圧縮されたファイルを変更できます。       Zip アーカイブや、ファイルのエントリを操作するための方法は&3; つのクラス間で分散: <xref:System.IO.Compression.ZipFile>、<xref:System.IO.Compression.ZipArchive>と ZipArchiveEntry</xref:System.IO.Compression.ZipArchive> </xref:System.IO.Compression.ZipFile> 。      |... |使用しています... |  |---------|----------|  |ディレクトリからの zip のアーカイブを作成 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |ディレクトリの zip アーカイブのコンテンツを抽出 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |既存の zip アーカイブを新しいファイルを追加 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |Zip アーカイブ内でファイルの取得 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |Zip アーカイブ内のファイルをすべて取得 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |Zip アーカイブに含まれる個々 のファイル ストリームを開く |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |Zip アーカイブからファイルを削除 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      参照する場合、`System.IO.Compression.FileSystem`アセンブリのプロジェクトで ZipArchiveEntry クラスの&2; つの拡張メソッドにアクセスすることができます</xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> これらのメソッドは<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>と<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>、ファイルにエントリの内容を圧縮解除することができるとします</xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29></xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>。 `System.IO.Compression.FileSystem`アセンブリでは使用できません[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]です。 [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリを使用して、アーカイブのコンテンツを圧縮解除できます<xref:System.IO.Compression.DeflateStream>または<xref:System.IO.Compression.GZipStream>、または使用することができます、[!INCLUDE[wrt](~/add/includes/wrt-md.md)]型[圧縮](http://go.microsoft.com/fwlink/p/?LinkId=246357)と[圧縮解除プログラム](http://go.microsoft.com/fwlink/?LinkId=246358)して、ファイルを圧縮します</xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.DeflateStream>。"
  example:
  - "The first example shows how to create a new entry in a zip archive and write to it.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_1.vb)]  \n  \n The second example shows how to use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> extension method. You must reference the `System.IO.Compression.FileSystem` assembly in your project for the code to execute.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._4_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_2.vb)]"
  syntax:
    content: public class ZipArchiveEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "エントリが属する zip アーカイブを取得します。"
  syntax:
    content: public System.IO.Compression.ZipArchive Archive { get; }
    return:
      type: System.IO.Compression.ZipArchive
      description: "エントリが属する zip アーカイブまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>エントリが削除されている場合。"
  overload: System.IO.Compression.ZipArchiveEntry.Archive*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内のエントリの圧縮サイズを取得します。"
  remarks: "モードが に設定されているときに、このプロパティを取得できません<xref:System.IO.Compression.ZipArchiveMode>に設定されているモードまたは<xref:System.IO.Compression.ZipArchiveMode>、エントリが開かれたとします</xref:System.IO.Compression.ZipArchiveMode></xref:System.IO.Compression.ZipArchiveMode>。"
  example:
  - "The following example shows how to retrieve entries in a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and CompressedLength properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._2_1.vb)]"
  syntax:
    content: public long CompressedLength { get; }
    return:
      type: System.Int64
      description: "Zip アーカイブ内のエントリの圧縮サイズ。"
  overload: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "エントリが変更されたために、プロパティの値は使用できません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブからエントリを削除します。"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.IO.Compression.ZipArchiveEntry.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "エントリは、既に読み取りまたは書き込み用に開かれています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このエントリの zip アーカイブが以外のモードで開かれた<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このエントリの zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内のエントリの相対パスを取得します。"
  remarks: "The FullName property contains the relative path, including the subdirectory hierarchy, of an entry in a zip archive. (In contrast, the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property contains only the name of the entry and does not include the subdirectory hierarchy.) For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property. The first entry will also have `NewEntry.txt` in the FullName property, but the second entry will have `AddedFolder\\\\NewEntry.txt` in the FullName property.  \n  \n You can specify any string as the path of an entry, including strings that specify invalid and absolute paths. Therefore, the FullName property might contain a value that is not correctly formatted. An invalid or absolute path might result in an exception when you extract the contents of the zip archive."
  example:
  - "The following example shows how to iterate through the contents of a .zip file, and extract files that contain the .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._0_1.vb)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Zip アーカイブ内のエントリの相対パス。"
  overload: System.IO.Compression.ZipArchiveEntry.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "取得または zip アーカイブ内のエントリが変更された最終時刻を設定します。"
  remarks: "ときにエントリを作成する新しい既存のファイルから呼び出すことによって、<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>メソッド、エントリに対して LastWriteTime プロパティが自動的に設定ファイルが変更された最終日時</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>。 ときにエントリを作成する新しいプログラムで呼び出すことによって、<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>メソッド、LastWriteTime プロパティのエントリが自動的に設定の実行時にします</xref:System.IO.Compression.ZipArchive.CreateEntry%2A>。 エントリを変更する場合の最新の変更の時刻を反映するように、値を求める場合、LastWriteTime プロパティを明示的に設定する必要があります。       このプロパティを設定すると、<xref:System.DateTimeOffset>値は zip アーカイブに固有のタイムスタンプの形式に変換します</xref:System.DateTimeOffset>。 この形式は、2 秒の解像度をサポートします。 許可されている最も古い値が 1980 が 1 月 1 日 0:00:00 (午前 0 時)。 許可されている最新の値を指定するは 2107 は 12 月 31 日 23時 59分: 58 (1 秒前に午前 0 時)。 最終書き込み時刻の値が有効でない場合、プロパティを返します、既定値は 1980 年 1 月 1日 0:00:00 (午前 0 時)。"
  example:
  - "The following example shows how to open an entry in a zip archive, modify it, and set the LastWriteTime property to the current time.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/p-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/p-system.io.compression._3_1.vb)]"
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    return:
      type: System.DateTimeOffset
      description: "前回の zip アーカイブ内のエントリが変更されました。"
  overload: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このプロパティを設定するため、失敗しました、エントリの zip アーカイブが<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>モード。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>.  \n  \n \\- or -  \n  \n The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> and the entry has been opened."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "このプロパティ値がいずれかの 1980年より前 1 月 1 日に設定しようとしましたが 0:00:00 (午前 0 時) または 2107 12 月 31 日より後 23時 59分: 58 (1 秒前に午前 0 時)。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内のエントリの非圧縮サイズを取得します。"
  remarks: "モードが に設定されているときに、このプロパティを取得できません<xref:System.IO.Compression.ZipArchiveMode>に設定されているモードまたは<xref:System.IO.Compression.ZipArchiveMode>、エントリが開かれたとします</xref:System.IO.Compression.ZipArchiveMode></xref:System.IO.Compression.ZipArchiveMode>。"
  example:
  - "The following example shows how to retrieve entries from a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the Length and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._1_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "Zip アーカイブ内のエントリの非圧縮サイズ。"
  overload: System.IO.Compression.ZipArchiveEntry.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "エントリが変更されたために、プロパティの値は使用できません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内のエントリのファイル名を取得します。"
  remarks: "Name プロパティの部分を格納する、<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>最終的なディレクトリの区切り記号に続くプロパティ (\\\\)、サブディレクトリ階層が含まれていない</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>。 使用して、zip アーカイブ内の&2; つのエントリを作成する場合など、<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>メソッドを提供し、`NewEntry.txt`の最初のエントリの名前としてと`AddedFolder\\ ewEntry.txt`両方のエントリを持つ&2; 番目のエントリの`NewEntry.txt`Name プロパティです</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>。 最初のエントリがあります`NewEntry.txt`で、<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>プロパティが&2; 番目のエントリが`AddedFolder\\ ewEntry.txt`で、<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>プロパティ</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A></xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>。"
  example:
  - "The following example shows how to retrieve entries from a zip archive and evaluate the properties of the entries. It uses the Name property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._4_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Zip アーカイブ内のエントリのファイル名。"
  overload: System.IO.Compression.ZipArchiveEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブからエントリを開きます。"
  remarks: "Zip アーカイブのエントリのストリームにアクセスするのにには、このメソッドを使用します。 ストリームを取得するには後からの読み取りまたはストリームに書き込むできます。 ストリームに記述するときに、エントリを加えた場合は、zip アーカイブに表示されます。"
  example:
  - "The following example shows how to create a new entry, open it with the Open method, and write to the stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._0_1.vb)]"
  syntax:
    content: public System.IO.Stream Open ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "エントリの内容を表すストリーム。"
  overload: System.IO.Compression.ZipArchiveEntry.Open*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "エントリが現在開いている書き込み用では既にです。       - または - アーカイブからエントリは削除されました。       - または - がのこのエントリのアーカイブが開きました、 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>モード、およびこのエントリが既にに書き込まれました。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "エントリがあるか、ありませんアーカイブからまたはが破損しているして読み取ることができません。       または、エントリがサポートされていない圧縮方式を使用して圧縮されました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このエントリの zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内のエントリの相対パスを取得します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "格納されている値であると、エントリの相対パス、<xref:System.IO.Compression.ZipArchiveEntry.FullName*>プロパティ</xref:System.IO.Compression.ZipArchiveEntry.FullName*>。"
  overload: System.IO.Compression.ZipArchiveEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.IO.Compression.ZipArchiveEntry.Length
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
- uid: System.IO.Compression.ZipArchiveEntry.Archive*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
- uid: System.IO.Compression.ZipArchiveEntry.Delete*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete
  nameWithType: ZipArchiveEntry.Delete
- uid: System.IO.Compression.ZipArchiveEntry.FullName*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
- uid: System.IO.Compression.ZipArchiveEntry.Length*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open
  nameWithType: ZipArchiveEntry.Open
- uid: System.IO.Compression.ZipArchiveEntry.ToString*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString
  nameWithType: ZipArchiveEntry.ToString
