### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "データを転送するための形式に依存しないメカニズムを提供します。"
  remarks: "`IDataObject`インターフェイスを使用して、<xref:System.Windows.Forms.Clipboard>クラスおよびドラッグ アンド ドロップの操作です</xref:System.Windows.Forms.Clipboard>。       クラスで実装された場合、IDataObject メソッドは、クラスのインスタンスで複数の形式でデータを格納するユーザーを許可します。 複数の形式でデータを格納するがわからない場合があります、形式の要件の対象アプリケーションが格納されたデータを取得できる可能性が高くなります。 IDataObject のインスタンスにデータを格納する呼び出し、<xref:System.Windows.Forms.IDataObject.SetData%2A>メソッドでデータ形式を指定して、`format`パラメーター</xref:System.Windows.Forms.IDataObject.SetData%2A> 。 設定、`autoConvert`パラメーターを`false`かどうかしないようにする格納されたデータを取得するときに、別の形式に変換します。 呼び出す<xref:System.Windows.Forms.IDataObject.SetData%2A>複数回に&1; つ以上の形式でデータを格納する IDataObject の&1; つのインスタンス</xref:System.Windows.Forms.IDataObject.SetData%2A>。       IDataObject から呼び出すことによって格納されたデータを取得する、<xref:System.Windows.Forms.IDataObject.GetData%2A>で書式設定方法と、データを指定する、`format`パラメーター</xref:System.Windows.Forms.IDataObject.GetData%2A> 。 設定、`autoConvert`パラメーターを`false`指定された形式で格納されたデータのみを取得します。 指定された形式に格納されたデータを変換する次のように設定します。`autoConvert`に`true`、使用しない、または`autoConvert`です。       IDataObject に格納されたデータの形式を特定するのには、次の IDataObject メソッドを使用します。      呼び出し、<xref:System.Windows.Forms.IDataObject.GetFormats%2A>をすべての形式のデータが使用可能な配列を取得する方法</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。 設定、`autoConvert`にパラメーター`false`データが格納されている形式のみを取得します。 データが使用可能なすべての形式を取得するには、次のように設定します。`autoConvert`に`true`、またはこのパラメーターを使用しないでください。      呼び出し、<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>格納されたデータが特定の形式で使用できるかどうかを調べます</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>。 指定された形式に変換する格納されたデータしたくない場合は、設定、`autoConvert`パラメーターを`false`です。       参照してください、<xref:System.Windows.Forms.DataObject>このインターフェイスの実装のためのクラス</xref:System.Windows.Forms.DataObject>。 参照してください、 <xref:System.Windows.Forms.DataFormats>、定義済みのクラス<xref:System.Windows.Forms.Clipboard>データ形式</xref:System.Windows.Forms.Clipboard></xref:System.Windows.Forms.DataFormats>。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したデータ形式に関連付けられているデータを取得します。"
  remarks: "このメソッドは、指定された形式でデータを見つけることはできません、データ形式に変換しようとします。 このメソッドが戻るかどうかは、指定された形式にデータを変換できません、`null`です。       データが関連付けられてまたは呼び出し<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A><xref:System.Windows.Forms.IDataObject.GetData%2A>。</xref:System.Windows.Forms.IDataObject.GetData%2A>を呼び出す前に</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>形式に変換できるかどうかを決定するには 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "取得するデータの形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    return:
      type: System.Object
      description: "指定された形式に関連付けられているデータまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定されたクラス型の形式に関連付けられているデータを取得します。"
  remarks: "このメソッドは、指定された形式でデータを見つけることはできません、データ形式に変換しようとします。 このメソッドが戻るかどうかは、指定された形式にデータを変換できません、`null`です。       データが関連付けられてまたは呼び出し<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A><xref:System.Windows.Forms.IDataObject.GetData%2A>。</xref:System.Windows.Forms.IDataObject.GetData%2A>を呼び出す前に</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>形式に変換できるかどうかを決定するには 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>取得するデータの形式を表すします</xref:System.Type>。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    return:
      type: System.Object
      description: "指定された形式に関連付けられているデータまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "データ形式に変換するかどうかを決定するブール値を使用して、指定したデータ形式に関連付けられているデータを取得します。"
  remarks: "場合、`autoConvert`パラメーター`true`形式にデータを変換しようと、このメソッドは、指定された形式でデータを見つけることができません。 データは、指定された形式に変換できない場合、またはデータに保存された場合、`autoConvert`パラメーターに設定`false`、このメソッドが戻る`null`です。       場合、`autoConvert`パラメーターは`false`、このメソッドは、指定された形式でデータを返しますまたは`null`形式でデータが見つからない場合。       データが関連付けられてまたは形式に変換できるかどうかを判断するのには、呼び出す<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>GetData を呼び出す前にします</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>。 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "取得するデータの形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定された形式にデータを変換するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "指定された形式に関連付けられているデータまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに格納されたデータには、関連付けられているか、指定された形式に変換できるかどうかが決まります。"
  remarks: "この<xref:System.Windows.Forms.DataObject><xref:System.Windows.Forms.IDataObject.GetData%2A>。</xref:System.Windows.Forms.IDataObject.GetData%2A>を呼び出す前に</xref:System.Windows.Forms.DataObject>形式が存在するかどうかを調べるには、このメソッドを呼び出す 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "確認対象の形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このインスタンスが関連付けられてまたは指定された形式に変換できるにデータが格納されている場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに格納されたデータには、関連付けられているか、指定された形式に変換できるかどうかが決まります。"
  remarks: "この<xref:System.Windows.Forms.DataObject><xref:System.Windows.Forms.IDataObject.GetData%2A>。</xref:System.Windows.Forms.IDataObject.GetData%2A>を呼び出す前に</xref:System.Windows.Forms.DataObject>形式が存在するかどうかを調べるには、このメソッドを呼び出す 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>チェックする形式を表すします</xref:System.Type>。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このインスタンスが関連付けられてまたは指定された形式に変換できるにデータが格納されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに格納されたデータがデータ形式に変換するかどうかを決定するブール値を使用して、指定した形式に関連付けられているかどうかを判断します。"
  remarks: "この<xref:System.Windows.Forms.DataObject><xref:System.Windows.Forms.IDataObject.GetData%2A>。</xref:System.Windows.Forms.IDataObject.GetData%2A>を呼び出す前に</xref:System.Windows.Forms.DataObject>形式が存在するかどうかを調べるには、このメソッドを呼び出す 呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です</xref:System.Windows.Forms.IDataObject.GetFormats%2A>。       このメソッドが戻る`true`とき: -`autoConvert`パラメーターは`true`データが適切な形式に変換できる形式とします。      -`autoConvert`パラメーターは`false`データが適切な形式です。       このメソッドが戻る`false`とき: -`autoConvert`パラメーターは`true`このメソッドは、指定された形式でデータを見つけることができませんし、指定された形式に変換できないデータやデータに保存された`autoConvert`&quot;éý&quot;`false`です。      -`autoConvert`パラメーター `false`、し、指定された形式では、このインスタンスにデータが存在しません。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "確認対象の形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定された形式に変換できるデータがこのインスタンスに格納されているかどうかを決定するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>データが指定の形式であるかどうかを確認します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ、または指定された形式に変換できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに格納されたデータに関連付けられているかに変換できるすべての形式の一覧を返します。"
  remarks: "呼び出す前に、サポートされているデータ形式を取得するには、このメソッドを呼び出して、<xref:System.Windows.Forms.IDataObject.GetData%2A>メソッド</xref:System.Windows.Forms.IDataObject.GetData%2A>。 参照してください、<xref:System.Windows.Forms.DataFormats>定義済み書式のクラス</xref:System.Windows.Forms.DataFormats>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "このオブジェクトに格納されたデータでサポートされているすべての形式の一覧を表す名前の配列。"
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに格納されたデータに関連付けられているかに変換できる、ブール値を使用しているかどうかをすべての形式に変換できるデータやネイティブ データのみを取得する形式を決定するすべての形式の一覧を取得します。"
  remarks: "呼び出す前に、サポートされているデータ形式を取得するには、このメソッドを呼び出して、<xref:System.Windows.Forms.IDataObject.GetData%2A>メソッド</xref:System.Windows.Forms.IDataObject.GetData%2A>。 参照してください、<xref:System.Windows.Forms.DataFormats>定義済み書式のクラス</xref:System.Windows.Forms.DataFormats>。      > [!NOTE] > データの格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての形式を取得するこのインスタンスに格納されるデータに関連付けられているまたは; に変換できます。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ネイティブ データ形式のみを取得します。"
    return:
      type: System.String[]
      description: "このオブジェクトに格納されたデータでサポートされているすべての形式の一覧を表す名前の配列。"
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "形式のデータのクラスを使用して、このインスタンスに指定されたデータを格納します。"
  remarks: "形式は、データ クラスから派生します。       このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "格納するデータ。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに指定されたデータとその関連する形式を格納します。"
  remarks: "ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。       このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "データに関連付けられている形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    - id: data
      type: System.Object
      description: "格納するデータ。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このインスタンスに指定されたデータと関連付けられているクラス型を格納します。"
  remarks: "ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。       このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A<xref:System.Type>データに関連付けられている形式を表すします</xref:System.Type>。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    - id: data
      type: System.Object
      description: "格納するデータ。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "データを別の形式に変換できるかどうかを指定するブール値を使用して、このインスタンスに指定されたデータとその関連する形式を格納します。"
  remarks: "ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。       このメソッドの実装、 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>。</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>を参照してください。"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "データに関連付けられている形式です。 参照してください<xref href=&quot;System.Windows.Forms.DataFormats&quot;></xref>定義済みの形式です。"
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>別の形式に変換するデータを許可するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: data
      type: System.Object
      description: "格納するデータ。"
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
