### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EditCommandColumn
  id: EditCommandColumn
  children:
  - System.Web.UI.WebControls.EditCommandColumn.#ctor
  - System.Web.UI.WebControls.EditCommandColumn.ButtonType
  - System.Web.UI.WebControls.EditCommandColumn.CancelText
  - System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  - System.Web.UI.WebControls.EditCommandColumn.EditText
  - System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.EditCommandColumn.UpdateText
  - System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  langs:
  - csharp
  name: EditCommandColumn
  nameWithType: EditCommandColumn
  fullName: System.Web.UI.WebControls.EditCommandColumn
  type: Class
  summary: "特別な列の種類、 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>が含まれるコントロール、 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref>各行のデータ項目を編集するためのボタンです。"
  remarks: "EditCommandColumn クラスを使用して特別な列を作成、<xref:System.Web.UI.WebControls.DataGrid>が含まれるコントロール、 `Edit`、 `Update`、および`Cancel`グリッド内の各データ行のボタン</xref:System.Web.UI.WebControls.DataGrid>。 内の行の値を編集することはこれらのボタン、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid>。       行が選択されていない場合、 `Edit` EditCommandColumn オブジェクトの各データ行のボタンが表示されます、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid>。 ときに、`Edit`アイテムがクリックされたボタンをクリックして、<xref:System.Web.UI.WebControls.DataGrid.EditCommand>イベントが発生し、`Edit`ボタンが置き換え、`Update`と`Cancel`ボタン</xref:System.Web.UI.WebControls.DataGrid.EditCommand>。 処理するコードを提供する必要があります、<xref:System.Web.UI.WebControls.DataGrid.EditCommand>イベント</xref:System.Web.UI.WebControls.DataGrid.EditCommand>。 一般的なイベント ハンドラーを設定、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>プロパティを選択した行にデータを再バインドと、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>。      > [!NOTE] > 値を指定する必要があります、 <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A>、 <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A>、および<xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A>プロパティ</xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A></xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A></xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A>。 それ以外の場合、関連するボタンは、EditCommandColumn では表示されません。       ハイパーリンクまたはプッシュ ボタンとして設定して表示する、EditCommandColumn のボタンを設定することができます、<xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A>プロパティ</xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A>。       クリックすると、`Update`または`Cancel`ボタンが発生し、<xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>または<xref:System.Web.UI.WebControls.DataGrid.CancelCommand>イベント、それぞれ</xref:System.Web.UI.WebControls.DataGrid.CancelCommand></xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>。 これらのイベントを処理するコードを提供する必要があります。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>イベント データ、設定を更新する、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) する、データを再バインドと、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A></xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataGrid.CancelCommand>イベントのセット、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) する、データを再バインドと、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A></xref:System.Web.UI.WebControls.DataGrid.CancelCommand>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する、EditCommandColumn オブジェクトを使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 入力テキストを表示する前にユーザー入力を検証する検証コントロールを使用することができます、<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid>。  ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       既定では、ページの検証が実行されるときに、 `Update` EditCommandColumn コントロールでのボタンをクリックします。 ページの検証は、検証コントロールによって指定されている検証規則を合格すべて ページで、検証に関連付けられている入力コントロールを制御するかどうかを判断します。 ページの検証の発生を防ぐためには、設定、<xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>プロパティを`false`</xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>。"
  example:
  - "The following code example demonstrates how to add an EditCommandColumn object to a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_2_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_2_1.aspx)]"
  syntax:
    content: 'public class EditCommandColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.Initialize
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: EditCommandColumn()
  nameWithType: EditCommandColumn.EditCommandColumn()
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditCommandColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.EditCommandColumn>クラス</xref:System.Web.UI.WebControls.EditCommandColumn>の新しいインスタンスを初期化します。"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.EditCommandColumn> class.  \n  \n [!code-vb[Classic EditCommandColumn.EditCommandColumn Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_171_1.vb)]\n [!code-cs[Classic EditCommandColumn.EditCommandColumn Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_171_1.cs)]"
  syntax:
    content: public EditCommandColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.EditCommandColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
  fullName: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または列のボタンの種類を設定します。"
  remarks: "ButtonType プロパティを使用すると、列のボタンがプッシュ ボタン、ハイパーリンクとして表示するかどうかを指定できます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following example demonstrates how to use the ButtonType property to display the `Edit` command buttons as push buttons.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_593_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_593_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定したボタンの種類が、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText
  id: CancelText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
  fullName: System.Web.UI.WebControls.EditCommandColumn.CancelText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を表示するテキスト、 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref>コマンド ボタンで、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  remarks: "表示するテキストを指定する、CancelText プロパティを使用して、 `Cancel` <xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn>コマンド ボタン。      > [!NOTE] > CancelText プロパティの値を指定する必要があります。 それ以外の場合、 `Cancel` <xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn>コマンド ボタンは表示されません。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following example demonstrates how to use the CancelText property to provide custom text for the `Cancel` command button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_925_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_925_1.aspx)]"
  syntax:
    content: public virtual string CancelText { get; set; }
    return:
      type: System.String
      description: "表示するキャプション、 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref>コマンド ボタンで、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.CancelText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
  fullName: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "検証が実行されているかどうかを示す値を取得またはときに、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>ボタンをクリックして、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;> </xref>オブジェクトをクリックします。"
  remarks: "既定では、ページの検証が実行されるときに、`Update`ボタンをクリックして、<xref:System.Web.UI.WebControls.EditCommandColumn>コントロールがクリックされた</xref:System.Web.UI.WebControls.EditCommandColumn>。 ページの検証は、検証コントロールによって指定されている検証規則を合格すべて ページで、検証に関連付けられている入力コントロールを制御するかどうかを判断します。       指定するか、クライアントとサーバーの両方で検証を実行するかどうかを判断するときに、`Update`ボタンをクリックして、 <xref:System.Web.UI.WebControls.EditCommandColumn>CausesValidation プロパティを使用してコントロールをクリックした</xref:System.Web.UI.WebControls.EditCommandColumn>。 検証が実行されるを防ぐためには、設定 CausesValidation プロパティ`false`です。       CausesValidation プロパティの値に設定すると`true`、使用することも、<xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A>プロパティを対象の検証グループの名前を指定する、`Update`ボタンをクリックして、<xref:System.Web.UI.WebControls.EditCommandColumn>オブジェクトが原因で検証します</xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証を実行する場合と、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>ボタンをクリックして、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;> </xref>がクリックされた場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText
  id: EditText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: EditText
  nameWithType: EditCommandColumn.EditText
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を表示するテキスト、 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref>ボタンをクリックして、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  remarks: "EditText プロパティに表示するテキストを使用して、`Edit`ボタンをクリックして、<xref:System.Web.UI.WebControls.EditCommandColumn>コントロール</xref:System.Web.UI.WebControls.EditCommandColumn>。      > [!NOTE] > EditText プロパティの値を指定する必要があります。 それ以外の場合、 `Edit` <xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn>ボタンは表示されません。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the EditText property to provide custom text for the `Edit` button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1331_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1331_1.aspx)]"
  syntax:
    content: public virtual string EditText { get; set; }
    return:
      type: System.String
      description: "表示するキャプション、 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref>ボタンをクリックして、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.EditText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "列内のセルを初期化します。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>初期化するためにセルに関する情報を格納します。"
    - id: columnIndex
      type: System.Int32
      description: "セルが配置されている列の番号。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.EditCommandColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  id: UpdateText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
  fullName: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を表示するテキスト、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>コマンド ボタンで、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  remarks: "表示するテキストを指定する UpdateText プロパティを使用して、 `Update` <xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn>コマンド ボタン。      > [!NOTE] > UpdateText プロパティの値を指定する必要があります。 それ以外の場合、 `Update` <xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn>コマンド ボタンは表示されません。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following example demonstrates how to use the UpdateText property to provide custom text for the `Update` command button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_790_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_790_1.aspx)]"
  syntax:
    content: public virtual string UpdateText { get; set; }
    return:
      type: System.String
      description: "表示するキャプション、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>コマンド ボタンで、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.UpdateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の検証コントロールのグループを<xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>オブジェクトは、サーバーへのポストバック時に検証を実行します。"
  remarks: "検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各グループの検証は、ページ上の他の検証グループとは無関係に検証できます。 対象の更新ボタン検証グループの名前を指定する、ValidationGroup プロパティを使用して、<xref:System.Web.UI.WebControls.EditCommandColumn>オブジェクトは、サーバーへのポストバック時に検証を実行します</xref:System.Web.UI.WebControls.EditCommandColumn>。       ValidationGroup プロパティは、有効される場合にのみの値、<xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>プロパティに設定されている`true`</xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>。 ValidationGroup プロパティの値を指定すると、指定されたグループの一部である検証コントロールのみが検証される場合、更新ボタンをクリックして、<xref:System.Web.UI.WebControls.EditCommandColumn>オブジェクトがサーバーに再度ポストします</xref:System.Web.UI.WebControls.EditCommandColumn>。 ValidationGroup プロパティの値を指定しないかどうか、<xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>プロパティに設定されている`true`、検証グループに割り当てられていないページ上のすべての検証コントロールが検証される場合、更新ボタンをクリックして、<xref:System.Web.UI.WebControls.EditCommandColumn>オブジェクトがサーバーに再度ポストします</xref:System.Web.UI.WebControls.EditCommandColumn></xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "検証コントロールを更新ボタンのグループ、 <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;> </xref>が原因で、サーバーへのポストバック時に検証します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditCommandColumn()
  nameWithType: EditCommandColumn.EditCommandColumn()
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditCommandColumn()
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
  fullName: System.Web.UI.WebControls.EditCommandColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
  fullName: System.Web.UI.WebControls.EditCommandColumn.CancelText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
  fullName: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditText
  nameWithType: EditCommandColumn.EditText
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditText
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
  fullName: System.Web.UI.WebControls.EditCommandColumn.UpdateText
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditCommandColumn
  nameWithType: EditCommandColumn.EditCommandColumn
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditText
  nameWithType: EditCommandColumn.EditText
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: InitializeCell
  nameWithType: EditCommandColumn.InitializeCell
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
