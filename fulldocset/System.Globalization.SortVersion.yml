### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortVersion
  id: SortVersion
  children:
  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  - System.Globalization.SortVersion.Equals(System.Object)
  - System.Globalization.SortVersion.FullVersion
  - System.Globalization.SortVersion.GetHashCode
  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.SortId
  langs:
  - csharp
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
  type: Class
  summary: "比較し、文字列の順序の使用を Unicode のバージョンに関する情報を提供します。"
  remarks: "[!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]を通じて、 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]、.net Framework のバージョンごとに並べ替えウェイトを含むテーブルが含まれているされ、文字列の正規化にデータが Unicode の特定のバージョンに基づいています。 [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]、これらのテーブルの存在は、オペレーティング システムによって異なります。 -[!INCLUDE[win7](~/add/includes/win7-md.md)]コンティニュ以前のバージョンの Windows オペレーティング システムでは、テーブルを比較すると、文字列を順序付けに使用します。      - [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]、.NET Framework デリゲートの文字列比較と順序付け、オペレーティング システムを操作します。       その結果、文字列比較の結果によって依存するだけでなく、.NET Framework のバージョンはでも、オペレーティング システムのバージョンでは、次の表に示すようです。 文字の比較と並べ替えをだけです。 この Unicode のサポートされているバージョンの一覧が適用されることに注意してください。カテゴリ別 Unicode 文字の分類には当てはまりません。      |.NET Framework のバージョン |オペレーティング システム |Unicode バージョン |  |----------------------------|----------------------|---------------------|  |[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]|すべてのオペレーティング システム |Unicode 5.0 |  |[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] .NET Framework の以降のバージョン |[!INCLUDE[win7](~/add/includes/win7-md.md)]|Unicode 5.0 |  |[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] .NET Framework の以降のバージョン |[!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]以降の Windows オペレーティング システムのバージョン |Unicode 6.0 |       [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]Unicode のバージョンで使用される文字列比較と順序付けは、オペレーティング システムのバージョンによって異なります、.NET Framework の特定のバージョンで実行されるアプリケーションについても、文字列比較の結果が異なる場合があります。       SortVersion クラスでは、.NET Framework で文字列比較に使用して、順序付けの Unicode バージョンに関する情報を提供します。 アプリケーションを検出し、比較や、アプリケーションの文字列の並べ替えに使用される Unicode のバージョンで変更が正常に処理を記述する開発者ができるようにします。       2 つの方法で SortVersion オブジェクトをインスタンス化することができます: - を呼び出して<xref:System.Globalization.SortVersion.%23ctor%2A>コンス トラクター、新しい SortVersion をインスタンス化するオブジェクトのバージョン番号に基づくし並べ替え id。</xref:System.Globalization.SortVersion.%23ctor%2A> このコンス トラクターは、保存されたデータから SortVersion オブジェクトを再作成する場合に最も役立ちます。      の値を取得するで、<xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>プロパティ</xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>。 このプロパティは、アプリケーションが実行されている .NET Framework で使用される Unicode バージョンに関する情報を提供します。       SortVersion クラスには&2; つのプロパティ、<xref:System.Globalization.SortVersion.FullVersion%2A>と<xref:System.Globalization.SortVersion.SortId%2A>、Unicode 環境と特定のカルチャの文字列比較に使用することを示す</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A>。 <xref:System.Globalization.SortVersion.FullVersion%2A>プロパティは、文字列比較に使用される Unicode バージョンを表す任意の数値値、および<xref:System.Globalization.SortVersion.SortId%2A>プロパティは、任意<xref:System.Guid>の規則が文字列比較で使用されるカルチャを反映する</xref:System.Guid></xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A>。 使用して&2; つの SortVersion オブジェクトを比較する場合にのみ、これら&2; つのプロパティの値は重要な<xref:System.Globalization.SortVersion.Equals%2A>、メソッド、<xref:System.Globalization.SortVersion.op_Equality%2A>演算子、または<xref:System.Globalization.SortVersion.op_Inequality%2A>演算子</xref:System.Globalization.SortVersion.op_Inequality%2A></xref:System.Globalization.SortVersion.op_Equality%2A></xref:System.Globalization.SortVersion.Equals%2A>。       通常はインデックスまたはリテラル文字列そのものなどを保存するか、何らかの形式のカルチャに依存した、順序付けられた文字列データを取得する場合、SortVersion オブジェクトを使用します。 次の手順が必要です: 1。  順序付けられた文字列データを保存すると、<xref:System.Globalization.SortVersion.FullVersion%2A>と<xref:System.Globalization.SortVersion.SortId%2A>プロパティの値が保存されます</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A>。      2.  順序付けられた文字列データを取得するときに呼び出すことによって、文字列の並べ替えに使用 SortVersion オブジェクトを再作成することができます、<xref:System.Globalization.SortVersion.%23ctor%2A>コンス トラクター</xref:System.Globalization.SortVersion.%23ctor%2A> 。      3.  この新しくインスタンス化された SortVersion オブジェクトは、規則を使用して、文字列データを注文するカルチャを反映する SortVersion オブジェクトと比較されます。      4.  2 つの SortVersion オブジェクトが等しくない場合、文字列データを並べ替える必要があります。       この例では、具体的なを示します。"
  example:
  - "The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <xref:System.Globalization.RegionInfo> objects are ordered appropriately for the current system and current culture. It uses the <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> objects to store and retrieve ordered data from a data file named `Regions.dat` rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the `reindex` flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the `reindex` flag had been set previously, it resorts the <xref:System.Globalization.RegionInfo> data.  \n  \n [!code-cs[System.Globalization.SortVersion#1](~/add/codesnippet/csharp/t-system.globalization.s_0_1.cs)]\n [!code-vb[System.Globalization.SortVersion#1](~/add/codesnippet/visualbasic/t-system.globalization.s_0_1.vb)]"
  syntax:
    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Globalization.SortVersion>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  id: '#ctor(System.Int32,System.Guid)'
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Globalization.SortVersion&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターが<xref:System.Globalization.SortVersion>、指定したバージョンと並べ替え ID を持つオブジェクト</xref:System.Globalization.SortVersion>をインスタンス化します。 `fullVersion`に引数が割り当てられる、<xref:System.Globalization.SortVersion.FullVersion%2A>プロパティ</xref:System.Globalization.SortVersion.FullVersion%2A>。 `sortId`に引数が割り当てられる、<xref:System.Globalization.SortVersion.SortId%2A>プロパティ</xref:System.Globalization.SortVersion.SortId%2A>。       このコンス トラクターは再作成に役立つ、<xref:System.Globalization.SortVersion>オブジェクトをシリアル化または保存されたデータから</xref:System.Globalization.SortVersion>。 このバージョンは、Unicode を使用して、アプリケーションの文字列の順序のバージョンが利用できるかどうかを決定する現在のアプリケーション バージョンと比較できます。"
  syntax:
    content: public SortVersion (int fullVersion, Guid sortId);
    parameters:
    - id: fullVersion
      type: System.Int32
      description: "バージョン番号です。"
    - id: sortId
      type: System.Guid
      description: "並べ替えの id。"
  overload: System.Globalization.SortVersion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  id: Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Globalization.SortVersion&quot;></xref>インスタンスが、指定された<xref href=&quot;System.Globalization.SortVersion&quot;></xref>オブジェクト。"
  remarks: "2 つ<xref:System.Globalization.SortVersion>オブジェクトが等しい場合は、<xref:System.Globalization.SortVersion.FullVersion%2A>と<xref:System.Globalization.SortVersion.SortId%2A>プロパティが等しい</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A></xref:System.Globalization.SortVersion>。"
  syntax:
    content: public bool Equals (System.Globalization.SortVersion other);
    parameters:
    - id: other
      type: System.Globalization.SortVersion
      description: "このインスタンスと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> other </code> ; このインスタンスと同じバージョンを表す場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Globalization.SortVersion&quot;></xref>インスタンスが、指定されたオブジェクトと等価です。"
  remarks: "2 つ<xref:System.Globalization.SortVersion>オブジェクトが等しい場合は、<xref:System.Globalization.SortVersion.FullVersion%2A>と<xref:System.Globalization.SortVersion.SortId%2A>プロパティが等しい</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A></xref:System.Globalization.SortVersion>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "このインスタンスと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> obj </code>は、 <xref href=&quot;System.Globalization.SortVersion&quot;> </xref>をこのインスタンスと同じバージョンを表すオブジェクトそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.FullVersion
  id: FullVersion
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "完全なバージョン番号を取得、 <xref href=&quot;System.Globalization.SortVersion&quot;> </xref>オブジェクト。"
  remarks: "FullVersion プロパティの値を正規化し、文字列の比較に使用される Unicode バージョンを反映します。"
  syntax:
    content: public int FullVersion { get; }
    return:
      type: System.Int32
      description: "このバージョン番号<xref href=&quot;System.Globalization.SortVersion&quot;></xref>オブジェクト。"
  overload: System.Globalization.SortVersion.FullVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "このインスタンスのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.Globalization.SortVersion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "示す&2; つあるかどうか<xref href=&quot;System.Globalization.SortVersion&quot;></xref>インスタンスが等しい。"
  remarks: "2 つ<xref:System.Globalization.SortVersion>オブジェクトが両方の場合は等しく`null`、またはその<xref:System.Globalization.SortVersion.FullVersion%2A>と<xref:System.Globalization.SortVersion.SortId%2A>プロパティが等しい</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A></xref:System.Globalization.SortVersion>。"
  syntax:
    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "比較する最初のインスタンス。"
    - id: right
      type: System.Globalization.SortVersion
      description: "比較する&2; 番目のインスタンス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Globalization.SortVersion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "示す&2; つあるかどうか<xref href=&quot;System.Globalization.SortVersion&quot;></xref>インスタンスが等しくないです。"
  remarks: "2 つ<xref:System.Globalization.SortVersion>オブジェクトがある場合は等しくない`null`、もう一方はない、またはこれらがある異なる場合<xref:System.Globalization.SortVersion.FullVersion%2A>または<xref:System.Globalization.SortVersion.SortId%2A>プロパティの値</xref:System.Globalization.SortVersion.SortId%2A></xref:System.Globalization.SortVersion.FullVersion%2A></xref:System.Globalization.SortVersion>。"
  syntax:
    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "比較する最初のインスタンス。"
    - id: right
      type: System.Globalization.SortVersion
      description: "比較する&2; 番目のインスタンス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> left </code>と<code> right </code>が等しくない。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.SortVersion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.SortId
  id: SortId
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "このグローバルに一意の識別子を取得<xref href=&quot;System.Globalization.SortVersion&quot;></xref>オブジェクト。"
  remarks: "SortId プロパティの値は、文字列の比較および並べ替えの規則に影響を与えるカルチャを反映します。"
  syntax:
    content: public Guid SortId { get; }
    return:
      type: System.Guid
      description: "このグローバルに一意の識別子<xref href=&quot;System.Globalization.SortVersion&quot;></xref>オブジェクト。"
  overload: System.Globalization.SortVersion.SortId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortVersion
  parent: System.Globalization
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
- uid: System.Globalization.SortVersion.Equals(System.Object)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
- uid: System.Globalization.SortVersion.FullVersion
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.SortId
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
- uid: System.Globalization.SortVersion.#ctor*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion.SortVersion
- uid: System.Globalization.SortVersion.Equals*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals
  nameWithType: SortVersion.Equals
- uid: System.Globalization.SortVersion.FullVersion*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode
  nameWithType: SortVersion.GetHashCode
- uid: System.Globalization.SortVersion.op_Equality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality
  nameWithType: SortVersion.op_Equality
- uid: System.Globalization.SortVersion.op_Inequality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality
  nameWithType: SortVersion.op_Inequality
- uid: System.Globalization.SortVersion.SortId*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
