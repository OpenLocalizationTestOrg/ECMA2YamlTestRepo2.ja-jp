### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RoleManagerModule
  id: RoleManagerModule
  children:
  - System.Web.Security.RoleManagerModule.#ctor
  - System.Web.Security.RoleManagerModule.Dispose
  - System.Web.Security.RoleManagerModule.GetRoles
  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: RoleManagerModule
  nameWithType: RoleManagerModule
  fullName: System.Web.Security.RoleManagerModule
  type: Class
  summary: "管理、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>現在のユーザー用のインスタンス。 このクラスは継承できません。"
  remarks: "RoleManagerModule クラス割り当てる<xref:System.Web.Security.RolePrincipal><xref:System.Web.HttpContext.User%2A><xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>。</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A>プロパティ</xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.RolePrincipal>に使用します。       要求が完了したら、RoleManagerModule はキャッシュされているロール情報を含むロール クッキーを更新します。 場合、<xref:System.Web.HttpContext.User%2A>プロパティの型は<xref:System.Web.Security.RolePrincipal>、および<xref:System.Web.Security.RolePrincipal>を設定してそのキャッシュされたロールの一覧が変更されたことを示します、<xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>プロパティを`true`、RoleManagerModule がキャッシュされているロール情報を含むロール クッキーを更新します</xref:System.Web.Security.RolePrincipal.CachedListChanged%2A></xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.RolePrincipal></xref:System.Web.HttpContext.User%2A>。       このクラスは、コードから直接使用するものではありません。"
  syntax:
    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.Security.RoleManagerModule>を配置するクラスが使用される、<xref:System.Web.Security.RolePrincipal>で、<xref:System.Web.HttpContext.User%2A>のプロパティ、<xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>コードから直接使用するものではありません</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A></xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.RoleManagerModule>。"
  syntax:
    content: public RoleManagerModule ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Dispose
  id: Dispose
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール マネージャー モジュールを破棄する HTTP ランタイムによって呼び出されます。"
  remarks: "<xref:System.Web.Security.RoleManagerModule>。</xref:System.Web.Security.RoleManagerModule>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Web.Security.RoleManagerModule>使用不可の状態</xref:System.Web.Security.RoleManagerModule>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Web.Security.RoleManagerModule>占有していたメモリをガベージ コレクションによって再要求できるようにします</xref:System.Web.Security.RoleManagerModule>。       このメソッドは、コードから直接使用するものではありません。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.GetRoles
  id: GetRoles
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "グローバル アプリケーションのイベントはいつ発生する、 <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref>を作成する準備ができて、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>現在のユーザーを表すです。"
  remarks: "GetRoles イベント<xref:System.Web.Security.RoleManagerModule><xref:System.Web.Security.RolePrincipal>オブジェクトおよび<xref:System.Web.HttpContext.User%2A><xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>。</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A>プロパティ</xref:System.Web.HttpContext.User%2A>に代入</xref:System.Web.Security.RolePrincipal>を作成</xref:System.Web.Security.RoleManagerModule>する前に ロール情報が適用されるときに監査するまたはの作成を置換するは、このイベントを使用することができます、<xref:System.Web.Security.RolePrincipal>によって、<xref:System.Web.Security.RoleManagerModule>独自のコードにします</xref:System.Web.Security.RoleManagerModule></xref:System.Web.Security.RolePrincipal>。       ロール情報のアプリケーションを取り消すことができます、<xref:System.Web.Security.RoleManagerModule>を設定して、<xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>のプロパティ、<xref:System.Web.Security.RoleManagerEventArgs>に`true`GetRoles イベント</xref:System.Web.Security.RoleManagerEventArgs></xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A></xref:System.Web.Security.RoleManagerModule>。       設定した場合<xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>に`true`GetRoles イベント ハンドラー、<xref:System.Web.HttpContext.User%2A><xref:System.Web.HttpContext><xref:System.Web.Security.RolePrincipal><xref:System.Web.Security.RoleManagerModule></xref:System.Web.Security.RoleManagerModule>オブジェクト</xref:System.Web.Security.RolePrincipal>に設定されていないのは</xref:System.Web.HttpContext>、の現在のプロパティ</xref:System.Web.HttpContext.User%2A>で</xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A>。"
  example:
  - "The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \n  \n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]"
  syntax:
    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;
    return:
      type: System.Web.Security.RoleManagerEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール マネージャーを指定したアプリケーションに関連付けます。"
  remarks: "このメソッドをサブスクライブする、<xref:System.Web.HttpApplication.PostAuthorizeRequest>と<xref:System.Web.HttpApplication.EndRequest>の指定したメソッド<xref:System.Web.HttpApplication>ロール情報を管理するために、コードから直接使用するものではありません</xref:System.Web.HttpApplication></xref:System.Web.HttpApplication.EndRequest></xref:System.Web.HttpApplication.PostAuthorizeRequest>。"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "<xref href=&quot;System.Web.HttpApplication&quot;> </xref>に関連付けるには、 <xref href=&quot;System.Web.Security.RoleManagerModule&quot;> </xref>とします。"
  overload: System.Web.Security.RoleManagerModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.RoleManagerModule.#ctor
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
- uid: System.Web.Security.RoleManagerModule.Dispose
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
- uid: System.Web.Security.RoleManagerModule.GetRoles
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
- uid: System.Web.Security.RoleManagerEventHandler
  parent: System.Web.Security
  isExternal: false
  name: RoleManagerEventHandler
  nameWithType: RoleManagerEventHandler
  fullName: System.Web.Security.RoleManagerEventHandler
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.RoleManagerModule.#ctor*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule
  nameWithType: RoleManagerModule.RoleManagerModule
- uid: System.Web.Security.RoleManagerModule.Dispose*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose
  nameWithType: RoleManagerModule.Dispose
- uid: System.Web.Security.RoleManagerModule.Init*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init
  nameWithType: RoleManagerModule.Init
