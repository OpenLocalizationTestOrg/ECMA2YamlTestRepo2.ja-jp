### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  id: Peer
  children:
  - System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.Invite
  - System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.ToString
  langs:
  - csharp
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
  type: Class
  summary: "このクラスは、リモートのピアを表します。"
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>や<xref:System.Net.PeerToPeer.Collaboration.PeerContact>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>などの派生クラスで共有できる一般的な基本クラスの定義を提供する抽象クラスのピアの目的は、します。 直接構築できません、抽象であるためです。 開発者は、代わりに PeerNearMe または PeerContact サブクラスを使用する必要があります。       連絡先、ピア、リモートのピア<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>、および<xref:System.Net.PeerToPeer.Collaboration.PeerContact>コンテキストに基づいて、同義の用語します</xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。       「呼び出し元のピア」と「リモート ピア」は、よく同じ意味です。  呼び出し元のピアは、特定のメソッドを呼び出すアプリケーションを参照していません。"
  syntax:
    content: 'public abstract class Peer : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.Peer>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.Peer>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>型です。"
  remarks: "型<xref:System.Net.PeerToPeer.Collaboration.Peer>または<xref:System.Net.PeerToPeer.Collaboration.PeerContact><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>サブクラス化されたオブジェクト</xref:System.Net.PeerToPeer.Collaboration.Peer>を返します PeerContact<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>または、PeerNearMe<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A>新規のピア オブジェクトの名前を一意の参照が含まれています</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A></xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>。"
  syntax:
    content: protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "このインスタンスを逆シリアル化に必要なデータを保持するオブジェクトへの参照。"
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "データを逆シリアル化するための手段を提供するコンテキスト。 シリアル化されたデータのソースとも呼ばれます。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクト。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクトをオプションでマネージ リソースも解放します。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  id: Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "現在の小文字<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>と指定したピアです。"
  remarks: "2 つのピアは内の値に関係なく、同じエンドポイントのコレクションがある場合、等しいと見なされます、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>プロパティ</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>。 派生クラスではなく、このクラスを直接使用シナリオが関係しない<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>または<xref:System.Net.PeerToPeer.Collaboration.PeerContact>クラス</xref:System.Net.PeerToPeer.Collaboration.PeerContact></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.Peer
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>のインスタンスをこのインスタンスと比較します。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定された<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>インスタンスが同じ<xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*>このピア インスタンスは、それ以外の場合と<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*> 。 このメソッドも返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ピア パラメーターがある場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲットをシリアル化に必要なデータを持つオブジェクト<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>です。"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "このシリアル化のシリアル化先。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  id: GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "ローカル キャッシュからのデータ オブジェクトのコレクションを取得します。"
  remarks: "この機能は、<xref:System.Net.PeerToPeer.Collaboration.PeerContact>クラス</xref:System.Net.PeerToPeer.Collaboration.PeerContact>でのみ公開します。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。       ピア コラボレーション セッションしなかったインスタンス化するいないと場合、<xref:System.Security.Permissions.PermissionState>の<xref:System.Security.Permissions.PermissionState>、このメソッドは、ローカル コンピューター上のオブジェクトにアクセスできません</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>。  コラボレーション セッションに登録されたアプリケーションも同様です。       ピア オブジェクトのコレクションは、アプリケーション、データ オブジェクト、およびピアまたはこのインスタンスで指定されたエンドポイントのプレゼンス情報で構成されます。 エンドポイントのオブジェクトが見つからない場合、コレクション サイズのゼロ (0) が返されます。 呼び出し元のピアがこのエンドポイントにサブスクライブしている場合、キャッシュが自動的に更新します。それ以外の場合<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>このメソッドを呼び出す前に呼び出す必要があります</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>。       呼び出し元は、このメソッドが正常に完了するためのコラボレーション インフラストラクチャに署名する必要はありません。  呼び出しは成功<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>またはのいずれか、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>メソッド完了しなければならない、呼び出し元がこのメソッドを呼び出す前サインインした状態</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>。       注: オーバー ロードを追加は<xref:System.Net.PeerToPeer.Collaboration.Peer>サブクラス<xref:System.Net.PeerToPeer.Collaboration.PeerContact>と<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>ではなくクラス</xref:System.Net.PeerToPeer.Collaboration.Peer>で定義されました。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref>ピアまたはこのインスタンスで指定されたエンドポイントのコレクション。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し元は、エンドポイントをサブスクライブしていないまたは<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>がまだ呼び出されません"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "メソッドは、基になるピア コラボレーションのインフラストラクチャ エラーのため完了できません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクトが、指定された関連付け<xref:System.Guid>から、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;> </xref></xref:System.Guid> 。"
  remarks: "この機能は、<xref:System.Net.PeerToPeer.Collaboration.PeerContact>クラス</xref:System.Net.PeerToPeer.Collaboration.PeerContact>でのみ公開します。 この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。       ピア オブジェクトのコレクションは、アプリケーション、データ オブジェクト、およびピアまたはこのインスタンスで指定されたエンドポイントのプレゼンス情報で構成されます。 エンドポイントのオブジェクトが見つからない場合、コレクション サイズのゼロ (0) が返されます。 呼び出し元のピアがこのエンドポイントにサブスクライブしている場合、キャッシュが自動的に更新します。それ以外の場合<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>このメソッドを呼び出す前に呼び出す必要があります</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>。       呼び出し元は、このメソッドが正常に完了するためのコラボレーション インフラストラクチャに署名する必要はありません。  呼び出しは成功<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>またはのいずれか、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>メソッド完了しなければならない、呼び出し元がこのメソッドを呼び出す前サインインした状態</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A></xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>。 このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。 この状態は、コラボレーション セッションの開始時に作成します。       注: オーバー ロードを追加は、<xref:System.Net.PeerToPeer.Collaboration.Peer>代わりに、派生クラス<xref:System.Net.PeerToPeer.Collaboration.PeerContact>と<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe></xref:System.Net.PeerToPeer.Collaboration.PeerContact>クラス</xref:System.Net.PeerToPeer.Collaboration.Peer>で定義されました。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);
    parameters:
    - id: objectId
      type: System.Guid
      description: "<xref:System.Guid>の<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>オブジェクトをコレクションから取得する</xref:System.Guid>"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>指定された<xref:System.Guid>。</xref:System.Guid>に関連付けられているオブジェクト オブジェクトが見つからない場合、コレクション サイズのゼロ (0) が返されます。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "オブジェクト ID <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し元がサブスクライブしていない、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>または<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>それに対して</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>呼び出されるがありません"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "ピアからオブジェクト情報を取得するときにエラーが発生しました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "使用可能なプレゼンス情報を取得、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>です。"
  remarks: "プレゼンス情報には、オンライン、オフライン、および退席中などの状態の記述子が含まれています。       このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>プレゼンス情報を取得します。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "返します、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;> </xref>がそれ以外の使用可能な場合は、使用可能なエンドポイントのプレゼンス情報を含むオブジェクト<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerEndPoint</code>有効なエンドポイントは含まれません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerEndPoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されています、現在のピア操作では使用できません。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "ピアからプレゼンス情報を取得中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "招待を送信、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>を特定の開始<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>です。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。 この状態は、ピア コラボレーション セッションの開始時に作成します。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>招待状を受信したピアからです。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   招待の処理中にエラーが発生しました。      -実行中のアプリケーションは、ピア コラボレーション インフラストラクチャに登録されていません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "招待を送信、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>を特定の開始<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>です。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。 この状態は、ピア コラボレーション セッションの開始時に作成します。"
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>招待状が送信されるのです。"
    - id: message
      type: System.String
      description: "アプリケーションへの招待とリモートのピアに送信するメッセージ。  メッセージは、255 個の Unicode 文字にすることができます。"
    - id: invitationData
      type: System.Byte[]
      description: "ユーザーには、招待に関連付けるデータ blob が定義されています。  そのサイズは、16,384 バイト未満に設定できます。"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>招待状を受信したピアからです。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "共同作業のため、アプリケーションが登録されていません。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>16,384 バイトを超えています。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   招待の処理中にエラーが発生しました。      -実行中のアプリケーションは、ピア コラボレーション インフラストラクチャに登録されていません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "招待を送信する招待を非同期操作を開始、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>を特定の開始<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>です。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。 この状態は、ピア コラボレーション セッションの開始時に作成します。"
  syntax:
    content: public abstract void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "ユーザー定義のオブジェクトを識別するための非同期操作のコールバックに渡します。 これは、必須パラメーターは進行中のすべての非同期招待操作間で一意である必要があります。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>します。<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   招待の処理中にエラーが発生しました。      -実行中のアプリケーションは、コラボレーション インフラストラクチャに登録されていません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "招待を送信する招待を非同期操作を開始、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>を特定の開始<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>です。"
  remarks: "このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。 この状態は、ピア コラボレーション セッションの開始時に作成します。"
  syntax:
    content: public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>招待状が送信されるのです。"
    - id: message
      type: System.String
      description: "アプリケーションへの招待とリモートのピアに送信するメッセージ。 このメッセージの最大サイズは、255 Unicode 文字です。"
    - id: invitationData
      type: System.Byte[]
      description: "ユーザーには、招待に関連付けるデータ blob が定義されています。  そのサイズは、16,384 バイト未満に設定できます。"
    - id: userToken
      type: System.Object
      description: "ユーザー定義のオブジェクトを識別するための非同期操作のコールバックに渡します。 これは、必須パラメーターは進行中のすべての非同期招待操作間で一意である必要があります。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "アプリケーションは、コラボレーション インフラストラクチャに登録されていません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>します。<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>16,384 バイトを超えています。"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   招待の処理中にエラーが発生しました。      -実行中のアプリケーションは、コラボレーション インフラストラクチャに登録されていません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  id: InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "送信された招待のキャンセル、<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>メソッド</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>。"
  remarks: "システムを待機しなくなりますこのメソッドを呼び出すことを保証する<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>InviteAsync 要求に関連付けられているピアから</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>。       複数の招待は、特定の時点で未処理可能性があります。  非同期操作がによって識別されるときに、InviteAsyncCancel メソッドが呼び出された場合、`userToken`は存在ではなく、例外がスローされます。 `userToken`特定の非同期呼び出しを追跡するために使用されているために、オブジェクトを指定する必要があります。 このホスト アプリケーションによって提供されるオブジェクトは、招待要求ごとに一意です。       このメソッドを使用すると、 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>、関連付けられているキャンセルのプロパティは、イベントを発生まだできます<xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>オブジェクトに設定されます`true.` <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState>の</xref:System.Security.Permissions.PermissionState>このメソッドを呼び出す必要があります</xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs></xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: public void InviteAsyncCancel (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "ユーザー定義のコールバックに渡されるオブジェクト、<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>操作を識別します</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>。 これは、必須パラメーターは進行中のすべての非同期招待操作間で一意である必要があります。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code>パラメーターを指定できません<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "非同期の招待状が存在しません。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  id: InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "リモートのピアの招待の処理が完了したときに発生します。"
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>招待操作の結果を指定します</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>。       このメソッドを呼び出す<xref:System.Security.Permissions.PermissionState><xref:System.Security.Permissions.PermissionState>。</xref:System.Security.Permissions.PermissionState></xref:System.Security.Permissions.PermissionState>が必要です。"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> InviteCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
      description: "追加します。"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  id: IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "場合を指定する値を取得、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>が現在 &quot;オンライン&quot; です。"
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オンラインに関連付けられているエンドポイントのいずれかです。 それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       このプロパティの既定値は、指定しない限り、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  id: OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "発生させる、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;> </xref>イベント。"
  remarks: "このクラスから継承するクラスでオーバーライドできるメソッドを追加するときの操作、<xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>イベントが発生します</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>。"
  syntax:
    content: protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref>オブジェクトに関連付けられているデリゲートに渡されるイベント データを含む、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;> </xref>イベント。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  id: PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "取得、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>です。"
  remarks: "リモート ピアは、ホストのピアでは、中継ぎ局ときに、<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>に含まれるオブジェクト<xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>リモート ピアのローカルの連絡先と関連付ける</xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection></xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>。"
  syntax:
    content: public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>です。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "すべてのイベントを非同期操作の結果としては起動しませんが<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>。</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>固有の仕様を作成したスレッドでコールバック関連付けられているイベント ハンドラーがこのプロパティの値が設定されている場合"
  remarks: "このプロパティの既定の設定値は`null`システムのスレッド プールのスレッドですべてのイベント ハンドラーを呼び出すことを知らせます。       このプロパティは通常に設定する UI 要素など、<xref:System.Windows.Forms.Form>インスタンス</xref:System.Windows.Forms.Form>。"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;> </xref>インターフェイスし、この型のインスタンスによって作成されたスレッドでイベント ハンドラーの同期に使用します。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出し元のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>クラスのインスタンスを指定したシリアル化するために必要なデータと<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref>インスタンス。 派生型が基本型を呼び出す必要があります<xref:System.Runtime.Serialization.ISerializable.GetObjectData*>メソッド</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "シリアル化先。"
  overload: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "返します、<xref:System.String>を表す、<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>に関連付けられている、 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref></xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> </xref:System.String> 。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String><xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>。</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>を表す</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
- uid: System.Net.PeerToPeer.Collaboration.Peer
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InviteCompletedEventArgs>
  nameWithType: EventHandler<InviteCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
    name: InviteCompletedEventArgs
    nameWithType: InviteCompletedEventArgs
    fullName: InviteCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: InviteCompletedEventArgs
  nameWithType: InviteCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPointCollection
  nameWithType: PeerEndPointCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer
  nameWithType: Peer.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose
  nameWithType: Peer.Dispose
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals
  nameWithType: Peer.Equals
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData
  nameWithType: Peer.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects
  nameWithType: Peer.GetObjects
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo
  nameWithType: Peer.GetPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite
  nameWithType: Peer.Invite
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync
  nameWithType: Peer.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel
  nameWithType: Peer.InviteAsyncCancel
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted
  nameWithType: Peer.OnInviteCompleted
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString
  nameWithType: Peer.ToString
