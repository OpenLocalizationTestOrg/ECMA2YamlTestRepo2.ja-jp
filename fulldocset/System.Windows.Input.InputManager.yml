### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.InputManager
  id: InputManager
  children:
  - System.Windows.Input.InputManager.Current
  - System.Windows.Input.InputManager.EnterMenuMode
  - System.Windows.Input.InputManager.HitTestInvalidatedAsync
  - System.Windows.Input.InputManager.InputProviders
  - System.Windows.Input.InputManager.IsInMenuMode
  - System.Windows.Input.InputManager.LeaveMenuMode
  - System.Windows.Input.InputManager.MostRecentInputDevice
  - System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  - System.Windows.Input.InputManager.PostNotifyInput
  - System.Windows.Input.InputManager.PostProcessInput
  - System.Windows.Input.InputManager.PreNotifyInput
  - System.Windows.Input.InputManager.PreProcessInput
  - System.Windows.Input.InputManager.PrimaryKeyboardDevice
  - System.Windows.Input.InputManager.PrimaryMouseDevice
  - System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  - System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  langs:
  - csharp
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
  type: Class
  summary: "内のすべての入力システムを管理する[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]です。"
  remarks: "すべての入力でシステムを調整するため、InputManager クラスは[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]します。       フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput>または<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput></xref:System.Windows.Input.InputManager.PreProcessInput>をリッスンするすべてのコードは、します。  フィルターは、入力のステージング領域を変更できます。       モニターは、<xref:System.Windows.Input.InputManager.PreNotifyInput>または<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput></xref:System.Windows.Input.InputManager.PreNotifyInput>をリッスンするすべてのコードは、します。  モニターは、入力のステージング領域を変更できません。       InputManager は、入力のステージング領域を制御します。  入力のステージング領域への入力を処理する[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]イベント。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreProcessInput>イベント</xref:System.Windows.Input.InputManager.PreProcessInput>。      2.  ステージを事前に通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreNotifyInput>イベント</xref:System.Windows.Input.InputManager.PreNotifyInput>。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostNotifyInput>イベント</xref:System.Windows.Input.InputManager.PostNotifyInput>。      5.  処理後の段階です。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostProcessInput>イベント</xref:System.Windows.Input.InputManager.PostProcessInput>。"
  syntax:
    content: 'public sealed class InputManager : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.InputManager.Current
  id: Current
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得、 <xref href=&quot;System.Windows.Input.InputManager&quot;> </xref>現在のスレッドに関連付けられています。"
  remarks: "インターネット ゾーンでは、このクラスを使用できません。"
  syntax:
    content: public static System.Windows.Input.InputManager Current { get; }
    return:
      type: System.Windows.Input.InputManager
      description: "入力マネージャーです。"
  overload: System.Windows.Input.InputManager.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.EnterMenuMode
  id: EnterMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "コントロールを呼び出してメニュー モードに入ると発生、<xref:System.Windows.Input.InputManager.PushMenuMode*>メソッド</xref:System.Windows.Input.InputManager.PushMenuMode*>。"
  remarks: "コンポーネントは、入力のマネージャーのメニューのモードに入るコントロールに応答するには、このイベントにデリゲートを登録します。"
  syntax:
    content: public event EventHandler EnterMenuMode;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  id: HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "ヒット テストの結果が変更されたときに発生します。"
  syntax:
    content: public event EventHandler HitTestInvalidatedAsync;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.InputProviders
  id: InputProviders
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "登録されている InputProviders のコレクションを取得、 <xref href=&quot;System.Windows.Input.InputManager&quot;></xref>です。"
  syntax:
    content: public System.Collections.ICollection InputProviders { get; }
    return:
      type: System.Collections.ICollection
      description: "入力のコレクションを提供します。"
  overload: System.Windows.Input.InputManager.InputProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.IsInMenuMode
  id: IsInMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;></xref>メニュー モードします。"
  remarks: "IsInMenuMode プロパティから返される`true`任意のメニューが開き、それが返された場合`false`メニューが開かれていない場合。"
  syntax:
    content: public bool IsInMenuMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;></xref>メニュー モードでは、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.InputManager.IsInMenuMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  id: LeaveMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "コントロールは、呼び出すことでメニュー モードを離れたときに発生、<xref:System.Windows.Input.InputManager.PopMenuMode*>メソッド</xref:System.Windows.Input.InputManager.PopMenuMode*>。"
  remarks: "コンポーネントは、入力のマネージャーのメニュー モードを終了コントロールに応答するには、このイベントにデリゲートを登録します。"
  syntax:
    content: public event EventHandler LeaveMenuMode;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  id: MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "最新の入力イベントに関連付けられている入力デバイスを表す値を取得します。"
  syntax:
    content: public System.Windows.Input.InputDevice MostRecentInputDevice { get; }
    return:
      type: System.Windows.Input.InputDevice
      description: "入力デバイス。"
  overload: System.Windows.Input.InputManager.MostRecentInputDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  id: PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "メニュー モードを終了するにはコンポーネントによって呼び出されます。"
  remarks: "コンポーネントは、入力のマネージャーのメニュー モードを終了するには、このメソッドを呼び出します。 `menuSite`ウィンドウ メッセージへのアクセス権限を解放します。       このメソッドを呼び出すと、内部でカウントをデクリメントするメニューを開くの発生して設定、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A>プロパティを`false`これは、最後のメニューを閉じる場合は、</xref:System.Windows.Input.InputManager.IsInMenuMode%2A> 。"
  syntax:
    content: public void PopMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "メニューをそのままにします。"
  overload: System.Windows.Input.InputManager.PopMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostNotifyInput
  id: PostNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "後に発生、 <xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;> </xref>ハンドラーでは、入力と、対応する処理が完了したら[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]イベントが発生しました。"
  remarks: "モニターがリッスンするすべてのコードは、<xref:System.Windows.Input.InputManager.PreNotifyInput>または PostNotifyInput</xref:System.Windows.Input.InputManager.PreNotifyInput> 。  モニターは、入力のステージング領域を変更できません。       システムのハンドラーの前に、ユーザーによって追加されたハンドラーが呼び出されるように PostNotifyInput にアタッチされているハンドラーが逆の順序で呼び出されます。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreProcessInput>イベント</xref:System.Windows.Input.InputManager.PreProcessInput>。      2.  ステージを事前に通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreNotifyInput>イベント</xref:System.Windows.Input.InputManager.PreNotifyInput>。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力のマネージャーは、PostNotifyInput イベントを発生させます。      5.  処理後の段階です。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostProcessInput>イベント</xref:System.Windows.Input.InputManager.PostProcessInput>。"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostProcessInput
  id: PostProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "後に発生、 <xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;> </xref>ハンドラーの入力の処理が終了します。"
  remarks: "フィルターがリッスンするすべてのコードは、<xref:System.Windows.Input.InputManager.PreProcessInput>または PostProcessInput</xref:System.Windows.Input.InputManager.PreProcessInput> 。  フィルターは、入力のステージング領域を変更できます。       システムのハンドラーの前に、ユーザーによって追加されたハンドラーが呼び出されるように PostProcessInput にアタッチされているハンドラーが逆の順序で呼び出されます。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreProcessInput>イベント</xref:System.Windows.Input.InputManager.PreProcessInput>。      2.  ステージを事前に通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreNotifyInput>イベント</xref:System.Windows.Input.InputManager.PreNotifyInput>。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostNotifyInput>イベント</xref:System.Windows.Input.InputManager.PostNotifyInput>。      5.  処理後の段階です。  入力のマネージャーは、PostProcessInput イベントを発生させます。"
  syntax:
    content: public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;
    return:
      type: System.Windows.Input.ProcessInputEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreNotifyInput
  id: PreNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "発生したときに、 <xref href=&quot;System.Windows.Input.InputManager.PreProcessInput&quot;> </xref>ハンドラー処理が終了した、入力、入力が取り消されていない場合。"
  remarks: "モニターは PreNotifyInput または<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするすべてのコードは、します。  モニターは、入力のステージング領域を変更できません。       システムのハンドラーの前に、ユーザーによって追加されたハンドラーが呼び出されるように PreNotifyInput にアタッチされているハンドラーが逆の順序で呼び出されます。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreProcessInput>イベント</xref:System.Windows.Input.InputManager.PreProcessInput>。      2.  ステージを事前に通知します。  入力のマネージャーは、PreNotifyInput イベントを発生させます。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostNotifyInput>イベント</xref:System.Windows.Input.InputManager.PostNotifyInput>。      5.  処理後の段階です。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostProcessInput>イベント</xref:System.Windows.Input.InputManager.PostProcessInput>。"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreProcessInput
  id: PreProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "発生したときに、 <xref href=&quot;System.Windows.Input.InputManager&quot;> </xref>入力項目の処理を開始します。"
  remarks: "フィルターは、PreProcessInput または<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンするすべてのコードは、します。  フィルターは、入力のステージング領域を変更できます。       PreProcessInput に添付されたハンドラーは、システムのハンドラーの前に、ユーザーによって追加されたハンドラーが呼び出されるように、逆の順序で呼び出されます。       呼び出す<xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>上、<xref:System.Windows.Input.PreProcessInputEventArgs>に渡される、<xref:System.Windows.Input.PreProcessInputEventHandler>は入力の処理が取り消されます</xref:System.Windows.Input.PreProcessInputEventHandler></xref:System.Windows.Input.PreProcessInputEventArgs></xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力のマネージャーは、PreProcessInput イベントを発生させます。      2.  ステージを事前に通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreNotifyInput>イベント</xref:System.Windows.Input.InputManager.PreNotifyInput>。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostNotifyInput>イベント</xref:System.Windows.Input.InputManager.PostNotifyInput>。      5.  処理後の段階です。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostProcessInput>イベント</xref:System.Windows.Input.InputManager.PostProcessInput>。"
  syntax:
    content: public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;
    return:
      type: System.Windows.Input.PreProcessInputEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  id: PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "プライマリのキーボード デバイスを取得します。"
  syntax:
    content: public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }
    return:
      type: System.Windows.Input.KeyboardDevice
      description: "キーボード デバイス。"
  overload: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  id: PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "プライマリ マウス デバイスを取得します。"
  syntax:
    content: public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "マウス デバイス。"
  overload: System.Windows.Input.InputManager.PrimaryMouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  id: ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定された入力を同期的に処理します。"
  remarks: "フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput>または<xref:System.Windows.Input.InputManager.PostProcessInput>。</xref:System.Windows.Input.InputManager.PostProcessInput></xref:System.Windows.Input.InputManager.PreProcessInput>をリッスンするすべてのコードは、します。  フィルターは、入力のステージング領域を変更できます。       モニターは、<xref:System.Windows.Input.InputManager.PreNotifyInput>または<xref:System.Windows.Input.InputManager.PostNotifyInput>。</xref:System.Windows.Input.InputManager.PostNotifyInput></xref:System.Windows.Input.InputManager.PreNotifyInput>をリッスンするすべてのコードは、します。  モニターは、入力のステージング領域を変更できません。       指定された入力はすべてのフィルターとモニターで処理され、入力イベントとして適切な要素に最後にディスパッチされます。       入力が処理される[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]フォロー段階で: 1。  前処理段階。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreProcessInput>イベント</xref:System.Windows.Input.InputManager.PreProcessInput>。      2.  ステージを事前に通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PreNotifyInput>イベント</xref:System.Windows.Input.InputManager.PreNotifyInput>。      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力イベントまたはイベントが発生します。      4.  後の段階を通知します。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostNotifyInput>イベント</xref:System.Windows.Input.InputManager.PostNotifyInput>。      5.  処理後の段階です。  入力マネージャーが発生し、<xref:System.Windows.Input.InputManager.PostProcessInput>イベント</xref:System.Windows.Input.InputManager.PostProcessInput>。"
  syntax:
    content: public bool ProcessInput (System.Windows.Input.InputEventArgs input);
    parameters:
    - id: input
      type: System.Windows.Input.InputEventArgs
      description: "処理する入力。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての入力イベントが処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.InputManager.ProcessInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  id: PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "メニュー モードを開始するコンポーネントによって呼び出されます。"
  remarks: "コンポーネントは、入力のマネージャーのメニューのモードに入るには、このメソッドを呼び出します。 `menuSite`ウィンドウ メッセージへのアクセス権限を取得します。 このメソッドを呼び出すと、内部でカウントをインクリメントするメニューを開くの発生して設定、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A>プロパティを`true`最初のメニューを開くには、この場合、</xref:System.Windows.Input.InputManager.IsInMenuMode%2A> 。"
  syntax:
    content: public void PushMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "入力にメニューです。"
  overload: System.Windows.Input.InputManager.PushMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.InputManager.Current
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
- uid: System.Windows.Input.InputManager
  parent: System.Windows.Input
  isExternal: false
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
- uid: System.Windows.Input.InputManager.EnterMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
- uid: System.Windows.Input.InputManager.InputProviders
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.Input.InputManager.IsInMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputDevice
  parent: System.Windows.Input
  isExternal: false
  name: InputDevice
  nameWithType: InputDevice
  fullName: System.Windows.Input.InputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.InputManager.PostNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
- uid: System.Windows.Input.NotifyInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: NotifyInputEventHandler
  nameWithType: NotifyInputEventHandler
  fullName: System.Windows.Input.NotifyInputEventHandler
- uid: System.Windows.Input.InputManager.PostProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
- uid: System.Windows.Input.ProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ProcessInputEventHandler
  nameWithType: ProcessInputEventHandler
  fullName: System.Windows.Input.ProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PreNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
- uid: System.Windows.Input.InputManager.PreProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
- uid: System.Windows.Input.PreProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: PreProcessInputEventHandler
  nameWithType: PreProcessInputEventHandler
  fullName: System.Windows.Input.PreProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.KeyboardDevice
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardDevice
  nameWithType: KeyboardDevice
  fullName: System.Windows.Input.KeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
- uid: System.Windows.Input.InputManager.Current*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
- uid: System.Windows.Input.InputManager.InputProviders*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
- uid: System.Windows.Input.InputManager.IsInMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode
  nameWithType: InputManager.PopMenuMode
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput
  nameWithType: InputManager.ProcessInput
- uid: System.Windows.Input.InputManager.PushMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode
  nameWithType: InputManager.PushMenuMode
