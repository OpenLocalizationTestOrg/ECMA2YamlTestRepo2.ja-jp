### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElementCollection
  id: ConfigurationElementCollection
  children:
  - System.Configuration.ConfigurationElementCollection.#ctor
  - System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection
  fullName: System.Configuration.ConfigurationElementCollection
  type: Class
  summary: "子要素のコレクションを含む構成要素を表します。"
  remarks: "ConfigurationElementCollection では、構成ファイル内の要素のコレクションを表します。      > [!NOTE] > 構成ファイル内の要素は、基本的な XML 要素またはセクションを参照します。 単純な要素は、存在する場合に、関連の属性を持つ XML タグがします。 単純な要素は、セクションを構成します。 複雑なセクションには、1 つまたは複数の単純な要素、要素のコレクションおよびその他のセクションを含めることができます。       コレクションを操作する ConfigurationElementCollection を使用する<xref:System.Configuration.ConfigurationElement>オブジェクト</xref:System.Configuration.ConfigurationElement>。 カスタム<xref:System.Configuration.ConfigurationElement><xref:System.Configuration.ConfigurationSection>。</xref:System.Configuration.ConfigurationSection>要素</xref:System.Configuration.ConfigurationElement>のコレクションを追加するには、このクラスを実装します。"
  example:
  - "The following example shows how to use the ConfigurationElementCollection.  \n  \n The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/csharp/t-system.configuration.c_14_1.cs)]  \n  \n This second code example uses the classes specified before. You combine these two examples in a console application project.  \n  \n [!code-cs[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/csharp/t-system.configuration.c_14_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/visualbasic/t-system.configuration.c_14_2.vb)]  \n  \n When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n           <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"4040 />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>クラスです。"
  remarks: "<xref:System.Configuration.ConfigurationElementCollection>アプリケーションが<xref:System.Configuration.ConfigurationElementCollection>。</xref:System.Configuration.ConfigurationElementCollection>カスタムを作成する必要がある場合</xref:System.Configuration.ConfigurationElementCollection>の新しいインスタンスを作成します。"
  syntax:
    content: protected ConfigurationElementCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>クラスです。"
  remarks: "<xref:System.Collections.IComparer>を使用する比較子を設定するために使用します</xref:System.Collections.IComparer>。 たとえば、キーを大文字小文字を区別するのに、大文字と小文字の比較子を使用できます。"
  syntax:
    content: protected ConfigurationElementCollection (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>使用する比較子</xref:System.Collections.IComparer>。"
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comparer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  id: AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得または設定の名前、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>で追加の操作に関連付ける、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>派生クラスでオーバーライドされるとします。"
  syntax:
    content: protected string AddElementName { get; set; }
    return:
      type: System.String
      description: "要素の名前です。"
  overload: System.Configuration.ConfigurationElementCollection.AddElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "選択した値は、予約済みのプレフィックス&quot;config&quot;または「ロック」を開始します。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成要素を追加、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  remarks: "BaseAdd メソッドを使用して、新しい追加<xref:System.Configuration.ConfigurationElement>をコレクションにします</xref:System.Configuration.ConfigurationElement>。 要素が追加されたときに、カスタム動作が必要な場合は、派生クラスでオーバーライドします。       追加すると、要素と見なされます重複するキーが同じ値が異なる場合にのみ。 要素は競合しないので、同一のキーと値を持つ要素がサイレント モードで受け入れられます。 ただし、競合する値のどれを受け入れるを判断するロジックがないために、同じキーが別の値を持つ要素を追加できません。"
  example:
  - "The following code example shows how to override the BaseAdd method and how to call it from an `Add` method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/visualbasic/158cf871-201b-4f7d-bc42-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/csharp/158cf871-201b-4f7d-bc42-_1.cs)]"
  syntax:
    content: protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  id: BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成要素のコレクションにする構成要素を追加します。"
  remarks: "省略可能なパラメーターを使用して`throwIfExists`をスローする、<xref:System.Exception>例外場合、指定した<xref:System.Configuration.ConfigurationElement>オブジェクトは既に、<xref:System.Configuration.ConfigurationElementCollection>コレクションです</xref:System.Configuration.ConfigurationElementCollection></xref:System.Configuration.ConfigurationElement></xref:System.Exception>。       要素は、キーが同じで値が異なる場合にのみ、重複するいると見なされます。 要素は競合しないので、同一のキーと値を持つ要素がサイレント モードで受け入れられます。 ただし、競合する値のどれを受け入れるを判断するロジックがないために、同じキーが別の値を持つ要素を追加できません。"
  syntax:
    content: protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
    - id: throwIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合に例外をスローする、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定に既に含まれて、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>を既に追加に存在する、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>と<code> throwIfExists </code>パラメーターは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成要素のコレクションにする構成要素を追加します。"
  remarks: "使用して、`index`パラメーターを追加する、<xref:System.Configuration.ConfigurationElement>オブジェクトを<xref:System.Configuration.ConfigurationElementCollection>特定のインデックス位置にある</xref:System.Configuration.ConfigurationElementCollection></xref:System.Configuration.ConfigurationElement>。"
  syntax:
    content: protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "インデックス位置に指定した<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  id: BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "すべての構成要素オブジェクトをコレクションから削除します。"
  remarks: "BaseClear メソッドが呼び出されると、すべてが削除<xref:System.Configuration.ConfigurationElement>コレクションからオブジェクト</xref:System.Configuration.ConfigurationElement>。 また、`clear`構成ファイルにディレクティブです。"
  example:
  - "The following code example shows how to call the BaseClear method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_3_1.cs)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.BaseClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n A collection item has been locked in a higher-level configuration."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定したインデックス位置にある構成要素を取得します。"
  remarks: ''
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/visualbasic/m-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/csharp/m-system.configuration.c_6_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "インデックス位置、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>を返します。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定したインデックス位置。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  id: BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定したキーを持つ構成要素を返します。"
  remarks: "BaseGet メソッドを返します`null`がある場合ありません<xref:System.Configuration.ConfigurationElement>コレクション内で指定したキーを持つオブジェクト</xref:System.Configuration.ConfigurationElement>。"
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/visualbasic/m-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/csharp/m-system.configuration.c_31_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (object key);
    parameters:
    - id: key
      type: System.Object
      description: "返される要素のキー。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> 、指定されたキー、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "含まれる構成要素のすべてのキーの配列を返します、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  syntax:
    content: protected object[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.Object[]
      description: "すべてのキーを含む配列、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>に含まれるオブジェクト、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "キーを取得、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定したインデックス位置にあります。"
  syntax:
    content: protected object BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "インデックスの場所、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
    return:
      type: System.Object
      description: "指定されたキー <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  id: BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定したインデックスを示す<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example shows how to call the BaseIndexOf method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/add/codesnippet/visualbasic/15cdbd2f-44ec-4b04-ad90-_1.vb)]"
  syntax:
    content: protected int BaseIndexOf (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>の指定したインデックス位置。"
    return:
      type: System.Int32
      description: "指定したインデックス<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>以外の場合、-1。"
  overload: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  id: BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "示すかどうか、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定されたキーにはから削除されました、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  syntax:
    content: protected bool BaseIsRemoved (object key);
    parameters:
    - id: key
      type: System.Object
      description: "確認対象の要素のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定されたキーには、削除された、それ以外がされて<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  id: BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "削除、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>コレクションからです。"
  remarks: "BaseRemove メソッドを挿入、`<remove>`の構成ファイルにディレクティブ、<xref:System.Configuration.ConfigurationElement>指定されたキーにします</xref:System.Configuration.ConfigurationElement>。"
  example:
  - "The following code example shows how to call the BaseRemove method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_35_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_35_1.cs)]"
  syntax:
    content: protected void BaseRemove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "キー、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>を削除します。"
  overload: System.Configuration.ConfigurationElementCollection.BaseRemove*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "いいえ<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> 、指定されたキー コレクションに存在する、要素は既に削除されて、または要素を削除できませんの値、<xref:System.Configuration.ConfigurationProperty.Type*>は<xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref></xref:System.Configuration.ConfigurationProperty.Type*> 。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "削除、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>指定したインデックス位置にあります。"
  remarks: "BaseRemoveAt メソッドを挿入、`<remove>`ディレクティブを指定したインデックス位置にある要素の構成ファイルにします。"
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "インデックス位置、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>を削除します。"
  overload: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n <code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the number of <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects in the collection.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has already been removed.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has been locked at a higher level.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object was inherited.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object's <xref:System.Configuration.ConfigurationProperty.Type*> is not <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref> or <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  id: ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得または設定の名前、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>のクリア操作に関連付ける、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>派生クラスでオーバーライドされるとします。"
  syntax:
    content: protected string ClearElementName { get; set; }
    return:
      type: System.String
      description: "要素の名前です。"
  overload: System.Configuration.ConfigurationElementCollection.ClearElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "選択した値は、予約済みのプレフィックス&quot;config&quot;または「ロック」を開始します。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "型を取得、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  remarks: "型には、どちらかになります、<xref:System.Configuration.ConfigurationElementCollectionType>または<xref:System.Configuration.ConfigurationElementCollectionType>フィールド</xref:System.Configuration.ConfigurationElementCollectionType></xref:System.Configuration.ConfigurationElementCollectionType>。 詳細については、 <xref:System.Configuration.ConfigurationElementCollectionType>。</xref:System.Configuration.ConfigurationElementCollectionType>を参照してください。"
  example:
  - "The following code example shows how to get the CollectionType property.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/visualbasic/p-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/csharp/p-system.configuration.c_6_1.cs)]"
  syntax:
    content: public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "<xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref>このコレクションのです。"
  overload: System.Configuration.ConfigurationElementCollection.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "内容をコピー、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>を配列にします。"
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationElement[]
      description: "内容をコピーする先の配列、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
    - id: index
      type: System.Int32
      description: "コピーを開始する位置のインデックスを作成します。"
  overload: System.Configuration.ConfigurationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コレクション内の要素の数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "コレクション内の要素の数。"
  overload: System.Configuration.ConfigurationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  id: CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "派生クラスでオーバーライドされると、新たに作成<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
  remarks: "カスタムを作成する CreateNewElement メソッドをオーバーライドして<xref:System.Configuration.ConfigurationElement>、特定の種類のオブジェクト</xref:System.Configuration.ConfigurationElement>。 コレクションが、構成ファイルから読み込まれると、個々 の要素を作成する CreateNewElement が呼び出されます。 CreateNewElement は<xref:System.Configuration.ConfigurationElementCollection>クラス</xref:System.Configuration.ConfigurationElementCollection>から派生したクラスでオーバーライドする必要があります。"
  example:
  - "The following code example shows how to override the CreateNewElement method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/visualbasic/m-system.configuration.c_38_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/csharp/m-system.configuration.c_38_1.cs)]"
  syntax:
    content: protected abstract System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "新しく作成した<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  id: CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "新たに作成<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>派生クラスでオーバーライドされるとします。"
  remarks: "カスタムを作成する CreateNewElement メソッドをオーバーライドして<xref:System.Configuration.ConfigurationElement>、特定の種類のオブジェクト</xref:System.Configuration.ConfigurationElement>。 コレクションが、構成ファイルから読み込まれると、個々 の要素を作成する CreateNewElement が呼び出されます。 CreateNewElement は<xref:System.Configuration.ConfigurationElementCollection>クラス</xref:System.Configuration.ConfigurationElementCollection>から派生したクラスでオーバーライドする必要があります。"
  syntax:
    content: protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "名前、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>を作成します。"
    return:
      type: System.Configuration.ConfigurationElement
      description: "新しい<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>指定した名前です。"
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  id: ElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "派生クラスでオーバーライドされると、構成ファイル内の要素のこのコレクションを識別するための名前を取得します。"
  remarks: "カスタム<xref:System.Configuration.ConfigurationElementCollection>。</xref:System.Configuration.ConfigurationElementCollection>の名前を付ける ElementName プロパティを上書きします。"
  syntax:
    content: protected virtual string ElementName { get; }
    return:
      type: System.String
      description: "コレクションの名前それ以外の場合、空の文字列。 既定では、空の文字列です。"
  overload: System.Configuration.ConfigurationElementCollection.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  id: EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得またはコレクションが消去されているかどうかを指定する値を設定します。"
  remarks: "EmitClear プロパティを設定`true`により、`<clear>`ディレクティブにコレクションをシリアル化、構成ファイルに書き込まれます。"
  syntax:
    content: public bool EmitClear { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションが消去された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.EmitClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "構成は、読み取り専用です。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "比較、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>指定したオブジェクト。"
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>比較するオブジェクトが現在と等しいかどうか<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>インスタンス。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "派生クラスでオーバーライドされた場合は、指定した構成要素の要素のキーを取得します。"
  remarks: ''
  example:
  - "The following code example shows how to override GetElementKey method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/visualbasic/85b3e1dd-d2ae-4572-b7ba-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/csharp/85b3e1dd-d2ae-4572-b7ba-_1.cs)]"
  syntax:
    content: protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>のキーを返します。"
    return:
      type: System.Object
      description: "<xref:System.Object>、指定されたキーとして機能する<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref></xref:System.Object> 。"
  overload: System.Configuration.ConfigurationElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得、<xref:System.Collections.IEnumerator>を反復処理に使用される、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref></xref:System.Collections.IEnumerator> 。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>を反復処理に使用される、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref></xref:System.Collections.IEnumerator> 。"
  overload: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "表す一意の値を取得、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>インスタンス。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "表す一意の値、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>現在のインスタンス。"
  overload: System.Configuration.ConfigurationElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  id: IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "示すかどうか、指定した<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>内に存在する、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  remarks: "カスタム動作を提供する、IsElementName メソッドをオーバーライドします。"
  syntax:
    content: protected virtual bool IsElementName (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "検査する要素の名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションに要素が存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.IsElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  id: IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "示すかどうか、指定した<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>から削除することができます、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  remarks: "コレクション要素を削除する前に IsElementRemovable をクエリします。"
  syntax:
    content: protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "確認対象の要素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>これから削除できる<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "示すかどうかこの<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>が最後に保存、または派生クラスでオーバーライドされるときに読み込まれてから変更されています。"
  remarks: "場合、<xref:System.Configuration.ConfigurationElement.IsModified%2A>いずれかのメソッド<xref:System.Configuration.ConfigurationElement>内に含まれる、<xref:System.Configuration.ConfigurationElementCollection>返します`true`、コレクション全体の IsModified メソッドを返します`true`も</xref:System.Configuration.ConfigurationElementCollection></xref:System.Configuration.ConfigurationElement></xref:System.Configuration.ConfigurationElement.IsModified%2A>。"
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>格納されている要素が変更されました。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Configuration.ConfigurationElementCollection.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "示すかどうか、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>オブジェクトは読み取り専用です。"
  remarks: "システムでは、変更できない構成要素を定義します。 要素を変更できるかどうかを決定するには、このメソッドを呼び出します。"
  syntax:
    content: public override bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>のみです。 それ以外の場合、オブジェクトは読み取り<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コレクションへのアクセスが同期されているかどうかを示す値を取得します。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセス、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> 、それ以外の同期された<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "により、構成システムは例外をスローします。"
  remarks: "OnDeserializeUnrecognizedElement は、認識できない構成要素が、構成ファイルから読み取られるときに呼び出されます。       構成ファイルから認識できない構成要素のカスタム処理を指定するには、このメソッドをオーバーライドします。 既定の戻り値、 `false`、構成システムが例外をスローします。"
  syntax:
    content: protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "認識されない要素の名前。"
    - id: reader
      type: System.Xml.XmlReader
      description: "構成ファイルから XML を読み取る入力ストリーム。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>認識されない要素が正常に逆シリアル化する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "指定された要素<code> elementName </code>は、 <xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;> </xref>要素。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elementName</code>予約済みのプレフィックス&quot;config&quot;または「ロック」を開始します。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  id: RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得または設定の名前、 <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>で、削除操作に関連付ける、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>派生クラスでオーバーライドされるとします。"
  syntax:
    content: protected string RemoveElementName { get; set; }
    return:
      type: System.String
      description: "要素の名前です。"
  overload: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "選択した値は、予約済みのプレフィックス&quot;config&quot;または「ロック」を開始します。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "リセット、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>を派生クラスでオーバーライドされるときに変更されていない状態にします。"
  remarks: "Reset メソッドの既定の動作が変更された要素を消去するには、<xref:System.Configuration.ConfigurationElementCollection>オブジェクトが含まれ、その親の構成ファイルで指定された値に変更された要素を設定する</xref:System.Configuration.ConfigurationElementCollection>。 場合内の要素で、<xref:System.Configuration.ConfigurationElementCollection>子要素が、それらの子要素のリセットが呼び出されます</xref:System.Configuration.ConfigurationElementCollection>。"
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>以外の場合は、コレクションの親要素を表す場合は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "値のリセット、<xref:System.Configuration.ConfigurationElementCollection.IsModified*>プロパティを<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>派生クラスでオーバーライドされると</xref:System.Configuration.ConfigurationElementCollection.IsModified*>"
  remarks: "ResetModified メソッドを決定するかどうかと、構成が更新されたときに、構成ファイルをこのコレクションの要素を記述します。"
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "派生クラスでオーバーライドされると、構成ファイル内の XML 要素には、構成データを書き込みます。"
  remarks: "SerializeElement メソッドは、コレクションに含まれる構成要素と、含まれる任意の入れ子になった要素の内容を構成ファイルに書き込みます。 コレクションの内容と入れ子になった要素からカスタムの書き込み手順を提供する SerializeElement をオーバーライドします。"
  syntax:
    content: protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "XML 構成ファイルを書き込む出力ストリーム。"
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションのキーです。 シリアル化するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>が正常に構成ファイルに書き込まれますが。"
  overload: System.Configuration.ConfigurationElementCollection.SerializeElement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "コレクション内の要素のいずれかの追加または交換された予約済みのプレフィックス&quot;config&quot;または&quot;lock&quot;で始まるとします。"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "セット、<xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>プロパティを<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>オブジェクトとすべてのサブ要素です</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>。"
  remarks: "このメソッドは、変更できないシステム構成要素を確保する内部使用されます。 要素は変更を確認するのには、呼び出し、<xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>メソッド</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>。"
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "アクセスを同期するために使用されるオブジェクトを取得、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用するオブジェクト、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コピー、 <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>を配列にします。"
  syntax:
    content: void ICollection.CopyTo (Array arr, int index);
    parameters:
    - id: arr
      type: System.Array
      description: "これをコピー先配列<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>です。"
    - id: index
      type: System.Int32
      description: "コピーを開始する位置のインデックスを作成します。"
  overload: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  id: ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "重複を追加する試みかどうかを示す値を取得<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>を<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>をスローする例外が発生します。"
  remarks: "重複する要素を追加すると、例外がスローされます、<xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>要素の値がいずれか<xref:System.Configuration.ConfigurationElementCollectionType>または<xref:System.Configuration.ConfigurationElementCollectionType>.</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>       同一のキーと値を持つ要素が、重複は考慮されませんし、エラーなしで受け入れは注意してください。 別の値が同一のキーを持つ要素だけでは、重複と見なされます。 詳細については、「解説」セクションを参照して、<xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>メソッド。</xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>"
  syntax:
    content: protected virtual bool ThrowOnDuplicate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、重複を追加する試み<xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>この<xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;></xref>と、例外がスローされます。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成階層の異なるレベルの構成情報をマージした効果を反転させます。"
  remarks: "メソッドは、構成階層の異なるレベルの構成情報をマージした効果を反転させます。 これにより、シリアル化する前に、親レベルで設定されたから区別するのには、現在の階層レベルで設定できます。       結合は、親オブジェクトとソース オブジェクトを比較する場合は、新しい一時要素上のシステムによって呼び出されます。 に基づいて、<xref:System.Configuration.ConfigurationSaveMode>値を設定します、一時オブジェクトをシリアル化する必要があるデータを格納する</xref:System.Configuration.ConfigurationSaveMode>。 詳細については保存モード、 <xref:System.Configuration.ConfigurationSaveMode>。</xref:System.Configuration.ConfigurationSaveMode>を参照してください。"
  syntax:
    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "A <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>プロパティのマージされたビューを格納する、現在のレベルのオブジェクト。"
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "親<xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> 、現在の要素のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>これが最上位レベルである場合。"
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref>プロパティ値を含めるを決定する値を列挙します。"
  overload: System.Configuration.ConfigurationElementCollection.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
- uid: System.Configuration.ConfigurationElement[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: ConfigurationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.Count
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElementCollection.#ctor*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection
- uid: System.Configuration.ConfigurationElementCollection.AddElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd
  nameWithType: ConfigurationElementCollection.BaseAdd
- uid: System.Configuration.ConfigurationElementCollection.BaseClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear
  nameWithType: ConfigurationElementCollection.BaseClear
- uid: System.Configuration.ConfigurationElementCollection.BaseGet*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet
  nameWithType: ConfigurationElementCollection.BaseGet
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey
  nameWithType: ConfigurationElementCollection.BaseGetKey
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf
  nameWithType: ConfigurationElementCollection.BaseIndexOf
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved
  nameWithType: ConfigurationElementCollection.BaseIsRemoved
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove
  nameWithType: ConfigurationElementCollection.BaseRemove
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt
  nameWithType: ConfigurationElementCollection.BaseRemoveAt
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationElementCollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.Count*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: ConfigurationElementCollection.CreateNewElement
- uid: System.Configuration.ConfigurationElementCollection.ElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElementCollection.Equals
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: ConfigurationElementCollection.GetElementKey
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationElementCollection.GetEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElementCollection.GetHashCode
- uid: System.Configuration.ConfigurationElementCollection.IsElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName
  nameWithType: ConfigurationElementCollection.IsElementName
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable
  nameWithType: ConfigurationElementCollection.IsElementRemovable
- uid: System.Configuration.ConfigurationElementCollection.IsModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElementCollection.IsModified
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElementCollection.IsReadOnly
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElementCollection.Reset
- uid: System.Configuration.ConfigurationElementCollection.ResetModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElementCollection.ResetModified
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElementCollection.SerializeElement
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElementCollection.SetReadOnly
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElementCollection.Unmerge
