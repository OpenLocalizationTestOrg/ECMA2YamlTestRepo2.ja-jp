### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.TaskbarItemInfo
  id: TaskbarItemInfo
  children:
  - System.Windows.Shell.TaskbarItemInfo.#ctor
  - System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  - System.Windows.Shell.TaskbarItemInfo.Description
  - System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  - System.Windows.Shell.TaskbarItemInfo.Overlay
  - System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressState
  - System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  - System.Windows.Shell.TaskbarItemInfo.ProgressValue
  - System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  langs:
  - csharp
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo
  fullName: System.Windows.Shell.TaskbarItemInfo
  type: Class
  summary: "タスク バーのサムネイルを表示する方法に関する情報を表します。"
  remarks: "TaskbarItemInfo クラスのマネージ ラッパーを提供する[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーの機能です。 Windows シェルとタスク バーをネイティブ Api の詳細については、次を参照してください。[タスク バーの拡張機能](http://go.microsoft.com/fwlink/?LinkId=178479)します。 TaskbarItemInfo が<xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName><xref:System.Windows.Window>。</xref:System.Windows.Window>の依存関係プロパティ</xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName>として公開されます。       [!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーは、タスク バーの項目を使用して、ユーザー状態を通信して、ウィンドウを最小化または非表示にするときに、一般的なタスクを公開することができます拡張機能を提供します。 TaskbarItemInfo クラスによって公開される機能はよりも前のバージョンの Windows で使用できません[!INCLUDE[win7](~/add/includes/win7-md.md)]です。 TaskbarItemInfo クラスを使用するアプリケーションは Windows; の以前のバージョンでまだ実行できます。ただし、これらのタスク バーの拡張機能では、以前のバージョンで使用できません。       [!INCLUDE[win7](~/add/includes/win7-md.md)]、一部のタスク バーの機能は、ユーザーの設定によって、使用できるでない可能性があります。 たとえば、タスク バーの機能は利用できない場合[!INCLUDE[TLA#tla_aero](~/add/includes/tlasharptla-aero-md.md)]が無効になっているか、管理者特権を持つかどうか、アプリケーションを開始します。 アプリケーションでのタスク バーの拡張機能に依存しないユーザーと対話するには、他の方法を提供する必要があります[!INCLUDE[win7](~/add/includes/win7-md.md)]です。       通常、タスク バーの右端にある通知領域にプログラム アイコンはユーザーにアプリケーションの状態を通信するために使用されます。 既定では、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーには、通知領域にプログラム アイコンが非表示にします。 ただし、設定することができます、<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>メッセージング アプリケーションのオンライン状態などの状態を通信するために、タスク バー ボタンにイメージを追加するプロパティ</xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>。 オーバーレイ イメージを使用して、通知領域にプログラム アイコンを表示することはできない場合でも、アプリケーションの状態を表示できます。 タスク バー ボタンに設定してタスクの実行の進行状況を表示することも、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>と<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A></xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。       [!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バー ボタンの上にマウス ポインターを移動すると、タスク バーには、アプリケーションのサムネイルが表示されます。 既定では、全体のアプリケーション ウィンドウが表示されます。 設定して、サムネイルに表示するウィンドウの特定の部分を指定することができます、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>。 指定することも、<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>タスク バーのサムネイルの上のツールヒントに表示される</xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>。 ユーザー設定のため、サムネイルが表示されない場合でも、ツールヒントが表示されます。       アプリケーション ウィンドウを切り替えずに一般的なタスクへのアクセスを提供するタスク バーのサムネイルには、ボタンを追加できます。 たとえば、Media Player のウィンドウは、再生、一時停止、転送、およびアプリケーションが最小化したときにできる戻るボタンがタスク バーのサムネイルからメディアの再生を制御を提供します。 タスク バーのサムネイルのボタンがによって表される<xref:System.Windows.Shell.ThumbButtonInfo>に含まれているオブジェクトとは、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>コレクションです</xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A></xref:System.Windows.Shell.ThumbButtonInfo>。       次の図の拡張機能、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バー。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーの拡張機能"
  example:
  - "The following example shows how to create a TaskbarItemInfo in markup. The TaskbarItemInfo contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]  \n  \n The following markup and code shows the previous example in its full context. The application uses a <xref:System.ComponentModel.BackgroundWorker> to count from 0 to 100 and displays its progress in the user interface. The task can be started and stopped from the taskbar preview. The progress is displayed in the taskbar button.  \n  \n [!code-xml[Shell_TaskbarItemSample#001](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#001)]  \n  \n [!code-cs[Shell_TaskbarItemSample#100](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#100)]\n [!code-vb[Shell_TaskbarItemSample#100](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#100)]"
  syntax:
    content: 'public sealed class TaskbarItemInfo : System.Windows.Freezable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: System.Windows.Shell.TaskbarItemInfo.TaskbarItemInfo()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Shell.TaskbarItemInfo&quot;> </xref>クラスです。"
  syntax:
    content: public TaskbarItemInfo ();
    parameters: []
  overload: System.Windows.Shell.TaskbarItemInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "追加します。"
  overload: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  id: Description
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: System.Windows.Shell.TaskbarItemInfo.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはタスク バー項目のツールヒントのテキストを設定します。"
  remarks: "マウス ポインターがタスク バー ボタン上に、タスク バーのサムネイル上のツールヒントが表示されます。 ユーザー設定のために、タスク バーのサムネイルが表示されない場合は、ツール ヒントは引き続き表示されます。       次の図は、タスク バーの説明のツール ヒントを示します。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーの説明"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the Description property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "タスク バー項目のツールヒントのテキストです。 既定では、空の文字列です。"
  overload: System.Windows.Shell.TaskbarItemInfo.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  id: DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.Description*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.Description*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DescriptionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  id: Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: System.Windows.Shell.TaskbarItemInfo.Overlay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはタスク バー ボタンのプログラム アイコンの上に表示されるイメージを設定します。"
  remarks: "ユーザーにアプリケーションの状態を通信するためにタスク バー ボタンのプログラム アイコンには、イメージを追加できます。 オーバーレイが静的なを使用して、またはアニメーション化<xref:System.Windows.Media.ImageSource>タスク バー ボタンのアイコンの右下隅の上に置くことです</xref:System.Windows.Media.ImageSource>。 ユーザーが小さいアイコンを表示する、タスク バーを設定する場合は、オーバーレイは表示されません。       通常、タスク バーの右端にある通知領域にプログラム アイコンはユーザーにアプリケーションの状態を通信するために使用されます。 [!INCLUDE[win7](~/add/includes/win7-md.md)]、通知領域にプログラム アイコンは、既定では、そのため、小さい状態を通信するために役立ちます。 タスク バー ボタンのオーバーレイを使用する[!INCLUDE[win7](~/add/includes/win7-md.md)]通知領域にアイコンが非表示の場合は、状態を通信するためにします。 アプリケーションでは、Windows のバージョンを検出でき、オペレーティング システムを適切な方法で通知を提供することができます。       オーバーレイのイメージが適切なサイズで描画します。 場合、<xref:System.Windows.Media.ImageSource>を表す、 <xref:System.Drawing.Icon>、適切なビットの深さも使用します</xref:System.Drawing.Icon></xref:System.Windows.Media.ImageSource>。       次の図は、タスク バーのオーバーレイを示します。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーのオーバーレイ"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the Overlay property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]  \n  \n The following example shows how to set the Overlay property in code.  \n  \n [!code-cs[Shell_TaskbarItemSample#121](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#121)]\n [!code-vb[Shell_TaskbarItemSample#121](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#121)]"
  syntax:
    content: public System.Windows.Media.ImageSource Overlay { get; set; }
    return:
      type: System.Windows.Media.ImageSource
      description: "タスク バー ボタンのプログラム アイコンの上に表示されるイメージです。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Shell.TaskbarItemInfo.Overlay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  id: OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.Overlay*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.Overlay*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty OverlayProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  id: ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはタスク バー ボタンの進行状況インジケーターを表示する方法を示す値を設定します。"
  remarks: "実行時間の長いタスクの進行状況を通信するには、進行状況インジケーターで表示することによって、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バー ボタンをクリックします。 インジケーターの色は&1; つ含まれている ProgressState プロパティによって決まります、<xref:System.Windows.Shell.TaskbarItemProgressState>列挙値</xref:System.Windows.Shell.TaskbarItemProgressState>。 ある場合、ProgressState <xref:System.Windows.Shell.TaskbarItemProgressState>、インジケーターが緑色</xref:System.Windows.Shell.TaskbarItemProgressState>。 ときに<xref:System.Windows.Shell.TaskbarItemProgressState>、黄色のインジケーターが</xref:System.Windows.Shell.TaskbarItemProgressState>。 ときに<xref:System.Windows.Shell.TaskbarItemProgressState>、インジケーターは red.</xref:System.Windows.Shell.TaskbarItemProgressState> これらの状態の<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティでは、進行状況インジケーターで塗りつぶすがタスク バー ボタンの量を決定します</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>ProgressState の他の値は無視されます。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> <xref:System.Windows.Shell.TaskbarItemProgressState>全体のタスク バー ボタン、緑色の点滅インジケーターを表示します。</xref:System.Windows.Shell.TaskbarItemProgressState> <xref:System.Windows.Shell.TaskbarItemProgressState>。</xref:System.Windows.Shell.TaskbarItemProgressState>インジケーターは表示されません。       次の図は、タスク バーの進行状況インジケーターで、<xref:System.Windows.Shell.TaskbarItemProgressState>状態</xref:System.Windows.Shell.TaskbarItemProgressState>。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーの進行状況インジケーター"
  example:
  - "The following example shows how to set the ProgressState property in code. The state is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=fullName> event to indicate whether the background task was stopped by the user, ended with an error, or completed normally. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-cs[Shell_TaskbarItemSample#120](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#120)]\n [!code-vb[Shell_TaskbarItemSample#120](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#120)]"
  syntax:
    content: public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }
    return:
      type: System.Windows.Shell.TaskbarItemProgressState
      description: "タスク バー ボタンの進行状況インジケーターを表示する方法を示す列挙値。 既定値は<xref href=&quot;System.Windows.Shell.TaskbarItemProgressState&quot;></xref>です。"
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  id: ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ProgressState*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressStateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  id: ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはタスク バー ボタンの進行状況インジケーターの充填率を示す値を設定します。"
  remarks: "ProgressValue プロパティは、0.0 ~ 1.0 の値として表されます。 番号および拡大は、それらの範囲内に強制されます。 <xref:System.Double>0 に変換します。</xref:System.Double>       実行時間の長いタスクの進行状況を通信するには、進行状況インジケーターで表示することによって、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バー ボタンをクリックします。 インジケーターの色はによって決定されます、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>プロパティのいずれかが含まれています、<xref:System.Windows.Shell.TaskbarItemProgressState>列挙値</xref:System.Windows.Shell.TaskbarItemProgressState></xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 場合、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>プロパティは<xref:System.Windows.Shell.TaskbarItemProgressState>、 <xref:System.Windows.Shell.TaskbarItemProgressState>、または<xref:System.Windows.Shell.TaskbarItemProgressState>、ProgressValue プロパティは、進行状況インジケーターの充填率を決定します</xref:System.Windows.Shell.TaskbarItemProgressState></xref:System.Windows.Shell.TaskbarItemProgressState></xref:System.Windows.Shell.TaskbarItemProgressState></xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。 ProgressValue <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>。</xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>のいくつかの値は無視されます。 <xref:System.Windows.Shell.TaskbarItemProgressState>全体のタスク バー ボタン、緑色の点滅インジケーターを表示します。</xref:System.Windows.Shell.TaskbarItemProgressState> <xref:System.Windows.Shell.TaskbarItemProgressState>。</xref:System.Windows.Shell.TaskbarItemProgressState>インジケーターは表示されません。       次の図は、82 %progressvalue とタスク バーの進行状況インジケーターを示します。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーの進行状況インジケーター"
  example:
  - "The following example shows how to set the ProgressValue property in code. The value is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=fullName> event to indicate the current progress of the background task. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-cs[Shell_TaskbarItemSample#130](~/add/codesnippet/csharp/shell_taskbaritemsample/mainwindow.xaml.cs#130)]\n [!code-vb[Shell_TaskbarItemSample#130](~/add/codesnippet/visualbasic/shell_taskbaritemsample/mainwindow.xaml.vb#130)]"
  syntax:
    content: public double ProgressValue { get; set; }
    return:
      type: System.Double
      description: "タスク バー ボタンの進行状況インジケーターの充填率を示す値です。 既定値は 0 です。"
  overload: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  id: ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ProgressValueProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  id: ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得または設定のコレクション<xref href=&quot;System.Windows.Shell.ThumbButtonInfo&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Windows.Window&quot;></xref>です。"
  remarks: "タスク バーのサムネイルがなくても、アプリケーション ウィンドウに切り替えるには、一般的なタスクにユーザーのアクセスを提供するには、ボタンを追加できます。 たとえば、Windows Media Player は、アプリケーションが最小化したときのタスク バーのサムネイルからユーザー コントロールのメディアの再生に便利なプレイ、一時停止、転送、および戻るボタンを提供します。 タスク バーのサムネイルのボタンがによって表される<xref:System.Windows.Shell.ThumbButtonInfo>オブジェクトおよび ThumbButtonInfos コレクションに格納されます</xref:System.Windows.Shell.ThumbButtonInfo>。       [!INCLUDE[win7](~/add/includes/win7-md.md)]シェルは、タスク バーのサムネイルで、最大で&7; つのボタンを許可します。 7 つ以上の場合<xref:System.Windows.Shell.ThumbButtonInfo>オブジェクトに追加されます、 <xref:System.Windows.Shell.ThumbButtonInfoCollection>、追加のオブジェクトは、オーバーフローとして扱われます</xref:System.Windows.Shell.ThumbButtonInfoCollection></xref:System.Windows.Shell.ThumbButtonInfo>。 ときに、ボタンは<xref:System.Windows.Visibility>、任意の可視要素がないその領域がないは予約されています</xref:System.Windows.Visibility> この場合、追加のボタンで、<xref:System.Windows.Shell.ThumbButtonInfoCollection>オーバーフローが表示されます</xref:System.Windows.Shell.ThumbButtonInfoCollection>。       次の図は、2 つの親指ボタンの一連のタスク バー プレビューを示します。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーのつまみのボタン"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }
    return:
      type: System.Windows.Shell.ThumbButtonInfoCollection
      description: "コレクション<xref href=&quot;System.Windows.Shell.ThumbButtonInfo&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Windows.Window&quot;></xref>です。 既定では、空のコレクションです。"
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  id: ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  id: ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはタスク バーのサムネイルに表示される、アプリケーション ウィンドウのクライアント領域の一部を指定する値を設定します。"
  remarks: "既定では、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーには、アプリケーション ウィンドウのクライアント領域のスケーリングされたサムネイルが表示されます。 サムネイルに表示されているクライアント ウィンドウのトリミングされた領域を指定する ThumbnailClipMargin プロパティを設定することができます。 たとえば、このプロパティは、アプリケーションのツールバーを除外するときにウィンドウ コンテンツのサムネイルにフォーカスする場合に便利です。 このプロパティは、表示されていないアプリケーション ウィンドウで、サムネイルでコンテンツを表示する使用できません。       設定して、サムネイルに表示される領域を指定します、<xref:System.Windows.Thickness>領域の周りの境界線の</xref:System.Windows.Thickness>。 罫線は、クライアント ウィンドウの端から開始し、指定した量によって達するまで内側に向かって拡張します。 枠線内のコンテンツは、サムネイルに表示されます。       次の図は、ThumbnailClipMargin を定義する境界を示します。       ![サムネイルのクリップ マージン](~/add/media/wpfshell-clipmargin.png &quot;サムネイルのクリップ マージン&quot;)サムネイルのクリップ領域の枠線、次の図は、クリップされたサムネイルのプレビューを示しています。       ![タスク バー項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png &quot;タスクバー項目情報のサンプル&quot;)Windows タスク バーのサムネイルのプレビュー"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the ThumbnailClipMargin property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \n  \n [!code-xml[Shell_TaskbarItemSample#010](~/add/codesnippet/xaml/shell_taskbaritemsample/mainwindow.xaml#010)]"
  syntax:
    content: public System.Windows.Thickness ThumbnailClipMargin { get; set; }
    return:
      type: System.Windows.Thickness
      description: "タスク バーのサムネイルに表示される、アプリケーション ウィンドウのクライアント領域の一部を指定する値。 既定値は、空<xref href=&quot;System.Windows.Thickness&quot;></xref>です。"
  overload: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  id: ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  langs:
  - csharp
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "識別、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*>依存関係プロパティ</xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Freezable
  isExternal: false
  name: System.Windows.Freezable
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo()
  nameWithType: TaskbarItemInfo.TaskbarItemInfo()
  fullName: System.Windows.Shell.TaskbarItemInfo.TaskbarItemInfo()
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: TaskbarItemInfo.CreateInstanceCore()
  fullName: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore()
- uid: System.Windows.Shell.TaskbarItemInfo.Description
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
  fullName: System.Windows.Shell.TaskbarItemInfo.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: DescriptionProperty
  nameWithType: TaskbarItemInfo.DescriptionProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
  fullName: System.Windows.Shell.TaskbarItemInfo.Overlay
- uid: System.Windows.Media.ImageSource
  parent: System.Windows.Media
  isExternal: false
  name: ImageSource
  nameWithType: ImageSource
  fullName: System.Windows.Media.ImageSource
- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: OverlayProperty
  nameWithType: TaskbarItemInfo.OverlayProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.OverlayProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressState
- uid: System.Windows.Shell.TaskbarItemProgressState
  parent: System.Windows.Shell
  isExternal: false
  name: TaskbarItemProgressState
  nameWithType: TaskbarItemProgressState
  fullName: System.Windows.Shell.TaskbarItemProgressState
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressStateProperty
  nameWithType: TaskbarItemInfo.ProgressStateProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValue
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValueProperty
  nameWithType: TaskbarItemInfo.ProgressValueProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos
- uid: System.Windows.Shell.ThumbButtonInfoCollection
  parent: System.Windows.Shell
  isExternal: false
  name: ThumbButtonInfoCollection
  nameWithType: ThumbButtonInfoCollection
  fullName: System.Windows.Shell.ThumbButtonInfoCollection
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfosProperty
  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMarginProperty
  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty
  fullName: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty
- uid: System.Windows.Shell.TaskbarItemInfo.#ctor*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: TaskbarItemInfo
  nameWithType: TaskbarItemInfo.TaskbarItemInfo
- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: CreateInstanceCore
  nameWithType: TaskbarItemInfo.CreateInstanceCore
- uid: System.Windows.Shell.TaskbarItemInfo.Description*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Description
  nameWithType: TaskbarItemInfo.Description
- uid: System.Windows.Shell.TaskbarItemInfo.Overlay*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: Overlay
  nameWithType: TaskbarItemInfo.Overlay
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressState
  nameWithType: TaskbarItemInfo.ProgressState
- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ProgressValue
  nameWithType: TaskbarItemInfo.ProgressValue
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbButtonInfos
  nameWithType: TaskbarItemInfo.ThumbButtonInfos
- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*
  parent: System.Windows.Shell.TaskbarItemInfo
  isExternal: false
  name: ThumbnailClipMargin
  nameWithType: TaskbarItemInfo.ThumbnailClipMargin
