### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.IWcfReferenceReceiveContextInformation
  id: IWcfReferenceReceiveContextInformation
  children:
  - System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)
  langs:
  - csharp
  name: IWcfReferenceReceiveContextInformation
  nameWithType: IWcfReferenceReceiveContextInformation
  fullName: System.Web.Compilation.IWcfReferenceReceiveContextInformation
  type: Interface
  summary: "追加のコンテキスト情報を取得するために実装するインターフェイスを定義します。"
  remarks: "このインターフェイスにより、WSDL インポーター mechanismto がプロキシの生成およびより優れた開発者が Visual Studio で発生する、追加のコンテキスト情報を受信します。 WSDL インポーターに IWcfReferenceReceiveContextInformation インターフェイスが実装されている場合、`ReceiveImportContextInformation`の任意のメソッドの前に、WCF プロキシのジェネレーターでメソッドが呼び出される<xref:System.ServiceModel.Description.IWsdlImportExtension>と<xref:System.ServiceModel.Description.IPolicyImportExtension>と呼ばれます</xref:System.ServiceModel.Description.IPolicyImportExtension></xref:System.ServiceModel.Description.IWsdlImportExtension>。       追加のコンテキスト情報が渡されたパラメーターを指す、`ReceiveImportContextInformation`メソッドです。 パラメーターには、すべての拡張ファイルおよび実装するオブジェクトへの参照の内容が含まれます、<xref:System.IServiceProvider>インターフェイス。</xref:System.IServiceProvider> 。 メソッドに渡されるすべての拡張ファイルはインポーターに固有であり、必要な追加情報を格納するために使用します。 つまり、Visual Studio では、これらのファイルの内容を制御しませんしに直接は使用しません。      > [!NOTE] > インポーターは、WCF 機能拡張メカニズムを参照してください。 このメカニズムでは、サービスを記述するメタデータ (WSDL または XSD) ドキュメントからプロキシ コードを生成する方法をカスタマイズすることができます。 詳細については、次を参照してください。 [WCF 拡張機能のカスタム メタデータのインポート](http://go.microsoft.com/fwlink/?LinkId=92310)msdn です。"
  syntax:
    content: public interface IWcfReferenceReceiveContextInformation
  implements: []
  platform:
  - net462
- uid: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)
  id: ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)
  parent: System.Web.Compilation.IWcfReferenceReceiveContextInformation
  langs:
  - csharp
  name: ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
  nameWithType: IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
  fullName: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Compilation
  summary: "追加のコンテキスト情報を取得します。"
  remarks: "`serviceReferenceExtensionFileContents`パラメーターが Reference.config や機能拡張で追加されているカスタム拡張ファイルなどの WCF サービス参照の .svcmap ファイルに関連付けられているすべての拡張ファイルの内容を提供します。      > [!NOTE] > ASP.NET ビルド プロバイダーのコンテキストで実行されている場合、Visual Studio に固有であるサービス プロバイダーから受信したすべてのインターフェイスはインポート拡張を使用できません。 これは、WCF サービス参照を ASP.NET プロジェクトでコンパイルする場合です。"
  syntax:
    content: public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary<string,byte[]> serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);
    parameters:
    - id: serviceReferenceExtensionFileContents
      type: System.Collections.Generic.IDictionary{System.String,System.Byte[]}
      description: "WCF サービス参照の .svcmap ファイルに関連付けられているすべての拡張ファイルの内容を提供します。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加情報に対してクエリを実行する Visual Studio サービス プロバイダーへの参照。"
  overload: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)
  parent: System.Web.Compilation.IWcfReferenceReceiveContextInformation
  isExternal: false
  name: ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
  nameWithType: IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
  fullName: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(IDictionary<String,Byte>,IServiceProvider)
- uid: System.Collections.Generic.IDictionary{System.String,System.Byte[]}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Byte>
  nameWithType: IDictionary<String,Byte>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Byte[]>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Byte[]>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation*
  parent: System.Web.Compilation.IWcfReferenceReceiveContextInformation
  isExternal: false
  name: ReceiveImportContextInformation
  nameWithType: IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation
