### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.InPlaceHostingManager
  id: InPlaceHostingManager
  children:
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.CancelAsync
  - System.Deployment.Application.InPlaceHostingManager.Dispose
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  - System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  - System.Deployment.Application.InPlaceHostingManager.Execute
  - System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  - System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  langs:
  - csharp
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager
  fullName: System.Deployment.Application.InPlaceHostingManager
  type: Class
  summary: "インストールまたは更新、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]コンピューターに展開します。"
  remarks: "InPlaceHostingManager を使用するには書き込みプログラムをインストールする を[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション プログラムでします。 たとえば、管理されたシステム管理ソフトウェア (SMS) 環境か、または複雑なインストール数、ローカル コンピューター上の事前インストールまたはインストール後の操作を実行する必要がある状況では、このクラスを使用できます。 特定の順序でこのクラスのメンバーを使用する、一般にする: 1。  InPlaceHostingManager の新しいインスタンスを作成します。      2.  <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>。</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>を使用して、配置マニフェストをダウンロードします。      3.  アプリケーションが適切なアクセス許可を持つ<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>。</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を使用して実行できることを確認します。      4.  ダウンロードして<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を使用してアプリケーションをインストール      -これらのパラメーターのいずれかの順序を呼び出す場合、例外がスローされます。       InPlaceHostingManager &quot; ðƒcƒ&quot;、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションが、実行はできません。 これの一部のメソッド クラスなど、 <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>、Web ブラウザー内で実行される Windows Presentation Foundation ベースのアプリケーションをダウンロードするときに使用するために予約されています</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>。       InPlaceHostingManager アプリケーションをダウンロードしてインストールを使用する必要があること確認する署名の証明書、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]信頼された発行元としてクライアント コンピューターにインストールする予定のアプリケーションが既にインストールされています。 信頼された発行元の詳細については、次を参照してください。[信頼されたアプリケーション展開の概要](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > InPlaceHostingManager を使用して、コードをデバッグする場合に正常に動作することを防止する製品の制限が現在[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]です。 アプリケーションをデバッグする場合[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]F5 キーを使用すると、サンプルは例外をスロー不可解な<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を呼び出すとき 使用してデバッグする[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]、デバッグ機能なし、アプリケーションを起動し、デバッガーをアタッチします。 代わりに、WinDbg などの別のデバッガーを使用することができます。"
  example:
  - "The following code example shows how to use InPlaceHostingManager to install a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application programmatically on a client computer.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#1)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#1)]"
  syntax:
    content: 'public class InPlaceHostingManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "新しいインスタンスを作成<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>をダウンロードして、指定されたブラウザーによってホストされるアプリケーションをインストールします。"
  remarks: "このコンス トラクターは、Web ブラウザーでホストされている Windows Presentation Foundation ベースのアプリケーションをダウンロードするときに使用されます。 Windows フォーム ベースのアプリケーションを使用して展開をダウンロードする[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]を使用して、<xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>を持つコンス トラクター、`launchInHostProcess`パラメーターに設定`false`</xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>。"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Uniform Resource Identifier (<xref:System.Uri>) に、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションの配置マニフェスト</xref:System.Uri>。"
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>Windows XP または Windows オペレーティング システムの以降のバージョンでのみ使用できます。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "渡せません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の<code> deploymentManifest </code>引数。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>サポートされていない URI スキームを使用して[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]です。"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "新しいインスタンスを作成<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>をダウンロードして、スタンドアロンの Windows フォーム ベースのアプリケーションまたは Web ブラウザーでホストされるアプリケーションのいずれかにすることができます、指定されたアプリケーションをインストールします。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create an instance of <xref:System.Deployment.Application.InPlaceHostingManager> that allows you to download Windows Forms-based applications deployed using [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)].  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "UNIFORM Resource Identifier () をインストールするアプリケーションの配置マニフェストにします。"
    - id: launchInHostProcess
      type: System.Boolean
      description: "かどうかこのアプリケーションは、Web ブラウザーなどのホストで実行されます。 スタンドアロンのアプリケーションでは、この値に設定<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>Windows XP または Windows オペレーティング システムの以降のバージョンでのみ使用できます。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "渡せません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の<code> deploymentManifest </code>引数。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>サポートされていない URI スキームを使用して[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]です。"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  id: AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "指定するかどうか、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションがローカル コンピューター上で実行するには、適切なアクセス許可とプラットフォームの依存関係。"
  remarks: "後に AssertApplicationRequirements を呼び出す必要があります<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>が正常に完了します</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>。 呼び出す必要はありません<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>、AssertApplicationRequirements を呼び出すし、エラーが発生せずが返されます</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。"
  example:
  - "The following code example demonstrates the use of AssertApplicationRequirements, which it calls in the body of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void AssertApplicationRequirements ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前にこのメソッドが呼び出された場合に発生する、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>メソッド</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>。"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  id: AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "指定するかどうか、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションがローカル コンピューター上で実行するには、適切なアクセス許可とプラットフォームの依存関係。"
  remarks: "場合`grantApplicationTrust`は`true`、<xref:System.Deployment.Application.InPlaceHostingManager>それらが必要な場合、アプリケーションがアクセス許可を管理者特権が与えられます</xref:System.Deployment.Application.InPlaceHostingManager>。 これは場合にのみ可能<xref:System.Deployment.Application.InPlaceHostingManager>をこれらのアクセス許可を付与することができます</xref:System.Deployment.Application.InPlaceHostingManager>。 たとえば場合、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]より大きなパッケージの一部としてアプリケーションをインストールして、インストーラーに、完全な信頼が付与されて<xref:System.Deployment.Application.InPlaceHostingManager>を付与することができます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション完全な信頼</xref:System.Deployment.Application.InPlaceHostingManager>。 場合`grantApplicationTrust`は`false`アプリケーションが権限を付与しません。"
  syntax:
    content: public void AssertApplicationRequirements (bool grantApplicationTrust);
    parameters:
    - id: grantApplicationTrust
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アプリケーションは、必要なレベルへのアクセス許可の昇格を試みます。"
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  id: CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "非同期ダウンロード操作をキャンセルします。"
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  id: Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>です。"
  remarks: "<xref:System.Deployment.Application.InPlaceHostingManager>。</xref:System.Deployment.Application.InPlaceHostingManager>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Deployment.Application.InPlaceHostingManager>使用不可の状態</xref:System.Deployment.Application.InPlaceHostingManager>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Deployment.Application.InPlaceHostingManager>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Deployment.Application.InPlaceHostingManager>占有されていた</xref:System.Deployment.Application.InPlaceHostingManager></xref:System.Deployment.Application.InPlaceHostingManager>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Deployment.Application.InPlaceHostingManager></xref:System.Deployment.Application.InPlaceHostingManager>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Deployment.Application.InPlaceHostingManager>オブジェクトの`Finalize`メソッド</xref:System.Deployment.Application.InPlaceHostingManager>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  id: DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "バック グラウンドでアプリケーションの更新プログラムをダウンロードします。"
  remarks: "<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>。</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>の呼び出し後にこのメソッドを呼び出す必要があります。"
  example:
  - "The following code example demonstrates the use of DownloadApplicationAsync, which it calls at the end of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void DownloadApplicationAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前にこのメソッドが呼び出された場合に発生する、 <> </> *> と<> *> メソッドです。"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  id: DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "アプリケーションは終了して、ローカル コンピューターにダウンロードするときに発生します。"
  remarks: "Windows フォーム ベースのアプリケーションをインストールする場合は自分自身; アプリケーションを起動するユーザーに指示する必要があります。使用してプログラムから Windows フォーム ベースのアプリケーションを起動することはできません、<xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>メソッド</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>。"
  example:
  - "The following code example demonstrates a handler for the DownloadApplicationCompleted event.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#7)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#7)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs> DownloadApplicationCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "アプリケーションまたはマニフェストのダウンロードの状態の変更がある場合に発生します。"
  remarks: "コンソール アプリケーションでのイベントは、スレッド プールからスレッドに割り当てられます。 そのため、進行状況の更新イベント順序で前のイベントと比較して減少を示すイベントを後があります。 Windows フォームのイベントは、ユーザー インターフェイス (UI) スレッドのメッセージ キューから順番に処理されるため、Windows フォーム ベースのアプリケーションでは、このような動作は表示されません。"
  example:
  - "The following code example demonstrates how to update a <xref:System.Windows.Forms.ToolStripProgressBar> that is contained within a <xref:System.Windows.Forms.StatusStrip>.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#6)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#6)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs> DownloadProgressChanged;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  id: Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "起動、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションは、Windows Presentation Foundation ベースのアプリケーションを Web ブラウザーで実行されている場合にのみです。"
  remarks: "このメソッドは、Web ブラウザーでホストできる Windows Presentation Foundation ベースのアプリケーションに対してのみ有効です (つまり、その配置マニフェストの定義、 `hostInBrowser` XML 要素)。"
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle Execute ();
    parameters: []
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref>起動するアプリケーションに対応します。"
  overload: System.Deployment.Application.InPlaceHostingManager.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  id: GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "配置マニフェストをダウンロード、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]バック グラウンドでアプリケーションし、操作が完了したかエラーが発生したときにイベントを発生させます。"
  remarks: "このイベントが完了したときの通知を受信する、イベント ハンドラーを作成、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>イベント</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>。 このイベントが呼び出され、によってエラーが示されていないかどうかは<xref:System.Deployment.Application.GetManifestCompletedEventArgs>、次に呼び出す必要があります<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>をアプリケーションがローカル コンピューター上で実行する権限を持つことを確認します</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A></xref:System.Deployment.Application.GetManifestCompletedEventArgs>。"
  example:
  - "The following code examples demonstrate how to call the GetManifestAsync method. The handler for the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]  \n  \n [!code-cs[System.Deployment.Application.InPlaceHostingManager#4](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#4)]"
  syntax:
    content: public void GetManifestAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  id: GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "配置マニフェストがローカル コンピューターにダウンロードされている場合に発生します。"
  remarks: "使用して、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>プロパティ<xref:System.Deployment.Application.GetManifestCompletedEventArgs>を確認するかどうか<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>正常に完了したか、エラーが返されました</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A></xref:System.Deployment.Application.GetManifestCompletedEventArgs></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。 場合<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>が null で、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>正常に完了し<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を呼び出すことができます</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code examples demonstrate how to call the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> method. The handler for the GetManifestCompleted event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs> GetManifestCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  id: UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "アプリケーションの以前にインストールしたユーザー定義のコンポーネントを削除します。"
  syntax:
    content: public static void UninstallCustomAddIn (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "アドインを削除することを示します、サブスクリプションの識別子を表す文字列。"
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subscriptionId</code>有効なサブスクリプション id ではないか、名前、公開キー トークン、プロセッサ アーキテクチャ、およびバージョン番号は含まれません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subscriptionId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  id: UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "削除、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]を含むアプリケーションを&lt;customUX&gt;要素。"
  remarks: "This method uninstalls a previously installed [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application that uses the `<customUX>` element in the [\\&lt;entryPoint\\&gt; Element](../Topic/%3CentryPoint%3E%20Element%20\\(ClickOnce%20Application\\).md).  \n  \n Custom installers that do not create an Add or Remove Programs entry for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application must store the subscription identifier found in the <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> property during installation."
  syntax:
    content: public static void UninstallCustomUXApplication (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "かを示すサブスクリプション識別子を表す文字列、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションを削除します。"
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
- uid: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadApplicationCompletedEventArgs>
  nameWithType: EventHandler<DownloadApplicationCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadApplicationCompletedEventArgs
    name: DownloadApplicationCompletedEventArgs
    nameWithType: DownloadApplicationCompletedEventArgs
    fullName: DownloadApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
- uid: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: DownloadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
- uid: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GetManifestCompletedEventArgs>
  nameWithType: EventHandler<GetManifestCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.GetManifestCompletedEventArgs
    name: GetManifestCompletedEventArgs
    nameWithType: GetManifestCompletedEventArgs
    fullName: GetManifestCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager.InPlaceHostingManager
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync
  nameWithType: InPlaceHostingManager.CancelAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose
  nameWithType: InPlaceHostingManager.Dispose
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Execute*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute
  nameWithType: InPlaceHostingManager.Execute
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync
  nameWithType: InPlaceHostingManager.GetManifestAsync
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication
