### YamlMime:ManagedReference
items:
- uid: System.IO.Log.FileRegion
  id: FileRegion
  children:
  - System.IO.Log.FileRegion.FileLength
  - System.IO.Log.FileRegion.GetStream
  - System.IO.Log.FileRegion.Offset
  - System.IO.Log.FileRegion.Path
  langs:
  - csharp
  name: FileRegion
  nameWithType: FileRegion
  fullName: System.IO.Log.FileRegion
  type: Class
  summary: "アーカイブするファイルの領域を表します。 このクラスは継承できません。"
  remarks: "<xref:System.IO.Log.LogArchiveSnapshot>オブジェクトには、 <xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>内のデータの一貫性のあるバックアップを生成するための情報が含まれています。</xref:System.IO.Log.LogArchiveSnapshot> によって返される FileRegion オブジェクトの列挙可能なコレクションに実際のデータが含まれている、<xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A>プロパティ</xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A>。 各 FileRegion インスタンスでは、アーカイブする必要があるファイル内のバイト シーケンスを表します。"
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and FileRegion classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/t-system.io.log.fileregion_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/t-system.io.log.fileregion_1.cs)]"
  syntax:
    content: public sealed class FileRegion
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.FileLength
  id: FileLength
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: System.IO.Log.FileRegion.FileLength
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "ファイルのバイトの長さを取得します。"
  remarks: "このプロパティは、ファイル内の&1; つの地域ではなくファイル全体の長さを返します。 確認するには、ファイル内の領域の長さが見つかりません、<xref:System.IO.Log.LogStore.Length%2A>によって返されるストリームのプロパティ、<xref:System.IO.Log.FileRegion.GetStream%2A>メソッド</xref:System.IO.Log.FileRegion.GetStream%2A></xref:System.IO.Log.LogStore.Length%2A>。"
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_0_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_0_1.cs)]"
  syntax:
    content: public long FileLength { get; }
    return:
      type: System.Int64
      description: "ファイルのバイトの長さ。"
  overload: System.IO.Log.FileRegion.FileLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.GetStream
  id: GetStream
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: System.IO.Log.FileRegion.GetStream()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "アーカイブするデータの読み取りに使用できるストリームを返します。"
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/m-system.io.log.fileregi_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/m-system.io.log.fileregi_1.cs)]"
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "アーカイブするデータを格納するストリーム。"
  overload: System.IO.Log.FileRegion.GetStream*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "この操作はサポートされていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.FileRegion.Offset
  id: Offset
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: System.IO.Log.FileRegion.Offset
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "開始するファイルのデータにオフセットを取得します。"
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_1_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_1_1.cs)]"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: "開始するファイルのデータへのオフセット。"
  overload: System.IO.Log.FileRegion.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.Path
  id: Path
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Path
  nameWithType: FileRegion.Path
  fullName: System.IO.Log.FileRegion.Path
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "この領域を含むファイルの完全修飾の場所を取得します。"
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_2_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_2_1.cs)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "この領域を含むファイルの完全修飾の場所。"
  overload: System.IO.Log.FileRegion.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Log.FileRegion.FileLength
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: System.IO.Log.FileRegion.FileLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.FileRegion.GetStream
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: System.IO.Log.FileRegion.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Log.FileRegion.Offset
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: System.IO.Log.FileRegion.Offset
- uid: System.IO.Log.FileRegion.Path
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
  fullName: System.IO.Log.FileRegion.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.FileRegion.FileLength*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
- uid: System.IO.Log.FileRegion.GetStream*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream
  nameWithType: FileRegion.GetStream
- uid: System.IO.Log.FileRegion.Offset*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
- uid: System.IO.Log.FileRegion.Path*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
