### YamlMime:ManagedReference
items:
- uid: System.Windows.UIElement3D
  id: UIElement3D
  children:
  - System.Windows.UIElement3D.#ctor
  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.AllowDrop
  - System.Windows.UIElement3D.AllowDropProperty
  - System.Windows.UIElement3D.AreAnyTouchesCaptured
  - System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement3D.AreAnyTouchesOver
  - System.Windows.UIElement3D.AreAnyTouchesOverProperty
  - System.Windows.UIElement3D.CaptureMouse
  - System.Windows.UIElement3D.CaptureStylus
  - System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement3D.CommandBindings
  - System.Windows.UIElement3D.DragEnter
  - System.Windows.UIElement3D.DragEnterEvent
  - System.Windows.UIElement3D.DragLeave
  - System.Windows.UIElement3D.DragLeaveEvent
  - System.Windows.UIElement3D.DragOver
  - System.Windows.UIElement3D.DragOverEvent
  - System.Windows.UIElement3D.Drop
  - System.Windows.UIElement3D.DropEvent
  - System.Windows.UIElement3D.Focus
  - System.Windows.UIElement3D.Focusable
  - System.Windows.UIElement3D.FocusableChanged
  - System.Windows.UIElement3D.FocusableProperty
  - System.Windows.UIElement3D.GetUIParentCore
  - System.Windows.UIElement3D.GiveFeedback
  - System.Windows.UIElement3D.GiveFeedbackEvent
  - System.Windows.UIElement3D.GotFocus
  - System.Windows.UIElement3D.GotFocusEvent
  - System.Windows.UIElement3D.GotKeyboardFocus
  - System.Windows.UIElement3D.GotKeyboardFocusEvent
  - System.Windows.UIElement3D.GotMouseCapture
  - System.Windows.UIElement3D.GotMouseCaptureEvent
  - System.Windows.UIElement3D.GotStylusCapture
  - System.Windows.UIElement3D.GotStylusCaptureEvent
  - System.Windows.UIElement3D.GotTouchCapture
  - System.Windows.UIElement3D.GotTouchCaptureEvent
  - System.Windows.UIElement3D.InputBindings
  - System.Windows.UIElement3D.InvalidateModel
  - System.Windows.UIElement3D.IsEnabled
  - System.Windows.UIElement3D.IsEnabledChanged
  - System.Windows.UIElement3D.IsEnabledCore
  - System.Windows.UIElement3D.IsEnabledProperty
  - System.Windows.UIElement3D.IsFocused
  - System.Windows.UIElement3D.IsFocusedProperty
  - System.Windows.UIElement3D.IsHitTestVisible
  - System.Windows.UIElement3D.IsHitTestVisibleChanged
  - System.Windows.UIElement3D.IsHitTestVisibleProperty
  - System.Windows.UIElement3D.IsInputMethodEnabled
  - System.Windows.UIElement3D.IsKeyboardFocused
  - System.Windows.UIElement3D.IsKeyboardFocusedChanged
  - System.Windows.UIElement3D.IsKeyboardFocusedProperty
  - System.Windows.UIElement3D.IsKeyboardFocusWithin
  - System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement3D.IsMouseCaptured
  - System.Windows.UIElement3D.IsMouseCapturedChanged
  - System.Windows.UIElement3D.IsMouseCapturedProperty
  - System.Windows.UIElement3D.IsMouseCaptureWithin
  - System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  - System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  - System.Windows.UIElement3D.IsMouseDirectlyOver
  - System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  - System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  - System.Windows.UIElement3D.IsMouseOver
  - System.Windows.UIElement3D.IsMouseOverProperty
  - System.Windows.UIElement3D.IsStylusCaptured
  - System.Windows.UIElement3D.IsStylusCapturedChanged
  - System.Windows.UIElement3D.IsStylusCapturedProperty
  - System.Windows.UIElement3D.IsStylusCaptureWithin
  - System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  - System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  - System.Windows.UIElement3D.IsStylusDirectlyOver
  - System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  - System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  - System.Windows.UIElement3D.IsStylusOver
  - System.Windows.UIElement3D.IsStylusOverProperty
  - System.Windows.UIElement3D.IsVisible
  - System.Windows.UIElement3D.IsVisibleChanged
  - System.Windows.UIElement3D.IsVisibleProperty
  - System.Windows.UIElement3D.KeyDown
  - System.Windows.UIElement3D.KeyDownEvent
  - System.Windows.UIElement3D.KeyUp
  - System.Windows.UIElement3D.KeyUpEvent
  - System.Windows.UIElement3D.LostFocus
  - System.Windows.UIElement3D.LostFocusEvent
  - System.Windows.UIElement3D.LostKeyboardFocus
  - System.Windows.UIElement3D.LostKeyboardFocusEvent
  - System.Windows.UIElement3D.LostMouseCapture
  - System.Windows.UIElement3D.LostMouseCaptureEvent
  - System.Windows.UIElement3D.LostStylusCapture
  - System.Windows.UIElement3D.LostStylusCaptureEvent
  - System.Windows.UIElement3D.LostTouchCapture
  - System.Windows.UIElement3D.LostTouchCaptureEvent
  - System.Windows.UIElement3D.MouseDown
  - System.Windows.UIElement3D.MouseDownEvent
  - System.Windows.UIElement3D.MouseEnter
  - System.Windows.UIElement3D.MouseEnterEvent
  - System.Windows.UIElement3D.MouseLeave
  - System.Windows.UIElement3D.MouseLeaveEvent
  - System.Windows.UIElement3D.MouseLeftButtonDown
  - System.Windows.UIElement3D.MouseLeftButtonDownEvent
  - System.Windows.UIElement3D.MouseLeftButtonUp
  - System.Windows.UIElement3D.MouseLeftButtonUpEvent
  - System.Windows.UIElement3D.MouseMove
  - System.Windows.UIElement3D.MouseMoveEvent
  - System.Windows.UIElement3D.MouseRightButtonDown
  - System.Windows.UIElement3D.MouseRightButtonDownEvent
  - System.Windows.UIElement3D.MouseRightButtonUp
  - System.Windows.UIElement3D.MouseRightButtonUpEvent
  - System.Windows.UIElement3D.MouseUp
  - System.Windows.UIElement3D.MouseUpEvent
  - System.Windows.UIElement3D.MouseWheel
  - System.Windows.UIElement3D.MouseWheelEvent
  - System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement3D.OnCreateAutomationPeer
  - System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement3D.OnUpdateModel
  - System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.UIElement3D.PreviewDragEnter
  - System.Windows.UIElement3D.PreviewDragEnterEvent
  - System.Windows.UIElement3D.PreviewDragLeave
  - System.Windows.UIElement3D.PreviewDragLeaveEvent
  - System.Windows.UIElement3D.PreviewDragOver
  - System.Windows.UIElement3D.PreviewDragOverEvent
  - System.Windows.UIElement3D.PreviewDrop
  - System.Windows.UIElement3D.PreviewDropEvent
  - System.Windows.UIElement3D.PreviewGiveFeedback
  - System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  - System.Windows.UIElement3D.PreviewGotKeyboardFocus
  - System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement3D.PreviewKeyDown
  - System.Windows.UIElement3D.PreviewKeyDownEvent
  - System.Windows.UIElement3D.PreviewKeyUp
  - System.Windows.UIElement3D.PreviewKeyUpEvent
  - System.Windows.UIElement3D.PreviewLostKeyboardFocus
  - System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement3D.PreviewMouseDown
  - System.Windows.UIElement3D.PreviewMouseDownEvent
  - System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  - System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  - System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement3D.PreviewMouseMove
  - System.Windows.UIElement3D.PreviewMouseMoveEvent
  - System.Windows.UIElement3D.PreviewMouseRightButtonDown
  - System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement3D.PreviewMouseRightButtonUp
  - System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement3D.PreviewMouseUp
  - System.Windows.UIElement3D.PreviewMouseUpEvent
  - System.Windows.UIElement3D.PreviewMouseWheel
  - System.Windows.UIElement3D.PreviewMouseWheelEvent
  - System.Windows.UIElement3D.PreviewQueryContinueDrag
  - System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  - System.Windows.UIElement3D.PreviewStylusButtonDown
  - System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  - System.Windows.UIElement3D.PreviewStylusButtonUp
  - System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  - System.Windows.UIElement3D.PreviewStylusDown
  - System.Windows.UIElement3D.PreviewStylusDownEvent
  - System.Windows.UIElement3D.PreviewStylusInAirMove
  - System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement3D.PreviewStylusInRange
  - System.Windows.UIElement3D.PreviewStylusInRangeEvent
  - System.Windows.UIElement3D.PreviewStylusMove
  - System.Windows.UIElement3D.PreviewStylusMoveEvent
  - System.Windows.UIElement3D.PreviewStylusOutOfRange
  - System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement3D.PreviewStylusSystemGesture
  - System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement3D.PreviewStylusUp
  - System.Windows.UIElement3D.PreviewStylusUpEvent
  - System.Windows.UIElement3D.PreviewTextInput
  - System.Windows.UIElement3D.PreviewTextInputEvent
  - System.Windows.UIElement3D.PreviewTouchDown
  - System.Windows.UIElement3D.PreviewTouchDownEvent
  - System.Windows.UIElement3D.PreviewTouchMove
  - System.Windows.UIElement3D.PreviewTouchMoveEvent
  - System.Windows.UIElement3D.PreviewTouchUp
  - System.Windows.UIElement3D.PreviewTouchUpEvent
  - System.Windows.UIElement3D.QueryContinueDrag
  - System.Windows.UIElement3D.QueryContinueDragEvent
  - System.Windows.UIElement3D.QueryCursor
  - System.Windows.UIElement3D.QueryCursorEvent
  - System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement3D.ReleaseAllTouchCaptures
  - System.Windows.UIElement3D.ReleaseMouseCapture
  - System.Windows.UIElement3D.ReleaseStylusCapture
  - System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement3D.ShouldSerializeCommandBindings
  - System.Windows.UIElement3D.ShouldSerializeInputBindings
  - System.Windows.UIElement3D.StylusButtonDown
  - System.Windows.UIElement3D.StylusButtonDownEvent
  - System.Windows.UIElement3D.StylusButtonUp
  - System.Windows.UIElement3D.StylusButtonUpEvent
  - System.Windows.UIElement3D.StylusDown
  - System.Windows.UIElement3D.StylusDownEvent
  - System.Windows.UIElement3D.StylusEnter
  - System.Windows.UIElement3D.StylusEnterEvent
  - System.Windows.UIElement3D.StylusInAirMove
  - System.Windows.UIElement3D.StylusInAirMoveEvent
  - System.Windows.UIElement3D.StylusInRange
  - System.Windows.UIElement3D.StylusInRangeEvent
  - System.Windows.UIElement3D.StylusLeave
  - System.Windows.UIElement3D.StylusLeaveEvent
  - System.Windows.UIElement3D.StylusMove
  - System.Windows.UIElement3D.StylusMoveEvent
  - System.Windows.UIElement3D.StylusOutOfRange
  - System.Windows.UIElement3D.StylusOutOfRangeEvent
  - System.Windows.UIElement3D.StylusSystemGesture
  - System.Windows.UIElement3D.StylusSystemGestureEvent
  - System.Windows.UIElement3D.StylusUp
  - System.Windows.UIElement3D.StylusUpEvent
  - System.Windows.UIElement3D.TextInput
  - System.Windows.UIElement3D.TextInputEvent
  - System.Windows.UIElement3D.TouchDown
  - System.Windows.UIElement3D.TouchDownEvent
  - System.Windows.UIElement3D.TouchEnter
  - System.Windows.UIElement3D.TouchEnterEvent
  - System.Windows.UIElement3D.TouchesCaptured
  - System.Windows.UIElement3D.TouchesCapturedWithin
  - System.Windows.UIElement3D.TouchesDirectlyOver
  - System.Windows.UIElement3D.TouchesOver
  - System.Windows.UIElement3D.TouchLeave
  - System.Windows.UIElement3D.TouchLeaveEvent
  - System.Windows.UIElement3D.TouchMove
  - System.Windows.UIElement3D.TouchMoveEvent
  - System.Windows.UIElement3D.TouchUp
  - System.Windows.UIElement3D.TouchUpEvent
  - System.Windows.UIElement3D.Visibility
  - System.Windows.UIElement3D.VisibilityProperty
  langs:
  - csharp
  name: UIElement3D
  nameWithType: UIElement3D
  fullName: System.Windows.UIElement3D
  type: Class
  summary: "WPF コア レベル実装構築の基本クラスである UIElement3D[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]要素および基本表示特性です。"
  remarks: "UIElement3D は、3 D の特定の要素を表すクラスの派生元となる抽象基本クラスです。       3D の要素の入力、注目すること、およびイベント処理の動作の多くは一般的に、UIElement3D クラスで定義されます。 これには、キーボード、マウス、およびスタイラス入力、および関連するステータスのプロパティのイベントが含まれます。 ルーティングされたイベントは、これらのイベントの多くは、バブル、両方のルーティングの入力に関連するイベントの多くがあるバージョンだけでなく、イベントのトンネルのバージョン。 これらのイベントのペアは、通常、コントロールの作成者に最も関心のあるイベントです。       UIElement3D も含まれています。[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]に関連した、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]イベント モデルでは、指定させることができるメソッドを含む要素のインスタンスが基づいているイベントをルーティングします。       UIElement3D が UIElement3D クラスによって明示的に定義されている次の機能:-ユーザー入力に応答できます (イベントの処理を使用して入力を送信する先のコントロールを含むルーティングやコマンドのルーティング)。      -要素の論理ツリー内のルートに移動するルーティング イベントを発生させることができます。      > [!IMPORTANT] ><xref:System.Windows.UIElement3D.Visibility%2A>状態その要素ですべての入力の処理に影響します</xref:System.Windows.UIElement3D.Visibility%2A>。 表示されていない要素がヒット テストに参加していないと、要素があるとの境界上にマウスが場合でも、入力イベントを受け取りません場合に表示されていた。       異なり、<xref:System.Windows.UIElement>クラス、UIElement3D クラスには、レイアウトは含みません</xref:System.Windows.UIElement>。 したがって、UIElement3D クラスは含まれません**メジャー**または**配置**メソッドです。       UIElement3D から派生し、<xref:System.Windows.Media.Media3D.Visual3D><xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A><xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A>新しい<xref:System.Windows.Media.Media3D.Visual3D><xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>。</xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>オブジェクト</xref:System.Windows.Media.Media3D.Visual3D>を渡す必要がありますが</xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A>、</xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A>オーバーライドすることでオブジェクト</xref:System.Windows.Media.Media3D.Visual3D>の独自のコレクションを保持するクラス       UIElement3D は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to derive from the UIElement3D class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: 'public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Media3D.Visual3D
  implements:
  - System.Windows.IInputElement
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Media3D.Visual3D.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Media3D.Visual3D.GetVisual3DChild(System.Int32)
  - System.Windows.Media.Media3D.Visual3D.HasAnimatedProperties
  - System.Windows.Media.Media3D.Visual3D.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.Transform
  - System.Windows.Media.Media3D.Visual3D.TransformProperty
  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount
  - System.Windows.Media.Media3D.Visual3D.Visual3DModel
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.UIElement3D.#ctor
  id: '#ctor'
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: UIElement3D()
  nameWithType: UIElement3D.UIElement3D()
  fullName: System.Windows.UIElement3D.UIElement3D()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.UIElement3D&quot;> </xref>クラスです。"
  remarks: "UIElement3D は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected UIElement3D ();
    parameters: []
  overload: System.Windows.UIElement3D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ハンドラーを現在の要素のハンドラー コレクションに追加する、指定したルーティング イベントのルーティング イベント ハンドラーを追加します。"
  remarks: "例外を発生させず、同じイベントのハンドラーは、同じ複数回を追加することができます。 ただし、ハンドラーには、イベントを処理するときに複数回が実際に呼び出されます。 そのため、この動作では次の方法で、ハンドラーの実装で考慮するべき副作用がある可能性がありますを検討してください。       通常、&quot;add&quot;アクセサーの実装を提供するこのメソッドを使用する、[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]カスタム ルーティング イベントのイベントのアクセス パターン。       AddHandler が、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "ルーティング イベントを処理するための識別子です。"
    - id: handler
      type: System.Delegate
      description: "ハンドラーの実装への参照。"
  overload: System.Windows.UIElement3D.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ハンドラーを現在の要素のハンドラー コレクションに追加する、指定したルーティング イベントのルーティング イベント ハンドラーを追加します。 指定<code> handledEventsToo </code>として<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>イベント ルート上の別の要素によって処理されるように既にマークされているルーティング イベントのために呼び出される、指定したハンドラーがします。"
  remarks: "複雑なタスクは、実用的な方法で低レベルの入力イベントを処理します。 多くのコントロールと、特定のイベントが処理される、マークされた、別のより直観的なイベントに置き換えの動作を実装します。 一般に、これを行うための設計上の意図がある場合を処理済みとして、コントロールは、プラットフォームの入力イベントをマークだけです。 特定のシナリオでこれらの設計上の意図できない可能性があります、特定の入力イベントの処理が必要です。 これらのシナリオを登録するハンドラーの`handledEventsToo`として`true`が適切です。 実行しないでこの日常的にします。 処理される場合でも、すべてのイベントに応答ハンドラーを呼び出すと、独自のアプリケーション イベントを処理ロジックが複雑になります。 ハンドラーのロジックは大きな場合は、パフォーマンスの低下を参照してください可能性があります。 既にいくつかのコントロールは、アプリケーション ロジックで処理するイベントを処理は、開発プロセス中に検出する場所の場合、処理済みイベントのハンドラーをアタッチの使用を予約する必要があります。       クラスの処理を特定のイベントとコントロールの組み合わせの動作を回避するためのもう&1; つの方法では、そのイベントのプレビューの代替手段を使用します。 たとえば場合、<xref:System.Windows.UIElement3D.MouseLeftButtonDown>処理済みとしてマークは、クラス処理によってことができますのハンドラーを追加する<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>代わりにします</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown></xref:System.Windows.UIElement3D.MouseLeftButtonDown>。       例外を発生させず、同じイベントのハンドラーは、同じ複数回を追加することができます。 ただし、ハンドラーには、イベントを処理するときに複数回が実際に呼び出されます。 そのため、この動作では次の方法で、ハンドラーの実装で考慮するべき副作用がある可能性がありますを検討してください。       通常、&quot;add&quot;アクセサーの実装を提供するこのメソッドを使用する、[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]カスタム ルーティング イベントのイベントのアクセス パターン。       AddHandler が、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "ルーティング イベントを処理するための識別子です。"
    - id: handler
      type: System.Delegate
      description: "ハンドラーの実装への参照。"
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>そのイベント データで処理されるルーティング イベントがマークされている場合でも呼び出されるようにハンドラーを登録するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ことがない既定の条件に、ハンドラーを登録するルーティング イベントは既に設定されて処理される場合に呼び出されます。       既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       定期的にメッセージを表示しないルーティング イベントを再処理をします。 詳細については、「解説」を参照してください。"
  overload: System.Windows.UIElement3D.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  id: AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "指定したハンドラーを追加する<xref href=&quot;System.Windows.EventRoute&quot;></xref>現在の<xref href=&quot;System.Windows.UIElement3D&quot;></xref>イベント ハンドラーのコレクション。"
  remarks: "このメソッドは、コンテンツ ホスト要素で使用できます (いずれかを実装するもの<xref:System.Windows.IContentHost>またはいない場合は) <xref:System.Windows.EventRoute>.</xref:System.Windows.EventRoute>に子要素のハンドラーを追加する</xref:System.Windows.IContentHost>       AddToEventRoute は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);
    parameters:
    - id: route
      type: System.Windows.EventRoute
      description: "ハンドラーに追加されるイベントのルートです。"
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "イベントのデータ ハンドラーを追加するために使用します。 このメソッドを使用して、<xref:System.Windows.RoutedEventArgs.RoutedEvent*>ハンドラーを作成するイベント データのプロパティ</xref:System.Windows.RoutedEventArgs.RoutedEvent*>。"
  overload: System.Windows.UIElement3D.AddToEventRoute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AllowDrop
  id: AllowDrop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
  fullName: System.Windows.UIElement3D.AllowDrop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得またはこの要素をドラッグ アンド ドロップ操作の対象として使用できるかどうかを示す値を設定します。"
  remarks: "ドラッグ アンド ドロップ操作が既定では、無効になってし、AllowDrop に設定して意図的に有効にする必要があります`true`です。 この基本的な設定を超えるドラッグ アンド ドロップの動作は完全に特定の実装、<xref:System.Windows.UIElement3D>またはその他の要素の基本クラス</xref:System.Windows.UIElement3D>によって定義されていません。 たとえば、特定のコントロール<xref:System.Windows.Controls.RichTextBox>、既定の動作を持っています</xref:System.Windows.Controls.RichTextBox>。 ドラッグ アンド ドロップの詳細については、次を参照してください。[ドラッグ アンド ドロップの概要](~/add/includes/ajax-current-ext-md.md)です。       AllowDrop は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_AllowDrop&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.AllowDropProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.AllowDropProperty>"
  syntax:
    content: public bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素をドラッグ アンド ドロップ操作のターゲットとして使用できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AllowDropProperty
  id: AllowDropProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AllowDropProperty
  nameWithType: UIElement3D.AllowDropProperty
  fullName: System.Windows.UIElement3D.AllowDropProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.AllowDrop*>依存関係プロパティ</xref:System.Windows.UIElement3D.AllowDrop*>。"
  remarks: "AllowDropProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AllowDropProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured
  id: AreAnyTouchesCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素に、少なくとも&1; つのタッチがキャプチャされるかどうかを示す値を取得します。"
  syntax:
    content: public bool AreAnyTouchesCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>タッチを少なくとも&1; つがキャプチャされます。 この要素にそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.AreAnyTouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  id: AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*>依存関係プロパティ</xref:System.Windows.UIElement3D.AreAnyTouchesCaptured*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  id: AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素またはそのビジュアル ツリー内のすべての子要素には、少なくとも&1; つのタッチがキャプチャされるかどうかを示す値を取得します。"
  syntax:
    content: public bool AreAnyTouchesCapturedWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>少なくとも&1; つにタッチがキャプチャをこの要素またはそのビジュアル ツリー内にある子要素それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  id: AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*>依存関係プロパティ</xref:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  id: AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上には、少なくとも&1; つのタッチが押されたかどうかを示す値を取得します。"
  syntax:
    content: public bool AreAnyTouchesDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素上には、少なくとも&1; つのタッチが押された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  id: AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesOver
  id: AreAnyTouchesOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素またはそのビジュアル ツリー内のすべての子要素の上には、少なくとも&1; つのタッチが押されたかどうかを示す値を取得します。"
  syntax:
    content: public bool AreAnyTouchesOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素またはそのビジュアル ツリー内にある子要素の上には、少なくとも&1; つのタッチが押された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.AreAnyTouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  id: AreAnyTouchesOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement3D.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.AreAnyTouchesOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.AreAnyTouchesOver*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureMouse
  id: CaptureMouse
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureMouse()
  nameWithType: UIElement3D.CaptureMouse()
  fullName: System.Windows.UIElement3D.CaptureMouse()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にマウスのキャプチャを強制しようとします。"
  remarks: "キャプチャするのには、要素を有効にする必要があります。 確認するかどうか<xref:System.Windows.UIElement3D.IsEnabled%2A>は`true`ことでを呼び出す前にします</xref:System.Windows.UIElement3D.IsEnabled%2A>。       呼び出すことで返されます場合`true`、し<xref:System.Windows.UIElement3D.IsMouseCaptured%2A>も`true`</xref:System.Windows.UIElement3D.IsMouseCaptured%2A>。       呼び出すことで返す場合`true`、<xref:System.Windows.UIElement3D.GotMouseCapture>と<xref:System.Windows.UIElement3D.IsMouseCapturedChanged>イベントが発生すると<xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>ことでメソッドが呼び出された場合、要素としてデータを報告するイベントです</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName></xref:System.Windows.UIElement3D.IsMouseCapturedChanged></xref:System.Windows.UIElement3D.GotMouseCapture>。 既存のキャプチャと干渉する可能性のキャプチャを強制した場合、特にのマウスでドラッグ アンド ドロップに関連するキャプチャします。       すべての要素からマウスのキャプチャをクリアする呼び出し<xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName>で、`element`として指定されたパラメーター `null`</xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=fullName> 。       では、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool CaptureMouse ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マウスが正常にキャプチャされた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.CaptureMouse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureStylus
  id: CaptureStylus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureStylus()
  nameWithType: UIElement3D.CaptureStylus()
  fullName: System.Windows.UIElement3D.CaptureStylus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にスタイラスのキャプチャを強制しようとしています。"
  remarks: "既定の実装を常に基になる既定のスタイラス デバイスに基づいて`true`です。 ただし、入力システムのデバイスの実装を提供する入力デバイスを拡張する場合、異なる結果を返す可能性のある代替のスタイラス デバイスの実装と、システムを作成することができます。       要素がスタイラスをキャプチャ、ときに、スタイラスが境界外にある場合でも、スタイラス入力を受け取ります。 スタイラスは通常、ドラッグ アンド ドロップ操作中にのみキャプチャされます。       基になる静的<xref:System.Windows.Input.Stylus><xref:System.Windows.Input.Stylus.Capture%2A>。</xref:System.Windows.Input.Stylus.Capture%2A>メソッド</xref:System.Windows.Input.Stylus>を呼び出すこのメソッドを呼び出す 実際のキャプチャの動作は、アクティブなスタイラス デバイスの実装によって実装されます。       キャプチャするのには、要素を有効にする必要があります。 確認するかどうか<xref:System.Windows.UIElement3D.IsEnabled%2A>は`true`CaptureStylus を呼び出す前に戻ります</xref:System.Windows.UIElement3D.IsEnabled%2A>。       CaptureStylus 返しますを呼び出している場合は`true`、<xref:System.Windows.UIElement3D.IsStylusCaptured%2A>も`true`</xref:System.Windows.UIElement3D.IsStylusCaptured%2A>。       CaptureStylus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool CaptureStylus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタイラスが正常にキャプチャされた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.CaptureStylus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  id: CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement3D.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素に強制的にタッチをキャプチャしようとしています。"
  remarks: "CaptureTouch が返されます`false`場合、<xref:System.Windows.Input.TouchDevice>別の要素に現在キャプチャされています</xref:System.Windows.Input.TouchDevice>。       CaptureTouch を返す場合`true`、続いて、<xref:System.Windows.UIElement3D.GotTouchCapture>イベントが発生します</xref:System.Windows.UIElement3D.GotTouchCapture>。       解放するにはこの要素から&1; つのタッチのキャプチャを使用して、<xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A>メソッドを解放する、タッチ デバイスを指定します</xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A>。 解放するにはこの要素からすべての調整を使用して、<xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>メソッド</xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A>。"
  syntax:
    content: public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "キャプチャするデバイスです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素に指定したタッチがキャプチャされる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.CaptureTouch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement3D.CommandBindings
  id: CommandBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
  fullName: System.Windows.UIElement3D.CommandBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "コレクションを取得<xref href=&quot;System.Windows.Input.CommandBinding&quot;></xref>この要素に関連付けられているオブジェクト。"
  remarks: "A<xref:System.Windows.Input.CommandBinding>この要素の特定のコマンドのコマンドの処理を有効にし、コマンド、そのイベントでは、この要素にアタッチされたハンドラー間のリンケージが宣言されます</xref:System.Windows.Input.CommandBinding>。       踏み込んで言うとコレクションを設定するもう&1; つの一般的な方法を使用して<xref:System.Windows.Input.CommandManager>メソッド プログラムによって</xref:System.Windows.Input.CommandManager>。       踏み込んで言うとは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlPropertyElementUsage_CommandBindings&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.CommandBindings>       oneOrMoreCommandBindings  </object.CommandBindings>   </object>   ``` <a name=&quot;xamlValues_CommandBindings&quot;> </a> ## XAML 値*oneOrMoreCommandBindings*&1; つまたは複数<xref:System.Windows.Input.CommandBinding>要素</xref:System.Windows.Input.CommandBinding>。       これらの各が必要、<xref:System.Windows.Input.CommandBinding.Command%2A>既知のコマンドに属性が設定され、に対して属性が設定、<xref:System.Windows.Input.CommandBinding.CanExecute>と<xref:System.Windows.Input.CommandBinding.Executed>ハンドラーの実装</xref:System.Windows.Input.CommandBinding.Executed></xref:System.Windows.Input.CommandBinding.CanExecute></xref:System.Windows.Input.CommandBinding.Command%2A>。 詳細については、 <xref:System.Windows.Input.CommandBinding>。</xref:System.Windows.Input.CommandBinding>を参照してください。"
  syntax:
    content: public System.Windows.Input.CommandBindingCollection CommandBindings { get; }
    return:
      type: System.Windows.Input.CommandBindingCollection
      description: "すべてのコレクション<xref href=&quot;System.Windows.Input.CommandBinding&quot;></xref>オブジェクト。"
  overload: System.Windows.UIElement3D.CommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragEnter
  id: DragEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragEnter
  nameWithType: UIElement3D.DragEnter
  fullName: System.Windows.UIElement3D.DragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドラッグ先と、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>DragEnter が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>。 DragEnter イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName>。       DragEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_DragEnter&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.DragEnterEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewDragEnter>.</xref:System.Windows.UIElement3D.PreviewDragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragEnterEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnDragEnter%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnDragEnter%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler DragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragEnterEvent
  id: DragEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragEnterEvent
  nameWithType: UIElement3D.DragEnterEvent
  fullName: System.Windows.UIElement3D.DragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.DragEnter&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       DragEnterEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragLeave
  id: DragLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragLeave
  nameWithType: UIElement3D.DragLeave
  fullName: System.Windows.UIElement3D.DragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドラッグ元に、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>いくつかが一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>。 いくつかのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName>。       いくつかは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_DragLeave&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.DragLeaveEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewDragLeave>.</xref:System.Windows.UIElement3D.PreviewDragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragLeaveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnDragLeave%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnDragLeave%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler DragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragLeaveEvent
  id: DragLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragLeaveEvent
  nameWithType: UIElement3D.DragLeaveEvent
  fullName: System.Windows.UIElement3D.DragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.DragLeave&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       DragLeaveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragOver
  id: DragOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragOver
  nameWithType: UIElement3D.DragOver
  fullName: System.Windows.UIElement3D.DragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムが潜在的なドロップ ターゲットとしてこの要素で、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントは、要素の境界のドラッグを開始した場合でも発生します。 ドラッグ アンドが境界の外側を開始し、このイベントを発生すると、内側、移動だけでなく<xref:System.Windows.UIElement3D.DragEnter>とプレビュー イベントを関連</xref:System.Windows.UIElement3D.DragEnter>。       このイベントのエイリアスを作成する、<xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>ドラッグされたが一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>。 ドラッグされたイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.DragOver?displayProperty=fullName>。       ドラッグされたは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_DragOver&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.DragOverEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewDragOver>.</xref:System.Windows.UIElement3D.PreviewDragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DragOverEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnDragOver%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnDragOver%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler DragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DragOverEvent
  id: DragOverEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DragOverEvent
  nameWithType: UIElement3D.DragOverEvent
  fullName: System.Windows.UIElement3D.DragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.DragOver&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       DragOverEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Drop
  id: Drop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Drop
  nameWithType: UIElement3D.Drop
  fullName: System.Windows.UIElement3D.Drop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドロップ先とするドロップ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.DragDrop.Drop?displayProperty=fullName>添付イベントをドロップ一部であるため、このクラスのクラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.Drop?displayProperty=fullName>。 ドロップのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.Drop?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.Drop?displayProperty=fullName>。       Drop は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_Drop&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.DropEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewDrop>.</xref:System.Windows.UIElement3D.PreviewDrop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.DropEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnDrop%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnDrop%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler Drop;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.DropEvent
  id: DropEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: DropEvent
  nameWithType: UIElement3D.DropEvent
  fullName: System.Windows.UIElement3D.DropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.Drop&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       DropEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent DropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Focus
  id: Focus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Focus()
  nameWithType: UIElement3D.Focus()
  fullName: System.Windows.UIElement3D.Focus()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素に論理フォーカスを設定しようとしています。"
  remarks: "フォーカスを<xref:System.Windows.UIElement3D.Focusable%2A>と<xref:System.Windows.UIElement3D.IsEnabled%2A>両方`true`</xref:System.Windows.UIElement3D.IsEnabled%2A></xref:System.Windows.UIElement3D.Focusable%2A>。       場合でも、要素は、特定のツリー内でフォーカスを設定し、有効なイベント処理が、フォーカスがある、許可しないことによって、プレビューのフォーカス イベントに応答 (複合コントロールなど) ためこのメソッドは`false`します。       フォーカスを返しますを呼び出している場合は`true`、<xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>と<xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>も`true`</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A></xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>。       場合は、関連するプロパティは、既に`true`、フォーカスを呼び出すときに、次の順序で発生するか、次のイベントの&1; つ以上: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>、 <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>(ソースは、新しいフォーカス ターゲット)、 <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>、 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>、 <xref:System.Windows.UIElement3D.LostKeyboardFocus>、 <xref:System.Windows.UIElement3D.GotKeyboardFocus>(ソースは、新しいフォーカス ターゲット).</xref:System.Windows.UIElement3D.GotKeyboardFocus> </xref:System.Windows.UIElement3D.LostKeyboardFocus> </xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> </xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> </xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> </xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>       この呼び出しを成功させるためには、以前にフォーカスがあることをアプリケーションでその他の要素が必要です。       一般にフォーカスが&2; つの異なる概念によって拘束されます: キーボード フォーカスと論理フォーカスが常に一致しません。 このメソッドは、論理フォーカスを設定し、キーボード フォーカスを設定しようとしてもします。 プログラム設定キーボード フォーカス具体的には、これはユーザー入力のために発生する手段はありません。 詳細については、次を参照してください。[入力概要](~/add/includes/ajax-current-ext-md.md)です。       フォーカスが .NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合論理し、この要素にキーボード フォーカスが設定されました<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>論理フォーカスが設定された場合のみです。"
  overload: System.Windows.UIElement3D.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Focusable
  id: Focusable
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Focusable
  nameWithType: UIElement3D.Focusable
  fullName: System.Windows.UIElement3D.Focusable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得または要素がフォーカスを受け取るかどうかを示す値を設定します。"
  remarks: "フォーカスのある要素のみでは、キーボード入力を受け取ります。       フォーカスを設定できるは、[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]新機能は、実際には、依存関係プロパティのプロパティ アクセサー。 この特定の依存関係プロパティでは、見かけ上の「既定」値が派生した要素のクラスに異なる方法で設定がよくあります。 これは、問題は&2; つの方法のいずれかで発生します。 - 依存関係プロパティが特定の派生クラスで継承されたが、その派生クラスは、依存関係プロパティのメタデータをオーバーライドし、プロパティの既定値を変更します。       フォーカスを設定できるは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_Focusable&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.FocusableProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.FocusableProperty>"
  syntax:
    content: public bool Focusable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素がフォーカスを設定できる場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>は、「解説」を参照してください。"
  overload: System.Windows.UIElement3D.Focusable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.FocusableChanged
  id: FocusableChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: FocusableChanged
  nameWithType: UIElement3D.FocusableChanged
  fullName: System.Windows.UIElement3D.FocusableChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.Focusable*>プロパティが変更された</xref:System.Windows.UIElement3D.Focusable*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       FocusableChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.FocusableProperty
  id: FocusableProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: FocusableProperty
  nameWithType: UIElement3D.FocusableProperty
  fullName: System.Windows.UIElement3D.FocusableProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.Focusable*>依存関係プロパティ</xref:System.Windows.UIElement3D.Focusable*>。"
  remarks: "FocusableProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusableProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GetUIParentCore
  id: GetUIParentCore
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GetUIParentCore()
  nameWithType: UIElement3D.GetUIParentCore()
  fullName: System.Windows.UIElement3D.GetUIParentCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "派生クラスでオーバーライドされると、返す代わりに[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]ビジュアル親が存在しない場合、この要素の親です。"
  remarks: "このメソッドの既定の仮想実装`null`です。 <xref:System.Windows.FrameworkElement>実際の実装を提供します。</xref:System.Windows.FrameworkElement>       別の親は、できるように、そのイベントは、標準の親のビジュアル ツリーをルーティングの標準的なパターンから逸脱した方法でルーティングまたはプレビューのルーティング方法で下方向に要素が代替の親構造体を作成する場所の場合、イベントのルーティングに使用されます。       GetUIParentCore は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected System.Windows.DependencyObject GetUIParentCore ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "派生クラスの実装がレポートに代替の親接続を持つ場合のオブジェクト。"
  overload: System.Windows.UIElement3D.GetUIParentCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: UIElement3D.GiveFeedback
  fullName: System.Windows.UIElement3D.GiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素は、基になるドラッグ アンド ドロップ イベントを報告したときに発生します。"
  remarks: "GiveFeedback イベントは、ドラッグ アンド ドロップ操作中にユーザーに視覚的フィードバックを提供するためにマウス ポインターの外観を変更するドラッグ イベントのソースを使用します。 視覚的なフィードバックは、ドラッグ アンド ドロップ操作が、プロセスを助けます。       このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>GiveFeedback が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>。 GiveFeedback イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName>。       GiveFeedback は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_GiveFeedback&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.GiveFeedbackEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewGiveFeedback>.</xref:System.Windows.UIElement3D.PreviewGiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement3D.GiveFeedbackEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnGiveFeedback%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGiveFeedback%2A>。"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GiveFeedbackEvent
  id: GiveFeedbackEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GiveFeedbackEvent
  nameWithType: UIElement3D.GiveFeedbackEvent
  fullName: System.Windows.UIElement3D.GiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GiveFeedback&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       GiveFeedbackEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotFocus
  id: GotFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotFocus
  nameWithType: UIElement3D.GotFocus
  fullName: System.Windows.UIElement3D.GotFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素が論理フォーカスを取得したときに発生します。"
  remarks: "フォーカスがメソッド呼び出しを使用して強制的に意図的には、直前のキーボード フォーカスが別のスコープに存在する場合、論理フォーカスはキーボード フォーカスとは異なります。 ここでは、要素では、このシナリオでは、キーボード フォーカスのままで、<xref:System.Windows.UIElement3D.Focus%2A>メソッドが呼び出されたが論理フォーカスを取得します</xref:System.Windows.UIElement3D.Focus%2A>。       このイベントをより正確に解釈というものが発生したときの値、<xref:System.Windows.UIElement3D.IsFocused%2A>からルート内の要素のプロパティが変更された`false`に`true`</xref:System.Windows.UIElement3D.IsFocused%2A>。       このイベントは、バブル ルーティングを使用するため、フォーカスを受け取る要素は、イベント ハンドラーが実際に添付されている要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスを得られる実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       GotFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_GotFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GotFocusEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.RoutedEventHandler>|     イベントはありません対応するトンネリング</xref:System.Windows.RoutedEventHandler></xref:System.Windows.UIElement3D.GotFocusEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnGotFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGotFocus%2A>。"
  syntax:
    content: public event System.Windows.RoutedEventHandler GotFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: UIElement3D.GotFocusEvent
  fullName: System.Windows.UIElement3D.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       GotFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotKeyboardFocus
  id: GotKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotKeyboardFocus
  nameWithType: UIElement3D.GotKeyboardFocus
  fullName: System.Windows.UIElement3D.GotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "キーボードは、この要素にフォーカスがあるときに発生します。"
  remarks: "<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>類似するイベントです。 要素のフォーカス状態を保持するプロパティで状態の変更を追跡します。GotKeyboardFocus イベントです。</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>       このイベントは、バブル ルーティングを使用するため、フォーカスを持つ要素は、イベント ハンドラーが実際に添付されている要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスのある実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>GotKeyboardFocus が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>。 GotKeyboardFocus イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName>。       GotKeyboardFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_GotKeyboardFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.</xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent
  id: GotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotKeyboardFocusEvent
  nameWithType: UIElement3D.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GotKeyboardFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       GotKeyboardFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotMouseCapture
  id: GotMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotMouseCapture
  nameWithType: UIElement3D.GotMouseCapture
  fullName: System.Windows.UIElement3D.GotMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素がマウスをキャプチャしたときに発生します。"
  remarks: "要素がマウスをキャプチャは、境界外にマウス ポインターがあってもマウス入力を受け取ります。 マウスでは、ドラッグ アンド ドロップ操作中にのみがキャプチャ通常され、ドラッグ アンド ドロップ操作の削除アクションが発生するまでにキャプチャされたままです。       このイベントは、バブル ルーティングを使用するため、キャプチャを持つ要素は、イベント ハンドラーが実際に添付されている要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>マウスのある実際の要素を決定するデータのキャプチャのイベント</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>GotMouseCapture が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>。 GotMouseCapture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>。       GotMouseCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_GotMouseCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     -、定義済みの対応するトンネリング イベントはありません</xref:System.Windows.Input.MouseEventHandler></xref:System.Windows.UIElement3D.GotMouseCaptureEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGotMouseCapture%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler GotMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotMouseCaptureEvent
  id: GotMouseCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotMouseCaptureEvent
  nameWithType: UIElement3D.GotMouseCaptureEvent
  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GotMouseCapture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       GotMouseCaptureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotStylusCapture
  id: GotStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotStylusCapture
  nameWithType: UIElement3D.GotStylusCapture
  fullName: System.Windows.UIElement3D.GotStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素がスタイラスをキャプチャしたときに発生します。"
  remarks: "要素がスタイラスをキャプチャ、ときに、ポインターが境界外にある場合でも、スタイラス入力を受け取ります。 スタイラスは、通常、ドラッグ アンド ドロップ操作中にのみキャプチャし、ドラッグ アンド ドロップ操作の削除アクションが発生するまでにキャプチャを保持します。       このイベントは、バブル ルーティングを使用するため、キャプチャを持つ要素は、イベント ハンドラーが実際に添付されている要素ではなく子要素である可能性があります。 チェック、 <xref:System.Windows.RoutedEventArgs.Source%2A>、イベント データを実際のキャプチャを持つ要素を決定します</xref:System.Windows.RoutedEventArgs.Source%2A>。       GotStylusCapture が一部になるように、このイベントがこのクラスの添付イベントのエイリアスを作成、クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D>。 GotStylusCapture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName>。       GotStylusCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_GotStylusCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     -、定義済みの対応するトンネリング イベントはありません</xref:System.Windows.Input.StylusEventHandler></xref:System.Windows.UIElement3D.GotStylusCaptureEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGotStylusCapture%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler GotStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotStylusCaptureEvent
  id: GotStylusCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotStylusCaptureEvent
  nameWithType: UIElement3D.GotStylusCaptureEvent
  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GotStylusCapture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       GotStylusCaptureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotTouchCapture
  id: GotTouchCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotTouchCapture
  nameWithType: UIElement3D.GotTouchCapture
  fullName: System.Windows.UIElement3D.GotTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にタッチがキャプチャされるときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_GotTouchCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>の |     -オーバーライド<xref:System.Windows.UIElement3D.OnGotTouchCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnGotTouchCapture%2A></xref:System.Windows.Input.TouchEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement3D.GotTouchCaptureEvent>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> GotTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.GotTouchCaptureEvent
  id: GotTouchCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: GotTouchCaptureEvent
  nameWithType: UIElement3D.GotTouchCaptureEvent
  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.GotTouchCapture&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.InputBindings
  id: InputBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
  fullName: System.Windows.UIElement3D.InputBindings
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素に関連付けられている入力バインドのコレクションを取得します。"
  remarks: "入力バインディングは、コマンド入力デバイスへのバインドをサポートします。 たとえば、<xref:System.Windows.Input.MouseBinding>を実装して入力をマウス デバイスに特定のプロパティを含むバインド</xref:System.Windows.Input.MouseBinding>。       両方の型に関連するだけでなく、インスタンスで宣言されている入力バインド入力バインドのコレクションが含まれます。       関連するプロパティ、 <xref:System.Windows.UIElement3D.CommandBindings%2A>、コマンドのショートカット キーのコレクションを保持します</xref:System.Windows.UIElement3D.CommandBindings%2A>。 これらとは異なり、入力バインディングとコマンドの処理 - 既知のコマンドに関連付けられているアクションの下の次のレベルを表しています。       InputBindings は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlPropertyElementUsage_InputBindings&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.InputBindings>       oneOrMoreInputBindings  </object.InputBindings>   </object>   ``` <a name=&quot;xamlValues_InputBindings&quot;> </a> ## XAML 値*oneOrMoreInputBindings*&1; つまたは複数<xref:System.Windows.Input.InputBinding>要素 (通常、<xref:System.Windows.Input.KeyBinding>または<xref:System.Windows.Input.MouseBinding>派生クラス).</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.InputBinding>       これらの各が予期、<xref:System.Windows.Input.InputBinding.Command%2A>と<xref:System.Windows.Input.InputBinding.Gesture%2A>属性が設定されます</xref:System.Windows.Input.InputBinding.Gesture%2A></xref:System.Windows.Input.InputBinding.Command%2A>。"
  syntax:
    content: public System.Windows.Input.InputBindingCollection InputBindings { get; }
    return:
      type: System.Windows.Input.InputBindingCollection
      description: "入力バインドのコレクション。"
  overload: System.Windows.UIElement3D.InputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.InvalidateModel
  id: InvalidateModel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: InvalidateModel()
  nameWithType: UIElement3D.InvalidateModel()
  fullName: System.Windows.UIElement3D.InvalidateModel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "要素を表すモデルが無効になります。"
  remarks: "クラスを継承する場合、<xref:System.Windows.UIElement3D>クラスと共にこのメソッドを使用することができます、<xref:System.Windows.UIElement3D.OnUpdateModel%2A>要素のモデルを更新する方法</xref:System.Windows.UIElement3D.OnUpdateModel%2A></xref:System.Windows.UIElement3D>。       高度なシナリオでこのメソッドを呼び出す必要があるだけです。 このような高度なシナリオの&1; つは、派生クラスには、外観に影響する複数のプロパティと、基になるモデルを&1; 回のみ更新するかどうかです。       InvalidateModel は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: public void InvalidateModel ();
    parameters: []
  overload: System.Windows.UIElement3D.InvalidateModel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabled
  id: IsEnabled
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
  fullName: System.Windows.UIElement3D.IsEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得または設定でこの要素が有効になっているかどうかを示す値、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]です。"
  remarks: "このプロパティがクラスに固有の実装によって影響を受けることに注意してください<xref:System.Windows.UIElement3D.IsEnabledCore%2A>、特定の要素、実行時に多くの場合</xref:System.Windows.UIElement3D.IsEnabledCore%2A>。 したがって、ここで示されている既定値がありますいない効果的です。 この値を設定しようとしても可能性があるとオーバーライドされます<xref:System.Windows.UIElement3D.IsEnabledCore%2A>.</xref:System.Windows.UIElement3D.IsEnabledCore%2A>によって返される値       有効になっていない要素は、ヒット テストやフォーカスに参加していないと、そのため、入力イベントのソースはできません。       IsEnabled は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsEnabled&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsEnabledProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsEnabledProperty>"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledChanged
  id: IsEnabledChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledChanged
  nameWithType: UIElement3D.IsEnabledChanged
  fullName: System.Windows.UIElement3D.IsEnabledChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsEnabled*>プロパティをこの要素を変更します</xref:System.Windows.UIElement3D.IsEnabled*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsEnabledChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
  fullName: System.Windows.UIElement3D.IsEnabledCore
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "戻り値になる値を取得<xref:System.Windows.UIElement3D.IsEnabled*>派生クラス</xref:System.Windows.UIElement3D.IsEnabled*>。"
  remarks: "IsEnabledCore は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: UIElement3D.IsEnabledProperty
  fullName: System.Windows.UIElement3D.IsEnabledProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsEnabled*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsEnabled*>。"
  remarks: "IsEnabledProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsFocused
  id: IsFocused
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
  fullName: System.Windows.UIElement3D.IsFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素に論理フォーカスがあるかどうかを決定する値を取得します。"
  remarks: "アプリケーションは、複数のフォーカス区分をなど、メニューの内容と、アプリケーションの残りの部分の間に、キーボード フォーカスから論理フォーカスが異なる場合があります。 このシナリオでは、アプリケーションの UI の&1; つの要素にキーボード フォーカスが設定できるだけ、ただし、他のフォーカス区分の特定の要素も保持したまま論理フォーカスします。 論理フォーカスの詳細については、次を参照してください。[フォーカス概要](~/add/includes/ajax-current-ext-md.md)です。       (これは読み取り専用)、このプロパティを設定してフォーカスを設定しないとします。 このプロパティの典型的な使用は、<xref:System.Windows.Setter>または<xref:System.Windows.EventTrigger>。</xref:System.Windows.EventTrigger></xref:System.Windows.Setter>の依存関係プロパティとして使用するには フォーカスをプログラムで設定するには、呼び出す<xref:System.Windows.UIElement3D.Focus%2A>。</xref:System.Windows.UIElement3D.Focus%2A> ユーザーの操作によって、またはコントロールの実装は、マウスのキャプチャの動作を含む可能性が、フォーカスを設定もできます。       IsFocused は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsFocused&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsFocusedProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsFocusedProperty>"
  syntax:
    content: public bool IsFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素が論理フォーカスがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsFocusedProperty
  id: IsFocusedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsFocusedProperty
  nameWithType: UIElement3D.IsFocusedProperty
  fullName: System.Windows.UIElement3D.IsFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsFocused*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsFocused*>。"
  remarks: "IsFocusedProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisible
  id: IsHitTestVisible
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
  fullName: System.Windows.UIElement3D.IsHitTestVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得またはこの要素ができる、表示される内容の一部からヒット テストの結果として可能性のある返されるかどうかを示す値を設定します。"
  remarks: "このプロパティの有効な値は、ヒット テスト可能な要素の論理ツリー内の相対位置に影響されます。 たとえば、要素の子要素にある要素のないヒット テストの表示、子のプロパティの有効な値は残ります`false`場合でも、その値をローカルに設定しようとしています。 このため、ことが重要 IsHitTestVisible を設定しないでください`false`複合コントロールで任意の入力を必要またはそのコントロールのヒット テストしない限り、します。 ヒット テストの詳細については、次を参照してください。[ビジュアルの層でのテスト ヒット](~/add/includes/ajax-current-ext-md.md)です。       IsHitTestVisible は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsHitTestVisible&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>"
  syntax:
    content: public bool IsHitTestVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素は、少なくとも&1; つのポイント; からヒット テストの結果として返される可能性があります場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsHitTestVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged
  id: IsHitTestVisibleChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisibleChanged
  nameWithType: UIElement3D.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsHitTestVisible*>この要素に依存関係プロパティの変更</xref:System.Windows.UIElement3D.IsHitTestVisible*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsHitTestVisibleChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty
  id: IsHitTestVisibleProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsHitTestVisibleProperty
  nameWithType: UIElement3D.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsHitTestVisible*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsHitTestVisible*>。"
  remarks: "IsHitTestVisibleProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsInputMethodEnabled
  id: IsInputMethodEnabled
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
  fullName: System.Windows.UIElement3D.IsInputMethodEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力方式システムかどうかを示す値を取得など、 [!INCLUDE[TLA#tla_ime](~/add/includes/ajax-current-ext-md.md)]、この要素への入力の処理が有効になっています。"
  remarks: "添付プロパティによって返される値を返します<xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>現在有効な入力メソッドでは (キーボード、音声認識、他の入力デバイス).</xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=fullName>       IsInputMethodEnabled は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool IsInputMethodEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力方式がアクティブである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 基になる添付プロパティの既定値は<xref uid=&quot;langword_csharp_true;&quot; name=&quot;true;&quot; href=&quot;&quot;></xref>ただし、これが影響を受けること実行時に入力方式の実際の状態。"
  overload: System.Windows.UIElement3D.IsInputMethodEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocused
  id: IsKeyboardFocused
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
  fullName: System.Windows.UIElement3D.IsKeyboardFocused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキーボード フォーカスがあるかどうかを示す値を取得します。"
  remarks: "フォーカスに関連するイベントは、このプロパティの値への変更を伴うことができます。       IsKeyboardFocused と<xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>でよく使われるクラスのイベント ハンドラー内の他の入力に関連するイベント、インスタンスの要素にキーボード フォーカスは既にまたはときにマウスを決定するイベントとキーボード イベントが発生する組み合わせてかどうかを判断します</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>。       IsKeyboardFocused は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocused&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>"
  syntax:
    content: public bool IsKeyboardFocused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素がキーボード フォーカスがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsKeyboardFocused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  id: IsKeyboardFocusedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement3D.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsKeyboardFocused*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsKeyboardFocused*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsKeyboardFocusedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  id: IsKeyboardFocusedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement3D.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsKeyboardFocused*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsKeyboardFocused*>。"
  remarks: "IsKeyboardFocusedProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin
  id: IsKeyboardFocusWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "キーボード フォーカスが要素またはそのビジュアル ツリーの子要素内の任意の場所かどうかを示す値を取得します。"
  remarks: "このプロパティの値に変更が通常発生させる、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>イベント、派生クラスがオーバーライドしない限り、<xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A>を抑制する状況イベント</xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A></xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>。       このプロパティを直接設定しないが、要素にフォーカスを設定するには呼び出すことによって<xref:System.Windows.UIElement3D.Focus%2A>、またはすることにより、<xref:System.Windows.UIElement3D.MoveFocus%2A>要求</xref:System.Windows.UIElement3D.MoveFocus%2A></xref:System.Windows.UIElement3D.Focus%2A>。 このプロパティの値を変更これらのメソッド呼び出しのいずれかの可能性があります。       <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>IsKeyboardFocusWithin 用いられますクラスのイベント ハンドラー内で他の入力に関連するイベントのインスタンスの要素にキーボード フォーカスは既にまたはときにマウスを決定するイベントとキーボード イベントが発生する組み合わせてかどうかを判断します。</xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>       IsKeyboardFocusWithin は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsKeyboardFocusWithin&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>"
  syntax:
    content: public bool IsKeyboardFocusWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素またはその子要素にキーボード フォーカスがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsKeyboardFocusWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  id: IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsKeyboardFocusWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  id: IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin*>。"
  remarks: "IsKeyboardFocusWithinProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptured
  id: IsMouseCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
  fullName: System.Windows.UIElement3D.IsMouseCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にマウスがキャプチャされるかどうかを示す値を取得します。"
  remarks: "マウスのキャプチャ状態は、インプロセスのドラッグ アンド ドロップ操作に関連付けられます。       例は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsMouseCaptured&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsMouseCapturedProperty>"
  syntax:
    content: public bool IsMouseCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素がマウス キャプチャがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsMouseCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCapturedChanged
  id: IsMouseCapturedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCapturedChanged
  nameWithType: UIElement3D.IsMouseCapturedChanged
  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsMouseCaptured*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsMouseCaptured*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsMouseCapturedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCapturedProperty
  id: IsMouseCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCapturedProperty
  nameWithType: UIElement3D.IsMouseCapturedProperty
  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsMouseCaptured*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsMouseCaptured*>。"
  remarks: "IsMouseCapturedProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin
  id: IsMouseCaptureWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素またはそのビジュアル ツリー内の子要素にマウスのキャプチャを保持するかどうかを決定する値を取得します。"
  remarks: "IsMouseCaptureWithin は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsMouseCaptureWithin&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>"
  syntax:
    content: public bool IsMouseCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素または格納されている要素がマウス キャプチャを持つ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsMouseCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  id: IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement3D.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsMouseCaptureWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  id: IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement3D.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsMouseCaptureWithin*>。"
  remarks: "IsMouseCaptureWithinProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver
  id: IsMouseDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターの位置がヒット テストの結果は、要素の構成を考慮に対応しているかどうかを示す値を取得します。"
  remarks: "異なり<xref:System.Windows.UIElement3D.IsMouseOver%2A>、のみ、このプロパティは`true`literal 要素上にマウス ポインターが場合などはヒット テストの</xref:System.Windows.UIElement3D.IsMouseOver%2A> 代わりに子要素の上にマウス ポインターが場合、このプロパティがなります`false`です。 コントロールをいないオーサリングは、ほとんどのシナリオを使用して<xref:System.Windows.UIElement3D.IsMouseOver%2A>代わりにします</xref:System.Windows.UIElement3D.IsMouseOver%2A>。       かどうか、この要素にマウスがキャプチャされ、このプロパティは`true`のキャプチャ時に、このプロパティを返し続けます`true`までマウスのキャプチャが失われ、その境界上にポインターがありません。       IsMouseDirectlyOver は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsMouseDirectlyOver&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>"
  syntax:
    content: public bool IsMouseDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ヒット テストと同じ要素結果上にマウス ポインターが場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsMouseDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  id: IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement3D.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsMouseDirectlyOverChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  id: IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement3D.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsMouseDirectlyOver*>。"
  remarks: "IsMouseDirectlyOverProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseOver
  id: IsMouseOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
  fullName: System.Windows.UIElement3D.IsMouseOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素 (ビジュアル ツリー内の子要素を含む) 上にあるかどうかを示す値を取得します。"
  remarks: "通常、(ビジュアル ツリーを)、コントロール内のさまざまな要素はレポートすべてを含むコントロールに対してマウスの状態になるようコントロールは複合コントロール。 たとえば、<xref:System.Windows.Controls.ListBox>スタイルのコントロールとして IsMouseOver が報告されます`true`の geometry 上にマウスが任意の場所も含める場合は、 <xref:System.Windows.Controls.ListBoxItem>.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox>       類似しています&quot;IsMouseOverChanged&quot;イベントが存在しないいくつかの類似イベントを行います。 たとえば、処理<xref:System.Windows.UIElement3D.MouseEnter>、 <xref:System.Windows.UIElement3D.MouseMove>、 <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> </xref:System.Windows.UIElement3D.MouseMove> </xref:System.Windows.UIElement3D.MouseEnter>       この要素がマウスをキャプチャする場合に、このプロパティが残ります`true`マウスのキャプチャが失われ、マウス ポインターが要素の境界を離れるまでです。       一部のコントロールは、意図的がマウスに直接関係しない特定の操作上にマウス ポインターをキャプチャします。 IsMouseOver になるようにつながります`true`場合でも、マウスが移動明らかです。       IsMouseOver は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsMouseOver&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsMouseOverProperty>"
  syntax:
    content: public bool IsMouseOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マウス ポインターが要素またはその子要素の上にある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsMouseOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsMouseOverProperty
  id: IsMouseOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsMouseOverProperty
  nameWithType: UIElement3D.IsMouseOverProperty
  fullName: System.Windows.UIElement3D.IsMouseOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsMouseOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsMouseOver*>。"
  remarks: "IsMouseOverProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsMouseOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptured
  id: IsStylusCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
  fullName: System.Windows.UIElement3D.IsStylusCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素によってスタイラスがキャプチャされるかどうかを示す値を取得します。"
  remarks: "タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       IsStylusCaptured は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsStylusCaptured&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsStylusCapturedProperty>"
  syntax:
    content: public bool IsStylusCaptured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素がスタイラス キャプチャを持つ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsStylusCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCapturedChanged
  id: IsStylusCapturedChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCapturedChanged
  nameWithType: UIElement3D.IsStylusCapturedChanged
  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsStylusCaptured*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsStylusCaptured*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsStylusCapturedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCapturedProperty
  id: IsStylusCapturedProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCapturedProperty
  nameWithType: UIElement3D.IsStylusCapturedProperty
  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsStylusCaptured*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsStylusCaptured*>。"
  remarks: "IsStylusCapturedProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin
  id: IsStylusCaptureWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスをキャプチャするかどうかを決定する値の保持してこの要素または要素の境界とそのビジュアル ツリー内の要素を取得します。"
  remarks: "タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       IsStylusCaptureWithin は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsStylusCaptureWithin&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>"
  syntax:
    content: public bool IsStylusCaptureWithin { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この要素または格納されている要素がスタイラス キャプチャを持つ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsStylusCaptureWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  id: IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement3D.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>。"
  remarks: "これは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsStylusCaptureWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  id: IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement3D.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsStylusCaptureWithin*>。"
  remarks: "IsStylusCaptureWithinProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver
  id: IsStylusDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスの位置がヒット テストの結果は、要素の構成を考慮に対応しているかどうかを示す値を取得します。"
  remarks: "異なり<xref:System.Windows.UIElement3D.IsStylusOver%2A>、のみ、このプロパティは`true`要素の上にスタイラスがある場合</xref:System.Windows.UIElement3D.IsStylusOver%2A>。 スタイラスが代わりに子要素上、または要素は要素のより深い複合 (ビジュアル ツリー) の一部である場合、このプロパティはなって`false`です。       コントロールは合成する方法がわかっていなければ (たとえば、プロパティを使用するこのカスタム コントロール テンプレートで定義したコントロールの)、このプロパティは、予期しない結果を返す可能性があります。 コントロールをいないオーサリングは、ほとんどのシナリオを使用して<xref:System.Windows.UIElement3D.IsStylusOver%2A>代わりにします</xref:System.Windows.UIElement3D.IsStylusOver%2A>。       この要素がスタイラス キャプチャを持つプロパティは、この場合`true`のキャプチャ時に、このプロパティの値`true`までスタイラスのキャプチャが失われ、その境界上にスタイラスがありません。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       IsStylusDirectlyOver は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsStylusDirectlyOver&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>"
  syntax:
    content: public bool IsStylusDirectlyOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタイラス ポインターがヒット テストと同じ要素結果の上にある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsStylusDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  id: IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement3D.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsStylusDirectlyOverChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  id: IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement3D.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsStylusDirectlyOver*>。"
  remarks: "IsStylusDirectlyOverProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusOver
  id: IsStylusOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
  fullName: System.Windows.UIElement3D.IsStylusOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスのカーソルがこの要素 (子ビジュアル要素を含む) 上にあるかどうかを示す値を取得します。"
  remarks: "この要素にスタイラスのキャプチャがある場合は、このプロパティは返す引き続き`true`スタイラスのキャプチャが失われ、ポインターがその範囲外になるまでです。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       IsStylusOver は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsStylusOver&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsStylusOverProperty>"
  syntax:
    content: public bool IsStylusOver { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタイラスのカーソルが要素またはその子要素の上にある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsStylusOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsStylusOverProperty
  id: IsStylusOverProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsStylusOverProperty
  nameWithType: UIElement3D.IsStylusOverProperty
  fullName: System.Windows.UIElement3D.IsStylusOverProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsStylusOver*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsStylusOver*>。"
  remarks: "IsStylusOverProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsStylusOverProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisible
  id: IsVisible
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
  fullName: System.Windows.UIElement3D.IsVisible
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素をで表示するかどうかを示す値を取得、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]です。"
  remarks: "IsVisible 値の決定は、多くの要因は考慮します。 これに対し、 <xref:System.Windows.UIElement3D.Visibility%2A>、プログラムによって、要素を表示または非表示の目的は、これは、設定可能なプロパティのみを示します</xref:System.Windows.UIElement3D.Visibility%2A>。       このプロパティの値に変更が通常発生、<xref:System.Windows.UIElement3D.IsVisibleChanged>イベント</xref:System.Windows.UIElement3D.IsVisibleChanged>。 一致がない[!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)]&quot;で *&quot;動作をオーバーライドし、イベントを処理するクラスを派生一部クラス処理を可能にするオーバーライド メソッドが、クラス ハンドラーを<xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>と直接まだアタッチできませんでした       要素の IsVisible は`false`いない入力イベント (またはコマンド) に参加での操作を行っていないか、メジャーに影響を与えるまたは配置レイアウトのパス、フォーカスを設定していない、タブ シーケンスに含まれないおよびヒット テストで報告されません。 要素とは異なり、ここで<xref:System.Windows.UIElement3D.IsEnabled%2A>は`false`イベントおよびコマンド、およびヒット テストには参加してこれにフォーカスを設定します</xref:System.Windows.UIElement3D.IsEnabled%2A>。       IsVisible は、スタイルのトリガーとして使用するものではありません。 スタイルのトリガーとして IsVisible を使用すると、予期しない結果があります。 IsVisible は低いレベルの入力実装により、確認の状態のものです。       IsVisible は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_IsVisible&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.IsVisibleProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.IsVisibleProperty>"
  syntax:
    content: public bool IsVisible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素を表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisibleChanged
  id: IsVisibleChanged
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisibleChanged
  nameWithType: UIElement3D.IsVisibleChanged
  fullName: System.Windows.UIElement3D.IsVisibleChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生したときの値、<xref:System.Windows.UIElement3D.IsVisible*>この要素でプロパティが変更された</xref:System.Windows.UIElement3D.IsVisible*>。"
  remarks: "このメンバーは、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]イベントは、ルーティングされたイベントではありません。       IsVisibleChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;
    return:
      type: System.Windows.DependencyPropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.IsVisibleProperty
  id: IsVisibleProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: IsVisibleProperty
  nameWithType: UIElement3D.IsVisibleProperty
  fullName: System.Windows.UIElement3D.IsVisibleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.IsVisible*>依存関係プロパティ</xref:System.Windows.UIElement3D.IsVisible*>。"
  remarks: "IsVisibleProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsVisibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyDown
  id: KeyDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyDown
  nameWithType: UIElement3D.KeyDown
  fullName: System.Windows.UIElement3D.KeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキーボードのフォーカスがある状態でキーが押されると発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>KeyDown が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>。 KeyDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName>。       KeyDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_KeyDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.KeyDownEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.KeyEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewKeyDown>.</xref:System.Windows.UIElement3D.PreviewKeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.KeyDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnKeyDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnKeyDown%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyDownEvent
  id: KeyDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyDownEvent
  nameWithType: UIElement3D.KeyDownEvent
  fullName: System.Windows.UIElement3D.KeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.KeyDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       KeyDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyUp
  id: KeyUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyUp
  nameWithType: UIElement3D.KeyUp
  fullName: System.Windows.UIElement3D.KeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキーボードのフォーカスがある状態でキーが離されると発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>KeyUp が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>。 KeyUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName>。       KeyUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_KeyUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.KeyUpEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.KeyEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewKeyUp>.</xref:System.Windows.UIElement3D.PreviewKeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.KeyUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnKeyUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnKeyUp%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.KeyUpEvent
  id: KeyUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: KeyUpEvent
  nameWithType: UIElement3D.KeyUpEvent
  fullName: System.Windows.UIElement3D.KeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.KeyUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       KeyUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent KeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostFocus
  id: LostFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostFocus
  nameWithType: UIElement3D.LostFocus
  fullName: System.Windows.UIElement3D.LostFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素が論理フォーカスを失ったときに発生します。"
  remarks: "フォーカスが意図的に外してメソッド呼び出しを使用しているにもかかわらず直前のキーボード フォーカスが別のスコープに存在する場合、論理フォーカスはキーボード フォーカスとは異なります。 ここでは、キーボード フォーカスは残りますが、および要素の位置、<xref:System.Windows.UIElement3D.Focus%2A>メソッドが呼び出されたが論理フォーカスを取得します</xref:System.Windows.UIElement3D.Focus%2A>。       このイベントをより正確に解釈というものが発生したときの値、<xref:System.Windows.UIElement3D.IsFocused%2A>からルート内の要素のプロパティが変更される`true`に`false`</xref:System.Windows.UIElement3D.IsFocused%2A>。       このイベントは、バブル ルーティングを使用するため、フォーカスを失った要素は、イベント ハンドラーが実際に添付されている、要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスを得られる実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       LostFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_LostFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.LostFocusEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.RoutedEventHandler>|     イベントはありません対応するトンネリング</xref:System.Windows.RoutedEventHandler></xref:System.Windows.UIElement3D.LostFocusEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnLostFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnLostFocus%2A>。"
  syntax:
    content: public event System.Windows.RoutedEventHandler LostFocus;
    return:
      type: System.Windows.RoutedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: UIElement3D.LostFocusEvent
  fullName: System.Windows.UIElement3D.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       LostFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostKeyboardFocus
  id: LostKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostKeyboardFocus
  nameWithType: UIElement3D.LostKeyboardFocus
  fullName: System.Windows.UIElement3D.LostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "キーボードは、この要素にフォーカスが離れたときに発生します。"
  remarks: "このイベントは、バブル ルーティングを使用するため、フォーカスを失った要素は、イベント ハンドラーが実際に添付されている、要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスが失われた実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>LostKeyboardFocus が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>。 LostKeyboardFocus イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName>。       LostKeyboardFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_LostKeyboardFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.</xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent
  id: LostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostKeyboardFocusEvent
  nameWithType: UIElement3D.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.LostKeyboardFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       LostKeyboardFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostMouseCapture
  id: LostMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostMouseCapture
  nameWithType: UIElement3D.LostMouseCapture
  fullName: System.Windows.UIElement3D.LostMouseCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素がマウス キャプチャを失ったときに発生します。"
  remarks: "要素がマウスをキャプチャは、境界外にポインターがあってもマウス入力を受け取ります。 マウスは通常、ドラッグ アンド ドロップ操作中にのみキャプチャされます。       このイベントは、バブル ルーティングを使用するため、キャプチャを失った要素は、イベント ハンドラーが実際に添付されている、要素ではなく子要素である可能性があります。 チェック、 <xref:System.Windows.RoutedEventArgs.Source%2A>、イベント データをキャプチャを失った、実際の要素を決定します</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>LostMouseCapture が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>。 LostMouseCapture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>。       LostMouseCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_LostMouseCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     -、定義済みの対応するトンネリング イベントはありません</xref:System.Windows.Input.MouseEventHandler></xref:System.Windows.UIElement3D.LostMouseCaptureEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnLostMouseCapture%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler LostMouseCapture;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostMouseCaptureEvent
  id: LostMouseCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostMouseCaptureEvent
  nameWithType: UIElement3D.LostMouseCaptureEvent
  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.LostMouseCapture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       LostMouseCaptureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostStylusCapture
  id: LostStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostStylusCapture
  nameWithType: UIElement3D.LostStylusCapture
  fullName: System.Windows.UIElement3D.LostStylusCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素がスタイラス キャプチャを失ったときに発生します。"
  remarks: "要素がスタイラスをキャプチャ、ときに、ポインターが境界外にある場合でも、スタイラス入力を受け取ります。 スタイラスは通常、ドラッグ アンド ドロップ操作中にのみキャプチャされます。       このイベントは、バブル ルーティングを使用するため、フォーカスを失った要素は、イベント ハンドラーが実際に添付されている、要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスが失われた実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>LostStylusCapture が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>。 LostStylusCapture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName>。       LostStylusCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_LostStylusCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     -、定義済みの対応するトンネリング イベントはありません</xref:System.Windows.Input.StylusEventHandler></xref:System.Windows.UIElement3D.LostStylusCaptureEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnLostStylusCapture%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler LostStylusCapture;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostStylusCaptureEvent
  id: LostStylusCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostStylusCaptureEvent
  nameWithType: UIElement3D.LostStylusCaptureEvent
  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.LostStylusCapture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       LostStylusCaptureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostTouchCapture
  id: LostTouchCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostTouchCapture
  nameWithType: UIElement3D.LostTouchCapture
  fullName: System.Windows.UIElement3D.LostTouchCapture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素は、タッチのキャプチャを失ったときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_LostTouchCapture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     -オーバーライド<xref:System.Windows.UIElement3D.OnLostTouchCapture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnLostTouchCapture%2A></xref:System.Windows.Input.TouchEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement3D.LostTouchCaptureEvent>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> LostTouchCapture;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.LostTouchCaptureEvent
  id: LostTouchCaptureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: LostTouchCaptureEvent
  nameWithType: UIElement3D.LostTouchCaptureEvent
  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.LostTouchCapture&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseDown
  id: MouseDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseDown
  nameWithType: UIElement3D.MouseDown
  fullName: System.Windows.UIElement3D.MouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にポインターが、任意のマウス ボタンが押されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>MouseDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。 MouseDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。       いずれかと共に MouseDown イベントが発生した多くの場合、<xref:System.Windows.UIElement3D.MouseLeftButtonDown>または<xref:System.Windows.UIElement3D.MouseRightButtonDown>、2 つの標準のマウス ボタンのいずれかのキーを押してに対応する</xref:System.Windows.UIElement3D.MouseRightButtonDown></xref:System.Windows.UIElement3D.MouseLeftButtonDown>。 <xref:System.Windows.UIElement3D.MouseLeftButtonDown><xref:System.Windows.UIElement3D.MouseRightButtonDown>も、ルーティング イベントをしています直接ルーティング イベントを適切なボタンに固有のイベントが発生したときに、<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント イベント ルート上には、この要素に到達します</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D.MouseRightButtonDown>。</xref:System.Windows.UIElement3D.MouseLeftButtonDown> <xref:System.Windows.UIElement3D.MouseLeftButtonDown>または<xref:System.Windows.UIElement3D.MouseRightButtonDown>.</xref:System.Windows.UIElement3D.MouseRightButtonDown></xref:System.Windows.UIElement3D.MouseLeftButtonDown>の「解説」を参照してください      > [!IMPORTANT] > 一部のコントロールに固有のクラスのマウス ボタンのイベント処理を必要があります。 イベントをマウスの左ボタンは、クラス、コントロールで処理が最も可能性の高いイベントです。 多くの場合、処理するクラスは、基になるをマーク<xref:System.Windows.Input.Mouse>クラス イベントを処理します</xref:System.Windows.Input.Mouse>。 イベントが処理済みとマークされるとその要素に関連付けられている他のインスタンス ハンドラーは通常は発生しません。 その他のクラスまたはインスタンス ハンドラー、バブルに向かう方向 UI ツリーのルート内の要素に関連付けられている通常も発生します。       前の「重要に記載されているしマウスの左ボタンを押すをこれらのソリューションのいずれかを使用処理するクラスを持つ派生クラスでイベント MouseDown イベントいる問題を解決することができます:-ハンドラーのアタッチ、<xref:System.Windows.UIElement3D.PreviewMouseDown>コントロールによって処理済みとしてマークされていないイベント</xref:System.Windows.UIElement3D.PreviewMouseDown>。 これはプレビュー イベントであるため、ルート ルートから始まり、トンネルをコントロールに注意してください。      -ハンドラーを登録コントロールの手続きを呼び出して<xref:System.Windows.UIElement3D.AddHandler%2A>ハンドラーにルーティングされたイベント データの処理済みとしてマークされている場合でも、イベントをリッスンできる署名オプションを選択します</xref:System.Windows.UIElement3D.AddHandler%2A>。       MouseDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseDownEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewMouseDown>.</xref:System.Windows.UIElement3D.PreviewMouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnMouseDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseDown%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseDownEvent
  id: MouseDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseDownEvent
  nameWithType: UIElement3D.MouseDownEvent
  fullName: System.Windows.UIElement3D.MouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseEnter
  id: MouseEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseEnter
  nameWithType: UIElement3D.MouseEnter
  fullName: System.Windows.UIElement3D.MouseEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素の境界に入ったときに発生します。"
  remarks: "MouseEnter、[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)直接イベント ルーティング方法の処理を使用します。 ルート; 直接ルーティングされたイベントは発生しません代わりが処理される同じ要素では、発生します。       MouseEnter を追跡、マウス ポインターが要素の境界に入ったときに、このイベントより文字どおりを報告している、<xref:System.Windows.UIElement3D.IsMouseOver%2A>からプロパティ値が変更された`false`に`true`この要素上です</xref:System.Windows.UIElement3D.IsMouseOver%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>MouseEnter が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>。 MouseEnter イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>。       MouseEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseEnter&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseEnterEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseEnter%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseEnter%2A></xref:System.Windows.Input.MouseEventHandler></xref:System.Windows.UIElement3D.MouseEnterEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseEnter;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseEnterEvent
  id: MouseEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseEnterEvent
  nameWithType: UIElement3D.MouseEnterEvent
  fullName: System.Windows.UIElement3D.MouseEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseEnter&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseEnterEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeave
  id: MouseLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeave
  nameWithType: UIElement3D.MouseLeave
  fullName: System.Windows.UIElement3D.MouseLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素の境界から出たときに発生します。"
  remarks: "MouseLeave は、[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)直接イベント ルーティング方法の処理を使用します。 ルート; 直接ルーティングされたイベントは発生しません代わりが処理される同じ要素では、発生します。       MouseLeave を追跡、マウスが要素を離れると、このイベントより文字どおりを報告している、<xref:System.Windows.UIElement3D.IsMouseOver%2A>からプロパティ値が変更された`true`に`false`この要素上です</xref:System.Windows.UIElement3D.IsMouseOver%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>MouseLeave が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>。 MouseLeave イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>。       MouseLeave は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseLeave&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseLeave%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseLeave%2A></xref:System.Windows.Input.MouseEventHandler></xref:System.Windows.UIElement3D.MouseLeaveEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseLeave;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeaveEvent
  id: MouseLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeaveEvent
  nameWithType: UIElement3D.MouseLeaveEvent
  fullName: System.Windows.UIElement3D.MouseLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseLeave&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseLeaveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonDown
  id: MouseLeftButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonDown
  nameWithType: UIElement3D.MouseLeftButtonDown
  fullName: System.Windows.UIElement3D.MouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの左ボタンが押されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてバブルのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントのいずれかの<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 MouseLeftButtonDown をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。 これは、可能性のある<xref:System.Windows.Controls.Control.MouseDoubleClick>。</xref:System.Windows.Controls.Control.MouseDoubleClick>などのクラス ハンドラーが生成されたイベントが含まれています       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>      > [!IMPORTANT] > クラス処理を多くの場合、マーク、基になる<xref:System.Windows.Input.Mouse>クラス イベントを処理します</xref:System.Windows.Input.Mouse>。 イベントが処理済みとマークされるとその要素に関連付けられている他のインスタンス ハンドラーは通常は発生しません。 その他のクラスまたはインスタンス ハンドラー、バブルに向かう方向 UI ツリーのルート内の要素に関連付けられている通常も発生します。       前の「重要に記載されているしマウスの左ボタンを押すをこれらのソリューションのいずれかを使用処理するクラスを持つ派生クラスでイベント MouseLeftButtonDown イベントいる問題を解決することができます:-ハンドラーのアタッチ、<xref:System.Windows.UIElement3D.PreviewMouseDown>コントロールによって処理済みとしてマークされていないイベント</xref:System.Windows.UIElement3D.PreviewMouseDown>。 これはプレビュー イベントであるため、ルート ルートから始まり、トンネルをコントロールに注意してください。      -ハンドラーを登録コントロールの手続きを呼び出して<xref:System.Windows.UIElement3D.AddHandler%2A>ハンドラーにルーティングされたイベント データの処理済みとしてマークされている場合でも、イベントをリッスンできる署名オプションを選択します</xref:System.Windows.UIElement3D.AddHandler%2A>。       MouseLeftButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseLeftButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  id: MouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement3D.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseLeftButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonUp
  id: MouseLeftButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonUp
  nameWithType: UIElement3D.MouseLeftButtonUp
  fullName: System.Windows.UIElement3D.MouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの左ボタンが離されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてバブルのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 MouseLeftButtonUp をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       MouseLeftButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseLeftButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  id: MouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement3D.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseLeftButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseMove
  id: MouseMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseMove
  nameWithType: UIElement3D.MouseMove
  fullName: System.Windows.UIElement3D.MouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素上にマウス ポインターが移動したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>MouseMove が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>。 MouseMove イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>。       MouseMove は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseMoveEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewMouseMove>.</xref:System.Windows.UIElement3D.PreviewMouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.MouseMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnMouseMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseMove%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseMoveEvent
  id: MouseMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseMoveEvent
  nameWithType: UIElement3D.MouseMoveEvent
  fullName: System.Windows.UIElement3D.MouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonDown
  id: MouseRightButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonDown
  nameWithType: UIElement3D.MouseRightButtonDown
  fullName: System.Windows.UIElement3D.MouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの右ボタンが押されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてバブルのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントのいずれかの<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 MouseRightButtonDown をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。 これは、可能性のある<xref:System.Windows.Controls.Control.MouseDoubleClick>。</xref:System.Windows.Controls.Control.MouseDoubleClick>などのクラス ハンドラーが生成されたイベントが含まれています       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       右ボタンをマウス イベントは、アプリケーション シナリオでネイティブの処理を頻繁にあります。 たとえば、マウスの右ボタンを押すは、コンテキスト メニューを表示する可能性があります。 参照してください[ContextMenu 概要](~/add/includes/ajax-current-ext-md.md)です。       MouseRightButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseRightButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent
  id: MouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonDownEvent
  nameWithType: UIElement3D.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseRightButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonUp
  id: MouseRightButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonUp
  nameWithType: UIElement3D.MouseRightButtonUp
  fullName: System.Windows.UIElement3D.MouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの右ボタンが離されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてバブルのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 MouseRightButtonUp をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>経路、リスナーのすべてにさらに処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       MouseRightButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseRightButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent
  id: MouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseRightButtonUpEvent
  nameWithType: UIElement3D.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseRightButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseRightButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseUp
  id: MouseUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseUp
  nameWithType: UIElement3D.MouseUp
  fullName: System.Windows.UIElement3D.MouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素上で任意のマウス ボタンが離されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>MouseUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。 MouseUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>。       いずれかと共に MouseUp イベントが発生した多くの場合、<xref:System.Windows.UIElement3D.MouseLeftButtonUp>または<xref:System.Windows.UIElement3D.MouseRightButtonUp>、2 つの標準のマウス ボタンのいずれかのリリースに対応する</xref:System.Windows.UIElement3D.MouseRightButtonUp></xref:System.Windows.UIElement3D.MouseLeftButtonUp>。 <xref:System.Windows.UIElement3D.MouseLeftButtonUp><xref:System.Windows.UIElement3D.MouseRightButtonUp>も、ルーティング イベントをしています直接ルーティング イベントを適切なボタンに固有のイベントが発生したときに、<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>イベント イベント ルート上には、この要素に到達します</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D.MouseRightButtonUp>。</xref:System.Windows.UIElement3D.MouseLeftButtonUp> <xref:System.Windows.UIElement3D.MouseLeftButtonUp>または<xref:System.Windows.UIElement3D.MouseRightButtonUp>。</xref:System.Windows.UIElement3D.MouseRightButtonUp></xref:System.Windows.UIElement3D.MouseLeftButtonUp>の「解説」を参照してください       MouseUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseUpEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewMouseUp>.</xref:System.Windows.UIElement3D.PreviewMouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.MouseUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnMouseUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseUp%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler MouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseUpEvent
  id: MouseUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseUpEvent
  nameWithType: UIElement3D.MouseUpEvent
  fullName: System.Windows.UIElement3D.MouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseWheel
  id: MouseWheel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseWheel
  nameWithType: UIElement3D.MouseWheel
  fullName: System.Windows.UIElement3D.MouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にマウス ポインターが、ユーザーがマウスのホイールを回転させるときに発生します。"
  remarks: "フォーカスまたはマウスのキャプチャ、マウス ポインターが; よりも優先します。このため、対象を絞ったまたはキャプチャした要素からマウス ホイールのイベントを受信する場合、マウス ポインター実際にあります別の要素上です。       このイベントのエイリアスを作成する、<xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>マウス ホイールが一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>。 マウス ホイールのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>。       マウス ホイールが .NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_MouseWheel&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.MouseWheelEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.MouseWheelEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewMouseWheel>.</xref:System.Windows.UIElement3D.PreviewMouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement3D.MouseWheelEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnMouseWheel%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnMouseWheel%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler MouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MouseWheelEvent
  id: MouseWheelEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MouseWheelEvent
  nameWithType: UIElement3D.MouseWheelEvent
  fullName: System.Windows.UIElement3D.MouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.MouseWheel&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       MouseWheelEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  id: MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement3D.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素から別の要素にフォーカスを移動しようとしています。 ガイダンスの方向になり、この要素のビジュアルの親の組織内で解釈されますが、フォーカスを移動する方向を指定します。"
  remarks: "このメソッドの戻り値を確認してください。 戻り値の`false`コントロールの構成で定義されているタブ ストップの検査を実行し、走査の各要求はラップを要求していないかどうかに返される可能性があります。       MoveFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "走査の各要求を視覚的に移動するには、既存のタブ オーダーまたはを方向を走査するモードにはいずれかを示すプロパティが含まれています。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要求された検査が実行された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.MoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  id: OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "呼び出されるときはこの要素の意味のあるアクセス キーのクラス処理を提供します。"
  remarks: "実際の AccessKey イベントではありません、<xref:System.Windows.UIElement3D>クラス、または別の場所を上げたり下げたりするアタッチするハンドラーのデータ型</xref:System.Windows.UIElement3D> 専用マネージャー クラスを使用して、イベントの代わりに、発生元が<xref:System.Windows.Input.AccessKeyManager>、後に入力モデル全体に適用されるアクセス キーを検索するすべての入力を処理する</xref:System.Windows.Input.AccessKeyManager>。       OnAccessKey は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.AccessKeyEventArgs
      description: "アクセス キー イベントをイベントのデータ。 イベント データ レポートがどのキーが呼び出され、指定するかどうか、 <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref>も、これらのイベントの送信を制御するオブジェクトは他の要素にこのアクセス キーの呼び出しを送信します。"
  overload: System.Windows.UIElement3D.OnAccessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: UIElement3D.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "特定のクラスを返します<xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;></xref>の実装、[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]インフラストラクチャです。"
  remarks: "OnCreateAutomationPeer は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "型固有<xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;></xref>実装します。"
  overload: System.Windows.UIElement3D.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  id: OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.DragEnter?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  id: OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.DragLeave?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  id: OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.DragOver?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  id: OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement3D.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.Drop?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.GiveFeedback?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "<xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  id: OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生させる、 <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref>渡されたイベント データを使用して、ルーティングされたイベント。"
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. The OnGotFocus implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event.  \n  \n OnGotFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>イベント データを格納します。 このイベント データの識別子を含める必要があります、 <xref href=&quot;System.Windows.UIElement3D.GotFocus&quot;> </xref>イベント。"
  overload: System.Windows.UIElement3D.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnGotMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnGotStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnGotStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.GotTouchCapture&quot;> </xref>タッチがこの要素にキャプチャされるときに発生するイベントをルーティングします。"
  remarks: "OnGotTouchCapture メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnGotTouchCapture、<xref:System.Windows.UIElement3D.GotTouchCapture>イベント</xref:System.Windows.UIElement3D.GotTouchCapture>。 必ずメソッドを呼び出して、基底クラスの OnGotTouchCapture 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnGotTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsKeyboardFocusedChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>依存関係プロパティの変更</xref:System.Windows.UIElement3D.IsKeyboardFocused%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>。 注意して、<xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>イベントは、ルーティングされたイベントではありません</xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsKeyboardFocusedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "直前に呼び出される、 <xref href=&quot;System.Windows.UIElement3D.IsKeyboardFocusWithinChanged&quot;> </xref>イベントは、この要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>。 注意して、<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>イベントは、ルーティングされたイベントではありません</xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsKeyboardFocusWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsMouseCapturedChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsMouseCaptured%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsMouseCaptured%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsMouseCapturedChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsMouseCapturedChanged>。 注意して、<xref:System.Windows.UIElement3D.IsMouseCapturedChanged>イベントは、ルーティングされたイベントではありません</xref:System.Windows.UIElement3D.IsMouseCapturedChanged>。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsMouseCapturedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsMouseCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsMouseCaptureWithinChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "OnIsMouseCaptureWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsMouseDirectlyOverChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>。 注意して、<xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>イベントは、ルーティングされたイベントではありません</xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsMouseDirectlyOverChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsStylusCapturedChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsStylusCaptured%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsStylusCaptured%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsStylusCapturedChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsStylusCapturedChanged>。 イベントがルーティングされたイベントではないことに注意してください。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsStylusCapturedChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsStylusCapturedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsStylusCaptureWithinChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged>。 イベントがルーティングされたイベントではないことに注意してください。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsStylusCaptureWithinChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.IsStylusDirectlyOverChanged&quot;></xref>イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "この仮想メソッドを呼び出すときの値、<xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A>依存関係プロパティの値が変更されます</xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A>。 仮想メソッドでは、最初に呼び出され、必要に応じて、イベント データを操作できます。 続いて、<xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged>同じイベント データ インスタンスをイベントが発生します</xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged>。 イベントがルーティングされたイベントではないことに注意してください。 そのため、クラス ハンドラーで処理されるようにマークすることはできません。       このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       OnIsStylusDirectlyOverChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyDown is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Keystrokes are handled by a dedicated input manager. Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke. If these input system features mark the event as handled, then OnKeyUp is not invoked.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  id: OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "発生させる、 <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref>提供されているイベント データを使用して、ルーティングされたイベント。"
  remarks: "This method, although virtual, does have a default implementation that raises the event.  \n  \n This On* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement3D.IsFocused%2A> property value changes. This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] On\\* implementations, which only provide a convenient way to add class handling for that event.  \n  \n OnLostFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>イベント データを格納します。 このイベント データの識別子を含める必要があります、 <xref href=&quot;System.Windows.UIElement3D.LostFocus&quot;> </xref>イベント。"
  overload: System.Windows.UIElement3D.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  id: OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostMouseCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnLostMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  id: OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnLostStylusCapture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnLostStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  id: OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラス処理を提供、 <xref href=&quot;System.Windows.UIElement3D.LostTouchCapture&quot;> </xref>ルーティング イベントにこの要素は、タッチのキャプチャを失ったときに発生します。"
  remarks: "OnLostTouchCapture メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnLostTouchCapture、<xref:System.Windows.UIElement3D.LostTouchCapture>イベント</xref:System.Windows.UIElement3D.LostTouchCapture>。 必ず、基底クラスがイベントを受信できるように、基本クラスの OnLostTouchCapture メソッドを呼び出してください。"
  syntax:
    content: protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnLostTouchCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> event as handled, OnMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> and <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 このイベント データは、押されたマウス ボタンおよび処理済みの状態に関する詳細を報告します。"
  overload: System.Windows.UIElement3D.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  id: OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName&gt;添付イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       このメソッドの目的がに似ていますが、[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]でのイベント パターン * メソッド: このメソッドは、インスタンス ハンドラーではなく、クラス ハンドラーを確立することによって派生クラスからの一致するイベントを処理するための手段を提供します。 ここでは、照合イベントは、直接ルーティング戦略のルーティング イベントです。 標準的なインスタンス ハンドラーでも役立ちますが、イベントを処理済みとしてマーク (が指定されていないもの`handledEventsToo`) が呼び出されているからです。       OnMouseEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  id: OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName&gt;添付イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       このメソッドの目的がに似ていますが、[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]でのイベント パターン * メソッド: このメソッドは、インスタンス ハンドラーではなく、クラス ハンドラーを確立することによって派生クラスからの一致するイベントを処理するための手段を提供します。 ここでは、照合イベントは、直接ルーティング戦略のルーティング イベントです。 標準的なインスタンス ハンドラーでも役立ちますが、イベントを処理済みとしてマーク (が指定されていないもの`handledEventsToo`) が呼び出されているからです。       OnMouseLeave は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonDown&quot;></xref>ルーティング イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.MouseLeftButtonDown>イベントをバブルの経路を通るが表示されますが、間接的な方法で実際に移動します</xref:System.Windows.UIElement3D.MouseLeftButtonDown>。 <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>ルーティングと、バブルを基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.MouseLeftButtonDown>。</xref:System.Windows.UIElement3D.MouseLeftButtonDown>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.MouseLeftButtonDown>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.MouseLeftButtonDown>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnMouseLeftButtonDown をオーバーライドすることで</xref:System.Windows.UIElement3D>。       また、特定のマウスの状態のイベント処理を変更するために、このメソッドをオーバーライドできます。 基本実装を呼び出すを選択するかどうかは、シナリオによって異なります。 呼び出しに失敗すると、OnMouseLeftButtonDown を起動しようとしても親クラスでは、そのマウス イベントの既定の入力処理が無効にします。 派生したなどの<xref:System.Windows.Controls.Button>基本実装を呼び出さずに派生クラスでオーバーライドして OnMouseLeftButtonDown ですただし、これをオーバーライドを無効にし、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベント。</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button> 。       OnMouseLeftButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの左ボタンが押されたことを報告します。"
  overload: System.Windows.UIElement3D.OnMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.MouseLeftButtonUp&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.MouseLeftButtonUp>イベントをバブルの経路を通るが表示されますが、間接的な方法で実際に移動します</xref:System.Windows.UIElement3D.MouseLeftButtonUp>。 <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>ルーティングと、バブルを基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.MouseLeftButtonUp>。</xref:System.Windows.UIElement3D.MouseLeftButtonUp>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.MouseLeftButtonUp>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.MouseLeftButtonUp>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnMouseLeftButtonUp をオーバーライドすることで</xref:System.Windows.UIElement3D>。       OnMouseLeftButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの左ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.MouseRightButtonDown&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.MouseRightButtonDown>イベントをバブルの経路を通るが表示されますが、間接的な方法で実際に移動します</xref:System.Windows.UIElement3D.MouseRightButtonDown>。 <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>ルーティングと、バブルを基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.MouseRightButtonDown>。</xref:System.Windows.UIElement3D.MouseRightButtonDown>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.MouseRightButtonDown>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.MouseRightButtonDown>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>。</xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnMouseRightButtonDown をオーバーライドすることで</xref:System.Windows.UIElement3D>。       また、特定のマウスの状態のイベント処理を変更するために、このメソッドをオーバーライドできます。 基本実装を呼び出すを選択するかどうかは、シナリオによって異なります。 呼び出しに失敗すると、OnMouseRightButtonDown を起動しようとしても親クラスでは、そのマウス イベントの既定の入力処理が無効にします。 たとえばから派生できます<xref:System.Windows.Controls.Control>呼び出しベースせず派生クラスでオーバーライドして OnMouseRightButtonDown ですただし、このオーバーライドが含まれる、コントロール上のコンテキスト メニュー サービスを無効にし、の、<xref:System.Windows.Controls.Control>既定の動作。</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control> 。       OnMouseRightButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの右ボタンが押されたことを報告します。"
  overload: System.Windows.UIElement3D.OnMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.MouseRightButtonUp&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.MouseRightButtonUp>イベントをバブルの経路を通るが表示されますが、間接的な方法で実際に移動します</xref:System.Windows.UIElement3D.MouseRightButtonUp>。 <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>ルーティングと、バブルを基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.MouseRightButtonUp>。</xref:System.Windows.UIElement3D.MouseRightButtonUp>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.MouseRightButtonUp>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.MouseRightButtonUp>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnMouseRightButtonUp をオーバーライドすることで</xref:System.Windows.UIElement3D>。       OnMouseRightButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの右ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName&gt;ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> event as handled, OnMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> and <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウス ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  id: OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragEnter is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  id: OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragLeave is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  id: OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDragOver is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  id: OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewDrop is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DragEventArgs
      description: "<xref href=&quot;System.Windows.DragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  id: OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewGiveFeedback is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);
    parameters:
    - id: e
      type: System.Windows.GiveFeedbackEventArgs
      description: "<xref href=&quot;System.Windows.GiveFeedbackEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewGotKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewKeyDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  id: OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewKeyUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  id: OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewLostKeyboardFocus is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.KeyboardFocusChangedEventArgs
      description: "<xref href=&quot;System.Windows.Input.KeyboardFocusChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName&gt;添付ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> event as handled, OnPreviewMouseDown is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>. Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseDown, you are implying that your class handling accounted for all possible mouse button down actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、1 つ以上のマウス ボタンが押されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonDown&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>イベントは、トンネリングのルートで伝送に見えますが、実際には、間接的な方法で移動します</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>。 <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>トンネル ルートである基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>。</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnPreviewMouseLeftButtonDown をオーバーライドすることで</xref:System.Windows.UIElement3D>。       また、特定のマウスの状態のイベント処理を変更するために、このメソッドをオーバーライドできます。 基本実装を呼び出すを選択するかどうかは、シナリオによって異なります。 呼び出しに失敗すると、OnPreviewMouseLeftButtonDown を起動しようとしても親クラスでは、そのマウス イベントの既定の入力処理が無効にします。 派生したなどの<xref:System.Windows.Controls.Button>基本実装を呼び出さずに派生クラスでオーバーライドして OnPreviewMouseLeftButtonDown ですただし、これをオーバーライドを無効にし、<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベント。</xref:System.Windows.Controls.Primitives.ButtonBase.Click> </xref:System.Windows.Controls.Button> 。       OnPreviewMouseLeftButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの左ボタンが押されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonUp&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>イベントは、トンネリングのルートで伝送に見えますが、実際には、間接的な方法で移動します</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>。 <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>トンネル ルートである基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>。</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnPreviewMouseLeftButtonUp をオーバーライドすることで</xref:System.Windows.UIElement3D>。       OnPreviewMouseLeftButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの左ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  id: OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonDown&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>イベントは、トンネリングのルートで伝送に見えますが、実際には、間接的な方法で移動します</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>。 <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>トンネル ルートである基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.MouseRightButtonDown>。</xref:System.Windows.UIElement3D.MouseRightButtonDown>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnPreviewMouseRightButtonDown をオーバーライドすることで</xref:System.Windows.UIElement3D>。       また、特定のマウスの状態のイベント処理を変更するために、このメソッドをオーバーライドできます。 基本実装を呼び出すを選択するかどうかは、シナリオによって異なります。 呼び出しに失敗すると、OnPreviewMouseRightButtonDown を起動しようとしても親クラスでは、そのマウス イベントの既定の入力処理が無効にします。 たとえばから派生できます<xref:System.Windows.Controls.Control>呼び出しベースせず派生クラスでオーバーライドして OnPreviewMouseRightButtonDown ですただし、このオーバーライドが含まれる、コントロール上のコンテキスト メニュー サービスを無効にし、の、<xref:System.Windows.Controls.Control>既定の動作。</xref:System.Windows.Controls.Control> </xref:System.Windows.Controls.Control> 。       OnPreviewMouseRightButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの右ボタンが押されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される<xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonUp&quot;></xref>ルーティング イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>イベントは、トンネリングのルートで伝送に見えますが、実際には、間接的な方法で移動します</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>。 <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>トンネル ルートである基になるイベントと各<xref:System.Windows.UIElement3D>イベントに沿ったルートを使用して直接ルーティングされたイベント<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>。</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>を生成する処理と同じ</xref:System.Windows.UIElement3D>には</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> マークすることができますが、<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>イベントをこの要素の目的の処理、処理済みの状態はイベント ルート上の他の要素は永続化されません</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>。 イベントを全般インスタンス ハンドラーを防ぐために処理済みとしてマークするただし、(を指定しなかったもの`handledEventsToo`) が呼び出されているからです。       一般的なマウスのイベント処理の既定の実装<xref:System.Windows.UIElement3D>リッスン<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>適切なローカル イベントに変換します</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName></xref:System.Windows.UIElement3D>。 このロジックをオーバーライドする場合は、派生クラスを作成する必要があります。 派生クラスの静的コンス トラクターで<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>.</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>の代替クラス ハンドラーを登録します マウスの処理の動作を変更することはできません<xref:System.Windows.UIElement3D>OnPreviewMouseRightButtonUp をオーバーライドすることで</xref:System.Windows.UIElement3D>。       OnPreviewMouseRightButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、マウスの右ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "Mouse button actions are also handled by a dedicated input manager. Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action. If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> event as handled, OnPreviewMouseUp is not invoked.  \n  \n If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName> is received.  \n  \n If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data. If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers. Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`. By handling OnPreviewMouseUp, you are implying that your class handling accounted for all possible mouse button up actions. This behavior might be unwanted. Therefore, use caution when you use this virtual method to mark events as handled.  \n  \n Each of the button-specific direct events also has a virtual On* method; consider whether overriding these button-specific class handlers might be more appropriate.  \n  \n This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnPreviewMouseUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseButtonEventArgs&quot;> </xref>イベント データを格納します。 イベント データは、1 つ以上のマウス ボタンが離されたことを報告します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  id: OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewMouseWheel is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseWheelEventArgs
      description: "<xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "<xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled. Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.  \n  \n OnPreviewTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "<xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchDown&quot;> </xref>タッチは、この要素を押したときに発生するイベントをルーティングします。"
  remarks: "OnPreviewTouchDown メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnPreviewTouchDown、<xref:System.Windows.UIElement3D.PreviewTouchDown>イベント</xref:System.Windows.UIElement3D.PreviewTouchDown>。 必ずメソッドを呼び出して、基底クラスの OnPreviewTouchDown 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラス処理を提供、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchMove&quot;> </xref>タッチは、この要素の中に内部動かしたときに発生するイベントをルーティングします。"
  remarks: "OnPreviewTouchMove メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnPreviewTouchMove、<xref:System.Windows.UIElement3D.PreviewTouchMove>イベント</xref:System.Windows.UIElement3D.PreviewTouchMove>。 必ずメソッドを呼び出して、基底クラスの OnPreviewTouchMove 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchUp&quot;> </xref>タッチがこの要素内にリリースされたときに発生するイベントをルーティングします。"
  remarks: "OnPreviewTouchUp メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnPreviewTouchUp、<xref:System.Windows.UIElement3D.PreviewTouchUp>イベント</xref:System.Windows.UIElement3D.PreviewTouchUp>。 必ずメソッドを呼び出して、基底クラスの OnPreviewTouchUp 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnPreviewTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnQueryContinueDrag is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);
    parameters:
    - id: e
      type: System.Windows.QueryContinueDragEventArgs
      description: "<xref href=&quot;System.Windows.QueryContinueDragEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  id: OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnQueryCursor is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.QueryCursorEventArgs
      description: "<xref href=&quot;System.Windows.Input.QueryCursorEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnQueryCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusButtonDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  id: OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusButtonUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusButtonEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusButtonEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  id: OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusDown is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusDownEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusDownEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  id: OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName&gt;添付イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       このメソッドの目的はのような[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]でのイベント パターン * メソッド: このメソッドは、インスタンス ハンドラーではなく、クラス ハンドラーを確立することによって派生クラスからの一致するイベントを処理するための手段を提供します。 ここでは、照合イベントは、ルーティングされたイベントです。 通常のインスタンス ハンドラーを禁止する場合にも役立ちますが、イベントを処理済みとしてマーク (が指定されていないもの`handledEventsToo`) が呼び出されているからです。       OnStylusEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusInAirMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusInAirMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusInRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusInRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  id: OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName&gt;添付イベントがこの要素で発生します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "このメソッドには、既定の実装ではありません。 継承の中間クラスには、このメソッドを実装可能性があります、ため、実装で基底の実装を呼び出すことをお勧めします。 呼び出すことが基本の前に、または後に特別な処理の要件に応じて、します。       このメソッドの目的はのような[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]でのイベント パターン * メソッド: このメソッドは、インスタンス ハンドラーではなく、クラス ハンドラーを確立することによって派生クラスからの一致するイベントを処理するための手段を提供します。 ここでは、照合イベントは、ルーティングされたイベントです。 通常のインスタンス ハンドラーを禁止する場合にも役立ちますが、イベントを処理済みとしてマーク (が指定されていないもの`handledEventsToo`) が呼び出されているからです。       OnStylusLeave は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  id: OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusMove is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  id: OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusOutOfRange is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusOutOfRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  id: OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusSystemGesture is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusSystemGestureEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusSystemGestureEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusSystemGesture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  id: OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnStylusUp is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.StylusEventArgs
      description: "<xref href=&quot;System.Windows.Input.StylusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnStylusUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  id: OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "未処理のときに呼び出される&lt;xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName&gt;添付イベントがそのルート上でこのクラスから派生した要素に到達します。 このイベントに対するクラス処理を追加するには、このメソッドを実装します。"
  remarks: "This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.  \n  \n The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event pattern On* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On\\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers. Therefore, your implementation needs to examine the source properties of the event data. It should not try to reraise the event in most cases.  \n  \n Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement3D> can call private class handler methods when the event is received along the event route. One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.  \n  \n OnTextInput is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TextCompositionEventArgs
      description: "<xref href=&quot;System.Windows.Input.TextCompositionEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTextInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  id: OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラス処理を提供、 <xref href=&quot;System.Windows.UIElement3D.TouchDown&quot;> </xref>タッチがこの要素の内部を押したときに発生するイベントをルーティングします。"
  remarks: "OnTouchDown メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnTouchDown、<xref:System.Windows.UIElement3D.TouchDown>イベント</xref:System.Windows.UIElement3D.TouchDown>。 必ずメソッドを呼び出して、基底クラスの OnTouchDown 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTouchDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  id: OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.TouchEnter&quot;> </xref>タッチから移動するときに発生するルーティング イベントをこの要素の境界内の外部です。"
  remarks: "OnTouchEnter メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnTouchEnter、<xref:System.Windows.UIElement3D.TouchEnter>イベント</xref:System.Windows.UIElement3D.TouchEnter>。 必ずメソッドを呼び出して、基底クラスの OnTouchEnter 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTouchEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  id: OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.TouchLeave&quot;> </xref>タッチから移動するときに発生するルーティング イベントをこの要素の境界の外側の内部です。"
  remarks: "OnTouchLeave メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnTouchLeave、<xref:System.Windows.UIElement3D.TouchLeave>イベント</xref:System.Windows.UIElement3D.TouchLeave>。 必ずメソッドを呼び出して、基底クラスの OnTouchLeave 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTouchLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  id: OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラス処理を提供、 <xref href=&quot;System.Windows.UIElement3D.TouchMove&quot;> </xref>タッチは、この要素の中に内部動かしたときに発生するイベントをルーティングします。"
  remarks: "OnTouchMove メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnTouchMove、<xref:System.Windows.UIElement3D.TouchMove>イベント</xref:System.Windows.UIElement3D.TouchMove>。 必ずメソッドを呼び出して、基底クラスの OnTouchMove 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTouchMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  id: OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "クラスの処理を提供、 <xref href=&quot;System.Windows.UIElement3D.TouchUp&quot;> </xref>タッチがこの要素内にリリースされたときに発生するイベントをルーティングします。"
  remarks: "OnTouchUp メソッドには、既定の実装ではありません。 処理する派生クラスでオーバーライドして OnTouchUp、<xref:System.Windows.UIElement3D.TouchUp>イベント</xref:System.Windows.UIElement3D.TouchUp>。 必ずメソッドを呼び出して、基底クラスの OnTouchUp 基底クラスは、イベントを受け取るようにします。"
  syntax:
    content: protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.TouchEventArgs
      description: "A <xref href=&quot;System.Windows.Input.TouchEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.UIElement3D.OnTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnUpdateModel
  id: OnUpdateModel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnUpdateModel()
  nameWithType: UIElement3D.OnUpdateModel()
  fullName: System.Windows.UIElement3D.OnUpdateModel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "派生クラスでオーバーライドされるときに操作のレンダリングに参加します。"
  remarks: "クラスを継承する場合、<xref:System.Windows.UIElement3D>クラスと共にこのメソッドを使用することができます、<xref:System.Windows.UIElement3D.InvalidateModel%2A>要素のモデルを更新する方法</xref:System.Windows.UIElement3D.InvalidateModel%2A></xref:System.Windows.UIElement3D>。       高度なシナリオでこのメソッドを呼び出す必要があるだけです。 このような高度なシナリオの&1; つは、派生クラスには、外観に影響する複数のプロパティと、基になるモデルを&1; 回のみ更新するかどうかです。 OnUpdateModel メソッド内では、<xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A><xref:System.Windows.Media.Media3D.Visual3D>クラス</xref:System.Windows.Media.Media3D.Visual3D>のプロパティ</xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A>を更新する可能性があります。       このメソッドの<xref:System.Windows.UIElement3D>クラス</xref:System.Windows.UIElement3D>の既定の実装ではありません。       OnUpdateModel は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to derive from the <xref:System.Windows.UIElement3D> class to create a `Sphere` class:  \n  \n [!code-cs[Shapes#Sphere](~/add/codesnippet/csharp/Shapes/Sphere.cs#sphere)]\n [!code-vb[Shapes#Sphere](~/add/codesnippet/visualbasic/shapes/sphere.vb#sphere)]  \n  \n For the complete sample, see [UIElement3D Sphere Sample](http://go.microsoft.com/fwlink/?LinkID=160044)."
  syntax:
    content: protected virtual void OnUpdateModel ();
    parameters: []
  overload: System.Windows.UIElement3D.OnUpdateModel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "呼び出されたときにこれの親要素<xref href=&quot;System.Windows.UIElement3D&quot;></xref>その基になる visual の親に変更を報告します。"
  remarks: "OnVisualParentChanged は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "以前の親です。 これは、として指定することがあります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>は親要素は既にありませんでした。"
  overload: System.Windows.UIElement3D.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  id: PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "派生クラスでオーバーライドされると、実際にその要素にフォーカスを移動しなくても指定したフォーカスの移動方向をフォーカスを受け取る要素を返します。"
  remarks: "このクラスでこのメソッドの既定の実装が完了していないと、常に返します`null`です。       PredictFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);
    parameters:
    - id: direction
      type: System.Windows.Input.FocusNavigationDirection
      description: "要求されたフォーカスの移動の方向です。"
    return:
      type: System.Windows.DependencyObject
      description: "要素がフォーカスを受け取った場合<xref:System.Windows.UIElement3D.MoveFocus*>が実際に呼び出されます</xref:System.Windows.UIElement3D.MoveFocus*>。"
  overload: System.Windows.UIElement3D.PredictFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragEnter
  id: PreviewDragEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragEnter
  nameWithType: UIElement3D.PreviewDragEnter
  fullName: System.Windows.UIElement3D.PreviewDragEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドラッグ先と、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>PreviewDragEnter が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>。 PreviewDragEnter イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=fullName>。       PreviewDragEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewDragEnter&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応するバブル イベントは<xref:System.Windows.UIElement3D.DragEnter>.</xref:System.Windows.UIElement3D.DragEnter> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragEnterEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragEnter;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragEnterEvent
  id: PreviewDragEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragEnterEvent
  nameWithType: UIElement3D.PreviewDragEnterEvent
  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewDragEnter&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewDragEnterEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragLeave
  id: PreviewDragLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragLeave
  nameWithType: UIElement3D.PreviewDragLeave
  fullName: System.Windows.UIElement3D.PreviewDragLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドラッグ元に、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>PreviewDragLeave が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>。 PreviewDragLeave イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=fullName>。       PreviewDragLeave は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewDragLeave&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.DragLeave>.</xref:System.Windows.UIElement3D.DragLeave> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragLeave;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent
  id: PreviewDragLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragLeaveEvent
  nameWithType: UIElement3D.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewDragLeave&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewDragLeaveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragOver
  id: PreviewDragOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragOver
  nameWithType: UIElement3D.PreviewDragOver
  fullName: System.Windows.UIElement3D.PreviewDragOver
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムが潜在的なドロップ ターゲットとしてこの要素で、基になるドラッグ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>PreviewDragOver が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>。 PreviewDragOver イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=fullName>。       PreviewDragOver は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewDragOver&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.DragOver>.</xref:System.Windows.UIElement3D.DragOver> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDragOverEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewDragOver%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDragOver;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDragOverEvent
  id: PreviewDragOverEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDragOverEvent
  nameWithType: UIElement3D.PreviewDragOverEvent
  fullName: System.Windows.UIElement3D.PreviewDragOverEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewDragOver&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewDragOverEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDrop
  id: PreviewDrop
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDrop
  nameWithType: UIElement3D.PreviewDrop
  fullName: System.Windows.UIElement3D.PreviewDrop
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "入力システムがこの要素をドロップ先とするドロップ イベントを報告したときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>テキストが一部になるよう、このクラスのイベントを接続されているクラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素としては、継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>。 テキストのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewDrop?displayProperty=fullName>。       テキストは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewDrop&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewDropEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.DragEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.Drop>.</xref:System.Windows.UIElement3D.Drop> </xref:System.Windows.DragEventHandler> </xref:System.Windows.UIElement3D.PreviewDropEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewDrop%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewDrop%2A>。"
  syntax:
    content: public event System.Windows.DragEventHandler PreviewDrop;
    return:
      type: System.Windows.DragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewDropEvent
  id: PreviewDropEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewDropEvent
  nameWithType: UIElement3D.PreviewDropEvent
  fullName: System.Windows.UIElement3D.PreviewDropEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewDrop&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewDropEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewDropEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGiveFeedback
  id: PreviewGiveFeedback
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGiveFeedback
  nameWithType: UIElement3D.PreviewGiveFeedback
  fullName: System.Windows.UIElement3D.PreviewGiveFeedback
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ドラッグ アンド ドロップ操作が開始されたときに発生します。"
  remarks: "PreviewGiveFeedback イベントは、ドラッグ アンド ドロップ操作中にユーザーに視覚的フィードバックを提供するためにマウス ポインターの外観を変更するドラッグ イベントのソースを使用できます。       このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>PreviewGiveFeedback が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>。 PreviewGiveFeedback イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=fullName>。       PreviewGiveFeedback は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewGiveFeedback&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.GiveFeedbackEventHandler>|     対応するバブル イベントは<xref:System.Windows.UIElement3D.GiveFeedback>.</xref:System.Windows.UIElement3D.GiveFeedback> </xref:System.Windows.GiveFeedbackEventHandler> </xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A>。"
  syntax:
    content: public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;
    return:
      type: System.Windows.GiveFeedbackEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  id: PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement3D.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewGiveFeedback&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewGiveFeedbackEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  id: PreviewGotKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement3D.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "キーボードは、この要素にフォーカスがあるときに発生します。"
  remarks: "このイベントは、ルーティング トンネリングを使用するため、フォーカスを持つ要素は、イベント ハンドラーが実際に添付されている要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスのある実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>PreviewGotKeyboardFocus が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>。 PreviewGotKeyboardFocus イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName>。       PreviewGotKeyboardFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewGotKeyboardFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.GotKeyboardFocus>.</xref:System.Windows.UIElement3D.GotKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  id: PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewGotKeyboardFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewGotKeyboardFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: UIElement3D.PreviewKeyDown
  fullName: System.Windows.UIElement3D.PreviewKeyDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキーボードのフォーカスがある状態でキーが押されると発生します。"
  remarks: "キーの処理は、コマンド実行やテキストの合成などの他のプラットフォーム機能と対話します。 このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>PreviewKeyDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>。 PreviewKeyDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName>。       PreviewKeyDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewKeyDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.KeyEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.KeyDown>.</xref:System.Windows.UIElement3D.KeyDown> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.PreviewKeyDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyDownEvent
  id: PreviewKeyDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyDownEvent
  nameWithType: UIElement3D.PreviewKeyDownEvent
  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewKeyDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewKeyDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyUp
  id: PreviewKeyUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyUp
  nameWithType: UIElement3D.PreviewKeyUp
  fullName: System.Windows.UIElement3D.PreviewKeyUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキーボードのフォーカスがある状態でキーが離されると発生します。"
  remarks: "キーの処理は、コマンド実行やテキストの合成などの他のプラットフォーム機能と対話します。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>PreviewKeyUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>。 PreviewKeyUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName>。       PreviewKeyUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewKeyUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.KeyEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.KeyUp>.</xref:System.Windows.UIElement3D.KeyUp> </xref:System.Windows.Input.KeyEventHandler> </xref:System.Windows.UIElement3D.PreviewKeyUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyEventHandler PreviewKeyUp;
    return:
      type: System.Windows.Input.KeyEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewKeyUpEvent
  id: PreviewKeyUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewKeyUpEvent
  nameWithType: UIElement3D.PreviewKeyUpEvent
  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewKeyUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewKeyUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  id: PreviewLostKeyboardFocus
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement3D.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "キーボードは、この要素にフォーカスが離れたときに発生します。"
  remarks: "このイベントは、ルーティング トンネリングを使用しているために、フォーカスを失った要素は、イベント ハンドラーが実際に添付されている、要素ではなく子要素である可能性があります。 チェック、<xref:System.Windows.RoutedEventArgs.Source%2A>フォーカスが失われた実際の要素を特定のイベント データ</xref:System.Windows.RoutedEventArgs.Source%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>PreviewLostKeyboardFocus が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>。 PreviewLostKeyboardFocus イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName>。       PreviewLostKeyboardFocus は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewLostKeyboardFocus&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.LostKeyboardFocus>.</xref:System.Windows.UIElement3D.LostKeyboardFocus> </xref:System.Windows.Input.KeyboardFocusChangedEventHandler> </xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A>。"
  syntax:
    content: public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;
    return:
      type: System.Windows.Input.KeyboardFocusChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  id: PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewLostKeyboardFocus&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewLostKeyboardFocusEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseDown
  id: PreviewMouseDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseDown
  nameWithType: UIElement3D.PreviewMouseDown
  fullName: System.Windows.UIElement3D.PreviewMouseDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にポインターが、任意のマウス ボタンが押されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>PreviewMouseDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。 PreviewMouseDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。       PreviewMouseDown 多くの場合、このイベントはいずれかと共に<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>または<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>、2 つの標準のマウス ボタンのいずれかのキーを押してに対応する</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>。 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown><xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>も、ルーティング イベントをしています直接ルーティング イベントを適切なボタンに固有のイベントが発生したときに、<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>イベント イベント ルート上には、この要素に到達します</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName></xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>。</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>または<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>。</xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>の「解説」を参照してください       PreviewMouseDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.MouseDown>.</xref:System.Windows.UIElement3D.MouseDown> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseDownEvent
  id: PreviewMouseDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseDownEvent
  nameWithType: UIElement3D.PreviewMouseDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  id: PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement3D.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの左ボタンが押されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてトンネリングのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 PreviewMouseLeftButtonDown 処理のマークを付けた場合マークしている本質的に<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。 これは、可能性のある<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>。</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>などのクラス ハンドラーが生成されたイベントが含まれています       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       PreviewMouseLeftButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  id: PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseLeftButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  id: PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement3D.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの左ボタンが離されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてトンネリングのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 PreviewMouseLeftButtonUp をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       PreviewMouseLeftButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseLeftButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  id: PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseLeftButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseLeftButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseMove
  id: PreviewMouseMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseMove
  nameWithType: UIElement3D.PreviewMouseMove
  fullName: System.Windows.UIElement3D.PreviewMouseMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウス ポインターが移動したときに発生します。"
  remarks: "このイベントは、どちらも要素の境界にマウス ポインターを最初に入力し、マウス ポインターが要素の境界内に残っているときに移動するともします。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>PreviewMouseMove が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>。 PreviewMouseMove イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>。       PreviewMouseMove は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.MouseEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.MouseMove>.</xref:System.Windows.UIElement3D.MouseMove> </xref:System.Windows.Input.MouseEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseEventHandler PreviewMouseMove;
    return:
      type: System.Windows.Input.MouseEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent
  id: PreviewMouseMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseMoveEvent
  nameWithType: UIElement3D.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  id: PreviewMouseRightButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement3D.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの右ボタンが押されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてトンネリングのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 PreviewMouseRightButtonDown をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>。 これは、可能性のある<xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>。</xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>などのクラス ハンドラーが生成されたイベントが含まれています       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       PreviewMouseRightButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseRightButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  id: PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseRightButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  id: PreviewMouseRightButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement3D.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "マウス ポインターがこの要素上でマウスの右ボタンが離されたときに発生します。"
  remarks: "この[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)、要素ツリーを通じてトンネリングのルートに従うように見えますが発生し、各<xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D>要素ツリーに沿って reraised を直接ルーティング イベントを実際には。       このイベントは、基になるのマウス ボタンの詳細を報告する複数の関連イベントの&1; つ<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>イベント ルート上の各要素によって処理される添付イベントがイベント</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。       このイベントのイベント データ、イベントのデータを公開、基になる<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>イベント</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。 そのイベントがイベント ルート上処理済みとしてマークすると、マウス ボタンの特定のイベントも発生します。ただし、明示的に呼び出すことによって、マウス ボタンの特定のイベント ハンドラーを追加する必要があります<xref:System.Windows.UIElement3D.AddHandler%2A>、処理済みとしてマークされているイベントを処理する、イベント リスナーをするために、オプションを使用します</xref:System.Windows.UIElement3D.AddHandler%2A>。 処理 PreviewMouseRightButtonUp をマークする場合は、マークしている本質的に<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>経路、さらにすべてのリスナーの処理され、すべての関連するイベントです</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。       概念的には、このイベントの待ち時間 (やその他のマウス ボタンのイベントに<xref:System.Windows.UIElement3D>) マウス「サービス」である (によって提供される、サービス定義で、<xref:System.Windows.Input.Mouse>クラス).</xref:System.Windows.Input.Mouse> </xref:System.Windows.UIElement3D> イベントは、イベント データの元のマウス イベントのマウス ボタンの状態 (左から右に、アップダウン) を確認する必要はないの利便性を追加します。 非標準のボタンの状態のチェックなどの高度なシナリオを使用する必要があります、[!INCLUDE[TLA#tla_api#plural](~/add/includes/tlasharptla-apisharpplural-md.md)]上<xref:System.Windows.Input.Mouse><xref:System.Windows.UIElement3D>.</xref:System.Windows.UIElement3D>上のものではなくクラス</xref:System.Windows.Input.Mouse>       PreviewMouseRightButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseRightButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A></xref:System.Windows.Input.MouseButtonEventHandler></xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  id: PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseRightButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseRightButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseUp
  id: PreviewMouseUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseUp
  nameWithType: UIElement3D.PreviewMouseUp
  fullName: System.Windows.UIElement3D.PreviewMouseUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にマウス ポインターが、任意のマウス ボタンが離されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>PreviewMouseUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。 PreviewMouseUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>。       PreviewMouseUp 多くの場合、このイベントはいずれかと共に<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>または<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>、2 つの標準のマウス ボタンのいずれかのキーを押してに対応する</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>。 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp><xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>も、ルーティング イベントをしています直接ルーティング イベントを適切なボタンに固有のイベントが発生したときに、<xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>イベント イベント ルート上には、この要素に到達します</xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName></xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>。</xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>または<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>。</xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp></xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>の「解説」を参照してください       PreviewMouseUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.MouseButtonEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.MouseUp>.</xref:System.Windows.UIElement3D.MouseUp> </xref:System.Windows.Input.MouseButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;
    return:
      type: System.Windows.Input.MouseButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseUpEvent
  id: PreviewMouseUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseUpEvent
  nameWithType: UIElement3D.PreviewMouseUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseWheel
  id: PreviewMouseWheel
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseWheel
  nameWithType: UIElement3D.PreviewMouseWheel
  fullName: System.Windows.UIElement3D.PreviewMouseWheel
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にマウス ポインターが、ユーザーがマウスのホイールを回転させるときに発生します。"
  remarks: "フォーカスまたはマウスのキャプチャ、マウス ポインターが; よりも優先します。このため、対象を絞ったまたはキャプチャした要素からこのイベントを受信する場合、マウス ポインター実際にあります別の要素上です。       このイベントのエイリアスを作成する、<xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>添付イベントが、このクラスに対してように<xref:System.Windows.UIElement3D.PreviewMouseMove>一部であるクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D.PreviewMouseMove></xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>。 イベント ハンドラーに関連付けられている、<xref:System.Windows.UIElement3D.PreviewMouseMove>イベントが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName></xref:System.Windows.UIElement3D.PreviewMouseMove>。       PreviewMouseWheel は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewMouseWheel&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.MouseWheelEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.MouseWheel>.</xref:System.Windows.UIElement3D.MouseWheel> </xref:System.Windows.Input.MouseWheelEventHandler> </xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A>。"
  syntax:
    content: public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;
    return:
      type: System.Windows.Input.MouseWheelEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent
  id: PreviewMouseWheelEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewMouseWheelEvent
  nameWithType: UIElement3D.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewMouseWheel&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewMouseWheelEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag
  id: PreviewQueryContinueDrag
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewQueryContinueDrag
  nameWithType: UIElement3D.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ドラッグ アンド ドロップ操作中にキーボードまたはマウス ボタンの状態に変更があるときに発生します。"
  remarks: "PreviewQueryContinueDrag イベントは、ドラッグ ソースがドラッグ アンド ドロップ操作を取り消す必要があるかどうかを宣言できます。       このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>PreviewQueryContinueDrag が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>。 PreviewQueryContinueDrag イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=fullName>。       PreviewQueryContinueDrag は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewQueryContinueDrag&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.QueryContinueDragEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.QueryContinueDrag>.</xref:System.Windows.UIElement3D.QueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A>。"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  id: PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement3D.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewQueryContinueDrag&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewQueryContinueDragEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonDown
  id: PreviewStylusButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonDown
  nameWithType: UIElement3D.PreviewStylusButtonDown
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ポインターがこの要素上でスタイラス ボタンが押されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>PreviewStylusButtonDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>。 PreviewStylusButtonDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusButtonEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusButtonDown>.</xref:System.Windows.UIElement3D.StylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  id: PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement3D.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonUp
  id: PreviewStylusButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonUp
  nameWithType: UIElement3D.PreviewStylusButtonUp
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ポインターがこの要素上でスタイラス ボタンが離されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>PreviewStylusButtonUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>。 PreviewStylusButtonUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusButtonEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusButtonUp>.</xref:System.Windows.UIElement3D.StylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  id: PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement3D.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusDown
  id: PreviewStylusDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusDown
  nameWithType: UIElement3D.PreviewStylusDown
  fullName: System.Windows.UIElement3D.PreviewStylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素上でスタイラスがデジタイザーに触れたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>PreviewStylusDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>。 PreviewStylusDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusDownEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusDown>.</xref:System.Windows.UIElement3D.StylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusDownEvent
  id: PreviewStylusDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusDownEvent
  nameWithType: UIElement3D.PreviewStylusDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInAirMove
  id: PreviewStylusInAirMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInAirMove
  nameWithType: UIElement3D.PreviewStylusInAirMove
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "実際には、デジタイザーに触れることがなく要素上でスタイラスを動かしたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>なく previewstylusinairmove イベントが一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>。 なく previewstylusinairmove イベントのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       なく previewstylusinairmove イベントは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusInAirMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusInAirMove>.</xref:System.Windows.UIElement3D.StylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  id: PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusInAirMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusInAirMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInRange
  id: PreviewStylusInRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInRange
  nameWithType: UIElement3D.PreviewStylusInRange
  fullName: System.Windows.UIElement3D.PreviewStylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスがこの要素上で検出されるまでデジタイザーに近づいたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>PreviewStylusInRange が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>。 PreviewStylusInRange イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusInRange は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusInRange&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusInRange>.</xref:System.Windows.UIElement3D.StylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  id: PreviewStylusInRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement3D.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusInRange&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusInRangeEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusMove
  id: PreviewStylusMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusMove
  nameWithType: UIElement3D.PreviewStylusMove
  fullName: System.Windows.UIElement3D.PreviewStylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "要素上でスタイラスを動かしたときに発生します。 それ以外の場合、このイベントを発生させる、デジタイザーによって検出されている間にスタイラスが移動する必要があります<xref href=&quot;System.Windows.UIElement3D.PreviewStylusInAirMove&quot;></xref>が代わりに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>PreviewStylusMove が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>。 PreviewStylusMove イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusMove は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusMove>.</xref:System.Windows.UIElement3D.StylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent
  id: PreviewStylusMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusMoveEvent
  nameWithType: UIElement3D.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange
  id: PreviewStylusOutOfRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusOutOfRange
  nameWithType: UIElement3D.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスが検出されたデジタイザーから離れすぎているときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>PreviewStylusOutOfRange が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>。 PreviewStylusOutOfRange イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusOutOfRange は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusOutOfRange&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusOutOfRange>.</xref:System.Windows.UIElement3D.StylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  id: PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusOutOfRange&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusOutOfRangeEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture
  id: PreviewStylusSystemGesture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusSystemGesture
  nameWithType: UIElement3D.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ユーザーがいずれかのスタイラス ジェスチャを実行したときに発生します。"
  remarks: "スタイラス ジェスチャの詳細については、 <xref:System.Windows.Input.SystemGesture>。</xref:System.Windows.Input.SystemGesture>を参照してください。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>PreviewStylusSystemGesture が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>。 PreviewStylusSystemGesture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusSystemGesture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusSystemGesture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusSystemGestureEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusSystemGesture>.</xref:System.Windows.UIElement3D.StylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  id: PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusSystemGesture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusSystemGestureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusUp
  id: PreviewStylusUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusUp
  nameWithType: UIElement3D.PreviewStylusUp
  fullName: System.Windows.UIElement3D.PreviewStylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にスタイラスが、ユーザーがスタイラスをデジタイザーから離れたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>添付イベントが、このクラスに対してように<xref:System.Windows.UIElement3D.PreviewStylusDown>一部であるクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.UIElement3D.PreviewStylusDown></xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>。 イベント ハンドラーに関連付けられている、<xref:System.Windows.UIElement3D.PreviewStylusDown>イベントが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=fullName></xref:System.Windows.UIElement3D.PreviewStylusDown>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       PreviewStylusUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewStylusUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.StylusUp>.</xref:System.Windows.UIElement3D.StylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.PreviewStylusUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler PreviewStylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewStylusUpEvent
  id: PreviewStylusUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewStylusUpEvent
  nameWithType: UIElement3D.PreviewStylusUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewStylusUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewStylusUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTextInput
  id: PreviewTextInput
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTextInput
  nameWithType: UIElement3D.PreviewTextInput
  fullName: System.Windows.UIElement3D.PreviewTextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素は、デバイスに依存しない方法でテキストを取得したときに発生します。"
  remarks: "PreviewTextInput イベントは、コンポーネントまたはデバイスに依存しない方法でテキスト入力にリッスンするようにアプリケーションを使用します。 キーボードは、PreviewTextInput; の主な手段は、します。音声認識、手書き認識、およびその他の入力デバイスも PreviewTextInput します。       キーの組み合わせのため、既定のキーボードまたは入力方式エディターから — 複数のキー イベントが&1; つだけのテキスト入力イベントを発生させる可能性があります。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>PreviewTextInput が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>。 PreviewTextInput イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=fullName>。       PreviewTextInput は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_PreviewTextInput&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.Windows.Input.TextCompositionEventHandler>|     対応する-バブル イベントは<xref:System.Windows.UIElement3D.TextInput>.</xref:System.Windows.UIElement3D.TextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement3D.PreviewTextInputEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewTextInput%2A>。"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTextInputEvent
  id: PreviewTextInputEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTextInputEvent
  nameWithType: UIElement3D.PreviewTextInputEvent
  fullName: System.Windows.UIElement3D.PreviewTextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewTextInput&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       PreviewTextInputEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchDown
  id: PreviewTouchDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchDown
  nameWithType: UIElement3D.PreviewTouchDown
  fullName: System.Windows.UIElement3D.PreviewTouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面に触れると発生します。"
  remarks: "既定では、PreviewTouchDown と<xref:System.Windows.UIElement3D.TouchDown>指が画面に触れるし、移動するまでのイベントが発生しません</xref:System.Windows.UIElement3D.TouchDown>。 移動することがなく保持したりする画面に指を押すと、キーを押して発生して<xref:System.Windows.Input.Stylus>。</xref:System.Windows.Input.Stylus>の動作を保持 プレス アンド ホールド動作は、マウスの右クリックに相当します。       PreviewTouchDown が発生して<xref:System.Windows.UIElement3D.TouchDown>、画面に触れると発生するイベントを設定、<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>添付プロパティ`false`この要素の</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName></xref:System.Windows.UIElement3D.TouchDown>。      <a name=&quot;routedEventInfo_PreviewTouchDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応する-バブル イベントは<xref:System.Windows.UIElement3D.TouchDown>.</xref:System.Windows.UIElement3D.TouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchDownEvent
  id: PreviewTouchDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchDownEvent
  nameWithType: UIElement3D.PreviewTouchDownEvent
  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchDown&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchMove
  id: PreviewTouchMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchMove
  nameWithType: UIElement3D.PreviewTouchMove
  fullName: System.Windows.UIElement3D.PreviewTouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面に指を動かしたときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応する-バブル イベントは<xref:System.Windows.UIElement3D.TouchMove>.</xref:System.Windows.UIElement3D.TouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent
  id: PreviewTouchMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchMoveEvent
  nameWithType: UIElement3D.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchMove&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchUp
  id: PreviewTouchUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchUp
  nameWithType: UIElement3D.PreviewTouchUp
  fullName: System.Windows.UIElement3D.PreviewTouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面から離れる指が発生したときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_PreviewTouchUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  |ルーティング方法 |トンネリング |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応する-バブル イベントは<xref:System.Windows.UIElement3D.TouchUp>.</xref:System.Windows.UIElement3D.TouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.PreviewTouchUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> PreviewTouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.PreviewTouchUpEvent
  id: PreviewTouchUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: PreviewTouchUpEvent
  nameWithType: UIElement3D.PreviewTouchUpEvent
  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.PreviewTouchUp&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: UIElement3D.QueryContinueDrag
  fullName: System.Windows.UIElement3D.QueryContinueDrag
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ドラッグ アンド ドロップ操作中にキーボードまたはマウス ボタンの状態に変更があるときに発生します。"
  remarks: "QueryContinueDrag イベントでは、ドラッグ ソースがドラッグ アンド ドロップ操作を取り消す必要があるかどうかを決定できるようにします。       このイベントのエイリアスを作成する、 <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>QueryContinueDrag が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>。 QueryContinueDrag イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=fullName>。       QueryContinueDrag は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_QueryContinueDrag&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.QueryContinueDragEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.</xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> </xref:System.Windows.QueryContinueDragEventHandler> </xref:System.Windows.UIElement3D.QueryContinueDragEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A>。"
  syntax:
    content: public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.QueryContinueDragEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryContinueDragEvent
  id: QueryContinueDragEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryContinueDragEvent
  nameWithType: UIElement3D.QueryContinueDragEvent
  fullName: System.Windows.UIElement3D.QueryContinueDragEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.QueryContinueDrag&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       QueryContinueDragEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryCursor
  id: QueryCursor
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryCursor
  nameWithType: UIElement3D.QueryCursor
  fullName: System.Windows.UIElement3D.QueryCursor
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "表示する、カーソルが要求されると発生します。 マウスのポインターはカーソル オブジェクトを変更する必要がありますが、新しい位置に基づいて、新しい場所に移動するたびに、要素にこのイベントが発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>QueryCursor が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>。 QueryCursor イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=fullName>。       このイベント名によって参照されているカーソルは、必ずしも (カーソルとも呼ばれる) テキストのカーソルではありません。 代わりに、いくつかの可能な入力に関連するデバイスまたはの概念に関連する画面上のグラフィカル表示を宣言するオブジェクトは、このコンテキストでのカーソル[!INCLUDE[TLA2#tla_win](~/add/includes/tla2sharptla-win-md.md)]プログラミングします。 そのオブジェクトがによって表される、<xref:System.Windows.Input.Cursor>クラス[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</xref:System.Windows.Input.Cursor>。 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]入力システムでは、マウス ポインターの画面上の位置を表す場合は、このカーソルを変更することができます。 定義済みの値を使用することができます、<xref:System.Windows.Input.Cursors>列挙型、または画像ファイルとしてカスタム カーソルを宣言できます</xref:System.Windows.Input.Cursors>。       QueryCursor のイベントのリッスンがカーソル管理の効率的な方法です。 代わりに、各要素が<xref:System.Windows.FrameworkContentElement.Cursor%2A><xref:System.Windows.FrameworkContentElement.ForceCursor%2A>。</xref:System.Windows.FrameworkContentElement.ForceCursor%2A></xref:System.Windows.FrameworkContentElement.Cursor%2A>とそれぞれのカーソル動作を定義する必要があります。 WPF フレームワーク レベルの基本要素を使用していないまたはで特別な状況で要素ごとの単位でのカーソルの動作を定義するがニーズに合わない場合は、のみ QueryCursor に依存する必要があります。 QueryCursor への応答のカーソルの動作を実装する方法については、 <xref:System.Windows.Input.QueryCursorEventHandler>。</xref:System.Windows.Input.QueryCursorEventHandler>を参照してください。       QueryCursor は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_QueryCursor&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.QueryCursorEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.QueryCursorEventHandler>|     -、定義済みの対応するトンネリング イベントはありません</xref:System.Windows.Input.QueryCursorEventHandler></xref:System.Windows.UIElement3D.QueryCursorEvent>。      -オーバーライド<xref:System.Windows.UIElement3D.OnQueryCursor%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnQueryCursor%2A>。"
  syntax:
    content: public event System.Windows.Input.QueryCursorEventHandler QueryCursor;
    return:
      type: System.Windows.Input.QueryCursorEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.QueryCursorEvent
  id: QueryCursorEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: QueryCursorEvent
  nameWithType: UIElement3D.QueryCursorEvent
  fullName: System.Windows.UIElement3D.QueryCursorEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.QueryCursor&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       QueryCursorEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  id: RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "特定のルーティング イベントを発生させます。 <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>内で識別されるときに生成される、 <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>提供されているインスタンス (として、<xref:System.Windows.RoutedEventArgs.RoutedEvent*>そのイベント データのプロパティ).</xref:System.Windows.RoutedEventArgs.RoutedEvent*>"
  remarks: "`e`ルーティング イベントのすべてのデータの共通の基本型として型指定されたパラメーターですただし、ために発生するイベントに使用される最も固有のイベント データの種類として、イベント データを指定してください<xref:System.Windows.RoutedEventArgs>派生クラスには、特定のイベントが発生するとは、特定の実際のデータ プロパティが含まれています。</xref:System.Windows.RoutedEventArgs> 。       <xref:System.Windows.RoutedEventArgs>イベントの状態のプロパティだけではありません。ルーティング イベントを発生させるも識別します。</xref:System.Windows.RoutedEventArgs> このイベント発生パターンと、ルーティングされたイベント データの両方が異なる[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]イベントに関連するプロパティを通常だけが含まれるイベントやデータのクラスです。       RaiseEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void RaiseEvent (System.Windows.RoutedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.RoutedEventArgs
      description: "A <xref href=&quot;System.Windows.RoutedEventArgs&quot;> </xref>イベント データを格納しても発生させるイベントを識別します。"
  overload: System.Windows.UIElement3D.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures
  id: ReleaseAllTouchCaptures
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement3D.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素からすべてのキャプチャされたタッチ デバイスを解放します。"
  syntax:
    content: public void ReleaseAllTouchCaptures ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseAllTouchCaptures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseMouseCapture
  id: ReleaseMouseCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseMouseCapture()
  nameWithType: UIElement3D.ReleaseMouseCapture()
  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素には、キャプチャが保持されている場合は、マウスのキャプチャを解放します。"
  remarks: "この要素がキャプチャを保持していない場合は、このメソッドを呼び出すも効果はありません。 値を確認してください<xref:System.Windows.UIElement3D.IsMouseCaptured%2A>このメソッドを呼び出す前にします</xref:System.Windows.UIElement3D.IsMouseCaptured%2A>。       ReleaseMouseCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void ReleaseMouseCapture ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseMouseCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseStylusCapture
  id: ReleaseStylusCapture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseStylusCapture()
  nameWithType: UIElement3D.ReleaseStylusCapture()
  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素には、キャプチャが保持されている場合は、スタイラス デバイスのキャプチャを解放します。"
  remarks: "この要素がキャプチャを保持していない場合は、このメソッドを呼び出すも効果はありません。 値を確認してください<xref:System.Windows.UIElement3D.IsStylusCaptured%2A>このメソッドを呼び出す前にします</xref:System.Windows.UIElement3D.IsStylusCaptured%2A>。       ReleaseStylusCapture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void ReleaseStylusCapture ();
    parameters: []
  overload: System.Windows.UIElement3D.ReleaseStylusCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  id: ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素から指定したタッチ デバイスを解放しようとしています。"
  syntax:
    content: public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);
    parameters:
    - id: touchDevice
      type: System.Windows.Input.TouchDevice
      description: "解放するデバイスです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>タッチ デバイスを放した場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.UIElement3D.ReleaseTouchCapture*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>touchDevice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素から指定したルーティング イベント ハンドラーを削除します。"
  remarks: "これを使用するための最も一般的なシナリオ[!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]を実装する場合は、[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]カスタム ルーティング イベントのハンドラーの削除」ロジックを実装するときに特に関連付けられている「ラッパー」イベント、[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]レベル。       このメソッドを呼び出しても何も起こりませんメソッドの呼び出しの入力パラメーターに一致する条件で登録されたハンドラーがない場合。       数より多い場合に、イベント ハンドラーのストアの削除に最初のハンドラーのみ、条件に一致する&1; つのハンドラーがアタッチされます。 この動作は整合[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]の動作、`-=`演算子。       どちらも`routedEvent`も`handler`あります`null`です。 いずれかの値として提供しようとしています。`null`で例外が発生します。       このメソッドは無視、`handledEventsToo`場合は、ハンドラーが最初に提供されているパラメーターについては、追加、<xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>処理済みのイベントの処理を有効に署名します</xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>。 ハンドラーのいずれかの型が削除されます。       RemoveHandler は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "ハンドラーがアタッチされているルーティング イベントの識別子。"
    - id: handler
      type: System.Delegate
      description: "この要素のイベント ハンドラー コレクションから削除する特定のハンドラー実装。"
  overload: System.Windows.UIElement3D.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings
  id: ShouldSerializeCommandBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement3D.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "シリアル化プロセスが、<xref:System.Windows.UIElement3D.CommandBindings*>このクラスのインスタンスのプロパティ</xref:System.Windows.UIElement3D.CommandBindings*>の内容をシリアル化する必要かどうかを返します"
  remarks: "これは、戻り値は`true`場合<xref:System.Windows.UIElement3D.CommandBindings%2A>ローカルに設定します</xref:System.Windows.UIElement3D.CommandBindings%2A>。       これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.UIElement3D.CommandBindings%2A>プロパティには、単純な既定値にありません</xref:System.Windows.UIElement3D.CommandBindings%2A>。 このメソッドは、既定値から、プロパティが変更されたかどうかを示します。 デザイナーを開発または<xref:System.Windows.UIElement3D>。</xref:System.Windows.UIElement3D>を組み込む独自のコントロールを開発する場合に通常、このメソッドが呼び出す       詳細については、次を参照してください。 [ShouldSerialize およびリセット メソッドを使用して既定値を定義する](~/add/includes/ajax-current-ext-md.md)です。       ShouldSerializeCommandBindings は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool ShouldSerializeCommandBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Windows.UIElement3D.CommandBindings*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.UIElement3D.CommandBindings*> 。"
  overload: System.Windows.UIElement3D.ShouldSerializeCommandBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings
  id: ShouldSerializeInputBindings
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement3D.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "シリアル化プロセスが、<xref:System.Windows.UIElement3D.InputBindings*>このクラスのインスタンスのプロパティ</xref:System.Windows.UIElement3D.InputBindings*>の内容をシリアル化する必要かどうかを返します"
  remarks: "これは、戻り値は`true`場合<xref:System.Windows.UIElement3D.InputBindings%2A>ローカルに設定します</xref:System.Windows.UIElement3D.InputBindings%2A>。       これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.UIElement3D.InputBindings%2A>プロパティには、単純な既定値にありません</xref:System.Windows.UIElement3D.InputBindings%2A>。 このメソッドは、既定値から、プロパティが変更されたかどうかを示します。 デザイナーを開発または<xref:System.Windows.UIElement3D>。</xref:System.Windows.UIElement3D>を組み込む独自のコントロールを開発する場合に通常、このメソッドが呼び出す       詳細については、次を参照してください。 [ShouldSerialize およびリセット メソッドを使用して既定値を定義する](~/add/includes/ajax-current-ext-md.md)です。       ShouldSerializeInputBindings は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool ShouldSerializeInputBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Windows.UIElement3D.InputBindings*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.UIElement3D.InputBindings*> 。"
  overload: System.Windows.UIElement3D.ShouldSerializeInputBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonDown
  id: StylusButtonDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonDown
  nameWithType: UIElement3D.StylusButtonDown
  fullName: System.Windows.UIElement3D.StylusButtonDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ポインターがこの要素上でスタイラス ボタンが押されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>StylusButtonDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>。 StylusButtonDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusButtonDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusButtonDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusButtonEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.</xref:System.Windows.UIElement3D.PreviewStylusButtonDown> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.StylusButtonDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusButtonDown%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonDownEvent
  id: StylusButtonDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonDownEvent
  nameWithType: UIElement3D.StylusButtonDownEvent
  fullName: System.Windows.UIElement3D.StylusButtonDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusButtonDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusButtonDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonUp
  id: StylusButtonUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonUp
  nameWithType: UIElement3D.StylusButtonUp
  fullName: System.Windows.UIElement3D.StylusButtonUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ポインターがこの要素上でスタイラス ボタンが離されたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>StylusButtonUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>。 StylusButtonUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusButtonUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusButtonUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusButtonEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.</xref:System.Windows.UIElement3D.PreviewStylusButtonUp> </xref:System.Windows.Input.StylusButtonEventHandler> </xref:System.Windows.UIElement3D.StylusButtonUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusButtonUp%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;
    return:
      type: System.Windows.Input.StylusButtonEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusButtonUpEvent
  id: StylusButtonUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusButtonUpEvent
  nameWithType: UIElement3D.StylusButtonUpEvent
  fullName: System.Windows.UIElement3D.StylusButtonUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusButtonUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusButtonUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusDown
  id: StylusDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusDown
  nameWithType: UIElement3D.StylusDown
  fullName: System.Windows.UIElement3D.StylusDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスがこの要素上でスタイラスがデジタイザーに触れたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>StylusDown が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>。 StylusDown イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusDown?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusDown は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusDownEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusDownEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusDown>.</xref:System.Windows.UIElement3D.PreviewStylusDown> </xref:System.Windows.Input.StylusDownEventHandler> </xref:System.Windows.UIElement3D.StylusDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusDown%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusDownEventHandler StylusDown;
    return:
      type: System.Windows.Input.StylusDownEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusDownEvent
  id: StylusDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusDownEvent
  nameWithType: UIElement3D.StylusDownEvent
  fullName: System.Windows.UIElement3D.StylusDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusDown&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusDownEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusEnter
  id: StylusEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusEnter
  nameWithType: UIElement3D.StylusEnter
  fullName: System.Windows.UIElement3D.StylusEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスがこの要素の境界に入ったときに発生します。"
  remarks: "StylusEnter は、[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)直接イベント ルーティング方法の処理を使用します。 ルート; 直接ルーティングされたイベントは発生しません代わりが処理される同じ要素では、発生します。 ただし、スタイルでのイベント トリガーなどのルーティング イベントの動作の他の側面を有効にする操作を行います。       StylusEnter を追跡、スタイラスが要素の境界に入ったときに、このイベントより文字どおりを報告している、<xref:System.Windows.UIElement3D.IsStylusOver%2A>からプロパティ値が変更された`false`に`true`この要素上です</xref:System.Windows.UIElement3D.IsStylusOver%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>StylusEnter が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>。 StylusEnter イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusEnter は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusEnter&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusEnterEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnStylusEnter%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusEnter%2A></xref:System.Windows.Input.StylusEventHandler></xref:System.Windows.UIElement3D.StylusEnterEvent>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusEnter;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusEnterEvent
  id: StylusEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusEnterEvent
  nameWithType: UIElement3D.StylusEnterEvent
  fullName: System.Windows.UIElement3D.StylusEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusEnter&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusEnterEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInAirMove
  id: StylusInAirMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInAirMove
  nameWithType: UIElement3D.StylusInAirMove
  fullName: System.Windows.UIElement3D.StylusInAirMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "実際には、デジタイザーに触れることがなく要素上でスタイラスを動かしたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、<xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>なく stylusinairmove イベントが一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>。 なく stylusinairmove イベントのイベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       なく stylusinairmove イベントは、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusInAirMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.</xref:System.Windows.UIElement3D.PreviewStylusInAirMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusInAirMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusInAirMove%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInAirMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInAirMoveEvent
  id: StylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInAirMoveEvent
  nameWithType: UIElement3D.StylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusInAirMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusInAirMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInRange
  id: StylusInRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInRange
  nameWithType: UIElement3D.StylusInRange
  fullName: System.Windows.UIElement3D.StylusInRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスがこの要素上で検出されるまでデジタイザーに近づいたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>StylusInRange が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>。 StylusInRange イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusInRange は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusInRange&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusInRange>.</xref:System.Windows.UIElement3D.PreviewStylusInRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusInRangeEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusInRange%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusInRange%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusInRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusInRangeEvent
  id: StylusInRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusInRangeEvent
  nameWithType: UIElement3D.StylusInRangeEvent
  fullName: System.Windows.UIElement3D.StylusInRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusInRange&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusInRangeEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusInRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusLeave
  id: StylusLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusLeave
  nameWithType: UIElement3D.StylusLeave
  fullName: System.Windows.UIElement3D.StylusLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスが要素の境界から出たときに発生します。"
  remarks: "StylusLeave は、[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)直接イベント ルーティング方法の処理を使用します。 ルート; 直接ルーティングされたイベントは発生しません代わりが処理される同じ要素では、発生します。 ただし、スタイルでのイベント トリガーなどのルーティング イベントの動作の他の側面を有効にする操作を行います。       StylusLeave を追跡スタイラスが要素の境界から出たときに、このイベントより文字どおりを報告している、<xref:System.Windows.UIElement3D.IsStylusOver%2A>からプロパティ値が変更された`true`に`false`この要素上です</xref:System.Windows.UIElement3D.IsStylusOver%2A>。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>StylusLeave が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>。 StylusLeave イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusLeave は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusLeave&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     -オーバーライド<xref:System.Windows.UIElement3D.OnStylusLeave%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusLeave%2A></xref:System.Windows.Input.StylusEventHandler></xref:System.Windows.UIElement3D.StylusLeaveEvent>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusLeave;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusLeaveEvent
  id: StylusLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusLeaveEvent
  nameWithType: UIElement3D.StylusLeaveEvent
  fullName: System.Windows.UIElement3D.StylusLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusLeave&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusLeaveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusMove
  id: StylusMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusMove
  nameWithType: UIElement3D.StylusMove
  fullName: System.Windows.UIElement3D.StylusMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素上でスタイラスを動かしたときに発生します。 スタイラスがデジタイザーにこのイベントを発生時に移動する必要があります。 それ以外の場合、 <xref href=&quot;System.Windows.UIElement3D.StylusInAirMove&quot;> </xref>が代わりに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>StylusMove が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>。 StylusMove イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusMove?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusMove は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusMoveEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusMove>.</xref:System.Windows.UIElement3D.PreviewStylusMove> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusMove%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusMove;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusMoveEvent
  id: StylusMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusMoveEvent
  nameWithType: UIElement3D.StylusMoveEvent
  fullName: System.Windows.UIElement3D.StylusMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusMove&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusMoveEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusOutOfRange
  id: StylusOutOfRange
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusOutOfRange
  nameWithType: UIElement3D.StylusOutOfRange
  fullName: System.Windows.UIElement3D.StylusOutOfRange
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "スタイラスがこの要素上で、検出されたデジタイザーから離れすぎているときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>StylusOutOfRange が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>。 StylusOutOfRange イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusOutOfRange は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusOutOfRange&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.</xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusOutOfRange;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent
  id: StylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusOutOfRangeEvent
  nameWithType: UIElement3D.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusOutOfRange&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusOutOfRangeEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusSystemGesture
  id: StylusSystemGesture
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusSystemGesture
  nameWithType: UIElement3D.StylusSystemGesture
  fullName: System.Windows.UIElement3D.StylusSystemGesture
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ユーザーがいずれかのスタイラス ジェスチャを実行したときに発生します。"
  remarks: "スタイラス ジェスチャの詳細については、 <xref:System.Windows.Input.SystemGesture>。</xref:System.Windows.Input.SystemGesture>を参照してください。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>StylusSystemGesture が一部になるように、このクラスのイベントを接続されているクラスのメンバーのリスト<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>。 StylusSystemGesture イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusSystemGesture は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusSystemGesture&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusSystemGestureEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.</xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> </xref:System.Windows.Input.StylusSystemGestureEventHandler> </xref:System.Windows.UIElement3D.StylusSystemGestureEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;
    return:
      type: System.Windows.Input.StylusSystemGestureEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusSystemGestureEvent
  id: StylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusSystemGestureEvent
  nameWithType: UIElement3D.StylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusSystemGesture&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusSystemGestureEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusUp
  id: StylusUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusUp
  nameWithType: UIElement3D.StylusUp
  fullName: System.Windows.UIElement3D.StylusUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素上で、ユーザーがスタイラスをデジタイザーから離れたときに発生します。"
  remarks: "このイベントのエイリアスを作成する、 <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>StylusUp が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>。 StylusUp イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.Stylus.StylusUp?displayProperty=fullName>。       タッチ、マウス、およびスタイラス入力は、特定のリレーションシップに存在します。 詳細については、次を参照してください。 [Windows Vista でタッチ入力サポート](http://go.microsoft.com/fwlink/?LinkId=160818)と[入力概要](~/add/includes/ajax-current-ext-md.md)です。       StylusUp は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_StylusUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.StylusUpEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.StylusEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewStylusUp>.</xref:System.Windows.UIElement3D.PreviewStylusUp> </xref:System.Windows.Input.StylusEventHandler> </xref:System.Windows.UIElement3D.StylusUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnStylusUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnStylusUp%2A>。"
  syntax:
    content: public event System.Windows.Input.StylusEventHandler StylusUp;
    return:
      type: System.Windows.Input.StylusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.StylusUpEvent
  id: StylusUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: StylusUpEvent
  nameWithType: UIElement3D.StylusUpEvent
  fullName: System.Windows.UIElement3D.StylusUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.StylusUp&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       StylusUpEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent StylusUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TextInput
  id: TextInput
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TextInput
  nameWithType: UIElement3D.TextInput
  fullName: System.Windows.UIElement3D.TextInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素は、デバイスに依存しない方法でテキストを取得したときに発生します。"
  remarks: "TextInput イベントは、コンポーネントまたはデバイスに依存しない方法でテキスト入力にリッスンするようにアプリケーションを使用します。 キーボードは TextInput が、音声の手書きの主な手段とも、他の入力デバイスは TextInput を生成する可能性ができます。       キーの組み合わせのため — 既定のキーボードまたは入力方式エディターから — 複数のキー イベントが&1; つのテキスト入力イベントを発生させることができます。       このイベントのエイリアスを作成する、 <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>TextInput が一部になるように、このクラスのイベントをアタッチ クラスのメンバー一覧をいつ<xref:System.Windows.UIElement3D>基本要素として継承します</xref:System.Windows.UIElement3D></xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>。 TextInput イベントに関連付けられているイベント ハンドラーが、基になるに関連付けられている<xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>添付イベントと同じイベント データ インスタンスを受信します</xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=fullName>。       TextInput は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;routedEventInfo_TextInput&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TextInputEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.Windows.Input.TextCompositionEventHandler>|     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewTextInput>.</xref:System.Windows.UIElement3D.PreviewTextInput> </xref:System.Windows.Input.TextCompositionEventHandler> </xref:System.Windows.UIElement3D.TextInputEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnTextInput%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTextInput%2A>。"
  syntax:
    content: public event System.Windows.Input.TextCompositionEventHandler TextInput;
    return:
      type: System.Windows.Input.TextCompositionEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TextInputEvent
  id: TextInputEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TextInputEvent
  nameWithType: UIElement3D.TextInputEvent
  fullName: System.Windows.UIElement3D.TextInputEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TextInput&quot;> </xref>ルーティングされたイベント。"
  remarks: "ルーティング イベントの識別子は、ルーティングされたイベントが登録されているときに作成されます。 これらの識別子には、識別名、所有者型、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティ メソッドが含まれます。 これらの識別子を使用すると、クラス ハンドラーを追加します。       ルーティング イベントの登録の詳細については、 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>を参照してください。 ルーティング イベントの識別子を使用して、クラス ハンドラーを追加する方法の詳細については、 <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A>を参照してください。       TextInputEvent は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TextInputEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchDown
  id: TouchDown
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchDown
  nameWithType: UIElement3D.TouchDown
  fullName: System.Windows.UIElement3D.TouchDown
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面に触れると発生します。"
  remarks: "既定では、<xref:System.Windows.UIElement3D.PreviewTouchDown>し、指が画面に触れるし、移動するまで接地イベントは発生しません</xref:System.Windows.UIElement3D.PreviewTouchDown>。 移動することがなく保持したりする画面に指を押すと、キーを押して発生して<xref:System.Windows.Input.Stylus>。</xref:System.Windows.Input.Stylus>の動作を保持 プレス アンド ホールド動作は、マウスの右クリックに相当します。       により、<xref:System.Windows.UIElement3D.PreviewTouchDown>接地イベントは、画面に触れるとすぐにも発生を設定し、<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName>添付プロパティ`false`この要素の</xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=fullName></xref:System.Windows.UIElement3D.PreviewTouchDown>。      <a name=&quot;routedEventInfo_TouchDown&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TouchDownEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewTouchDown>.</xref:System.Windows.UIElement3D.PreviewTouchDown> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchDownEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnTouchDown%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTouchDown%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchDown;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchDownEvent
  id: TouchDownEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchDownEvent
  nameWithType: UIElement3D.TouchDownEvent
  fullName: System.Windows.UIElement3D.TouchDownEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TouchDown&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchDownEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchEnter
  id: TouchEnter
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchEnter
  nameWithType: UIElement3D.TouchEnter
  fullName: System.Windows.UIElement3D.TouchEnter
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "タッチから移動するときに発生するこの要素の境界内の外部です。"
  remarks: "このイベントはタッチ デバイスがこの要素にキャプチャされるかどうか常に発生します。      <a name=&quot;routedEventInfo_TouchEnter&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TouchEnterEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     -オーバーライド<xref:System.Windows.UIElement3D.OnTouchEnter%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTouchEnter%2A></xref:System.Windows.Input.TouchEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement3D.TouchEnterEvent>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchEnter;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchEnterEvent
  id: TouchEnterEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchEnterEvent
  nameWithType: UIElement3D.TouchEnterEvent
  fullName: System.Windows.UIElement3D.TouchEnterEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TouchEnter&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchEnterEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesCaptured
  id: TouchesCaptured
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
  fullName: System.Windows.UIElement3D.TouchesCaptured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素にキャプチャされているすべてのタッチ デバイスを取得します。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCaptured { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "列挙体<xref href=&quot;System.Windows.Input.TouchDevice&quot;></xref>をこの要素にキャプチャされているオブジェクト。"
  overload: System.Windows.UIElement3D.TouchesCaptured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesCapturedWithin
  id: TouchesCapturedWithin
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
  fullName: System.Windows.UIElement3D.TouchesCapturedWithin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "そのビジュアル ツリー内には、この要素にキャプチャされているすべてのタッチ デバイスまたはすべての子要素を取得します。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesCapturedWithin { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "列挙体<xref href=&quot;System.Windows.Input.TouchDevice&quot;></xref>この要素またはそのビジュアル ツリー内の任意の子要素にキャプチャされているオブジェクト。"
  overload: System.Windows.UIElement3D.TouchesCapturedWithin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesDirectlyOver
  id: TouchesDirectlyOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
  fullName: System.Windows.UIElement3D.TouchesDirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上にあるすべてのタッチ デバイスを取得します。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesDirectlyOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "列挙体<xref href=&quot;System.Windows.Input.TouchDevice&quot;></xref>この要素の上にあるオブジェクト。"
  overload: System.Windows.UIElement3D.TouchesDirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchesOver
  id: TouchesOver
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
  fullName: System.Windows.UIElement3D.TouchesOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "そのビジュアル ツリー内には、この要素の上にあるすべてのタッチ デバイスまたはすべての子要素を取得します。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice> TouchesOver { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
      description: "列挙体<xref href=&quot;System.Windows.Input.TouchDevice&quot;></xref>この要素またはそのビジュアル ツリー内のすべての子要素の上にあるオブジェクト。"
  overload: System.Windows.UIElement3D.TouchesOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchLeave
  id: TouchLeave
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchLeave
  nameWithType: UIElement3D.TouchLeave
  fullName: System.Windows.UIElement3D.TouchLeave
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "タッチから移動するときに発生するこの要素の境界の外側の内部です。"
  remarks: "<a name=&quot;routedEventInfo_TouchLeave&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  |ルーティング方法 |直接 |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     -オーバーライド<xref:System.Windows.UIElement3D.OnTouchLeave%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTouchLeave%2A></xref:System.Windows.Input.TouchEventArgs></xref:System.EventHandler%601></xref:System.Windows.UIElement3D.TouchLeaveEvent>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchLeave;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchLeaveEvent
  id: TouchLeaveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchLeaveEvent
  nameWithType: UIElement3D.TouchLeaveEvent
  fullName: System.Windows.UIElement3D.TouchLeaveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TouchLeave&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchLeaveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchMove
  id: TouchMove
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchMove
  nameWithType: UIElement3D.TouchMove
  fullName: System.Windows.UIElement3D.TouchMove
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面に指を動かしたときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_TouchMove&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TouchMoveEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応する-トンネリング イベントは<xref:System.Windows.UIElement3D.PreviewTouchMove>.</xref:System.Windows.UIElement3D.PreviewTouchMove> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchMoveEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnTouchMove%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTouchMove%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchMove;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchMoveEvent
  id: TouchMoveEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchMoveEvent
  nameWithType: UIElement3D.TouchMoveEvent
  fullName: System.Windows.UIElement3D.TouchMoveEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TouchMove&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchMoveEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchUp
  id: TouchUp
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchUp
  nameWithType: UIElement3D.TouchUp
  fullName: System.Windows.UIElement3D.TouchUp
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この要素の上に指が画面から離れる指が発生したときに発生します。"
  remarks: "<a name=&quot;routedEventInfo_TouchUp&quot;></a>## イベント情報をルーティング | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.TouchUpEvent>|  |ルーティング方法 |バブル |  |デリゲート |<xref:System.EventHandler%601>型<xref:System.Windows.Input.TouchEventArgs>|。     対応するトンネル イベントは<xref:System.Windows.UIElement3D.PreviewTouchUp>.</xref:System.Windows.UIElement3D.PreviewTouchUp> </xref:System.Windows.Input.TouchEventArgs> </xref:System.EventHandler%601> </xref:System.Windows.UIElement3D.TouchUpEvent>      -オーバーライド<xref:System.Windows.UIElement3D.OnTouchUp%2A>派生クラスでは、このイベントに対するクラス処理を実装する</xref:System.Windows.UIElement3D.OnTouchUp%2A>。"
  syntax:
    content: public event EventHandler<System.Windows.Input.TouchEventArgs> TouchUp;
    return:
      type: System.EventHandler{System.Windows.Input.TouchEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.TouchUpEvent
  id: TouchUpEvent
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: TouchUpEvent
  nameWithType: UIElement3D.TouchUpEvent
  fullName: System.Windows.UIElement3D.TouchUpEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、 <xref href=&quot;System.Windows.UIElement3D.TouchUp&quot;> </xref>ルーティングされたイベント。"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TouchUpEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.Visibility
  id: Visibility
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: Visibility
  nameWithType: UIElement3D.Visibility
  fullName: System.Windows.UIElement3D.Visibility
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "取得または設定、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]この要素を表示します。"
  remarks: "このプロパティの設定の値に影響を与える<xref:System.Windows.UIElement3D.IsVisible%2A>が発生する可能性がさらに、<xref:System.Windows.UIElement3D.IsVisibleChanged>イベント</xref:System.Windows.UIElement3D.IsVisibleChanged></xref:System.Windows.UIElement3D.IsVisible%2A>。 ただし<xref:System.Windows.UIElement3D.IsVisible%2A>がそれが含まれている親の可視性の設定のインスタンスに影響するその他の要因</xref:System.Windows.UIElement3D.IsVisible%2A>       要素の表示が行われていない<xref:System.Windows.Visibility>入力イベント (またはコマンド) に参加していないと、ヒット テストでは報告されません</xref:System.Windows.Visibility>。       可視性は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_Visibility&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.UIElement3D.VisibilityProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.UIElement3D.VisibilityProperty>"
  syntax:
    content: public System.Windows.Visibility Visibility { get; set; }
    return:
      type: System.Windows.Visibility
      description: "列挙体の値です。 既定値は<xref href=&quot;System.Windows.Visibility&quot;></xref>です。"
  overload: System.Windows.UIElement3D.Visibility*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.UIElement3D.VisibilityProperty
  id: VisibilityProperty
  parent: System.Windows.UIElement3D
  langs:
  - csharp
  name: VisibilityProperty
  nameWithType: UIElement3D.VisibilityProperty
  fullName: System.Windows.UIElement3D.VisibilityProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "識別、<xref:System.Windows.UIElement3D.Visibility*>依存関係プロパティ</xref:System.Windows.UIElement3D.Visibility*>。"
  remarks: "VisibilityProperty は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty VisibilityProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Media3D.Visual3D
  isExternal: false
  name: System.Windows.Media.Media3D.Visual3D
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.UIElement3D.#ctor
  parent: System.Windows.UIElement3D
  isExternal: false
  name: UIElement3D()
  nameWithType: UIElement3D.UIElement3D()
  fullName: System.Windows.UIElement3D.UIElement3D()
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.UIElement3D.AddHandler(RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddToEventRoute(EventRoute,RoutedEventArgs)
  nameWithType: UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
  fullName: System.Windows.UIElement3D.AddToEventRoute(EventRoute,RoutedEventArgs)
- uid: System.Windows.EventRoute
  parent: System.Windows
  isExternal: false
  name: EventRoute
  nameWithType: EventRoute
  fullName: System.Windows.EventRoute
- uid: System.Windows.RoutedEventArgs
  parent: System.Windows
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.UIElement3D.AllowDrop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
  fullName: System.Windows.UIElement3D.AllowDrop
- uid: System.Windows.UIElement3D.AllowDropProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDropProperty
  nameWithType: UIElement3D.AllowDropProperty
  fullName: System.Windows.UIElement3D.AllowDropProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
  fullName: System.Windows.UIElement3D.AreAnyTouchesCaptured
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithinProperty
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithinProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOverProperty
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty
- uid: System.Windows.UIElement3D.AreAnyTouchesOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
  fullName: System.Windows.UIElement3D.AreAnyTouchesOver
- uid: System.Windows.UIElement3D.AreAnyTouchesOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOverProperty
  nameWithType: UIElement3D.AreAnyTouchesOverProperty
  fullName: System.Windows.UIElement3D.AreAnyTouchesOverProperty
- uid: System.Windows.UIElement3D.CaptureMouse
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureMouse()
  nameWithType: UIElement3D.CaptureMouse()
  fullName: System.Windows.UIElement3D.CaptureMouse()
- uid: System.Windows.UIElement3D.CaptureStylus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureStylus()
  nameWithType: UIElement3D.CaptureStylus()
  fullName: System.Windows.UIElement3D.CaptureStylus()
- uid: System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureTouch(TouchDevice)
  nameWithType: UIElement3D.CaptureTouch(TouchDevice)
  fullName: System.Windows.UIElement3D.CaptureTouch(TouchDevice)
- uid: System.Windows.Input.TouchDevice
  parent: System.Windows.Input
  isExternal: false
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: System.Windows.Input.TouchDevice
- uid: System.Windows.UIElement3D.CommandBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
  fullName: System.Windows.UIElement3D.CommandBindings
- uid: System.Windows.Input.CommandBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: CommandBindingCollection
  nameWithType: CommandBindingCollection
  fullName: System.Windows.Input.CommandBindingCollection
- uid: System.Windows.UIElement3D.DragEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragEnter
  nameWithType: UIElement3D.DragEnter
  fullName: System.Windows.UIElement3D.DragEnter
- uid: System.Windows.DragEventHandler
  parent: System.Windows
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.DragEventHandler
- uid: System.Windows.UIElement3D.DragEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragEnterEvent
  nameWithType: UIElement3D.DragEnterEvent
  fullName: System.Windows.UIElement3D.DragEnterEvent
- uid: System.Windows.UIElement3D.DragLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragLeave
  nameWithType: UIElement3D.DragLeave
  fullName: System.Windows.UIElement3D.DragLeave
- uid: System.Windows.UIElement3D.DragLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragLeaveEvent
  nameWithType: UIElement3D.DragLeaveEvent
  fullName: System.Windows.UIElement3D.DragLeaveEvent
- uid: System.Windows.UIElement3D.DragOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragOver
  nameWithType: UIElement3D.DragOver
  fullName: System.Windows.UIElement3D.DragOver
- uid: System.Windows.UIElement3D.DragOverEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DragOverEvent
  nameWithType: UIElement3D.DragOverEvent
  fullName: System.Windows.UIElement3D.DragOverEvent
- uid: System.Windows.UIElement3D.Drop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Drop
  nameWithType: UIElement3D.Drop
  fullName: System.Windows.UIElement3D.Drop
- uid: System.Windows.UIElement3D.DropEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: DropEvent
  nameWithType: UIElement3D.DropEvent
  fullName: System.Windows.UIElement3D.DropEvent
- uid: System.Windows.UIElement3D.Focus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focus()
  nameWithType: UIElement3D.Focus()
  fullName: System.Windows.UIElement3D.Focus()
- uid: System.Windows.UIElement3D.Focusable
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focusable
  nameWithType: UIElement3D.Focusable
  fullName: System.Windows.UIElement3D.Focusable
- uid: System.Windows.UIElement3D.FocusableChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: FocusableChanged
  nameWithType: UIElement3D.FocusableChanged
  fullName: System.Windows.UIElement3D.FocusableChanged
- uid: System.Windows.DependencyPropertyChangedEventHandler
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventHandler
  nameWithType: DependencyPropertyChangedEventHandler
  fullName: System.Windows.DependencyPropertyChangedEventHandler
- uid: System.Windows.UIElement3D.FocusableProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: FocusableProperty
  nameWithType: UIElement3D.FocusableProperty
  fullName: System.Windows.UIElement3D.FocusableProperty
- uid: System.Windows.UIElement3D.GetUIParentCore
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GetUIParentCore()
  nameWithType: UIElement3D.GetUIParentCore()
  fullName: System.Windows.UIElement3D.GetUIParentCore()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.UIElement3D.GiveFeedback
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GiveFeedback
  nameWithType: UIElement3D.GiveFeedback
  fullName: System.Windows.UIElement3D.GiveFeedback
- uid: System.Windows.GiveFeedbackEventHandler
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.GiveFeedbackEventHandler
- uid: System.Windows.UIElement3D.GiveFeedbackEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GiveFeedbackEvent
  nameWithType: UIElement3D.GiveFeedbackEvent
  fullName: System.Windows.UIElement3D.GiveFeedbackEvent
- uid: System.Windows.UIElement3D.GotFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotFocus
  nameWithType: UIElement3D.GotFocus
  fullName: System.Windows.UIElement3D.GotFocus
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.UIElement3D.GotFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotFocusEvent
  nameWithType: UIElement3D.GotFocusEvent
  fullName: System.Windows.UIElement3D.GotFocusEvent
- uid: System.Windows.UIElement3D.GotKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotKeyboardFocus
  nameWithType: UIElement3D.GotKeyboardFocus
  fullName: System.Windows.UIElement3D.GotKeyboardFocus
- uid: System.Windows.Input.KeyboardFocusChangedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventHandler
  nameWithType: KeyboardFocusChangedEventHandler
  fullName: System.Windows.Input.KeyboardFocusChangedEventHandler
- uid: System.Windows.UIElement3D.GotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotKeyboardFocusEvent
  nameWithType: UIElement3D.GotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.GotKeyboardFocusEvent
- uid: System.Windows.UIElement3D.GotMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotMouseCapture
  nameWithType: UIElement3D.GotMouseCapture
  fullName: System.Windows.UIElement3D.GotMouseCapture
- uid: System.Windows.Input.MouseEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Input.MouseEventHandler
- uid: System.Windows.UIElement3D.GotMouseCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotMouseCaptureEvent
  nameWithType: UIElement3D.GotMouseCaptureEvent
  fullName: System.Windows.UIElement3D.GotMouseCaptureEvent
- uid: System.Windows.UIElement3D.GotStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotStylusCapture
  nameWithType: UIElement3D.GotStylusCapture
  fullName: System.Windows.UIElement3D.GotStylusCapture
- uid: System.Windows.Input.StylusEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventHandler
  nameWithType: StylusEventHandler
  fullName: System.Windows.Input.StylusEventHandler
- uid: System.Windows.UIElement3D.GotStylusCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotStylusCaptureEvent
  nameWithType: UIElement3D.GotStylusCaptureEvent
  fullName: System.Windows.UIElement3D.GotStylusCaptureEvent
- uid: System.Windows.UIElement3D.GotTouchCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotTouchCapture
  nameWithType: UIElement3D.GotTouchCapture
  fullName: System.Windows.UIElement3D.GotTouchCapture
- uid: System.EventHandler{System.Windows.Input.TouchEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TouchEventArgs>
  nameWithType: EventHandler<TouchEventArgs>
  fullName: System.EventHandler<System.Windows.Input.TouchEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.TouchEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchEventArgs
    name: TouchEventArgs
    nameWithType: TouchEventArgs
    fullName: TouchEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement3D.GotTouchCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GotTouchCaptureEvent
  nameWithType: UIElement3D.GotTouchCaptureEvent
  fullName: System.Windows.UIElement3D.GotTouchCaptureEvent
- uid: System.Windows.UIElement3D.InputBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
  fullName: System.Windows.UIElement3D.InputBindings
- uid: System.Windows.Input.InputBindingCollection
  parent: System.Windows.Input
  isExternal: false
  name: InputBindingCollection
  nameWithType: InputBindingCollection
  fullName: System.Windows.Input.InputBindingCollection
- uid: System.Windows.UIElement3D.InvalidateModel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InvalidateModel()
  nameWithType: UIElement3D.InvalidateModel()
  fullName: System.Windows.UIElement3D.InvalidateModel()
- uid: System.Windows.UIElement3D.IsEnabled
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
  fullName: System.Windows.UIElement3D.IsEnabled
- uid: System.Windows.UIElement3D.IsEnabledChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledChanged
  nameWithType: UIElement3D.IsEnabledChanged
  fullName: System.Windows.UIElement3D.IsEnabledChanged
- uid: System.Windows.UIElement3D.IsEnabledCore
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
  fullName: System.Windows.UIElement3D.IsEnabledCore
- uid: System.Windows.UIElement3D.IsEnabledProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledProperty
  nameWithType: UIElement3D.IsEnabledProperty
  fullName: System.Windows.UIElement3D.IsEnabledProperty
- uid: System.Windows.UIElement3D.IsFocused
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
  fullName: System.Windows.UIElement3D.IsFocused
- uid: System.Windows.UIElement3D.IsFocusedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocusedProperty
  nameWithType: UIElement3D.IsFocusedProperty
  fullName: System.Windows.UIElement3D.IsFocusedProperty
- uid: System.Windows.UIElement3D.IsHitTestVisible
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
  fullName: System.Windows.UIElement3D.IsHitTestVisible
- uid: System.Windows.UIElement3D.IsHitTestVisibleChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisibleChanged
  nameWithType: UIElement3D.IsHitTestVisibleChanged
  fullName: System.Windows.UIElement3D.IsHitTestVisibleChanged
- uid: System.Windows.UIElement3D.IsHitTestVisibleProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisibleProperty
  nameWithType: UIElement3D.IsHitTestVisibleProperty
  fullName: System.Windows.UIElement3D.IsHitTestVisibleProperty
- uid: System.Windows.UIElement3D.IsInputMethodEnabled
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
  fullName: System.Windows.UIElement3D.IsInputMethodEnabled
- uid: System.Windows.UIElement3D.IsKeyboardFocused
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
  fullName: System.Windows.UIElement3D.IsKeyboardFocused
- uid: System.Windows.UIElement3D.IsKeyboardFocusedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusedChanged
  nameWithType: UIElement3D.IsKeyboardFocusedChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedChanged
- uid: System.Windows.UIElement3D.IsKeyboardFocusedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusedProperty
  nameWithType: UIElement3D.IsKeyboardFocusedProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusedProperty
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithin
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.IsKeyboardFocusWithinChanged
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithinProperty
  nameWithType: UIElement3D.IsKeyboardFocusWithinProperty
  fullName: System.Windows.UIElement3D.IsKeyboardFocusWithinProperty
- uid: System.Windows.UIElement3D.IsMouseCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
  fullName: System.Windows.UIElement3D.IsMouseCaptured
- uid: System.Windows.UIElement3D.IsMouseCapturedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCapturedChanged
  nameWithType: UIElement3D.IsMouseCapturedChanged
  fullName: System.Windows.UIElement3D.IsMouseCapturedChanged
- uid: System.Windows.UIElement3D.IsMouseCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCapturedProperty
  nameWithType: UIElement3D.IsMouseCapturedProperty
  fullName: System.Windows.UIElement3D.IsMouseCapturedProperty
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithin
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithinChanged
  nameWithType: UIElement3D.IsMouseCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinChanged
- uid: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithinProperty
  nameWithType: UIElement3D.IsMouseCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsMouseCaptureWithinProperty
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOver
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOverChanged
  nameWithType: UIElement3D.IsMouseDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverChanged
- uid: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOverProperty
  nameWithType: UIElement3D.IsMouseDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsMouseDirectlyOverProperty
- uid: System.Windows.UIElement3D.IsMouseOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
  fullName: System.Windows.UIElement3D.IsMouseOver
- uid: System.Windows.UIElement3D.IsMouseOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOverProperty
  nameWithType: UIElement3D.IsMouseOverProperty
  fullName: System.Windows.UIElement3D.IsMouseOverProperty
- uid: System.Windows.UIElement3D.IsStylusCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
  fullName: System.Windows.UIElement3D.IsStylusCaptured
- uid: System.Windows.UIElement3D.IsStylusCapturedChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCapturedChanged
  nameWithType: UIElement3D.IsStylusCapturedChanged
  fullName: System.Windows.UIElement3D.IsStylusCapturedChanged
- uid: System.Windows.UIElement3D.IsStylusCapturedProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCapturedProperty
  nameWithType: UIElement3D.IsStylusCapturedProperty
  fullName: System.Windows.UIElement3D.IsStylusCapturedProperty
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithin
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithinChanged
  nameWithType: UIElement3D.IsStylusCaptureWithinChanged
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinChanged
- uid: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithinProperty
  nameWithType: UIElement3D.IsStylusCaptureWithinProperty
  fullName: System.Windows.UIElement3D.IsStylusCaptureWithinProperty
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOver
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOverChanged
  nameWithType: UIElement3D.IsStylusDirectlyOverChanged
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverChanged
- uid: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOverProperty
  nameWithType: UIElement3D.IsStylusDirectlyOverProperty
  fullName: System.Windows.UIElement3D.IsStylusDirectlyOverProperty
- uid: System.Windows.UIElement3D.IsStylusOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
  fullName: System.Windows.UIElement3D.IsStylusOver
- uid: System.Windows.UIElement3D.IsStylusOverProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOverProperty
  nameWithType: UIElement3D.IsStylusOverProperty
  fullName: System.Windows.UIElement3D.IsStylusOverProperty
- uid: System.Windows.UIElement3D.IsVisible
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
  fullName: System.Windows.UIElement3D.IsVisible
- uid: System.Windows.UIElement3D.IsVisibleChanged
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisibleChanged
  nameWithType: UIElement3D.IsVisibleChanged
  fullName: System.Windows.UIElement3D.IsVisibleChanged
- uid: System.Windows.UIElement3D.IsVisibleProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisibleProperty
  nameWithType: UIElement3D.IsVisibleProperty
  fullName: System.Windows.UIElement3D.IsVisibleProperty
- uid: System.Windows.UIElement3D.KeyDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyDown
  nameWithType: UIElement3D.KeyDown
  fullName: System.Windows.UIElement3D.KeyDown
- uid: System.Windows.Input.KeyEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Input.KeyEventHandler
- uid: System.Windows.UIElement3D.KeyDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyDownEvent
  nameWithType: UIElement3D.KeyDownEvent
  fullName: System.Windows.UIElement3D.KeyDownEvent
- uid: System.Windows.UIElement3D.KeyUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyUp
  nameWithType: UIElement3D.KeyUp
  fullName: System.Windows.UIElement3D.KeyUp
- uid: System.Windows.UIElement3D.KeyUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: KeyUpEvent
  nameWithType: UIElement3D.KeyUpEvent
  fullName: System.Windows.UIElement3D.KeyUpEvent
- uid: System.Windows.UIElement3D.LostFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostFocus
  nameWithType: UIElement3D.LostFocus
  fullName: System.Windows.UIElement3D.LostFocus
- uid: System.Windows.UIElement3D.LostFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostFocusEvent
  nameWithType: UIElement3D.LostFocusEvent
  fullName: System.Windows.UIElement3D.LostFocusEvent
- uid: System.Windows.UIElement3D.LostKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostKeyboardFocus
  nameWithType: UIElement3D.LostKeyboardFocus
  fullName: System.Windows.UIElement3D.LostKeyboardFocus
- uid: System.Windows.UIElement3D.LostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostKeyboardFocusEvent
  nameWithType: UIElement3D.LostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.LostKeyboardFocusEvent
- uid: System.Windows.UIElement3D.LostMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostMouseCapture
  nameWithType: UIElement3D.LostMouseCapture
  fullName: System.Windows.UIElement3D.LostMouseCapture
- uid: System.Windows.UIElement3D.LostMouseCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostMouseCaptureEvent
  nameWithType: UIElement3D.LostMouseCaptureEvent
  fullName: System.Windows.UIElement3D.LostMouseCaptureEvent
- uid: System.Windows.UIElement3D.LostStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostStylusCapture
  nameWithType: UIElement3D.LostStylusCapture
  fullName: System.Windows.UIElement3D.LostStylusCapture
- uid: System.Windows.UIElement3D.LostStylusCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostStylusCaptureEvent
  nameWithType: UIElement3D.LostStylusCaptureEvent
  fullName: System.Windows.UIElement3D.LostStylusCaptureEvent
- uid: System.Windows.UIElement3D.LostTouchCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostTouchCapture
  nameWithType: UIElement3D.LostTouchCapture
  fullName: System.Windows.UIElement3D.LostTouchCapture
- uid: System.Windows.UIElement3D.LostTouchCaptureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: LostTouchCaptureEvent
  nameWithType: UIElement3D.LostTouchCaptureEvent
  fullName: System.Windows.UIElement3D.LostTouchCaptureEvent
- uid: System.Windows.UIElement3D.MouseDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseDown
  nameWithType: UIElement3D.MouseDown
  fullName: System.Windows.UIElement3D.MouseDown
- uid: System.Windows.Input.MouseButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventHandler
  nameWithType: MouseButtonEventHandler
  fullName: System.Windows.Input.MouseButtonEventHandler
- uid: System.Windows.UIElement3D.MouseDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseDownEvent
  nameWithType: UIElement3D.MouseDownEvent
  fullName: System.Windows.UIElement3D.MouseDownEvent
- uid: System.Windows.UIElement3D.MouseEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseEnter
  nameWithType: UIElement3D.MouseEnter
  fullName: System.Windows.UIElement3D.MouseEnter
- uid: System.Windows.UIElement3D.MouseEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseEnterEvent
  nameWithType: UIElement3D.MouseEnterEvent
  fullName: System.Windows.UIElement3D.MouseEnterEvent
- uid: System.Windows.UIElement3D.MouseLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeave
  nameWithType: UIElement3D.MouseLeave
  fullName: System.Windows.UIElement3D.MouseLeave
- uid: System.Windows.UIElement3D.MouseLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeaveEvent
  nameWithType: UIElement3D.MouseLeaveEvent
  fullName: System.Windows.UIElement3D.MouseLeaveEvent
- uid: System.Windows.UIElement3D.MouseLeftButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonDown
  nameWithType: UIElement3D.MouseLeftButtonDown
  fullName: System.Windows.UIElement3D.MouseLeftButtonDown
- uid: System.Windows.UIElement3D.MouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonDownEvent
  nameWithType: UIElement3D.MouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonDownEvent
- uid: System.Windows.UIElement3D.MouseLeftButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonUp
  nameWithType: UIElement3D.MouseLeftButtonUp
  fullName: System.Windows.UIElement3D.MouseLeftButtonUp
- uid: System.Windows.UIElement3D.MouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseLeftButtonUpEvent
  nameWithType: UIElement3D.MouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseLeftButtonUpEvent
- uid: System.Windows.UIElement3D.MouseMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseMove
  nameWithType: UIElement3D.MouseMove
  fullName: System.Windows.UIElement3D.MouseMove
- uid: System.Windows.UIElement3D.MouseMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseMoveEvent
  nameWithType: UIElement3D.MouseMoveEvent
  fullName: System.Windows.UIElement3D.MouseMoveEvent
- uid: System.Windows.UIElement3D.MouseRightButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonDown
  nameWithType: UIElement3D.MouseRightButtonDown
  fullName: System.Windows.UIElement3D.MouseRightButtonDown
- uid: System.Windows.UIElement3D.MouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonDownEvent
  nameWithType: UIElement3D.MouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonDownEvent
- uid: System.Windows.UIElement3D.MouseRightButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonUp
  nameWithType: UIElement3D.MouseRightButtonUp
  fullName: System.Windows.UIElement3D.MouseRightButtonUp
- uid: System.Windows.UIElement3D.MouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseRightButtonUpEvent
  nameWithType: UIElement3D.MouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.MouseRightButtonUpEvent
- uid: System.Windows.UIElement3D.MouseUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseUp
  nameWithType: UIElement3D.MouseUp
  fullName: System.Windows.UIElement3D.MouseUp
- uid: System.Windows.UIElement3D.MouseUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseUpEvent
  nameWithType: UIElement3D.MouseUpEvent
  fullName: System.Windows.UIElement3D.MouseUpEvent
- uid: System.Windows.UIElement3D.MouseWheel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseWheel
  nameWithType: UIElement3D.MouseWheel
  fullName: System.Windows.UIElement3D.MouseWheel
- uid: System.Windows.Input.MouseWheelEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventHandler
  nameWithType: MouseWheelEventHandler
  fullName: System.Windows.Input.MouseWheelEventHandler
- uid: System.Windows.UIElement3D.MouseWheelEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MouseWheelEvent
  nameWithType: UIElement3D.MouseWheelEvent
  fullName: System.Windows.UIElement3D.MouseWheelEvent
- uid: System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MoveFocus(TraversalRequest)
  nameWithType: UIElement3D.MoveFocus(TraversalRequest)
  fullName: System.Windows.UIElement3D.MoveFocus(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnAccessKey(AccessKeyEventArgs)
  nameWithType: UIElement3D.OnAccessKey(AccessKeyEventArgs)
  fullName: System.Windows.UIElement3D.OnAccessKey(AccessKeyEventArgs)
- uid: System.Windows.Input.AccessKeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyEventArgs
  nameWithType: AccessKeyEventArgs
  fullName: System.Windows.Input.AccessKeyEventArgs
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: UIElement3D.OnCreateAutomationPeer()
  fullName: System.Windows.UIElement3D.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragEnter(DragEventArgs)
- uid: System.Windows.DragEventArgs
  parent: System.Windows
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.DragEventArgs
- uid: System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragLeave(DragEventArgs)
- uid: System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDragOver(DragEventArgs)
- uid: System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDrop(DragEventArgs)
  nameWithType: UIElement3D.OnDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnDrop(DragEventArgs)
- uid: System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.GiveFeedbackEventArgs
  parent: System.Windows
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.GiveFeedbackEventArgs
- uid: System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnGotFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotFocus(RoutedEventArgs)
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.Input.KeyboardFocusChangedEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardFocusChangedEventArgs
  nameWithType: KeyboardFocusChangedEventArgs
  fullName: System.Windows.Input.KeyboardFocusChangedEventArgs
- uid: System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnGotMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnGotMouseCapture(MouseEventArgs)
- uid: System.Windows.Input.MouseEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
- uid: System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnGotStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnGotStylusCapture(StylusEventArgs)
- uid: System.Windows.Input.StylusEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusEventArgs
  nameWithType: StylusEventArgs
  fullName: System.Windows.Input.StylusEventArgs
- uid: System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnGotTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnGotTouchCapture(TouchEventArgs)
- uid: System.Windows.Input.TouchEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TouchEventArgs
  nameWithType: TouchEventArgs
  fullName: System.Windows.Input.TouchEventArgs
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Input.KeyEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Input.KeyEventArgs
- uid: System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostFocus(RoutedEventArgs)
  nameWithType: UIElement3D.OnLostFocus(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostFocus(RoutedEventArgs)
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostMouseCapture(MouseEventArgs)
  nameWithType: UIElement3D.OnLostMouseCapture(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnLostMouseCapture(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostStylusCapture(StylusEventArgs)
  nameWithType: UIElement3D.OnLostStylusCapture(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnLostStylusCapture(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostTouchCapture(TouchEventArgs)
  nameWithType: UIElement3D.OnLostTouchCapture(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnLostTouchCapture(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseEnter(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseEnter(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseEnter(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeave(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseLeave(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeave(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.Input.MouseWheelEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
- uid: System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragEnter(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragEnter(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragEnter(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragLeave(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragLeave(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragLeave(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragOver(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDragOver(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDragOver(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDrop(DragEventArgs)
  nameWithType: UIElement3D.OnPreviewDrop(DragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewDrop(DragEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyDown(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyDown(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyDown(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyUp(KeyEventArgs)
  nameWithType: UIElement3D.OnPreviewKeyUp(KeyEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewKeyUp(KeyEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseMove(MouseEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseMove(MouseEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseMove(MouseEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseUp(MouseButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseUp(MouseButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseWheel(MouseWheelEventArgs)
  nameWithType: UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewMouseWheel(MouseWheelEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.QueryContinueDragEventArgs
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.QueryContinueDragEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.Input.StylusButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventArgs
  nameWithType: StylusButtonEventArgs
  fullName: System.Windows.Input.StylusButtonEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusDown(StylusDownEventArgs)
- uid: System.Windows.Input.StylusDownEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventArgs
  nameWithType: StylusDownEventArgs
  fullName: System.Windows.Input.StylusDownEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.Input.StylusSystemGestureEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventArgs
  nameWithType: StylusSystemGestureEventArgs
  fullName: System.Windows.Input.StylusSystemGestureEventArgs
- uid: System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnPreviewStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTextInput(TextCompositionEventArgs)
- uid: System.Windows.Input.TextCompositionEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventArgs
  nameWithType: TextCompositionEventArgs
  fullName: System.Windows.Input.TextCompositionEventArgs
- uid: System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnPreviewTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnPreviewTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryCursor(QueryCursorEventArgs)
  nameWithType: UIElement3D.OnQueryCursor(QueryCursorEventArgs)
  fullName: System.Windows.UIElement3D.OnQueryCursor(QueryCursorEventArgs)
- uid: System.Windows.Input.QueryCursorEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventArgs
  nameWithType: QueryCursorEventArgs
  fullName: System.Windows.Input.QueryCursorEventArgs
- uid: System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonDown(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonDown(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonUp(StylusButtonEventArgs)
  nameWithType: UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusButtonUp(StylusButtonEventArgs)
- uid: System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusDown(StylusDownEventArgs)
  nameWithType: UIElement3D.OnStylusDown(StylusDownEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusDown(StylusDownEventArgs)
- uid: System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusEnter(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusEnter(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusEnter(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInAirMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInAirMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInAirMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusInRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusInRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusLeave(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusLeave(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusLeave(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusMove(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusMove(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusMove(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusOutOfRange(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusOutOfRange(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusOutOfRange(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusSystemGesture(StylusSystemGestureEventArgs)
  nameWithType: UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusSystemGesture(StylusSystemGestureEventArgs)
- uid: System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusUp(StylusEventArgs)
  nameWithType: UIElement3D.OnStylusUp(StylusEventArgs)
  fullName: System.Windows.UIElement3D.OnStylusUp(StylusEventArgs)
- uid: System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTextInput(TextCompositionEventArgs)
  nameWithType: UIElement3D.OnTextInput(TextCompositionEventArgs)
  fullName: System.Windows.UIElement3D.OnTextInput(TextCompositionEventArgs)
- uid: System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchDown(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchDown(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchDown(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchEnter(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchEnter(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchEnter(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchLeave(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchLeave(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchLeave(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchMove(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchMove(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchMove(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchUp(TouchEventArgs)
  nameWithType: UIElement3D.OnTouchUp(TouchEventArgs)
  fullName: System.Windows.UIElement3D.OnTouchUp(TouchEventArgs)
- uid: System.Windows.UIElement3D.OnUpdateModel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnUpdateModel()
  nameWithType: UIElement3D.OnUpdateModel()
  fullName: System.Windows.UIElement3D.OnUpdateModel()
- uid: System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: UIElement3D.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.UIElement3D.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PredictFocus(FocusNavigationDirection)
  nameWithType: UIElement3D.PredictFocus(FocusNavigationDirection)
  fullName: System.Windows.UIElement3D.PredictFocus(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.UIElement3D.PreviewDragEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragEnter
  nameWithType: UIElement3D.PreviewDragEnter
  fullName: System.Windows.UIElement3D.PreviewDragEnter
- uid: System.Windows.UIElement3D.PreviewDragEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragEnterEvent
  nameWithType: UIElement3D.PreviewDragEnterEvent
  fullName: System.Windows.UIElement3D.PreviewDragEnterEvent
- uid: System.Windows.UIElement3D.PreviewDragLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragLeave
  nameWithType: UIElement3D.PreviewDragLeave
  fullName: System.Windows.UIElement3D.PreviewDragLeave
- uid: System.Windows.UIElement3D.PreviewDragLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragLeaveEvent
  nameWithType: UIElement3D.PreviewDragLeaveEvent
  fullName: System.Windows.UIElement3D.PreviewDragLeaveEvent
- uid: System.Windows.UIElement3D.PreviewDragOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragOver
  nameWithType: UIElement3D.PreviewDragOver
  fullName: System.Windows.UIElement3D.PreviewDragOver
- uid: System.Windows.UIElement3D.PreviewDragOverEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDragOverEvent
  nameWithType: UIElement3D.PreviewDragOverEvent
  fullName: System.Windows.UIElement3D.PreviewDragOverEvent
- uid: System.Windows.UIElement3D.PreviewDrop
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDrop
  nameWithType: UIElement3D.PreviewDrop
  fullName: System.Windows.UIElement3D.PreviewDrop
- uid: System.Windows.UIElement3D.PreviewDropEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewDropEvent
  nameWithType: UIElement3D.PreviewDropEvent
  fullName: System.Windows.UIElement3D.PreviewDropEvent
- uid: System.Windows.UIElement3D.PreviewGiveFeedback
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGiveFeedback
  nameWithType: UIElement3D.PreviewGiveFeedback
  fullName: System.Windows.UIElement3D.PreviewGiveFeedback
- uid: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGiveFeedbackEvent
  nameWithType: UIElement3D.PreviewGiveFeedbackEvent
  fullName: System.Windows.UIElement3D.PreviewGiveFeedbackEvent
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGotKeyboardFocus
  nameWithType: UIElement3D.PreviewGotKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocus
- uid: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewGotKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewGotKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent
- uid: System.Windows.UIElement3D.PreviewKeyDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyDown
  nameWithType: UIElement3D.PreviewKeyDown
  fullName: System.Windows.UIElement3D.PreviewKeyDown
- uid: System.Windows.UIElement3D.PreviewKeyDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyDownEvent
  nameWithType: UIElement3D.PreviewKeyDownEvent
  fullName: System.Windows.UIElement3D.PreviewKeyDownEvent
- uid: System.Windows.UIElement3D.PreviewKeyUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyUp
  nameWithType: UIElement3D.PreviewKeyUp
  fullName: System.Windows.UIElement3D.PreviewKeyUp
- uid: System.Windows.UIElement3D.PreviewKeyUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewKeyUpEvent
  nameWithType: UIElement3D.PreviewKeyUpEvent
  fullName: System.Windows.UIElement3D.PreviewKeyUpEvent
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocus
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewLostKeyboardFocus
  nameWithType: UIElement3D.PreviewLostKeyboardFocus
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocus
- uid: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewLostKeyboardFocusEvent
  nameWithType: UIElement3D.PreviewLostKeyboardFocusEvent
  fullName: System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent
- uid: System.Windows.UIElement3D.PreviewMouseDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseDown
  nameWithType: UIElement3D.PreviewMouseDown
  fullName: System.Windows.UIElement3D.PreviewMouseDown
- uid: System.Windows.UIElement3D.PreviewMouseDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseDownEvent
  nameWithType: UIElement3D.PreviewMouseDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonDown
  nameWithType: UIElement3D.PreviewMouseLeftButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDown
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonUp
  nameWithType: UIElement3D.PreviewMouseLeftButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUp
- uid: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseLeftButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseLeftButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseMove
  nameWithType: UIElement3D.PreviewMouseMove
  fullName: System.Windows.UIElement3D.PreviewMouseMove
- uid: System.Windows.UIElement3D.PreviewMouseMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseMoveEvent
  nameWithType: UIElement3D.PreviewMouseMoveEvent
  fullName: System.Windows.UIElement3D.PreviewMouseMoveEvent
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonDown
  nameWithType: UIElement3D.PreviewMouseRightButtonDown
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDown
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonDownEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonUp
  nameWithType: UIElement3D.PreviewMouseRightButtonUp
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUp
- uid: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseRightButtonUpEvent
  nameWithType: UIElement3D.PreviewMouseRightButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseUp
  nameWithType: UIElement3D.PreviewMouseUp
  fullName: System.Windows.UIElement3D.PreviewMouseUp
- uid: System.Windows.UIElement3D.PreviewMouseUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseUpEvent
  nameWithType: UIElement3D.PreviewMouseUpEvent
  fullName: System.Windows.UIElement3D.PreviewMouseUpEvent
- uid: System.Windows.UIElement3D.PreviewMouseWheel
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseWheel
  nameWithType: UIElement3D.PreviewMouseWheel
  fullName: System.Windows.UIElement3D.PreviewMouseWheel
- uid: System.Windows.UIElement3D.PreviewMouseWheelEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewMouseWheelEvent
  nameWithType: UIElement3D.PreviewMouseWheelEvent
  fullName: System.Windows.UIElement3D.PreviewMouseWheelEvent
- uid: System.Windows.UIElement3D.PreviewQueryContinueDrag
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewQueryContinueDrag
  nameWithType: UIElement3D.PreviewQueryContinueDrag
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDrag
- uid: System.Windows.QueryContinueDragEventHandler
  parent: System.Windows
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.QueryContinueDragEventHandler
- uid: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewQueryContinueDragEvent
  nameWithType: UIElement3D.PreviewQueryContinueDragEvent
  fullName: System.Windows.UIElement3D.PreviewQueryContinueDragEvent
- uid: System.Windows.UIElement3D.PreviewStylusButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonDown
  nameWithType: UIElement3D.PreviewStylusButtonDown
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDown
- uid: System.Windows.Input.StylusButtonEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusButtonEventHandler
  nameWithType: StylusButtonEventHandler
  fullName: System.Windows.Input.StylusButtonEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonDownEvent
  nameWithType: UIElement3D.PreviewStylusButtonDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonDownEvent
- uid: System.Windows.UIElement3D.PreviewStylusButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonUp
  nameWithType: UIElement3D.PreviewStylusButtonUp
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUp
- uid: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusButtonUpEvent
  nameWithType: UIElement3D.PreviewStylusButtonUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusButtonUpEvent
- uid: System.Windows.UIElement3D.PreviewStylusDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusDown
  nameWithType: UIElement3D.PreviewStylusDown
  fullName: System.Windows.UIElement3D.PreviewStylusDown
- uid: System.Windows.Input.StylusDownEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusDownEventHandler
  nameWithType: StylusDownEventHandler
  fullName: System.Windows.Input.StylusDownEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusDownEvent
  nameWithType: UIElement3D.PreviewStylusDownEvent
  fullName: System.Windows.UIElement3D.PreviewStylusDownEvent
- uid: System.Windows.UIElement3D.PreviewStylusInAirMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInAirMove
  nameWithType: UIElement3D.PreviewStylusInAirMove
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMove
- uid: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInAirMoveEvent
  nameWithType: UIElement3D.PreviewStylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInAirMoveEvent
- uid: System.Windows.UIElement3D.PreviewStylusInRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInRange
  nameWithType: UIElement3D.PreviewStylusInRange
  fullName: System.Windows.UIElement3D.PreviewStylusInRange
- uid: System.Windows.UIElement3D.PreviewStylusInRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusInRangeEvent
  nameWithType: UIElement3D.PreviewStylusInRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusInRangeEvent
- uid: System.Windows.UIElement3D.PreviewStylusMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusMove
  nameWithType: UIElement3D.PreviewStylusMove
  fullName: System.Windows.UIElement3D.PreviewStylusMove
- uid: System.Windows.UIElement3D.PreviewStylusMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusMoveEvent
  nameWithType: UIElement3D.PreviewStylusMoveEvent
  fullName: System.Windows.UIElement3D.PreviewStylusMoveEvent
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusOutOfRange
  nameWithType: UIElement3D.PreviewStylusOutOfRange
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRange
- uid: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusOutOfRangeEvent
  nameWithType: UIElement3D.PreviewStylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent
- uid: System.Windows.UIElement3D.PreviewStylusSystemGesture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusSystemGesture
  nameWithType: UIElement3D.PreviewStylusSystemGesture
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGesture
- uid: System.Windows.Input.StylusSystemGestureEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: StylusSystemGestureEventHandler
  nameWithType: StylusSystemGestureEventHandler
  fullName: System.Windows.Input.StylusSystemGestureEventHandler
- uid: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusSystemGestureEvent
  nameWithType: UIElement3D.PreviewStylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.PreviewStylusSystemGestureEvent
- uid: System.Windows.UIElement3D.PreviewStylusUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusUp
  nameWithType: UIElement3D.PreviewStylusUp
  fullName: System.Windows.UIElement3D.PreviewStylusUp
- uid: System.Windows.UIElement3D.PreviewStylusUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewStylusUpEvent
  nameWithType: UIElement3D.PreviewStylusUpEvent
  fullName: System.Windows.UIElement3D.PreviewStylusUpEvent
- uid: System.Windows.UIElement3D.PreviewTextInput
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTextInput
  nameWithType: UIElement3D.PreviewTextInput
  fullName: System.Windows.UIElement3D.PreviewTextInput
- uid: System.Windows.Input.TextCompositionEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TextCompositionEventHandler
  nameWithType: TextCompositionEventHandler
  fullName: System.Windows.Input.TextCompositionEventHandler
- uid: System.Windows.UIElement3D.PreviewTextInputEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTextInputEvent
  nameWithType: UIElement3D.PreviewTextInputEvent
  fullName: System.Windows.UIElement3D.PreviewTextInputEvent
- uid: System.Windows.UIElement3D.PreviewTouchDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchDown
  nameWithType: UIElement3D.PreviewTouchDown
  fullName: System.Windows.UIElement3D.PreviewTouchDown
- uid: System.Windows.UIElement3D.PreviewTouchDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchDownEvent
  nameWithType: UIElement3D.PreviewTouchDownEvent
  fullName: System.Windows.UIElement3D.PreviewTouchDownEvent
- uid: System.Windows.UIElement3D.PreviewTouchMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchMove
  nameWithType: UIElement3D.PreviewTouchMove
  fullName: System.Windows.UIElement3D.PreviewTouchMove
- uid: System.Windows.UIElement3D.PreviewTouchMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchMoveEvent
  nameWithType: UIElement3D.PreviewTouchMoveEvent
  fullName: System.Windows.UIElement3D.PreviewTouchMoveEvent
- uid: System.Windows.UIElement3D.PreviewTouchUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchUp
  nameWithType: UIElement3D.PreviewTouchUp
  fullName: System.Windows.UIElement3D.PreviewTouchUp
- uid: System.Windows.UIElement3D.PreviewTouchUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PreviewTouchUpEvent
  nameWithType: UIElement3D.PreviewTouchUpEvent
  fullName: System.Windows.UIElement3D.PreviewTouchUpEvent
- uid: System.Windows.UIElement3D.QueryContinueDrag
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryContinueDrag
  nameWithType: UIElement3D.QueryContinueDrag
  fullName: System.Windows.UIElement3D.QueryContinueDrag
- uid: System.Windows.UIElement3D.QueryContinueDragEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryContinueDragEvent
  nameWithType: UIElement3D.QueryContinueDragEvent
  fullName: System.Windows.UIElement3D.QueryContinueDragEvent
- uid: System.Windows.UIElement3D.QueryCursor
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryCursor
  nameWithType: UIElement3D.QueryCursor
  fullName: System.Windows.UIElement3D.QueryCursor
- uid: System.Windows.Input.QueryCursorEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: QueryCursorEventHandler
  nameWithType: QueryCursorEventHandler
  fullName: System.Windows.Input.QueryCursorEventHandler
- uid: System.Windows.UIElement3D.QueryCursorEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: QueryCursorEvent
  nameWithType: UIElement3D.QueryCursorEvent
  fullName: System.Windows.UIElement3D.QueryCursorEvent
- uid: System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RaiseEvent(RoutedEventArgs)
  nameWithType: UIElement3D.RaiseEvent(RoutedEventArgs)
  fullName: System.Windows.UIElement3D.RaiseEvent(RoutedEventArgs)
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseAllTouchCaptures()
  nameWithType: UIElement3D.ReleaseAllTouchCaptures()
  fullName: System.Windows.UIElement3D.ReleaseAllTouchCaptures()
- uid: System.Windows.UIElement3D.ReleaseMouseCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseMouseCapture()
  nameWithType: UIElement3D.ReleaseMouseCapture()
  fullName: System.Windows.UIElement3D.ReleaseMouseCapture()
- uid: System.Windows.UIElement3D.ReleaseStylusCapture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseStylusCapture()
  nameWithType: UIElement3D.ReleaseStylusCapture()
  fullName: System.Windows.UIElement3D.ReleaseStylusCapture()
- uid: System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseTouchCapture(TouchDevice)
  nameWithType: UIElement3D.ReleaseTouchCapture(TouchDevice)
  fullName: System.Windows.UIElement3D.ReleaseTouchCapture(TouchDevice)
- uid: System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: UIElement3D.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.UIElement3D.RemoveHandler(RoutedEvent,Delegate)
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeCommandBindings()
  nameWithType: UIElement3D.ShouldSerializeCommandBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeCommandBindings()
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeInputBindings()
  nameWithType: UIElement3D.ShouldSerializeInputBindings()
  fullName: System.Windows.UIElement3D.ShouldSerializeInputBindings()
- uid: System.Windows.UIElement3D.StylusButtonDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonDown
  nameWithType: UIElement3D.StylusButtonDown
  fullName: System.Windows.UIElement3D.StylusButtonDown
- uid: System.Windows.UIElement3D.StylusButtonDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonDownEvent
  nameWithType: UIElement3D.StylusButtonDownEvent
  fullName: System.Windows.UIElement3D.StylusButtonDownEvent
- uid: System.Windows.UIElement3D.StylusButtonUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonUp
  nameWithType: UIElement3D.StylusButtonUp
  fullName: System.Windows.UIElement3D.StylusButtonUp
- uid: System.Windows.UIElement3D.StylusButtonUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusButtonUpEvent
  nameWithType: UIElement3D.StylusButtonUpEvent
  fullName: System.Windows.UIElement3D.StylusButtonUpEvent
- uid: System.Windows.UIElement3D.StylusDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusDown
  nameWithType: UIElement3D.StylusDown
  fullName: System.Windows.UIElement3D.StylusDown
- uid: System.Windows.UIElement3D.StylusDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusDownEvent
  nameWithType: UIElement3D.StylusDownEvent
  fullName: System.Windows.UIElement3D.StylusDownEvent
- uid: System.Windows.UIElement3D.StylusEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusEnter
  nameWithType: UIElement3D.StylusEnter
  fullName: System.Windows.UIElement3D.StylusEnter
- uid: System.Windows.UIElement3D.StylusEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusEnterEvent
  nameWithType: UIElement3D.StylusEnterEvent
  fullName: System.Windows.UIElement3D.StylusEnterEvent
- uid: System.Windows.UIElement3D.StylusInAirMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInAirMove
  nameWithType: UIElement3D.StylusInAirMove
  fullName: System.Windows.UIElement3D.StylusInAirMove
- uid: System.Windows.UIElement3D.StylusInAirMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInAirMoveEvent
  nameWithType: UIElement3D.StylusInAirMoveEvent
  fullName: System.Windows.UIElement3D.StylusInAirMoveEvent
- uid: System.Windows.UIElement3D.StylusInRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInRange
  nameWithType: UIElement3D.StylusInRange
  fullName: System.Windows.UIElement3D.StylusInRange
- uid: System.Windows.UIElement3D.StylusInRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusInRangeEvent
  nameWithType: UIElement3D.StylusInRangeEvent
  fullName: System.Windows.UIElement3D.StylusInRangeEvent
- uid: System.Windows.UIElement3D.StylusLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusLeave
  nameWithType: UIElement3D.StylusLeave
  fullName: System.Windows.UIElement3D.StylusLeave
- uid: System.Windows.UIElement3D.StylusLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusLeaveEvent
  nameWithType: UIElement3D.StylusLeaveEvent
  fullName: System.Windows.UIElement3D.StylusLeaveEvent
- uid: System.Windows.UIElement3D.StylusMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusMove
  nameWithType: UIElement3D.StylusMove
  fullName: System.Windows.UIElement3D.StylusMove
- uid: System.Windows.UIElement3D.StylusMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusMoveEvent
  nameWithType: UIElement3D.StylusMoveEvent
  fullName: System.Windows.UIElement3D.StylusMoveEvent
- uid: System.Windows.UIElement3D.StylusOutOfRange
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusOutOfRange
  nameWithType: UIElement3D.StylusOutOfRange
  fullName: System.Windows.UIElement3D.StylusOutOfRange
- uid: System.Windows.UIElement3D.StylusOutOfRangeEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusOutOfRangeEvent
  nameWithType: UIElement3D.StylusOutOfRangeEvent
  fullName: System.Windows.UIElement3D.StylusOutOfRangeEvent
- uid: System.Windows.UIElement3D.StylusSystemGesture
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusSystemGesture
  nameWithType: UIElement3D.StylusSystemGesture
  fullName: System.Windows.UIElement3D.StylusSystemGesture
- uid: System.Windows.UIElement3D.StylusSystemGestureEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusSystemGestureEvent
  nameWithType: UIElement3D.StylusSystemGestureEvent
  fullName: System.Windows.UIElement3D.StylusSystemGestureEvent
- uid: System.Windows.UIElement3D.StylusUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusUp
  nameWithType: UIElement3D.StylusUp
  fullName: System.Windows.UIElement3D.StylusUp
- uid: System.Windows.UIElement3D.StylusUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: StylusUpEvent
  nameWithType: UIElement3D.StylusUpEvent
  fullName: System.Windows.UIElement3D.StylusUpEvent
- uid: System.Windows.UIElement3D.TextInput
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TextInput
  nameWithType: UIElement3D.TextInput
  fullName: System.Windows.UIElement3D.TextInput
- uid: System.Windows.UIElement3D.TextInputEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TextInputEvent
  nameWithType: UIElement3D.TextInputEvent
  fullName: System.Windows.UIElement3D.TextInputEvent
- uid: System.Windows.UIElement3D.TouchDown
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchDown
  nameWithType: UIElement3D.TouchDown
  fullName: System.Windows.UIElement3D.TouchDown
- uid: System.Windows.UIElement3D.TouchDownEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchDownEvent
  nameWithType: UIElement3D.TouchDownEvent
  fullName: System.Windows.UIElement3D.TouchDownEvent
- uid: System.Windows.UIElement3D.TouchEnter
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchEnter
  nameWithType: UIElement3D.TouchEnter
  fullName: System.Windows.UIElement3D.TouchEnter
- uid: System.Windows.UIElement3D.TouchEnterEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchEnterEvent
  nameWithType: UIElement3D.TouchEnterEvent
  fullName: System.Windows.UIElement3D.TouchEnterEvent
- uid: System.Windows.UIElement3D.TouchesCaptured
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
  fullName: System.Windows.UIElement3D.TouchesCaptured
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.TouchDevice}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TouchDevice>
  nameWithType: IEnumerable<TouchDevice>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.TouchDevice>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.TouchDevice>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.TouchDevice
    name: TouchDevice
    nameWithType: TouchDevice
    fullName: TouchDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.UIElement3D.TouchesCapturedWithin
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
  fullName: System.Windows.UIElement3D.TouchesCapturedWithin
- uid: System.Windows.UIElement3D.TouchesDirectlyOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
  fullName: System.Windows.UIElement3D.TouchesDirectlyOver
- uid: System.Windows.UIElement3D.TouchesOver
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
  fullName: System.Windows.UIElement3D.TouchesOver
- uid: System.Windows.UIElement3D.TouchLeave
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchLeave
  nameWithType: UIElement3D.TouchLeave
  fullName: System.Windows.UIElement3D.TouchLeave
- uid: System.Windows.UIElement3D.TouchLeaveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchLeaveEvent
  nameWithType: UIElement3D.TouchLeaveEvent
  fullName: System.Windows.UIElement3D.TouchLeaveEvent
- uid: System.Windows.UIElement3D.TouchMove
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchMove
  nameWithType: UIElement3D.TouchMove
  fullName: System.Windows.UIElement3D.TouchMove
- uid: System.Windows.UIElement3D.TouchMoveEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchMoveEvent
  nameWithType: UIElement3D.TouchMoveEvent
  fullName: System.Windows.UIElement3D.TouchMoveEvent
- uid: System.Windows.UIElement3D.TouchUp
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchUp
  nameWithType: UIElement3D.TouchUp
  fullName: System.Windows.UIElement3D.TouchUp
- uid: System.Windows.UIElement3D.TouchUpEvent
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchUpEvent
  nameWithType: UIElement3D.TouchUpEvent
  fullName: System.Windows.UIElement3D.TouchUpEvent
- uid: System.Windows.UIElement3D.Visibility
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Visibility
  nameWithType: UIElement3D.Visibility
  fullName: System.Windows.UIElement3D.Visibility
- uid: System.Windows.Visibility
  parent: System.Windows
  isExternal: false
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: System.Windows.UIElement3D.VisibilityProperty
  parent: System.Windows.UIElement3D
  isExternal: false
  name: VisibilityProperty
  nameWithType: UIElement3D.VisibilityProperty
  fullName: System.Windows.UIElement3D.VisibilityProperty
- uid: System.Windows.UIElement3D.#ctor*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: UIElement3D
  nameWithType: UIElement3D.UIElement3D
- uid: System.Windows.UIElement3D.AddHandler*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddHandler
  nameWithType: UIElement3D.AddHandler
- uid: System.Windows.UIElement3D.AddToEventRoute*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AddToEventRoute
  nameWithType: UIElement3D.AddToEventRoute
- uid: System.Windows.UIElement3D.AllowDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AllowDrop
  nameWithType: UIElement3D.AllowDrop
- uid: System.Windows.UIElement3D.AreAnyTouchesCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCaptured
  nameWithType: UIElement3D.AreAnyTouchesCaptured
- uid: System.Windows.UIElement3D.AreAnyTouchesCapturedWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesCapturedWithin
  nameWithType: UIElement3D.AreAnyTouchesCapturedWithin
- uid: System.Windows.UIElement3D.AreAnyTouchesDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesDirectlyOver
  nameWithType: UIElement3D.AreAnyTouchesDirectlyOver
- uid: System.Windows.UIElement3D.AreAnyTouchesOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: AreAnyTouchesOver
  nameWithType: UIElement3D.AreAnyTouchesOver
- uid: System.Windows.UIElement3D.CaptureMouse*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureMouse
  nameWithType: UIElement3D.CaptureMouse
- uid: System.Windows.UIElement3D.CaptureStylus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureStylus
  nameWithType: UIElement3D.CaptureStylus
- uid: System.Windows.UIElement3D.CaptureTouch*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CaptureTouch
  nameWithType: UIElement3D.CaptureTouch
- uid: System.Windows.UIElement3D.CommandBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: CommandBindings
  nameWithType: UIElement3D.CommandBindings
- uid: System.Windows.UIElement3D.Focus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focus
  nameWithType: UIElement3D.Focus
- uid: System.Windows.UIElement3D.Focusable*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Focusable
  nameWithType: UIElement3D.Focusable
- uid: System.Windows.UIElement3D.GetUIParentCore*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: GetUIParentCore
  nameWithType: UIElement3D.GetUIParentCore
- uid: System.Windows.UIElement3D.InputBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InputBindings
  nameWithType: UIElement3D.InputBindings
- uid: System.Windows.UIElement3D.InvalidateModel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: InvalidateModel
  nameWithType: UIElement3D.InvalidateModel
- uid: System.Windows.UIElement3D.IsEnabled*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabled
  nameWithType: UIElement3D.IsEnabled
- uid: System.Windows.UIElement3D.IsEnabledCore*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsEnabledCore
  nameWithType: UIElement3D.IsEnabledCore
- uid: System.Windows.UIElement3D.IsFocused*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsFocused
  nameWithType: UIElement3D.IsFocused
- uid: System.Windows.UIElement3D.IsHitTestVisible*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsHitTestVisible
  nameWithType: UIElement3D.IsHitTestVisible
- uid: System.Windows.UIElement3D.IsInputMethodEnabled*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsInputMethodEnabled
  nameWithType: UIElement3D.IsInputMethodEnabled
- uid: System.Windows.UIElement3D.IsKeyboardFocused*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocused
  nameWithType: UIElement3D.IsKeyboardFocused
- uid: System.Windows.UIElement3D.IsKeyboardFocusWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsKeyboardFocusWithin
  nameWithType: UIElement3D.IsKeyboardFocusWithin
- uid: System.Windows.UIElement3D.IsMouseCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptured
  nameWithType: UIElement3D.IsMouseCaptured
- uid: System.Windows.UIElement3D.IsMouseCaptureWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseCaptureWithin
  nameWithType: UIElement3D.IsMouseCaptureWithin
- uid: System.Windows.UIElement3D.IsMouseDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseDirectlyOver
  nameWithType: UIElement3D.IsMouseDirectlyOver
- uid: System.Windows.UIElement3D.IsMouseOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsMouseOver
  nameWithType: UIElement3D.IsMouseOver
- uid: System.Windows.UIElement3D.IsStylusCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptured
  nameWithType: UIElement3D.IsStylusCaptured
- uid: System.Windows.UIElement3D.IsStylusCaptureWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusCaptureWithin
  nameWithType: UIElement3D.IsStylusCaptureWithin
- uid: System.Windows.UIElement3D.IsStylusDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusDirectlyOver
  nameWithType: UIElement3D.IsStylusDirectlyOver
- uid: System.Windows.UIElement3D.IsStylusOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsStylusOver
  nameWithType: UIElement3D.IsStylusOver
- uid: System.Windows.UIElement3D.IsVisible*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: IsVisible
  nameWithType: UIElement3D.IsVisible
- uid: System.Windows.UIElement3D.MoveFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: MoveFocus
  nameWithType: UIElement3D.MoveFocus
- uid: System.Windows.UIElement3D.OnAccessKey*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnAccessKey
  nameWithType: UIElement3D.OnAccessKey
- uid: System.Windows.UIElement3D.OnCreateAutomationPeer*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: UIElement3D.OnCreateAutomationPeer
- uid: System.Windows.UIElement3D.OnDragEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragEnter
  nameWithType: UIElement3D.OnDragEnter
- uid: System.Windows.UIElement3D.OnDragLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragLeave
  nameWithType: UIElement3D.OnDragLeave
- uid: System.Windows.UIElement3D.OnDragOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDragOver
  nameWithType: UIElement3D.OnDragOver
- uid: System.Windows.UIElement3D.OnDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnDrop
  nameWithType: UIElement3D.OnDrop
- uid: System.Windows.UIElement3D.OnGiveFeedback*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGiveFeedback
  nameWithType: UIElement3D.OnGiveFeedback
- uid: System.Windows.UIElement3D.OnGotFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotFocus
  nameWithType: UIElement3D.OnGotFocus
- uid: System.Windows.UIElement3D.OnGotKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotKeyboardFocus
  nameWithType: UIElement3D.OnGotKeyboardFocus
- uid: System.Windows.UIElement3D.OnGotMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotMouseCapture
  nameWithType: UIElement3D.OnGotMouseCapture
- uid: System.Windows.UIElement3D.OnGotStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotStylusCapture
  nameWithType: UIElement3D.OnGotStylusCapture
- uid: System.Windows.UIElement3D.OnGotTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnGotTouchCapture
  nameWithType: UIElement3D.OnGotTouchCapture
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusedChanged
  nameWithType: UIElement3D.OnIsKeyboardFocusedChanged
- uid: System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsKeyboardFocusWithinChanged
  nameWithType: UIElement3D.OnIsKeyboardFocusWithinChanged
- uid: System.Windows.UIElement3D.OnIsMouseCapturedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCapturedChanged
  nameWithType: UIElement3D.OnIsMouseCapturedChanged
- uid: System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseCaptureWithinChanged
  nameWithType: UIElement3D.OnIsMouseCaptureWithinChanged
- uid: System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsMouseDirectlyOverChanged
  nameWithType: UIElement3D.OnIsMouseDirectlyOverChanged
- uid: System.Windows.UIElement3D.OnIsStylusCapturedChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCapturedChanged
  nameWithType: UIElement3D.OnIsStylusCapturedChanged
- uid: System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusCaptureWithinChanged
  nameWithType: UIElement3D.OnIsStylusCaptureWithinChanged
- uid: System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnIsStylusDirectlyOverChanged
  nameWithType: UIElement3D.OnIsStylusDirectlyOverChanged
- uid: System.Windows.UIElement3D.OnKeyDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyDown
  nameWithType: UIElement3D.OnKeyDown
- uid: System.Windows.UIElement3D.OnKeyUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnKeyUp
  nameWithType: UIElement3D.OnKeyUp
- uid: System.Windows.UIElement3D.OnLostFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostFocus
  nameWithType: UIElement3D.OnLostFocus
- uid: System.Windows.UIElement3D.OnLostKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostKeyboardFocus
  nameWithType: UIElement3D.OnLostKeyboardFocus
- uid: System.Windows.UIElement3D.OnLostMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostMouseCapture
  nameWithType: UIElement3D.OnLostMouseCapture
- uid: System.Windows.UIElement3D.OnLostStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostStylusCapture
  nameWithType: UIElement3D.OnLostStylusCapture
- uid: System.Windows.UIElement3D.OnLostTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnLostTouchCapture
  nameWithType: UIElement3D.OnLostTouchCapture
- uid: System.Windows.UIElement3D.OnMouseDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseDown
  nameWithType: UIElement3D.OnMouseDown
- uid: System.Windows.UIElement3D.OnMouseEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseEnter
  nameWithType: UIElement3D.OnMouseEnter
- uid: System.Windows.UIElement3D.OnMouseLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeave
  nameWithType: UIElement3D.OnMouseLeave
- uid: System.Windows.UIElement3D.OnMouseLeftButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonDown
  nameWithType: UIElement3D.OnMouseLeftButtonDown
- uid: System.Windows.UIElement3D.OnMouseLeftButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseLeftButtonUp
  nameWithType: UIElement3D.OnMouseLeftButtonUp
- uid: System.Windows.UIElement3D.OnMouseMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseMove
  nameWithType: UIElement3D.OnMouseMove
- uid: System.Windows.UIElement3D.OnMouseRightButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonDown
  nameWithType: UIElement3D.OnMouseRightButtonDown
- uid: System.Windows.UIElement3D.OnMouseRightButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseRightButtonUp
  nameWithType: UIElement3D.OnMouseRightButtonUp
- uid: System.Windows.UIElement3D.OnMouseUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseUp
  nameWithType: UIElement3D.OnMouseUp
- uid: System.Windows.UIElement3D.OnMouseWheel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnMouseWheel
  nameWithType: UIElement3D.OnMouseWheel
- uid: System.Windows.UIElement3D.OnPreviewDragEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragEnter
  nameWithType: UIElement3D.OnPreviewDragEnter
- uid: System.Windows.UIElement3D.OnPreviewDragLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragLeave
  nameWithType: UIElement3D.OnPreviewDragLeave
- uid: System.Windows.UIElement3D.OnPreviewDragOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDragOver
  nameWithType: UIElement3D.OnPreviewDragOver
- uid: System.Windows.UIElement3D.OnPreviewDrop*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewDrop
  nameWithType: UIElement3D.OnPreviewDrop
- uid: System.Windows.UIElement3D.OnPreviewGiveFeedback*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGiveFeedback
  nameWithType: UIElement3D.OnPreviewGiveFeedback
- uid: System.Windows.UIElement3D.OnPreviewGotKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewGotKeyboardFocus
  nameWithType: UIElement3D.OnPreviewGotKeyboardFocus
- uid: System.Windows.UIElement3D.OnPreviewKeyDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: UIElement3D.OnPreviewKeyDown
- uid: System.Windows.UIElement3D.OnPreviewKeyUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewKeyUp
  nameWithType: UIElement3D.OnPreviewKeyUp
- uid: System.Windows.UIElement3D.OnPreviewLostKeyboardFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewLostKeyboardFocus
  nameWithType: UIElement3D.OnPreviewLostKeyboardFocus
- uid: System.Windows.UIElement3D.OnPreviewMouseDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseDown
  nameWithType: UIElement3D.OnPreviewMouseDown
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonDown
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonDown
- uid: System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseLeftButtonUp
  nameWithType: UIElement3D.OnPreviewMouseLeftButtonUp
- uid: System.Windows.UIElement3D.OnPreviewMouseMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseMove
  nameWithType: UIElement3D.OnPreviewMouseMove
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonDown
  nameWithType: UIElement3D.OnPreviewMouseRightButtonDown
- uid: System.Windows.UIElement3D.OnPreviewMouseRightButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseRightButtonUp
  nameWithType: UIElement3D.OnPreviewMouseRightButtonUp
- uid: System.Windows.UIElement3D.OnPreviewMouseUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseUp
  nameWithType: UIElement3D.OnPreviewMouseUp
- uid: System.Windows.UIElement3D.OnPreviewMouseWheel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewMouseWheel
  nameWithType: UIElement3D.OnPreviewMouseWheel
- uid: System.Windows.UIElement3D.OnPreviewQueryContinueDrag*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewQueryContinueDrag
  nameWithType: UIElement3D.OnPreviewQueryContinueDrag
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonDown
  nameWithType: UIElement3D.OnPreviewStylusButtonDown
- uid: System.Windows.UIElement3D.OnPreviewStylusButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusButtonUp
  nameWithType: UIElement3D.OnPreviewStylusButtonUp
- uid: System.Windows.UIElement3D.OnPreviewStylusDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusDown
  nameWithType: UIElement3D.OnPreviewStylusDown
- uid: System.Windows.UIElement3D.OnPreviewStylusInAirMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInAirMove
  nameWithType: UIElement3D.OnPreviewStylusInAirMove
- uid: System.Windows.UIElement3D.OnPreviewStylusInRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusInRange
  nameWithType: UIElement3D.OnPreviewStylusInRange
- uid: System.Windows.UIElement3D.OnPreviewStylusMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusMove
  nameWithType: UIElement3D.OnPreviewStylusMove
- uid: System.Windows.UIElement3D.OnPreviewStylusOutOfRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusOutOfRange
  nameWithType: UIElement3D.OnPreviewStylusOutOfRange
- uid: System.Windows.UIElement3D.OnPreviewStylusSystemGesture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusSystemGesture
  nameWithType: UIElement3D.OnPreviewStylusSystemGesture
- uid: System.Windows.UIElement3D.OnPreviewStylusUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewStylusUp
  nameWithType: UIElement3D.OnPreviewStylusUp
- uid: System.Windows.UIElement3D.OnPreviewTextInput*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTextInput
  nameWithType: UIElement3D.OnPreviewTextInput
- uid: System.Windows.UIElement3D.OnPreviewTouchDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchDown
  nameWithType: UIElement3D.OnPreviewTouchDown
- uid: System.Windows.UIElement3D.OnPreviewTouchMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchMove
  nameWithType: UIElement3D.OnPreviewTouchMove
- uid: System.Windows.UIElement3D.OnPreviewTouchUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnPreviewTouchUp
  nameWithType: UIElement3D.OnPreviewTouchUp
- uid: System.Windows.UIElement3D.OnQueryContinueDrag*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: UIElement3D.OnQueryContinueDrag
- uid: System.Windows.UIElement3D.OnQueryCursor*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnQueryCursor
  nameWithType: UIElement3D.OnQueryCursor
- uid: System.Windows.UIElement3D.OnStylusButtonDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonDown
  nameWithType: UIElement3D.OnStylusButtonDown
- uid: System.Windows.UIElement3D.OnStylusButtonUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusButtonUp
  nameWithType: UIElement3D.OnStylusButtonUp
- uid: System.Windows.UIElement3D.OnStylusDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusDown
  nameWithType: UIElement3D.OnStylusDown
- uid: System.Windows.UIElement3D.OnStylusEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusEnter
  nameWithType: UIElement3D.OnStylusEnter
- uid: System.Windows.UIElement3D.OnStylusInAirMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInAirMove
  nameWithType: UIElement3D.OnStylusInAirMove
- uid: System.Windows.UIElement3D.OnStylusInRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusInRange
  nameWithType: UIElement3D.OnStylusInRange
- uid: System.Windows.UIElement3D.OnStylusLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusLeave
  nameWithType: UIElement3D.OnStylusLeave
- uid: System.Windows.UIElement3D.OnStylusMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusMove
  nameWithType: UIElement3D.OnStylusMove
- uid: System.Windows.UIElement3D.OnStylusOutOfRange*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusOutOfRange
  nameWithType: UIElement3D.OnStylusOutOfRange
- uid: System.Windows.UIElement3D.OnStylusSystemGesture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusSystemGesture
  nameWithType: UIElement3D.OnStylusSystemGesture
- uid: System.Windows.UIElement3D.OnStylusUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnStylusUp
  nameWithType: UIElement3D.OnStylusUp
- uid: System.Windows.UIElement3D.OnTextInput*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTextInput
  nameWithType: UIElement3D.OnTextInput
- uid: System.Windows.UIElement3D.OnTouchDown*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchDown
  nameWithType: UIElement3D.OnTouchDown
- uid: System.Windows.UIElement3D.OnTouchEnter*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchEnter
  nameWithType: UIElement3D.OnTouchEnter
- uid: System.Windows.UIElement3D.OnTouchLeave*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchLeave
  nameWithType: UIElement3D.OnTouchLeave
- uid: System.Windows.UIElement3D.OnTouchMove*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchMove
  nameWithType: UIElement3D.OnTouchMove
- uid: System.Windows.UIElement3D.OnTouchUp*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnTouchUp
  nameWithType: UIElement3D.OnTouchUp
- uid: System.Windows.UIElement3D.OnUpdateModel*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnUpdateModel
  nameWithType: UIElement3D.OnUpdateModel
- uid: System.Windows.UIElement3D.OnVisualParentChanged*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: UIElement3D.OnVisualParentChanged
- uid: System.Windows.UIElement3D.PredictFocus*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: PredictFocus
  nameWithType: UIElement3D.PredictFocus
- uid: System.Windows.UIElement3D.RaiseEvent*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RaiseEvent
  nameWithType: UIElement3D.RaiseEvent
- uid: System.Windows.UIElement3D.ReleaseAllTouchCaptures*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseAllTouchCaptures
  nameWithType: UIElement3D.ReleaseAllTouchCaptures
- uid: System.Windows.UIElement3D.ReleaseMouseCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseMouseCapture
  nameWithType: UIElement3D.ReleaseMouseCapture
- uid: System.Windows.UIElement3D.ReleaseStylusCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseStylusCapture
  nameWithType: UIElement3D.ReleaseStylusCapture
- uid: System.Windows.UIElement3D.ReleaseTouchCapture*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ReleaseTouchCapture
  nameWithType: UIElement3D.ReleaseTouchCapture
- uid: System.Windows.UIElement3D.RemoveHandler*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: RemoveHandler
  nameWithType: UIElement3D.RemoveHandler
- uid: System.Windows.UIElement3D.ShouldSerializeCommandBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeCommandBindings
  nameWithType: UIElement3D.ShouldSerializeCommandBindings
- uid: System.Windows.UIElement3D.ShouldSerializeInputBindings*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: ShouldSerializeInputBindings
  nameWithType: UIElement3D.ShouldSerializeInputBindings
- uid: System.Windows.UIElement3D.TouchesCaptured*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCaptured
  nameWithType: UIElement3D.TouchesCaptured
- uid: System.Windows.UIElement3D.TouchesCapturedWithin*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesCapturedWithin
  nameWithType: UIElement3D.TouchesCapturedWithin
- uid: System.Windows.UIElement3D.TouchesDirectlyOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesDirectlyOver
  nameWithType: UIElement3D.TouchesDirectlyOver
- uid: System.Windows.UIElement3D.TouchesOver*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: TouchesOver
  nameWithType: UIElement3D.TouchesOver
- uid: System.Windows.UIElement3D.Visibility*
  parent: System.Windows.UIElement3D
  isExternal: false
  name: Visibility
  nameWithType: UIElement3D.Visibility
