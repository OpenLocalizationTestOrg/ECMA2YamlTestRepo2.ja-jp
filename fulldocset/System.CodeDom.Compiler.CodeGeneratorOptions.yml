### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  id: CodeGeneratorOptions
  children:
  - System.CodeDom.Compiler.CodeGeneratorOptions.#ctor
  - System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers
  - System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle
  - System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing
  - System.CodeDom.Compiler.CodeGeneratorOptions.IndentString
  - System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)
  - System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder
  langs:
  - csharp
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
  type: Class
  summary: "コード ジェネレーターによって使用されるオプションのセットを表します。"
  remarks: "コード生成のメソッドに渡される CodeGeneratorOptions、<xref:System.CodeDom.Compiler.ICodeGenerator>コード生成中に使用するオプションを指定する実装</xref:System.CodeDom.Compiler.ICodeGenerator>。       <xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A>プロパティは、各間隔のインデントに使用する文字列を指定します</xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A>。 <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A>プロパティを示すコード ブロックの境界を中かっこの配置スタイルを指定します</xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A>。 <xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A>プロパティを追加するかどうかを指定します、 `else`、 `catch`、または`finally`それぞれの終了行で、角かっこを含むブロック`if`または`try`ブロック</xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A>。 <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A>プロパティでは、メンバー間の空白行を挿入するかどうかを指定します</xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A>。       <xref:System.CodeDom.Compiler.ICodeGenerator>実装でも、カスタム コードを生成オプションの提供できます設定またはを使用してデータを渡すことができますが、<xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A>ディクショナリ インデクサーは、追加のコード生成オプションを検索するコード ジェネレーターを探すことができます</xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A></xref:System.CodeDom.Compiler.ICodeGenerator>。      > [!NOTE] > このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、「[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。"
  example:
  - >-
    [!code-cpp[CodeGeneratorOptionsExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_9_1.cpp)]
     [!code-cs[CodeGeneratorOptionsExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_9_1.cs)]
     [!code-vb[CodeGeneratorOptionsExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_9_1.vb)]
  syntax:
    content: public class CodeGeneratorOptions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: CodeGeneratorOptions()
  nameWithType: CodeGeneratorOptions.CodeGeneratorOptions()
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.CodeGeneratorOptions()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref>クラスです。"
  syntax:
    content: public CodeGeneratorOptions ();
    parameters: []
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers
  id: BlankLinesBetweenMembers
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: BlankLinesBetweenMembers
  nameWithType: CodeGeneratorOptions.BlankLinesBetweenMembers
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはメンバーの間の空白行を挿入するかどうかを示す値を設定します。"
  syntax:
    content: public bool BlankLinesBetweenMembers { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>空白行を挿入する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定では、このプロパティの値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle
  id: BracingStyle
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: BracingStyle
  nameWithType: CodeGeneratorOptions.BracingStyle
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはかっこを使用するスタイルを設定します。"
  remarks: "このプロパティの既定値は`Block`、そのコードを示すを生成するか、ステートメントまたは関連付けられている宣言と同じ行に中かっこを開始できるようにします。 プロパティの値`C`関連付けられているステートメントまたは宣言を次の行に中かっこを開始することを示します。"
  syntax:
    content: public string BracingStyle { get; set; }
    return:
      type: System.String
      description: "中かっこを使用するスタイルを含む文字列。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing
  id: ElseOnClosing
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: ElseOnClosing
  nameWithType: CodeGeneratorOptions.ElseOnClosing
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または追加するかどうかを示す値を設定、 <xref uid=&quot;langword_csharp_else&quot; name=&quot;else&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>、または<xref uid=&quot;langword_csharp_finally&quot; name=&quot;finally&quot; href=&quot;&quot;></xref>それぞれ以前の終了行で、角かっこを含むブロック<xref uid=&quot;langword_csharp_if&quot; name=&quot;if&quot; href=&quot;&quot;></xref>または<xref uid=&quot;langword_csharp_try&quot; name=&quot;try&quot; href=&quot;&quot;></xref>ブロックします。"
  syntax:
    content: public bool ElseOnClosing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、他を追加する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 このプロパティの既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString
  id: IndentString
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: IndentString
  nameWithType: CodeGeneratorOptions.IndentString
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはインデントに使用する文字列を設定します。"
  remarks: "このプロパティの既定値は&quot;---//&quot;(4 つのスペース)。"
  syntax:
    content: public string IndentString { get; set; }
    return:
      type: System.String
      description: "インデントに使用する文字を含む文字列。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)
  id: Item(System.String)
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: Item(String)
  nameWithType: CodeGeneratorOptions.Item(String)
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または指定したインデックスにあるオブジェクトを設定します。"
  remarks: "このディクショナリは、開発者のコード ジェネレーターのカスタム機能のデータを提供するための機能拡張メカニズムを提供します。 コード ジェネレーターなどの機能を実装し、これを使用するためのディクショナリのチェックをサポートする必要があります。"
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "取得するオブジェクトに関連付けられている名前です。"
    return:
      type: System.Object
      description: "指定した名前に関連付けられているオブジェクト。 コレクションに指定した名前に関連付けられたオブジェクトが存在しない場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.Item*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder
  id: VerbatimOrder
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  langs:
  - csharp
  name: VerbatimOrder
  nameWithType: CodeGeneratorOptions.VerbatimOrder
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはメンバーのコレクションで出現する順序でメンバーを生成するかどうかを示す値を設定します。"
  remarks: '既定値がたとえば; で、型のメンバーを生成します。フィールド、メンバー、コンス トラクター、またはプロパティを表示します。  コード ジェネレーターは、VerbatimOrder プロパティを使用して、順序を変更するためのコードに #region ブロックを挿入することができます。'
  syntax:
    content: public bool VerbatimOrder { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバー コレクションに出現する順序でメンバーを生成するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 このプロパティの既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.#ctor
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: CodeGeneratorOptions()
  nameWithType: CodeGeneratorOptions.CodeGeneratorOptions()
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.CodeGeneratorOptions()
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: BlankLinesBetweenMembers
  nameWithType: CodeGeneratorOptions.BlankLinesBetweenMembers
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: BracingStyle
  nameWithType: CodeGeneratorOptions.BracingStyle
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: ElseOnClosing
  nameWithType: CodeGeneratorOptions.ElseOnClosing
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: IndentString
  nameWithType: CodeGeneratorOptions.IndentString
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: Item(String)
  nameWithType: CodeGeneratorOptions.Item(String)
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.Item(String)
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: VerbatimOrder
  nameWithType: CodeGeneratorOptions.VerbatimOrder
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.#ctor*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: BlankLinesBetweenMembers
  nameWithType: CodeGeneratorOptions.BlankLinesBetweenMembers
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: BracingStyle
  nameWithType: CodeGeneratorOptions.BracingStyle
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: ElseOnClosing
  nameWithType: CodeGeneratorOptions.ElseOnClosing
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.IndentString*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: IndentString
  nameWithType: CodeGeneratorOptions.IndentString
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.Item*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: Item
  nameWithType: CodeGeneratorOptions.Item
- uid: System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder*
  parent: System.CodeDom.Compiler.CodeGeneratorOptions
  isExternal: false
  name: VerbatimOrder
  nameWithType: CodeGeneratorOptions.VerbatimOrder
