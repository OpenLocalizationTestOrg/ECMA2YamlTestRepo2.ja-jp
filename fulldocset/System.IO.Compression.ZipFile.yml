### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFile
  id: ZipFile
  children:
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  - System.IO.Compression.ZipFile.OpenRead(System.String)
  langs:
  - csharp
  name: ZipFile
  nameWithType: ZipFile
  fullName: System.IO.Compression.ZipFile
  type: Class
  summary: "Zip アーカイブの作成、抽出、および開くために、静的メソッドを提供します。"
  remarks: "> [!IMPORTANT]> Zip ファイル内のクラスを使用するにはへの参照を追加する必要があります、 `System.IO.Compression.FileSystem` ; プロジェクト内のアセンブリをコンパイルしようとするときに、次のエラー メッセージが表示されますそれ以外の場合: **&quot;ZipFile&quot; が現在のコンテキストに存在しない名前**です。 Visual Studio でプロジェクトへの参照を追加する方法の詳細については、次を参照してください。[する方法: 参照マネージャーを使用して参照を削除するを追加または](~/add/includes/ajax-current-ext-md.md)です。       Zip アーカイブとそのファイルを操作するための方法は&3; つのクラス間で分散: zip ファイル、<xref:System.IO.Compression.ZipArchive>および<xref:System.IO.Compression.ZipArchiveEntry>.</xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipArchive>      |... |使用しています... |  |---------|----------|  |ディレクトリからの zip のアーカイブを作成 |<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  |ディレクトリの zip アーカイブのコンテンツを抽出 |<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  |既存の zip アーカイブを新しいファイルを追加 |<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  |Zip アーカイブ内でファイルの取得 |<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  |Zip アーカイブ内のファイルをすべて取得 |<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  |Zip アーカイブに含まれる個々 のファイル ストリームを開く |<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  |Zip アーカイブからファイルを削除 |<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|      Zip ファイルを使用することはできませんまたは<xref:System.IO.Compression.ZipFileExtensions>クラス[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリ</xref:System.IO.Compression.ZipFileExtensions></xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName></xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>。 [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリでは、圧縮されたファイルを使用する、次のクラスを使用する必要があります。      -   <xref:System.IO.Compression.ZipArchive>      -   <xref:System.IO.Compression.ZipArchiveEntry>      -   <xref:System.IO.Compression.DeflateStream>      -   <xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.DeflateStream></xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>"
  example:
  - "This example shows how to create and extract a zip archive by using the ZipFile class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder.  \n  \n> [!TIP]\n>  To use the ZipFile class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/t-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/t-system.io.compression._3_1.vb)]"
  syntax:
    content: public static class ZipFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  id: CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "ファイルと、指定したディレクトリからディレクトリを含む zip アーカイブを作成します。"
  remarks: "ファイル システムから、ディレクトリ構造は、アーカイブに保持されます。 ディレクトリが空の場合は、空のアーカイブが作成されます。 このメソッドのオーバー ロードは、アーカイブに、ベース ディレクトリを含まないし、圧縮レベルを指定することはできません。 ベースのディレクトリを含めたり、圧縮レベルでの呼び出しを指定する場合、<xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>メソッドのオーバー ロード</xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>。       アーカイブが既に存在する場合、<xref:System.IO.IOException>例外がスローされます</xref:System.IO.IOException>。 アーカイブに指定した名前のエントリが既に存在する場合と同じ名前の&2; 番目のエントリが作成されます。       アーカイブに、ディレクトリ内のファイルを追加することはできません、アーカイブを完了していないと、無効な場合がスローされます、<xref:System.IO.IOException>例外です</xref:System.IO.IOException>。"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._3_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "アーカイブ、相対パスまたは絶対パスとして指定するディレクトリへのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: destinationArchiveFileName
      type: System.String
      description: "作成する相対パスまたは絶対パスとして指定するアーカイブのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>は<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code>または<code> destinationArchiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>既に存在します。       または、指定したディレクトリ内のファイルを開くことができませんでした。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>ディレクトリを指定します。       - または - で指定されたディレクトリへのアクセスに必要なアクセス許可が呼び出し元にない<code>sourceDirectoryName</code>またはで指定されたファイル<code>destinationArchiveFileName</code>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>無効な形式が含まれています。       - または - zip アーカイブが書き込みをサポートしません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "含み、ファイルとディレクトリを指定したディレクトリから、指定した圧縮レベルを使用して必要に応じて、ベース ディレクトリを含む zip アーカイブを作成します。"
  remarks: "ファイル システムから、ディレクトリ構造は、アーカイブに保持されます。 ディレクトリが空の場合は、空のアーカイブが作成されます。 このメソッドのオーバー ロードを使用すると、圧縮レベルと、ベース ディレクトリをアーカイブに含めるかどうかを指定できます。       アーカイブが既に存在する場合、<xref:System.IO.IOException>例外がスローされます</xref:System.IO.IOException>。 アーカイブに指定した名前のエントリが既に存在する場合と同じ名前の&2; 番目のエントリが作成されます。       アーカイブに、ディレクトリ内のファイルを追加することはできません、アーカイブを完了していないと、無効な場合がスローされます、<xref:System.IO.IOException>例外です</xref:System.IO.IOException>。"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. When compressing the archive, the base directory is included and the compression level is set to emphasize the speed of the operation over efficiency. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#2](~/add/codesnippet/csharp/42971baa-9b4d-4381-a7b3-_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#2](~/add/codesnippet/visualbasic/42971baa-9b4d-4381-a7b3-_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "アーカイブ、相対パスまたは絶対パスとして指定するディレクトリへのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: destinationArchiveFileName
      type: System.String
      description: "作成する相対パスまたは絶対パスとして指定するアーカイブのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の&1; つ。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディレクトリ名に含める`sourceDirectoryName`; アーカイブのルートにあります。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ディレクトリの内容のみを含める。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>は<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code>または<code> destinationArchiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>既に存在します。       または、指定したディレクトリ内のファイルを開くことができませんでした。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>ディレクトリを指定します。       - または - で指定されたディレクトリへのアクセスに必要なアクセス許可が呼び出し元にない<code>sourceDirectoryName</code>またはで指定されたファイル<code>destinationArchiveFileName</code>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>無効な形式が含まれています。       - または - zip アーカイブが書き込みをサポートしません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "含み、ファイルとディレクトリを指定したディレクトリから、エントリ名の指定した圧縮レベルと文字エンコーディングを使用して必要に応じて、ベース ディレクトリを含む zip アーカイブを作成します。"
  remarks: "ファイル システムから、ディレクトリ構造は、アーカイブに保持されます。 ディレクトリが空の場合は、空のアーカイブが作成されます。 このメソッドのオーバー ロードを使用すると、圧縮レベルと文字エンコーディング、およびアーカイブで、ベース ディレクトリを含めるかどうかを指定できます。       アーカイブが既に存在する場合、<xref:System.IO.IOException>例外がスローされます</xref:System.IO.IOException>。 アーカイブに指定した名前のエントリが既に存在する場合と同じ名前の&2; 番目のエントリが作成されます。       アーカイブに、ディレクトリ内のファイルを追加することはできません、アーカイブを完了していないと、無効な場合がスローされます、<xref:System.IO.IOException>例外です</xref:System.IO.IOException>。       場合`entryNameEncoding`以外の値に設定が`null`エントリ名が指定されたエンコーディングを使用してエンコードされます。 場合、各エントリのエンコードでローカル ファイル ヘッダーの汎用のビット フラグ) フラグを設定する、指定したエンコーディングが utf-8 の場合は、`entryNameEncoding`に設定されている`null`エントリ名は、次のルールに従ってエンコード: - のエントリを ASCII 以外の文字を含む名前の範囲は、エンコードのフラグが設定されている言語と、エントリ名をエンコードする utf-8 を使用します。      -の ASCII 文字のみを含むエントリ名、言語エンコード フラグを設定すると、およびエントリの名前をエンコードする現在のシステム既定のコード ページを使用します。"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "アーカイブ、相対パスまたは絶対パスとして指定するディレクトリへのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: destinationArchiveFileName
      type: System.String
      description: "作成する相対パスまたは絶対パスとして指定するアーカイブのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の&1; つ。"
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディレクトリ名に含める`sourceDirectoryName`; アーカイブのルートにあります。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ディレクトリの内容のみを含める。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "読み取り時に使用するエンコーディングまたはこのアーカイブのエントリの名前を記述します。 エンコーディングは zip アーカイブ ツールとエントリ名の utf-8 エンコードをサポートしているライブラリとの相互運用に必要な場合にのみ、このパラメーターの値を指定します。"
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>は<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。       - または -<code>entryNameEncoding</code>は Unicode に設定するエンコーディング utf-8 以外の場合。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code>または<code> destinationArchiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>既に存在します。       または、指定したディレクトリ内のファイルを開くことができませんでした。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>ディレクトリを指定します。       - または - で指定されたディレクトリへのアクセスに必要なアクセス許可が呼び出し元にない<code>sourceDirectoryName</code>またはで指定されたファイル<code>destinationArchiveFileName</code>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>または<code>destinationArchiveFileName</code>無効な形式が含まれています。       - または - zip アーカイブが書き込みをサポートしません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  id: ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定した zip アーカイブをディレクトリにファイル システム上のすべてのファイルを抽出します。"
  remarks: "このメソッドは、指定されたディレクトリとすべてのサブディレクトリを作成します。 変換先ディレクトリは既に存在できません。 内のパスの検証に関連する例外、`destinationDirectoryName`または`sourceArchiveFileName`抽出の前にパラメーターがスローされます。 それ以外の場合、抽出中にエラーが発生する場合は、アーカイブ部分的に展開されたままです。 抽出された各ファイルが同じ相対パスで指定されたディレクトリに`destinationDirectoryName`のソースとしてエントリが、アーカイブのルートです。"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive and extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._5_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "抽出するアーカイブのパス。"
    - id: destinationDirectoryName
      type: System.String
      description: "相対パスまたは絶対パスとして指定された、抽出したファイルを配置するディレクトリへのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>または<code>sourceArchiveFileName</code>は<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定されたパス<code> destinationDirectoryName </code>または<code> sourceArchiveFileName </code>システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定されたディレクトリ<code> destinationDirectoryName </code>既に存在します。       - または -、アーカイブのエントリの名前が<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています</xref:System.String>。       - または - で指定されたディレクトリ外にあるファイルを作成するアーカイブのエントリの抽出<code> destinationDirectoryName</code>です。 (たとえば、起こり、エントリ名に親ディレクトリのアクセサーが含まれている場合。)      - または - を抽出するアーカイブのエントリが既に同じアーカイブから抽出されたエントリと同じ名前です。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、アーカイブまたはコピー先ディレクトリへのアクセスに必要なアクセス許可がありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>または<code>sourceArchiveFileName</code>無効な形式が含まれています。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>検出されませんでした。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "指定したアーカイブ<code> sourceArchiveFileName </code>は有効な zip アーカイブではありません。       または、アーカイブのエントリが存在しないか破損しています。       - または - アーカイブ エントリはサポートされていない圧縮方式を使用して圧縮されました。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  id: ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "すべてのファイルをディレクトリに指定した zip アーカイブ内のファイル システムに抽出し、エントリ名のエンコードの指定した文字を使用します。"
  remarks: "このメソッドは、指定されたディレクトリとすべてのサブディレクトリを作成します。 変換先ディレクトリは既に存在できません。 内のパスの検証に関連する例外、`destinationDirectoryName`または`sourceArchiveFileName`抽出の前にパラメーターがスローされます。 それ以外の場合、抽出中にエラーが発生する場合は、アーカイブ部分的に展開されたままです。 抽出された各ファイルが同じ相対パスで指定されたディレクトリに`destinationDirectoryName`のソースとしてエントリが、アーカイブのルートです。       場合`entryNameEncoding`以外の値に設定`null`エントリ名は、次の規則に従ってデコード: - 場所エンコード (ローカル ファイル ヘッダーの汎用のビット フラグの内容) フラグが設定されていない、エントリ名が指定されたエンコーディングを使用してデコードされたエントリ名にします。      -言語エンコード フラグが設定されている、エントリのエントリの名前は、utf-8 を使用してデコードされます。       場合`entryNameEncoding`に設定されている`null`エントリ名は、次の規則に従ってデコード: - エントリをエンコード (ローカル ファイル ヘッダーの汎用のビット フラグの内容) フラグが設定されていないエントリ名は、現在のシステム既定のコード ページを使用してデコードされます。      -言語エンコード フラグが設定されている、エントリのエントリの名前は、utf-8 を使用してデコードされます。"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "抽出するアーカイブのパス。"
    - id: destinationDirectoryName
      type: System.String
      description: "相対パスまたは絶対パスとして指定された、抽出したファイルを配置するディレクトリへのパス。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "読み取り時に使用するエンコーディングまたはこのアーカイブのエントリの名前を記述します。 エンコーディングは zip アーカイブ ツールとエントリ名の utf-8 エンコードをサポートしているライブラリとの相互運用に必要な場合にのみ、このパラメーターの値を指定します。"
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>または<code>sourceArchiveFileName</code>は<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。       - または -<code>entryNameEncoding</code>は Unicode に設定するエンコーディング utf-8 以外の場合。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定されたパス<code> destinationDirectoryName </code>または<code> sourceArchiveFileName </code>システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定されたディレクトリ<code> destinationDirectoryName </code>既に存在します。       - または -、アーカイブのエントリの名前が<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています</xref:System.String>。       - または - で指定されたディレクトリ外にあるファイルを作成するアーカイブのエントリの抽出<code> destinationDirectoryName</code>です。 (たとえば、起こり、エントリ名に親ディレクトリのアクセサーが含まれている場合。)      - または - を抽出するアーカイブのエントリが既に同じアーカイブから抽出されたエントリと同じ名前です。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、アーカイブまたはコピー先ディレクトリへのアクセスに必要なアクセス許可がありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>または<code>sourceArchiveFileName</code>無効な形式が含まれています。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>検出されませんでした。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "指定したアーカイブ<code> sourceArchiveFileName </code>は有効な zip アーカイブではありません。       または、アーカイブのエントリが存在しないか破損しています。       - または - アーカイブ エントリはサポートされていない圧縮方式を使用して圧縮されました。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定したパスと指定したモードで zip アーカイブを開きます。"
  remarks: "設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode>から、<xref:System.IO.FileMode>ファイル モードの値としての列挙。</xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが存在しない場合、<xref:System.IO.FileNotFoundException>例外がスローされます</xref:System.IO.FileNotFoundException>。 設定、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>は呼び出すことと同じ、<xref:System.IO.Compression.ZipFile.OpenRead%2A>メソッド</xref:System.IO.Compression.ZipFile.OpenRead%2A></xref:System.IO.Compression.ZipArchiveMode>。       設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが既に存在する場合、<xref:System.IO.IOException>がスローされます</xref:System.IO.IOException>。       設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが存在する場合は開きます。 既存のエントリを変更することができ、新しいエントリを作成することができます。 アーカイブが存在しない場合、新しいアーカイブが作成されます。ただしで zip アーカイブを作成する<xref:System.IO.Compression.ZipArchiveMode>モードが効率的で作成する場合とではない<xref:System.IO.Compression.ZipArchiveMode>モード</xref:System.IO.Compression.ZipArchiveMode></xref:System.IO.Compression.ZipArchiveMode>。"
  example:
  - "The following example shows how to open a zip archive in the update mode and add an entry to the archive.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/7e49a288-de57-4354-b009-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/7e49a288-de57-4354-b009-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "開くには、アーカイブのパスは、相対パスまたは絶対パスとして指定します。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "開いているアーカイブのエントリで許可されている操作を指定する列挙値の&1; つ。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開いている zip アーカイブ。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>開かれていませんでした。       - または -<code>mode</code>に設定されている<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>で指定されたファイルが、<code>archiveFileName</code>既に存在します。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>ディレクトリを指定します。       または、呼び出し元がで指定されたファイルにアクセスする必要なアクセス許可<code>archiveFileName</code>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>無効な値を指定します。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>設定されている<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>で指定されたファイルが、<code>archiveFileName</code>が見つかりません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>無効な形式が含まれています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip アーカイブとして解釈できませんでした。       - または -<code>mode</code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>が、エントリが見つからないか壊れている、読み取ることができません。       - または -<code>mode</code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>エントリが大きすぎてメモリに収まらないが、します。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定したモードでとエンコード エントリの名前を指定した文字を使用して、指定したパスに zip アーカイブを開きます。"
  remarks: "設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが存在しない場合、<xref:System.IO.FileNotFoundException>例外がスローされます</xref:System.IO.FileNotFoundException>。 設定、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>は呼び出すことと同じ、<xref:System.IO.Compression.ZipFile.OpenRead%2A>メソッド</xref:System.IO.Compression.ZipFile.OpenRead%2A></xref:System.IO.Compression.ZipArchiveMode>。       設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが既に存在する場合、<xref:System.IO.IOException>がスローされます</xref:System.IO.IOException>。       設定すると、`mode`パラメーターを<xref:System.IO.Compression.ZipArchiveMode>で、アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 。 アーカイブが存在する場合は開きます。 既存のエントリを変更することができ、新しいエントリを作成することができます。 アーカイブが存在しない場合、新しいアーカイブが作成されます。ただしで zip アーカイブを作成する<xref:System.IO.Compression.ZipArchiveMode>モードが効率的で作成する場合とではない<xref:System.IO.Compression.ZipArchiveMode>モード</xref:System.IO.Compression.ZipArchiveMode></xref:System.IO.Compression.ZipArchiveMode>。       読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`に設定されている`null`エントリ名は、次の規則に従ってデコード: - 現在のシステム既定のコード ページで、ローカル ファイル ヘッダーの汎用のビット フラグ) エンコードのフラグが設定されていない言語が、エントリ名のデコードに使用する場合。      -ときは、言語エンコード フラグを設定すると、utf-8 はエントリ名のデコードに使用されます。       読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`以外の値に設定されて`null`、エントリ名は、次の規則に従ってデコード: - エンコード フラグが設定されていない、指定した場合`entryNameEncoding`エントリ名のデコードに使用します。      -ときは、言語エンコード フラグを設定すると、utf-8 はエントリ名のデコードに使用されます。       アーカイブ ファイルを記述する場合と`entryNameEncoding`éý &quot; è`null`エントリ名は、次のルールに従ってエンコード: - のエントリを ASCII 以外の文字を含む名前の範囲、エンコードのフラグが設定されている言語とエントリ名は、utf-8 を使用してエンコードされました。      -の ASCII 文字のみを含むエントリ名、言語エンコード フラグが設定されていないと、エントリの名前は、現在のシステム既定のコード ページを使用してエンコードされました。       アーカイブ ファイルを記述する場合と`entryNameEncoding`以外の値に設定`null`、指定した`entryNameEncoding`バイト エントリ名のエンコードに使用します。 フラグ (ローカル ファイル ヘッダーの汎用のビット フラグ) でのエンコード方法は、指定したエンコーディングが utf-8 エンコードの場合にのみ設定されます。"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "開くには、アーカイブのパスは、相対パスまたは絶対パスとして指定します。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "開いているアーカイブのエントリで許可されている操作を指定する列挙値の&1; つ。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "読み取り時に使用するエンコーディングまたはこのアーカイブのエントリの名前を記述します。 エンコーディングは zip アーカイブ ツールとエントリ名の utf-8 エンコードをサポートしているライブラリとの相互運用に必要な場合にのみ、このパラメーターの値を指定します。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開いている zip アーカイブ。"
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。       - または -<code>entryNameEncoding</code>は Unicode に設定するエンコーディング utf-8 以外の場合。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>開かれていませんでした。       - または -<code>mode</code>に設定されている<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>で指定されたファイルが、<code>archiveFileName</code>既に存在します。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>ディレクトリを指定します。       または、呼び出し元がで指定されたファイルにアクセスする必要なアクセス許可<code>archiveFileName</code>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>無効な値を指定します。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>設定されている<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>で指定されたファイルが、<code>archiveFileName</code>が見つかりません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>無効な形式が含まれています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip アーカイブとして解釈できませんでした。       - または -<code>mode</code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>が、エントリが見つからないか壊れている、読み取ることができません。       - または -<code>mode</code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>エントリが大きすぎてメモリに収まらないが、します。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定したパスで読み取りの zip アーカイブを開きます。"
  remarks: "このメソッドを呼び出すことは、<xref:System.IO.Compression.ZipFile.Open%2A>メソッドと設定、 `mode` <xref:System.IO.Compression.ZipArchiveMode></xref:System.IO.Compression.ZipArchiveMode>パラメーター</xref:System.IO.Compression.ZipFile.Open%2A> 。 アーカイブが開きます<xref:System.IO.FileMode?displayProperty=fullName>ファイル モードの値として。</xref:System.IO.FileMode?displayProperty=fullName> 。 アーカイブが存在しない場合、<xref:System.IO.FileNotFoundException>例外がスローされます</xref:System.IO.FileNotFoundException>。"
  example:
  - "The following example shows how to open a zip archive for reading.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/m-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/m-system.io.compression._2_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "開くには、アーカイブのパスは、相対パスまたは絶対パスとして指定します。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    return:
      type: System.IO.Compression.ZipArchive
      description: "開いている zip アーカイブ。"
  overload: System.IO.Compression.ZipFile.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>無効か存在しません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>開かれていませんでした。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>ディレクトリを指定します。       または、呼び出し元がで指定されたファイルにアクセスする必要なアクセス許可<code>archiveFileName</code>です。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定されたファイル<code> archiveFileName </code>が見つかりません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>無効な形式が含まれています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip アーカイブとして解釈できませんでした。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
- uid: System.IO.Compression.ZipFile.CreateFromDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory
  nameWithType: ZipFile.CreateFromDirectory
- uid: System.IO.Compression.ZipFile.ExtractToDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFile.ExtractToDirectory
- uid: System.IO.Compression.ZipFile.Open*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open
  nameWithType: ZipFile.Open
- uid: System.IO.Compression.ZipFile.OpenRead*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead
  nameWithType: ZipFile.OpenRead
