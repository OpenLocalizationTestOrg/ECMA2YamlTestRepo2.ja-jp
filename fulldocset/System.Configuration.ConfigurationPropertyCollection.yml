### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPropertyCollection
  id: ConfigurationPropertyCollection
  children:
  - System.Configuration.ConfigurationPropertyCollection.#ctor
  - System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationPropertyCollection.Clear
  - System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  - System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  - System.Configuration.ConfigurationPropertyCollection.Count
  - System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  - System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  - System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  - System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  - System.Configuration.ConfigurationPropertyCollection.SyncRoot
  - System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
  type: Class
  summary: "構成要素のプロパティのコレクションを表します。"
  remarks: "ConfigurationPropertyCollection クラスのコレクションを表す、<xref:System.Configuration.ConfigurationProperty>属性を保持できるオブジェクトまたは<xref:System.Configuration.ConfigurationElement>構成要素のオブジェクト</xref:System.Configuration.ConfigurationElement></xref:System.Configuration.ConfigurationProperty>。       <xref:System.Configuration.ConfigurationProperty>クラスは、個々 の構成設定を表します</xref:System.Configuration.ConfigurationProperty>。 取得または名前、型、および特定の構成のエンティティ (属性または要素) の既定値を設定することができます。 追加のオプションでは、属性が必要し、要素のキーとしてか、既定の要素のコレクションを表すかを指定できます。"
  example:
  - "The following example shows one possible use of the ConfigurationPropertyCollection. Refer to the example of the related type <xref:System.Configuration.ConfigurationProperty>.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following is an excerpt from the configuration used by the above example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"CustomSection\" type=\"Samples.AspNet, ConfigurationProperty, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" allowDefinition=\"Everywhere\" allowExeDefinition=\"MachineToApplication\" restartOnExternalChanges=\"true\" />  \n    </configSections>  \n    <CustomSection fileName=\"default.txt\" alias=\"alias.txt\" maxUsers=\"1000\"  \n      maxIdleTime=\"00:05:00\" />  \n</configuration>  \n```"
  syntax:
    content: 'public class ConfigurationPropertyCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: ConfigurationPropertyCollection()
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref>クラスです。"
  remarks: "格納する新しいコレクションを作成する、ConfigurationPropertyCollection を使用する、 <xref:System.Configuration.ConfigurationProperty>、構成要素に適用されるオブジェクトします</xref:System.Configuration.ConfigurationProperty>。"
  example:
  - "The following example shows how to use the ConfigurationPropertyCollection constructor.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public ConfigurationPropertyCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationPropertyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  id: Add(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Add(ConfigurationProperty)
  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成プロパティをコレクションに追加します。"
  remarks: "既定では、Add メソッドが、指定したに追加<xref:System.Configuration.ConfigurationProperty>オブジェクトをコレクション内で既に含まれていない場合</xref:System.Configuration.ConfigurationProperty>。"
  example:
  - "The following example shows how to use the Add method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Add (System.Configuration.ConfigurationProperty property);
    parameters:
    - id: property
      type: System.Configuration.ConfigurationProperty
      description: "The <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> to add."
  overload: System.Configuration.ConfigurationPropertyCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Clear
  id: Clear
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConfigurationPropertyCollection.Clear()
  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "すべての構成プロパティ オブジェクトをコレクションから削除します。"
  remarks: ''
  example:
  - "The following example shows how to use the Clear method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method and save the changes to the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.ConfigurationPropertyCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConfigurationPropertyCollection.Contains(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成プロパティがこのコレクションに含まれるかどうかを指定します。"
  remarks: ''
  example:
  - "The following example shows how to use the Contains method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "識別子、 <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>ことを確認します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定された<xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> 、それ以外のコレクションに含まれている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationPropertyCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationProperty[],Int32)
  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "この ConfigurationPropertyCollection は、配列にコピーします。"
  remarks: ''
  example:
  - "The following example shows how to use the CopyTo method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationProperty[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationProperty[]
      description: "コピー先の配列。"
    - id: index
      type: System.Int32
      description: "コピーを開始する位置を示すインデックスします。"
  overload: System.Configuration.ConfigurationPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
  fullName: System.Configuration.ConfigurationPropertyCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コレクション内のプロパティの数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "コレクション内のプロパティの数。"
  overload: System.Configuration.ConfigurationPropertyCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationPropertyCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "取得、<xref:System.Collections.IEnumerator>オブジェクトのコレクションに適用することです</xref:System.Collections.IEnumerator>。"
  remarks: ''
  example:
  - "The following example shows how to use the GetEnumerator method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method to enumerate the <xref:System.Configuration.ConfigurationProperty> objects in the collection.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>オブジェクトのコレクションに適用される</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コレクションへのアクセスが同期されているかどうかを示す値 (スレッド セーフである) を取得します。"
  remarks: ''
  example:
  - "The following example shows how to get the IsSynchronized property value.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセス、 <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> 、それ以外の同期された<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConfigurationPropertyCollection.Item(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "指定された名前、コレクション アイテムを取得します。"
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyCollection.Count%2A> property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Configuration.ConfigurationProperty this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "<xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>を返します。"
    return:
      type: System.Configuration.ConfigurationProperty
      description: "The <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> with the specified <code>name</code>."
  overload: System.Configuration.ConfigurationPropertyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConfigurationPropertyCollection.Remove(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "構成プロパティをコレクションから削除します。"
  remarks: "戻り値の`false`ことを示します、指定した<xref:System.Configuration.ConfigurationProperty>オブジェクトがコレクション内ではありません</xref:System.Configuration.ConfigurationProperty>。"
  example:
  - "The following example shows how to use the Remove method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method and save the changes to the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>を削除します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>が削除された、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ConfigurationPropertyCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "コレクションへのアクセスを同期するためにオブジェクトを取得します。"
  remarks: ''
  example:
  - "The following example shows how to get the SyncRoot property value.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するオブジェクト。"
  overload: System.Configuration.ConfigurationPropertyCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "このコレクションを配列にコピーします。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "コピー先の配列。"
    - id: index
      type: System.Int32
      description: "コピーを開始するインデックスの位置。"
  overload: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: ConfigurationPropertyCollection()
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()
- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Add(ConfigurationProperty)
  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.Configuration.ConfigurationPropertyCollection.Clear
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Clear()
  nameWithType: ConfigurationPropertyCollection.Clear()
  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()
- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConfigurationPropertyCollection.Contains(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: CopyTo(ConfigurationProperty[],Int32)
  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
- uid: System.Configuration.ConfigurationProperty[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: ConfigurationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationPropertyCollection.Count
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
  fullName: System.Configuration.ConfigurationPropertyCollection.Count
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationPropertyCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationPropertyCollection.Item(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)
- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConfigurationPropertyCollection.Remove(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection
- uid: System.Configuration.ConfigurationPropertyCollection.Add*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Add
  nameWithType: ConfigurationPropertyCollection.Add
- uid: System.Configuration.ConfigurationPropertyCollection.Clear*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Clear
  nameWithType: ConfigurationPropertyCollection.Clear
- uid: System.Configuration.ConfigurationPropertyCollection.Contains*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Contains
  nameWithType: ConfigurationPropertyCollection.Contains
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationPropertyCollection.CopyTo
- uid: System.Configuration.ConfigurationPropertyCollection.Count*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationPropertyCollection.GetEnumerator
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
- uid: System.Configuration.ConfigurationPropertyCollection.Item*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Item
  nameWithType: ConfigurationPropertyCollection.Item
- uid: System.Configuration.ConfigurationPropertyCollection.Remove*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Remove
  nameWithType: ConfigurationPropertyCollection.Remove
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo
