### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionInterop
  id: TransactionInterop
  children:
  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetWhereabouts
  - System.Transactions.TransactionInterop.PromoterTypeDtc
  langs:
  - csharp
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
  type: Class
  summary: "間の対話を容易に<xref href=&quot;System.Transactions&quot;></xref>および MSDTC、COM + と対話する以前記述されたコンポーネントまたは<xref href=&quot;System.EnterpriseServices&quot;></xref>です。 このクラスは継承できません。"
  remarks: "このクラスは、トランザクションの伝達のメソッドを提供します。 このプロセスのしくみの詳細については、次を参照してください。[トランザクション伝達](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)です。       このクラスによって提供されるメソッドを使用して、2 種類のトランザクションの反映、(プッシュ モデル) のエクスポート/インポートし、トランスミッターまたはレシーバー (プル モデル) に取り組むことができます。       エクスポート/インポート (プッシュ モデル) の伝達には、次の手順では、1 が含まれます。  リモートのコンピューター上で呼び出すことによってをそのコンピューターのトランザクション マネージャーの「行き先」取得、<xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>メソッド</xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>。 将来の使用をクライアント コンピューターで情報をキャッシュできます。      2.  適切なメソッドでは、3 を使用してクライアント コンピューターに位置情報を含むデータを送信します。  クライアント コンピューターでは、リモート コンピューターに、トランザクションを「エクスポート」トランザクション&quot;cookie&quot;を生成して位置情報を使用します。  これは、呼び出すことで<xref:System.Transactions.TransactionInterop.GetExportCookie%2A>リモート コンピューターの行き先を渡して</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>。      4.  適切なメソッドでは、5 を使用してリモート コンピューターに、トランザクションを含むデータ&quot;cookie&quot;を送信します。  リモートのコンピューターでを呼び出すことによって、クライアント トランザクションの複製を取得するトランザクション&quot;cookie&quot;を使用して、<xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>メソッド</xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>。      6.  リモートのコンピューターに複製トランザクションを使用して、<xref:System.Transactions.Transaction.EnlistVolatile%2A>または<xref:System.Transactions.Transaction.EnlistDurable%2A><xref:System.Transactions.Transaction>クラス</xref:System.Transactions.Transaction>のメソッド</xref:System.Transactions.Transaction.EnlistDurable%2A></xref:System.Transactions.Transaction.EnlistVolatile%2A>を使用して、リソース マネージャーを参加させる       トランスミッターまたはレシーバー (プル モデル) の伝達に次の手順のクライアント コンピューターで、トランザクションを使用してトークンを生成、対応する&quot;伝達&quot;<xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>を呼び出すことによって、- -「伝達トークン」を使用したトークンを含む&quot;伝達&quot;トランザクションのリモート コンピューター上の適切なメソッドを使用してリモート コンピューターにデータを送信<xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>、トランスミッターまたはレシーバー モデルを呼び出すことによってトランザクションがトランザクション トークンをリモート コンピューターに送信する場所のシナリオでパフォーマンスの向上を提供するクライアントの複製を取得するにはをリモート コンピューターでは、トランザクションの取得に使用されませんが、。</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> </xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  これは、トランザクションがまで反映されないため<xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>と呼びます</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>。 その他の利点は、エクスポート クッキーは、位置情報を提供するコンピューター上でのみ使用できますが、伝達トークンを任意のリモート コンピューターに送信できることです。       ただし、するも注意してくださいリモート トランザクション マネージャーの位置情報は、すべての伝達トークンにカプセル化する、対応するトランザクションからの cookie、エクスポート/インポート モデルよりも大きくすることです。       **注**この型を使用して<xref:System.Security.Permissions.SecurityAction>されないようにするで、信頼されていないコードから呼び出されますただし、直前の呼び出し元だけが所有する必要が、`FullTrust`アクセス許可セット。</xref:System.Security.Permissions.SecurityAction> 。"
  syntax:
    content: public static class TransactionInterop
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  id: GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "取得、 <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>を表すインスタンス、 <xref href=&quot;System.Transactions.Transaction&quot;></xref>です。"
  syntax:
    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>マーシャ リングするインスタンス。"
    return:
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>を表すインスタンス、 <xref href=&quot;System.Transactions.Transaction&quot;></xref>です。  <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>インスタンスのアンマネージ フォームでの互換性が[ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) MSDTC によって、管理されている形式の<xref href=&quot;System.EnterpriseServices.ITransaction&quot;></xref>によって使用される<xref href=&quot;System.EnterpriseServices&quot;></xref>です。"
  overload: System.Transactions.TransactionInterop.GetDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "トランザクション オブジェクトをエクスポート トランザクション クッキーに変換します。"
  remarks: "トランザクションをエクスポートする場合は、このメソッドを呼び出します。 `transaction`渡されるには、マーシャ リングされるトランザクション クッキーにします。 目的のプロセス トランザクション クッキーを送信することができます。 これはシステムまたはプロセス間のトランザクションの反映と呼ばれます。 伝達は、プッシュ モデルはローカル トランザクションが、変換先にプッシュする場所と見なされます。  情報が含まれているため、`whereabouts`対象になるトランザクション マネージャーを記述する必要があります。       各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop>クラス</xref:System.Transactions.TransactionInterop>の「解説」セクションを参照してください。"
  syntax:
    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "<xref href=&quot;System.Transactions.Transaction&quot;> </xref>マーシャ リングするオブジェクト。"
    - id: whereabouts
      type: System.Byte[]
      description: "対象になるトランザクション マネージャーの場所を示すアドレス。 これにより、相互に通信し、それによって、他の&1; つのシステムからトランザクションを伝達するための&2; つのトランザクション マネージャーです。"
    return:
      type: System.Byte[]
      description: "指定されたを表すエクスポート トランザクション クッキー <xref href=&quot;System.Transactions.Transaction&quot;> </xref>オブジェクト。"
  overload: System.Transactions.TransactionInterop.GetExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "生成、 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>から、指定した<xref href=&quot;System.Transactions.IDtcTransaction&quot;></xref>です。"
  remarks: "`transactionNative`のアンマネージ フォームと互換性が[ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) MSDTC によっておよび<xref:System.EnterpriseServices.ITransaction><xref:System.EnterpriseServices>.</xref:System.EnterpriseServices>によって</xref:System.EnterpriseServices.ITransaction>使用されるマネージ フォームの使用"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);
    parameters:
    - id: transactionNative
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>マーシャ リングするオブジェクト。"
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>インスタンスを表す、指定された<xref href=&quot;System.Transactions.IDtcTransaction&quot;></xref>です。"
  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  id: GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "生成、 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>から、指定したエクスポート クッキー。"
  remarks: "各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop>クラス</xref:System.Transactions.TransactionInterop>の「解説」セクションを参照してください。"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "トランザクション オブジェクトのマーシャ リングされた形式です。"
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>指定したエクスポート クッキーからです。"
  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "生成、 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>指定したトランスミッター伝達トークンからのインスタンス。"
  remarks: "連携して、このメソッド、<xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>メソッドをトランザクションを「プル」リモート コンピューターからこのメソッドは、トランザクションのマーシャ リングを解除するときに、「プル」伝達の機能を提供します</xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>。       各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop>クラス</xref:System.Transactions.TransactionInterop>の「解説」セクションを参照してください。"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);
    parameters:
    - id: propagationToken
      type: System.Byte[]
      description: "トランザクションを表す伝達トークンです。"
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref>指定したトランスミッター伝達トークンから。"
  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  exceptions:
  - type: System.Transactions.TransactionManagerCommunicationException
    commentId: T:System.Transactions.TransactionManagerCommunicationException
    description: "トランザクション マネージャーに接続できないために、トランザクションの逆シリアル化が失敗します。 ネットワーク ファイアウォールまたはセキュリティ設定が考えられます。"
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  id: GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "指定したの伝達トークンを生成<xref href=&quot;System.Transactions.Transaction&quot;></xref>です。"
  syntax:
    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "伝達トークンにマーシャ リングされるトランザクション。"
    return:
      type: System.Byte[]
      description: "このメソッドと連携して、<xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>メソッド、トランスミッターまたはレシーバーの伝達をトランザクションを「プル」リモート コンピューターから、後者が呼び出されると、トランザクションのマーシャ リングを解除する機能を提供します</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>。       各種の伝達モデルの詳細については、の「解説」セクションを参照してください、 <xref href=&quot;System.Transactions.TransactionInterop&quot;> </xref>クラスです。"
  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  id: GetWhereabouts
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "分散トランザクション マネージャーの位置情報を取得<xref href=&quot;System.Transactions&quot;></xref>を使用します。"
  remarks: "位置情報には、トランザクション マネージャーの場所を示すアドレスが含まれています。 これにより、相互に通信し、それによって、他の&1; つのシステムからトランザクションを伝達するための&2; つのトランザクション マネージャーです。 このメソッドによって返される情報でプッシュ モデル トランザクション伝達の場所の情報を提供するために使用できます、<xref:System.Transactions.TransactionInterop.GetExportCookie%2A>メソッド</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>。       各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop>クラス</xref:System.Transactions.TransactionInterop>の「解説」セクションを参照してください。"
  syntax:
    content: public static byte[] GetWhereabouts ();
    parameters: []
    return:
      type: System.Byte[]
      description: "分散トランザクション マネージャーの位置情報を<xref href=&quot;System.Transactions&quot;></xref>を使用します。"
  overload: System.Transactions.TransactionInterop.GetWhereabouts*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  id: PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
  type: Field
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "分散トランザクション プロセッサの種類。"
  remarks: "この値はの使用、`Transaction.PromoterType`プロパティか、トランザクションは MSDTC に昇格されます、`Transaction.GetPromotedToken`メソッドの MSDTC トランザクション伝達トークンを返します、`byte[]`結果。"
  syntax:
    content: public static readonly Guid PromoterTypeDtc;
    return:
      type: System.Guid
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionInterop.GetDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction
  nameWithType: TransactionInterop.GetDtcTransaction
- uid: System.Transactions.TransactionInterop.GetExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie
  nameWithType: TransactionInterop.GetExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie
  nameWithType: TransactionInterop.GetTransactionFromExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetWhereabouts*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts
  nameWithType: TransactionInterop.GetWhereabouts
