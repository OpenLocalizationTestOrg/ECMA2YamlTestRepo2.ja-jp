### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DBDataPermission
  id: DBDataPermission
  children:
  - System.Data.Common.DBDataPermission.#ctor
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.Copy
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
  type: Class
  summary: "ユーザーがデータにアクセスするための十分なセキュリティ レベルを持っていることを確認する .NET Framework データ プロバイダーを有効にします。"
  syntax:
    content: 'public abstract class DBDataPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor
  id: '#ctor'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを初期化、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>クラスです。"
  syntax:
    content: protected DBDataPermission ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  id: '#ctor(System.Data.Common.DBDataPermission)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを初期化、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>既存を使用してクラス<xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermission permission);
    parameters:
    - id: permission
      type: System.Data.Common.DBDataPermission
      description: "既存の<xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;></xref>を新規作成するために使用<xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  id: '#ctor(System.Data.Common.DBDataPermissionAttribute)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを初期化、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 、指定したクラス<xref uid=&quot;langword_csharp_DBDataPermissionAttribute&quot; name=&quot;DBDataPermissionAttribute&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermissionAttribute permissionAttribute);
    parameters:
    - id: permissionAttribute
      type: System.Data.Common.DBDataPermissionAttribute
      description: "カスタム セキュリティ属性に関連付けられているセキュリティ アクション。"
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを初期化、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>値。"
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを初期化、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>値、および空のパスワードを許可するかどうかを示す値。"
  remarks: "<xref:System.Security.Permissions.PermissionState>列挙型よりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティ</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A></xref:System.Security.Permissions.PermissionState>。 そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Security.Permissions.PermissionState>に`None`をユーザーが、空白のパスワードを使用して接続するを防ぐ</xref:System.Security.Permissions.PermissionState></xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>。"
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
    - id: allowBlankPassword
      type: System.Boolean
      description: "空のパスワードを許可するかどうかを示します。"
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "既存の状態を指定された接続文字列に対するアクセス権を追加、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;></xref>です。"
  remarks: "実装する場合、このメソッドが役に立ちます:-.NET framework データ プロバイダー。      API をデータのアクセス許可をアサートする必要があります。      -管理ツールのインストールするプログラムまたはセキュリティ ポリシーを変更する必要があります。      -複数の規則を指定するより制限の厳しい規則が選択されます。"
  syntax:
    content: public virtual void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "使用できる接続文字列。"
    - id: restrictions
      type: System.String
      description: "許可または禁止する接続文字列パラメーターを識別する文字列。"
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "1 つ、 <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref>プロパティです。"
  overload: System.Data.Common.DBDataPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  id: AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "空のパスワードを許可するかどうかを示す値を取得します。"
  remarks: "<xref:System.Security.Permissions.PermissionState>列挙 AllowBlankPassword プロパティよりも優先されます</xref:System.Security.Permissions.PermissionState>。 したがって、AllowBlankPassword に設定する場合`false`、設定する必要もあります<xref:System.Security.Permissions.PermissionState>に`None`をユーザーが、空白のパスワードを使用して接続するを防ぐ</xref:System.Security.Permissions.PermissionState>。"
  syntax:
    content: public bool AllowBlankPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>空白のパスワードが許可された場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.Common.DBDataPermission.AllowBlankPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Clear
  id: Clear
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "以前でを使用して追加されたすべてのアクセス許可を削除、<xref:System.Data.Common.DBDataPermission.Add*>メソッド</xref:System.Data.Common.DBDataPermission.Add*>。"
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Copy
  id: Copy
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "作成して、現在のアクセス許可オブジェクトの完全なコピーを返します。"
  remarks: "アクセス許可オブジェクトのコピーは、元のアクセス許可オブジェクトと、リソースに対して同じアクセス権を表します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトのコピー。"
  overload: System.Data.Common.DBDataPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.CreateInstance
  id: CreateInstance
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "新しいインスタンスを作成、 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>クラスです。"
  syntax:
    content: protected virtual System.Data.Common.DBDataPermission CreateInstance ();
    parameters: []
    return:
      type: System.Data.Common.DBDataPermission
      description: "新しい<xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;></xref>オブジェクト。"
  overload: System.Data.Common.DBDataPermission.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。"
  remarks: "セキュリティ オブジェクトを拡張するカスタム コードを実装する必要があります、`ToXml`と`FromXml`encodable オブジェクトのセキュリティを作成する方法です。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "XML は、セキュリティ オブジェクトを再構築に使用するエンコーディングします。"
  overload: System.Data.Common.DBDataPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの交差を表す新しいアクセス許可オブジェクトを返します。"
  remarks: "2 つのアクセス許可の積集合は、両方の操作のセットを説明する権限です。 元の両方の権限を通過する要求だけでは、積集合を渡されます。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトと交差するアクセス許可オブジェクトです。 現在のアクセス許可オブジェクトと同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの交差部分を表す新しいアクセス許可オブジェクトです。 この新しいアクセス許可オブジェクトが null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) 場合は、積集合が空です。"
  overload: System.Data.Common.DBDataPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)、現在のアクセス許可オブジェクトと同じクラスのインスタンスではないとします。"
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "現在のアクセス許可オブジェクトが、指定したアクセス許可オブジェクトのサブセットであるかどうかを示す値を返します。"
  remarks: "現在のアクセス許可オブジェクトは、現在のアクセス許可オブジェクトを指定したアクセス許可オブジェクトによって完全に含まれる一連の操作を指定する場合、指定したアクセス許可オブジェクトのサブセットです。 たとえば、C:\\example.txt へのアクセスを表すアクセス許可は、c: へのアクセスを表すためのアクセス許可のサブセット\\\\です。 このメソッドが戻る場合`true`、現在のアクセス許可オブジェクトをアクセス保護されたリソースには、指定したアクセス許可オブジェクトを表します。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係をテストするのには、アクセス許可オブジェクトです。 このオブジェクトは、現在のアクセス許可オブジェクトと同じ型でなければなりません。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したアクセス許可オブジェクトのサブセットをそれ以外の場合、現在のアクセス許可オブジェクト<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.Common.DBDataPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターは、現在のアクセス許可オブジェクトと同じ型ではありません。"
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "アクセス許可のセマンティクスがわからなくて無制限のアクセス許可として表現できるかどうかを示す値を返します。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アクセス許可として表現できる場合は無制限になります。"
  overload: System.Data.Common.DBDataPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.ToXml
  id: ToXml
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "セキュリティ オブジェクトと現在の状態の XML エンコードを作成します。"
  remarks: "セキュリティ オブジェクトを拡張するカスタム コードは、ToXml を実装する必要がありますと<xref:System.Data.Common.DBDataPermission.FromXml%2A>encodable オブジェクトのセキュリティを作成する方法</xref:System.Data.Common.DBDataPermission.FromXml%2A>。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、セキュリティ オブジェクトの XML エンコード。"
  overload: System.Data.Common.DBDataPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "現在と指定したアクセス許可オブジェクトの和集合を表す新しいアクセス許可オブジェクトを返します。"
  remarks: "共用体への呼び出しの結果は、現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの両方で許可されているすべての操作を表すアクセス許可です。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトと結合するアクセス許可オブジェクトです。 現在のアクセス許可オブジェクトと同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合を表す新しいアクセス許可オブジェクトです。"
  overload: System.Data.Common.DBDataPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>オブジェクトは、現在のアクセス許可オブジェクトと同じ型ではありません。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.DBDataPermission.#ctor
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
- uid: System.Data.Common.DBDataPermission
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
- uid: System.Data.Common.DBDataPermissionAttribute
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermissionAttribute
  nameWithType: DBDataPermissionAttribute
  fullName: System.Data.Common.DBDataPermissionAttribute
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
- uid: System.Data.Common.DBDataPermission.Copy
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.Common.DBDataPermission.CreateInstance
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
- uid: System.Data.Common.DBDataPermission.ToXml
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
- uid: System.Data.Common.DBDataPermission.#ctor*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission.DBDataPermission
- uid: System.Data.Common.DBDataPermission.Add*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add
  nameWithType: DBDataPermission.Add
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear
  nameWithType: DBDataPermission.Clear
- uid: System.Data.Common.DBDataPermission.Copy*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy
  nameWithType: DBDataPermission.Copy
- uid: System.Data.Common.DBDataPermission.CreateInstance*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance
  nameWithType: DBDataPermission.CreateInstance
- uid: System.Data.Common.DBDataPermission.FromXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml
  nameWithType: DBDataPermission.FromXml
- uid: System.Data.Common.DBDataPermission.Intersect*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect
  nameWithType: DBDataPermission.Intersect
- uid: System.Data.Common.DBDataPermission.IsSubsetOf*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DBDataPermission.IsSubsetOf
- uid: System.Data.Common.DBDataPermission.IsUnrestricted*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DBDataPermission.IsUnrestricted
- uid: System.Data.Common.DBDataPermission.ToXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml
  nameWithType: DBDataPermission.ToXml
- uid: System.Data.Common.DBDataPermission.Union*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union
  nameWithType: DBDataPermission.Union
