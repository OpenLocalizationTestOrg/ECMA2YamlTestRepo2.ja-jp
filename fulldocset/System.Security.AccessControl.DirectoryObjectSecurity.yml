### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.DirectoryObjectSecurity
  id: DirectoryObjectSecurity
  children:
  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  langs:
  - csharp
  name: DirectoryObjectSecurity
  nameWithType: DirectoryObjectSecurity
  fullName: System.Security.AccessControl.DirectoryObjectSecurity
  type: Class
  summary: "アクセス制御リスト (Acl) の直接操作せずディレクトリ オブジェクトへのアクセスを制御する機能を提供します。"
  syntax:
    content: 'public abstract class DirectoryObjectSecurity : System.Security.AccessControl.ObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: DirectoryObjectSecurity()
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;> </xref>クラスです。"
  syntax:
    content: protected DirectoryObjectSecurity ();
    parameters: []
  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: DirectoryObjectSecurity(CommonSecurityDescriptor)
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;> </xref>指定されたセキュリティ記述子を持つクラス。"
  syntax:
    content: protected DirectoryObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "セキュリティ記述子に関連付ける新しい<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>値を指定しています。"
  syntax:
    content: public virtual System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "アクセス規則を適用する id。  オブジェクトとしてキャスト可能なをする必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>です。"
    - id: accessMask
      type: System.Int32
      description: "この規則のアクセス マスク。 アクセス マスクは 32 ビット一連の匿名ビットの意味は、各インテグレーターによって定義されます。"
    - id: isInherited
      type: System.Boolean
      description: "true の場合は、このルールは、親コンテナーから継承されます。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "アクセス規則の継承プロパティを指定します。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "継承されたアクセス規則を自動的に反映させるかどうかを指定します。 場合、伝達フラグは無視されます`inheritanceFlags`に設定されている<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>です。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "有効なアクセス制御の種類を指定します。"
    - id: objectType
      type: System.Guid
      description: "新しいアクセス規則を適用するオブジェクトのクラスの id。"
    - id: inheritedObjectType
      type: System.Guid
      description: "新しいアクセス ルールを継承できる子オブジェクトのクラスの id。"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>このメソッドを作成するオブジェクト。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: AddAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられている随意アクセス制御リスト (DACL) に指定されたアクセス規則を追加<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  remarks: "アクセス規則を追加すると、マージする DACL で既存のアクセス規則があります可能性。"
  syntax:
    content: protected void AddAccessRule (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "追加するアクセス規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: AddAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられているシステム アクセス制御リスト (SACL) に指定された監査規則を追加<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  remarks: "監査規則を追加すると、マージする SACL に既存の監査規則があります可能性。"
  syntax:
    content: protected void AddAuditRule (System.Security.AccessControl.ObjectAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "追加する監査規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>値を指定しています。"
  syntax:
    content: public virtual System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectType, Guid inheritedObjectType);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "監査規則が適用される id。  オブジェクトとしてキャスト可能なをする必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>です。"
    - id: accessMask
      type: System.Int32
      description: "この規則のアクセス マスク。 アクセス マスクは 32 ビット一連の匿名ビットの意味は、各インテグレーターによって定義されます。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このルールは、親コンテナーから継承されます。 場合、"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "監査規則の継承プロパティを指定します。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "継承された監査規則を自動的に反映させるかどうかを指定します。 場合、伝達フラグは無視されます`inheritanceFlags`に設定されている<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>です。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "規則が監査対象の条件を指定します。"
    - id: objectType
      type: System.Guid
      description: "新しい監査規則を適用するオブジェクトのクラスの id。"
    - id: inheritedObjectType
      type: System.Guid
      description: "新しい監査規則を継承できる子オブジェクトのクラスの id。"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>このメソッドを作成するオブジェクト。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定したセキュリティ識別子に関連付けられているアクセス規則のコレクションを取得します。"
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アクセスを含める規則はオブジェクトに対して明示的に設定します。"
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>継承されたアクセス規則を含めます。"
    - id: targetType
      type: System.Type
      description: "アクセス規則を取得する対象のセキュリティ識別子です。 これは、としてキャスト可能なオブジェクトである必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "指定された関連付けられているアクセス規則のコレクション<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定したセキュリティ id に関連付けられた監査規則のコレクションを取得します。"
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>監査を含める規則はオブジェクトに対して明示的に設定します。"
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>継承された監査規則を含めます。"
    - id: targetType
      type: System.Type
      description: "監査規則を取得する対象のセキュリティ識別子です。 これは、としてキャスト可能なオブジェクトである必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "指定した関連付けられた監査規則のコレクション<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定された変更を随意アクセス制御リスト (DACL) に関連付けられたを適用<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "DACL に適用する変更です。"
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "変更するアクセス規則。"
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>DACL が正常に変更されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>DACL が正常に変更されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定された変更をシステム アクセス制御リスト (SACL) に関連付けられたを適用<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "SACL に適用する変更です。"
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "変更する監査規則。"
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SACL が正常に変更されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SACL が正常に変更されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定されたアクセス ルールから、随意アクセス制御リスト (DACL) がこれに関連付けられている同じセキュリティ id とアクセス マスクを含むアクセス規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  remarks: "アクセスの削除は、それらを削除するだけでなく、アクセス制御規則を追加する複雑なアルゴリズムを使用して行われます。       このメソッドは、アクセス規則の削除に失敗し、返します`false`アクセス規則に関連付けられているこの継承ルールが正常に削除アルゴリズムの複雑すぎる場合です。"
  syntax:
    content: protected bool RemoveAccessRule (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "削除するアクセス規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、アクセス ルールが正常に削除されました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定されたアクセス ルールから、随意アクセス制御リスト (DACL) がこれに関連付けられている同じセキュリティ識別子を持つすべてのアクセス規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "削除するアクセス規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定されたアクセス ルールから、随意アクセス制御リスト (DACL) に関連付けられたを完全に一致するすべてのアクセス規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "削除するアクセス規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられているシステム アクセス制御リスト (SACL) から指定された監査規則、同じセキュリティ id とアクセス マスクを含む監査規則を削除<xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;></xref>オブジェクト。"
  remarks: "監査の削除は、それらを削除するだけでなく監査の制御規則を追加が複雑なアルゴリズムを使用して行われます。       このメソッドは、監査規則の削除に失敗し、返します`false`監査規則に関連付けられているこの継承ルールが正常に削除アルゴリズムの複雑すぎる場合です。"
  syntax:
    content: protected bool RemoveAuditRule (System.Security.AccessControl.ObjectAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "削除する監査規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>監査規則が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられているシステム アクセス制御リスト (SACL) から指定された監査規則、同じセキュリティ識別子を持つすべての監査規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.ObjectAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "削除する監査規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "指定された監査規則からのシステム アクセス制御リスト (SACL) に関連付けられたを完全に一致するすべての監査規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクト。"
  syntax:
    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.ObjectAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "削除する監査規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: ResetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "随意アクセス制御リスト (DACL) に関連付けられたすべてのアクセス規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクトし、指定されたアクセス規則を追加します。"
  syntax:
    content: protected void ResetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "リセットするアクセス規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: SetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられている随意アクセス制御リスト (DACL) で指定されたアクセス規則は、同じセキュリティ id と修飾子を含むすべてのアクセス規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクトし、指定されたアクセス規則を追加します。"
  syntax:
    content: protected void SetAccessRule (System.Security.AccessControl.ObjectAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "設定するアクセス規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  name: SetAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられているシステム アクセス制御リスト (SACL) で指定された監査規則、同じセキュリティ id と修飾子を含むすべての監査規則を削除<xref href=&quot;System.Security.AccessControl.DirectoryObjectSecurity&quot;></xref>オブジェクトし、指定された監査規則を追加します。"
  syntax:
    content: protected void SetAuditRule (System.Security.AccessControl.ObjectAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "設定する監査規則。"
  overload: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: DirectoryObjectSecurity()
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: DirectoryObjectSecurity(CommonSecurityDescriptor)
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AddAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)
- uid: System.Security.AccessControl.ObjectAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAccessRule
  nameWithType: ObjectAccessRule
  fullName: System.Security.AccessControl.ObjectAccessRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AddAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)
- uid: System.Security.AccessControl.ObjectAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAuditRule
  nameWithType: ObjectAuditRule
  fullName: System.Security.AccessControl.ObjectAuditRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ResetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: SetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: SetAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: DirectoryObjectSecurity
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: DirectoryObjectSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: DirectoryObjectSecurity.AddAccessRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: DirectoryObjectSecurity.AddAuditRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: DirectoryObjectSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: GetAccessRules
  nameWithType: DirectoryObjectSecurity.GetAccessRules
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: GetAuditRules
  nameWithType: DirectoryObjectSecurity.GetAuditRules
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: DirectoryObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: DirectoryObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: DirectoryObjectSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: DirectoryObjectSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: DirectoryObjectSecurity.ResetAccessRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: DirectoryObjectSecurity.SetAccessRule
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule*
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: DirectoryObjectSecurity.SetAuditRule
