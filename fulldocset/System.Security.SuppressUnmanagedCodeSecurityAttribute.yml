### YamlMime:ManagedReference
items:
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute
  id: SuppressUnmanagedCodeSecurityAttribute
  children:
  - System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute
  type: Class
  summary: "マネージ コードは、スタック ウォークなしのアンマネージ コードへの呼び出しを許可します。 このクラスは継承できません。"
  remarks: "> [!CAUTION]> 細心の注意でこの属性を使用します。 不適切な使用には、セキュリティ上の弱点を作成できます。       この属性は、その際に、ランタイム セキュリティ チェックのパフォーマンスの低下を生じることがなくネイティブ コードへの呼び出しをメソッドに適用できます。 結果的にパフォーマンスが大幅に節約の実行時に、アンマネージ コードを呼び出すときに実行されたスタック ウォークが省略されています。 クラスでこの属性を使用すると、コンテナー内のすべてのメソッドに適用します。       一般に、マネージ コードは、(PInvoke または COM 相互運用機能をネイティブ コード) をアンマネージ コードを呼び出す、たびの使用量が、`UnmanagedCode`のアクセス権をすべての呼び出し元は、これを許可するために必要な権限を持っています。 この明示的な属性を適用すると、開発者は、実行時に要求を抑制できます。 開発者は、アンマネージ コードへの移行が他の方法で十分に保護されていることを維持するための責任を負う必要があります。 必要な`UnmanagedCode`権限はリンク時に行われます。 たとえば、関数 A が関数 B、関数 B が SuppressUnmanagedCodeSecurityAttribute でマークされた場合は、関数 A チェックして、ジャスト イン タイムのコンパイル中に、実行時にその後、アンマネージ コードの許可対象とします。       この属性は PInvoke メソッド (または PInvoke メソッドを含むクラス) に適用するときにのみ、または相互運用呼び出しに使用するインターフェイスの定義。 これは、他のすべてのコンテキストでは無視されます。       この属性は、アンマネージ コードを通じてシステム リソースへのアクセスを提供するクラスを実装するために役立ちます。 アンマネージ コードへのアクセス許可を持たないコードは、アンマネージ コードにアクセスするには、この属性を持つクラスを呼び出すことができます。 これは、場合、この属性を持つクラスのライターのプログラムは、クラスをセキュリティで保護された使用セーフであるだけです。 存在しない場合、この属性は、危険が不正に使用するコードを許可することができます。       これは、宣言セキュリティ属性は標準属性なく (から派生して<xref:System.Attribute>ではなく、 <xref:System.Security.Permissions.SecurityAttribute>).</xref:System.Security.Permissions.SecurityAttribute> </xref:System.Attribute>"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  id: '#ctor'
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.SuppressUnmanagedCodeSecurityAttribute&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、任意のフィールドを既定値を初期化します。"
  syntax:
    content: public SuppressUnmanagedCodeSecurityAttribute ();
    parameters: []
  overload: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute
