### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MaskedTextProvider
  id: MaskedTextProvider
  children:
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char)
  - System.ComponentModel.MaskedTextProvider.Add(System.String)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  - System.ComponentModel.MaskedTextProvider.AsciiOnly
  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  - System.ComponentModel.MaskedTextProvider.Clear
  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Clone
  - System.ComponentModel.MaskedTextProvider.Culture
  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  - System.ComponentModel.MaskedTextProvider.EditPositionCount
  - System.ComponentModel.MaskedTextProvider.EditPositions
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  - System.ComponentModel.MaskedTextProvider.IncludeLiterals
  - System.ComponentModel.MaskedTextProvider.IncludePrompt
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InvalidIndex
  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsPassword
  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  - System.ComponentModel.MaskedTextProvider.Length
  - System.ComponentModel.MaskedTextProvider.Mask
  - System.ComponentModel.MaskedTextProvider.MaskCompleted
  - System.ComponentModel.MaskedTextProvider.MaskFull
  - System.ComponentModel.MaskedTextProvider.PasswordChar
  - System.ComponentModel.MaskedTextProvider.PromptChar
  - System.ComponentModel.MaskedTextProvider.Remove
  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  - System.ComponentModel.MaskedTextProvider.ResetOnSpace
  - System.ComponentModel.MaskedTextProvider.Set(System.String)
  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.SkipLiterals
  - System.ComponentModel.MaskedTextProvider.ToDisplayString
  - System.ComponentModel.MaskedTextProvider.ToString
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  langs:
  - csharp
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider
  fullName: System.ComponentModel.MaskedTextProvider
  type: Class
  summary: "マスクなどをサポートするコントロールの任意の数で使用できるマスク解析のサービスを表す、 <xref href=&quot;System.Windows.Forms.MaskedTextBox&quot;> </xref>コントロール。"
  remarks: "<xref:System.Windows.Forms.MaskedTextBox>コントロールには、マスク、リテラル文字で構成およびすべてのユーザーの入力をテストする要素の書式設定が含まれています</xref:System.Windows.Forms.MaskedTextBox>。 完全に特定のマスク解析エンジンとの関連付けではなく<xref:System.Windows.Forms.MaskedTextBox>、Windows フォームは、ドキュメントの説明、マスク言語の構文を定義する MaskedTextProvider クラスによって表される、個別のサービスとして提供、<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>プロパティ</xref:System.Windows.Forms.MaskedTextBox.Mask%2A></xref:System.Windows.Forms.MaskedTextBox>。       メンバーの多くは、<xref:System.Windows.Forms.MaskedTextBox>クラスは、その実装が、関連付けられている MaskedTextProvider の似た名前のメンバーを参照してください</xref:System.Windows.Forms.MaskedTextBox>。 たとえば、<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName><xref:System.Windows.Forms.MaskedTextBox>クラス参照<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>MaskedTextProvider クラスの</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>すべてのアクセス</xref:System.Windows.Forms.MaskedTextBox>のプロパティ</xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>       MaskedTextProvider によって使用されているマスク解析エンジンは、マスク エディット コントロールは、Microsoft Visual Basic バージョン 6 に含めた後にモデル化されます。 ドキュメントは、マスク言語の説明、<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。       MaskedTextProvider クラスには、次の&3; つの異なる文字列が含まれています。      |文字列名 |説明 |  |-----------------|-----------------|  |入力文字または文字列 |に対してマスクを適用する入力として使用される文字を表します。 実際には、入力文字列で構成できるなど、複数の入力操作の<xref:System.ComponentModel.MaskedTextProvider.Add%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>、 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A></xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> 。 したがって、入力文字列に直接アクセスすることはできません。 ただし、入力文字列の処理の機能がただしで使用できる、<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>と<xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>、 <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>、および<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>プロパティです |。  |マスク |入力、入力文字列を書式設定された文字列に変換するために使用するマスクを書式設定を表します</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A></xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A></xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A></xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>。 この文字列設定されて、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>ただし、主にアクセスし、<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.Mask%2A></xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>。 マスクの特性は、使用、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>など、他のメンバー、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>と<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>プロパティです |。  |文字列の形式が |フル マスクは、入力文字列に適用される場合の結果の文字列を表します</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A></xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A></xref:System.ComponentModel.MaskedTextProvider.Length%2A>。 書式指定文字列は、クラスの多くのメンバーでクエリを実行できるなど<xref:System.ComponentModel.MaskedTextProvider.Item%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>、 <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>、 <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>、 <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>、<xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>のようにします</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A></xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A></xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A></xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A></xref:System.ComponentModel.MaskedTextProvider.Length%2A></xref:System.ComponentModel.MaskedTextProvider.Item%2A>。 書式指定文字列の完全な値は、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>と<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドです |。     > [!NOTE] >、入力文字列の大文字と小文字のように、ユーザーが直接入力を表すことがあります、 <xref:System.Windows.Forms.MaskedTextBox>、または直接関連付けられていないユーザー入力/出力操作で他のプロセスによって生成される可能性があります</xref:System.Windows.Forms.MaskedTextBox></xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>。"
  syntax:
    content: 'public class MaskedTextProvider : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスクを使用します。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスクと ASCII 制限値を使用します。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`"
  syntax:
    content: public MaskedTextProvider (string mask, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASCII と互換性のある文字は; への入力を制限するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Unicode セット全体を許可します。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  id: '#ctor(System.String,System.Globalization.CultureInfo)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスクとカルチャを使用します。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>地域依存型区切り文字の設定に使用される</xref:System.Globalization.CultureInfo>。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスク、パスワードの文字、およびプロンプトの使用法の値を使用します。"
  remarks: "このコンス トラクターの使用は、次の呼び出しに完全に同等の<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>コンス トラクター: `MaskedTextProvider(mask , null, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: passwordChar
      type: System.Char
      description: "A<xref:System.Char>パスワード文字列に入力された文字のことが表示されます</xref:System.Char>。"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力を受け付けるとしてプロンプト文字を許可するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスク、カルチャ、および ASCII の制限値を使用します。"
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>地域依存型区切り文字の設定に使用される</xref:System.Globalization.CultureInfo>。"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASCII と互換性のある文字は; への入力を制限するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Unicode セット全体を許可します。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラスの指定したマスク、カルチャ、パスワードの文字、およびプロンプトの使用法の値を使用します。"
  remarks: "このコンス トラクターの使用は、次の呼び出しに完全に同等の<xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>コンス トラクター: `MaskedTextProvider(mask , culture, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>地域依存型区切り文字の設定に使用される</xref:System.Globalization.CultureInfo>。"
    - id: passwordChar
      type: System.Char
      description: "A<xref:System.Char>パスワード文字列に入力された文字のことが表示されます</xref:System.Char>。"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力を受け付けるとしてプロンプト文字を許可するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>クラス マスクを指定、カルチャ、プロンプトの使用法の値、プロンプト文字、パスワードの文字と ASCII 制限値を使用します。"
  remarks: "このコンス トラクターでは、最も一般的なオーバー ロードされた形式を表します。 `mask`パラメーターは<xref:System.ComponentModel.MaskedTextProvider><xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>、<xref:System.Windows.Forms.MaskedTextBox>クラス</xref:System.Windows.Forms.MaskedTextBox>のプロパティ</xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>の詳細については、クラス</xref:System.ComponentModel.MaskedTextProvider>で定義されるマスク言語に従う必要があります       カルチャ固有の情報のニュートラル カルチャをクエリできないため、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>コンス トラクターを使用して、<xref:System.Globalization.CultureInfo.GetCultures%2A>を使用して適切な区切り文字を決定する最初のニュートラル以外のカルチャを検索する方法</xref:System.Globalization.CultureInfo.GetCultures%2A></xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>。"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "A<xref:System.String>入力マスクを表す</xref:System.String>。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>地域依存型区切り文字の設定に使用される</xref:System.Globalization.CultureInfo>。"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "A<xref:System.Boolean>プロンプト文字が有効な入力文字として許可するかどうかを指定する値</xref:System.Boolean>。"
    - id: promptChar
      type: System.Char
      description: "A<xref:System.Char>をユーザー入力のプレース ホルダーとして表示されます</xref:System.Char>。"
    - id: passwordChar
      type: System.Char
      description: "A<xref:System.Char>パスワード文字列に入力された文字のことが表示されます</xref:System.Char>。"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASCII と互換性のある文字は; への入力を制限するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Unicode セット全体を許可します。"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "マスク パラメーター <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または<xref:System.String.Empty>.</xref:System.String.Empty>       - または - マスクには、1 つまたは複数の印刷不可能な文字が含まれています。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  id: Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の末尾に指定した入力文字を追加します。"
  remarks: "Add メソッドを追加、`input`位置の後に、最後に割り当てられた、によって表される文字の値を書式設定された文字列で使用可能な最初の位置、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>。 このメソッドは、次の理由のいずれかのエラー:-入力値、`input`が印刷可能なまたはマスクの対応する要素と一致しません。      -がゼロ使用できる編集文字列内の位置、書式設定された、または割り当てられた、最後の位置より後、使用可能な編集の位置がありません。"
  syntax:
    content: public bool Add (char input);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>書式指定文字列に追加する値</xref:System.Char>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力文字が正常に追加された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  id: Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の末尾に、指定した入力文字列内の文字を追加します。"
  remarks: "Add メソッドは追加の文字から成る、 `input` <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>後に利用可能な最初の位置から始まる、書式設定された文字列への文字列 このメソッドは、次の理由のいずれかのエラー:-入力の値の文字のいずれかの`input`は、印刷できませんまたは入力値がマスクの対応する要素と一致しません。      -いない書式指定文字列では、十分な使用可能な編集位置後にある割り当てられた、最後の位置。       このメソッドが失敗した場合は、追加は行われません、メソッドを返します`false`です。"
  syntax:
    content: public bool Add (string input);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>書式指定文字列に追加する文字の値を含むします</xref:System.String>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力文字列からのすべての文字が正常に追加された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>追加された文字がないことを示すためにします。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の末尾に指定した入力文字を追加し、位置とわかりやすい情報を出力します。"
  remarks: "Add メソッドが、追加しようとしています、`input`位置の後に、最後に割り当てられた、によって表される文字の値を書式設定された文字列で使用可能な最初の位置、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>プロパティ。</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> 。 このメソッドは、すべての利用可能な位置は最後に割り当てられた位置の前に、する場合に失敗します。 このメソッドは、次の理由のいずれかのエラー:-入力値、`input`が印刷可能なまたはマスクの対応する要素と一致しません。      -がゼロ使用できる編集文字列内の位置、書式設定された、または割り当てられた、最後の位置より後、使用可能な編集の位置がありません。       このメソッドは、1 つの実行オーバーライドのバージョンと同様に機能<xref:System.Char>パラメーター、<xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>追加情報を出力する点を除いて、</xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> </xref:System.Char> 。"
  syntax:
    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "A<xref:System.Char>書式指定文字列に追加する値</xref:System.Char>。"
    - id: testPosition
      type: System.Int32
      description: "ここで、しようとしました文字を追加する、書式指定文字列での&0; から始まる位置。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力文字が正常に追加された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の末尾に、指定した入力文字列内の文字を追加、位置とわかりやすい情報を出力します。"
  remarks: "Add メソッドは追加の文字から成る、 `input` <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>後に利用可能な最初の位置から始まる、書式設定された文字列への文字列 このメソッドは、次の理由のいずれかのエラー:-入力の値の文字のいずれかの`input`は、印刷できませんまたは入力値がマスクの対応する要素と一致しません。      -いない書式指定文字列では、十分な使用可能な編集位置後にある割り当てられた、最後の位置。       このメソッドが失敗した場合は、追加は行われません、メソッドを返します`false`です。       このメソッドは、1 つの実行オーバーライドのバージョンと同様に機能<xref:System.String>パラメーター、<xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>追加情報を出力する点を除いて、</xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> </xref:System.String> 。"
  syntax:
    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "A<xref:System.String>書式指定文字列に追加する文字の値を含むします</xref:System.String>。"
    - id: testPosition
      type: System.Int32
      description: "ここで、しようとしました文字を追加する、書式指定文字列での&0; から始まる位置。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力文字列からのすべての文字が正常に追加された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>追加された文字がないことを示すためにします。"
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  id: AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "かどう、プロンプト文字を有効な入力文字として扱う必要があるかどうかを示す値を取得します。"
  remarks: "AllowPromptAsInput プロパティの値を設定、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>コンス トラクター</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。       AllowPromptAsInput がも`true`、プロンプト文字は受け入れられるためにマスク内の現在の場所に対して有効である必要があります。"
  syntax:
    content: public bool AllowPromptAsInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが入力できる場合<xref:System.ComponentModel.MaskedTextProvider.PromptChar*>; コントロールにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ComponentModel.MaskedTextProvider.PromptChar*> 。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  id: AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "マスクが、ASCII 文字セット以外の文字を受け入れるかどうかを示す値を取得します。"
  remarks: "AsciiOnly プロパティの値を設定、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>コンス トラクター</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。       場合`true`AsciiOnly が ASCII 文字セットにユーザー入力を制限します。"
  syntax:
    content: public bool AsciiOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASCII が受け入れられるだけの場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>任意の任意の Unicode 文字を受け入れることができます。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  id: AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "既に正常に割り当てられて、入力値を編集可能な文字位置の数を取得します。"
  remarks: "によって表される、編集可能な文字の位置の合計数、 <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>、AssignedEditPositionCount の合計と同じプロパティ、および<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A></xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>。"
  syntax:
    content: public int AssignedEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>書式指定文字列の文字の値が既に割り当てられている入力マスク内の位置を編集可能な文字数を格納します</xref:System.Int32>。"
  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  id: AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "入力値がまだ割り当てられていない入力マスクの編集可能な文字の位置の数を取得します。"
  remarks: "によって表される、編集可能な文字の位置の合計数、<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>の合計と同じプロパティ、<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>と AvailableEditPositionCount プロパティ</xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A></xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>。"
  syntax:
    content: public int AvailableEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>を編集可能な文字数を含んでいる配置文字値が割り当てられていない</xref:System.Int32>。"
  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear
  id: Clear
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロンプト文字と置き換えて、書式設定された文字列から編集可能なすべての入力文字をクリアします。"
  remarks: "Clear メソッドは、すべての編集可能な位置にプロンプト文字を挿入する、書式設定された文字列を再初期化します。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  id: Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロンプト文字と置き換えて、書式設定された文字列から編集可能なすべての入力文字をクリアして、わかりやすい情報を出力します。"
  remarks: "Clear メソッドは、すべての編集可能な位置にプロンプト文字を挿入する、書式設定された文字列を再初期化します。 パラメーターを受け取らずオーバーライドのバージョンを同等に機能<xref:System.ComponentModel.MaskedTextProvider.Clear>を除き、追加情報を出力します</xref:System.ComponentModel.MaskedTextProvider.Clear>。"
  syntax:
    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clone
  id: Clone
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "現在のコピーを作成<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;></xref>です。"
  remarks: "Clone メソッドが現在<xref:System.ComponentModel.MaskedTextProvider>。</xref:System.ComponentModel.MaskedTextProvider>の新しいコピーを返します"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>このメソッドを作成するオブジェクトをオブジェクトとしてキャストします。"
  overload: System.ComponentModel.MaskedTextProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Culture
  id: Culture
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "ローカライズ可能な区切り記号と、入力マスクのプレース ホルダーの値を決定するカルチャを取得します。"
  remarks: "カルチャ プロパティ、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>コンス トラクター</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>定型入力に関連付けられているカルチャ情報を格納します</xref:System.Globalization.CultureInfo>。"
  overload: System.ComponentModel.MaskedTextProvider.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  id: DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "既定のパスワードに使用する文字あいまいなユーザー入力を取得します。"
  remarks: "DefaultPasswordChar プロパティが定義されている、<xref:System.ComponentModel.MaskedTextProvider>クラスを文字のアスタリスク (*) を使用します</xref:System.ComponentModel.MaskedTextProvider>。"
  syntax:
    content: public static char DefaultPasswordChar { get; }
    return:
      type: System.Char
      description: "A<xref:System.Char>既定のパスワードの文字を表す</xref:System.Char>。"
  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  id: EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の編集可能な位置の数を取得します。"
  remarks: "編集可能な文字の位置、EditPositionCount プロパティで表されるの合計数の合計に等しくなければなりません、<xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>と<xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A></xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>。 この値には、必須および省略可能な編集可能な文字が含まれています。"
  syntax:
    content: public int EditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>書式指定文字列の編集可能な位置の番号を含むします</xref:System.Int32>。"
  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  id: EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の編集可能な位置の新しく作成された列挙子を取得します。"
  remarks: "EditPositions プロパティへのアクセスはすべて、編集可能な位置の一時的なコレクションが作成されますが、取得した<xref:System.Collections.IEnumerator>で動作します</xref:System.Collections.IEnumerator>。       このコレクションは、読み取り専用です。"
  syntax:
    content: public System.Collections.IEnumerator EditPositions { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>書式指定文字列の編集可能な位置に列挙をサポートする</xref:System.Collections.IEnumerator>。"
  overload: System.ComponentModel.MaskedTextProvider.EditPositions*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の後に編集可能な位置を割り当てられた最初の位置を返します。"
  remarks: "書式設定された文字列が編集可能な文字で構成されからコピーされたリテラル マスク。 編集可能な文字の位置はいずれかで使用されているプロンプト文字入力が割り当てられている場合に、割り当てられていない場合は、マスクからまたは有効な入力文字をコピーします。       FindAssignedEditPositionFrom メソッドは、指定された位置と検索の方向の後に割り当てられた最初の文字を検索するために使用します。 結果をへのパラメーターとして渡すことが、後で、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>この位置にある割り当てられた値を取得するためのインデクサー</xref:System.ComponentModel.MaskedTextProvider.Item%2A> 。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>と<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>メソッドは、このメソッドの補完</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A></xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>。"
  syntax:
    content: public int FindAssignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "検索を開始する書式設定された文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました編集可能な位置が割り当てられている最初の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の間の編集可能な位置を割り当てられた最初の位置を返します。"
  remarks: "書式設定された文字列が編集可能な文字で構成されからコピーされたリテラル マスク。 編集可能な文字の位置はいずれかで使用されているプロンプト文字入力が割り当てられている場合に、割り当てられていない場合は、マスクからまたは有効な入力文字をコピーします。       FindAssignedEditPositionInRange メソッドは包括的な指定した検索の方向を使用して、2 つの指定した位置の間で割り当てられた最初の文字を検索するために使用します。 結果をへのパラメーターとして渡すことが、後で、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>この位置にある割り当てられた値を取得するためのインデクサー</xref:System.ComponentModel.MaskedTextProvider.Item%2A> 。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>と<xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>メソッドは、このメソッドの補完</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A></xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>。"
  syntax:
    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "検索を開始する、書式設定された文字列での&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "検索を終了する、書式指定文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました編集可能な位置が割り当てられている最初の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  id: FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の後にある最初の編集可能な位置を返します。"
  remarks: "FindEditPositionFrom メソッドが指定した位置の後に、[次へ] 割り当てまたは割り当てられていない編集可能な位置の書式設定された文字列で検索するために使用します。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>メソッドは、このメソッドの補数です</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>。"
  syntax:
    content: public int FindEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "検索を開始する書式設定された文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が見つかりました最初の編集可能な位置の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の間には、最初の編集可能な位置の位置を返します。"
  remarks: "FindEditPositionInRange メソッドは包括的な指定した検索の方向を使用して、2 つの指定した位置の間での最初の編集可能な文字を検索するために使用します。 結果をへのパラメーターとして渡すことが、後で、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>この位置にある割り当てられた値を取得するためのインデクサー</xref:System.ComponentModel.MaskedTextProvider.Item%2A> 。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>メソッドは、このメソッドの補数です</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>。"
  syntax:
    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "検索を開始する、書式設定された文字列での&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "検索を終了する、書式指定文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が見つかりました最初の編集可能な位置の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  id: FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の後にある最初の編集不可能な位置を返します。"
  remarks: "FindNonEditPositionFrom メソッドは指定した位置の後に書式設定された文字列の次のリテラル文字を検索するために使用します。 結果をへのパラメーターとして渡すことが、後で、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>この位置でリテラル値を取得するためのインデクサー</xref:System.ComponentModel.MaskedTextProvider.Item%2A> 。       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>メソッドは、このメソッドの補数です</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>。"
  syntax:
    content: public int FindNonEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "検索を開始する書式設定された文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました; リテラルの先頭の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の間には、最初の編集不可能な位置の位置を返します。"
  remarks: "FindNonEditPositionInRange メソッドは包括的な指定した検索の方向を使用して、2 つの指定した位置の間での最初のリテラル文字を検索するために使用します。 結果をへのパラメーターとして渡すことが、後で、<xref:System.ComponentModel.MaskedTextProvider.Item%2A>この位置でリテラル値を取得するためのインデクサー</xref:System.ComponentModel.MaskedTextProvider.Item%2A> 。       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>メソッドは、このメソッドの補数です</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>。"
  syntax:
    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "検索を開始する、書式設定された文字列での&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "検索を終了する、書式指定文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました; リテラルの先頭の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の後に割り当てられていない最初の編集可能な位置の位置を返します。"
  remarks: "書式設定された文字列が編集可能な文字で構成されからコピーされたリテラル マスク。 編集可能な文字の位置はいずれかで使用されているプロンプト文字入力が割り当てられている場合に、割り当てられていない場合は、マスクからまたは有効な入力文字をコピーします。       FindUnassignedEditPositionFrom メソッドは後、指定された位置と検索の方向に割り当てられていない最初の文字を検索するために使用します。 プロンプト文字は、この位置を占有する必要があります。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>と<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>メソッドは、このメソッドの補完</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A></xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>。"
  syntax:
    content: public int FindUnassignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "検索を開始する書式設定された文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました最初に割り当てられていない編集可能な位置の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した検索の方向を使用して指定した位置の間には、割り当てられていない最初の編集可能な位置の位置を返します。"
  remarks: "書式設定された文字列が編集可能な文字で構成されからコピーされたリテラル マスク。 編集可能な文字の位置はいずれかで使用されているプロンプト文字入力が割り当てられている場合に、割り当てられていない場合は、マスクからまたは有効な入力文字をコピーします。       FindUnassignedEditPositionInRange メソッドは包括的な指定した検索の方向を使用して、2 つの指定した位置の間で割り当てられていない最初の文字を検索するために使用します。 プロンプト文字は、この位置を占有する必要があります。       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>と<xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>メソッドは、このメソッドの補完</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A></xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>。"
  syntax:
    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "検索を開始する、書式設定された文字列での&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "検索を終了する、書式指定文字列内の&0; から始まる位置。"
    - id: direction
      type: System.Boolean
      description: "A<xref:System.Boolean>検索を示す方向以外のいずれかの<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>前方に検索するか、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>後方に検索する</xref:System.Boolean>。"
    return:
      type: System.Int32
      description: "成功した場合、<xref:System.Int32>が発生しました最初に割り当てられていない編集可能な位置の&0; から始まる位置を表すそれ<xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32> 。"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "決定するかどうか、指定した<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>成功または失敗を表します。"
  remarks: '次のメソッド、<xref:System.ComponentModel.MaskedTextProvider>クラス型のパラメーターに含める<xref:System.ComponentModel.MaskedTextResultHint>メソッドの操作に関する情報を出力に使用される: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>、 <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>、 <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>、 <xref:System.ComponentModel.MaskedTextProvider.Set%2A>、 <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>、 <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A></xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Clear%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> </xref:System.ComponentModel.MaskedTextResultHint> </xref:System.ComponentModel.MaskedTextProvider> 。 GetOperationResultFromHint メソッドは、この値を解釈しを示すブール値を返すかどうか、<xref:System.ComponentModel.MaskedTextResultHint>から、操作が成功または失敗したことを通知します</xref:System.ComponentModel.MaskedTextResultHint>。'
  syntax:
    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>値は通常、前の操作からの出力パラメーターとして取得します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;></xref>値が、成功を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>を表している場合の障害。"
  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  id: IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または書式設定された文字列に定型入力のリテラル文字を含める必要があるかどうかを示す値を設定します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>IncludeLiterals プロパティの文字列には、呼び出し時に表示されるかどうかが決定し、<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッド</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>。 これらのプロパティを設定して`false`、解析された文字列は、ユーザーが入力した文字のみを表します。"
  syntax:
    content: public bool IncludeLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リテラルが含まれます。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  id: IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または設定を示す値かどうか<xref:System.Windows.Forms.MaskedTextBox.PromptChar*>書式指定文字列を表示する時のユーザー入力の休暇を表すために使用します</xref:System.Windows.Forms.MaskedTextBox.PromptChar*>。"
  remarks: "IncludePrompt と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティの文字列には、呼び出し時に表示されるかどうかが決定、<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッド</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>。 これらのプロパティを設定して`false`、解析された文字列は、ユーザーが入力した文字のみを表します。"
  syntax:
    content: public bool IncludePrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ここでユーザー入力が指定されませんでした。 位置を表すプロンプト文字が使用されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  id: InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列内で指定した位置にある指定した文字を挿入します。"
  remarks: "InsertAt メソッドは、最初の編集位置によって指定される範囲を超えているかに文字を挿入、`pos`パラメーター。 挿入ポイントを確保するために、挿入された位置を&1; つを使って後に、このメソッドは既存のすべての文字をシフトは`input`文字です。 次のエラーのいずれかのかどうか、挿入は実行されず、およびメソッドを返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      指定した位置以降には、書式設定された文字列に-編集可能な文字が見つからなかった`pos`です。      -カーソル文字`input`、印刷可能でないか、マスクの対応する要素と一致していないために、有効な入力文字ではありません。      -はありません、カーソルの右側に位置を使用できるように、既存の文字をシフトすることはできません。      既存の文字をシフトすると、マスクの違反が発生します。       空`input`文字列を変更なしで書式設定され、文字列しますが、戻ります`true`です。"
  syntax:
    content: public bool InsertAt (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>挿入する</xref:System.Char>。"
    - id: position
      type: System.Int32
      description: "文字を挿入する書式設定された文字列内の&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  id: InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列内で指定した位置にある、指定した文字列を挿入します。"
  remarks: "InsertAt メソッド内からの各文字の挿入、`input`編集位置に文字列が位置にある`pos`以降。 ごとに&1; つの位置を使って挿入ポイントに文字が挿入された後に、このメソッドは既存のすべての文字をシフトします。 次のエラーのいずれかと、挿入は実行されず、およびメソッドを返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -不足編集可能な文字が書式設定された文字列で指定した位置以降に存在`pos`すべてからの文字を挿入する、`input`文字列。      -1 つ以上のカーソルの文字はいない有効な入力文字できないか、マスクの対応する要素と一致しないためです。      -をいない、カーソルの右側に十分な位置を既存の文字をシフトすることはできません。      既存の文字をシフトすると、マスクの違反が発生します。 この移行は、個々 の各文字の挿入中に発生することに注意してください。       空`input`文字列を変更なしで書式設定され、文字列しますが、戻ります`true`です。"
  syntax:
    content: public bool InsertAt (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>挿入する</xref:System.String>。"
    - id: position
      type: System.Int32
      description: "入力文字列を挿入する書式設定された文字列内の&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "最後の挿入位置と操作の状態を返す、書式設定された文字列内で指定した位置にある指定した文字を挿入します。"
  remarks: "InsertAt メソッドは、最初の編集位置によって指定される範囲を超えているかに文字を挿入、`pos`パラメーター。 挿入ポイントを確保するために、挿入された位置を&1; つを使って後に、このメソッドは既存のすべての文字をシフトは`input`文字です。 次のエラーのいずれかのかどうか、挿入は実行されず、およびメソッドを返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      指定した位置以降には、書式設定された文字列に-編集可能な文字が見つからなかった`pos`です。      -カーソル文字`input`、印刷可能でないか、マスクの対応する要素と一致していないために、有効な入力文字ではありません。      -はありません、カーソルの右側に位置を使用できるように、既存の文字をシフトすることはできません。      既存の文字をシフトすると、マスクの違反が発生します。       空`input`文字列を変更なしで書式設定され、文字列しますが、戻ります`true`です。"
  syntax:
    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>挿入する</xref:System.Char>。"
    - id: position
      type: System.Int32
      description: "文字を挿入する書式設定された文字列内の&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "ここで、文字が挿入されたメソッドが成功した場合は、最後の位置します。それ以外の場合、最初の位置を挿入が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>挿入操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "最後の挿入位置と操作の状態を返す、書式設定された文字列内で指定した位置にある、指定した文字列を挿入します。"
  remarks: "InsertAt メソッド内からの各文字の挿入、`input`編集位置に文字列が位置にある`pos`以降。 ごとに&1; つの位置を使って挿入ポイントに文字が挿入された後に、このメソッドは既存のすべての文字をシフトします。 次のエラーのいずれかと、挿入は実行されず、およびメソッドを返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -不足編集可能な文字が書式設定された文字列で指定した位置以降に存在`pos`すべてからの文字を挿入する、`input`文字列。      -1 つ以上のカーソルの文字はいない有効な入力文字できないか、マスクの対応する要素と一致しないためです。      -をいない、カーソルの右側に十分な位置を既存の文字をシフトすることはできません。      既存の文字をシフトすると、マスクの違反が発生します。 この移行は、個々 の各文字の挿入中に発生することに注意してください。       空`input`文字列を変更なしで書式設定され、文字列しますが、戻ります`true`です。"
  syntax:
    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>挿入する</xref:System.String>。"
    - id: position
      type: System.Int32
      description: "入力文字列を挿入する書式設定された文字列内の&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "ここで、文字が挿入されたメソッドが成功した場合は、最後の位置します。それ以外の場合、最初の位置を挿入が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>挿入操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  id: InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "無効なインデックスの範囲の上限値を取得します。"
  remarks: "などのインデックス作成操作は、無効な結果を表す InvalidIndex プロパティが使用される、<xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>メソッド</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>。       プロバイダーを使用したり、独自に実装したりするときにこのプロパティを使用して、インデックスのかどうかは、無効な値が無効ですではなく、ハードコーディングのナレッジを決定する必要があります。"
  syntax:
    content: public static int InvalidIndex { get; }
    return:
      type: System.Int32
      description: "プロバイダーの実装によって決定される無効な最大のインデックスを表す値。 たとえば、有効な最小のインデックスが 0 の場合、このプロパティは-1 を返します。"
  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  id: IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した位置が割り当て可能かどうかを判断します。"
  remarks: "IsAvailablePosition メソッドを返します`true`、以下の条件がすべて当てはまる場合にのみ: -`pos`パラメーターは書式指定文字列の境界内ではつまり、その値より大きいまたは&0; に等しいと小さいよりも、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -指定された位置は、編集可能な文字です。      は、文字が割り当てられていないこの位置にします。"
  syntax:
    content: public bool IsAvailablePosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "テストするマスク内の&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>書式指定文字列の指定位置が編集可能でありが、まだ割り当てられていない場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  id: IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した位置が編集可能かどうかを判断します。"
  remarks: "IsEditPosition メソッドを返します`true`の両方の次の条件に当てはまる場合にのみ: -`pos`パラメーターは書式指定文字列の境界内ではつまり、その値より大きいまたは&0; に等しいと小さいよりも、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -指定された位置は、編集可能な文字です。"
  syntax:
    content: public bool IsEditPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "テストするマスク内の&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>書式指定文字列の指定位置が編集できる場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  id: IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または書式設定された文字列にパスワード保護を適用するかどうかを決定する値を設定します。"
  remarks: "2 つの方法を使用して、次のいずれかのパスワード保護を開始することができます: - 設定、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ以外に`null`値</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      プロパティを設定、IsPassword `true`. も設定する、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティを<xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>値</xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A></xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。       IsPassword で使用、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>および<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>実際の入力文字を表示または<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>でそれらが見えにくくかどうかを確認する方法</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: public bool IsPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力文字列は、パスワードの文字列として扱われます場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  id: IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字が有効な入力文字かどうかを判断します。"
  remarks: "有効な入力文字には、文字、数字、句読点、記号、および、空白文字を含む、すべての印刷可能な文字が含まれます。"
  syntax:
    content: public static bool IsValidInputChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>値</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字には、有効な入力値が含まれている場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  id: IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字が有効なマスク文字であるかどうかを判断します。"
  remarks: "有効なマスク文字には、文字、数字、句読点、記号、および、空白文字を含む、すべての印刷可能な文字が含まれます。"
  syntax:
    content: public static bool IsValidMaskChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>値</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字には、マスクの有効な値が含まれている場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  id: IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字が有効なパスワードの文字であるかどうかを判断します。"
  remarks: "有効なパスワードの文字には、すべての印刷可能な文字とパスワードの機能を無効にするための null 文字が含まれます。 印刷可能な文字には、文字、数字、句読点、記号、および、空白文字が含まれます。"
  syntax:
    content: public static bool IsValidPasswordChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>値</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字には、パスワードの有効な値が含まれている場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の指定した位置にある要素を取得します。"
  remarks: "Item プロパティは、標準的な<xref:System.ComponentModel.MaskedTextProvider>クラス</xref:System.ComponentModel.MaskedTextProvider>のインデクサー"
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "取得する要素の&0; から始まるインデックス。"
    return:
      type: System.Char
      description: "<xref:System.Char>書式指定文字列の指定した位置にある</xref:System.Char>。"
  overload: System.ComponentModel.MaskedTextProvider.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>0 未満またはより大きいか等しい、<xref:System.ComponentModel.MaskedTextProvider.Length*>のマスク。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  id: LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "マスクに割り当てられている右端の入力文字のマスクにインデックスを取得します。"
  remarks: "LastAssignedPosition プロパティは、入力文字が割り当てられていると、原点に対する、マスクで最も遠い編集位置を表します。 英語など、左から右 (LTR) を読む言語の場合これは、右端にある割り当てられた位置です。右から左 (RTL) を読み取る言語では、左端の位置になります。"
  syntax:
    content: public int LastAssignedPosition { get; }
    return:
      type: System.Int32
      description: "の<xref:System.Int32>右端にある割り当てられた位置のインデックスを含むそれ以外の場合、位置が割り当てられて、 <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>。</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*></xref:System.Int32>マスクに割り当てられた場合は、少なくとも&1; つの入力文字"
  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Length
  id: Length
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "任意のマスク不在であれば、マスクの長さの修飾子文字を取得します。"
  remarks: "Length プロパティは、リテラルであり、編集可能な文字の両方を含む、マスク内の文字の合計数を表します。 値を減算して、リテラル文字の数を決定できます、<xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>長</xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>。       長さには、入力文字、リテラル、およびプロンプト文字を含む、書式設定された文字列の長さも説明します。"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>マスクの入力を変更する文字を除く、マスク内の位置の番号を含むします</xref:System.Int32>。"
  overload: System.ComponentModel.MaskedTextProvider.Length*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Mask
  id: Mask
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "入力マスクを取得します。"
  remarks: "マスクのプロパティを設定、<xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>コンス トラクター</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> 。 このマスクは、マスク言語で定義されている有効な文字だけを含める必要があります。"
  syntax:
    content: public string Mask { get; }
    return:
      type: System.String
      description: "A<xref:System.String>を含むフル マスク</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.Mask*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  id: MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "すべての必須入力、書式設定された文字列に入力されたかどうかを示す値を取得します。"
  remarks: "MaskCompleted プロパティでは、必要な入力要素のみを確認します。 すべての必須およびオプションの入力要素が入力されているかどうかを判断するのには、使用、<xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>のプロパティ、<xref:System.Windows.Forms.MaskedTextBox>クラスの代わりにします</xref:System.Windows.Forms.MaskedTextBox></xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>。       現在の値、<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>プロパティを判断する書式要素が必要か、省略可能</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。"
  syntax:
    content: public bool MaskCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての必要な入力がマスクに入力されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  id: MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "すべての必須および省略可能な入力が書式設定された文字列に入力されたかどうかを示す値を取得します。"
  remarks: "入力要素が入力されているために必要な場合のみを確認するため、<xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>プロパティ代わりにします</xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>。 現在の値、<xref:System.ComponentModel.MaskedTextProvider.Mask%2A>プロパティを判断する書式要素が必要か、省略可能</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>。"
  syntax:
    content: public bool MaskFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての必須および省略可能な入力を入力されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.MaskFull*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  id: PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または実際の入力文字の代わりに使用する文字を設定します。"
  remarks: "機密性の高いユーザー入力には、実際の出力操作中に、ユーザーが入力した情報を隠すによくあることを勧めします。 PasswordChar プロパティが 以外に設定されているかどうかは`null`文字などのメソッドを出力<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>と<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>は、入力文字列に指定されたパスワードの文字がわかりにくくなる</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>。 このプロパティを設定`null`パスワード保護機能を無効になります。"
  syntax:
    content: public char PasswordChar { get; set; }
    return:
      type: System.Char
      description: "<xref:System.Char>パスワード文字として使用される値</xref:System.Char>。"
  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このプロパティを設定するときに指定されたパスワードの文字は、現在のプロンプト文字<xref:System.ComponentModel.MaskedTextProvider.PromptChar*>。</xref:System.ComponentModel.MaskedTextProvider.PromptChar*>と同じ 別にするには、2 つが必要です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された文字のときにこのプロパティの設定が有効なパスワードの文字によって決定される、<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>メソッド</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  id: PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または設定が存在しないすべての利用可能な編集の位置のユーザー入力を表すために使用する文字。"
  remarks: "PromptChar プロパティによって使用されるプロンプト文字を表す、<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>と<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>を書式設定された入力文字列の現在の状態を表すメソッド</xref:System.ComponentModel.MaskedTextProvider.ToString%2A></xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>。 プロンプト文字は、入力値がまだ割り当てられていない編集可能な位置に配置されます。 一部のバージョンの<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドは、の値にも依存する、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A></xref:System.ComponentModel.MaskedTextProvider.ToString%2A>。"
  syntax:
    content: public char PromptChar { get; set; }
    return:
      type: System.Char
      description: "ユーザーに入力を促すために使用する文字。 既定では、アンダー スコア (_) です。"
  overload: System.ComponentModel.MaskedTextProvider.PromptChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このプロパティの設定がの場合、現在のパスワードの文字、 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>。</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>と同じプロンプト文字が指定されました。 別にするには、2 つが必要です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された文字のときにこのプロパティの設定が有効なパスワードの文字によって決定される、<xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>メソッド</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>。"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove
  id: Remove
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式設定された文字列から割り当てられた最後の文字を削除します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>メソッドも何も起こりませんマスクにまだ割り当てられている文字がない場合</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>。       最後に割り当てられた文字が書式設定された文字列から削除されると、以降の入力を許可する、その位置の編集可能なマスク文字はリセットされます。"
  syntax:
    content: public bool Remove ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式設定された文字列から割り当てられた最後の文字を削除し、削除位置とわかりやすい情報を出力します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>メソッドも何も起こりませんマスクにまだ割り当てられている文字がない場合</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>。       最後に割り当てられた文字が書式設定された文字列から削除されると、以降の入力を許可する、その位置の編集可能なマスク文字はリセットされます。"
  syntax:
    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: testPosition
      type: System.Int32
      description: "文字が実際に削除される書式指定文字列内の&0; から始まる位置。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式設定された文字列から指定した位置にある割り当てられた文字を削除します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>メソッドも何も起こりません指定削除位置にある割り当てられた文字がない場合</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。 リテラル文字は、このメソッドの影響を受けません。       文字が削除されたときに、上位の位置の残りの文字、マスクが左にシフトの削除で作成されたギャップを埋めるためにします。 入力用には、空いた位置をリセットします。 場合は、文字の移動は、マスク定義によって妨げられて、削除が行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返します`false`</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。       このメソッドの呼び出しは、オーバー ロードされた次の呼び出しに完全に同等<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>バージョン: `RemoveAt(pos, pos);` </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>"
  syntax:
    content: public bool RemoveAt (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "削除する割り当てられた文字の&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  id: RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式設定された文字列から指定した位置の間の割り当てられた文字を削除します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>メソッドも何も起こりません指定された削除位置にある割り当てられた文字がない場合</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。       文字が削除されたときに、上位の位置の残りの文字、マスクが左にシフトの削除で作成されたギャップを埋めるためにします。 入力用には、空いた位置をリセットします。 場合は、文字の移動は、マスク定義によって妨げられて、削除が行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返します`false`</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "削除する割り当てられた最初の文字の&0; から始まるインデックス。"
    - id: endPosition
      type: System.Int32
      description: "削除する最後の割り当てられた文字の&0; から始まるインデックス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式設定された文字列から指定した位置の間で割り当てられた文字を削除し、削除位置とわかりやすい情報を出力します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>メソッドも何も起こりません指定された削除位置にある割り当てられた文字がない場合</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。       文字が削除されたときに、上位の位置の残りの文字、マスクが左にシフトの削除で作成されたギャップを埋めるためにします。 入力用には、空いた位置をリセットします。 場合は、文字の移動は、マスク定義によって妨げられて、削除が行われず、<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>返します`false`</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。       このバージョンの<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>メソッドの操作に関する詳細を伝えるために&2; つの追加の出力パラメーターを提供します</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>。"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "削除する割り当てられた最初の文字の&0; から始まるインデックス。"
    - id: endPosition
      type: System.Int32
      description: "削除する最後の割り当てられた文字の&0; から始まるインデックス。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、ここで、文字は実際に削除された; の書式設定された文字列内の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字が正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  id: Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した位置の以降の単一の文字を指定した文字値に置き換えます。"
  remarks: "Replace メソッドで指定した位置以降には、書式設定された文字列の編集可能な最初の位置を検索`pos`です。 編集可能な位置の値が指定した文字に変更が&1; つが見つかった場合、`input`です。 次の条件のいずれかの結果、置換は実行するとが、エラーと、値は`false`返される: -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>書式指定文字列の</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      指定した位置以降には、書式設定された文字列に-編集可能な文字が見つからなかった`pos`です。      -置換文字`input`、印刷可能でないか、マスクの対応する要素と一致していないために、有効な入力文字ではありません。"
  syntax:
    content: public bool Replace (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>を既存の値を置き換える値</xref:System.Char>。"
    - id: position
      type: System.Int32
      description: "置換する編集可能な最初の文字を検索する&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、文字が正常に置き換えられました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  id: Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定された文字列で指定した位置以降にある編集可能な文字の範囲を置き換えます。"
  remarks: "Replace メソッドで指定した位置以降には、最初の編集可能な位置を検索`pos`です。 この位置より後に編集可能な位置があることを前提として動作して、既存の文字の値は、置換文字列パラメーターの内容に&1; によって置き換えられた`input`です。       次の条件は、エラーと見なされます。 エラーが発生するときに、置換は行われません、置換を返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -が置換文字列の内容を保持するために書式設定された文字列の編集可能な位置です。      置換文字値のいずれか有効ではない印刷可能でないか、マスクの対応する要素と一致しません。"
  syntax:
    content: public bool Replace (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>既存の編集可能な文字を置き換えるために使用される値</xref:System.String>。"
    - id: position
      type: System.Int32
      description: "置換する編集可能な最初の文字を検索する&0; から始まる位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての文字が正常に置き換えられている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した位置の以降の単一の文字を指定した文字値に置き換え、削除位置とわかりやすい情報を出力します。"
  remarks: "Replace メソッドで指定した位置以降には、書式設定された文字列の編集可能な最初の位置を検索`pos`です。 編集可能な位置の値が指定した文字に変更が&1; つが見つかった場合、`input`です。 次の条件のいずれかの結果、置換は実行するとがエラー状態と値の`false`返される: -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      指定した位置以降には、書式設定された文字列に-編集可能な文字が見つからなかった`pos`です。      -置換文字`input`、印刷可能でないか、マスクの対応する要素と一致していないために、有効な入力文字ではありません。       だけでなく、戻り値は、このメソッドは、置換操作に関する追加情報を指定する&2; つの出力パラメーターがします。"
  syntax:
    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>を既存の値を置き換える値</xref:System.Char>。"
    - id: position
      type: System.Int32
      description: "置換する編集可能な最初の文字を検索する&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、ここで、最後の文字は実際に置き換えられます; 書式指定文字列の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>置換操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、文字が正常に置き換えられました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定された文字列で指定した位置以降にある編集可能な文字の範囲を置き換え、削除位置とわかりやすい情報を出力します。"
  remarks: "Replace メソッドで指定した位置以降には、最初の編集可能な位置を検索`pos`です。 この時点より後に、十分な編集可能な位置があることを前提として動作して、既存の文字の値は、置換文字列パラメーターの内容に&1; によって置き換えられた`input`です。       次の条件は、エラーと見なされます。 エラーが発生するときに、置換は行われません、置換を返します`false`です。      -`pos`パラメーターが&0; より大きいか小さい、<xref:System.ComponentModel.MaskedTextProvider.Length%2A>の書式設定された文字列</xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      -が置換文字列の内容を保持するために書式設定された文字列の編集可能な位置です。      置換文字値のいずれか有効ではない印刷可能でないか、マスクの対応する要素と一致しません。       だけでなく、戻り値は、このメソッドは、置換操作に関する追加情報を指定する&2; つの出力パラメーターがします。"
  syntax:
    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>既存の編集可能な文字を置き換えるために使用される値</xref:System.String>。"
    - id: position
      type: System.Int32
      description: "置換する編集可能な最初の文字を検索する&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、ここで、最後の文字は実際に置き換えられます; 書式指定文字列の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>置換操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての文字が正常に置き換えられている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した開始と終了位置で指定した文字値の間で単一の文字を置換し、削除位置とわかりやすい情報を出力します。"
  remarks: "Replace メソッドは、指定した開始日と終了位置間の書式設定された文字列の編集可能な最初の位置を検索します。 編集可能な位置の値が指定した文字に変更が&1; つが見つかった場合、`input`です。 次の条件のいずれかの結果、置換は実行するとがエラー状態と値の`false`返される: -`startPos`または`endPos`パラメーターがの末尾を超えてまたは書式設定された文字列の開始前にポイントします。      で指定した間隔内、編集可能な文字が見つかりませんでした。      -置換文字`input`、印刷可能でないか、マスクの対応する要素と一致していないために、有効な入力文字ではありません。       だけでなく、戻り値は、このメソッドは、置換操作に関する追加情報を指定する&2; つの出力パラメーターがします。"
  syntax:
    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>を既存の値を置き換える値</xref:System.Char>。"
    - id: startPosition
      type: System.Int32
      description: "置換を開始する、書式指定文字列内の&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "交換が終了する書式指定文字列内の&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、ここで、最後の文字は実際に置き換えられます; 書式指定文字列の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>置換操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、文字が正常に置き換えられました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した開始位置と終了位置を指定した文字列との間での編集可能な文字の範囲を置き換え、削除位置とわかりやすい情報を出力します。"
  remarks: "Replace メソッドは、指定した開始日と終了位置間の書式設定された文字列の編集可能な最初の位置を検索します。 この時点より後に、十分な編集可能な位置があることを前提として動作して、既存の文字の値は、置換文字列パラメーターの内容に&1; によって置き換えられた`input`です。       次の条件は、エラーと見なされます。 エラーが発生するときに、置換は行われません、置換を返します`false`です。      -`startPos`または`endPos`パラメーターがの末尾を超えてまたは書式設定された文字列の開始前にポイントします。      -が置換文字列の内容を保持するために書式設定された文字列の編集可能な位置です。      置換文字値のいずれか有効ではない印刷可能でないか、マスクの対応する要素と一致しません。       だけでなく、戻り値は、このメソッドは、置換操作に関する追加情報を指定する&2; つの出力パラメーターがします。"
  syntax:
    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>既存の編集可能な文字を置き換えるために使用される値</xref:System.String>。"
    - id: startPosition
      type: System.Int32
      description: "置換を開始する、書式指定文字列内の&0; から始まる位置。"
    - id: endPosition
      type: System.Int32
      description: "交換が終了する書式指定文字列内の&0; から始まる位置。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、ここで、最後の文字は実際に置き換えられます; 書式指定文字列の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>置換操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての文字が正常に置き換えられている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  id: ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得またはプロンプト文字と一致する入力文字の処理方法を決定する値を設定します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>特殊な方法では、文字、ペースおよびプロンプト文字は、2 つのカテゴリを扱うことができます。</xref:System.ComponentModel.MaskedTextProvider> マスクに対して各入力文字をテストする通常、承諾または拒否します。 前提に動作している、<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>プロパティが以外の値に設定`null`、ResetOnPrompt プロパティを設定し、`true`プロンプト文字に対する特別な処理が発生します</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>。 プロンプト文字が追加されると、クリアするのには、現在のマスク文字位置と次の編集可能な文字を強化するのには、現在の位置が行われます。       ResetOnPrompt よりも優先、<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>プロパティが次の表で説明します</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>。      |ResetOnPrompt |<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|結果の動作 |  |---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  |`true`|`true`|プロンプト文字を追加してをリセットするのには、現在のマスク位置になります</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>。 既定値です |。  |`true`|`false`|プロンプト文字を追加することができ、現在のマスク位置をリセットする |。  |`false`|`true`|プロンプト文字が通常の入力文字として処理します |。  |`false`|`false`|プロンプト文字が無効であり、文字を追加しようとしていますメソッドは失敗します。 |。"
  syntax:
    content: public bool ResetOnPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>入力されたプロンプト文字です。 リセットするマスク内の現在の編集可能な位置が発生した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>プロンプト文字が通常の入力文字として処理することを示すです。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  id: ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または空白の入力文字の処理方法を決定する値を設定します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>特殊な方法では、文字、スペース、プロンプト文字は、2 つのカテゴリを扱うことができます。</xref:System.ComponentModel.MaskedTextProvider> マスクに対して各入力文字をテストする通常、承諾または拒否します。 ResetOnSpace プロパティを設定`true`を消去している現在のマスク文字位置と次の編集可能な文字を高度なされている現在の位置になります。       ResetOnSpace 役に立ちます除外コマンド プロンプトで、保存されたテキストを割り当てるときに、プロンプトが空白で置換されます。 このような文字列、ResetOnSpace に設定を復元する前に`true`入力文字列内のスペースによって占有されている位置にあるプロンプト文字がリセットされます。"
  syntax:
    content: public bool ResetOnSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>空白文字を入力すると、現在編集可能なマスク内の位置をリセットします。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>は通常の入力文字として処理することを示すためにします。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  id: Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した入力文字列を書式設定された文字列を設定します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>メソッドは、書式指定文字列の既存の内容をクリアし、に対してマスクを適用し、`input`書式指定文字列の内容を更新する文字列</xref:System.ComponentModel.MaskedTextProvider.Set%2A>。       次の条件は、エラーと見なされます。 エラーが発生するときに書式設定された文字列はそのまま続行し、<xref:System.ComponentModel.MaskedTextProvider.Set%2A>返します`false`</xref:System.ComponentModel.MaskedTextProvider.Set%2A>。      -が置換文字列の内容を保持するために書式設定された文字列の編集可能な位置です。      置換文字値のいずれか有効ではない印刷可能でないか、マスクの対応する要素と一致しません。"
  syntax:
    content: public bool Set (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>値の書式設定された文字列を設定するために使用します</xref:System.String>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての文字が正常に設定された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した入力文字列に書式設定された文字列を設定し、削除位置とわかりやすい情報を出力します。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>メソッドは、書式指定文字列の既存の内容をクリアし、に対してマスクを適用し、`input`書式指定文字列の内容を更新する文字列</xref:System.ComponentModel.MaskedTextProvider.Set%2A>。       次の条件は、エラーと見なされます。 エラーが発生するときに書式設定された文字列はそのまま続行し、<xref:System.ComponentModel.MaskedTextProvider.Set%2A>返します`false`</xref:System.ComponentModel.MaskedTextProvider.Set%2A>。      -が置換文字列の内容を保持するために書式設定された文字列の編集可能な位置です。      置換文字値のいずれか有効ではない印刷可能でないか、マスクの対応する要素と一致しません。       このバージョンの<xref:System.ComponentModel.MaskedTextProvider.Set%2A>メソッドの操作に関する詳細を伝えるために&2; つの追加の出力パラメーターを提供します</xref:System.ComponentModel.MaskedTextProvider.Set%2A>。"
  syntax:
    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>値の書式設定された文字列を設定するために使用します</xref:System.String>。"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、最後の文字が実際に設定されている; 書式指定文字列の&0; から始まる位置それ以外の場合、最初の位置、操作が失敗しました。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>設定操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての文字が正常に設定された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  id: SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得またはマスク内のリテラル文字位置を同じ値で上書きできるかどうかを示す値を設定します。"
  remarks: "定型入力には、文字リテラルと編集可能な文字を含めることができます。 しようとしてが入力文字をリテラルの値によって占有されているマスク内の位置に追加しようとしているかどうか、<xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>プロパティは、結果を決定します</xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>。      場合は、このプロパティは`true`、入力文字を追加するときに、同じ値を持つリテラルを上書きすることはできます。 たとえば、スラッシュ文字値、 `&quot;/&quot;`、マスクの&3; 番目の位置に追加できませんでした`&quot;00/00/000&quot;`です。      場合は、このプロパティは`false`、リテラル文字によって占有されるマスクの位置に任意の値を割り当てることはできません。"
  syntax:
    content: public bool SkipLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リテラルを再び追加を許可するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>リテラル文字を上書きするユーザーを許可しないようにします。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  id: ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "表示可能な形式で書式設定された文字列を返します。"
  remarks: "ToDisplayString メソッドの値に関係なく、戻り値でのプロンプトとリテラルの文字を含めることが常には、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>または<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>。 このメソッドは常に表示パスワード文字場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティが以外の文字の値に設定`null`</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。       ToDisplayString は<xref:System.Windows.Forms.MaskedTextBox>。</xref:System.Windows.Forms.MaskedTextBox>など、関連付けられているユーザー インターフェイス要素に表示する文字列を取得するには"
  syntax:
    content: public string ToDisplayString ();
    parameters: []
    return:
      type: System.String
      description: "書式設定され<xref:System.String>プロンプトとマスク リテラルが含まれている</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString
  id: ToString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "割り当てられた文字のすべての値を含む書式指定文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドには、画面の指示との現在の値に従ってリテラルが含まれています、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティをそれぞれ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A></xref:System.ComponentModel.MaskedTextProvider.ToString%2A>。 値を無視して、元の入力文字は常に返します、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報を公開するために使用する十分注意してユーザーの機密データが誤って公開されないようにします。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "書式設定され<xref:System.String>割り当てられた文字のすべての値を含む</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "パスワードの文字を含めることも、書式設定された文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドには、画面の指示との現在の値に従ってリテラルが含まれています、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティをそれぞれ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A></xref:System.ComponentModel.MaskedTextProvider.ToString%2A>。 場合、`ignorePasswordChar`パラメーターは`true`、元の入力文字の値は無視されますが返されます、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。 このパラメーターは、する場合`false`、パスワードの文字を使用して編集可能なユーザー入力を表面化しない場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティが以外の値に設定`null`</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > ため、このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報の公開可能性があることに使用する十分注意してユーザーの機密データが誤って公開されないようにします。"
  syntax:
    content: public string ToString (bool ignorePasswordChar);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>実際の編集可能な文字を返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ことを示す、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>プロパティが有効である</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>。"
    return:
      type: System.String
      description: "書式設定され<xref:System.String>リテラル、プロンプト、および必要に応じてパスワードの文字が含まれている</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  id: ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロンプトとリテラルの文字を含めることも、書式設定された文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>プロンプトとリテラルの値に基づいて、メソッドが含まれています、`IncludePrompt`と`IncludeLiterals`パラメーターをそれぞれ</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>。 これらのパラメーターが、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>の値を上書きすることに注意してください<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>。</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> このメソッドは常に元の入力文字の値は無視されますを返します、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報を公開するために使用する十分注意してユーザーの機密データが誤って公開されないようにします。"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にプロンプト文字を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にリテラル文字を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.String
      description: "書式設定され<xref:System.String>割り当てられた文字、値を必要に応じてリテラルを含むすべての操作を含むように求められます</xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "書式指定文字列の部分文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドは、開始位置から、書式設定された文字列の部分を返します`startPos`し、その後で指定された文字数など、`length`パラメーター</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。 返される文字列には、画面の指示との現在の値に従ってリテラルが含まれています、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティをそれぞれ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>。 返される文字列は、元の入力文字を含める<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティは常に無視されます</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報を公開するために使用する十分注意してユーザーの機密データが誤って公開されないようにします。       ToString は入力パラメーターで不一致がある場合に、次の操作を実行します: - 場合`startPos`が小さい&0; の場合よりも開始位置は&0; に設定します。      If`startPos`より大きいか等しい、実際には、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>、書式設定された文字列の<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty></xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      If`length`残りの文字の過去の唯一の開始位置の文字数が返されるよりも大きいです。      If`length`が&0; 未満、<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty>。"
  syntax:
    content: public string ToString (int startPosition, int length);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "出力を開始する、書式設定された文字列内の&0; から始まる位置。"
    - id: length
      type: System.Int32
      description: "取り出す文字数。"
    return:
      type: System.String
      description: "成功した場合、書式付きの部分文字列<xref:System.String>、割り当てられた文字のすべての値が含まれますそれ以外の場合、<xref:System.String>文字列。</xref:System.String> </xref:System.String> 。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "パスワードの文字を含めることも、書式設定された文字列の部分文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドは、開始位置から、書式設定された文字列の部分を返します`startPos`し、その後で指定された文字数など、`length`パラメーター</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。 返される文字列には、画面の指示との現在の値に従ってリテラルが含まれています、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティをそれぞれ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>。 場合、`ignorePasswordChar`パラメーターは`true`、元の入力文字の値は無視されますが返されます、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。 このパラメーターは、する場合`false`、パスワードの文字を使用して編集可能なユーザー入力を表面化しない場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティが以外の値に設定`null`</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > ため、このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報の公開可能性があることに使用する十分注意してユーザーの機密データが誤って公開されないようにします。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>入力パラメーターで不一致がある場合に、次の操作を実行: 場合 -`startPos`が小さい以上では、開始位置は&0; に設定します。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      If`startPos`より大きいか等しい、実際には、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>、書式設定された文字列の<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty></xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      If`length`残りの文字の過去の唯一の開始位置の文字数が返されるよりも大きいです。      If`length`が&0; 未満、<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty>。"
  syntax:
    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>実際の編集可能な文字を返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ことを示す、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>プロパティが有効である</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>。"
    - id: startPosition
      type: System.Int32
      description: "出力を開始する、書式設定された文字列内の&0; から始まる位置。"
    - id: length
      type: System.Int32
      description: "取り出す文字数。"
    return:
      type: System.String
      description: "成功した場合、書式付きの部分文字列<xref:System.String>、リテラル、プロンプト、および必要に応じてパスワードの文字が含まれているそれ以外の場合、<xref:System.String>文字列</xref:System.String></xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロンプトとリテラルの文字を含めることも、書式設定された文字列の部分文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドは、開始位置から、書式設定された文字列の部分を返します`startPos`し、その後で指定された文字数など、`length`パラメーター</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。 戻り値の文字列には、画面の指示とリテラルの値に基づいてが含まれている、`IncludePrompt`と`IncludeLiterals`パラメーター、それぞれします。 これらのパラメーターが、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>の値を上書きすることに注意してください<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>。</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> このメソッドは常に元の入力文字の値は無視されますを返します、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報を公開するために使用する十分注意してユーザーの機密データが誤って公開されないようにします。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>入力パラメーターで不一致がある場合に、次の操作を実行: 場合 -`startPos`が小さい以上では、開始位置は&0; に設定します。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      If`startPos`より大きいか等しい、実際には、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>、書式設定された文字列の<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty></xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      If`length`残りの文字の過去の唯一の開始位置の文字数が返されるよりも大きいです。      If`length`が&0; 未満、<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty>。"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にプロンプト文字を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にリテラル文字を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: startPosition
      type: System.Int32
      description: "出力を開始する、書式設定された文字列内の&0; から始まる位置。"
    - id: length
      type: System.Int32
      description: "取り出す文字数。"
    return:
      type: System.String
      description: "成功した場合、部分文字列の書式設定され<xref:System.String>、割り当てられた文字、値を必要に応じてリテラルおよびプロンプトが含まれますすべてそれ以外の場合、<xref:System.String>文字列</xref:System.String></xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロンプト、リテラル、およびパスワードの文字を含めることも、書式設定された文字列の部分文字列を返します。"
  remarks: "このバージョンのオーバー ロードされた<xref:System.ComponentModel.MaskedTextProvider.ToString%2A>メソッドは、開始位置から、書式設定された文字列の部分を返します`startPos`し、その後で指定された文字数など、`length`パラメーター</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> 。 戻り値の文字列には、画面の指示とリテラルの値に基づいてが含まれている、`IncludePrompt`と`IncludeLiterals`パラメーター、それぞれします。 これらのパラメーターがの値を上書きすることに注意してください、<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>と<xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>。 場合、`ignorePasswordChar`パラメーターは`true`、元の入力文字の値は無視されますが返されます、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。 このパラメーターは、する場合`false`、パスワードの文字を使用して編集可能なユーザー入力を表面化しない場合、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>プロパティが以外の値に設定`null`</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>。      > [!IMPORTANT] > ため、このメソッドは、通常、パスワードの文字で、ユーザー インターフェイスで保護されている情報の公開可能性があることに使用する十分注意してユーザーの機密データが誤って公開されないようにします。       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>入力パラメーターで不一致がある場合に、次の操作を実行: 場合 -`startPos`が小さい以上では、開始位置は&0; に設定します。</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      If`startPos`より大きいか等しい、実際には、 <xref:System.ComponentModel.MaskedTextProvider.Length%2A>、書式設定された文字列の<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty></xref:System.ComponentModel.MaskedTextProvider.Length%2A>。      If`length`残りの文字の過去の唯一の開始位置の文字数が返されるよりも大きいです。      If`length`が&0; 未満、<xref:System.String.Empty>文字列が返されます</xref:System.String.Empty>。"
  syntax:
    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>実際の編集可能な文字を返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ことを示す、<xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>プロパティが有効である</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>。"
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にプロンプト文字を含めるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>戻り値の文字列にリテラル文字を返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: startPosition
      type: System.Int32
      description: "出力を開始する、書式設定された文字列内の&0; から始まる位置。"
    - id: length
      type: System.Int32
      description: "取り出す文字数。"
    return:
      type: System.String
      description: "成功した場合、書式付きの部分文字列<xref:System.String>、すべて割り当てられた文字の値し、必要に応じて、リテラル、プロンプト、およびパスワードの文字が含まれていますそれ以外の場合、<xref:System.String>文字列</xref:System.String></xref:System.String>。"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字は、指定した位置に正常に設定できなかったかどうかをテストします。"
  remarks: "VerifyChar メソッドは、1 つの文字の値が書式設定された文字列の指定した位置にある有効な入力を表すかどうかをテストします。 このメソッドは`false`次の理由: -`pos`パラメーターは、ゼロ未満か<xref:System.ComponentModel.MaskedTextProvider.Length%2A><xref:System.ComponentModel.MaskedTextProvider.Mask%2A></xref:System.ComponentModel.MaskedTextProvider.Mask%2A></xref:System.ComponentModel.MaskedTextProvider.Length%2A>より大きい。      -文字`input`によって決定される、有効な入力文字ではない、<xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>メソッド</xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>。      -`input`指定した位置にマスク要素と互換性がありません`pos`です。       現在の値に依存する最後の状態、 <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>、 <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>、 <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>、<xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>と<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>プロパティ</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A></xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A></xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A></xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>。       マスクの入力文字列全体をテストするには、いずれかを使用、<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>メソッド代わりにします</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。"
  syntax:
    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>値</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "入力文字をテストするマスク内の位置。"
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字が指定した位置の有効な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  id: VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した位置にある指定した文字をエスケープはかどうかをテストします。"
  remarks: "文字があると言われます*エスケープ*は有効な入力が書式設定された文字列内の位置に割り当てられていません。 エスケープ文字は次の&3; つのカテゴリに分類されます: の場合は、プロンプト文字をエスケープ、<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>プロパティは`true`</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>。      -マスクのリテラルと同じ値がある場合、および場合入力文字はエスケープ、<xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>プロパティは`true`</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>。      場合、空白文字はエスケープされます、<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>プロパティは`true`</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>。       VerifyEscapeChar メソッドが返すことも`false`場合、`pos`パラメーターは、ゼロ未満か<xref:System.ComponentModel.MaskedTextProvider.Length%2A><xref:System.ComponentModel.MaskedTextProvider.Mask%2A></xref:System.ComponentModel.MaskedTextProvider.Mask%2A></xref:System.ComponentModel.MaskedTextProvider.Length%2A>より大きい。"
  syntax:
    content: public bool VerifyEscapeChar (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>値</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "入力文字をテストするマスク内の位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した位置に指定した文字をエスケープは場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  id: VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字列を正常に設定できなかったかどうかをテストします。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>適用、`input`実際にテストする、書式設定された文字列を変更せず、マスク文字列かどうか`input`ことが有効で、対応する<xref:System.ComponentModel.MaskedTextProvider.Set%2A>操作</xref:System.ComponentModel.MaskedTextProvider.Set%2A></xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。 このメソッドも返します`true`入力が場合`null`または長さ&0; です。"
  syntax:
    content: public bool VerifyString (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>値</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字列が有効な入力を表している場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した文字列が正常に、設定できませんでした、位置と説明情報を出力するかどうかをテストします。"
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>適用、`input`実際にテストする、書式設定された文字列を変更せず、マスク文字列かどうか`input`ことが有効で、対応する<xref:System.ComponentModel.MaskedTextProvider.Set%2A>操作</xref:System.ComponentModel.MaskedTextProvider.Set%2A></xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。 このメソッドも返します`true`入力が場合`null`または長さ&0; です。       このバージョンの<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>メソッドの操作に関する詳細を伝えるために&2; つの追加の出力パラメーターを提供します</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>。"
  syntax:
    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>値</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "成功した場合、最後の文字の&0; から始まる位置が実際にテストします。それ以外の場合、テストが失敗した最初の位置します。 出力パラメーター。"
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "A <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref>のテスト操作の結果を簡潔に説明します。 出力パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した文字列が有効な入力を表している場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MaskedTextResultHint
  parent: System.ComponentModel
  isExternal: false
  name: MaskedTextResultHint
  nameWithType: MaskedTextResultHint
  fullName: System.ComponentModel.MaskedTextResultHint
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Clone
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
- uid: System.ComponentModel.MaskedTextProvider.Culture
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
- uid: System.ComponentModel.MaskedTextProvider.ToString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.#ctor*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider.MaskedTextProvider
- uid: System.ComponentModel.MaskedTextProvider.Add*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add
  nameWithType: MaskedTextProvider.Add
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear
  nameWithType: MaskedTextProvider.Clear
- uid: System.ComponentModel.MaskedTextProvider.Clone*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone
  nameWithType: MaskedTextProvider.Clone
- uid: System.ComponentModel.MaskedTextProvider.Culture*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom
  nameWithType: MaskedTextProvider.FindEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange
  nameWithType: MaskedTextProvider.FindEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint
  nameWithType: MaskedTextProvider.GetOperationResultFromHint
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt
  nameWithType: MaskedTextProvider.InsertAt
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition
  nameWithType: MaskedTextProvider.IsAvailablePosition
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition
  nameWithType: MaskedTextProvider.IsEditPosition
- uid: System.ComponentModel.MaskedTextProvider.IsPassword*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar
  nameWithType: MaskedTextProvider.IsValidInputChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar
  nameWithType: MaskedTextProvider.IsValidMaskChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar
  nameWithType: MaskedTextProvider.IsValidPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.Item*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item
  nameWithType: MaskedTextProvider.Item
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove
  nameWithType: MaskedTextProvider.Remove
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt
  nameWithType: MaskedTextProvider.RemoveAt
- uid: System.ComponentModel.MaskedTextProvider.Replace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace
  nameWithType: MaskedTextProvider.Replace
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set
  nameWithType: MaskedTextProvider.Set
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString
  nameWithType: MaskedTextProvider.ToDisplayString
- uid: System.ComponentModel.MaskedTextProvider.ToString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString
  nameWithType: MaskedTextProvider.ToString
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar
  nameWithType: MaskedTextProvider.VerifyChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar
  nameWithType: MaskedTextProvider.VerifyEscapeChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString
  nameWithType: MaskedTextProvider.VerifyString
