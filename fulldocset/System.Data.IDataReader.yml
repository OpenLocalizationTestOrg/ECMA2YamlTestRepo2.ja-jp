### YamlMime:ManagedReference
items:
- uid: System.Data.IDataReader
  id: IDataReader
  children:
  - System.Data.IDataReader.Close
  - System.Data.IDataReader.Depth
  - System.Data.IDataReader.GetSchemaTable
  - System.Data.IDataReader.IsClosed
  - System.Data.IDataReader.NextResult
  - System.Data.IDataReader.Read
  - System.Data.IDataReader.RecordsAffected
  langs:
  - csharp
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
  type: Interface
  summary: "データ ソースでコマンドを実行することによって取得した結果セットの&1; つまたは複数順方向専用ストリームを読み取る手段を提供、リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装されます。"
  remarks: "IDataReader と<xref:System.Data.IDataRecord>インターフェイスを実装する継承するクラスを許可する、`DataReader`結果セットの&1; つまたは複数順方向専用ストリームを読み取る手段を提供するクラス</xref:System.Data.IDataRecord>。 詳細については`DataReader`クラスを参照してください[を取得するデータを使用して、DataReader](~/add/includes/ajax-current-ext-md.md)です。       アプリケーションでは、直接、IDataReader インターフェイスのインスタンスは作成されませんが、IDataReader を継承するクラスのインスタンスを作成します。       IDataReader を継承するクラスは、継承されたメンバーを実装し、通常プロバイダー固有の機能を追加するその他のメンバーを定義する必要があります。       別によって結果セットに加えられた変更を処理またはスレッドのデータの読み込み中を実装するクラスのユーザーに表示される場合があります、`IDataReader`です。 ただし、正確な動作は、プロバイダーとタイミングに依存するは。"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatareader_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatareader_1.vb)]"
  syntax:
    content: 'public interface IDataReader : IDisposable, System.Data.IDataRecord'
  implements:
  - System.Data.IDataRecord
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDataReader.Close
  id: Close
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "閉じる、 <xref href=&quot;System.Data.IDataReader&quot;> </xref>オブジェクト。"
  remarks: "Close メソッドを明示的に呼び出す必要がありますを使用しているときに、<xref:System.Data.IDataReader>を使用して、関連付けられている<xref:System.Data.IDbConnection>、他の目的</xref:System.Data.IDbConnection></xref:System.Data.IDataReader>。"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.IDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Depth
  id: Depth
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "現在の行の入れ子の深さを示す値を取得します。"
  remarks: "最も外側のテーブルは、深さ&0; です。"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "入れ子のレベル。"
  overload: System.Data.IDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "返します、 <xref href=&quot;System.Data.DataTable&quot;> </xref>の列メタデータを記述する、 <xref href=&quot;System.Data.IDataReader&quot;></xref>です。"
  remarks: ".NET Framework Data provider for OLE DB GetSchemaTable メソッドの実装は、他の .NET Framework データ プロバイダーの実装は、OLE DB プロバイダー レイヤーを使用しないときに、OLE DB icolumnsrowset::getcolumnsrowset メソッドにマップされます。 GetSchemaTable が、テーブル内の各列と、返された DataReader 列に関するメタデータを返すに順序では、使用するデータ プロバイダーによって異なる場合します。 次の表には、データ プロバイダーと GetSchemaTable を実装するメンバーが一覧表示します。      |データ プロバイダー |メンバー |  |-------------------|------------|  |.NET Data Provider for ODBC |<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  |.NET Data Provider for OLE DB |<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  |.NET Data Provider for Oracle |<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|  |.NET Data Provider for SQL Server |<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|</xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>"
  syntax:
    content: public System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>列メタデータを記述します。"
  overload: System.Data.IDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>が閉じられます。"
  platform:
  - net462
- uid: System.Data.IDataReader.IsClosed
  id: IsClosed
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "データ リーダーが閉じているかどうかを示す値を取得します。"
  remarks: "IsClosed と<xref:System.Data.IDataReader.RecordsAffected%2A>後に呼び出すことができる唯一のプロパティは、<xref:System.Data.IDataReader>が閉じられた</xref:System.Data.IDataReader></xref:System.Data.IDataReader.RecordsAffected%2A>。"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ リーダーが閉じられた; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.IDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.NextResult
  id: NextResult
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "バッチの SQL ステートメントの結果を読み込むときに、次の結果にデータ リーダーを進めます。"
  remarks: "バッチの SQL ステートメントを実行することによって取得できますが、複数の結果を処理するために使用します。       既定では、データ リーダーは、最初の結果に位置付けられます。       [!code-vb[IDataReader_NextResult&1;](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)][!code-cs[IDataReader_NextResult&1;  ](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]"
  syntax:
    content: public bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>複数の行がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.IDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Read
  id: Read
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "進めます、 <xref href=&quot;System.Data.IDataReader&quot;> </xref>次のレコードにします。"
  remarks: "既定の位置、<xref:System.Data.IDataReader>が最初のレコードより前です</xref:System.Data.IDataReader>。 そのためデータへのアクセスを開始するのには、読み取りを呼び出す必要があります。       データ リーダーを使用している間、関連付けられた接続がビジー <xref:System.Data.IDataReader>。</xref:System.Data.IDataReader>を提供しています。 これは、まで続きます<xref:System.Data.IDataReader.Close%2A>と呼びます</xref:System.Data.IDataReader.Close%2A>。"
  example:
  - "The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.idatareade_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_0_1.vb)]"
  syntax:
    content: public bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>複数の行がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.IDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "変更、挿入、または SQL ステートメントの実行によって削除された行の数を取得します。"
  remarks: "RecordsAffected プロパティが設定されていないすべての行が読み取られ、 <xref:System.Data.IDataReader>。</xref:System.Data.IDataReader>       <xref:System.Data.IDataReader.IsClosed%2A>RecordsAffected が後に呼び出すことができる唯一のプロパティと、<xref:System.Data.IDataReader>が閉じられた</xref:System.Data.IDataReader>。</xref:System.Data.IDataReader.IsClosed%2A>"
  syntax:
    content: public int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "変更、挿入、または削除された行の数影響を受けた行がない場合は 0 またはステートメントが失敗しました。SELECT ステートメントの場合は-1。"
  overload: System.Data.IDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDataReader.Close
  parent: System.Data.IDataReader
  isExternal: false
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
- uid: System.Data.IDataReader.Depth
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataReader.GetSchemaTable
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader.IsClosed
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataReader.NextResult
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
- uid: System.Data.IDataReader.Read
  parent: System.Data.IDataReader
  isExternal: false
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
- uid: System.Data.IDataReader.RecordsAffected
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
- uid: System.Data.IDataReader.Close*
  parent: System.Data.IDataReader
  isExternal: false
  name: Close
  nameWithType: IDataReader.Close
- uid: System.Data.IDataReader.Depth*
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
- uid: System.Data.IDataReader.GetSchemaTable*
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: IDataReader.GetSchemaTable
- uid: System.Data.IDataReader.IsClosed*
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
- uid: System.Data.IDataReader.NextResult*
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult
  nameWithType: IDataReader.NextResult
- uid: System.Data.IDataReader.Read*
  parent: System.Data.IDataReader
  isExternal: false
  name: Read
  nameWithType: IDataReader.Read
- uid: System.Data.IDataReader.RecordsAffected*
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
