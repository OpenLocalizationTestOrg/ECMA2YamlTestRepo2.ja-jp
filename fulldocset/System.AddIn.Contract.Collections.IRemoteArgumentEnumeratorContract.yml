### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  id: IRemoteArgumentEnumeratorContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  langs:
  - csharp
  name: IRemoteArgumentEnumeratorContract
  nameWithType: IRemoteArgumentEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  type: Interface
  summary: "コレクションの要素を列挙<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref>オブジェクト。"
  remarks: "列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。       最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。 この位置での戻り値<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>は定義されていません</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>。 したがって、 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>を呼び出す前に、コレクションの最初の要素に列挙子を進めるに</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>呼び出す必要があります。       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>まで同じオブジェクトを返します<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>と呼びます</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>戻り値の設定<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>に次の要素</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       場合<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>コレクション内の最後の要素の後に、列挙子をコレクションの末尾が配置されているパスと<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返します`false`</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。 列挙子がこの位置では、後続の呼び出しの場合<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>を返すことも`false`</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。 場合は、最後の呼び出し<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返される`false`の戻り値<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>が定義されていません</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。"
  syntax:
    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  id: GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "返します、 <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref>で列挙子の現在位置にあるコレクション。"
  remarks: "できる、GetCurrent の戻り値は、次の条件のいずれかで定義されていない:-列挙子が作成された直後に、コレクション内の最初の要素の前に、列挙子が配置されているまたは<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>と呼びます</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>。 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>列挙子をできる、GetCurrent を呼び出す前に、コレクションの最初の要素に進める呼び出す必要があります。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -を最後に呼び出した<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>返される`false`コレクションの末尾を示します</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。      列挙子は追加、変更、または削除する要素など、コレクションで行った変更により無効になります。       できる、GetCurrent まで同じオブジェクトを返します<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>と呼びます</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>次の要素にできる、GetCurrent の戻り値を設定します。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();
    parameters: []
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref>で列挙子の現在位置にあるコレクション。"
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  id: MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "列挙子をコレクションの次の要素に進めます。"
  remarks: "列挙子を作成した後、または後に、<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>メソッドが呼び出されると、列挙子がコレクションの最初の要素の前に位置付けられます</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>。 MoveNext メソッドの最初の呼び出しは、列挙子をコレクションの最初の要素に移動します。       MoveNext はコレクションの末尾を渡すかどうか、列挙子がコレクション内の最後の要素の後に配置し、MoveNext 返します`false`です。 列挙子は、この位置にあるが、MoveNext を後続の呼び出しを返すことも`false`まで<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>と呼びます</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>。       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能な無効なり、次を MoveNext または<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A><xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>がスローされます。</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>列挙子が次の要素に正常に進んだ場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>列挙子がコレクションの末尾を越えた場合。"
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コレクションは、列挙子が作成された後に変更されました。"
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  id: Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "初期位置、つまりコレクションの最初の要素の前に、列挙子を設定します。"
  remarks: "値のリセットを呼び出した後<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>は定義されていません</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>。 呼び出す、<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>列挙子をコレクションの最初の要素に移動するメソッド</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>。       コレクションが変更されない限り、列挙子は有効です。 場合は、コレクションには、変更が加えられた、追加、変更、やなどの要素を削除すると、列挙子は回復不可能なり、次を<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>リセット スロー <xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>または</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コレクションは、列挙子が作成された後に変更されました。"
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset
  nameWithType: IRemoteArgumentEnumeratorContract.Reset
