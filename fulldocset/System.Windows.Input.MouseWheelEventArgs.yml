### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseWheelEventArgs
  id: MouseWheelEventArgs
  children:
  - System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  - System.Windows.Input.MouseWheelEventArgs.Delta
  - System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  langs:
  - csharp
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs
  fullName: System.Windows.Input.MouseWheelEventArgs
  type: Class
  summary: "レポートは、マウス デバイスのマウス ホイールの差分値を変更するさまざまなイベントのデータを提供します。"
  remarks: "MouseWheelEventArgs は、次のイベントと共に使用:- <xref:System.Windows.UIElement.MouseWheel?displayProperty=fullName>- <xref:System.Windows.ContentElement.MouseWheel?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName>(添付イベント) - <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=fullName>- <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=fullName>- <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName>(添付イベント)、<xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>プロパティは、マウス ホイールを上へ移動された場合は、正または前方 (奥ユーザー) または負の場合は、マウス ホイールを下へ移動または (ユーザー) に向かって後方</xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A></xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName></xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=fullName></xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=fullName></xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName></xref:System.Windows.ContentElement.MouseWheel?displayProperty=fullName></xref:System.Windows.UIElement.MouseWheel?displayProperty=fullName>。       このイベントは、小さなマウス ホイールの動きの場合でも発生します。 一部のシナリオでは、デルタが特定のしきい値を超えたかどうかをチェックして、小さなマウス ホイールのデルタを調整するハンドラーを実装することをお勧めします。 それ以外の場合、マウス ホイールの差分が非常に小さいため、マウス ホイールの動作に関連付けられているすべての UI の更新が行われない場合、ハンドラーを起動することもできます。 正確にどのようにハンドラーで、しきい値の動作を実装する、そのしきい値にする必要があります実装ごとに異なります。"
  example:
  - "The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative. The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.  \n  \n [!code-vb[mousesnippetsample#MouseWheelDelta](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mousewheeldelta)]\n [!code-cs[mousesnippetsample#MouseWheelDelta](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mousewheeldelta)]"
  syntax:
    content: 'public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Input.MouseEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)'
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: MouseWheelEventArgs(MouseDevice,Int32,Int32)
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice,Int32,Int32)
  fullName: System.Windows.Input.MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice,Int32,Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseWheelEventArgs&quot;> </xref>クラスです。"
  syntax:
    content: public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "このイベントに関連付けられているマウス デバイス。"
    - id: timestamp
      type: System.Int32
      description: "入力が発生した時刻。"
    - id: delta
      type: System.Int32
      description: "ホイールの回転の量が変更されました。"
  overload: System.Windows.Input.MouseWheelEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseWheelEventArgs.Delta
  id: Delta
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
  fullName: System.Windows.Input.MouseWheelEventArgs.Delta
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウスのホイールが変更する量を示す値を取得します。"
  remarks: "この値の効果的な上限と下限の範囲は、可能性のあるデバイスの実装または他の呼び出し元のイベントが発生し、定義されていないためから取得されます。"
  example:
  - "The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel Delta is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel Delta is negative. The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.  \n  \n [!code-vb[mousesnippetsample#MouseWheelDelta](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mousewheeldelta)]\n [!code-cs[mousesnippetsample#MouseWheelDelta](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mousewheeldelta)]"
  syntax:
    content: public int Delta { get; }
    return:
      type: System.Int32
      description: "ホイールの回転の量が変更されました。 この値は、(ユーザー) 奥上方向にマウス ホイールを回転した場合は正または負の値 (ユーザー) に向かって下降方向にマウス ホイールを回転した場合です。"
  overload: System.Windows.Input.MouseWheelEventArgs.Delta*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseWheelEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseWheelEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "イベントのシステムの効率を高めることができます、型固有の方法でイベント ハンドラーを呼び出します。"
  remarks: "この実装では、ジェネリック ハンドラーをキャスト<xref:System.Windows.Input.MouseWheelEventHandler>してそれを呼び出します</xref:System.Windows.Input.MouseWheelEventHandler> この実装パターンとその理由の詳細については、次を参照してください<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 。"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "型固有の方法で呼び出すジェネリック ハンドラー。"
    - id: genericTarget
      type: System.Object
      description: "ハンドラーを呼び出すターゲット。"
  overload: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: System.Windows.Input.MouseEventArgs
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: MouseWheelEventArgs(MouseDevice,Int32,Int32)
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice,Int32,Int32)
  fullName: System.Windows.Input.MouseWheelEventArgs.MouseWheelEventArgs(MouseDevice,Int32,Int32)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseWheelEventArgs.Delta
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
  fullName: System.Windows.Input.MouseWheelEventArgs.Delta
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseWheelEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseWheelEventArgs.#ctor*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: MouseWheelEventArgs
  nameWithType: MouseWheelEventArgs.MouseWheelEventArgs
- uid: System.Windows.Input.MouseWheelEventArgs.Delta*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: Delta
  nameWithType: MouseWheelEventArgs.Delta
- uid: System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseWheelEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseWheelEventArgs.InvokeEventHandler
