### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  summary: "匿名パイプ、同期および非同期の両方がサポートする読み取りおよび書き込み操作の周囲のストリームを公開します。"
  remarks: "匿名パイプは、セーフを提供し、プロセスの子と親の間の通信をセキュリティで保護を支援します。 AnonymousPipeServerStream クラスには、子プロセスからの情報の送受信に親プロセスができるようにします。       匿名パイプは、通常、親と子のプロセス間でデータを転送する名前のない、一方向のパイプです。 匿名パイプは常にローカルです。ネットワーク経由で使用できません。 A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。       匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode>モードを読み取る</xref:System.IO.Pipes.PipeTransmissionMode>。       匿名パイプのクライアント側を呼び出すことによって、サーバー側によって提供されるパイプのハンドルから作成する必要があります、<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>メソッド</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>。 クライアント プロセスを作成するときに、文字列がパラメーターとして渡されます。 クライアント プロセスからそれに渡され、<xref:System.IO.Pipes.AnonymousPipeClientStream>としてコンス トラクター、`pipeHandleAsString`パラメーター</xref:System.IO.Pipes.AnonymousPipeClientStream> 。       クライアントのハンドルを使用して、AnonymousPipeServerStream オブジェクトを破棄しなければならない、<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアントの終了時に通知するためにメソッド</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>。      > [!NOTE] > の[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]と[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]、最大 10 個のパイプのネットワーク経由で同時に接続できます。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an AnonymousPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the AnonymousPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>クラスです。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream><xref:System.IO.Pipes.PipeDirection>パラメーターの既定の方向が、 <xref:System.IO.Pipes.PipeDirection>。</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>なしのコンス トラクター</xref:System.IO.Pipes.AnonymousPipeServerStream> A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。       このコンス トラクターは、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズ、ありませんパイプ セキュリティ、および<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>を持つオブジェクト</xref:System.IO.Pipes.AnonymousPipeServerStream>を作成します。"
  syntax:
    content: public AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>指定されたパイプの方向を持つクラス。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。       このコンス トラクターは、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズ、ありませんパイプ セキュリティ、および<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>を持つオブジェクト</xref:System.IO.Pipes.AnonymousPipeServerStream>を作成します。"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。       匿名パイプは、必ず&1; つの方向にため`direction`に設定することはできません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>です。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>方向および継承性モードを指定されたパイプしています。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。       このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズとパイプ セキュリティなしを持つオブジェクト</xref:System.IO.Pipes.AnonymousPipeServerStream>。"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/d22da34b-b931-48af-8c21-_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/d22da34b-b931-48af-8c21-_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/d22da34b-b931-48af-8c21-_1.cpp)]"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。       匿名パイプは、必ず&1; つの方向にため`direction`に設定することはできません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>です。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の&1; つ。 いずれか<xref:System.IO.HandleInheritability>または<xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability></xref:System.IO.HandleInheritability>に設定する必要があります。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>設定されていないいずれかに<xref:System.IO.HandleInheritability>または<xref:System.IO.HandleInheritability>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>クラス指定されたパイプ ハンドルから。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。       匿名パイプは、必ず&1; つの方向にため`direction`に設定することはできません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>です。"
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "このパイプのハンドルを安全な場所<xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;></xref>オブジェクトによってカプセル化します。"
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "セーフ ハンドルを<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serverSafePipeHandle</code>または<code>clientSafePipeHandle</code>はハンドルが無効です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverSafePipeHandle</code>or <code>clientSafePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ディスク エラーなど、I/O エラーが発生しました。       または、ストリームが閉じられました。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>指定されたパイプの方向、継承性モード、およびバッファー サイズを持つクラス。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。       このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>パイプ セキュリティなしオブジェクト</xref:System.IO.Pipes.AnonymousPipeServerStream>。"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。       匿名パイプは、必ず&1; つの方向にため`direction`に設定することはできません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>です。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の&1; つ。 いずれか<xref:System.IO.HandleInheritability>または<xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability></xref:System.IO.HandleInheritability>に設定する必要があります。"
    - id: bufferSize
      type: System.Int32
      description: "バッファーのサイズ。 この値は、0 以上にする必要があります。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>設定されていないいずれかに<xref:System.IO.HandleInheritability>または<xref:System.IO.HandleInheritability>です。       - または -<code>bufferSize</code>が 0 未満です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>クラスが指定されたパイプの方向、継承性モード、バッファー サイズ、およびパイプのセキュリティを使用します。"
  remarks: "A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>匿名パイプは一方向であるに定義されているためにはサポートされていません</xref:System.IO.Pipes.PipeDirection></xref:System.IO.Pipes.PipeDirection>。"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。       匿名パイプは、必ず&1; つの方向にため`direction`に設定することはできません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>です。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の&1; つ。"
    - id: bufferSize
      type: System.Int32
      description: "バッファーのサイズ。 この値は、0 以上にする必要があります。"
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "アクセス制御を決定するオブジェクトと監査セキュリティをパイプします。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>設定されていないいずれかに<xref:System.IO.HandleInheritability>または<xref:System.IO.HandleInheritability>です。       - または -<code>bufferSize</code>が 0 未満です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "セーフ ハンドルを取得、 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref>に現在接続されているオブジェクト、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>オブジェクト。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアント プロセスをクライアント ハンドルが渡された後、メソッドを呼び出す必要があります</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>。 このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.AnonymousPipeServerStream>。"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "ハンドル、 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref>に現在接続されているオブジェクト、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>オブジェクト。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "ローカル コピーを閉じ、 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref>オブジェクトのハンドル。"
  remarks: "クライアントをクライアント ハンドルが渡された後、DisposeLocalCopyOfClientHandle メソッドを呼び出す必要があります。 このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.AnonymousPipeServerStream>。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public void DisposeLocalCopyOfClientHandle ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "アンマネージ リソースを解放し、前に他のクリーンアップ操作を実行、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>インスタンスがガベージ コレクションによって回収されます。"
  syntax:
    content: ~AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "接続されている取得<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>文字列とオブジェクトのハンドル。"
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアント プロセスをクライアント ハンドルが渡された後、メソッドを呼び出す必要があります</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>。 このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.AnonymousPipeServerStream>。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_2_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_2_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_2_1.cpp)]"
  syntax:
    content: public string GetClientHandleAsString ();
    parameters: []
    return:
      type: System.String
      description: "表す、接続されている文字列<xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;></xref>オブジェクトのハンドル。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "読み取りモードを設定、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>オブジェクト。 匿名パイプは、転送モードがある必要があります<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>です。"
  remarks: "匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode>読み取りモードにします</xref:System.IO.Pipes.PipeTransmissionMode>。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, the <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "読み取りモード、 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref>オブジェクト。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "送信モードが正しくありません。 匿名パイプの場合のみ<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>はサポートされています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "プロパティに設定<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>、これは、匿名パイプはサポートされていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "接続が壊れているか、別の I/O エラーが発生します。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のパイプでサポートされるパイプ送信モードを取得します。"
  remarks: "匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode>読み取りモードにします</xref:System.IO.Pipes.PipeTransmissionMode>。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the TransmissionMode property is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_0_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_0_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_0_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>現在のパイプでサポートされています。"
  overload: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose
  nameWithType: AnonymousPipeServerStream.Dispose
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeServerStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
