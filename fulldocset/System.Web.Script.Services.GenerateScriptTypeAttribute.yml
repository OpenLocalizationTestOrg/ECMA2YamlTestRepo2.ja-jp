### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute
  id: GenerateScriptTypeAttribute
  children:
  - System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  - System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  - System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  langs:
  - csharp
  name: GenerateScriptTypeAttribute
  nameWithType: GenerateScriptTypeAttribute
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute
  type: Class
  summary: "プロキシ オブジェクトに、サーバーの種類を生成する必要があるかを指定します。 このクラスは継承できません。"
  remarks: "AJAX 対応の ASP.NET Web サイトで ASP.NET が Web サービス クラスのメソッドのプロキシ オブジェクトを自動的に生成できます。 これは、入力パラメーターと<xref:System.Web.Script.Services.ScriptServiceAttribute>。</xref:System.Web.Script.Services.ScriptServiceAttribute>でマークされている任意の Web メソッドの戻り値の最上位のほとんどの型に       それ以外の場合に、サーバーの型に対して生成するプロキシ オブジェクト場合必要があります GenerateScriptTypeAttribute 手動で適用します。 GenerateScriptTypeAttribute を適用するには、Web サービス自体または任意の Web サービス メソッドにまたは`static` <xref:System.Web.Services.WebMethodAttribute>.</xref:System.Web.Services.WebMethodAttribute>とマークされたメソッドのページ       場合によっては、型が、入力パラメーターまたは Web サービス メソッドの戻り値に対応する場合でも、プロキシは生成されません自動的にします。 その場合は、型のプロキシ オブジェクトを生成する GenerateScriptTypeAttribute 属性を使用する必要があります。 これはジェネリック型およびなどを持つ複数の引数は、配列の場合に発生`Dictionary<string,<T>>`です。       GenerateScriptTypeAttribute の&1; つまたは複数のインスタンスは、Web サービス クラスまたはメソッドに適用できます。 ASP.NET は GenerateScriptTypeAttribute の各宣言によって参照される最上位レベルの種類ごとに、ECMAScript (JavaScript) のプロキシ クラスになります。      > [!NOTE] > 各入れ子にされた型に GenerateScriptTypeAttribute を適用する入れ子にされた型プロキシ オブジェクトを生成する場合は、手動でする必要があります。 ASP.NET はトップレベルの型にのみプロキシを生成しは自動的に再帰的に属性を適用しない入れ子にされた型にします。       属性を使用する方法の詳細については、次を参照してください。[属性](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to apply GenerateScriptTypeAttribute to a Web service class and to a Web method. As a result, the `ColorObject` type and its nested type `FavoriteColors` are included in the proxy object.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)]

      public sealed class GenerateScriptTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: GenerateScriptTypeAttribute(Type)
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Script.Services.GenerateScriptTypeAttribute&quot;> </xref>指定した型のクラスです。"
  remarks: "<xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A>このコンス トラクターのパラメーターを名前付きプロパティはオプションです</xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A>。"
  example:
  - "The following example shows how to use <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to generate a proxy object for the specified type that uses a specific type identifier for the metadata marker.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public GenerateScriptTypeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "プロキシ クラスに含める型。"
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  id: ScriptTypeId
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "取得または型のメタデータのマーカーの種類の識別子を設定します。"
  remarks: "このプロパティは省略可能です。 指定すると、ScriptTypeId の値が、型のアセンブリ修飾名ではなく、シリアル化された JSON 文字列の型メタデータ マーカー (&quot;_ _type&quot;) に使用されます。 逆シリアル化型競合回避モジュールに関連付けられている、<xref:System.Web.Script.Serialization.JavaScriptSerializer>オブジェクトは適切なマネージ型にマップする型のメタデータのマーカー値を使用します</xref:System.Web.Script.Serialization.JavaScriptSerializer>。"
  syntax:
    content: public string ScriptTypeId { get; set; }
    return:
      type: System.String
      description: "シリアル化された JavaScript Object Notation (JSON) 文字列の型メタデータ マーカーの種類の識別子です。 既定値は、型のアセンブリ修飾名です。"
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  id: Type
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "プロキシ オブジェクトに含まれている型を取得します。"
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "生成されたプロキシ オブジェクトに含まれている型のオブジェクト。"
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: GenerateScriptTypeAttribute(Type)
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: GenerateScriptTypeAttribute
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
