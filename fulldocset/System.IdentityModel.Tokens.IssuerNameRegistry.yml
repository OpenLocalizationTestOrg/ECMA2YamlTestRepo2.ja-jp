### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.IssuerNameRegistry
  id: IssuerNameRegistry
  children:
  - System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  - System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  langs:
  - csharp
  name: IssuerNameRegistry
  nameWithType: IssuerNameRegistry
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry
  type: Class
  summary: "発行者名レジストリの抽象基本クラスです。 発行者名レジストリを使用して、対応する発行元によって生成されるトークンの署名を確認するために必要な暗号化マテリアルをニーモニック名を関連付けます。 発行者名レジストリでは、証明書利用者 (RP) アプリケーションで信頼される発行者の一覧を管理します。"
  remarks: "The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer. This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim. The methods exposed by the IssuerNameRegistry class are called from the pipeline by the security token handler that is processing the token. Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted. The name returned by the issuer name registry should be unique within the context of an RP application.  \n  \n In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=fullName> property. In a configuration file, the issuer name registry can be specified by specifying the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element under the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element.  \n  \n Windows Identity Foundation (WIF) provides an implementation of the IssuerNameRegistry class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class. When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [\\&lt;trustedIssuers\\&gt;](../Topic/%3CtrustedIssuers%3E.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute. Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.  \n  \n To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> method. This method returns the issuer name for the specified security token. You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=fullName> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file."
  example:
  - "The following code shows an implementation of the IssuerNameRegistry class that only accepts issuers that use certificates with subject “CN=localhost”.  \n  \n> [!WARNING]\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \n  \n [!code-cs[WifIssuerNameRegistry#1](~/add/codesnippet/csharp/claimsawaremvcapp/trustedissuernameregistry.cs#1)]  \n  \n The following shows the XML necessary to configure an application with the trusted issuer name registry.  \n  \n```xml  \n<system.identityModel>  \n  <identityConfiguration>  \n    <issuerNameRegistry type=\"System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp\" />  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: 'public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: IssuerNameRegistry()
  nameWithType: IssuerNameRegistry.IssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.IssuerNameRegistry()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;> </xref>クラスです。"
  syntax:
    content: protected IssuerNameRegistry ();
    parameters: []
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetIssuerName(SecurityToken)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "派生クラスでオーバーライドされると、指定したセキュリティ トークンの発行者の名前を返します。"
  remarks: "実装には、認識の発行者を識別する null 以外および空以外の文字列または認識されない発行者を識別する null 文字列を返す必要があります。       トークンを処理しているセキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。 メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。"
  example:
  - "The following code shows the GetIssuerName method for an issuer name registry. The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.  \n  \n> [!WARNING]\n>  The following code is for illustrative purposes only. Validating certificates based on subject name is not a good practice. This code should not be used as is in production.  \n  \n [!code-cs[WifIssuerNameRegistry#2](~/add/codesnippet/csharp/claimsawaremvcapp/trustedissuernameregistry.cs#2)]"
  syntax:
    content: public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "発行者名を取得するセキュリティ トークンです。"
    return:
      type: System.String
      description: "発行者の名前。"
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetIssuerName(SecurityToken,String)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "派生クラスでオーバーライドされると、指定したセキュリティ トークンの発行者の名前を返します。 指定した発行者名と思われる発行者名を決定するを返します。"
  remarks: "既定の実装は無視されます、`requestedIssuerName`パラメーターとの呼び出しを単純に、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName>メソッド</xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName>。       トークンを処理しているセキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。 メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。"
  syntax:
    content: public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "発行者名を取得するセキュリティ トークンです。"
    - id: requestedIssuerName
      type: System.String
      description: "要求で考慮すべき発行者名。"
    return:
      type: System.String
      description: "発行者の名前。"
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  id: GetWindowsIssuerName
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: GetWindowsIssuerName()
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Windows クレームを使用する既定の発行者名を返します。"
  remarks: "既定の実装が<xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>。</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>を返します       トークンを処理しているセキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。 メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。"
  syntax:
    content: public virtual string GetWindowsIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "Windows クレームの既定の発行者名。"
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。"
  remarks: "The LoadCustomConfiguration method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](../Topic/%3CissuerNameRegistry%3E.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \n  \n The default implementation throws a <xref:System.NotImplementedException>. Override this method in your derived class to enable initialization of your issuer name registry from a configuration file."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "構成 XML 要素です。 型のリスト内の各ノードは、 <xref href=&quot;System.Xml.XmlElement&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: IssuerNameRegistry()
  nameWithType: IssuerNameRegistry.IssuerNameRegistry()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.IssuerNameRegistry()
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName(SecurityToken)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName(SecurityToken,String)
  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken,String)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(SecurityToken,String)
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetWindowsIssuerName()
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName()
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.#ctor*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: IssuerNameRegistry
  nameWithType: IssuerNameRegistry.IssuerNameRegistry
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetIssuerName
  nameWithType: IssuerNameRegistry.GetIssuerName
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: GetWindowsIssuerName
  nameWithType: IssuerNameRegistry.GetWindowsIssuerName
- uid: System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.IssuerNameRegistry
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: IssuerNameRegistry.LoadCustomConfiguration
