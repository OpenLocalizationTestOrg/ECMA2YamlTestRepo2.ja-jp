### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  id: SqlDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  type: Class
  summary: "によって発生するイベントのデータを提供、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>データ操作が完了した後に制御します。"
  remarks: "SqlDataSourceStatusEventArgs クラスが使用されて、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、および<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>ソース コントロールのイベントをデータが実行した後、データベース操作に関する情報を渡して</xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Selected>。 この情報には、操作によって影響を受ける行の数、<xref:System.Data.Common.DbCommand>データ ソース操作、および原因となった例外情報を実行するために使用できるオブジェクト</xref:System.Data.Common.DbCommand>。 処理するイベント ハンドラー デリゲートを追加することによって、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>または<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント、このデータを確認し、必要な追加の post 処理を実行できます</xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Selected>。       <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、基になるデータ オブジェクト、データの操作の実行中に操作を処理できる多くのイベントを公開します</xref:System.Web.UI.WebControls.SqlDataSource>。 次の表は、イベントの一覧し、関連付けられている<xref:System.EventArgs>とイベント ハンドラー クラスより適切な操作を使用してデータのライフ サイクルに対応するさまざまなイベントを探すには<xref:System.Web.UI.WebControls.SqlDataSource>コントロール</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.EventArgs>。      |イベント |EventArgs |EventHandler |  |-----------|---------------|------------------|  |データが取得される前に、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>が発生した |。<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>、 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>update、または削除操作が実行される挿入、前に発生します |。<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>発生後、データの取得、insert、update、または削除操作が完了した |。SqlDataSourceStatusEventArgs |<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to use the SqlDataSourceStatusEventArgs class to examine the return value and values of output parameters that are returned when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure to populate a <xref:System.Web.UI.WebControls.GridView> control. The stored procedure selects data that is displayed in the <xref:System.Web.UI.WebControls.GridView>, but also passes other information back to the caller, such as an integer output parameter and a return value. The parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure are contained by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection, and consist of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. The <xref:System.Web.UI.WebControls.Parameter.Direction%2A> property of these parameters is set to <xref:System.Data.ParameterDirection> and <xref:System.Data.ParameterDirection>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  id: '#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref>クラス、指定された出力パラメーター、戻り値、およびデータベースの操作によって影響を受ける行の数を使用します。"
  syntax:
    content: public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>によってデータベースにデータベースのクエリ、コマンド、または送信されるストアド プロシージャを表す、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロール。"
    - id: affectedRows
      type: System.Int32
      description: "該当する場合は、データベース操作によって影響を受ける行の数。"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>該当する場合に、データベース操作によってスローされます</xref:System.Exception>。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データベース操作によって影響を受ける行の数を取得します。"
  remarks: "すべての操作は、操作によって影響を受ける行の数を返します。 AffectedRows プロパティの戻り値として同じの値を持つ、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>、 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>、および<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A></xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A></xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>。       ときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出され、データ ソースに設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode>モードでは、戻り値は常に 0 です</xref:System.Web.UI.WebControls.SqlDataSourceMode></xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>。"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "データベース操作によって影響を受ける行の数。 既定値は -1 です。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データベースに送信されたデータベース コマンドを取得します。"
  remarks: "処理することができます、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、または<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>を調べてのプロパティを操作するイベント、<xref:System.Data.Common.DbCommand>によって送信された後、<xref:System.Web.UI.WebControls.SqlDataSource>データベースへのコントロールです</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Selected>。 コマンドのプロパティでは、を通じて、データベースの操作が実行された後の戻り値と、出力パラメーターの値にアクセスすることができます、<xref:System.Data.Common.DbCommand.Parameters%2A>プロパティだけでなく<xref:System.Data.Common.DbCommand.CommandText%2A>プロパティをデータベースに SQL クエリ、コマンド、または送信されたストアド プロシージャの名前を表します</xref:System.Data.Common.DbCommand.CommandText%2A></xref:System.Data.Common.DbCommand.Parameters%2A>。       すべての出力パラメーターはパラメーターを持つ具体的には、<xref:System.Data.ParameterDirection>または<xref:System.Data.ParameterDirection>値を<xref:System.Web.UI.WebControls.Parameter.Direction%2A>のプロパティ、<xref:System.Web.UI.WebControls.Parameter>オブジェクト</xref:System.Web.UI.WebControls.Parameter></xref:System.Web.UI.WebControls.Parameter.Direction%2A></xref:System.Data.ParameterDirection></xref:System.Data.ParameterDirection>。 戻り値を持つパラメーターからでは、<xref:System.Data.ParameterDirection>値</xref:System.Data.ParameterDirection>。"
  example:
  - "The following code example demonstrates how to examine the values of output parameters when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contains the parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure, and consists of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> class.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_542_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_542_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>データベース コマンドを表すオブジェクトをデータベースに送信します。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データの処理中に、データベースによってスローされた例外のラッパーを取得します。"
  remarks: "<xref:System.Exception>プロパティが実際にデータベースの操作によってスローされる例外を表していません</xref:System.Exception>。 スローされた例外を使用して、アクセスできる、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>のデータベースによってスローされた例外をラップするその<xref:System.Exception.InnerException*>プロパティ</xref:System.Exception.InnerException*></xref:System.Exception>。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータベースによってスローされる例外が処理されたかどうかを示す値を設定します。"
  remarks: "ExceptionHandled プロパティが に設定されている場合は、データベースは、例外をスローする`false`によって例外をラップし、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>。 使用する場合、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>、確認することができます、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>プロパティと、例外のハンドル</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A></xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>。 例外を処理する場合は、ExceptionHandled プロパティを設定`true`または<xref:System.Web.UI.WebControls.SqlDataSource>コントロール例外がスローされます</xref:System.Web.UI.WebControls.SqlDataSource>。"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、データベースによってスローされる例外は、処理が行われ、スローしません、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロール。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
