### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  id: FormViewDeletedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  langs:
  - csharp
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;> </xref>イベント。"
  remarks: "<xref:System.Web.UI.WebControls.FormView>制御を発生させます、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>イベントと削除 ボタン (ボタンがその`CommandName`プロパティが&quot;Delete&quot;に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.FormView>コントロールには、レコードが削除されます</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.FormView.ItemDeleted></xref:System.Web.UI.WebControls.FormView>。 これにより、このイベントが発生するたびに、削除操作の結果を確認するなど、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       FormViewDeletedEventArgs オブジェクトと発生する可能性のある例外の影響を受けたレコードの数を決定することができます、イベント処理メソッドに渡されます。 削除操作によって影響を受けたレコードの数を調べるを使用して、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>プロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>。 使用して、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>任意の例外が発生したかどうかを決定するプロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>プロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>。      > [!NOTE] > Delete 操作中に例外が発生した場合、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>プロパティに設定されている`false`、<xref:System.Web.UI.WebControls.FormView>コントロールは、例外を再スローします</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>。       キー フィールドと、削除したレコードの非キー フィールドの名前/値ペアにアクセスする場合を使用して、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A></xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following example demonstrates how to use the FormViewDeletedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemDeleted> event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_57_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_57_1.aspx)]"
  syntax:
    content: 'public class FormViewDeletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: FormViewDeletedEventArgs(Int32,Exception)
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>クラス</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>の新しいインスタンスを初期化するためにこのコンス トラクターを使用します。       次の表は、 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>。</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>|値、`affectedRows`のパラメーターです |。  |<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>|含まれる<xref:System.Exception?displayProperty=fullName>オブジェクト、`e`のパラメーターです |。  |<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>|初期化された`false`|。     > [!NOTE] > イベントを発生させるときにこのコンス トラクターが、主にコントロールの開発者によって使用されます</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A></xref:System.Exception?displayProperty=fullName></xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A></xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>。"
  syntax:
    content: public FormViewDeletedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "削除操作によって影響を受ける行の数。"
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>削除操作が実行されたときに発生する例外を表す</xref:System.Exception>。 例外が発生しなかった場合を使用して<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このパラメーターにします。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除操作によって影響を受ける行の数を取得します。"
  remarks: "AffectedRows プロパティを使用して、削除操作によって影響を受けたレコード数を決定します。 このプロパティは、次の状況で、正しい数のレコードが削除されたことを確認する。-単一のレコードだけが削除されたことを確認します。 場合があります、不適切に記述された delete ステートメントでは、複数のレコードを削除できます。      -例外が発生しない delete 操作中にエラーが発生したときに、レコードが削除されたことを確認します。      -データ ソース コントロールなどの競合の検出 (オプティミスティック同時実行) をサポートするときに、レコードが削除されたことを確認してください、<xref:System.Web.UI.WebControls.SqlDataSource>と<xref:System.Web.UI.WebControls.ObjectDataSource>制御は、その<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定、`ConflictOptions.CompareAllValues`列挙値</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A></xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.SqlDataSource>。 この設定では同時に別のユーザーによって変更されたレコードが削除されない可能性があります。"
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was deleted during the delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_968_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_968_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "削除操作によって影響を受ける行の数。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "例外を取得します (存在する場合)、削除操作中に発生しました。"
  remarks: "例外プロパティ (存在する場合)、例外を使用して、削除操作中に発生しました。 このプロパティを返しますのかどうかは例外が発生しなかった、`null`です。      > [!NOTE] > 場合に例外が発生して、イベント ハンドラーで例外を処理するか、必ず設定する、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>プロパティを`true`ですそれ以外の場合、<xref:System.Web.UI.WebControls.FormView>コントロールは、例外を再スローします。</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> 。"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1130_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1130_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>削除操作中に発生した例外を表す</xref:System.Exception>。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または削除操作中に発生した例外が、イベント ハンドラーで処理されたかどうかを示す値を設定します。"
  remarks: "Delete 操作中に例外が発生した、ときに、例外が、イベント ハンドラーで処理されたかどうかを示すために ExceptionHandled プロパティを使用します。 このプロパティに設定するときに`true`例外は処理され、再スローするいないと見なされます。 このプロパティ設定されている場合`false`、<xref:System.Web.UI.WebControls.FormView>コントロールは、例外を再スローします</xref:System.Web.UI.WebControls.FormView>。 発生した例外を確認するには<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>プロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>。"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_310_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_310_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>例外が処理された場合、イベント ハンドラーです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除されたレコードのキー フィールドの名前/値ペアの順序付けられた辞書を取得します。"
  remarks: "キー プロパティにはに記載されたキー フィールドの値が含まれています、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>のプロパティ、<xref:System.Web.UI.WebControls.FormView>コントロール</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>。 キー フィールドの値にアクセスする、キー プロパティを使用して (で指定されたとおり、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティ) の削除されたレコード</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>。 たとえば、これらの値を使用して、削除されたレコードのログを保持することができます。      > [!NOTE] > このプロパティにはで指定されたキー フィールドのみが含まれています、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティ</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>。 非キー フィールドにアクセスするを使用して、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>プロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>。       キー プロパティから返される、<xref:System.Collections.Specialized.OrderedDictionary>を実装するオブジェクト、<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>インターフェイス</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName></xref:System.Collections.Specialized.OrderedDictionary>。 <xref:System.Collections.Specialized.OrderedDictionary>オブジェクトを含む<xref:System.Collections.DictionaryEntry?displayProperty=fullName>削除されたレコードのキー フィールドを表すオブジェクト</xref:System.Collections.DictionaryEntry?displayProperty=fullName></xref:System.Collections.Specialized.OrderedDictionary>。 フィールド名にアクセスするには、使用、<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>のプロパティ、<xref:System.Collections.Specialized.OrderedDictionary>オブジェクト</xref:System.Collections.Specialized.OrderedDictionary></xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>。 同様を使用して、フィールドの値にアクセスすることができます、<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>プロパティ</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>。      > [!NOTE] > 簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.OrderedDictionary>キー フィールドの値にアクセスするオブジェクト</xref:System.Collections.Specialized.OrderedDictionary>。 インデクサーを使用するメリットは、キー フィールドの値が直接返されることです。 データ ソースのフィールドの順序に依存するコントロール (など<xref:System.Web.UI.WebControls.AccessDataSource>) インデックスでのみキー フィールドの値にアクセスできます</xref:System.Web.UI.WebControls.AccessDataSource>。"
  example:
  - "The following example demonstrates how to use the Keys property to access the values of the key fields for a deleted record.  \n  \n [!code-vb[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1272_1.aspx)]\n [!code-cs[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1272_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref>削除されたレコードのキー フィールドの名前/値ペアを格納します。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除されたレコードのキー以外のフィールドの名前/値ペアのディクショナリを取得します。"
  remarks: "削除されたレコードの非キー フィールドの値にアクセスするのにには、Values プロパティを使用します。 たとえば、これらの値を使用して、削除されたレコードのログを保持することができます。      > [!NOTE] > 値プロパティが双方向のバインド式は、項目テンプレートで使用されている場合にのみ設定されます。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)です。       プロパティの値を返します、<xref:System.Collections.Specialized.OrderedDictionary>を実装するオブジェクト、<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>インターフェイス</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName></xref:System.Collections.Specialized.OrderedDictionary>。 <xref:System.Collections.Specialized.OrderedDictionary>オブジェクトを含む<xref:System.Collections.DictionaryEntry?displayProperty=fullName>削除されたレコードのキー以外のフィールドを表すオブジェクト</xref:System.Collections.DictionaryEntry?displayProperty=fullName></xref:System.Collections.Specialized.OrderedDictionary>。 フィールド名にアクセスするには、使用、<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>のプロパティ、<xref:System.Collections.Specialized.OrderedDictionary>オブジェクト</xref:System.Collections.Specialized.OrderedDictionary></xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>。 同様を使用して、フィールドの値にアクセスすることができます、<xref:System.Collections.Specialized.OrderedDictionary.Values%2A>プロパティ</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>。      > [!NOTE] > 簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.OrderedDictionary>フィールド値にアクセスするオブジェクト</xref:System.Collections.Specialized.OrderedDictionary>。 インデクサーを使用するメリットは、フィールドの値が直接返されることです。 データ ソースのフィールドの順序に依存するコントロール (など<xref:System.Web.UI.WebControls.AccessDataSource>) フィールドの値をインデックスによってのみアクセスできます</xref:System.Web.UI.WebControls.AccessDataSource>。       このプロパティにキー フィールドが含まれていません (で指定されたとおり、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティ)、削除したレコードの</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>。 キー フィールドにアクセスするには、使用、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>プロパティ</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>。"
  example:
  - "The following example demonstrates how to use the Values property to access the values of the non-key fields for a deleted record.  \n  \n [!code-vb[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_912_1.aspx)]\n [!code-cs[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_912_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref>削除されたレコードのキー以外のフィールドの名前/値ペアのディクショナリを格納しています。"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: FormViewDeletedEventArgs(Int32,Exception)
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
