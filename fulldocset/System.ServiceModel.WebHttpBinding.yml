### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebHttpBinding
  id: WebHttpBinding
  children:
  - System.ServiceModel.WebHttpBinding.#ctor
  - System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  - System.ServiceModel.WebHttpBinding.#ctor(System.String)
  - System.ServiceModel.WebHttpBinding.AllowCookies
  - System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WebHttpBinding.ContentTypeMapper
  - System.ServiceModel.WebHttpBinding.CreateBindingElements
  - System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  - System.ServiceModel.WebHttpBinding.EnvelopeVersion
  - System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WebHttpBinding.MaxBufferSize
  - System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WebHttpBinding.ProxyAddress
  - System.ServiceModel.WebHttpBinding.ReaderQuotas
  - System.ServiceModel.WebHttpBinding.Scheme
  - System.ServiceModel.WebHttpBinding.Security
  - System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  - System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WebHttpBinding.TransferMode
  - System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  - System.ServiceModel.WebHttpBinding.WriteEncoding
  langs:
  - csharp
  name: WebHttpBinding
  nameWithType: WebHttpBinding
  fullName: System.ServiceModel.WebHttpBinding
  type: Class
  summary: "エンドポイントを構成するのに使用されるバインディング[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]Web SOAP メッセージに代わって HTTP 要求を介して公開されるサービスです。"
  remarks: "[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Web プログラミング モデルにより、開発者に公開する[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]Web サービス&quot;plain old XML&quot;を使用する HTTP 要求を通じて (POX) スタイルのメッセージング SOAP ベースのメッセージングの代わりにします。 <xref:System.ServiceModel.Description.WebHttpBehavior>それにアタッチされている</xref:System.ServiceModel.Description.WebHttpBehavior>を持つ WebHttpBinding で HTTP 要求を使用するサービスと通信するクライアントは、サービスのエンドポイントを構成する必要があります。 また、WCF Web プログラミング モデルでは、個々 のサービス操作が付けられている必要があります、<xref:System.ServiceModel.Web.WebGetAttribute>または<xref:System.ServiceModel.Web.WebInvokeAttribute>属性</xref:System.ServiceModel.Web.WebInvokeAttribute></xref:System.ServiceModel.Web.WebGetAttribute>。 これは、URI および HTTP メソッドから、操作を呼び出すし、結果を返すに使用されるメッセージの形式と同様に、サービス操作へのマッピングを定義します。 サポート[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]の配信および ASP です。AJAX の統合は、どちらも、WCF Web プログラミング モデル上に構築されます。"
  syntax:
    content: 'public class WebHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref>クラスです。"
  remarks: "既定のセキュリティ モードは<xref:System.ServiceModel.WebHttpSecurityMode>、セキュリティが使用されていないことを指定します</xref:System.ServiceModel.WebHttpSecurityMode>。       このバインディングで構成されたエンドポイントのトランスポート レベルのセキュリティを使用する、<xref:System.ServiceModel.WebHttpSecurityMode>でパラメーターとして値を指定する必要があります、<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>コンス トラクター</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode> 。       HTTPS を使用しない HTTP 認証を使用する、<xref:System.ServiceModel.WebHttpSecurityMode>でパラメーターとして値を指定する必要があります、<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>コンス トラクター</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode> 。       値<xref:System.ServiceModel.WebHttpSecurityMode>バインディング インスタンスが作成された後にもう一度設定することはできません</xref:System.ServiceModel.WebHttpSecurityMode>。"
  syntax:
    content: public WebHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WebHttpSecurityMode)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref>明示的に指定されたバインディングで使用されるセキュリティの種類を持つクラス。"
  remarks: "このバインディングで構成されたエンドポイントのトランスポート レベルのセキュリティを使用する、 <xref:System.ServiceModel.WebHttpSecurityMode>WebHttpBinding コンス トラクターのパラメーターとして値を指定する必要があります</xref:System.ServiceModel.WebHttpSecurityMode>。       HTTPS を使用しない HTTP 認証を使用する、 <xref:System.ServiceModel.WebHttpSecurityMode>WebHttpBinding コンス トラクターのパラメーターとして値を指定する必要があります</xref:System.ServiceModel.WebHttpSecurityMode>。       値<xref:System.ServiceModel.WebHttpSecurityMode>バインディング インスタンスが作成された後にもう一度設定することはできません</xref:System.ServiceModel.WebHttpSecurityMode>。"
  syntax:
    content: public WebHttpBinding (System.ServiceModel.WebHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WebHttpSecurityMode
      description: "値<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref> HTTP 要求を受信するサービス エンドポイントを構成するために使用されるセキュリティの種類を指定します。"
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> securityMode </code>指定は無効<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref>構成名で指定されたバインディングを持つクラス。"
  syntax:
    content: public WebHttpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "バインド構成の名前、 <xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "バインディング要素を名前で<code> configurationName </code>が見つかりませんでした。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはクライアントが cookie を受け入れ、それらを今後の要求に反映させるかどうかを示す値を設定します。"
  remarks: "このプロパティは、HTTP ヘッダーに含まれるクッキーを使用するための使いやすいとして提供されます。 ときにクッキーが許可される、クライアント プロパティを設定して`true`、サーバーから返されたクッキーはそのサービスへのすべての将来のクライアント要求に自動的にコピーします。"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>cookie は使用できません。 場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "追加します。"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "追加します。"
  overload: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはローカル アドレスに対してプロキシ サーバーをバイパスするかどうかを示す値を設定します。"
  remarks: "インターネット リソースは、ローカル アドレスを持つ場合ローカルです。 ローカル アドレスは同じコンピューター、ローカル LAN またはイントラネット上およびによって識別される、構文的などのピリオド (.)、Uri http://webserver/&quot;と&quot;http://localhost/&quot;がないことです。       BypassProxyOnLocal 設定プロパティを決定するかどうかで構成されたエンドポイント、<xref:System.ServiceModel.WebHttpBinding>ローカル リソースにアクセスするときにプロキシ サーバーを使用します</xref:System.ServiceModel.WebHttpBinding>。       BypassProxyOnLocal 場合`true`、ローカル インターネット リソースへの要求はプロキシ サーバーを使用しないでください。 BypassProxyOnLocal が場合`false`、すべてのインターネット要求はプロキシ サーバーを通じて行われます。"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ローカル アドレスでプロキシ サーバーをバイパスするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  id: ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはコンテンツ タイプ マッパーを設定します。"
  syntax:
    content: public System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper { get; set; }
    return:
      type: System.ServiceModel.Channels.WebContentTypeMapper
      description: "コンテンツ タイプ マッパー。"
  overload: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "現在のバインディングに含まれるバインディング要素の順序付けられたコレクションを返します。"
  remarks: "バインド要素の順序が重要です。 プロトコルおよびトランスポート チャネルが構築され、スタックの順序を反映します。"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A<xref:System.ServiceModel.Channels.BindingElementCollection>を格納している、<xref:System.ServiceModel.Channels.BindingElement>バインディング用</xref:System.ServiceModel.Channels.BindingElement></xref:System.ServiceModel.Channels.BindingElementCollection>。"
  overload: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  id: CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはドメイン間スクリプト アクセスを有効にかどうかを決定する値を設定します。"
  syntax:
    content: public bool CrossDomainScriptAccessEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クロス ドメイン スクリプトが有効かどうです。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "HTTP 要求を受信するためには、このバインディングによって構成されるエンドポイントによって使用されるエンベロープ バージョンを取得します。"
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "<xref:System.ServiceModel.EnvelopeVersion>で、 <xref:System.ServiceModel.EnvelopeVersion.None*>HTTP 要求を受信する、このバインディングで構成されるエンドポイントで使用されるプロパティです</xref:System.ServiceModel.EnvelopeVersion.None*></xref:System.ServiceModel.EnvelopeVersion>。"
  overload: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または URI の照合時に、サービスに到達するホスト名を使用するかどうかを示す値を設定します。"
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>ホスト名が URI で一致する場合に、サービスに到達するために使用するかどうかを示す値</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>。 既定値は<xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>、一致しているホスト名を無視します。"
  overload: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "設定されている値が有効ではありません<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>値</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または、割り当て済みメモリ (バイト単位) をこのバインディングを使用するエンドポイントで必要なバッファーを管理するバッファー マネージャーの最大量を設定します。"
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>バッファーを使用するバッファー プールによるコストを最小化しようとしています</xref:System.ServiceModel.Channels.BufferManager>。 バッファーは、チャネルから出てくる場合に、サービスによってメッセージを処理する必要があります。 メッセージの読み込みを処理するバッファー プール内に十分なメモリがない場合、<xref:System.ServiceModel.Channels.BufferManager>がガベージ コレクションのオーバーヘッドが増えるため、CLR ヒープから追加のメモリを割り当てる必要があります</xref:System.ServiceModel.Channels.BufferManager>。 CLR ガベージ ヒープから多大な割り当ては MaxBufferPoolSize 制限を増やすことより大きな割り当てにパフォーマンスを向上できること、およびバッファー プール サイズが小さすぎることを示します。"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "このバインディングで構成されるエンドポイントによって使用されるバッファーのプールのバイト単位で最大サイズ。 既定値は、65,536 バイトです。"
  overload: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または (バイト単位)、チャネルからメッセージを受信するメッセージ バッファーのマネージャーが使用するために割り当てられる最大メモリ量を設定します。"
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>バッファー プールを使用してバッファーを使用するコストを最小限に抑えられます</xref:System.ServiceModel.Channels.BufferManager>。 バッファーは、チャネルから出てくる場合に、サービスによってメッセージを処理する必要があります。 メッセージの読み込みを処理するバッファー プール内に十分なメモリがない場合、<xref:System.ServiceModel.Channels.BufferManager>がガベージ コレクションのオーバーヘッドが増えるため、CLR ヒープから追加のメモリを割り当てる必要があります</xref:System.ServiceModel.Channels.BufferManager>。 CLR ガベージ ヒープから多大な割り当てはことを示して、バッファー プール サイズが小さすぎることを増やすことで、割り当てとパフォーマンスを向上することができます、<xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>制限</xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>。"
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: "最大メモリ (バイト)、メッセージ バッファー マネージャーで使用可能な量。 既定値は 524, 288 (0x80000) バイトです。"
  overload: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定されている値は、0 未満です。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または、バインディングにより処理可能なメッセージのバイト単位で最大のサイズを設定します。"
  remarks: "サービスを使用して、ネットワーク上で受信できるメッセージのサイズ、<xref:System.ServiceModel.WebHttpBinding>メッセージごとに割り当てられたメモリの量に制限されます</xref:System.ServiceModel.WebHttpBinding>。 このメッセージ サイズは、拒否 (dos) 攻撃への露出を制限するものです。"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "最大サイズ (バイト単位)、バインディングによって処理されるメッセージ。 既定値は、65,536 バイトです。"
  overload: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値が&0; 未満です。"
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "メッセージには、割り当てられた最大サイズを超えています。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または HTTP プロキシの URI アドレスを設定します。"
  remarks: "場合、<xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>に設定されている`true`メタベースの値は無視されます</xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>。"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>HTTP プロキシのアドレスとして機能する</xref:System.Uri>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または、このバインディングで構成されるエンドポイントにより処理可能な SOAP メッセージの複雑さに対する制約を設定します。"
  remarks: "複雑さの制約は、拒否をメッセージの複雑さを使用してエンドポイント処理リソースを停滞させるサービス拒否 (DOS) 攻撃のクラスから保護します。 これらの制約とその既定値 (バイト単位) を表すプロパティは次のとおり:- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>32 - <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A>= 8192、 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A>16384 - <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A>4096 - <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A>16384</xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A>を =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A></xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A>を =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "<xref:System.Xml.XmlDictionaryReaderQuotas>複雑さの制約を指定します</xref:System.Xml.XmlDictionaryReaderQuotas>。"
  overload: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "クォータ値<xref:System.Xml.XmlDictionaryReaderQuotas>は読み取り専用です</xref:System.Xml.XmlDictionaryReaderQuotas>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "クォータのセットは、正の値である必要があります。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "チャネルとこのバインディングで構成されているリスナーの URI トランスポート スキームを取得します。"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "&quot;https&quot;に設定されている、<xref:System.ServiceModel.WebHttpBinding.Security*>場合<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>です。&quot;http&quot;に設定されている場合<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref></xref:System.ServiceModel.WebHttpBinding.Security*> 。"
  overload: System.ServiceModel.WebHttpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "このバインディングで使用されるセキュリティ設定を取得します。"
  remarks: "セキュリティの既定以外の種類を使用する、<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>コンス トラクター</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> 。      > [!NOTE] > このプロパティを設定する場合<xref:System.ServiceModel.WebHttpSecurityMode>HTTP を使用していると、資格情報がプレーン テキストでネットワーク経由で送信されることに注意してください</xref:System.ServiceModel.WebHttpSecurityMode>。"
  syntax:
    content: public System.ServiceModel.WebHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WebHttpSecurity
      description: "<xref href=&quot;System.ServiceModel.WebHttpSecurity&quot;> </xref>このバインディングで使用されます。 既定値は<xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "リーダーのクォータをシリアル化するかどうかを判断します。"
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リーダーのクォータをシリアル化する必要があります。 場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "セキュリティ設定をシリアル化するかどうかを判断します。"
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ設定をシリアル化する必要があります。 場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  id: ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "シリアル化に使用されるエンコーディングをシリアル化するかどうかを判断します。"
  syntax:
    content: public bool ShouldSerializeWriteEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>エンコーディングはシリアル化する必要があります。 場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "同期または非同期に受信した要求を処理するかどうかを示す値を取得します。"
  remarks: "サービスで受信するためには、このランタイムの動作のメッセージをクライアント アプリケーションの変更を使用したり、 [ \\&lt; synchronousReceive\\&gt;](../Topic/%3CsynchronousReceive%3E%20element.md)です。"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>受信要求が同期的に処理される場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>受信要求が非同期的に処理される場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  id: TransferMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得または設定、バインディングで構成されるサービスを使用するかどうかを示す値がストリームまたはバッファー内の (またはその両方) のメッセージ転送モード。"
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "<xref:System.ServiceModel.TransferMode>をストリームまたはバッファー内のバインドを使用して、サービスが構成するかどうかを示す値 (または両方) のメッセージ転送モード</xref:System.ServiceModel.TransferMode>。 既定値は<xref:System.ServiceModel.TransferMode>。</xref:System.ServiceModel.TransferMode>"
  overload: System.ServiceModel.WebHttpBinding.TransferMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "設定されている値が有効ではありません<xref:System.ServiceModel.TransferMode>値</xref:System.ServiceModel.TransferMode>。"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはを使用可能な場合は、システムの自動設定 HTTP プロキシを使用するかどうかを示す値を設定します。"
  remarks: "ある場合はエラーである`true`と<xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>以外である`null`</xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>。"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>使用可能な場合、システムの自動設定 HTTP プロキシを使用する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  id: WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "取得またはメッセージ テキストに使用される文字エンコーディングを設定します。"
  syntax:
    content: public System.Text.Encoding WriteEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>を示すために使用される文字エンコーディングします</xref:System.Text.Encoding>。 既定値は<xref:System.Text.UTF8Encoding>。</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.WebHttpBinding.WriteEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.WebHttpBinding.#ctor
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
- uid: System.ServiceModel.WebHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurityMode
  nameWithType: WebHttpSecurityMode
  fullName: System.ServiceModel.WebHttpSecurityMode
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.Channels.WebContentTypeMapper
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebContentTypeMapper
  nameWithType: WebContentTypeMapper
  fullName: System.ServiceModel.Channels.WebContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity
  fullName: System.ServiceModel.WebHttpSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WebHttpBinding.#ctor*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding
  nameWithType: WebHttpBinding.WebHttpBinding
- uid: System.ServiceModel.WebHttpBinding.AllowCookies*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WebHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WebHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WebHttpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
