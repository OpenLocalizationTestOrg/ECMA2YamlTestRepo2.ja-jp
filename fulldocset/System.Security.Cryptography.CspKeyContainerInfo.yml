### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspKeyContainerInfo
  id: CspKeyContainerInfo
  children:
  - System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.CspKeyContainerInfo.Accessible
  - System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  - System.Security.Cryptography.CspKeyContainerInfo.Exportable
  - System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  - System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  - System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  - System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  - System.Security.Cryptography.CspKeyContainerInfo.Protected
  - System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  - System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  - System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  - System.Security.Cryptography.CspKeyContainerInfo.Removable
  - System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  langs:
  - csharp
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
  type: Class
  summary: "暗号化キーの組に関する追加情報を提供します。 このクラスは継承できません。"
  remarks: "このクラスを使用して、キー コンテナー名やキーの数などのキーの組に関する追加情報を取得します。       ランダムなキーがによって生成される場合、<xref:System.Security.Cryptography.RSACryptoServiceProvider>または<xref:System.Security.Cryptography.DSACryptoServiceProvider>、キーを使用するメソッドを呼び出すまで、キー コンテナーは作成されません</xref:System.Security.Cryptography.DSACryptoServiceProvider></xref:System.Security.Cryptography.RSACryptoServiceProvider>。  CspKeyContainerInfo クラスの一部のプロパティがスローされます、<xref:System.Security.Cryptography.CryptographicException>キー コンテナーが作成されていない場合</xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_30_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_30_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_30_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspKeyContainerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: CspKeyContainerInfo(CspParameters)
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref>クラスの指定のパラメーターを使用します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/fb266140-c04f-42c1-9655-_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/fb266140-c04f-42c1-9655-_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/fb266140-c04f-42c1-9655-_1.cs)]"
  syntax:
    content: public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "A <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>キーに関する情報を提供するオブジェクト。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  id: Accessible
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キー コンテナーにキーがアクセスできるかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_38_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_38_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_38_1.cs)]"
  syntax:
    content: public bool Accessible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーにアクセスできる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.Accessible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "キーの種類がサポートされていません。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref>オブジェクトを表しますがアクセス権と、監査規則のコンテナーのことです。"
  remarks: "使用して、<xref:System.Security.Cryptography.CspKeyContainerInfo>取得するプロパティを<xref:System.Security.AccessControl.CryptoKeySecurity>随意アクセス制御の作成を管理するオブジェクトのリスト (DACL) とコンテナーのシステム アクセス制御リスト (SACL).</xref:System.Security.AccessControl.CryptoKeySecurity> </xref:System.Security.Cryptography.CspKeyContainerInfo>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "A <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref>オブジェクトを表しますがアクセス権と、監査規則のコンテナーのことです。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "キーの種類がサポートされていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "暗号化サービス プロバイダーが見つかりません。       または、キー コンテナーが見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  id: Exportable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キー コンテナーからキーをエクスポートできるかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_104_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_104_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_104_1.cs)]"
  syntax:
    content: public bool Exportable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、キーをエクスポートすることができます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.Exportable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "キーの種類がサポートされていません。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号化サービス プロバイダーが見つかりません。       または、キー コンテナーが見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  id: HardwareDevice
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キーがハードウェア キーかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_90_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_90_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_90_1.cs)]"
  syntax:
    content: public bool HardwareDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーがハードウェア キーである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号化サービス プロバイダーが見つかりません。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キー コンテナー名を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_56_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_56_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_56_1.cs)]"
  syntax:
    content: public string KeyContainerName { get; }
    return:
      type: System.String
      description: "キー コンテナー名。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "非対称キーが署名キーか、交換キーとして作成されたかどうかを示す値を取得します。"
  remarks: "派生した KeyNumber プロパティの値は、<xref:System.Security.Cryptography.CspParameters.KeyNumber>のフィールド、<xref:System.Security.Cryptography.CspParameters>初期化するために使用したオブジェクトを<xref:System.Security.Cryptography.CspKeyContainerInfo>オブジェクト</xref:System.Security.Cryptography.CspKeyContainerInfo></xref:System.Security.Cryptography.CspParameters></xref:System.Security.Cryptography.CspParameters.KeyNumber>。       交換キーは、セッション キーを暗号化に使用される非対称キーのペアです。  <xref:System.Security.Cryptography.KeyNumber>値が、交換キーを指定します</xref:System.Security.Cryptography.KeyNumber>。  この値に対応、`AT_KEYEXCHANGE`で、アンマネージ Microsoft 暗号化 API (CAPI) を使用する値。       署名キーは、(デジタル署名された) メッセージやファイルの認証に使用される非対称キーのペアです。  <xref:System.Security.Cryptography.KeyNumber>署名キーを指定します</xref:System.Security.Cryptography.KeyNumber>。  この値に対応、 `AT_SIGNATURE` CAPI で使用される値。"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_23_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_23_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_23_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.KeyNumber KeyNumber { get; }
    return:
      type: System.Security.Cryptography.KeyNumber
      description: "1 つ、 <xref href=&quot;System.Security.Cryptography.KeyNumber&quot;> </xref>非対称キーが署名キーか、交換キーとして作成されたかどうかを示す値。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  id: MachineKeyStore
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "かどうか、キーがコンピューターのキーから設定を示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_45_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_45_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_45_1.cs)]"
  syntax:
    content: public bool MachineKeyStore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マシン キーのセットからのキーがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected
  id: Protected
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キーのペアが保護されているかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_108_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_108_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_108_1.cs)]"
  syntax:
    content: public bool Protected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーのペアが保護されている; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.Protected*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "キーの種類がサポートされていません。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号化サービス プロバイダーが見つかりません。       または、キー コンテナーが見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キーのプロバイダー名を取得します。"
  remarks: "このプロパティは、キーを作成した暗号化サービス プロバイダーを指定します。"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_34_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_34_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_34_1.cs)]"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "プロバイダー名。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キーのプロバイダーの種類を取得します。"
  remarks: "有効な値は、キーを作成するために使用する暗号化サービス プロバイダーによって決定されます。 暗号化サービス プロバイダーは通常、グループまたはファミリ、それぞれが独自のデータ形式とプロセスのセットを持つに編成されます。 多くの場合、RC2 ブロック暗号など、同じアルゴリズムを使用する&2; つのファミリは、埋め込みスキーム、異なるキーの長さ、および別の既定モードを使用します。"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_81_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_81_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_81_1.cs)]"
  syntax:
    content: public int ProviderType { get; }
    return:
      type: System.Int32
      description: "プロバイダーの種類。 既定値は 1 です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  id: RandomlyGenerated
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キー コンテナーがマネージ暗号化クラスによってランダムに生成されたかどうかを示す値を取得します。"
  remarks: "通常は、ランダムに生成されたキー コンテナーが作成されると、キー コンテナー名前は&quot;CLR {`guid value`}.&quot;"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_29_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_29_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_29_1.cs)]"
  syntax:
    content: public bool RandomlyGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キー コンテナーがランダムに生成された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable
  id: Removable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "キー コンテナーからキーを削除できるかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_5_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_5_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_5_1.cs)]"
  syntax:
    content: public bool Removable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーがリムーバブル以外の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.Removable*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号化サービス プロバイダー (CSP) が見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  id: UniqueKeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "一意のキー コンテナー名を取得します。"
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_88_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_88_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_88_1.cs)]"
  syntax:
    content: public string UniqueKeyContainerName { get; }
    return:
      type: System.String
      description: "一意のキー コンテナーの名前です。"
  overload: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "キーの種類がサポートされていません。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号化サービス プロバイダーが見つかりません。       または、キー コンテナーが見つかりませんでした。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CspKeyContainerInfo(CspParameters)
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
- uid: System.Security.Cryptography.KeyNumber
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyNumber
  nameWithType: KeyNumber
  fullName: System.Security.Cryptography.KeyNumber
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
