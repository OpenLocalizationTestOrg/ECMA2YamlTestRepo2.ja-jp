### YamlMime:ManagedReference
items:
- uid: System.Activities.ExecutionProperties
  id: ExecutionProperties
  children:
  - System.Activities.ExecutionProperties.Add(System.String,System.Object)
  - System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  - System.Activities.ExecutionProperties.Find(System.String)
  - System.Activities.ExecutionProperties.GetEnumerator
  - System.Activities.ExecutionProperties.IsEmpty
  - System.Activities.ExecutionProperties.Remove(System.String)
  - System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ExecutionProperties
  nameWithType: ExecutionProperties
  fullName: System.Activities.ExecutionProperties
  type: Class
  summary: "特定のスコープでのプロパティのコレクションを表します。"
  remarks: "CLR は、スレッド ローカル ストレージ (TLS) を介して各スレッドの実行コンテキストを保持します。 この実行コンテキストは、スレッド id、アンビエント トランザクションなどの既知のスレッド プロパティを制御し、名前付きスロットの現在のアクセス許可のようなユーザー定義のスレッド プロパティを設定します。       CLR を直接対象とするプログラムとは異なりは、ワークフロー プログラムは、スレッド非依存環境で実行されるツリーの階層的にスコープ設定をします。 これは標準の TLS 機構直接は使用できないことが指定された作業項目のスコープ内にどのようなコンテキストを決定するを意味します。 たとえば、異なる id を使用して&2; つの並列実行の分岐、スケジューラ インターリーブ可能性がありますは同じ CLR スレッド上でそれらの実行。       実行プロパティをアクティビティで宣言するプロパティは、サブツリーのスコープ内だけでなくのセットアップおよび CLR オブジェクトと適切に相互運用する TLS 設定解除を行うフックを実現できるようにします。"
  syntax:
    content: 'public sealed class ExecutionProperties : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定した名前を使用して新しいプロパティを登録します。"
  syntax:
    content: public void Add (string name, object property);
    parameters:
    - id: name
      type: System.String
      description: "プロパティの名前です。"
    - id: property
      type: System.Object
      description: "プロパティを表すオブジェクト。"
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  id: Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定した名前および子可視性を使用してプロパティを登録します。"
  syntax:
    content: public void Add (string name, object property, bool onlyVisibleToPublicChildren);
    parameters:
    - id: name
      type: System.String
      description: "プロパティの名前です。"
    - id: property
      type: System.Object
      description: "プロパティを表すオブジェクト。"
    - id: onlyVisibleToPublicChildren
      type: System.Boolean
      description: "このプロパティが所有アクティビティの子から見えるかどうかを決定する値。"
  overload: System.Activities.ExecutionProperties.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Find(System.String)
  id: Find(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定された名前の最も近いプロパティを返します。"
  remarks: "検索を最も近い visible プロパティを使用して、検索スコープの階層です。 2 つのプロパティが同じ名前である場合は、親スコープで最も近いプロパティが返されます。"
  syntax:
    content: public object Find (string name);
    parameters:
    - id: name
      type: System.String
      description: "プロパティの名前です。"
    return:
      type: System.Object
      description: "指定された名前の最も近いプロパティ。"
  overload: System.Activities.ExecutionProperties.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "プロパティのコレクションを反復処理する列挙子を返します。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "プロパティのコレクションを反復処理する列挙子。"
  overload: System.Activities.ExecutionProperties.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.IsEmpty
  id: IsEmpty
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "現在のスコープで登録されているプロパティがあるかどうかを示す値を取得します。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>登録されているプロパティがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.ExecutionProperties.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  id: Remove(System.String)
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "指定した名前のプロパティを登録解除します。"
  remarks: "アクティビティの完了時に、プロパティは自動的に登録できません。 このメソッドは、アクティビティが完了する前に、プロパティを登録解除に使用できます。"
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "登録を解除するプロパティの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プロパティを登録できなかった場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.ExecutionProperties.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.ExecutionProperties
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "プロパティのコレクションを反復処理する列挙子を返します。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "プロパティのコレクションを反復処理する列挙子。"
  overload: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object)
  nameWithType: ExecutionProperties.Add(String,Object)
  fullName: System.Activities.ExecutionProperties.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add(String,Object,Boolean)
  nameWithType: ExecutionProperties.Add(String,Object,Boolean)
  fullName: System.Activities.ExecutionProperties.Add(String,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ExecutionProperties.Find(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find(String)
  nameWithType: ExecutionProperties.Find(String)
  fullName: System.Activities.ExecutionProperties.Find(String)
- uid: System.Activities.ExecutionProperties.GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator()
  nameWithType: ExecutionProperties.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ExecutionProperties.IsEmpty
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
  fullName: System.Activities.ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove(System.String)
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove(String)
  nameWithType: ExecutionProperties.Remove(String)
  fullName: System.Activities.ExecutionProperties.Remove(String)
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.ExecutionProperties.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.ExecutionProperties.Add*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Add
  nameWithType: ExecutionProperties.Add
- uid: System.Activities.ExecutionProperties.Find*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Find
  nameWithType: ExecutionProperties.Find
- uid: System.Activities.ExecutionProperties.GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: GetEnumerator
  nameWithType: ExecutionProperties.GetEnumerator
- uid: System.Activities.ExecutionProperties.IsEmpty*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: IsEmpty
  nameWithType: ExecutionProperties.IsEmpty
- uid: System.Activities.ExecutionProperties.Remove*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: Remove
  nameWithType: ExecutionProperties.Remove
- uid: System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.ExecutionProperties
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ExecutionProperties.System.Collections.IEnumerable.GetEnumerator
