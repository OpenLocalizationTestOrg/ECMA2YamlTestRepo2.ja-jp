### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IValueProvider
  id: IValueProvider
  children:
  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  - System.Windows.Automation.Provider.IValueProvider.Value
  langs:
  - csharp
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Windows.Automation.Provider.IValueProvider
  type: Interface
  summary: "範囲に広がらず、文字列として表すこと固有の値を持つコントロールへの UI オートメーション クライアント アクセスをサポートするメソッドとプロパティを公開します。"
  remarks: "コントロールの値は、可能性がありますかに応じて、コントロールとその設定は編集できません。       サポートする UI オートメーション プロバイダーに実装される、<xref:System.Windows.Automation.ValuePattern>コントロール パターン</xref:System.Windows.Automation.ValuePattern>。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IValueProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "コントロールの値は読み取り専用であるかどうかを指定する値を取得します。"
  remarks: "コントロールが必要、 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>&quot;éý&quot;`true`とその<xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty>&quot;éý&quot; `false` <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>への呼び出しを許可する前に</xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty></xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be changed.  \n  \n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#isreadonly)]\n [!code-cs[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#isreadonly)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>値が読み取り専用の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、変更することができます。"
  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  id: SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "コントロールの値を設定します。"
  remarks: "単一行エディット コントロールが<xref:System.Windows.Automation.Provider.IValueProvider>。</xref:System.Windows.Automation.Provider.IValueProvider>を実装することでその内容へのプログラムによるアクセスをサポートします。 ただし、複数行エディット コントロール実装しない<xref:System.Windows.Automation.Provider.IValueProvider><xref:System.Windows.Automation.Provider.ITextProvider>。</xref:System.Windows.Automation.Provider.ITextProvider>を実装することでそのコンテンツへのアクセスを提供する代わりにです。</xref:System.Windows.Automation.Provider.IValueProvider>       などのコントロール<xref:System.Windows.Automation.ControlType.ListItem>と<xref:System.Windows.Automation.ControlType.TreeItem>実装する必要があります<xref:System.Windows.Automation.Provider.IValueProvider>編集コントロールのモードを現在に関係なく、項目のいずれかの値が編集可能な場合</xref:System.Windows.Automation.Provider.IValueProvider></xref:System.Windows.Automation.ControlType.TreeItem></xref:System.Windows.Automation.ControlType.ListItem>。 親コントロールを実装する必要がありますも<xref:System.Windows.Automation.Provider.IValueProvider>子項目が編集可能な場合</xref:System.Windows.Automation.Provider.IValueProvider>。       ![編集可能なリスト項目。](~/add/media/uia-valuepattern-editable-listitem.PNG &quot;編集可能なリスト項目。&quot;)   編集可能なリスト項目の例"
  example:
  - "The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \n  \n [!code-vb[UIAIValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#setvalue)]\n [!code-cs[UIAIValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#setvalue)]"
  syntax:
    content: public void SetValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "設定する値。 プロバイダーは、値を適切なデータ型に変換します。"
  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ロケール固有の情報は、正しくない形式の日付などの不適切な形式でのコントロールに渡されます場合。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新しい値は、文字列から形式に変換できない場合、コントロールを認識します。"
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "ときにしようとしましたが無効になっているコントロールを操作します。"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "コントロールの値を取得します。"
  remarks: "単一行エディット コントロールを実装してその内容へのプログラムによるアクセスをサポートする<xref:System.Windows.Automation.Provider.IValueProvider>(に加えて<xref:System.Windows.Automation.Provider.ITextProvider>).</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider> ただし、複数行エディット コントロールが<xref:System.Windows.Automation.Provider.IValueProvider>。</xref:System.Windows.Automation.Provider.IValueProvider>を実装しないでください。       複数行エディット コントロールのテキスト コンテンツを取得するには、コントロールが<xref:System.Windows.Automation.Provider.ITextProvider>。</xref:System.Windows.Automation.Provider.ITextProvider>を実装する必要があります。 ただし、<xref:System.Windows.Automation.Provider.ITextProvider>コントロールの値の設定をサポートしていません</xref:System.Windows.Automation.Provider.ITextProvider>。       <xref:System.Windows.Automation.Provider.IValueProvider>書式設定情報や部分文字列の値の取得はサポートされません。</xref:System.Windows.Automation.Provider.IValueProvider> 実装<xref:System.Windows.Automation.Provider.ITextProvider>これらのシナリオでします</xref:System.Windows.Automation.Provider.ITextProvider>。"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be retrieved.  \n  \n [!code-vb[UIAIValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#value)]\n [!code-cs[UIAIValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#value)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "文字列としてのコントロールの値。"
  overload: System.Windows.Automation.Provider.IValueProvider.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue
  nameWithType: IValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IValueProvider.Value*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
