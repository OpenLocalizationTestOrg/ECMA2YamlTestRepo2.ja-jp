### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "フィールド テンプレートを作成するオブジェクトによって実装されるインターフェイスを定義します。"
  remarks: "によってこのクラスを実装する必要があります、<xref:System.Web.DynamicData.FieldTemplateFactory>フィールド テンプレートを作成するためにクラス</xref:System.Web.DynamicData.FieldTemplateFactory>。 このインターフェイスを初期化するメソッドを提供する、<xref:System.Web.DynamicData.FieldTemplateFactory>し、フィールド テンプレートを作成します</xref:System.Web.DynamicData.FieldTemplateFactory>。"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用してフィールド テンプレートのインスタンスを作成、 <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref>クラス、 <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>クラスおよび<xref:System.Web.DynamicData.MetaColumn.UIHint*>プロパティ</xref:System.Web.DynamicData.MetaColumn.UIHint*>。"
  remarks: "ASP.NET 動的データ フィールドのテンプレートは、データ コントロールをデータ モデルのデータ型にマップされる ASP.NET ユーザー コントロールです。 フィールド テンプレートは、一般にから派生<xref:System.Web.DynamicData.FieldTemplateUserControl>、データ フィールド、データ列、およびデータ モデル内のメタデータにアクセスできるようにするクラス</xref:System.Web.DynamicData.FieldTemplateUserControl>。 動的なデータ プロジェクト フィールド テンプレートの既定の指定に変更したり、カスタム フィールド テンプレートを作成することができます。 Imlemented、このメソッドは、データの列でのデータ列のモードに基づくフィールド テンプレートを作成するとき、<xref:System.Web.DynamicData.MetaColumn.UIHint%2A>プロパティ</xref:System.Web.DynamicData.MetaColumn.UIHint%2A>。 指定する、`uiHint`カスタム フィールド テンプレートを使用してデータを表示する場合のパラメーターです。"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "フィールド テンプレートの表示に使用するデータ列を指定します。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "フィールド テンプレートの表示モードを指定します。"
    - id: uiHint
      type: System.String
      description: "使用するフィールド テンプレートを指定します。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "インスタンス、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>オブジェクトのクラスで実装された場合。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "初期化、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>指定されたデータ モデルを使用します。"
  remarks: "ASP.NET 動的データは、個々 のデータ フィールドを表示するのにフィールド テンプレートを使用します。 フィールド テンプレートは、通常、データ コントロール内の個々 のフィールドにデータ モデルのデータ型をマップするユーザー コントロールとして実装されます。 このメソッドは、初期化、<xref:System.Web.DynamicData.FieldTemplateFactory>データ モデルを使用するフィールド テンプレート フィールド テンプレートの作成に使用されるクラスが使用されます</xref:System.Web.DynamicData.FieldTemplateFactory>。"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "フィールド テンプレートを使用するデータ モデルを指定します。"
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
