### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl
  id: CrossDomainMoveControl
  children:
  - System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor
  - System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)
  - System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue
  - System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController
  langs:
  - csharp
  name: CrossDomainMoveControl
  nameWithType: CrossDomainMoveControl
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl
  type: Class
  summary: "CrossDomainMoveControl クラスが使用されて、 <xref href=&quot;System.DirectoryServices.Protocols.ModifyDNRequest&quot;> </xref> LDAP オブジェクトの&1; つのドメインの移動先のオブジェクト。"
  syntax:
    content: 'public class CrossDomainMoveControl : System.DirectoryServices.Protocols.DirectoryControl'
  inheritance:
  - System.Object
  - System.DirectoryServices.Protocols.DirectoryControl
  implements: []
  inheritedMembers:
  - System.DirectoryServices.Protocols.DirectoryControl.IsCritical
  - System.DirectoryServices.Protocols.DirectoryControl.ServerSide
  - System.DirectoryServices.Protocols.DirectoryControl.Type
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  langs:
  - csharp
  name: CrossDomainMoveControl()
  nameWithType: CrossDomainMoveControl.CrossDomainMoveControl()
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.CrossDomainMoveControl()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "CrossDomainMoveControl コンス トラクターのインスタンスを作成する、 <xref href=&quot;System.DirectoryServices.Protocols.CrossDomainMoveControl&quot;> </xref>クラスです。"
  syntax:
    content: public CrossDomainMoveControl ();
    parameters: []
  overload: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  langs:
  - csharp
  name: CrossDomainMoveControl(String)
  nameWithType: CrossDomainMoveControl.CrossDomainMoveControl(String)
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.CrossDomainMoveControl(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "CrossDomainMoveControl コンス トラクターのインスタンスを作成する、 <xref href=&quot;System.DirectoryServices.Protocols.CrossDomainMoveControl&quot;> </xref>クラス、指定したターゲット ドメインを使用します。"
  syntax:
    content: public CrossDomainMoveControl (string targetDomainController);
    parameters:
    - id: targetDomainController
      type: System.String
      description: "宛先ドメイン コントローラの DNS 名。"
  overload: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue
  id: GetValue
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  langs:
  - csharp
  name: GetValue()
  nameWithType: CrossDomainMoveControl.GetValue()
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "GetValue メソッドのバイナリ表現を返します<xref href=&quot;System.DirectoryServices.Protocols.CrossDomainMoveControl&quot;></xref>です。"
  syntax:
    content: public override byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "バイナリ表現<xref href=&quot;System.DirectoryServices.Protocols.CrossDomainMoveControl&quot;></xref>です。"
  overload: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController
  id: TargetDomainController
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  langs:
  - csharp
  name: TargetDomainController
  nameWithType: CrossDomainMoveControl.TargetDomainController
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "TargetDomainController プロパティを取得または移行先のドメイン コント ローラー (DC) の DNS 名を設定します。"
  syntax:
    content: public string TargetDomainController { get; set; }
    return:
      type: System.String
      description: "宛先 DC の DNS 名。"
  overload: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.Protocols.DirectoryControl
  isExternal: false
  name: System.DirectoryServices.Protocols.DirectoryControl
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: CrossDomainMoveControl()
  nameWithType: CrossDomainMoveControl.CrossDomainMoveControl()
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.CrossDomainMoveControl()
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: CrossDomainMoveControl(String)
  nameWithType: CrossDomainMoveControl.CrossDomainMoveControl(String)
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.CrossDomainMoveControl(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: GetValue()
  nameWithType: CrossDomainMoveControl.GetValue()
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: TargetDomainController
  nameWithType: CrossDomainMoveControl.TargetDomainController
  fullName: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor*
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: CrossDomainMoveControl
  nameWithType: CrossDomainMoveControl.CrossDomainMoveControl
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue*
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: GetValue
  nameWithType: CrossDomainMoveControl.GetValue
- uid: System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController*
  parent: System.DirectoryServices.Protocols.CrossDomainMoveControl
  isExternal: false
  name: TargetDomainController
  nameWithType: CrossDomainMoveControl.TargetDomainController
