### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.GridViewColumn
  id: GridViewColumn
  children:
  - System.Windows.Controls.GridViewColumn.#ctor
  - System.Windows.Controls.GridViewColumn.ActualWidth
  - System.Windows.Controls.GridViewColumn.CellTemplate
  - System.Windows.Controls.GridViewColumn.CellTemplateProperty
  - System.Windows.Controls.GridViewColumn.CellTemplateSelector
  - System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty
  - System.Windows.Controls.GridViewColumn.DisplayMemberBinding
  - System.Windows.Controls.GridViewColumn.Header
  - System.Windows.Controls.GridViewColumn.HeaderContainerStyle
  - System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty
  - System.Windows.Controls.GridViewColumn.HeaderProperty
  - System.Windows.Controls.GridViewColumn.HeaderStringFormat
  - System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty
  - System.Windows.Controls.GridViewColumn.HeaderTemplate
  - System.Windows.Controls.GridViewColumn.HeaderTemplateProperty
  - System.Windows.Controls.GridViewColumn.HeaderTemplateSelector
  - System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty
  - System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)
  - System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Controls.GridViewColumn.ToString
  - System.Windows.Controls.GridViewColumn.Width
  - System.Windows.Controls.GridViewColumn.WidthProperty
  langs:
  - csharp
  name: GridViewColumn
  nameWithType: GridViewColumn
  fullName: System.Windows.Controls.GridViewColumn
  type: Class
  summary: "データを表示する列を表します。"
  remarks: "GridViewColumn を使って、<xref:System.Windows.Controls.GridView>データの列を表示する表示モード</xref:System.Windows.Controls.GridView>。 <xref:System.Windows.Controls.ListView>を実装する、<xref:System.Windows.Controls.GridView>表示モードでは、列のデータを提供します</xref:System.Windows.Controls.GridView></xref:System.Windows.Controls.ListView>。 データ バインディングを使用するには、GridViewColumn のデータを指定します。       使用することができます、<xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>列に表示するデータを定義するプロパティ</xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>。 一部としてデータを定義することも、<xref:System.Windows.DataTemplate>で指定された、<xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>プロパティ</xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A></xref:System.Windows.DataTemplate>。 異なるセルがある別の<xref:System.Windows.DataTemplate>オブジェクト、<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>プロパティが<xref:System.Windows.Controls.DataTemplateSelector>。</xref:System.Windows.Controls.DataTemplateSelector>を指定</xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>する</xref:System.Windows.DataTemplate>場合 以下に示すから最も高い優先順位の順にここでは、前述のプロパティが低い方:- <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>- <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>- <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>、GridViewColumn クラスには、定義し、列の列ヘッダーのカスタマイズに使用できるプロパティも含まれています</xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A></xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A></xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>。 <xref:System.Windows.Controls.GridViewColumn.Header%2A>プロパティは、列ヘッダーの内容を定義できます</xref:System.Windows.Controls.GridViewColumn.Header%2A>。 などの他のプロパティ<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>と<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A>コンテンツとの列ヘッダーのスタイルも指定できます</xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A></xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>。 これらのプロパティの一部も上にある<xref:System.Windows.Controls.GridViewColumnHeader>クラス</xref:System.Windows.Controls.GridViewColumnHeader>などの他のクラス スタイルおよび列ヘッダー、およびこれらのプロパティの優先順位の順序に関する情報について、テンプレート定義に使用されるプロパティの詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](~/add/includes/ajax-current-ext-md.md)です。       GridViewColumn クラスを実装して、<xref:System.ComponentModel.INotifyPropertyChanged>インターフェイス</xref:System.ComponentModel.INotifyPropertyChanged>。 このインターフェイスには、プロパティの値に変更がなどが発生したときに発生するイベントをサブスクライブする機能が用意されています、<xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A>プロパティの値</xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A>。"
  example:
  - "The following example shows how to define GridViewColumn objects for a <xref:System.Windows.Controls.GridView>.  \n  \n [!code-xml[ListViewSnips#GridViewColumnContent](~/add/codesnippet/xaml/ListViewSnips/Window1.xaml#gridviewcolumncontent)]"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.ContentProperty("Header")]

      [System.Windows.StyleTypedProperty(Property="HeaderContainerStyle", StyleTargetType=typeof(System.Windows.Controls.GridViewColumnHeader))]

      public class GridViewColumn : System.Windows.DependencyObject, System.ComponentModel.INotifyPropertyChanged
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: GridViewColumn()
  nameWithType: GridViewColumn.GridViewColumn()
  fullName: System.Windows.Controls.GridViewColumn.GridViewColumn()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;> </xref>クラスです。"
  syntax:
    content: public GridViewColumn ();
    parameters: []
  overload: System.Windows.Controls.GridViewColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.ActualWidth
  id: ActualWidth
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: ActualWidth
  nameWithType: GridViewColumn.ActualWidth
  fullName: System.Windows.Controls.GridViewColumn.ActualWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "実際の幅を取得、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;></xref>です。"
  remarks: "このプロパティを使用しての現在の幅を取得することができます、<xref:System.Windows.Controls.GridViewColumn>とき<xref:System.Windows.Controls.GridViewColumn.Width%2A><xref:System.Double.NaN?displayProperty=fullName>.</xref:System.Double.NaN?displayProperty=fullName>にプロパティが設定されている</xref:System.Windows.Controls.GridViewColumn.Width%2A></xref:System.Windows.Controls.GridViewColumn> 値<xref:System.Double.NaN?displayProperty=fullName>の<xref:System.Windows.Controls.GridViewColumn.Width%2A>プロパティは、列のサイズが最大に列ヘッダーが表示される項目に対応できることを指定します</xref:System.Windows.Controls.GridViewColumn.Width%2A></xref:System.Double.NaN?displayProperty=fullName>。       異なり<xref:System.Windows.FrameworkElement.ActualWidth%2A?displayProperty=fullName>、ActualWidth は依存関係プロパティではありません</xref:System.Windows.FrameworkElement.ActualWidth%2A?displayProperty=fullName>。"
  syntax:
    content: public double ActualWidth { get; }
    return:
      type: System.Double
      description: "列の現在の幅。 既定では&0; (0.0) です。"
  overload: System.Windows.Controls.GridViewColumn.ActualWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.CellTemplate
  id: CellTemplate
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: CellTemplate
  nameWithType: GridViewColumn.CellTemplate
  fullName: System.Windows.Controls.GridViewColumn.CellTemplate
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または使用して列のセルの内容を表示するテンプレートを設定します。"
  remarks: "次のプロパティへのバインドすべて列のセルの内容を表示および以下に示しますを高いものから、優先順位の順に最下位:- <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>- CellTemplate - <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> <a name=&quot;xamlAttributeUsage_CellTemplate&quot;> </a> ## XAML 属性の使用```   <object CellTemplate=&quot;{ResourceExtension TemplateResourceKey}&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_CellTemplate&quot;> </a> ## XAML プロパティ要素の使用<a name=&quot;xamlValues_CellTemplate&quot;> </a> ## XAML 値*ResourceExtension* 、次のいずれかの: `StaticResource`、または`DynamicResource`            </xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A></xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>。 参照してください[XAML リソース](~/add/includes/ajax-current-ext-md.md)です。       *TemplateResourceKey*要求されているテンプレートを識別するキー。 このキーは<xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary>で既存のリソース      > [!NOTE] > プロパティ要素構文は技術的に可能ですが、推奨されません。 参照してください[インライン スタイルとテンプレート](~/add/includes/ajax-current-ext-md.md)です。 バインディングを使用して参照かも可能ですが、一般的でないです。      <a name=&quot;dependencyPropertyInfo_CellTemplate&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.CellTemplateProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Controls.GridViewColumn.CellTemplateProperty>"
  example:
  - "The following example shows how to specify a <xref:System.Windows.DataTemplate> to use to display a <xref:System.Windows.Controls.GridViewColumn>.  \n  \n [!code-xml[ListViewTemplate#GridViewCellTemplate](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewcelltemplate)]  \n  \n [!code-xml[ListViewTemplate#CellTemplateProperty](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#celltemplateproperty)]"
  syntax:
    content: public System.Windows.DataTemplate CellTemplate { get; set; }
    return:
      type: System.Windows.DataTemplate
      description: "A <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>列のセルの書式を設定するために使用されます。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.CellTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.CellTemplateProperty
  id: CellTemplateProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: CellTemplateProperty
  nameWithType: GridViewColumn.CellTemplateProperty
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.CellTemplate*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.CellTemplate*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CellTemplateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.CellTemplateSelector
  id: CellTemplateSelector
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: CellTemplateSelector
  nameWithType: GridViewColumn.CellTemplateSelector
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定、 <xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref>テンプレートを使用して、列のセルを表示するかを決定します。"
  remarks: "次のプロパティへのバインドすべて列のセルの内容を表示および以下に示しますを高いものから、優先順位の順に最下位:- <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>- <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>-CellTemplateSelector <a name=&quot;xamlAttributeUsage_CellTemplateSelector&quot;> </a> ## XAML 属性の使用```   <object CellTemplateSelector=&quot;{ResourceExtension DataTemplateSelectorClassKey}&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_CellTemplateSelector&quot;> </a> ## XAML プロパティ要素の使用```   <object>     <object.CellTemplateSelector>       <MyDataTemplateSelectorImplementation .../>     </object.CellTemplateSelector>   </object>   ``` <a name=&quot;xamlValues_CellTemplateSelector&quot;> </a> ## XAML 値*MyDataTemplateSelectorImplementation*から派生したクラス<xref:System.Windows.Controls.DataTemplateSelector>実用的を実装する<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>をオーバーライドします</xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A></xref:System.Windows.Controls.DataTemplateSelector>            </xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A></xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間と WPF XAML のマッピングの Namespace](~/add/includes/ajax-current-ext-md.md)です。       *ResourceExtension* 、次のいずれかの: `StaticResource`、または`DynamicResource`です。 参照してください[XAML リソース](~/add/includes/ajax-current-ext-md.md)です。       *DataTemplateSelectorClassKey*要求されているセレクターの実装を識別するキー。 このキーは、実際に実装する派生クラス<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>をオーバーライドします</xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間と WPF XAML のマッピングの Namespace](../Topic/XAML%20Namespaces%20and%20Namespace%20Mapping%20for%20WPF%20XAML.md)です。 インスタンスを追加することができますもプログラムによって、<xref:System.Windows.Controls.DataTemplateSelector>リソース ディクショナリへのリソースとしてのクラス</xref:System.Windows.Controls.DataTemplateSelector>。      <a name=&quot;dependencyPropertyInfo_CellTemplateSelector&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty>"
  example:
  - "The following example shows how to set the CellTemplateSelector property.  \n  \n [!code-xml[ListViewSnips#GridViewColumnContent](~/add/codesnippet/xaml/ListViewSnips/Window1.xaml#gridviewcolumncontent)]"
  syntax:
    content: public System.Windows.Controls.DataTemplateSelector CellTemplateSelector { get; set; }
    return:
      type: System.Windows.Controls.DataTemplateSelector
      description: "A <xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref>を提供する<xref href=&quot;System.Windows.DataTemplate&quot;></xref>列のセルを選択します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.CellTemplateSelector*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty
  id: CellTemplateSelectorProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: CellTemplateSelectorProperty
  nameWithType: GridViewColumn.CellTemplateSelectorProperty
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CellTemplateSelectorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.DisplayMemberBinding
  id: DisplayMemberBinding
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: DisplayMemberBinding
  nameWithType: GridViewColumn.DisplayMemberBinding
  fullName: System.Windows.Controls.GridViewColumn.DisplayMemberBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得またはこの列にバインドするデータ項目を設定します。"
  remarks: "DisplayMemberBinding プロパティは、列がその型の値のセットが表示されるように、データ ソースからデータを列の種類を関連付けます。 データ ソース オブジェクトの例として、<xref:System.Windows.Data.XmlDataProvider>オブジェクトおよび<xref:System.Windows.Data.ObjectDataProvider>オブジェクト</xref:System.Windows.Data.ObjectDataProvider></xref:System.Windows.Data.XmlDataProvider>。       次のプロパティ コンテンツと列のセルのスタイルの定義に使用され、ここに表示を高いものから、優先順位の順最小: - DisplayMemberBinding - <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>- <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A></xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> </xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>"
  example:
  - "The following example shows how to set the DisplayMemberBinding property.  \n  \n [!code-xml[ListViewCode#GridViewColumnProperties](~/add/codesnippet/xaml/ListViewCode/Window1.xaml#gridviewcolumnproperties)]\n [!code-cs[ListViewCode#GridViewColumnProperties](~/add/codesnippet/csharp/ListViewCode/Window1.xaml.cs#gridviewcolumnproperties)]\n [!code-vb[ListViewCode#GridViewColumnProperties](~/add/codesnippet/visualbasic/listviewcode/window1.xaml.vb#gridviewcolumnproperties)]"
  syntax:
    content: public System.Windows.Data.BindingBase DisplayMemberBinding { get; set; }
    return:
      type: System.Windows.Data.BindingBase
      description: "列に表示される、指定されたデータ項目の種類。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.DisplayMemberBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.Header
  id: Header
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: Header
  nameWithType: GridViewColumn.Header
  fullName: System.Windows.Controls.GridViewColumn.Header
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定のヘッダーの内容、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;></xref>です。"
  remarks: "The Header property can be set to an object that is as simple as a `string`, or to an object that is as complex as a <xref:System.Windows.Controls.StackPanel> that has embedded content. The default column header in a <xref:System.Windows.Controls.GridView> view mode is styled as a button that is derived from <xref:System.Windows.Controls.Primitives.ButtonBase> and that has the content of the Header property as its child. To specify a template for the column header, see the <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> or <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> property descriptions.  \n  \n Properties that define the content, layout, and style of a column header are found on many related classes, and some of these properties have functionality that is similar or the same. For more information, see [GridView Column Header Styles and Templates Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n<a name=\"dependencyPropertyInfo_Header\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Controls.GridViewColumn.HeaderProperty>|  \n|Metadata properties set to `true`|None|  \n  \n<a name=\"xamlAttributeUsage_Header\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Header=\"string\"/>  \n```  \n  \n<a name=\"xamlPropertyElementUsage_Header\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <HeaderContentObject.../>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Header\"></a>   \n## XAML Values  \n \\<*HeaderContentObject*.../>  \n A single element. This element can have child elements if the *HeaderContentObject* content model allows them.  \n  \n## Example  \n The following example shows how to set the Header property.  \n  \n [!code-xml[ListViewCode#GridViewColumnProperties](~/add/codesnippet/xaml/ListViewCode/Window1.xaml#gridviewcolumnproperties)]\n [!code-cs[ListViewCode#GridViewColumnProperties](~/add/codesnippet/csharp/ListViewCode/Window1.xaml.cs#gridviewcolumnproperties)]\n [!code-vb[ListViewCode#GridViewColumnProperties](~/add/codesnippet/visualbasic/listviewcode/window1.xaml.vb#gridviewcolumnproperties)]"
  syntax:
    content: public object Header { get; set; }
    return:
      type: System.Object
      description: "列ヘッダーを使用するオブジェクト。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderContainerStyle
  id: HeaderContainerStyle
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderContainerStyle
  nameWithType: GridViewColumn.HeaderContainerStyle
  fullName: System.Windows.Controls.GridViewColumn.HeaderContainerStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定のヘッダーを使用するスタイル、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;></xref>です。"
  remarks: "HeaderContainerStyle プロパティおよび<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>プロパティには、プロパティ値、および列ヘッダーの内容のビジュアル ツリーを一緒を定義できます</xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>。 HeaderContainerStyle プロパティが、 <xref:System.Windows.Controls.ControlTemplate>。</xref:System.Windows.Controls.ControlTemplate>を定義することによってビジュアル ツリーを指定できますも       多くの関連するクラスで、内容、レイアウト、および列ヘッダーのスタイルを定義するプロパティが検出され、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](~/add/includes/ajax-current-ext-md.md)です。       スタイルを設定すると、いくつかの制限が適用されます。 詳細については、次を参照してください。、[スタイルとテンプレート](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlAttributeUsage_HeaderContainerStyle&quot;></a>## XAML 属性の使用```   <object HeaderContainerStyle=&quot;{ResourceExtension StyleResourceKey}&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_HeaderContainerStyle&quot;> </a> ## XAML プロパティ要素の使用<a name=&quot;xamlValues_HeaderContainerStyle&quot;> </a> ## XAML 値*ResourceExtension* 、次のいずれかの: `StaticResource`、または`DynamicResource`です。       参照してください[XAML リソース](~/add/includes/ajax-current-ext-md.md)です。       *StyleResourceKey*要求されているスタイルを識別するキー。 このキーは<xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary>で既存のリソース      > [!NOTE] > プロパティ要素構文は技術的に可能ですが、推奨されません。 参照してください[インライン スタイルとテンプレート](~/add/includes/ajax-current-ext-md.md)です。 バインディングを使用して参照かも可能ですが、一般的でないです。      <a name=&quot;dependencyPropertyInfo_HeaderContainerStyle&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty>"
  example:
  - "The following example shows how to define a HeaderContainerStyle that specifies display properties for a column header.  \n  \n [!code-xml[ListViewTemplate#GridViewHeaderStyle](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewheaderstyle)]  \n  \n [!code-xml[ListViewTemplate#GridViewColumnTemplate](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewcolumntemplate)]  \n  \n The following example shows how to define a HeaderContainerStyle that defines display properties by using a <xref:System.Windows.Controls.ControlTemplate>.  \n  \n [!code-xml[ListViewTemplate#GridViewColumnHCTwithControlTemplatePart1](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewcolumnhctwithcontroltemplatepart1)]  \n  \n [!code-xml[ListViewTemplate#GridViewColumnHCTwithControlTemplatePart2](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewcolumnhctwithcontroltemplatepart2)]"
  syntax:
    content: public System.Windows.Style HeaderContainerStyle { get; set; }
    return:
      type: System.Windows.Style
      description: "<xref href=&quot;System.Windows.Style&quot;> </xref>列ヘッダーの表示プロパティを定義します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.HeaderContainerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty
  id: HeaderContainerStyleProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderContainerStyleProperty
  nameWithType: GridViewColumn.HeaderContainerStyleProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty HeaderContainerStyleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderProperty
  id: HeaderProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderProperty
  nameWithType: GridViewColumn.HeaderProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.Header*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.Header*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.Header%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.Header%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty HeaderProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderStringFormat
  id: HeaderStringFormat
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderStringFormat
  nameWithType: GridViewColumn.HeaderStringFormat
  fullName: System.Windows.Controls.GridViewColumn.HeaderStringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または書式設定する方法を指定する複合文字列を設定、<xref:System.Windows.Controls.GridViewColumn.Header*>プロパティを文字列として表示されている場合</xref:System.Windows.Controls.GridViewColumn.Header*>。"
  remarks: "場合、 <xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A?displayProperty=fullName>、 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A?displayProperty=fullName>、または<xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate%2A?displayProperty=fullName>プロパティが設定されて、このプロパティは無視されます</xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate%2A?displayProperty=fullName></xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A?displayProperty=fullName></xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A?displayProperty=fullName>。       いくつかのプロパティを使用すると、列ヘッダーの形式を指定します。  1 つ以上のプロパティが設定されている場合、列ヘッダーを最高の優先順位を持つプロパティの値が設定されます。 列の形式は、いくつかの種類を設定できます。 次の一覧を優先順位の低いものから順番、列ヘッダーを書式設定に使用できるプロパティを示しています - <xref:System.Windows.Controls.GridView.ColumnHeaderStringFormat%2A?displayProperty=fullName>- <xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat%2A?displayProperty=fullName>- HeaderStringFormat <a name=&quot;dependencyPropertyInfo_HeaderStringFormat&quot;> </a> ## 依存プロパティ情報 | | |。  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty>|  |メタデータ プロパティに設定**true**|None|</xref:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty></xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat%2A?displayProperty=fullName></xref:System.Windows.Controls.GridView.ColumnHeaderStringFormat%2A?displayProperty=fullName>"
  syntax:
    content: public string HeaderStringFormat { get; set; }
    return:
      type: System.String
      description: "書式設定する方法を指定する複合文字列、<xref:System.Windows.Controls.GridViewColumn.Header*>プロパティを文字列として表示されている場合</xref:System.Windows.Controls.GridViewColumn.Header*>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.HeaderStringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty
  id: HeaderStringFormatProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderStringFormatProperty
  nameWithType: GridViewColumn.HeaderStringFormatProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplate
  id: HeaderTemplate
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: GridViewColumn.HeaderTemplate
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplate
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または使用して、列ヘッダーの内容を表示するテンプレートを設定します。"
  remarks: "両方の<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A>プロパティと、HeaderTemplate が設定、HeaderTemplate プロパティが優先されます</xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A>。       HeaderTemplate 後または<xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A>が指定されて、 <xref:System.Windows.Controls.GridViewColumn>、変更することはできません</xref:System.Windows.Controls.GridViewColumn></xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A>。       <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A?displayProperty=fullName>。</xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A?displayProperty=fullName>の一部として</xref:System.Windows.Controls.ControlTemplate>指定することによって、列ヘッダーの表示を定義することもできます。       多くの関連クラスの内容、レイアウト、および列ヘッダーのスタイルを定義するプロパティが検出され、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlAttributeUsage_HeaderTemplate&quot;></a>## XAML 属性の使用```   <object HeaderTemplate=&quot;{ResourceExtension TemplateResourceKey}&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_HeaderTemplate&quot;> </a> ## XAML プロパティ要素の使用<a name=&quot;xamlValues_HeaderTemplate&quot;> </a> ## XAML 値*ResourceExtension* 、次のいずれかの: `StaticResource`、または`DynamicResource`です。       参照してください[XAML リソース](~/add/includes/ajax-current-ext-md.md)です。       *TemplateResourceKey*要求されているテンプレートを識別するキー。 このキーは<xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary>で既存のリソース      > [!NOTE] > プロパティ要素構文は技術的に可能ですが、推奨されません。 参照してください[インライン スタイルとテンプレート](~/add/includes/ajax-current-ext-md.md)です。 バインディングを使用して参照かも可能ですが、一般的でないです。      <a name=&quot;dependencyPropertyInfo_HeaderTemplate&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty>"
  example:
  - "The following example shows how to specify a template to use to display the header of a <xref:System.Windows.Controls.GridViewColumn>.  \n  \n [!code-xml[ListViewTemplate#GridViewHeaderTemplate](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewheadertemplate)]  \n  \n [!code-xml[ListViewTemplate#GridViewColumnTemplate](~/add/codesnippet/xaml/listviewtemplate/window1.xaml#gridviewcolumntemplate)]"
  syntax:
    content: public System.Windows.DataTemplate HeaderTemplate { get; set; }
    return:
      type: System.Windows.DataTemplate
      description: "A <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>を使用して、列ヘッダーを表示します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateProperty
  id: HeaderTemplateProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderTemplateProperty
  nameWithType: GridViewColumn.HeaderTemplateProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderTemplate*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector
  id: HeaderTemplateSelector
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderTemplateSelector
  nameWithType: GridViewColumn.HeaderTemplateSelector
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または設定、 <xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref>列ヘッダーの表示に使用するテンプレートを選択するためのロジックを提供します。"
  remarks: "場合 HeaderTemplateSelector プロパティおよび<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>プロパティが設定されている、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>プロパティが優先されます</xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A></xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>。       多くの関連クラスの内容、レイアウト、および列ヘッダーのスタイルを定義するプロパティが検出され、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlAttributeUsage_HeaderTemplateSelector&quot;></a>## XAML 属性の使用```   <object HeaderTemplateSelector=&quot;{ResourceExtension DataTemplateSelectorClassKey}&quot;/>   ``` <a name=&quot;xamlPropertyElementUsage_HeaderTemplateSelector&quot;> </a> ## XAML プロパティ要素の使用```   <object>     <object.HeaderTemplateSelector>       <MyDataTemplateSelectorImplementation .../>     </object.HeaderTemplateSelector>   </object>   ``` <a name=&quot;xamlValues_HeaderTemplateSelector&quot;> </a> ## XAML 値*ResourceExtension* 、次のいずれかの: `StaticResource`、または`DynamicResource`です。             参照してください[XAML リソース](~/add/includes/ajax-current-ext-md.md)です。       *DataTemplateSelectorClassKey*要求されているセレクターの実装を識別するキー。 このキーは、実際に実装する派生クラス<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>をオーバーライドします</xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間と WPF XAML のマッピングの Namespace](~/add/includes/ajax-current-ext-md.md)です。 インスタンスを追加することができますもプログラムによって、<xref:System.Windows.Controls.DataTemplateSelector>リソース ディクショナリへのリソースとしてのクラス</xref:System.Windows.Controls.DataTemplateSelector>。       *MyDataTemplateSelectorImplementation*から派生したクラス<xref:System.Windows.Controls.DataTemplateSelector>実用的を実装する<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>をオーバーライドします</xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A></xref:System.Windows.Controls.DataTemplateSelector>。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間と WPF XAML のマッピングの Namespace](../Topic/XAML%20Namespaces%20and%20Namespace%20Mapping%20for%20WPF%20XAML.md)です。      <a name=&quot;dependencyPropertyInfo_HeaderTemplateSelector&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty>"
  syntax:
    content: public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }
    return:
      type: System.Windows.Controls.DataTemplateSelector
      description: "<xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref>ごとのデータ テンプレートの選択を提供するオブジェクト<xref href=&quot;System.Windows.Controls.GridViewColumn&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty
  id: HeaderTemplateSelectorProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: HeaderTemplateSelectorProperty
  nameWithType: GridViewColumn.HeaderTemplateSelectorProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)
  id: OnHeaderStringFormatChanged(System.String,System.String)
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: OnHeaderStringFormatChanged(String,String)
  nameWithType: GridViewColumn.OnHeaderStringFormatChanged(String,String)
  fullName: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "発生したときに、<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>プロパティが変更された</xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>。"
  syntax:
    content: protected virtual void OnHeaderStringFormatChanged (string oldHeaderStringFormat, string newHeaderStringFormat);
    parameters:
    - id: oldHeaderStringFormat
      type: System.String
      description: "元の値、<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>。"
    - id: newHeaderStringFormat
      type: System.String
      description: "新しい値、<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>プロパティ</xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat*>。"
  overload: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: GridViewColumn.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Controls.GridViewColumn.OnPropertyChanged(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "発生させる、 &lt;xref:System.Windows.Controls.GridViewColumn.System%23ComponentModel%23INotifyPropertyChanged%23PropertyChanged&gt;イベント。"
  syntax:
    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "イベントのデータ。"
  overload: System.Windows.Controls.GridViewColumn.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.ToString
  id: ToString
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: ToString()
  nameWithType: GridViewColumn.ToString()
  fullName: System.Windows.Controls.GridViewColumn.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "文字列表現を作成、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;></xref>です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "オブジェクトを識別する文字列、 <xref href=&quot;System.Windows.Controls.GridViewColumn&quot;> </xref>オブジェクトし、の値を表示、<xref:System.Windows.Controls.GridViewColumn.Header*>プロパティ</xref:System.Windows.Controls.GridViewColumn.Header*>。"
  overload: System.Windows.Controls.GridViewColumn.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.Width
  id: Width
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: Width
  nameWithType: GridViewColumn.Width
  fullName: System.Windows.Controls.GridViewColumn.Width
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "取得または列の幅を設定します。"
  remarks: "このプロパティ設定されている場合は、正確な幅を取得<xref:System.Double?displayProperty=fullName>を使用して、<xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A>プロパティ</xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A></xref:System.Double?displayProperty=fullName>。      <a name=&quot;xamlAttributeUsage_Width&quot;></a>## XAML 属性の使用```   <object Width=&quot;double&quot;/>   - or –   <object Width=&quot;qualifiedDouble&quot;/>   - or -   <object Width=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_Width&quot;> </a> ## XAML 値*二重*<xref:System.Double>の文字列表現を<xref:System.Double>値</xref:System.Double></xref:System.Double>。           これは、[!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)]測定します。 明示的に、文字列では、小数点を含める必要がありますされません。 値のインスタンス`1`は許容されます。       *qualifiedDouble* A*二重*値、上記と続けて次の単位の宣言文字列のいずれかの: `px`、 `in`、 `cm`、`pt`です。       `px`(既定値) は[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]`in`インチ; に 1 96px を = =`cm`センチメートル; は、1cm==(96/2.54) px`pt`ポイント; 1pt==(96/72) px`Auto`自動動作を有効にします。        「解説」を参照してください。      <a name=&quot;dependencyPropertyInfo_Width&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Controls.GridViewColumn.WidthProperty>|  |メタデータ プロパティに設定`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Controls.GridViewColumn.WidthProperty>"
  example:
  - "The following example shows how to set the Width property.  \n  \n [!code-xml[ListViewCode#GridViewColumnProperties](~/add/codesnippet/xaml/ListViewCode/Window1.xaml#gridviewcolumnproperties)]\n [!code-cs[ListViewCode#GridViewColumnProperties](~/add/codesnippet/csharp/ListViewCode/Window1.xaml.cs#gridviewcolumnproperties)]\n [!code-vb[ListViewCode#GridViewColumnProperties](~/add/codesnippet/visualbasic/listviewcode/window1.xaml.vb#gridviewcolumnproperties)]"
  syntax:
    content: public double Width { get; set; }
    return:
      type: System.Double
      description: "列の幅。 既定値は&lt;xref:System.Double?displayProperty=fullName&gt;する、自動的に列の最大サイズ項目は、列ヘッダーではありません。"
  overload: System.Windows.Controls.GridViewColumn.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.GridViewColumn.WidthProperty
  id: WidthProperty
  parent: System.Windows.Controls.GridViewColumn
  langs:
  - csharp
  name: WidthProperty
  nameWithType: GridViewColumn.WidthProperty
  fullName: System.Windows.Controls.GridViewColumn.WidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "識別、<xref:System.Windows.Controls.GridViewColumn.Width*>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.Width*>。"
  remarks: "識別子、<xref:System.Windows.Controls.GridViewColumn.Width%2A>依存関係プロパティ</xref:System.Windows.Controls.GridViewColumn.Width%2A>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty WidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.Controls.GridViewColumn.#ctor
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: GridViewColumn()
  nameWithType: GridViewColumn.GridViewColumn()
  fullName: System.Windows.Controls.GridViewColumn.GridViewColumn()
- uid: System.Windows.Controls.GridViewColumn.ActualWidth
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: ActualWidth
  nameWithType: GridViewColumn.ActualWidth
  fullName: System.Windows.Controls.GridViewColumn.ActualWidth
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.GridViewColumn.CellTemplate
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplate
  nameWithType: GridViewColumn.CellTemplate
  fullName: System.Windows.Controls.GridViewColumn.CellTemplate
- uid: System.Windows.DataTemplate
  parent: System.Windows
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
- uid: System.Windows.Controls.GridViewColumn.CellTemplateProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplateProperty
  nameWithType: GridViewColumn.CellTemplateProperty
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.GridViewColumn.CellTemplateSelector
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplateSelector
  nameWithType: GridViewColumn.CellTemplateSelector
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateSelector
- uid: System.Windows.Controls.DataTemplateSelector
  parent: System.Windows.Controls
  isExternal: false
  name: DataTemplateSelector
  nameWithType: DataTemplateSelector
  fullName: System.Windows.Controls.DataTemplateSelector
- uid: System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplateSelectorProperty
  nameWithType: GridViewColumn.CellTemplateSelectorProperty
  fullName: System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty
- uid: System.Windows.Controls.GridViewColumn.DisplayMemberBinding
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: DisplayMemberBinding
  nameWithType: GridViewColumn.DisplayMemberBinding
  fullName: System.Windows.Controls.GridViewColumn.DisplayMemberBinding
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.Controls.GridViewColumn.Header
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: Header
  nameWithType: GridViewColumn.Header
  fullName: System.Windows.Controls.GridViewColumn.Header
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.GridViewColumn.HeaderContainerStyle
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderContainerStyle
  nameWithType: GridViewColumn.HeaderContainerStyle
  fullName: System.Windows.Controls.GridViewColumn.HeaderContainerStyle
- uid: System.Windows.Style
  parent: System.Windows
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderContainerStyleProperty
  nameWithType: GridViewColumn.HeaderContainerStyleProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty
- uid: System.Windows.Controls.GridViewColumn.HeaderProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderProperty
  nameWithType: GridViewColumn.HeaderProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderProperty
- uid: System.Windows.Controls.GridViewColumn.HeaderStringFormat
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderStringFormat
  nameWithType: GridViewColumn.HeaderStringFormat
  fullName: System.Windows.Controls.GridViewColumn.HeaderStringFormat
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderStringFormatProperty
  nameWithType: GridViewColumn.HeaderStringFormatProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplate
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplate
  nameWithType: GridViewColumn.HeaderTemplate
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplate
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplateProperty
  nameWithType: GridViewColumn.HeaderTemplateProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateProperty
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplateSelector
  nameWithType: GridViewColumn.HeaderTemplateSelector
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplateSelectorProperty
  nameWithType: GridViewColumn.HeaderTemplateSelectorProperty
  fullName: System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty
- uid: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: OnHeaderStringFormatChanged(String,String)
  nameWithType: GridViewColumn.OnHeaderStringFormatChanged(String,String)
  fullName: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(String,String)
- uid: System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: GridViewColumn.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Controls.GridViewColumn.OnPropertyChanged(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Windows.Controls.GridViewColumn.ToString
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: ToString()
  nameWithType: GridViewColumn.ToString()
  fullName: System.Windows.Controls.GridViewColumn.ToString()
- uid: System.Windows.Controls.GridViewColumn.Width
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: Width
  nameWithType: GridViewColumn.Width
  fullName: System.Windows.Controls.GridViewColumn.Width
- uid: System.Windows.Controls.GridViewColumn.WidthProperty
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: WidthProperty
  nameWithType: GridViewColumn.WidthProperty
  fullName: System.Windows.Controls.GridViewColumn.WidthProperty
- uid: System.Windows.Controls.GridViewColumn.#ctor*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: GridViewColumn
  nameWithType: GridViewColumn.GridViewColumn
- uid: System.Windows.Controls.GridViewColumn.ActualWidth*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: ActualWidth
  nameWithType: GridViewColumn.ActualWidth
- uid: System.Windows.Controls.GridViewColumn.CellTemplate*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplate
  nameWithType: GridViewColumn.CellTemplate
- uid: System.Windows.Controls.GridViewColumn.CellTemplateSelector*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: CellTemplateSelector
  nameWithType: GridViewColumn.CellTemplateSelector
- uid: System.Windows.Controls.GridViewColumn.DisplayMemberBinding*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: DisplayMemberBinding
  nameWithType: GridViewColumn.DisplayMemberBinding
- uid: System.Windows.Controls.GridViewColumn.Header*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: Header
  nameWithType: GridViewColumn.Header
- uid: System.Windows.Controls.GridViewColumn.HeaderContainerStyle*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderContainerStyle
  nameWithType: GridViewColumn.HeaderContainerStyle
- uid: System.Windows.Controls.GridViewColumn.HeaderStringFormat*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderStringFormat
  nameWithType: GridViewColumn.HeaderStringFormat
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplate*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplate
  nameWithType: GridViewColumn.HeaderTemplate
- uid: System.Windows.Controls.GridViewColumn.HeaderTemplateSelector*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: HeaderTemplateSelector
  nameWithType: GridViewColumn.HeaderTemplateSelector
- uid: System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: OnHeaderStringFormatChanged
  nameWithType: GridViewColumn.OnHeaderStringFormatChanged
- uid: System.Windows.Controls.GridViewColumn.OnPropertyChanged*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: OnPropertyChanged
  nameWithType: GridViewColumn.OnPropertyChanged
- uid: System.Windows.Controls.GridViewColumn.ToString*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: ToString
  nameWithType: GridViewColumn.ToString
- uid: System.Windows.Controls.GridViewColumn.Width*
  parent: System.Windows.Controls.GridViewColumn
  isExternal: false
  name: Width
  nameWithType: GridViewColumn.Width
