### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Reference
  id: Reference
  children:
  - System.Security.Cryptography.Xml.Reference.#ctor
  - System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  - System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  - System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.Reference.DigestMethod
  - System.Security.Cryptography.Xml.Reference.DigestValue
  - System.Security.Cryptography.Xml.Reference.GetXml
  - System.Security.Cryptography.Xml.Reference.Id
  - System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.Reference.TransformChain
  - System.Security.Cryptography.Xml.Reference.Type
  - System.Security.Cryptography.Xml.Reference.Uri
  langs:
  - csharp
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
  type: Class
  summary: "表す、 <xref uid=&quot;langword_csharp_&lt;reference&gt;&quot; name=&quot;&lt;reference&gt;&quot; href=&quot;&quot;> </xref> XML 署名の要素。"
  remarks: "参照されたオブジェクトを表す、 `reference`> XML デジタル署名の仕様によって定義された XML デジタル署名の要素。       参照オブジェクトを使用して、次の情報を指定します。-データ オブジェクトの署名に使用されるダイジェスト アルゴリズムです。  この値は必須です。      -UNIFORM Resource Identifier () のデータ オブジェクトに署名します。 URI には、ファイル パスまたは XML ドキュメント内の特定の要素を指定できます。  この値は必須です。      -ダイジェストを生成する前に適用する変換のチェーン。 この値は省略できます。      -署名するオブジェクトの型。  この値は省略できます。      -一意の識別子を使用して、現在の参照`<reference>`要素。  この値は省略できます。       詳細については、 `reference`> 要素を参照してください、W3C の仕様 www.w3.org/TR/xmldsig-core/ にします。"
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the Reference object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_86_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_86_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_86_1.vb)]"
  syntax:
    content: public class Reference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>既定のプロパティを持つクラス。"
  remarks: ''
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_16_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_16_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_16_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_16_2.cpp)]"
  syntax:
    content: public Reference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>指定<xref:System.IO.Stream>.</xref:System.IO.Stream>のハッシュ値を持つクラス"
  remarks: "このコンス トラクター、<xref:System.Security.Cryptography.Xml.Reference>オブジェクトに対応するハッシュ値を`stream`パラメーター</xref:System.Security.Cryptography.Xml.Reference> 。"
  syntax:
    content: public Reference (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>の新しいインスタンスを初期化する<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref></xref:System.IO.Stream> 。"
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>に指定された<xref:System.Uri></xref:System.Uri>クラス"
  remarks: "このコンス トラクター、<xref:System.Security.Cryptography.Xml.Reference>オブジェクトに対する特別な処理を使用して URI でデータに`&quot;&quot;`、 `#xpointer(/)`、および`#xxxx`</xref:System.Security.Cryptography.Xml.Reference>。"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Reference> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_34_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_34_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_34_1.cpp)]"
  syntax:
    content: public Reference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "<xref:System.Uri>の新しいインスタンスを初期化する<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref></xref:System.Uri> 。"
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  id: AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "追加、 <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>ダイジェスト アルゴリズムに渡す前に、データ上で実行される変換のリストにオブジェクト。"
  remarks: "AddTransform メソッドは、変更、`<Transform>`要素および XML デジタル署名の関連付けられているサブ要素です。       変換は、追加された順序で適用されます。 変換が指定されていない場合、必要な最小バージョンの変換が自動的に追加されます。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_2.cpp)]"
  syntax:
    content: public void AddTransform (System.Security.Cryptography.Xml.Transform transform);
    parameters:
    - id: transform
      type: System.Security.Cryptography.Xml.Transform
      description: "変換のリストに追加する変換です。"
  overload: System.Security.Cryptography.Xml.Reference.AddTransform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transform</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  id: DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "ダイジェスト メソッド識別子 URI (Uniform Resource)、現在の取得または設定<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  remarks: "DigestMethod プロパティを表す URI 文字列を使用して、 `DigestMethod`> XML デジタル署名の要素。       ダイジェスト メソッドは<xref:System.Security.Cryptography.Xml.Reference>。</xref:System.Security.Cryptography.Xml.Reference>のハッシュに使用されるアルゴリズムです。 既定のアルゴリズムは<xref:System.Security.Cryptography.SHA1>。</xref:System.Security.Cryptography.SHA1>       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  syntax:
    content: public string DigestMethod { get; set; }
    return:
      type: System.String
      description: "ダイジェスト メソッド、現在の URI <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。 既定値は、&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;です。"
  overload: System.Security.Cryptography.Xml.Reference.DigestMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  id: DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在のダイジェスト値の設定を取得または<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  remarks: "DigestValue プロパティを表すバイト配列を使用して、 `DigestValue`> XML デジタル署名の要素。       DigestValue プロパティにはで記述されるオブジェクトのダイジェストの Base 64 でエンコードされた値が含まれています、<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>プロパティ</xref:System.Security.Cryptography.Xml.Reference.Uri%2A>。       DigestValue プロパティは<xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>。</xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>への呼び出しを行うたびに、自動的に適切な値を設定します。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  syntax:
    content: public byte[] DigestValue { get; set; }
    return:
      type: System.Byte[]
      description: "現在のダイジェスト値<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Reference.DigestValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 表現を返します、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 表現、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Reference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Id
  id: Id
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在の ID を取得または<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  remarks: "文字列 ID が現在の XML 表現を追加する、Id プロパティを使用して<xref:System.Security.Cryptography.Xml.Reference>要素</xref:System.Security.Cryptography.Xml.Reference>。 ID が使用される参照を<xref:System.Security.Cryptography.Xml.Reference>別の場所からの要素</xref:System.Security.Cryptography.Xml.Reference>。"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "現在の ID <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Reference.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "読み込み、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>状態の XML 要素からです。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "読み込み元の XML 要素、 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>状態です。"
  overload: System.Security.Cryptography.Xml.Reference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code>パラメーターに変換が含まれていません。       - または -、 <code> value </code>パラメーターには、不明な変換が含まれています。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  id: TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在の変換チェーンを取得<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  remarks: "TransformChain プロパティを表す、 `Transform`> 要素および XML デジタル署名の関連付けられているサブ要素です。       変換チェーンは、変換の順序付きリストです。 これらの変換の出力で指定したハッシュ アルゴリズムへの入力の構成、<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>プロパティ</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  syntax:
    content: public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }
    return:
      type: System.Security.Cryptography.Xml.TransformChain
      description: "現在の変換チェーン<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Reference.TransformChain*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Type
  id: Type
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または署名されているオブジェクトの種類を設定します。"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "署名されているオブジェクトの型。"
  overload: System.Security.Cryptography.Xml.Reference.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Uri
  id: Uri
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref:System.Uri>、現在の<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref></xref:System.Uri> 。"
  remarks: "The Uri property uses a string Uniform Resource Identifier (URI) to represent the <`URI`> element of an XML digital signature.  \n  \n Use the Uri property to specify the location of a document to sign, and to specify which element of the current XML document to sign or to indicate that the entire document should be signed.  \n  \n To successfully create an XML digital signature, you must set the Uri property. The following table describes the values that you can pass to the Uri property.  \n  \n|Object to sign|Value passed to the Uri property|  \n|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|An entire XML document using an enveloped signature.|An empty string: \"\"|  \n|A specific element within an XML document using an enveloped signature.|The name of an XML element identified by an attribute name ID. The string should take the following form where `IDname` is the name of a valid attribute name ID:<br /><br /> \"#Idname\"|  \n|A file using a detached signature.|The URI of a file: \"c:\\data.jpg\" or \"c:\\data.xml\".|  \n  \n For more information about XML digital signatures, see the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/)."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_25_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_25_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_25_1.vb)]"
  syntax:
    content: public string Uri { get; set; }
    return:
      type: System.String
      description: "<xref:System.Uri>、現在の<xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref></xref:System.Uri> 。"
  overload: System.Security.Cryptography.Xml.Reference.Uri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
- uid: System.Security.Cryptography.Xml.Transform
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Reference.Id
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
- uid: System.Security.Cryptography.Xml.Reference.#ctor*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference
  nameWithType: Reference.Reference
- uid: System.Security.Cryptography.Xml.Reference.AddTransform*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform
  nameWithType: Reference.AddTransform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
- uid: System.Security.Cryptography.Xml.Reference.GetXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml
  nameWithType: Reference.GetXml
- uid: System.Security.Cryptography.Xml.Reference.Id*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml
  nameWithType: Reference.LoadXml
- uid: System.Security.Cryptography.Xml.Reference.TransformChain*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
