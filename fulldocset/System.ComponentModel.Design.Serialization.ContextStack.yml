### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ContextStack
  id: ContextStack
  children:
  - System.ComponentModel.Design.Serialization.ContextStack.#ctor
  - System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  - System.ComponentModel.Design.Serialization.ContextStack.Current
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  - System.ComponentModel.Design.Serialization.ContextStack.Pop
  - System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  langs:
  - csharp
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
  type: Class
  summary: "入れ子になったシリアライザーに情報を使用できるように、シリアライザーで使用できるスタック オブジェクトを提供します。"
  remarks: "シリアライザーによっては、正しくの状態を維持するためのオブジェクトのコンテキストに関する情報を必要とします。 ContextStack クラスは、別のシリアライザーがアクセスできる場所スタックにシリアル化するオブジェクトのコンテキストに関するデータを設定するシリアライザーを使用します。 値、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>によって提供されるプロパティ、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>のいくつかのシリアライザーを使用して情報を共有します</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager></xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>。       コンテキスト スタック便利なデザイン ドキュメントのシリアル化のプロセスを深く入れ子にすることができます、およびオブジェクトの入れ子の各レベルにはオブジェクトの状態を正しく維持するためのコンテキスト情報が必要です。 シリアライザーは、入れ子になったシリアライザーを呼び出す前に、スタックにコンテキストのオブジェクトを設定できます。 入れ子になったシリアライザーへの呼び出しが返された後に設定するシリアライザーによってスタックに設定された各オブジェクトを削除してください。       通常、スタック上のオブジェクトには、現在のオブジェクトのシリアル化するコンテキストについての情報が含まれて。 親シリアライザーは、適切なシリアライザーを呼び出しますコンテキスト情報をシリアル化するのには、次のオブジェクトはスタックに追加、および、このシリアライザーは、オブジェクトの実行が完了したら、スタックからコンテキスト情報を削除します。 このスタックにプッシュされるどのようなオブジェクトを決定するには、各シリアライザーの実装の責任です。       たとえば、プロパティを持つオブジェクトが名前付き`Enabled` <xref:System.Boolean>.</xref:System.Boolean>のデータ型を持つ シリアライザーは、この値をデータ ストリームに書き込み場合、は、コンテキストまたはデータが書き込まれてプロパティの型を含める必要があります。 シリアライザーがこの情報は、ただし、書き込むのみから指示されたため、<xref:System.Boolean>値</xref:System.Boolean>。 親のシリアライザーをプッシュできるシリアライザーにこの情報を提供する、<xref:System.ComponentModel.PropertyDescriptor>を指す、`Enabled`コンテキスト スタックにプロパティ</xref:System.ComponentModel.PropertyDescriptor>。"
  example:
  - "The following code example demonstrates using a ContextStack to push and then remove 10 values.  \n  \n [!code-cpp[ContextStackExample#1](~/add/codesnippet/cpp/t-system.componentmodel._11_1.cpp)]\n [!code-vb[ContextStackExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._11_1.vb)]\n [!code-cs[ContextStackExample#1](~/add/codesnippet/csharp/t-system.componentmodel._11_1.cs)]"
  syntax:
    content: public sealed class ContextStack
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  \n  \n [!code-cpp[ContextStackExample#2](~/add/codesnippet/cpp/m-system.componentmodel._1_1.cpp)]\n [!code-vb[ContextStackExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._1_1.vb)]\n [!code-cs[ContextStackExample#2](~/add/codesnippet/csharp/m-system.componentmodel._1_1.cs)]"
  syntax:
    content: public ContextStack ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  id: Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "スタックの一番上にプッシュするのではなく、スタックの末尾にオブジェクトを追加します。"
  remarks: "このメソッドは、他のシリアライザーがない順序で削除するコンテキスト データ オブジェクトを追加することによって通信するためにシリアライザーを使用します。 その他のすべてのオブジェクトを削除することがなく、スタックの末尾に追加されたオブジェクトを削除する方法はありません。"
  syntax:
    content: public void Append (object context);
    parameters:
    - id: context
      type: System.Object
      description: "スタックに追加するコンテキスト オブジェクト。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  id: Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "スタック上には、現在のオブジェクトを取得します。"
  remarks: "現在のオブジェクトは、スタックの上部にあるオブジェクトまたはスタックに最後に追加されたオブジェクトです。"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "スタック上の現在のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトにプッシュされていない場合。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Current*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "スタック上で、指定されたレベル オブジェクトを取得します。"
  syntax:
    content: public object this[int level] { get; }
    parameters:
    - id: level
      type: System.Int32
      description: "スタック上で取得するオブジェクトのレベル。 レベル 0 は、スタックの一番上、レベル 1 次、ダウンします。 このレベルは、0 以上にする必要があります。 レベルがかどうか、スタック上のレベル数より大きく、それを返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "指定されたレベルでは、スタック上のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>そのレベルでオブジェクトが存在しない場合。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>level</code>0 未満です。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "継承されるか、指定された型を実装するスタックの最初のオブジェクトを取得します。"
  remarks: "実装または継承するオブジェクトを検索、スタックの各レベルのチェックを行う`type`です。 一致が見つかった場合が返されます。"
  syntax:
    content: public object this[Type type] { get; }
    parameters:
    - id: type
      type: System.Type
      description: "コンテキスト スタックから取得する型。"
    return:
      type: System.Object
      description: "継承されるか、指定された型を実装して、スタックの最初のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>型を実装するスタック上のオブジェクトがない場合。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  id: Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "その値を返す、スタックから現在のオブジェクトを削除します。"
  remarks: ''
  example:
  - "The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#4](~/add/codesnippet/cpp/m-system.componentmodel._2_1.cpp)]\n [!code-vb[ContextStackExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._2_1.vb)]\n [!code-cs[ContextStackExample#4](~/add/codesnippet/csharp/m-system.componentmodel._2_1.cs)]"
  syntax:
    content: public object Pop ();
    parameters: []
    return:
      type: System.Object
      description: "スタックから削除されたオブジェクト<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>オブジェクトがない場合、スタックにします。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  id: Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "プッシュ、またはオブジェクトを配置して、指定したスタックにします。"
  remarks: ''
  example:
  - "The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#3](~/add/codesnippet/cpp/m-system.componentmodel._20_1.cpp)]\n [!code-vb[ContextStackExample#3](~/add/codesnippet/visualbasic/m-system.componentmodel._20_1.vb)]\n [!code-cs[ContextStackExample#3](~/add/codesnippet/csharp/m-system.componentmodel._20_1.cs)]"
  syntax:
    content: public void Push (object context);
    parameters:
    - id: context
      type: System.Object
      description: "スタックにプッシュするコンテキスト オブジェクト。"
  overload: System.ComponentModel.Design.Serialization.ContextStack.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack.ContextStack
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append
  nameWithType: ContextStack.Append
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item
  nameWithType: ContextStack.Item
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop
  nameWithType: ContextStack.Pop
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push
  nameWithType: ContextStack.Push
