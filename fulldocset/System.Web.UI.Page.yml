### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "ASP.NET Web アプリケーションをホストするサーバーからの要求を Web フォーム ページとも呼ばれる、.aspx ファイルを表します。"
  remarks: "ページのクラスは、.aspx 拡張子を持つファイルに関連付けられます。 これらのファイルでは、実行時にページのオブジェクトとしてコンパイルされ、サーバーのメモリにキャッシュすることがします。       コードの分離手法を使用して、Web フォーム ページを作成する場合は、このクラスから派生します。 Microsoft Visual Studio などのアプリケーションの迅速な development (RAD) デザイナーは、Web フォーム ページを作成するのに、このモデルを自動的に使用します。       ページでは、すべてのサーバー コントロールの名前付けコンテナーとしてページ オブジェクト機能を実装するものを除く、<xref:System.Web.UI.INamingContainer>インターフェイスや、このインターフェイスを実装するコントロールの子コントロールは、</xref:System.Web.UI.INamingContainer> 。       ページのクラスは、Web アプリケーションのユーザー インターフェイスとして機能し、安全なコードを記述およびアプリケーションのセキュリティ保護するためのベスト プラクティスに従っているかどうかを確認するように調査する必要があるコントロールです。 これらのトピックの概要については、次を参照してください。[概要の Web アプリケーション セキュリティの脅威](~/add/includes/ajax-current-ext-md.md)、 [NIB: セキュリティ ポリシーのベスト プラクティス](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)、および[セキュリティの基本概念](~/add/includes/ajax-current-ext-md.md)です。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 安全なエラー メッセージを表示](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[検証コントロールの概要](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)です。"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、すべてのフィールドを既定値を初期化します。"
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページまたはマスター ページ、マスター ページを参照する場合、マスター ページに渡される (コンテンツ コントロール) からのコンテンツのコレクションを作成するページの初期化中に呼び出されます。"
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "追加するコンテンツのテンプレートの名前。"
    - id: template
      type: System.Web.UI.ITemplate
      description: "コンテンツのテンプレート"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "同じ名前のコンテンツのテンプレートは既に存在します。"
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "非同期ページの状態情報を必要としない最初と最後のイベント ハンドラー デリゲートを登録します。"
  remarks: "AddOnPreRenderCompleteAsync メソッドを使用して、非同期の Web ページにハンドラーを追加します。       複数の非同期ハンドラーを登録することができます。ただし、一度に&1; つだけのハンドラーが実行されます。 同時に複数の非同期メソッドを処理する場合は、1 つを使用する必要があります<xref:System.Web.BeginEventHandler>メソッドとそのハンドラーからの複数の非同期操作を起動します</xref:System.Web.BeginEventHandler>。       間で非同期のハンドラーが呼び出される、<xref:System.Web.UI.Control.PreRender>と<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete></xref:System.Web.UI.Control.PreRender>。       最初に、すべて<xref:System.Web.UI.Page>イベント (を通じて、<xref:System.Web.UI.Control.PreRender>イベント) は、実行、および各し、登録されている<xref:System.Web.BeginEventHandler>メソッドが呼び出されます</xref:System.Web.BeginEventHandler></xref:System.Web.UI.Control.PreRender></xref:System.Web.UI.Page>。 ときに、ハンドラーが完了したら、対応する<xref:System.Web.EndEventHandler>メソッドが呼び出されます</xref:System.Web.EndEventHandler>。 複数の非同期ハンドラーがある場合は、[次へ] のハンドラーが呼び出されます。       登録済みの非同期イベント ハンドラーが呼び出された後、残りのページのイベントが呼び出されると、以降で、<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete>。"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "デリゲート、 <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref>メソッドです。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "デリゲート、 <xref href=&quot;System.Web.EndEventHandler&quot;> </xref>メソッドです。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "開始と終了時刻非同期ページのイベント ハンドラー デリゲートを登録します。"
  remarks: "非同期の Web ページに状態情報を必要とするハンドラーを追加するのにには、AddOnPreRenderCompleteAsync メソッドを使用します。 渡されたオブジェクト、`state`パラメーターで指定されたイベント ハンドラー デリゲートの間で情報を転送するアプリケーションに必要な任意のオブジェクトを指定できます、`beginHandler`と`endHandler`パラメーター。       複数の非同期ハンドラーを登録することができます。ただし、一度に&1; つだけのハンドラーが実行されます。 同時に複数の非同期メソッドを処理する場合は、1 つを使用する必要があります<xref:System.Web.BeginEventHandler>メソッドとそのハンドラーからの複数の非同期操作を起動します</xref:System.Web.BeginEventHandler>。       間で非同期のハンドラーが呼び出される、<xref:System.Web.UI.Control.PreRender>と<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete></xref:System.Web.UI.Control.PreRender>。       最初に、すべて<xref:System.Web.UI.Page>イベント (を通じて、<xref:System.Web.UI.Control.PreRender>イベント) は、実行、および各し、登録されている<xref:System.Web.BeginEventHandler>メソッドが呼び出されます</xref:System.Web.BeginEventHandler></xref:System.Web.UI.Control.PreRender></xref:System.Web.UI.Page>。 ときに、ハンドラーが完了したら、対応する<xref:System.Web.EndEventHandler>メソッドが呼び出されます</xref:System.Web.EndEventHandler>。 複数の非同期ハンドラーがある場合は、[次へ] のハンドラーが呼び出されます。       登録済みの非同期イベント ハンドラーが呼び出された後、残りのページのイベントが呼び出されると、以降で、<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete>。"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "デリゲート、 <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref>メソッドです。"
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "デリゲート、 <xref href=&quot;System.Web.EndEventHandler&quot;> </xref>メソッドです。"
    - id: state
      type: System.Object
      description: "イベント ハンドラーの状態情報を格納するオブジェクト。"
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページを構成する依存ファイルの一覧を追加します。 このメソッドは、ASP.NET ページ フレームワークによって内部的に使用し、コードから直接使用するものではありません。"
  remarks: "AddWrappedFileDependencies メソッドでは、現在のページを構成する ユーザー コントロール ファイルを使用するなどのファイルの一覧を追加します。 これらのページのいずれかを変更する場合、ページ全体には、要求時に、[次へ] がコンパイルされます。 このメソッドは、.NET Framework インフラストラクチャをサポートし、コードから直接使用するものではありません。"
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "<xref:System.Object>ファイル名の一覧を含むします</xref:System.Object>。"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref>の現在の Web 要求のオブジェクト。"
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "現在のデータ、 <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref>クラスです。"
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Active Server Page (ASP) のリソースの要求を開始します。 このメソッドは、従来の ASP アプリケーションとの互換性を提供します。"
  remarks: "このメソッドを呼び出さないでください。"
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在の要求に関する情報を使用します。"
    - id: cb
      type: System.AsyncCallback
      description: "コールバック メソッド。"
    - id: extraData
      type: System.Object
      description: "ASP 要求と同じ方法で要求を処理するために必要な追加データ。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>オブジェクト</xref:System.IAsyncResult>。"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Active Server Page (ASP) のリソースの要求を終了します。 このメソッドは、従来の ASP アプリケーションとの互換性を提供します。"
  remarks: "このメソッドを呼び出さないでください。"
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "要求によって生成される ASP ページです。"
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページをシングル スレッド アパートメント (STA) スレッドで実行できるかどうかを示す値を設定します。"
  remarks: "設定すると`true`、このプロパティは、シングル スレッド アパートメント (STA) スレッドで実行するページを使用します。 これにより、ページから Visual Basic 6.0 で開発したコンポーネントなどの STA コンポーネントを呼び出すことができます。 このプロパティを設定`true`ページから、そのアンマネージ ASP 組み込みオブジェクトへのアクセスを必要とする COM + コンポーネントを呼び出すことができます。 これらは、ASP 経由でアクセスできる`ObjectContext`オブジェクトまたは`OnStartPage`メソッドです。       ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`aspcompat`属性を`true`.aspx ファイルで、ディレクティブを使用します。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページは、Active Server Pages (ASP) のコードをサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページが同期または非同期で処理されるかどうかを示す値を設定します。"
  remarks: "AsyncMode プロパティで設定されて、<xref:System.Web.UI.Page>ページのコードが生成されたときにパーサー</xref:System.Web.UI.Page> 。 使用して、`Async`この値を設定するディレクティブ内の属性です。       非同期ページがうまくできない場合に、`AspCompat`属性に設定されている`true`または`Transaction`属性が以外の値に設定が`Disabled`ディレクティブにします。"
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページが非同期的に処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "非同期のページ要求の処理を開始します。"
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>要求します。"
    - id: callback
      type: System.AsyncCallback
      description: "プロセスが完了するときに通知するコールバック メソッド。"
    - id: extraData
      type: System.Object
      description: "非同期のメソッドの状態データ。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期要求を参照する</xref:System.IAsyncResult>。"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "非同期のページ要求の処理を終了します。"
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>保留中の非同期要求を参照している</xref:System.IAsyncResult>。"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または非同期タスクを処理するときに使用されるタイムアウト間隔を示す値を設定します。"
  remarks: "ページの非同期のタイムアウトは、非同期タスクを実行するページが待機する時間を表します。 ほとんどの状況では、コードでこのプロパティを設定しないでください。 ページ非同期のタイムアウト間隔を使用して、設定、または Web 構成ファイルのディレクティブにします。 ページ ディレクティブでは、ページの構成セクションで設定された値が上書きされます。       使用して、非同期タスクを定義する、<xref:System.Web.UI.PageAsyncTask>クラスし、開始、終了、およびタイムアウトのハンドラーを登録します</xref:System.Web.UI.PageAsyncTask>。 指定された時間間隔で、非同期タスクが完了しない場合、タイムアウトのハンドラーが呼び出されます。"
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>の非同期タスクの完了を許可された時間間隔を格納している</xref:System.TimeSpan>。 既定の時間間隔は、45 秒です。"
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは、負の値に設定されました。"
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはポストバックの実行に使用されるページで、コントロールを設定します。"
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "ポストバックを実行するために使用するコントロール。"
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ出力がバッファリングされるかどうかを示す値を設定します。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 バッファーの属性を設定`true`.aspx ファイルで、ディレクティブを使用します。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。      > [!NOTE] >、バッファーのプロパティを設定および取得、<xref:System.Web.HttpResponse.BufferOutput%2A>プロパティ</xref:System.Web.HttpResponse.BufferOutput%2A>。"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページ出力がバッファリングされる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>ページが含まれているアプリケーションに関連付けられているオブジェクト。"
  remarks: "アプリケーションの<xref:System.Web.Caching.Cache>オブジェクトでは、格納および後続の要求に任意のデータを取得することができます</xref:System.Web.Caching.Cache>。 キャッシュ専用に関連付けられていないページやユーザーのセッションです。 アプリケーションのパフォーマンスを強化するには、主に使用されます。 詳細については、次を参照してください。[アプリケーション データをキャッシュ](~/add/includes/ajax-current-ext-md.md)です。 アプリケーションのキャッシュとページ出力キャッシュの違いの詳細については、次を参照してください。 [ASP.NET のキャッシュの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref>ページのアプリケーションに関連付けられています。"
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "インスタンス<xref href=&quot;System.Web.Caching.Cache&quot;></xref>は作成されません。"
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "要求された URL のクエリ文字列の部分を取得します。"
  remarks: "ClientQueryString プロパティには、ブラウザーが要求された URL のクエリ文字列の部分が含まれています。 たとえば、要求された URL が&quot;http://www.contoso.com/default.aspx?id=100&quot;の場合は、ClientQueryString プロパティが含まれて&quot;id =&100;&quot; です。 ClientQueryString プロパティをエンコードします。使用して、<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>クエリ文字列をデコードするメソッド</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>。"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "要求された URL のクエリ文字列部分。"
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.UI.ClientScriptManager&quot;> </xref>オブジェクトを管理、登録、およびページにスクリプトを追加するために使用します。"
  remarks: "ClientScript プロパティを使用して、<xref:System.Web.UI.ClientScriptManager>管理、登録、およびスクリプトを Web ページに追加するために使用できるオブジェクト</xref:System.Web.UI.ClientScriptManager>。 詳細については、<xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>を参照してください。       <xref:System.Web.UI.ClientScriptManager>クラスはで新しく[!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]置き換えます<xref:System.Web.UI.Page>クラスは使用されなくなりましたスクリプトを管理するためのメソッド</xref:System.Web.UI.Page></xref:System.Web.UI.ClientScriptManager>。"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはによりブラウザーの機能の自動検出をオーバーライドして、特定のブラウザー クライアント用のページのレンダリング方法を指定する値を設定します。"
  remarks: "ClientTarget プロパティが設定されていない場合、<xref:System.Web.HttpBrowserCapabilities>オブジェクトに関連付けられている、<xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>プロパティには、クライアント ブラウザーの機能が反映されます</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName></xref:System.Web.HttpBrowserCapabilities>。 このプロパティを設定すると、クライアント ブラウザーの検出が無効になり、ページは、指定した値 (エイリアス) に関連付けられているブラウザーの機能を使用します。       Web サーバー コンピューター上のルート Web.config 構成ファイルを次に一般的なユーザー エージェント文字列の代わりに使用できる既定のエイリアスを定義します。- `uplevel`、Internet Explorer 6.0 と同じブラウザーの機能を指定します。      - `downlevel`、クライアント スクリプトをサポートしていない古いブラウザーと同じブラウザーの機能を指定します。 このエイリアスを使用して、Web ページがクライアント スクリプトが無効になっているブラウザーでどのように動作する方法を決定することができます。       このプロパティを使用してプログラムからエイリアスを設定することも設定を使用して宣言できるは、`ClientTarget`ディレクティブの属性です。       追加のエイリアスを定義することができます、`clientTarget`アプリケーション レベルの Web.config ファイルのセクションです。 詳細については、次を参照してください。 [clientTarget 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)です。"
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>をオーバーライドするブラウザーの機能を指定します</xref:System.String>。"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のコード ページ識別子を設定<xref href=&quot;System.Web.UI.Page&quot;></xref>です。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`CodePage`属性を .aspx ファイルで、ディレクティブを使用する値にします。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "現在のコード ページ識別子を表す整数<xref href=&quot;System.Web.UI.Page&quot;></xref>です。"
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "HTTP MIME タイプを設定、 <xref href=&quot;System.Web.HttpResponse&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`ContentType`属性の .aspx ファイルで、ディレクティブを使用します。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "現在のページに関連付けられている HTTP MIME タイプ。"
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.HttpContext&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "このプロパティは、要求、応答、セッション、およびアプリケーションに関する情報など、ページの実行コンテキストにプログラムでアクセスを提供します。"
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>現在のページに関連付けられている情報を含むオブジェクト。"
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "作成、 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ページのコンテンツを表示するオブジェクト。"
  remarks: "CreateHtmlTextWriter メソッドを作成、<xref:System.IO.TextWriter>を通じて、<xref:System.Web.HttpRequest.Browser%2A>のプロパティ、<xref:System.Web.HttpContext.Request%2A>ページ要求に関連付けられているオブジェクト</xref:System.Web.HttpContext.Request%2A></xref:System.Web.HttpRequest.Browser%2A></xref:System.IO.TextWriter>。 参照を追加することができます、<xref:System.Web.UI.HtmlTextWriter>で、`browserCaps`構成セクション</xref:System.Web.UI.HtmlTextWriter>。 カスタム検索を実行する CreateHtmlTextWriter メソッドをオーバーライドします。"
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>作成に使用される、 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref></xref:System.IO.TextWriter> 。"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定した作成<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>ページのコンテンツを表示するオブジェクト。"
  remarks: "このメソッドは、ページ アダプターで内部的に使用されます。"
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>作成に使用される、 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref></xref:System.IO.TextWriter> 。"
    - id: writerType
      type: System.Type
      description: "作成するテキスト ライターの型。"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ページの内容を表示します。"
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> writerType </code>パラメーターが無効な型に設定します。"
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "カルチャ ID を設定、 <xref href=&quot;System.Threading.Thread&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "設定、 `Culture` .aspx ファイルでは、ディレクティブの属性です。 ページが要求されたときに、動的に生成されたクラスは、このプロパティの値を設定します。 さらに、プログラムから、または Web.config ファイルの要素では、カルチャ プロパティの値も明示的に設定します。       カルチャ プロパティを使用すると、ページのコンテンツのローカライズを支援します。 任意の有効なカルチャ ID を設定することができます。 たとえば、`en-us`カルチャ ID では、アメリカ英語、while にページを設定、`fr`カルチャ ID では、フランス語にページを設定します。 値を設定することもできます。`auto`の優先言語と設定するには、ブラウザーの自動検出を実行します。 言語の自動検出をなど、既定値で修飾できます`auto:en-us`です。       詳細については、次を参照してください、<xref:System.Globalization.CultureInfo>クラスの概要。</xref:System.Globalization.CultureInfo> 。"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "有効なカルチャ id。"
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "インスタンスの初期化を実行、 <xref href=&quot;System.Web.UI.Page&quot;> </xref> RAD デザイナーで必要とされるクラスです。 このメソッドは、デザイン時にのみ使用されます。"
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "返します、 <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>にポスト バックされた POST または GET コマンドのいずれかを使用して、ページ データ。"
  remarks: "DeterminePostBackMode メソッドを返します、<xref:System.Collections.Specialized.NameValueCollection>データを格納しているオブジェクトにポスト バックされたページ</xref:System.Collections.Specialized.NameValueCollection>。 ページが存在するには、ポストバック イベントが発生したかどうかを決定するために使用される VIEWSTATE と EVENTTARGET フィールドが表示されません。 <xref:System.Web.UI.Page.IsPostBack%2A>DeterminePostBackMode メソッドが呼び出されたときにプロパティが設定されています</xref:System.Web.UI.Page.IsPostBack%2A>。"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>フォーム データを含むオブジェクト。 フォームの情報が返されます、ポストバックが POST コマンドを使用する場合、<xref:System.Web.UI.Page.Context*>オブジェクト</xref:System.Web.UI.Page.Context*>。 ポストバックのでは、GET コマンドを使用する場合、クエリ文字列の情報が返されます。 ページは、最初に要求されている場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>が返されます。"
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "要求で ASP.NET 要求の検証を実行しなくても、POST または GET コマンドのいずれかを使用して、ページにポストされたデータの名前と値のコレクションを返します。"
  remarks: "詳細については、<xref:System.Web.UnvalidatedRequestValues>クラス</xref:System.Web.UnvalidatedRequestValues>を参照してください。"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "未検証のフォームのデータを格納するオブジェクト。"
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページがポストバックとコールバックのイベントを検証するかどうかを示す値を設定します。"
  remarks: "EnableEventValidation プロパティに設定するときに`true`ASP.NET では、コントロールのイベントがそのコントロールによって表示されたユーザー インターフェイスから送られたことを検証します。 レンダリング時にイベントを登録し、イベントをポストバックまたはコールバックの処理中に検証コントロールです。 たとえば、リスト コントロールには、オプション ポストバックの要求が受信した場合は、オプション番号 4 を指定する場合と、ページが表示されると、1、2、または 3 の番号にはが含まれている場合、ASP.NET には、例外が発生します。 ASP.NET のすべてのイベント ドリブン コントロールは、既定ではこの機能を使用します。       実行時に、クライアントのコントロールを変更するクライアント スクリプトを記述する場合は、使用する必要があります、 <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>false イベント妥当性確認エラーを回避するためにメソッド</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>。      > [!IMPORTANT] > この機能は、不正なまたは悪意のあるポストバック要求とコールバックのリスクを軽減します。 イベントの検証を無効にしないことを強くお勧めします。       設定して EnableEventValidation プロパティを設定する、`enableEventValidation`ディレクティブの属性または`enableEventValidation`Web.config ファイル内の要素の属性です。 コードでこのプロパティを設定した場合、ページが初期化される前に設定する必要があります。"
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページ ポストバック イベントとコールバック イベント; を検証する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EnableEventValidation プロパティは、ページの初期化後に設定されました。"
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または設定、ページがそのビュー ステートを保持し、任意のサーバーのビュー ステートがそれを制御するかどうかを示す値が含まれている現在のページ要求の終了時にします。"
  remarks: "ビュー ステートを無効にする理由については、 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>。</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>を参照してください。       エントリが場合でも`false`ページがポストバックを検出するために、ASP.NET によって使用される非表示のビュー状態フィールドを含めることがあります。"
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページがビュー状態を保持する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはクライアントからページがポストされるときに、ページのビュー ステートのメッセージ認証コード (MAC) をチェックするかどうかを示す値を設定します。"
  remarks: "ビュー ステート MAC は、ページがブラウザーに送信されるときに、ページのビュー状態が保存されている非表示の変数の暗号化されたバージョンです。 このプロパティに設定するときに`true`、暗号化されたビュー ステートがオンになっていることが改ざんされていないクライアントのことを確認します。       コードでこのプロパティを設定できません。 設定、`EnableViewStateMac`属性の .aspx ファイルで、ディレクティブを使用します。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。      > [!IMPORTANT] > をこの属性を設定しない必要があります`false`実稼働 Web サイトで、アプリケーションまたはページがビュー ステートを使用していない場合でもです。 により、MAC のビューステートは、ビュー ステートに加えその他の ASP.NET 機能のセキュリティを確保します。"
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ビュー ステートの MAC がチェックされ、エンコードされている必要がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページのハンドルされない例外が発生した場合、要求元のブラウザーをリダイレクトする、エラー ページを設定します。"
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "エラー ページがブラウザーをリダイレクトします。"
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "非同期タスクの実行を開始します。"
  remarks: "<xref:System.Web.UI.PageAsyncTask>クラス</xref:System.Web.UI.PageAsyncTask>を使用して非同期タスクを定義します。 タスクが定義され、ページを使用して、登録した後、<xref:System.Web.UI.Page.RegisterAsyncTask%2A>メソッド、非同期タスクを開始する ExecuteRegisteredAsyncTasks メソッドを呼び出すことができます</xref:System.Web.UI.Page.RegisterAsyncTask%2A>。       メソッドは、ページときの処理に存在する場合、非同期タスクは、登録されているいずれかの時点で自動的に呼び出されます ExecuteRegisteredAsyncTasks が呼び出される非同期以外のページにします。 この自動呼び出し ExecuteRegisteredAsyncTasks を発生直前に、<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete>。 このメソッドが自動的に呼び出されないときに起動するタスクの ExecuteRegisteredAsyncTasks メソッドを呼び出します。 ただし、ExecuteRegisteredAsyncTasks を複数回呼び出すことができる場合でも、非同期タスクを&1; 回だけ実行されます。       <xref:System.Web.UI.Page.AsyncTimeout%2A>プロパティは ExecuteRegisteredAsyncTasks メソッドを呼び出すたびにリセットします</xref:System.Web.UI.Page.AsyncTimeout%2A>。 最後の値、 <xref:System.Web.UI.Page.AsyncTimeout%2A>、ExecuteRegisteredAsyncTasks を呼び出す前にメソッドが優先されます</xref:System.Web.UI.Page.AsyncTimeout%2A>。 非同期タスクが受け取る場合よりも多く<xref:System.Web.UI.Page.AsyncTimeout%2A>、その ExecuteRegisteredAsyncTasks 呼び出し時に呼び出される後続のタスクがすぐにタイムアウトします</xref:System.Web.UI.Page.AsyncTimeout%2A>。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "非同期タスクの例外があります。"
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ファイルの配列を設定、現在<xref href=&quot;System.Web.HttpResponse&quot;></xref>オブジェクトが依存します。"
  remarks: "このプロパティは廃止されました。 使用して、<xref:System.Web.HttpResponse.AddFileDependencies%2A>メソッドまたは<xref:System.Web.HttpResponse.AddFileDependency%2A>のメソッド、<xref:System.Web.HttpResponse>クラスの代わりにします</xref:System.Web.HttpResponse></xref:System.Web.HttpResponse.AddFileDependency%2A></xref:System.Web.HttpResponse.AddFileDependencies%2A>。       ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`FileDependencies`属性を`true`.aspx ファイルで、ディレクティブを使用します。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "配列をファイルは現在<xref href=&quot;System.Web.HttpResponse&quot;></xref>オブジェクトが依存します。"
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定した識別子を持つサーバー コントロールのページの名前付けコンテナーを検索します。"
  remarks: "FindControl メソッドは、コントロールにアクセスするために使用できますが<xref:System.Web.UI.Control.ID%2A>デザイン時に使用できません</xref:System.Web.UI.Control.ID%2A>。 メソッドのみ、ページの即時更新サブスクリプションまたは最上位レベル、コンテナーを検索です。これは、ページに含まれている名前付けコンテナーでのコントロールの再帰的に検索をしません。 下位の名前付けコンテナー内のコントロールにアクセスするには、呼び出し、`FindControl`そのコンテナーのメソッドです。"
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "検索するコントロールの識別子。"
    return:
      type: System.Web.UI.Control
      description: "指定したコントロールまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>指定されたコントロールが存在しない場合。"
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの HTML フォームを取得します。"
  remarks: "フォームのプロパティ、メソッドとプロパティのアクセスを使用して、<xref:System.Web.UI.HtmlControls.HtmlForm>ページ コントロール階層の基本であるオブジェクト</xref:System.Web.UI.HtmlControls.HtmlForm>。"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>ページに関連付けられているオブジェクト。"
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの宣言型の特性に基づき、ページの生成中に、コントロールのツリーを初期化します。"
  remarks: "FrameworkInitialize メソッドは、初期化、<xref:System.Web.UI.Page>オブジェクトし、ページの宣言型の特性に基づきコントロール ツリーを作成します</xref:System.Web.UI.Page>。 FrameworkInitialize メソッドは、ページの解析とコード生成のによってオーバーライド、<xref:System.Web.UI.Page>宣言型のページのクラス</xref:System.Web.UI.Page>。 通常、このメソッドをオーバーライドする必要が上にありません必要があります。 をオーバーライドする場合は、基本クラスの FrameworkInitialize メソッドを呼び出すことを確認します。"
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "データ バインディング コンテキスト スタックの上部にあるデータ項目を取得します。"
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "データ バインドのコンテキスト スタックの上部にあるオブジェクトです。"
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ページのデータ バインド コンテキストはありません。"
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定されたイベント引数を使用して、指定したコントロールのサーバーにポストバック クライアント イベントで使用できる参照を取得します。"
  remarks: "参照してください、<xref:System.Web.UI.ClientScriptManager>代替方法についてはこのメンバーのクラス</xref:System.Web.UI.ClientScriptManager>。"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "クライアント イベントのポストバックを受信するサーバー コントロール。"
    - id: argument
      type: System.String
      description: "A<xref:System.String>に渡される&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;</xref:System.String> 。"
    return:
      type: System.String
      description: "クライアント イベントを表す文字列。"
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "参照を取得<xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;></xref>クライアント イベントで指定されたイベント引数を使用して、指定したコントロールのサーバーへのポストバックを使用できるの先頭に追加されます。"
  remarks: "参照してください、<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>代わりにこのメンバー メソッド</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>。"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ポストバックを処理するサーバー コントロール。"
    - id: argument
      type: System.String
      description: "サーバー コントロールに、パラメーターが渡されます。"
    return:
      type: System.String
      description: "対象のコントロールの ID とイベントの引数を含むポストバック関数に JavaScript の呼び出しを表す文字列。"
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "サーバーへのポストバックが発生するクライアント イベントで使用できる文字列を返します。 参照文字列が定義されている指定した<xref href=&quot;System.Web.UI.Control&quot;></xref>オブジェクト。"
  remarks: "このメソッドは廃止されました。 使用して、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスの代わりにします</xref:System.Web.UI.ClientScriptManager></xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>。"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "サーバーにポストバックを処理するサーバー コントロール。"
    return:
      type: System.String
      description: "文字列をクライアントでは、スクリプトとして扱われたとき、ポストバックが開始します。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "サーバーへのポストバックが発生するクライアント イベントで使用できる文字列を返します。 参照文字列は、ポストバックおよびその他のイベント情報の文字列引数を処理する指定されたコントロールによって定義されます。"
  remarks: "このメソッドは廃止されました。 使用して、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスの代わりにします</xref:System.Web.UI.ClientScriptManager></xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>。"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ポストバックを処理するサーバー コントロール。"
    - id: argument
      type: System.String
      description: "サーバー コントロールに、パラメーターが渡されます。"
    return:
      type: System.String
      description: "文字列をクライアントでは、スクリプトとして扱われたとき、ポストバックが開始します。"
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "によって生成されるハッシュ コードを取得<xref href=&quot;System.Web.UI.Page&quot;></xref>で生成されたオブジェクトの実行時間。 一意のハッシュ コードです、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクトのコントロールの階層です。"
  remarks: "このメソッドをオーバーライドしないでください。"
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "実行時に生成されたハッシュ コード。 既定値は 0 です。"
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定された検証グループの検証コントロールのコレクションを返します。"
  remarks: "GetValidators メソッドでは、特定の検証グループに関連付けられているすべての検証オブジェクトを返します。 既定の検証グループを返すことができます (せずコントロールに関連付けられているすべての検証コントロール、`ValidationGroup`プロパティ セット) を設定して、`validationGroup`パラメーターを`null`です。       検証グループのメンバーを検証するには、コレクションと呼び出しを列挙することができます、<xref:System.Web.UI.IValidator.Validate%2A>各検証メソッドが返されました</xref:System.Web.UI.IValidator.Validate%2A>。"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "戻るには、検証グループまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を既定の検証グループを返します。"
    return:
      type: System.Web.UI.ValidatorCollection
      description: "A <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref>指定された検証グループの検証コントロールを格納しています。"
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "仮想ファイルの場所の一覧に対応する物理ファイル名の一覧を返します。"
  remarks: "GetWrappedFileDependencies メソッドでは、現在のページを構成する ユーザー コントロール ファイルを使用するなどのファイルの一覧を取得します。 これらのページのいずれかが変更された場合、ページ全体には、要求時に、[次へ] がコンパイルされます。 このメソッドをオーバーライドしないでください。"
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "仮想ファイルの場所の文字列配列。"
    return:
      type: System.Object
      description: "物理ファイルの場所の一覧を含むオブジェクトです。"
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "場合、ページの文書のヘッダーを取得、 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>で要素が定義されている、 <xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;> </xref>ページの宣言でします。"
  remarks: "ヘッダー プロパティへの参照を取得する、<xref:System.Web.UI.HtmlControls.HtmlHead>オブジェクト、ページのドキュメントのヘッダー情報の設定を使用することです</xref:System.Web.UI.HtmlControls.HtmlHead>。 <xref:System.Web.UI.HtmlControls.HtmlHead>スタイル シート、スタイル ルール、タイトル、およびメタデータをなどの情報を追加することができます、`head`要素</xref:System.Web.UI.HtmlControls.HtmlHead>。      > [!NOTE] > のメソッドを使用してプログラムからスタイルを追加する、<xref:System.Web.UI.IStyleSheet>非同期ポストバック中のインターフェイスはサポートされていません</xref:System.Web.UI.IStyleSheet>。 Web ページに AJAX 機能を追加すると、非同期ポストバックはページ全体を更新することがなく、ページの領域を更新します。 詳細については、次を参照してください。 [Microsoft Ajax 概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref>ページ ヘッダーを含むです。"
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または設定の特定のインスタンスの識別子、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>クラスです。"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "インスタンスの識別子、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>クラスです。 既定値は、&quot;_Page&quot; です。"
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ上のコントロールの一意の ID を構築するときに、コントロールの識別子を区切るために使用する文字を取得します。"
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "コントロールの識別子を区切るために使用する文字。 既定値を設定、 <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref>ページを表示するインスタンス。 IdSeparator はサーバー側フィールドでありは変更できません。"
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの初期化が完了したときに発生します。"
  remarks: "InitComplete イベントは、ページの初期化段階の最後に呼び出されます。 ページのライフ サイクルのこの段階で宣言されたすべて、ページ上のコントロールが初期化されるが、ページの状態はまだ設定します。 サーバー コントロールにアクセスできますが、それらがまだ含まれていませんユーザーから返される情報には。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "セット、 <> </> *> と<> *> ページの現在のスレッドにします。"
  remarks: "InitializeCulture メソッドには、コーディングのロジックが含まれていません。 機能を拡張する開発者の制御、<xref:System.Web.UI.Page>クラス メソッドをオーバーライドできます、InitializeCulture 初期化するために、<xref:System.Web.UI.Page.Culture%2A>と<xref:System.Web.UI.Page.UICulture%2A>ページの情報</xref:System.Web.UI.Page.UICulture%2A></xref:System.Web.UI.Page.Culture%2A></xref:System.Web.UI.Page>。"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページ要求の出力キャッシュのに基づいて初期化、 <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref>オブジェクト。"
  remarks: "このメソッドを呼び出す必要はありません。 を有効にして、ページの出力キャッシュを操作するには、.aspx ファイル、またはメソッドや<xref:System.Web.HttpCachePolicy>クラス</xref:System.Web.HttpCachePolicy>のプロパティで、いずれかのディレクティブを使用します。 後者はを通してアクセス`Response.Cache`ページのコード宣言ブロックまたは分離コード ファイル内の構文。 詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "<xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref>キャッシュの設定を格納しています。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "出力キャッシュ設定の場所が正しくありません。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページ要求の出力キャッシュを初期化します。"
  remarks: "このメソッドを呼び出す必要はありません。 を有効にして、ページの出力キャッシュを操作するには、.aspx ファイル、またはメソッドや<xref:System.Web.HttpCachePolicy>クラス</xref:System.Web.HttpCachePolicy>のプロパティで、いずれかのディレクティブを使用します。 後者はを通してアクセス`Response.Cache`ページのコードの構文。 詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "出力キャッシュに格納されているオブジェクトが有効の量。"
    - id: varyByHeader
      type: System.String
      description: "出力キャッシュからコンテンツ ヘッダーのセミコロン区切りリストによって異なります。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP ヘッダー。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "1 つ、 <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref>値。"
    - id: varyByParam
      type: System.String
      description: "GET または POST メソッドによって異なりますが、出力キャッシュからコンテンツを受け取るパラメーターのセミコロンで区切った一覧。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "無効な値が指定されて<code> location</code>です。"
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページ要求の出力キャッシュを初期化します。"
  remarks: "このメソッドを呼び出す必要はありません。 を有効にして、ページの出力キャッシュを操作するには、.aspx ファイル、またはメソッドと<xref:System.Web.HttpCachePolicy>クラス</xref:System.Web.HttpCachePolicy>のプロパティで、いずれかのディレクティブを使用します。 後者はを通してアクセス`Response.Cache`ページのコードの構文。 詳細については、次を参照してください。 [ASP.NET ページのキャッシュ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "出力キャッシュに格納されているオブジェクトが有効の量。"
    - id: varyByContentEncoding
      type: System.String
      description: "セミコロンで区切られた一連の文字セット (コンテンツのエンコード)、出力キャッシュの内容によって異なります。"
    - id: varyByHeader
      type: System.String
      description: "出力キャッシュからコンテンツ ヘッダーのセミコロン区切りリストによって異なります。"
    - id: varyByCustom
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> HTTP ヘッダー。"
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "1 つ、 <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref>値。"
    - id: varyByParam
      type: System.String
      description: "GET または POST メソッドによって異なりますが、出力キャッシュからコンテンツを受け取るパラメーターのセミコロンで区切った一覧。"
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "無効な値が指定されて<code> location</code>です。"
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページが非同期的に処理されるかどうかを示す値を取得します。"
  remarks: "Web ページが非同期モードで実行されているかどうかを決定するのにには、IsAsync プロパティを使用します。 この情報は、ページのコントロールまたはコード ページが非同期かに応じて、動作を変更する必要がある場合に便利です。 非同期プログラミングの詳細については、次を参照してください。[非同期操作](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページが非同期モードである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ要求がコールバックの結果であるかどうかを示す値を取得します。"
  remarks: "詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページ要求がコールバック; の結果である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したキーをクライアント スクリプト ブロックがページに登録されているかどうかを判断します。"
  remarks: "<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>クライアント側スクリプトを不必要にまとめることを回避する</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>を呼び出す前にこのメソッドを呼び出す これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。       IsClientScriptBlockRegistered メソッドは廃止されました。 <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A><xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>のメソッド</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>を使用して"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "検索対象のクライアント スクリプトの文字列のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スクリプト ブロックが登録されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページがページ間のポストバックに関係するかどうかを示す値を取得します。"
  remarks: "ASP.NET では、別の&1; つのページからコントロールを転送するための&2; つのメカニズムを提供します。 使用することができます、<xref:System.Web.HttpServerUtility.Transfer%2A>ページ、または間での処理を転送する方法は、ページの URL を割り当てることでページ間の要求をすることができます、<xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>を実装するボタン コントロールのプロパティ、<xref:System.Web.UI.WebControls.IButtonControl>インターフェイス</xref:System.Web.UI.WebControls.IButtonControl></xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A></xref:System.Web.HttpServerUtility.Transfer%2A>。       どちらの場合、<xref:System.Web.UI.Page.PreviousPage%2A>ページのプロパティには、前または送信元のページを表すオブジェクトが含まれています</xref:System.Web.UI.Page.PreviousPage%2A>。 ページ A が B のページ、ページの IsCrossPagePostBack プロパティにポストするなどの場合は、(経由でアクセスできる、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティ) は`true`ページ B の<xref:System.Web.UI.Page.PreviousPage%2A>プロパティのページの A の名前は</xref:System.Web.UI.Page.PreviousPage%2A></xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページがページ間の要求; に参加している場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページが最初に表示しているか、ポストバックへの応答内に読み込まれているかどうかを示す値を取得します。"
  remarks: "ポストバックとコールバックの違いの詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアントのポストバック; への応答内のページに読み込まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ポストバックを実行するページにコントロールが登録されているかどうかを示す値を取得します。"
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールに登録されています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクトを再利用できます。"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "クライアントのスタートアップ スクリプトに登録されているかどうかを判断、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクト。"
  remarks: "<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>クライアント側スクリプトを不必要にまとめることを回避する</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>を呼び出す前にこのメソッドを呼び出す これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。       IsStartupScriptRegistered メソッドは廃止されました。 <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A><xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>のメソッド</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>を使用して"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "検索対象のスタートアップ スクリプトの文字列のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スタートアップ スクリプトは、登録されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの検証が成功したかどうかを示す値を取得します。"
  remarks: "このプロパティを返すの`true`、現在の検証グループのすべての検証サーバー コントロールが正常に検証する必要があります。 呼び出した後にのみ、このプロパティを確認する必要があります、<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>メソッド、またはセット、`CausesValidation`プロパティを`true`で、`OnServerClick`フォーム処理を開始する ASP.NET サーバー コントロールのイベント ハンドラー</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> 。 これらのサーバー コントロールが含まれて、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.HtmlControls.HtmlButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>クラス</xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.ImageButton></xref:System.Web.UI.HtmlControls.HtmlInputImage></xref:System.Web.UI.HtmlControls.HtmlInputButton></xref:System.Web.UI.HtmlControls.HtmlButton></xref:System.Web.UI.WebControls.Button>。       使用して検証グループの検証を強制する場合、<xref:System.Web.UI.Page.Validate%2A>メソッドを指定された検証グループ内のすべての検証コントロールも検証する必要がありますが正常にします</xref:System.Web.UI.Page.Validate%2A>。"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページの検証が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "IsValid プロパティは、検証が実行前に呼び出されます。"
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ コンテキストに格納されているオブジェクトの一覧を取得します。"
  remarks: "ページの要求と同じ有効期間を持つオブジェクトを格納するのに項目のプロパティを使用します。 このプロパティは読み取り専用です。ただし、オブジェクトを追加できる、<xref:System.Collections.IDictionary>オブジェクトを返します</xref:System.Collections.IDictionary>。       アイテム プロパティに追加されたオブジェクトは、イベント内のアイテム プロパティ ページのライフ サイクルの早い段階でオブジェクトを追加して、後続のイベントでこれらのオブジェクトにアクセスできるように、ページの有効期間全体で使用できます。"
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "参照、<xref:System.Collections.IDictionary>ページ コンテキストに格納されているオブジェクトを含むします</xref:System.Collections.IDictionary>。"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ロケール識別子を設定、 <xref href=&quot;System.Threading.Thread&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 `LCID` .Aspx ファイルのディレクティブで属性を設定することができますが、優先ロケール識別子の設定方法を使用すると、<xref:System.Web.UI.Page.Culture%2A>と<xref:System.Web.UI.Page.UICulture%2A>プロパティ</xref:System.Web.UI.Page.UICulture%2A></xref:System.Web.UI.Page.Culture%2A>。"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "ロケール識別子を渡す、 <xref href=&quot;System.Threading.Thread&quot;></xref>です。"
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページのライフ サイクルの読み込み段階の最後に発生します。"
  remarks: "後のすべてのポストバック データ LoadComplete イベントが発生し、ビュー状態データが読み込まれるは、ページと後、 <xref:System.Web.UI.Control.OnLoad%2A>、ページのすべてのコントロールのメソッドが呼び出された</xref:System.Web.UI.Control.OnLoad%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "保存されたすべてのビュー状態に関する情報を読み込み、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクト。"
  remarks: "LoadPageStateFromPersistenceMedium メソッドを使用して、<xref:System.Web.UI.PageStatePersister.Load%2A>のメソッド、<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>によって参照されるオブジェクト、<xref:System.Web.UI.Page.PageStatePersister%2A>をロード プロパティのビュー状態情報の保存、<xref:System.Web.UI.Page>オブジェクト</xref:System.Web.UI.Page></xref:System.Web.UI.Page.PageStatePersister%2A></xref:System.Web.UI.PageStatePersister?displayProperty=fullName></xref:System.Web.UI.PageStatePersister.Load%2A>。       ASP.NET には&2; つのサブフォルダーが含まれています、<xref:System.Web.UI.PageStatePersister>クラス、 <xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET ページに含まれる非表示フィールドの状態情報を保存するクラスと<xref:System.Web.UI.SessionPageStatePersister>で状態を保存するクラス、<xref:System.Web.UI.Page.Session%2A>要求に関連付けられているオブジェクト</xref:System.Web.UI.Page.Session%2A></xref:System.Web.UI.SessionPageStatePersister></xref:System.Web.UI.HiddenFieldPageStatePersister></xref:System.Web.UI.PageStatePersister>。       任意の場所で状態を保存する必要がありますを作成する新しいの子孫、<xref:System.Web.UI.PageStatePersister>クラスを保存し、任意の永続メディアへの状態を読み込みます</xref:System.Web.UI.PageStatePersister>。 新しい<xref:System.Web.UI.PageStatePersister><xref:System.Web.UI.PageStatePersister>クラス</xref:System.Web.UI.PageStatePersister>を参照して、オブジェクト</xref:System.Web.UI.PageStatePersister>を作成する例については       .NET Framework version 1.0 または 1.1 では、ロードする場合は、このメソッドをオーバーライドを使用している場合、<xref:System.Web.UI.Page>状態から非表示フィールド以外のものです</xref:System.Web.UI.Page>。 またをオーバーライドする必要があるように選択した場合、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>メソッド</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>。"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "保存されたビュー ステート。"
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはポストバック後に、クライアント ブラウザー内の同じ位置にユーザーを返すかどうかを示す値を設定します。 このプロパティは廃止された<xref:System.Web.UI.Page.SmartNavigation*>プロパティ</xref:System.Web.UI.Page.SmartNavigation*>。"
  remarks: "Web ページは、サーバーにポストバックされる、ユーザーは、ページの上部に返されます。 長い Web ページで、つまり、ユーザーは、ページ上の最後の位置にページをスクロールします。       MaintainScrollPositionOnPostBack プロパティに設定するときに`true`ユーザーは、代わりに返される最後の位置 ページでします。       MaintainScrollPositionOnPostBack プロパティで設定する、 [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブです。"
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアントの位置を保持する必要があります。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "仮想パス、絶対または相対パス、またはアプリケーションの相対パスにマップする物理パスを取得します。"
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.String>仮想パスを表す</xref:System.String>"
    return:
      type: System.String
      description: "仮想パスまたはアプリケーションの相対パスに関連付けられている物理パス。"
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの全体的な外観を決定するマスター ページを取得します。"
  remarks: "マスター プロパティから返される、<xref:System.Web.UI.MasterPage>このページに関連付けられているオブジェクト</xref:System.Web.UI.MasterPage>。 このプロパティは読み取り専用です。ただしでのプロパティを設定することができます、<xref:System.Web.UI.MasterPage>オブジェクトを返します</xref:System.Web.UI.MasterPage>。       プロパティは上でのみ有効なマスター ページを参照するマスター ページ、<xref:System.Web.UI.Page.MasterPageFile%2A>プロパティ</xref:System.Web.UI.Page.MasterPageFile%2A>。 マスターにアクセスする場合、マスター ページを参照しないページにプロパティ`null`が返されます。 マスター ページの内容が後までに使用できる、<xref:System.Web.UI.Page.PreInit>イベントが発生しました</xref:System.Web.UI.Page.PreInit>。"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "<xref href=&quot;System.Web.UI.MasterPage&quot;> </xref>存在する場合は、このページに関連付け、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはマスター ページの仮想パスを設定します。"
  remarks: "MasterPageFile プロパティは、このページに関連付けられているマスター ページ ファイルのルートから、アプリケーションの) 仮想パスです。 のみ MasterPageFile プロパティを設定することができます、<xref:System.Web.UI.Page.PreInit>イベント以外の場合は後の MasterPageFile プロパティを設定すると、<xref:System.Web.UI.Page.PreInit>イベントがスローされます、<xref:System.InvalidOperationException>例外です</xref:System.InvalidOperationException></xref:System.Web.UI.Page.PreInit></xref:System.Web.UI.Page.PreInit>。 MasterPageFile プロパティが有効でない場合、型の例外<xref:System.Web.HttpException>ページ ライフ サイクルの後半でスローされるプロパティ設定されている場合に例外がスローされませんが、<xref:System.Web.UI.Page.PreInit>イベント</xref:System.Web.UI.Page.PreInit></xref:System.Web.HttpException>。       MasterPageFile プロパティが設定されているページは、コンテンツ ページ、したがってされる最上位レベルのみのコントロールを含めることができます<xref:System.Web.UI.WebControls.Content>コントロール</xref:System.Web.UI.WebControls.Content>。"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "マスター ページの仮想パス。"
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MasterPageFile プロパティが設定した後、 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref>イベントが完了しました。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページの [状態] フィールドの最大の長さを設定します。"
  remarks: "MaxPageStateFieldLength プロパティが正の数値に設定されている場合は、クライアント ブラウザーに送信されるビュー ステートは、複数の隠しフィールドに分割し、各フィールドの値が MaxPageStateFieldLength プロパティで指定されたサイズより小さい。       MaxPageStateFieldLength プロパティを負の数 (既定) に設定するには、ビュー状態フィールドがチャンクに分割されません必要があることを示します。 MaxPageStateFieldLength 少数にされる場合があります、パフォーマンスが低下します。       MaxPageStateFieldLength のプロパティの値を設定、Web.config ファイルのです。"
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "(バイト単位)、ページの状態 フィールドの最大長。 既定値は-1 です。"
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MaxPageStateFieldLength プロパティでは、-1 または正の数に等しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "MaxPageStateFieldLength プロパティは、ページの初期化後に設定されました。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "&quot;Description&quot;のコンテンツ設定を取得または<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>要素。"
  remarks: "HTML`meta`要素は、検索エンジンの番組表を向上させるために使用できます。 「説明」`meta`要素は一覧のプレビューを向上させるために一部の検索エンジンによって使用されます。       「説明」がある場合`meta`内の要素、`head`ページ マークアップの要素、`meta`ページが表示される場合は、要素をページに追加します。 ページのマークアップは既に&quot;description&quot;場合`meta`要素では、このプロパティを取得または設定、`content`の属性、`meta`要素。       ディレクティブに、このプロパティを設定することもできます。"
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "&quot;Description&quot;のコンテンツ<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>要素。"
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ページには、ヘッダー コントロールはありません (、 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>を持つ要素、 <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref>属性&quot;server&quot;に設定)。"
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "「キーワード」のコンテンツ設定を取得または<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>要素。"
  remarks: "HTML`meta`要素は、検索エンジンの番組表を向上させるために使用できます。 「キーワード」`meta`要素が使用されていないすべてのまたは主要な検索エンジンではほとんどの重みを指定します。       「キーワード」がある場合`meta`内の要素、`head`ページ マークアップの要素、`meta`ページが表示される場合は、要素をページに追加します。 ページのマークアップは既に「キーワード」場合`meta`要素では、このプロパティを取得または設定、`content`の属性、`meta`要素。       ディレクティブに、このプロパティを設定することもできます。"
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "「キーワード」のコンテンツ<xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;></xref>要素。"
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ページには、ヘッダー コントロールはありません (、 <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref>を持つ要素、 <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref>属性&quot;server&quot;に設定)。"
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "モデル バインディング実行コンテキストを取得します。"
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "モデル バインディング実行コンテキスト。 モデル バインディング実行コンテキストは場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、新しい&1; つが作成され、返されます。"
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "モデル バインディングの検証とモデルの状態を格納するモデル状態ディクショナリ オブジェクトを取得します。"
  remarks: "Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "モデル状態ディクショナリ オブジェクト。"
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref>イベント ページを初期化します。"
  remarks: "OnInit メソッドを作成するために必要な初期化とセットアップの手順を実行、<xref:System.Web.UI.Page>インスタンス</xref:System.Web.UI.Page>。 このページのライフ サイクル ステージで ページで宣言されたサーバー コントロールは既定の状態に初期化されます。ただし、各コントロールのビュー ステートがまだ設定します。 ページ上のコントロールが中に、ページ上の他のサーバー コントロールにアクセスできない、`Page_Init`フェーズでは、他のコントロールの親または子コントロールがかどうかに関係なく、します。 他のサーバー コントロールが作成され、アクセスできる状態である保証はありません。       OnInit メソッドの後に、<xref:System.Web.UI.Page.OnPreInit%2A>メソッドとの前に、<xref:System.Web.UI.Page.OnInitComplete%2A>メソッド</xref:System.Web.UI.Page.OnInitComplete%2A></xref:System.Web.UI.Page.OnPreInit%2A>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnInit メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.InitComplete&quot;> </xref>ページの初期化後のイベントです。"
  remarks: "ページの初期化が完了した後、OnInitComplete メソッドが呼び出されます。 このページのライフ サイクル ステージで宣言されたすべて、ページ上のコントロールが初期化されるが、ページのビュー ステートがまだ設定します。 サーバー コントロールにアクセスできますが、それらがまだ含まれていませんユーザーから返される情報には。       末尾に OnInitComplete メソッドが呼び出される、<xref:System.Web.UI.Page>初期化段階と、負荷のステージの前にします</xref:System.Web.UI.Page>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnInitComplete メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref>ページ読み込み段階の最後のイベントです。"
  remarks: "OnLoadComplete メソッドは、ページ読み込み段階の最後に呼び出されます。 この時点でページ ライフ サイクルは、すべてのポストバック データとビューステート データが読み込み済みで、ページ上のコントロールにします。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnLoadComplete メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref>ページの初期化の開始時のイベントです。"
  remarks: "OnPreInit メソッドは、ページの初期化段階の先頭に呼び出されます。       OnPreInit メソッドが呼び出された後は、パーソナル化情報が読み込まれるされ、存在する場合、ページのテーマは初期化されます。 これは、優先されるステージを動的に定義にも、<xref:System.Web.UI.PageTheme>または<xref:System.Web.UI.MasterPage>ページ</xref:System.Web.UI.MasterPage></xref:System.Web.UI.PageTheme>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnPreInit メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.PreLoad&quot;> </xref>イベント ポストバック データがページのサーバー コントロールにその前に読み込まれた後、<xref:System.Web.UI.Control.OnLoad*>イベント</xref:System.Web.UI.Control.OnLoad*>。"
  remarks: "メソッドが呼び出されるすべてのポストバック データがユーザーから返された OnPreLoad が読み込まれます。 この段階で、ページのライフ サイクルで、ビュー ステート情報とポストバック データ宣言コントロールと初期化段階で作成されたコントロールがページのコントロールに読み込まれます。       OnPreLoad メソッドで作成されたコントロールは、ビューステートとポストバック データも読み込まれます。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnPreLoad メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;> </xref>イベント OnPreRenderComplete イベント後に、ページが表示される前にします。"
  remarks: "ページのライフ サイクルのプリレンダ リングの段階が完了すると、OnPreRenderComplete メソッドが呼び出されます。 ページのライフ サイクルのこの段階では、すべてのコントロールが作成され、ページは、出力を表示する準備が。       これは、最後のページのビュー状態を保存する前に呼び出すイベントです。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnPreRenderComplete メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;> </xref>ページの状態を永続化に使用するメディアに保存した後のイベントです。"
  remarks: "OnSaveStateComplete メソッドは、コントロールの状態情報がページの永続化中に書き込まれたときに呼び出されます。 永続化中に呼び出すことによって状態情報が書き込まれる、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>メソッド</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnSaveStateComplete メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.EventArgs>イベント データを含むオブジェクト</xref:System.EventArgs>。"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "特定の要求元ブラウザーのページを表示するアダプターを取得します。"
  remarks: "PageAdapter プロパティは、固有の仕様を返す<xref:System.Web.UI.Adapters.PageAdapter>の動作を変更するオブジェクト、<xref:System.Web.UI.Page>要求側のブラウザーのオブジェクト</xref:System.Web.UI.Page></xref:System.Web.UI.Adapters.PageAdapter>。       特定<xref:System.Web.UI.Adapters.PageAdapter>オブジェクトは、入力方向の特性を調べることによって決まります<xref:System.Web.UI.Page.Request%2A>オブジェクト</xref:System.Web.UI.Page.Request%2A></xref:System.Web.UI.Adapters.PageAdapter>。 要求のライフ サイクル イベントをアダプターが選択された場合、<xref:System.Web.UI.Adapters.PageAdapter>オブジェクトに対応するイベントの上書き、<xref:System.Web.UI.Page>オブジェクト</xref:System.Web.UI.Page></xref:System.Web.UI.Adapters.PageAdapter>。"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "<xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref>ページを表示します。"
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "HTTP 要求と応答は、本質的にステートレスです。 HTTP 要求の間で状態を維持するために ASP.NET サーバー ページを格納できます<xref:System.Web.UI.Page>状態</xref:System.Web.UI.Page>。 ビュー状態と呼ばれる、この状態は、ページとコントロールの設定、およびページとコントロールのようにいる場合、ユーザーがページに最後のラウンド トリップで対話し、ものと同じものを表示できるようにするデータで構成されます。 同じページに後続の要求間でのビュー ステートを格納するいくつかのメカニズムが存在します。 抽象<xref:System.Web.UI.PageStatePersister>クラスは、これらの状態の記憶域メカニズムの基本クラスを表します</xref:System.Web.UI.PageStatePersister>。       ページの開発者は、通常は PageStatePersister プロパティを使用する必要ありません。 PageStatePersister プロパティは、<xref:System.Web.UI.Page>クラス</xref:System.Web.UI.Page>の機能を拡張するコントロールの開発者によって、主に使用します。"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "A <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref>ページに関連付けられています。"
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示されたページ EVENTARGUMENT 隠しフィールドを定義する文字列。"
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "表示されたページ EVENTTARGET 隠しフィールドを定義する文字列。"
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの初期化の前に発生します。"
  remarks: "このイベントでは、ポストバックへの応答で、ページが読み込まれているかどうかなど、ページ要求の条件を確認することができます。 プロファイルのプロパティの値をチェックすることもできます。       イベントでは、ページのライフ サイクルの後で使用される値を設定することができます。 動的に、マスター ページまたは、要求されたページのテーマを設定し、ダイナミック コントロールを作成できます。       PreInit イベントが、ASP.NET のライフ サイクルに適合するしくみの詳細については、次を参照してください。 [ASP.NET ページ ライフ サイクルの概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの前に発生した<xref href=&quot;System.Web.UI.Control.Load&quot;></xref>イベント。"
  remarks: 'すべてのポストバック データの処理後、およびプリロード イベントが発生した、<xref:System.Web.UI.Control.Load>イベント</xref:System.Web.UI.Control.Load>。 2 回目の試行する前にポストバック データを読み込む、<xref:System.Web.UI.Page.OnLoadComplete%2A>イベント</xref:System.Web.UI.Page.OnLoadComplete%2A>。 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページのコンテンツがレンダリングされる前に発生します。"
  remarks: "ページのライフ サイクルの前のレンダリング段階が完了すると、PreRenderComplete イベントが発生します。 ページのライフ サイクルのこの段階ですべてのコントロールを作成、必要なすべての改ページが完了したら、およびページは、出力を表示するために準備ができてです。       これは、最後のページのビュー状態が保存される前に発生するイベントです。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページにコントロールを転送するページを取得します。"
  remarks: "使用すると、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドまたはを使用してページ間に&1; つの ASP.NET ページから別の処理を転送します投稿、発生元のページに移動先のページに必要な情報を要求が含まれている。</xref:System.Web.HttpServerUtility.Transfer%2A> 。 PreviousPage プロパティを使用すると、その情報にアクセスします。       場合は、現在のページが表示されない (、転送や別のページからのクロス post)、直接の要求の結果として PreviousPage プロパティが含まれています。`null`です。"
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref>現在のページにコントロールを転送するページを表示します。"
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のユーザーは、前のページへのアクセスは許可されません。       - または - 使用するには、ASP.NET ルーティングと、前のページの URL は、ルーティングの URL。 ASP.NET は、アクセス許可をチェックし、URL がファイルへの実際のパスであると見なします。 これは、ルーティングの URL の場合とではありません、ため、確認が失敗します。"
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "組み込みのサーバー オブジェクトを設定、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>などのオブジェクト、 <> </> *>、 <> </> *>、 <> </> *>、および<> *> プロパティです。"
  remarks: "このメソッドを呼び出す必要はありません。"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>組み込みサーバー オブジェクトへの参照を提供するオブジェクト (たとえば、 <> </> *>、 <> </> *>、および<xref:System.Web.HttpContext.Session*>) HTTP 要求を処理するために使用します</xref:System.Web.HttpContext.Session*>。"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ポストバックを発生させたサーバー コントロールに通知受信ポストバック イベントを処理する必要があります。"
  remarks: "<xref:System.Web.UI.Page>ポストバックが発生したときに、オブジェクトが RaisePostBackEvent メソッドを呼び出します</xref:System.Web.UI.Page>。 この呼び出しは、読み込みと変更の通知が完了した後は、事前に発生する前に、ページのライフ サイクルで発生します。"
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "ポストバックを発生させた、ASP.NET サーバー コントロールには。 このコントロールを実装する必要があります、 <xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;> </xref>インターフェイスです。"
    - id: eventArgument
      type: System.String
      description: "ポストバックの引数。"
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページが表示される場合は、ECMAScript 配列の宣言として宣言されている値を宣言します。"
  remarks: "このメソッドは、クライアント スクリプト ライブラリの同じ型のすべてのコントロールが扱えるように配列内における自体を宣言するスクリプト ベースのコントロールで使用できます。       RegisterArrayDeclaration メソッドは廃止されました。 <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A><xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>のメソッド</xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>を使用して"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "値を宣言する配列の名前。"
    - id: arrayValue
      type: System.String
      description: "配列に代入する値。"
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページに新しい非同期タスクを登録します。"
  remarks: "<xref:System.Web.UI.PageAsyncTask>クラス</xref:System.Web.UI.PageAsyncTask>を使用して非同期タスクを定義します。 タスクが定義されている場合は、ページで、タスクを登録する RegisterAsyncTask メソッドを使用します。 タスクを登録すると、呼び出し、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>メソッドを非同期のタスクを開始する</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>。       同期および非同期の両方のページで、RegisterAsyncTask メソッドを使用することができます。"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "A <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref>非同期タスクを定義します。"
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "非同期タスクが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "応答をクライアント側のスクリプト ブロックを出力します。"
  remarks: "開始タグの直後に、クライアント側-スクリプトが生成されます、<xref:System.Web.UI.Page>オブジェクトの`<form runat= server>`要素</xref:System.Web.UI.Page>。 必ず開始タグと終了を`<script>`スクリプトの周りに要素のブロックで指定した文字列、`script`パラメーター。       このメソッドは、スクリプト ブロックを識別するキーを使用するため、スクリプト ブロックが別のサーバー コントロールのインスタンスから要求されるたびに、出力ストリームに出力する必要はありません。 キーを使用すると、別のコントロールのスクリプト ブロックが互いに干渉する可能性も低下します。       いずれかのスクリプトで、同じブロック`key`パラメーター値が重複と見なされます。      > [!NOTE] > を要求しているブラウザーがスクリプトをサポートしていない場合は表示されないように、HTML コメント タグで囲みます、スクリプトを含めます。       RegisterClientScriptBlock メソッドは廃止されました。 使用して、<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスの代わりにします</xref:System.Web.UI.ClientScriptManager></xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>。"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "スクリプト ブロックを識別する一意のキー。"
    - id: script
      type: System.String
      description: "クライアントに送信されるスクリプトの内容。"
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "サーバー コントロールをフォーム上の隠しフィールドを自動的に登録を許可します。 フィールドに送信される、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクトときに、 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>サーバー コントロールを表示します。"
  remarks: "RegisterHiddenField メソッドは廃止されました。 <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A><xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>のメソッド</xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>を使用して"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "描画する隠しフィールドの一意の名前。"
    - id: hiddenFieldInitialValue
      type: System.String
      description: "非表示の形式で出力する値。"
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "により、クライアントへのアクセスにページ<xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;></xref>イベント。 スクリプトは、他の場所に登録されたクライアント コードに関数呼び出しをする必要があります。"
  remarks: "RegisterOnSubmitStatement メソッドは廃止されました。 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A><xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>のメソッド</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>を使用して"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "スクリプト ブロックを識別する一意のキー。"
    - id: script
      type: System.String
      description: "クライアントに送信されるクライアント側スクリプトです。"
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールの状態を永続化する必要がありますとしてコントロールを登録します。"
  remarks: "コントロールの状態を使用するカスタムのサーバー コントロールは、コントロールの状態のための登録が引き継がれません要求からの要求にポストバック イベントの中であるために、要求ごとに RegisterRequiresControlState メソッドを呼び出す必要があります。 登録がで実行することをお勧め、<xref:System.Web.UI.Control.Init>イベント</xref:System.Web.UI.Control.Init>。"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "登録するコントロール。"
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "登録するコントロールは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "だけ前に、または中に、RegisterRequiresControlState メソッドを呼び出すことができる、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページがサーバーにポストされたときにポストバック処理を必要とする&1; つとして、コントロールを登録します。"
  remarks: "登録するコントロールを実装する必要があります、<xref:System.Web.UI.IPostBackDataHandler>インターフェイスまたは<xref:System.Web.HttpException>が発生します</xref:System.Web.HttpException></xref:System.Web.UI.IPostBackDataHandler>。 コントロールで実装された場合、<xref:System.Web.UI.IPostBackDataHandler>ポストバック データの処理や任意の投稿の生成が可能なインターフェイスが変更されたデータ イベントをバックアップします</xref:System.Web.UI.IPostBackDataHandler>。 サーバー コントロールのイベント モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム サーバー コントロールのイベント モデル](~/add/includes/ajax-current-ext-md.md)です。       以前のページにコントロールを登録、`Page_PreRender`ページのライフ サイクルのイベントです。"
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "登録するコントロール。"
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "登録するコントロールを実装しません、 <xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;> </xref>インターフェイスです。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "1 つのコントロールが処理されるときに発生するイベントを必要とすると、ASP.NET サーバー コントロールを登録、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクト。"
  remarks: "ページ要求あたり&1; つだけのサーバー コントロールに登録できます。 コントロールにそのコントロール形式で ID データの投稿にはが含まれていない場合、RegisterRequiresRaiseEvent を使用する必要があります。 また、登録されているコントロールを実装する必要があります、<xref:System.Web.UI.IPostBackEventHandler>インターフェイス</xref:System.Web.UI.IPostBackEventHandler>。"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "登録するコントロール。"
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページにコントロールを必要とする&1; つのビュー ステート暗号化として登録します。"
  remarks: "機密性の高い情報を処理するカスタム コントロールを開発している場合は、ページにコントロールを登録し、コントロールのビューステートが暗号化されたことを確認 RegisterRequiresViewStateEncryption メソッドを呼び出します。       場合、ページ全体の状態を暗号化する<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A><xref:System.Web.UI.ViewStateEncryptionMode>、または<xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode></xref:System.Web.UI.ViewStateEncryptionMode>に設定されています。</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前に、またはページの中、RegisterRequiresViewStateEncryption メソッドを呼び出す必要があります<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>ページ ライフ サイクルの段階です。"
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページの応答でクライアント側のスクリプト ブロックを出力します。"
  remarks: "ような<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>メソッド、RegisterStartupScript メソッドの出力の終了タグの直前に、スクリプト、<xref:System.Web.UI.Page>オブジェクトの`<form runat= server>`要素</xref:System.Web.UI.Page></xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>。 必ず開始タグと終了を`<script>`スクリプトの周りに要素のブロックで指定した文字列、`script`パラメーター。       このメソッドは、スクリプト ブロックを識別するキーを使用するため、スクリプト ブロックを別のサーバー コントロールのインスタンスを同じスクリプト ブロックから要求されるたびに出力ストリームに出力する必要はありません`key`パラメーター値が重複と見なされます。      > [!NOTE] > を要求しているブラウザーがスクリプトをサポートしていない場合は表示されないように、HTML コメント タグで囲みます、スクリプトを含めます。       RegisterStartupScript メソッドは廃止されました。 使用して、<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>メソッドで、<xref:System.Web.UI.ClientScriptManager>クラスの代わりにします</xref:System.Web.UI.ClientScriptManager></xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>。"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "スクリプト ブロックを識別する一意のキー。"
    - id: script
      type: System.String
      description: "クライアントに送信されるスクリプトの内容。"
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ ビュー状態、永続化するのと呼ばれる場合に発生します。"
  remarks: "RegisterViewStateHandler メソッドがを通じて自動的に呼び出されます、<xref:System.Web.UI.HtmlControls.HtmlForm>サーバー コントロールです</xref:System.Web.UI.HtmlControls.HtmlForm>。 このメソッドが呼び出されない場合、ページのビュー状態は保持されません。      > [!NOTE] > 通常、のみ、<xref:System.Web.UI.HtmlControls.HtmlForm>ページのサーバー コントロールは、このメソッドを呼び出します</xref:System.Web.UI.HtmlControls.HtmlForm>。"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "初期化、 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>オブジェクトとの子コントロールでの呼び出し、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>をレンダリングします。"
  remarks: "Render メソッドは、テキスト、およびクライアントのブラウザーに送信されるマークアップを作成します。 既定のレンダリング メソッド呼び出し<xref:System.Web.UI.Control.RenderChildren%2A>テキストと、ページに含まれるコントロールのマークアップを記述します</xref:System.Web.UI.Control.RenderChildren%2A>。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ページのコンテンツを受け取る。"
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.HttpRequest&quot;> </xref>要求されたページのオブジェクト。"
  remarks: "<xref:System.Web.HttpRequest>オブジェクトには、現在の HTTP 要求に関する情報が含まれています</xref:System.Web.HttpRequest>。"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "現在<xref href=&quot;System.Web.HttpRequest&quot;></xref>ページに関連付けられています。"
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "発生したときに、 <xref href=&quot;System.Web.HttpRequest&quot;> </xref>オブジェクトは使用できません。"
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "決定するかどうか、指定した<xref href=&quot;System.Web.UI.Control&quot;></xref>コントロール状態管理に参加するオブジェクトを登録します。"
  remarks: "コントロールの状態は、Web サーバー コントロールが機能するために必要なビューステート データの重要なので構成されるオブジェクトこれは通常のビュー状態から別のオブジェクトに含まれています。       コントロールの状態を使用してカスタム コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>コントロールの状態を保存する前にメソッド</xref:System.Web.UI.Page.RegisterRequiresControlState%2A>。 コントロールの状態を必要とすると、ページに登録されているコントロールを確認するには、RequiresControlState メソッドを使用します。"
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>コントロールの状態の要件を確認します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Web.UI.Control&quot;></xref>コントロールが必要です、それ以外の状態<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.HttpResponse&quot;> </xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクト。 このオブジェクトは、HTTP 応答データをクライアントに送信することができます、その応答に関する情報が含まれています。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "現在<xref href=&quot;System.Web.HttpResponse&quot;></xref>ページに関連付けられています。"
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref>オブジェクトは使用できません。"
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のエンコーディングの言語設定<xref href=&quot;System.Web.HttpResponse&quot;></xref>オブジェクト。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`ResponseEncoding`属性を .aspx ファイルで、ディレクティブを使用する値にします。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "現在のエンコーディングの言語を表す文字列<xref href=&quot;System.Web.HttpResponse&quot;></xref>です。"
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; 、現在の&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;インスタンス。"
  remarks: "ページが ASP.NET ルーティングを通じて行われた要求に対する応答で実行されている場合、このプロパティは、ルート データとして渡された URL パラメーター値へのアクセスを提供します。 このプロパティは、実行する場合、ページのルート URL ではなく物理 URL への応答、`null`です。 次の例は、という名前は URL パラメーターの値を抽出する方法を示しています。`year`です。       [Visual Basic]     ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#]```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ```ルートが URL パターンを使用して定義されているかどうかは`{locale}/{year}`ドメインの`contoso.com`、および要求された URL が`contoso.com/US/2010`、 `year` 「2010」このコードを実行すると、値が含まれます。       ASP.NET ルーティングの詳細については、次を参照してください。 [ASP.NET ルーティング](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "&lt;Xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; 、現在の&lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt;インスタンス。"
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページのビュー状態とコントロールの状態情報を保存します。"
  remarks: "SavePageStateToPersistenceMedium メソッドを使用して、<xref:System.Web.UI.PageStatePersister.Save%2A>のメソッド、<xref:System.Web.UI.PageStatePersister?displayProperty=fullName>によって参照されるオブジェクト、<xref:System.Web.UI.Page.PageStatePersister%2A>ページのビュー状態とコントロールの状態情報を格納するプロパティ</xref:System.Web.UI.Page.PageStatePersister%2A></xref:System.Web.UI.PageStatePersister?displayProperty=fullName></xref:System.Web.UI.PageStatePersister.Save%2A>。       ASP.NET には&2; つのサブフォルダーが含まれています、<xref:System.Web.UI.PageStatePersister>クラス、 <xref:System.Web.UI.HiddenFieldPageStatePersister>ASP.NET ページに含まれる非表示フィールドの状態情報を保存するクラスと<xref:System.Web.UI.SessionPageStatePersister>で状態を保存するクラス、<xref:System.Web.UI.Page.Session%2A>要求に関連付けられているオブジェクト</xref:System.Web.UI.Page.Session%2A></xref:System.Web.UI.SessionPageStatePersister></xref:System.Web.UI.HiddenFieldPageStatePersister></xref:System.Web.UI.PageStatePersister>。 使用すると、<xref:System.Web.UI.SessionPageStatePersister>ポストバックを決定するのに使用すると、VIEWSTATE の隠しフィールドがまだ表示されるクラス</xref:System.Web.UI.SessionPageStatePersister>。       任意の場所で状態を保存する必要がありますを作成する新しいの子孫、<xref:System.Web.UI.PageStatePersister>クラスを保存し、任意の永続メディアへの状態を読み込みます</xref:System.Web.UI.PageStatePersister>。 新しい<xref:System.Web.UI.PageStatePersister><xref:System.Web.UI.PageStatePersister>クラス</xref:System.Web.UI.PageStatePersister>を参照して、オブジェクト</xref:System.Web.UI.PageStatePersister>を作成する例については       .NET Framework version 1.0 または 1.1 では、保存する場合は、このメソッドをオーバーライドを使用している場合、<xref:System.Web.UI.Page>で非表示フィールド以外の何かの状態</xref:System.Web.UI.Page>。 またをオーバーライドする必要があるように選択した場合、<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>メソッド</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>。"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>ビュー ステート情報を格納する</xref:System.Object>。"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページには、すべての状態とコントロールのビューステート情報は、ページの保存が完了した後に発生し、ページで制御します。"
  remarks: "後に Web ページ上のコントロールの状態情報が保存された、<xref:System.Web.UI.Page.PreRenderComplete>イベント</xref:System.Web.UI.Page.PreRenderComplete>。 ビュー状態とページのコントロールの状態の後に SaveStateComplete イベントが発生し、ページ上のコントロールは、永続化に使用するメディアに保存されます。       これは、最後のページが要求側のブラウザーにレンダリングされる前に発生するイベントです。       イベント処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>インスタンスであるオブジェクトの<xref href=&quot;System.Web.HttpServerUtility&quot;></xref>クラスです。"
  remarks: "このプロパティは、頻繁に使用されるへのアクセスを提供<xref:System.Web.HttpServerUtility.HtmlEncode%2A>と<xref:System.Web.HttpServerUtility.MapPath%2A>の他のメソッド</xref:System.Web.HttpServerUtility.MapPath%2A></xref:System.Web.HttpServerUtility.HtmlEncode%2A>。"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "現在<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>ページに関連付けられているオブジェクト。"
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在の取得<xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref> ASP.NET によって提供されるオブジェクト。"
  remarks: "このプロパティは、現在の要求のセッションに関する情報を提供します。 A `Session` ASP.NET アプリケーションからのページまたはドキュメントを要求するユーザーごとにオブジェクトが保持されます。 格納されている変数、`Session`ユーザーがアプリケーションでページ間を移動すると、オブジェクトが破棄されません。 ユーザーは、アプリケーション内のページにアクセスする限り、代わりに、これらの変数を永続化します。 セッション状態の詳細については、次を参照してください。 [ASP.NET セッション状態の概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "現在のセッション状態データ。"
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "セッション情報に設定されているときに発生<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定した識別子を持つコントロールには、ブラウザーのフォーカスを設定します。"
  remarks: "SetFocus メソッドを使用して、ブラウザーで表示される Web ページで指定された ID 文字列のアクティブ コントロールでコントロールを作成します。 ページがクライアントに表示用に準備する前に、SetFocus メソッドを呼び出す必要があります、<xref:System.Web.UI.Control.PreRender>イベント</xref:System.Web.UI.Control.PreRender>。      > [!NOTE] >、SetFocus メソッドがサポートする ECMAScript バージョン 1.3 またはそれ以降のブラウザーでのみ動作します。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "フォーカスを設定するコントロールの ID。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定されたコントロールへのブラウザーのフォーカスを設定します。"
  remarks: "SetFocus メソッドを使用して、指定したコントロール、ブラウザーで表示される Web ページ上のアクティブ コントロールを作成します。 ページがクライアントに表示用に準備する前に、SetFocus メソッドを呼び出す必要があります、<xref:System.Web.UI.Control.PreRender>イベント</xref:System.Web.UI.Control.PreRender>。      > [!NOTE] >、SetFocus メソッドがサポートする ECMAScript バージョン 1.3 またはそれ以降のブラウザーでのみ動作します。"
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "フォーカスを受け取るコントロール。"
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはクエリ文字列の値を検証するかどうかを示す値を設定します。"
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クエリ文字列の検証をスキップする必要がある場合 (クエリ文字列を検証しない) です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>クエリ文字列の検証を実行する必要がある場合は、正常に配置します。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはスマート ナビゲーションが有効になっているかどうかを示す値を設定します。 このプロパティは推奨されません。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`SmartNavigation`属性を`true`.aspx ファイルでは、ディレクティブにします。 ページが要求されたときに、動的に生成されたクラスは、このプロパティを設定します。      > [!NOTE] > で ASP.NET version 2.0 では、プロパティは使用しないで SmartNavigation です。 使用して、<xref:System.Web.UI.Page.SetFocus%2A>メソッドおよび<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>プロパティ代わりにします</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A></xref:System.Web.UI.Page.SetFocus%2A>。       ときに、ページが Internet Explorer 5.5 のブラウザーによって要求されたまたはスマート ナビゲーションが、次を実行することによって、ページのユーザーのエクスペリエンスを拡張する後で、:-ナビゲーションによる flash を排除します。      -ページ間を移動するときに、スクロール位置を保持します。      -ナビゲーションの間で要素のフォーカス永続化します。      -ブラウザーの履歴の最後のページ状態のみを保持します。       スマート ナビゲーションは、頻繁なポストバックを必要とする ASP.NET ページではなく、戻り値の大きな変化はない visual のコンテンツを最も効果的です。 このプロパティを設定するかどうかを決定する際に慎重に検討この`true`です。"
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スマート ナビゲーションが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページのライフ サイクルの早い段階でのページに適用されているテーマの名前を設定します。"
  remarks: "このプロパティは、カスケード スタイル シート (CSS) に直接参照していません。 プロパティには、その中の CSS ファイルを含めることができる ASP.NET のテーマの名前が含まれています。       一方、StyleSheetTheme プロパティがページのライフ サイクルの早い段階で、ページに適用されているテーマの名前を指定、<xref:System.Web.UI.Page.Theme%2A>プロパティ ページのライフ サイクルの後半のページに適用されているテーマの名前を指定します</xref:System.Web.UI.Page.Theme%2A>。 つまり、ページの設定は優先されるスタイル シートのテーマでの設定。 詳細については、次を参照してください。 [ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)です。       通常、ページ ディレクティブまたはプロパティをオーバーライドすることでは、このプロパティの値を設定します。 詳細については、次のトピックを参照してください:-[する方法: ASP.NET のテーマを適用](~/add/includes/ajax-current-ext-md.md)      -   [する方法: ASP.NET のテーマをプログラムによって適用](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "ページのライフ サイクルの早い段階でのページに適用されているテーマの名前。"
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後の StyleSheetTheme プロパティを設定しようとしましたが、<xref:System.Web.UI.Page.FrameworkInitialize*>メソッドが呼び出されました</xref:System.Web.UI.Page.FrameworkInitialize*>。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme は、無効なテーマ名に設定されています。 この例外がスローされたときに、<xref:System.Web.UI.Page.FrameworkInitialize*>プロパティ set アクセス操作子ではなく、メソッドが呼び出されます</xref:System.Web.UI.Page.FrameworkInitialize*>。"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページのテーマの名前を設定します。"
  remarks: "テーマのプロパティは、ページを使用するテーマの名前を設定します。 テーマの設定よりも優先する ページで設定する場合は、使用、<xref:System.Web.UI.Page.StyleSheetTheme%2A>プロパティ</xref:System.Web.UI.Page.StyleSheetTheme%2A>。 詳細については、次を参照してください。 [ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)です。       前のバージョンのテーマ プロパティを設定する必要があります、<xref:System.Web.UI.Page.PreInit>イベント以外の場合は後のテーマ プロパティ設定、<xref:System.Web.UI.Page.PreInit>イベントが発生、<xref:System.InvalidOperationException>例外です</xref:System.InvalidOperationException></xref:System.Web.UI.Page.PreInit></xref:System.Web.UI.Page.PreInit>。       指定されたテーマは、アプリケーションまたはグローバル テーマのいずれかとして存在する必要があります。 テーマが存在しない場合、<xref:System.Web.HttpException>例外がスローされます</xref:System.Web.HttpException>。"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "ページのテーマの名前。"
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後のテーマを設定しようとしましたが、 <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref>イベントが発生しました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "テーマは、無効なテーマ名に設定されます。"
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページのタイトルを設定します。"
  remarks: "タイトルのプロパティを使用すると、要求元のブラウザーに送信された HTML ヘッダーのページのタイトルを設定できます。      > [!NOTE] > ページを含める必要があります、`head`要素、属性を持つ`runat=&quot;server&quot;`、それ以外の場合、タイトルが表示されません。"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "ページのタイトル。"
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "タイトルのプロパティには、ページにヘッダー コントロールが必要です。"
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得、 <xref href=&quot;System.Web.TraceContext&quot;> </xref>の現在の Web 要求のオブジェクト。"
  remarks: "トレースは、追跡し、Web 要求に関する実行の詳細を表示します。 トレース データをページに表示する、ページまたはアプリケーション レベルでトレースを有効にする必要があります。       既定では、ページのトレースが無効です。 ページのトレースを有効にするには、ディレクティブを使って`<% @ Page trace=&quot;true&quot; %>`です。 アプリケーション全体のトレースを有効にするには、アプリケーションの構成ファイル、アプリケーションのルート ディレクトリに配置され、web.config ファイルで有効にする必要があります。 詳細については、次を参照してください。 [ASP.NET のトレースの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "データを<xref href=&quot;System.Web.TraceContext&quot;></xref>の現在の Web 要求のオブジェクト。"
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "トレースが有効かどうかを示す値を設定、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクト。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、`Trace`属性を`true`.aspx ファイルでは、ディレクティブにします。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページのトレースが有効になっている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "トレース ステートメントは、ページに表示されるモードを設定します。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、 `TraceMode` .aspx ファイルでは、ディレクティブの属性です。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "1 つ、 <xref href=&quot;System.Web.TraceMode&quot;> </xref>列挙型メンバー。"
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページのサポートのトランザクションのレベルを設定します。"
  remarks: "ほとんどの状況では、コードでこのプロパティを設定しないでください。 設定、 `Transaction` .aspx ファイルでは、ディレクティブの属性です。 ページが要求されると、動的に生成されたクラスは、プロパティを設定します。"
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "いずれかを表す整数、 <xref href=&quot;System.EnterpriseServices.TransactionOption&quot;> </xref>列挙型メンバー。"
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "追加します。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ユーザー インターフェイス (UI) の ID を設定、 <xref href=&quot;System.Threading.Thread&quot;> </xref>ページに関連付けられているオブジェクト。"
  remarks: "ショートカットをこのプロパティは、<xref:System.Threading.Thread.CurrentThread%2A>プロパティ</xref:System.Threading.Thread.CurrentThread%2A>。 カルチャは、実行中のスレッドのセットのプロパティ、 `UICulture` .aspx ファイルでは、ディレクティブの属性です。 ページが要求されたときに、動的に生成されたクラスは、このプロパティの値を設定します。 UICulture のプロパティの値を明示的に設定するさらに、Web.config ファイルのです。"
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "UI の id。"
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ブラウザーをキャッシュ ファイルのファイル パスに追加する固有のサフィックスを取得します。"
  remarks: "UniqueFilePathSuffix プロパティでは、ブラウザーのキャッシュに必要な場合は、ファイル パスの末尾に付加される文字列を返します。 文字列を使用して、特定の要求に関連付けられているファイルのパスを識別します。"
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "ファイルのパスに追加される一意なサフィックス。 既定値は&quot;_ufps =&quot;さらに 6 桁の一意の数字です。"
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはクライアント側の検証の控えめな JavaScript を使用するかどうかを示す値を設定します。"
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>控えめな JavaScript を使用する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したコントロールのコントロールの状態の永続化を停止します。"
  remarks: "コントロールの状態を使用するカスタムのサーバー コントロールを呼び出す必要があります、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>要求のたびに、状態が永続化します</xref:System.Web.UI.Page.RegisterRequiresControlState%2A>。 コントロールの状態のための登録が引き継がれません要求から要求をポストバック時にします。 UnregisterRequiresControlState メソッドを使用して、コントロールの状態が不要になったポストバックの永続化する必要があるコントロールに対して永続化されないことを確認してください。       使用するときに内部的には、UnregisterRequiresControlState メソッドが呼び出される、<xref:System.Web.UI.Control.RemovedControl%2A>コントロールをコントロール コレクションから削除する方法</xref:System.Web.UI.Control.RemovedControl%2A>。"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>コントロールの状態の永続化を停止します。"
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "追加します。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "追加します。"
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "追加します。"
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ページ要求を出しているユーザーに関する情報を取得します。"
  remarks: "<xref:System.Security.Principal.IPrincipal>オブジェクトが、コードが実行されている、そのユーザーの id を含む、ユーザーとが所属するすべての役割のセキュリティ コンテキストを表します</xref:System.Security.Principal.IPrincipal>。       このプロパティを使用して、<xref:System.Web.HttpContext>オブジェクトの<xref:System.Web.HttpContext.User%2A>要求の発生源を決定するプロパティ</xref:System.Web.HttpContext.User%2A></xref:System.Web.HttpContext>。"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>ページ要求を行うユーザーを表す</xref:System.Security.Principal.IPrincipal>。"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "割り当てられている情報を検証するページに含まれるすべての検証コントロールに指示します。"
  remarks: "ユーザーが任意の ASP.NET サーバー コントロールがクリックしたときに、このメソッドが呼び出される、`CausesValidation`プロパティに設定`true`、既定値です。 含まれます、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>Web サーバー コントロールを<xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、および<xref:System.Web.UI.HtmlControls.HtmlButton>HTML サーバー コントロール、および自動的に投稿できるサーバーに戻すなどのコントロール、 <xref:System.Web.UI.WebControls.TextBox>、 <xref:System.Web.UI.WebControls.CheckBox>、 <xref:System.Web.UI.WebControls.ListControl>、および<xref:System.Web.UI.WebControls.BulletedList>コントロール</xref:System.Web.UI.WebControls.BulletedList></xref:System.Web.UI.WebControls.ListControl></xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.TextBox></xref:System.Web.UI.HtmlControls.HtmlButton></xref:System.Web.UI.HtmlControls.HtmlInputImage></xref:System.Web.UI.HtmlControls.HtmlInputButton></xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.ImageButton></xref:System.Web.UI.WebControls.Button>。       ボタン コントロールの設定 ページで、ボタン コントロールの検証を無効にするには、`CausesValidation`プロパティを`false`です。       このメソッドが呼び出されると、反復に含まれている検証コントロール、<xref:System.Web.UI.ValidatorCollection>オブジェクトに関連付けられている、<xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>プロパティし、現在の検証グループ内の各検証コントロールの検証ロジックを呼び出します</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName></xref:System.Web.UI.ValidatorCollection>。 検証グループは、サーバーに、ページのポストバック コントロールによって決定されます。 検証グループが指定されていない場合は、検証グループは使用されません。      > [!NOTE] > ページ検証の動作が変更されました。 [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]、コントロールが不要になったタスクの Validate メソッドを呼び出しますそれらを使用して、<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>メソッド代わりにします。</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> 。 タスクの Validate メソッドを使用する場合、 [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)]  ページで、検証グループは無視され、すべてのコントロールが検証されます。"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "割り当てられている情報を検証する、指定された検証グループの検証コントロールに指示します。"
  remarks: "ユーザーが任意の ASP.NET サーバー コントロールがクリックしたときに、このメソッドが呼び出される、`CausesValidation`プロパティに設定`true`、既定値です。 含まれます、 <xref:System.Web.UI.WebControls.Button>、 <xref:System.Web.UI.WebControls.ImageButton>、および<xref:System.Web.UI.WebControls.LinkButton>Web サーバー コントロールを<xref:System.Web.UI.HtmlControls.HtmlInputButton>、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>、および<xref:System.Web.UI.HtmlControls.HtmlButton>HTML サーバー コントロール、および自動的に投稿できるサーバーに戻すなどのコントロール、 <xref:System.Web.UI.WebControls.TextBox>、 <xref:System.Web.UI.WebControls.CheckBox>、 <xref:System.Web.UI.WebControls.ListControl>、および<xref:System.Web.UI.WebControls.BulletedList>コントロール</xref:System.Web.UI.WebControls.BulletedList></xref:System.Web.UI.WebControls.ListControl></xref:System.Web.UI.WebControls.CheckBox></xref:System.Web.UI.WebControls.TextBox></xref:System.Web.UI.HtmlControls.HtmlButton></xref:System.Web.UI.HtmlControls.HtmlInputImage></xref:System.Web.UI.HtmlControls.HtmlInputButton></xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.ImageButton></xref:System.Web.UI.WebControls.Button>。       ボタン コントロールの設定 ページで、ボタン コントロールの検証を無効にするには、`CausesValidation`プロパティを`false`です。       タスクの Validate メソッドでは、指定した検証グループを検証します。 検証グループでタスクの Validate メソッドを呼び出した後に、<xref:System.Web.UI.Page.IsValid%2A>メソッドが返す`true`指定された検証グループと、ページがサーバーにポストの原因となったコントロールの検証グループの両方が有効な場合にのみです</xref:System.Web.UI.Page.IsValid%2A>。"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "検証するコントロールの検証グループ名。"
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはページがクライアント ブラウザーからの入力の危険性のある値をチェックするかどうかを示す値を設定します。"
  remarks: "値<xref:System.Web.UI.ValidateRequestMode>で使用されていない、<xref:System.Web.UI.Page>クラスから継承する項目がないためです</xref:System.Web.UI.Page></xref:System.Web.UI.ValidateRequestMode>。"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "ページがクライアントの入力を確認するかどうかを示す値。 既定値は<xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>です。"
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "要求されたページに含まれるすべての検証コントロールのコレクションを取得します。"
  remarks: "このプロパティを使用するには、メソッドとプロパティを操作する、<xref:System.Web.UI.ValidatorCollection>オブジェクトに現在関連付けられている<xref:System.Web.UI.Page>インスタンス</xref:System.Web.UI.Page></xref:System.Web.UI.ValidatorCollection>。 このコレクションには、ページに含まれているすべての検証サーバー コントロールが含まれています。       呼び出す、<xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>メソッドにより、現在の検証グループ内の各検証サーバー コントロールで実行するための検証ロジック</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>。 これらのコントロールのいずれかに失敗した場合、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>プロパティから返される`false`</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>。       検証コントロールの詳細については、次を参照してください。 [ASP.NET の検証コントロール](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "検証コントロールのコレクション。"
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "いることを確認、 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>実行時に指定された ASP.NET サーバー コントロールにコントロールを表示します。"
  remarks: "内部にある必要があるコントロール`<form runat=server>`タグの外側に配置されるかどうか、エラー メッセージが表示されるように表示されるか前に、タグはこのメソッドを呼び出すことができます。 ポストバックまたは登録されたスクリプト ブロックに依存しているコントロールのオーバーライドでこのメソッドを呼び出す必要があります、<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>。 サーバーのフォーム要素の表示方法が異なるページには、さまざまな条件で例外をスローするには、このメソッドをオーバーライドできます。       それらがで囲まれていない場合、ポストバックまたはクライアント側スクリプトを使用するサーバー コントロールは機能しません、<xref:System.Web.UI.HtmlControls.HtmlForm>サーバー コントロール (`form runat=&quot;server&quot;>`) タグ</xref:System.Web.UI.HtmlControls.HtmlForm>。 囲まれていない、ときに、クリア エラー メッセージを表示するときに、これらのコントロールはこのメソッドを呼び出すことができます、<xref:System.Web.UI.HtmlControls.HtmlForm>コントロール</xref:System.Web.UI.HtmlControls.HtmlForm>。       カスタム サーバー コントロールを開発するときにするが一般的をオーバーライドする場合は、このメソッドを呼び出す、 `Render` input タグの任意の種類の方法です。 これは、入力コントロールを呼び出す場合に特に重要<xref:System.Web.UI.Page.GetPostBackEventReference%2A>、クライアントが出力にする場合、またはスクリプト</xref:System.Web.UI.Page.GetPostBackEventReference%2A> 複合サーバー コントロールは、この呼び出しを行う必要はありません。"
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "ASP.NET サーバー コントロールで必要な<xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>コントロール。"
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "開始タグと終了タグの間、指定されたサーバー コントロールが含まれていない、 <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref>実行時にサーバー コントロールです。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "検証するコントロールは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはビューステートの暗号化モードを設定します。"
  remarks: "ViewStateEncryptionMode プロパティは、コードで設定することはできません。 のみ設定できますディレクティブまたは、< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> 値は、ディレクティブのオーバーライドで、構成ファイルで設定された値を設定します。       ディレクティブ内でこのプロパティを設定するための構文は次のように: ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ```構成ファイルでこのプロパティを設定するための構文は次のように: ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ```カスタム コントロールの開発者がそのコントロールの状態を表示する機密性の高いデータを保存する前にコードでこのプロパティの値を確認することもできます。            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "1 つ、 <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>値。 既定値は<xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;></xref>です。"
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定されている値がのメンバーではない、 <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>列挙します。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "のみ、またはページの前に、ViewStateEncryptionMode プロパティを設定できます<xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;></xref>ページ ライフ サイクルの段階です。"
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のページに関連付けられているビュー ステートの変数に個々 のユーザーに id を割り当てます。"
  remarks: "ViewStateUserKey プロパティを設定することは、悪意のあるユーザーからアプリケーションへの攻撃を防止するのに役立ちます。 これは、識別子、ビュー ステートを変数に割り当てる各ユーザーの攻撃を生成する、変数が使用できないようにすることによりします。 Web 攻撃およびそれらを防ぐために何ができるについての詳細については、次を参照してください。[かかるの ASP.NET 組み込み機能を利用 Web 攻撃オフ何とか](http://go.microsoft.com/fwlink/?LinkId=163557)です。       ユーザーに認証された名前など、このプロパティを任意の文字列値に設定することができます、または<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>値</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。      > [!NOTE] > 中にこのプロパティを設定する必要があります、`Page_Init`ページ処理の段階です。 中にこのプロパティの設定、`Page_Load`フェーズが例外をスローします。"
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "個々 のユーザーの識別子。"
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ViewStateUserKey プロパティは、ページの処理中に遅すぎますアクセスされました。"
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>オブジェクトが表示されます。"
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.Page&quot;> </xref>レンダリングされた、それ以外には、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
