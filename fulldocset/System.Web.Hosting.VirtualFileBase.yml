### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualFileBase
  id: VirtualFileBase
  children:
  - System.Web.Hosting.VirtualFileBase.#ctor
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.IsDirectory
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  langs:
  - csharp
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
  type: Class
  summary: "実装の中核、 <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref>と<xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;></xref>オブジェクト。 抽象クラスをインスタンス化することはできません。"
  remarks: "VirtualFileBase 抽象クラスが共通のメソッドを提供し、プロパティの間で共有、<xref:System.Web.Hosting.VirtualFile>と<xref:System.Web.Hosting.VirtualDirectory>オブジェクト</xref:System.Web.Hosting.VirtualDirectory></xref:System.Web.Hosting.VirtualFile>。 これらのクラスの実装では、ファイルとコンパイルに使用されるパスにアクセスできる ASP.NET ランタイムを提供します。 仮想ファイルとパスを使用する方法については、<xref:System.Web.Hosting.VirtualPathProvider>クラス</xref:System.Web.Hosting.VirtualPathProvider>を参照してください。"
  syntax:
    content: 'public abstract class VirtualFileBase : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。"
  remarks: "<xref:System.Web.Hosting.VirtualFileBase>クラスから継承するクラスのコンス トラクターは、このコンス トラクターを呼び出すことができます</xref:System.Web.Hosting.VirtualFileBase>のインスタンスを直接構築することはできませんが、"
  syntax:
    content: protected VirtualFileBase ();
    parameters: []
  overload: System.Web.Hosting.VirtualFileBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "により、 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref>リースが作成されるようにすることによって、無期限の有効期間をインスタンス化します。"
  remarks: "このメソッドは、<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>その基本クラスのメソッド</xref:System.MarshalByRefObject.InitializeLifetimeService%2A>をオーバーライドします。 常に返します`null`およびこれにより、仮想ファイルまたはディレクトリの有効期間を制限する作成されないリースを防止します。"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "派生クラスでオーバーライドされるを示す値を取得するかどうか、 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref>インスタンスが仮想ファイル、または仮想ディレクトリを表します。"
  syntax:
    content: public abstract bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref>インスタンスは、仮想ディレクトリ、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref>インスタンスが仮想ファイル。"
  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.Name
  id: Name
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "仮想リソースの表示名を取得します。"
  remarks: "Name プロパティは、通常、ファイル名と、リソースに関連付けられている拡張機能の仮想リソースは、任意の名前を使用してもします。"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "仮想ファイルの表示名。"
  overload: System.Web.Hosting.VirtualFileBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  id: VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "仮想ファイルのパスを取得します。"
  remarks: "VirtualPath プロパティは、ファイルまたはこのオブジェクトによって表されるディレクトリへのパスを返します。"
  syntax:
    content: public string VirtualPath { get; }
    return:
      type: System.String
      description: "仮想ファイルへのパス。"
  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
- uid: System.Web.Hosting.VirtualFileBase.#ctor*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase.VirtualFileBase
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualFileBase.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
- uid: System.Web.Hosting.VirtualFileBase.Name*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
