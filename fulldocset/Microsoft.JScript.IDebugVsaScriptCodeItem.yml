### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem
  id: IDebugVsaScriptCodeItem
  children:
  - Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  - Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  langs:
  - csharp
  name: IDebugVsaScriptCodeItem
  nameWithType: IDebugVsaScriptCodeItem
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem
  type: Interface
  summary: "式を評価し、文字列を解析するメソッドを定義します。 このインターフェイスは通常、コード ブロックを表すオブジェクトによって実装し、は通常、デバッガーによって呼び出されます。 このインターフェイスは、IActiveScript ホストが必要とする追加の機能を提供します。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]

      public interface IDebugVsaScriptCodeItem
  implements: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  id: Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "クラスで実装された場合、ブロック、式、またはコード項目で表されるステートメントを評価し、値を返します。 通常呼び出されます (たとえば、ウォッチ ウィンドウ) で式を評価する必要があるデバッガーによってです。 式の場合は、値は、式の結果です。 ブロックとステートメントの場合は、結果の式は最後のブロックまたはステートメントによって計算式です。"
  remarks: "Evaluate メソッドは機能と同じことに注意してください、<xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>メソッド</xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>。 マーシャ リング属性のみが異なります。 このバージョンのインターフェイスを使用すると、として戻り値を取得するアンマネージのデバッガー、`IUnknown`ポインターではなく、`VARIANT`です。"
  syntax:
    content: public object Evaluate ();
    parameters: []
    return:
      type: System.Object
      description: "ステートメント、式、またはブロックの評価を表す値を返します。"
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  id: ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: 'クラスで実装された場合、文字列を解析し、解析された出力情報を返します。 このメソッドと通常呼ばれるとして表されるブレークポイントに関する情報を解析する必要があるデバッガーによって、 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>です。 デバッガーは、フォーム内のユーザーによって入力されたブレークポイントがある可能性があります*functionname 引数-ILoffset*です。 ブレークポイントの名前付き文字列はなど、複雑な形式を持つことができます`F.B(C.D[], int, arg : double ) : C.Abc + 123.`IL オフセットは、パラメーター リストはオプションです。'
  syntax:
    content: public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);
    parameters:
    - id: input
      type: System.String
      description: "整形式では、関数、省略可能な引数リスト、および省略可能な IL オフセットを与えるブレークポイント文字列という名前です。"
    - id: functionName
      type: System.String
      description: "Out パラメーター、関数の名前を返す場合に解析、入力文字列または空の文字列から、入力文字列の形式が正しくありません。"
    - id: nargs
      type: System.Int32
      description: "省略可能な引数リストの引数の数を返す出力パラメーター。 引数リストがない場合、または文字列が整形式でない場合は、0 を返します。"
    - id: arguments
      type: System.String
      description: "返す出力パラメーターのすべての引数の型の名前をスペースで区切って、引数リスト、または空の文字列引数のリストが見つからないか、入力文字列の形式は正しくありません。"
    - id: returnType
      type: System.String
      description: "Out パラメーターで、入力をという名前の関数の戻り値の型を含む文字列または戻り値の型が見つからない場合は、空の文字列または入力文字列を取得するもの形式がありません。"
    - id: offset
      type: System.UInt64
      description: "IL オフセットがないか、文字列の形式が正しくありませんは、入力文字列、または&0; から IL オフセットを指定する符号なし long 整数。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>名前付きのブレークポイントが正常に解析された場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>それ以外の場合。"
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate
  nameWithType: IDebugVsaScriptCodeItem.Evaluate
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint
