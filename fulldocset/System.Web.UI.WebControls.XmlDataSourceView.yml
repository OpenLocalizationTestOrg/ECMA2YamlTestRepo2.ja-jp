### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSourceView
  id: XmlDataSourceView
  children:
  - System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  - System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  langs:
  - csharp
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView
  fullName: System.Web.UI.WebControls.XmlDataSourceView
  type: Class
  summary: "XML データを表形式のデータ ソース ビューを表す、 <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>コントロールはそれをバインドする Web サーバー コントロールにテーブルと階層の両方の形式でその基になるデータを表示できます</xref:System.Web.UI.WebControls.XmlDataSource> などのコントロール<xref:System.Web.UI.WebControls.GridView>または<xref:System.Web.UI.WebControls.DropDownList>を使用して、 <xref:System.Web.UI.WebControls.XmlDataSource>XML データにバインドをリストまたは表形式では、コントロールから派生するときに、<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>クラスなど<xref:System.Web.UI.WebControls.TreeView>し、XML データにバインドを階層形式で提示します</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.HierarchicalDataBoundControl></xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.DropDownList></xref:System.Web.UI.WebControls.GridView>。       <xref:System.Web.UI.WebControls.XmlDataSource>を異なるコード パスで内部的に各ビューの種類を作成します</xref:System.Web.UI.WebControls.XmlDataSource>。 場合<xref:System.Web.UI.IDataSource.GetView%2A>の<xref:System.Web.UI.WebControls.XmlDataSource>XmlDataSourceView が<xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource>によって作成された、</xref:System.Web.UI.WebControls.XmlDataSource>メソッドが呼び出されます</xref:System.Web.UI.IDataSource.GetView%2A> 場合、<xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>メソッドが呼び出されると、<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>が作成されます</xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView></xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>。 派生する Web サーバー コントロールの XmlDataSourceView クラスが提供される<xref:System.Web.UI.WebControls.DataBoundControl>とリストと表形式のデータにバインド中に、<xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>から派生する Web サーバー コントロールの指定された<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>階層データをバインドします</xref:System.Web.UI.WebControls.HierarchicalDataBoundControl></xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView></xref:System.Web.UI.WebControls.DataBoundControl>。 内部的には、すべてのデータ バインド コントロールのメソッドを呼び出す、`Select`メソッドをどのデータ ソース ビュー オブジェクトが返されます。       などのすべて<xref:System.Web.UI.DataSourceView>ヘルパー オブジェクト、データ ソースを基になるデータで実行できる操作を定義する、XmlDataSourceView</xref:System.Web.UI.DataSourceView> 。 XmlDataSourceView クラスのオーバーライドのみですため、<xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>メソッドは、関連付けられた<xref:System.Web.UI.WebControls.XmlDataSource>コントロールでは、更新はサポートされていません、挿入、または delete 操作。</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 。 XmlDataSourceView クラスがシールされている、この機能を追加する XmlDataSourceView クラスを拡張することはできませんからのデータ ソース コントロールを派生させることができますので<xref:System.Web.UI.WebControls.XmlDataSource>およびビューから<xref:System.Web.UI.DataSourceView>追加機能を必要とする場合</xref:System.Web.UI.DataSourceView></xref:System.Web.UI.WebControls.XmlDataSource>。"
  syntax:
    content: 'public sealed class XmlDataSourceView : System.Web.UI.DataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  id: '#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)'
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しい名前付きのインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref>クラス、および指定した関連付けます<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;></xref>関連付けします。"
  syntax:
    content: public XmlDataSourceView (System.Web.UI.WebControls.XmlDataSource owner, string name);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.XmlDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref>を<xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;></xref>に関連付けられています。"
    - id: name
      type: System.String
      description: "ビューの名前。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "追加します。"
    return:
      type: System.Collections.IEnumerable
      description: "追加します。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "基になる XML からデータ行の一覧を取得します。"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>基本的なデータの取得を超えたデータ操作を要求するために使用できるオブジェクト。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>データ項目のコレクション</xref:System.Collections.IEnumerable>。"
  overload: System.Web.UI.WebControls.XmlDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
- uid: System.Web.UI.WebControls.XmlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView.XmlDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: XmlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select
  nameWithType: XmlDataSourceView.Select
