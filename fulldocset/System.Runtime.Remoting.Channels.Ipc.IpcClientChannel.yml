### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  id: IpcClientChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: IpcClientChannel
  nameWithType: IpcClientChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  type: Class
  summary: "IPC プロトコルを使用してメッセージを送信するリモートの呼び出しのクライアント チャネルを実装します。"
  remarks: "チャネルは、リモート呼び出しを転送する.net Framework リモート処理インフラストラクチャによって使用されます。 クライアントが、リモート オブジェクトを呼び出すと呼び出しは、クライアント チャネルで送信され、サーバー チャネルによって受信されるメッセージにシリアル化されます。 メッセージを受信すると、それを逆シリアル化、処理します。 戻り値はすべては、サーバーのチャネルで送信され、クライアント チャネルで受信します。       IpcClientChannel クラスは、同じコンピューター上のアプリケーション ドメイン間でメッセージの転送を Windows のプロセス間通信 (IPC) システムを使用します。 同じコンピューター上のアプリケーション ドメイン間で通信している場合、IPC チャネルは TCP または HTTP チャネルより高速です。       実行する追加のクライアント側でメッセージの処理を指定できますの実装、 <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>IpcClientChannel オブジェクトによって処理されたすべてのメッセージを渡されるによってインターフェイスします</xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>。       既定では、IpcClientChannel クラスは、すべてのメッセージをシリアル化するのにバイナリ フォーマッタを使用します。       オブジェクトで設定できる構成プロパティが関連付けられている IpcClientChannel 実行時構成ファイルのいずれか (静的なを起動して<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>メソッド) またはプログラムによって (を渡すことによって、<xref:System.Collections.IDictionary>コレクションに、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>コンス トラクター).</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> これらの構成プロパティの一覧は、のドキュメントを参照して、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>コンス トラクター</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> 。"
  example:
  - "The following code example shows how to use the IpcClientChannel class.  \n  \n [!code-cs[Remoting_Ipc#20](~/add/codesnippet/csharp/t-system.runtime.remotin_5_1.cs)]\n [!code-cpp[Remoting_Ipc#20](~/add/codesnippet/cpp/t-system.runtime.remotin_5_1.cpp)]  \n  \n The preceding code uses the following remote object.  \n  \n [!code-cpp[Remoting_Ipc#0](~/add/codesnippet/cpp/t-system.runtime.remotin_5_2.cpp)]\n [!code-cs[Remoting_Ipc#0](~/add/codesnippet/csharp/t-system.runtime.remotin_5_2.cs)]  \n  \n For an example of a server that exposes this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>."
  syntax:
    content: 'public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel()
  nameWithType: IpcClientChannel.IpcClientChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref>クラスです。"
  remarks: "構成プロパティ、<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>このコンス トラクターによって返されたインスタンスはすべて、既定値に設定します</xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>。 次の表は、各構成プロパティの既定値を示します。      |構成プロパティ |説明 |  |----------------------------|-----------------|  |`name`|既定の名前は、「ipc クライアント」です。 各チャネルは名前が一意である必要があります |。  |`priority`|既定の優先度は 1 です |。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cs[Remoting_Ipc#21](~/add/codesnippet/csharp/m-system.runtime.remotin_34_1.cs)]\n [!code-cpp[Remoting_Ipc#21](~/add/codesnippet/cpp/m-system.runtime.remotin_34_1.cpp)]"
  syntax:
    content: public IpcClientChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcClientChannel&quot;> </xref>シンクと指定された構成プロパティを持つクラス。"
  remarks: "チャネルの構成プロパティの詳細については、次を参照してください。[チャネルとフォーマッタの構成プロパティ](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/add/codesnippet/cpp/e5e9822a-6bc5-4440-94c1-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/add/codesnippet/csharp/e5e9822a-6bc5-4440-94c1-_1.cs)]"
  syntax:
    content: public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>チャネルによって使用される構成プロパティの値を指定するコレクション</xref:System.Collections.IDictionary>。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>チャネルで使用する実装。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  id: '#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IpcClientChannel(String,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcClientChannel&quot;> </xref>シンクと指定した名前を持つクラス。"
  remarks: "このコンス トラクターを設定、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター</xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> 。 1 つ以上のチャネルを登録する場合は、チャネルごとに一意の名前は必要です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/add/codesnippet/cpp/c7989d9c-5253-4e00-b8ab-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/add/codesnippet/csharp/c7989d9c-5253-4e00-b8ab-_1.cs)]"
  syntax:
    content: public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "チャネルの名前。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;> </xref>チャネルで使用する実装。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの名前を取得します。"
  remarks: "登録されている各チャネルは、一意の名前を持ちます。 呼び出すときに、特定のチャネルを取得する名前が使用される、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=fullName>メソッド</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=fullName>。 既定の名前は、「ipc クライアント」です。"
  example:
  - "The following code example shows how to use the ChannelName property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/add/codesnippet/csharp/p-system.runtime.remotin_26_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/add/codesnippet/cpp/p-system.runtime.remotin_26_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>チャネルの名前を格納しているインスタンス</xref:System.String>。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの優先度を取得します。"
  remarks: "優先順位が競合するクライアントが、特定のエンドポイントに接続する順序を制御します。優先順位の高いチャネルは、低い優先順位のチャネルに接続してください。 既定の優先順位が 1 になります。負の値の優先度が許可されます。"
  example:
  - "The following code example shows how to use the ChannelPriority property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/add/codesnippet/csharp/p-system.runtime.remotin_86_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/add/codesnippet/cpp/p-system.runtime.remotin_86_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "チャネルに割り当てる優先度を示す整数。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcClientChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(String,Object,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "指定した URL またはチャネルのデータ オブジェクトにメッセージを配信するチャネル メッセージ シンクを返します。"
  remarks: "CreateMessageSink メソッドでは、指定した URL またはチャネルのデータ オブジェクトのいずれかにメッセージを配信するチャネル メッセージ シンクを返します。 場合、`uri`パラメーターは`null`、`remoteChannelData`シンクのターゲットとして使用されます。 いずれか、`url`または`remoteChannelData`パラメーターを指定できます`null`、両方は使用しません。"
  example:
  - "The following code example shows how to use the CreateMessageSink method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/add/codesnippet/csharp/26558359-cde8-4500-9c80-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/add/codesnippet/cpp/26558359-cde8-4500-9c80-_1.cpp)]"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "新しいシンク メッセージの配信先の URL です。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: remoteChannelData
      type: System.Object
      description: "新しいシンクがメッセージを配信する先のリモート ホストのチャネル データ オブジェクト。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: objectURI
      type: System.String
      description: "このメソッドが戻るとき、指定した URL またはチャネル データ オブジェクトにメッセージを配信する、新しいメッセージのチャネル シンクの URI を格納します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "指定した URL またはチャネルのデータ オブジェクトにメッセージを配信するチャネル メッセージ シンク。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "指定したシンクを実装していません<xref href=&quot;System.Runtime.Remoting.Messaging.IMessageSink&quot;></xref>です。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得または現在のチャネルがセキュリティで保護されたかどうかを示すブール値を設定します。"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "現在のインスタンスがセキュリティで保護されたかどうかを示すブール値。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IpcClientChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "指定された URL からチャネル URI と URI のリモートのよく知られているオブジェクトを抽出します。"
  remarks: ''
  example:
  - "The following code example shows how to use the Parse method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/add/codesnippet/csharp/a3ba2658-4290-43bf-abd5-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/add/codesnippet/cpp/a3ba2658-4290-43bf-abd5-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "URI オブジェクトを抽出する元の URL です。"
    - id: objectURI
      type: System.String
      description: "このメソッドが戻るとき、<xref:System.String>リモートの既知のオブジェクトの URI を保持するインスタンス</xref:System.String>。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.String
      description: "A<xref:System.String>チャネル URI を格納している</xref:System.String>。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel()
  nameWithType: IpcClientChannel.IpcClientChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(IDictionary,IClientChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel(String,IClientChannelSinkProvider)
  nameWithType: IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IpcClientChannel(String,IClientChannelSinkProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcClientChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(String,Object,String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IpcClientChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IpcClientChannel
  nameWithType: IpcClientChannel.IpcClientChannel
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcClientChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcClientChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: IpcClientChannel.CreateMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcClientChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcClientChannel
  isExternal: false
  name: Parse
  nameWithType: IpcClientChannel.Parse
