### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "デバッグ出力およびトレース出力を制御するスイッチのオン/オフする単純なを提供します。"
  remarks: "ブール トレース スイッチを使用して、有効にするにまたは重要度に基づいてメッセージを無効にすることができます。 使用して、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>スイッチの現在の値を取得するプロパティ</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>。       有効にし、アプリケーション構成ファイルによって、BooleanSwitch を無効にしますまたは、アプリケーションで構成された BooleanSwitch 値を使用できます。 または、コードで、BooleanSwitch を作成し、設定、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>コードの特定のセクションをインストルメント化するには、直接プロパティ</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>。       BooleanSwitch を構成するのには、アプリケーションの名前に対応する構成ファイルを編集します。 このファイル内でことができますを追加またはスイッチの削除、スイッチの値を設定またはオフにするスイッチは、以前、アプリケーションによって設定されたすべてです。 構成ファイルは、例を次のようにフォーマットされている必要があります。      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```この例の構成セクションを定義で BooleanSwitch、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティに設定`mySwitch`と<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>値に設定`true`</xref:System.Diagnostics.BooleanSwitch.Enabled%2A></xref:System.Diagnostics.Switch.DisplayName%2A>。 アプリケーション内で次のコード例に示すように、同じ名前を持つ、BooleanSwitch を作成することで構成されているスイッチの値を使用することができます。       [!code-cpp[クラシック BooleanSwitch.BooleanSwitch 例&2;](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)][!code-vb[クラシック BooleanSwitch.BooleanSwitch 例&2;](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)][!code-cs[クラシック BooleanSwitch.BooleanSwitch 例&2;](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs) ]既定では、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>構成ファイルで指定された値を使用してプロパティを設定します</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>。     値 0 を設定すると、スイッチを構成、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティを`false`; 0 以外の値を設定すると、スイッチを構成、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティを`true`</xref:System.Diagnostics.BooleanSwitch.Enabled%2A></xref:System.Diagnostics.BooleanSwitch.Enabled%2A>。 BooleanSwitch コンス トラクターは、構成ファイルでスイッチの初期設定を見つけられない場合、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>新しいスイッチのプロパティが設定されて`false`既定</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>。       トレース出力またはスイッチを使用してデバッグを有効にする必要があります。 次の構文は、コンパイラに固有です。 以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。      -C# でのデバッグを有効にするには、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。 Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。      -C# でのトレースを有効にするには、`/d:TRACE`フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。 Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。      > [!NOTE] > これらのデバッグし、トレース コンパイラ スイッチは、分離で BooleanSwitch クラスを使用する場合は必要ありません。 と共にのみに必要な<xref:System.Diagnostics.Trace>または<xref:System.Diagnostics.Debug>条件付きでコンパイルされるメソッド</xref:System.Diagnostics.Debug></xref:System.Diagnostics.Trace>。       アプリケーションのインストルメント化の詳細について<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace>。</xref:System.Diagnostics.Trace></xref:System.Diagnostics.Debug>参照してください。 詳細については、構成して、トレース スイッチを使用して、次を参照してください。[トレース スイッチ](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > パフォーマンスを向上させる BooleanSwitch メンバーを行うことができます`static`クラスにします。"
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref>指定した表示名と説明を持つクラス。"
  remarks: "作成するときに、 <xref:System.Diagnostics.BooleanSwitch>、`displayName`スイッチの初期設定を検索するパラメーターを使用します</xref:System.Diagnostics.BooleanSwitch>。 コンス トラクターは、初期設定を見つけられない場合、<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>プロパティに設定されている`false`(無効).</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       レベルを設定する、 <xref:System.Diagnostics.BooleanSwitch>、アプリケーションの名前に対応する構成ファイルを編集します</xref:System.Diagnostics.BooleanSwitch>。 このファイル内でことができますスイッチを追加してその値を設定、スイッチの削除またはオフにするすべてのスイッチが、アプリケーションで以前に設定します。 構成ファイルは次の例のように書式設定する必要があります: ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```       >  [!NOTE] > 作成したスイッチにする必要があります`static`です。"
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "ユーザー インターフェイスで表示する名前です。"
    - id: description
      type: System.String
      description: "スイッチの説明です。"
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref>指定した表示名、説明、および既定のスイッチ値を持つクラス。"
  remarks: "`displayName`パラメーターの値を設定するため、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティ、および`description`の値を設定するパラメーターを使用して、<xref:System.Diagnostics.Switch.Description%2A>プロパティ</xref:System.Diagnostics.Switch.Description%2A></xref:System.Diagnostics.Switch.DisplayName%2A>。 `defaultSwitchValue`パラメーターがフィールドとして保存され、初期化に使用される、<xref:System.Diagnostics.Switch.Value%2A>最初の参照のプロパティ</xref:System.Diagnostics.Switch.Value%2A>。 コンス トラクターの使用に関する詳細については、次を参照してください、<xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>コンス トラクター。</xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> 。"
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "ユーザー インターフェイスで表示する名前です。"
    - id: description
      type: System.String
      description: "スイッチの説明です。"
    - id: defaultSwitchValue
      type: System.String
      description: "スイッチの既定値です。"
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得またはスイッチが有効か無効になっているかどうかを示す値を設定します。"
  remarks: "既定では、このフィールドに設定`false`(無効)。 スイッチを有効にするには、このフィールドの値を割り当てます`true`です。 スイッチを無効にする値を割り当てる`false`です。  このプロパティの値は<xref:System.Diagnostics.Switch.SwitchSetting%2A>。</xref:System.Diagnostics.Switch.SwitchSetting%2A>基底クラスのプロパティの値によって決まります      > [!NOTE] > このメソッドを使用して、<xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>信頼されていないコードから呼び出されるようにするためのフラグです直前の呼び出し元のみする必要がある<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>権限。</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> 。 コードは、部分信頼コードから呼び出すことが場合、は、ユーザー入力を渡さない<xref:System.Runtime.InteropServices.Marshal>クラスのメソッドの検証を伴わない</xref:System.Runtime.InteropServices.Marshal>。"
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スイッチが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、適切なアクセス許可がありません。"
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "決定するかどうかの新しい値、<xref:System.Diagnostics.Switch.Value*>プロパティはブール値として解析することができます</xref:System.Diagnostics.Switch.Value*>。"
  remarks: "OnValueChanged メソッドは、新しい値はブール値 (&quot;false&quot;または&quot;true&quot;) の有効な文字列形式であるかどうかを判断します。 そのため、メソッドが設定する場合、<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティを 0 または 1</xref:System.Diagnostics.Switch.SwitchSetting%2A> 。  それ以外の場合、基本メソッドを呼び出して、設定を使用して、整数値を文字列値に変換しますが、<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティ</xref:System.Diagnostics.Switch.SwitchSetting%2A>。"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
