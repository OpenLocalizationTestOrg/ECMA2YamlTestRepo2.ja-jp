### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  id: AsymmetricSignatureDeformatter
  children:
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  langs:
  - csharp
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
  type: Class
  summary: "非対称署名逆フォーマッタのすべての実装の派生元となる抽象基本クラスを表します。"
  remarks: "非対称署名逆フォーマッタ<xref:System.Security.Cryptography.AsymmetricSignatureFormatter>。</xref:System.Security.Cryptography.AsymmetricSignatureFormatter>の実装を使用して作成されるデジタル署名を確認します。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricSignatureDeformatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: AsymmetricSignatureDeformatter()
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化<xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;></xref>です。"
  remarks: "抽象クラスのインスタンスを作成することはできません。 アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。       実装を<xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A><xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A><xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>。</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>の実装を呼び出す前に、キーとハッシュ アルゴリズムを設定して</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A></xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A>の使用します。"
  syntax:
    content: protected AsymmetricSignatureDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "派生クラスでオーバーライドされると、署名の検証に使用するハッシュ アルゴリズムを設定します。"
  remarks: "<xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>。</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>の実装を呼び出す前に、ハッシュ アルゴリズムを設定する必要があります。"
  syntax:
    content: public abstract void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "署名の検証に使用するハッシュ アルゴリズムの名前。"
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "派生クラスでオーバーライドされると、署名の検証に使用する公開キーを設定します。"
  remarks: "<xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>。</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>の実装を呼び出す前に、キーを設定する必要があります。"
  syntax:
    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "実装のインスタンス<xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;></xref>公開キーを保持します。"
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "派生クラスでオーバーライドされると、指定されたデータの署名を検証します。"
  remarks: "このメソッドを呼び出す前に、公開キーおよびハッシュ アルゴリズムを指定する必要があります。"
  syntax:
    content: public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "データが署名された`rgbSignature`です。"
    - id: rgbSignature
      type: System.Byte[]
      description: "検証する署名`rgbHash`です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> rgbSignature </code>で、指定したハッシュ アルゴリズムとキーを使用して計算された署名と一致する<code> rgbHash </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  id: VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(HashAlgorithm,Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "指定したハッシュ値から署名を検証します。"
  remarks: "このメソッドは、入力のハッシュ アルゴリズムの値の署名を検証する前に使用するハッシュ アルゴリズムを設定します。"
  syntax:
    content: public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "署名の検証に使用するハッシュ アルゴリズム。"
    - id: rgbSignature
      type: System.Byte[]
      description: "検証する署名します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>署名がハッシュ; で有効な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>hash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: AsymmetricSignatureDeformatter()
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature(HashAlgorithm,Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: SetKey
  nameWithType: AsymmetricSignatureDeformatter.SetKey
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature
