### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreRights
  id: SemaphoreRights
  children:
  - System.Security.AccessControl.SemaphoreRights.ChangePermissions
  - System.Security.AccessControl.SemaphoreRights.Delete
  - System.Security.AccessControl.SemaphoreRights.FullControl
  - System.Security.AccessControl.SemaphoreRights.Modify
  - System.Security.AccessControl.SemaphoreRights.ReadPermissions
  - System.Security.AccessControl.SemaphoreRights.Synchronize
  - System.Security.AccessControl.SemaphoreRights.TakeOwnership
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
  type: Enum
  summary: "名前付きシステム セマフォ オブジェクトに適用できるアクセス制御権を指定します。"
  remarks: "作成するときに、コントロールのアクセス権を指定する SemaphoreRights 列挙を使用して<xref:System.Security.AccessControl.SemaphoreSecurity>オブジェクト</xref:System.Security.AccessControl.SemaphoreSecurity>。 適用するには、名前付きシステム セマフォへのアクセス権を使用して<xref:System.Security.AccessControl.SemaphoreSecurity>オブジェクトと、<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName>コンス トラクターと<xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>メソッド</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName></xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.SemaphoreSecurity%29?displayProperty=fullName></xref:System.Security.AccessControl.SemaphoreSecurity>。       基になる Windows のアクセス権の数値では、次を参照してください。[同期オブジェクトのセキュリティとアクセス権 (Windows)](http://go.microsoft.com/fwlink/p/?LinkId=243073) 、MSDN ライブラリです。      > [!NOTE] > する同期オブジェクトにセキュリティが Windows 98 または Windows Millennium Edition のサポートされていません。"
  example:
  - "The following code example demonstrates the use of SemaphoreRights values when creating and using <xref:System.Security.AccessControl.SemaphoreAccessRule> objects. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType?displayProperty=fullName>rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to an <xref:System.Threading.Semaphore> object; see <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> method, and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_10_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_10_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(false)]

      public enum SemaphoreRights
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  id: ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "セキュリティを変更して、名前付きセマフォに関連付けられているルールを監査する権限です。"
  syntax:
    content: ChangePermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  id: Delete
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "名前付きセマフォを削除する権限。"
  syntax:
    content: Delete
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  id: FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "名前付きセマフォを完全に制御およびそのアクセス規則を変更し、監査規則する権限。"
  syntax:
    content: FullControl
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  id: Modify
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "名前付きセマフォを解放する権限。"
  syntax:
    content: Modify
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  id: ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "開くし、監査アクセス規則をコピーする権利は、名前付きセマフォのルールします。"
  syntax:
    content: ReadPermissions
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  id: Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "名前付きセマフォを待機する権限です。"
  syntax:
    content: Synchronize
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  id: TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  langs:
  - csharp
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  type: Field
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "名前付きセマフォの所有者を変更する権限。"
  syntax:
    content: TakeOwnership
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.AccessControl.SemaphoreRights.ChangePermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ChangePermissions
  nameWithType: SemaphoreRights.ChangePermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ChangePermissions
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreRights.Delete
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Delete
  nameWithType: SemaphoreRights.Delete
  fullName: System.Security.AccessControl.SemaphoreRights.Delete
- uid: System.Security.AccessControl.SemaphoreRights.FullControl
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: FullControl
  nameWithType: SemaphoreRights.FullControl
  fullName: System.Security.AccessControl.SemaphoreRights.FullControl
- uid: System.Security.AccessControl.SemaphoreRights.Modify
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Modify
  nameWithType: SemaphoreRights.Modify
  fullName: System.Security.AccessControl.SemaphoreRights.Modify
- uid: System.Security.AccessControl.SemaphoreRights.ReadPermissions
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: ReadPermissions
  nameWithType: SemaphoreRights.ReadPermissions
  fullName: System.Security.AccessControl.SemaphoreRights.ReadPermissions
- uid: System.Security.AccessControl.SemaphoreRights.Synchronize
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: Synchronize
  nameWithType: SemaphoreRights.Synchronize
  fullName: System.Security.AccessControl.SemaphoreRights.Synchronize
- uid: System.Security.AccessControl.SemaphoreRights.TakeOwnership
  parent: System.Security.AccessControl.SemaphoreRights
  isExternal: false
  name: TakeOwnership
  nameWithType: SemaphoreRights.TakeOwnership
  fullName: System.Security.AccessControl.SemaphoreRights.TakeOwnership
