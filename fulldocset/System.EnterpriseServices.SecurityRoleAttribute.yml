### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.SecurityRoleAttribute
  id: SecurityRoleAttribute
  children:
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  - System.EnterpriseServices.SecurityRoleAttribute.Description
  - System.EnterpriseServices.SecurityRoleAttribute.Role
  - System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  langs:
  - csharp
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute
  fullName: System.EnterpriseServices.SecurityRoleAttribute
  type: Class
  summary: "アプリケーションまたはコンポーネントの役割を構成します。 このクラスは継承できません。"
  remarks: "アプリケーションにロールを追加して、コンポーネントに関連付けられて、SecurityRoleAttribute を使用できます。 SecurityRoleAttribute は、アセンブリ全体に適用するときに、ロールがアプリケーションの構成 (COM + カタログ) に存在するを保証します。 COM + エクスプ ローラーを使用して、ロールのメンバーを追加することができます。       コンポーネントに適用する場合、SecurityRoleAttribute はの役割は、アプリケーションの構成内に存在して、対象のコンポーネントをロールに関連付けますのことを確認します。       既定では、作成したロール メンバーを持つありません。 場合、<xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A>プロパティに設定されている`true`、Everyone ユーザー グループは、ロールに自動的に追加します</xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A>。 これは、システムに対する最小限の制御が与えられているすべてのアクセスの種類のロールに最適です。       メソッドごと、およびインターフェイスごとに、コンポーネント レベルでセキュリティ ロールを指定することができます。 同様に他のメソッドの属性では、セキュリティの構成がない現在間で共有インターフェイスの定義とメソッドの実装です。"
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/t-system.enterpriseservi_22_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/t-system.enterpriseservi_22_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/t-system.enterpriseservi_22_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityRoleAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref>クラスとセット、<xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>プロパティ</xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>。"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/m-system.enterpriseservi_5_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/m-system.enterpriseservi_5_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_5_1.vb)]"
  syntax:
    content: public SecurityRoleAttribute (string role);
    parameters:
    - id: role
      type: System.String
      description: "アプリケーション、コンポーネント、インターフェイス、またはメソッドのセキュリティ ロール。"
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref>クラスとセット、 <> </> *> と<> *> プロパティです。"
  syntax:
    content: public SecurityRoleAttribute (string role, bool everyone);
    parameters:
    - id: role
      type: System.String
      description: "アプリケーション、コンポーネント、インターフェイス、またはメソッドのセキュリティ ロール。"
    - id: everyone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しく作成されたロールが、すべてのユーザーであることを必要とするユーザー グループにユーザーとして追加それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  id: Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得またはロールの説明を設定します。"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "ロールの説明です。"
  overload: System.EnterpriseServices.SecurityRoleAttribute.Description*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  id: Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "取得またはセキュリティ ロールを設定します。"
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "アプリケーション、コンポーネント、インターフェイス、またはメソッドに適用するセキュリティ ロール。"
  overload: System.EnterpriseServices.SecurityRoleAttribute.Role*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  id: SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "ユーザーとしてユーザー グループ、すべてのユーザーを追加するかどうかを示す値を設定します。"
  remarks: "このプロパティを設定`false`を抑制する状況、すべてのユーザーを追加するユーザー グループに新しくユーザーとして作成されたロールです。 プロパティを設定`true`を新しく作成されたロールが Everyone ユーザーとして追加する必要があります。 アプリケーションに既に存在するロールは変更されません。"
  syntax:
    content: public bool SetEveryoneAccess { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しく作成されたロールが、すべてのユーザーであることを要求するユーザー グループの追加 (アプリケーションに既に存在するロールは変更されません)、ユーザーとしてそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ユーザーとしてを抑制する状況、すべてのユーザーを追加するユーザーをグループ化します。"
  overload: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
