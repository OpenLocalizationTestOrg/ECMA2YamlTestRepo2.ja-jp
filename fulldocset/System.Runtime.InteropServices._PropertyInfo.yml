### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  summary: "パブリック メンバーを公開、 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;アンマネージ コードにクラスです。"
  remarks: "このインターフェイスは、アンマネージ コードからマネージ クラスには、アクセスをマネージ コードから呼び出すことはできません。       このインターフェイスの vtable 順序の維持、<xref:System.Reflection.PropertyInfo?displayProperty=fullName>クラス メンバーのアンマネージ COM オブジェクトでアクセスできる</xref:System.Reflection.PropertyInfo?displayProperty=fullName>。"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))]

      public interface _PropertyInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.Attributes*>プロパティ</xref:System.Reflection.PropertyInfo.Attributes*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.Attributes%2A>プロパティは、このプロパティの属性を取得します</xref:System.Reflection.PropertyInfo.Attributes%2A>。"
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: "このプロパティの属性。"
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.CanRead*>プロパティ</xref:System.Reflection.PropertyInfo.CanRead*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.CanRead%2A>プロパティがプロパティを読み取ることがあるかどうかを示す値を取得します</xref:System.Reflection.PropertyInfo.CanRead%2A>。"
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このプロパティを読み取ることができます。 場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.CanWrite*>プロパティ</xref:System.Reflection.PropertyInfo.CanWrite*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.CanWrite%2A>プロパティがプロパティに書き込むことができるかどうかを示す値を取得します</xref:System.Reflection.PropertyInfo.CanWrite%2A>。"
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このプロパティに書き込むことができる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.DeclaringType*>プロパティ</xref:System.Reflection.MemberInfo.DeclaringType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.DeclaringType%2A>プロパティは、このメンバーを宣言するクラスを取得します</xref:System.Reflection.MemberInfo.DeclaringType%2A>。"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>このメンバーを宣言するクラスのオブジェクト。"
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.Equals*>メソッド</xref:System.Object.Equals*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Object.Equals%2A>メソッドを判断するかどうか<xref:System.Object>が現在<xref:System.Object>.</xref:System.Object>と等しい</xref:System.Object>の指定した</xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>現在<xref:System.Object>。</xref:System.Object>と比較するには</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref:System.Object>が現在に等しい<xref:System.Object>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Object> </xref:System.Object> 。"
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetAccessors*>メソッド</xref:System.Reflection.PropertyInfo.GetAccessors*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>メソッド、パブリックをリフレクションする要素の配列を返します`get`、 `set`、およびその他のアクセサー プロパティの現在のインスタンスによって反映されるのです</xref:System.Reflection.PropertyInfo.GetAccessors%2A>。"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "配列<xref:System.Reflection.MethodInfo>、パブリック オブジェクト<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>、およびプロパティの他のアクセサーは、アクセサーが見つかった場合、現在のインスタンスによって反映される以外の場合はそれ以外の場合、このメソッドがゼロ (0) の要素を持つ配列を返します</xref:System.Reflection.MethodInfo>。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetAccessors*>メソッド</xref:System.Reflection.PropertyInfo.GetAccessors*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetAccessors%2A>メソッド、パブリックをリフレクションする要素の配列を返すと、指定すると、パブリックでない場合`get`、 `set`、およびその他のアクセサー プロパティの現在のインスタンスによって反映されるのです</xref:System.Reflection.PropertyInfo.GetAccessors%2A>。"
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>返されたに非パブリック メソッドを含める<xref uid=&quot;langword_csharp_MethodInfo&quot; name=&quot;MethodInfo&quot; href=&quot;&quot;></xref>配列。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Reflection.MethodInfo[]
      description: "配列<xref:System.Reflection.MethodInfo>リフレクションする要素のオブジェクト、 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>、およびその他のアクセサー プロパティの現在のインスタンスによって反映されるのです</xref:System.Reflection.MethodInfo>。 場合、 <code> nonPublic </code>パラメーターは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、この配列には、パブリックと非パブリック両方が含まれています。 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>、およびその他のアクセサー。 場合<code> nonPublic </code>は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、この配列を含む唯一のパブリック<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>、およびその他のアクセサー。 指定した参照可能範囲でアクセサーが見つからなかった場合、このメソッドは、ゼロ (0) の要素の配列を返します。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.GetCustomAttributes*>メソッド</xref:System.Reflection.MemberInfo.GetCustomAttributes*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドは、すべてのカスタム属性を含む配列を返します</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>。"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "属性を検索するこのメンバーの継承チェーンを検索する場合は trueそれ以外の場合は false。"
    return:
      type: System.Object[]
      description: "すべてのカスタム属性を含む配列。 または属性が定義されていない場合は&0; 要素の配列。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.GetCustomAttributes*>メソッド</xref:System.Reflection.MemberInfo.GetCustomAttributes*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> <xref:System.Type>。</xref:System.Type>で識別されるカスタム属性の配列を返します</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "検索対象の属性の型。 この型に割り当てることができる属性だけが返されます。"
    - id: inherit
      type: System.Boolean
      description: "属性を検索するこのメンバーの継承チェーンを検索する場合は trueそれ以外の場合は false。"
    return:
      type: System.Object[]
      description: "このメンバーに適用されるカスタム属性の配列。 または属性が適用されていない場合はゼロ (0) 要素の配列。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetGetMethod*>メソッド</xref:System.Reflection.PropertyInfo.GetGetMethod*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>メソッドは、パブリックを返します`get`このプロパティのアクセサー</xref:System.Reflection.PropertyInfo.GetGetMethod%2A> 。"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>パブリックを表すオブジェクトを<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>このプロパティのアクセサーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>アクセサーが非パブリックまたは存在しません</xref:System.Reflection.MethodInfo>。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetGetMethod*>メソッド</xref:System.Reflection.PropertyInfo.GetGetMethod*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetGetMethod%2A>パブリックまたは非パブリック メソッドが返されます`get`このプロパティのアクセサー</xref:System.Reflection.PropertyInfo.GetGetMethod%2A> 。"
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>返す非パブリック<xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref>アクセサー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>オブジェクトを表す、 <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref>このプロパティのアクセサー場合、 <code> nonPublic </code>パラメーターは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.Reflection.MethodInfo> 。 Or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessor is non-public, or if <code>nonPublic</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but no <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;></xref> accessors exist."
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.GetHashCode*>メソッド</xref:System.Object.GetHashCode*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Object.GetHashCode%2A>メソッドは、特定の型のハッシュ関数として機能します</xref:System.Object.GetHashCode%2A>。 <xref:System.Object.GetHashCode%2A>ハッシュ テーブルなどのアルゴリズムとデータの構造体のハッシュでの使用に適しています。</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のインスタンスのハッシュ コード。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "一連の名前を対応する一連のディスパッチ識別子にマップします。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "将来の使用のために予約されています。 Iid_ にする必要があります。"
    - id: rgszNames
      type: System.IntPtr
      description: "割り当てる名前の配列。"
    - id: cNames
      type: System.UInt32
      description: "マップする名前の数。"
    - id: lcid
      type: System.UInt32
      description: "名前を解釈するロケール コンテキスト。"
    - id: rgDispId
      type: System.IntPtr
      description: "名前に対応する識別子を受け取る、呼び出し元が割り当てた配列。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetIndexParameters*>メソッド</xref:System.Reflection.PropertyInfo.GetIndexParameters*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>メソッド、プロパティのすべてのインデックス パラメーターの配列を返します</xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "型の配列<xref:System.Reflection.ParameterInfo>インデックスのパラメーターを含むします</xref:System.Reflection.ParameterInfo>。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetSetMethod*>メソッド</xref:System.Reflection.PropertyInfo.GetSetMethod*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>メソッドは、パブリックを返します`set`このプロパティのアクセサー</xref:System.Reflection.PropertyInfo.GetSetMethod%2A> 。"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "<xref:System.Reflection.MethodInfo>オブジェクトを表す、 <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref>メソッドがこのプロパティの場合、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>アクセサーがパブリックでまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>アクセサーがパブリックではありません</xref:System.Reflection.MethodInfo>。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetSetMethod*>メソッド</xref:System.Reflection.PropertyInfo.GetSetMethod*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetSetMethod%2A>メソッドを返します、`set`このプロパティのアクセサー</xref:System.Reflection.PropertyInfo.GetSetMethod%2A> 。"
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>非パブリック アクセサーを返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Reflection.MethodInfo
      description: "次の表に、値の&1; つ。       <table><thead><tr><th> 値       </th><th> 意味       </th></tr></thead><tbody><tr><td> A<xref:System.Reflection.MethodInfo>オブジェクトを表す、 <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;> </xref>このプロパティのメソッド</xref:System.Reflection.MethodInfo>。       </td><td> <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref>アクセサーがパブリック。       - または -、 <code> nonPublic </code>パラメーターは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサーが非パブリック。       </td></tr><tr><td><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref></td><td> <code> nonPublic </code>パラメーターは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、そのプロパティが読み取り専用です。       - または -、 <code> nonPublic </code>パラメーターは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサーが非パブリック。       - または - がない<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref>アクセサー。       </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.GetType*>メソッド</xref:System.Object.GetType*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Object.GetType%2A>メソッドは、現在のインスタンスの型を取得します</xref:System.Object.GetType%2A>。"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>オブジェクト</xref:System.Type>。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "インターフェイスの型情報を取得するために使用できるオブジェクトの型情報を取得します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "返される型情報。"
    - id: lcid
      type: System.UInt32
      description: "型情報のロケールの識別子です。"
    - id: ppTInfo
      type: System.IntPtr
      description: "要求された型情報オブジェクトへのポインター。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "オブジェクトが (0 または 1) を提供する型情報インターフェイスの数を取得します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "このメソッドが戻るときに、オブジェクトによって提供される型情報インターフェイスの数を受け取る場所へのポインターが含まれています。 このパラメーターは初期化せずに渡されます。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetValue*>メソッド</xref:System.Reflection.PropertyInfo.GetValue*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetValue%2A>メソッドがコンパイラによってプロパティに関連付けられているリテラル値を返します</xref:System.Reflection.PropertyInfo.GetValue%2A>。"
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "プロパティの値が返されるオブジェクト。"
    - id: index
      type: System.Object[]
      description: "インデックス付きプロパティの省略可能なインデックス値。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>のインデックスのないプロパティです。"
    return:
      type: System.Object
      description: "プロパティ値を<code> obj </code>パラメーター。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.GetValue*>メソッド</xref:System.Reflection.PropertyInfo.GetValue*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.GetValue%2A>メソッドは、指定したバインディング、インデックス、および<xref:System.Globalization.CultureInfo>。</xref:System.Globalization.CultureInfo>を持つプロパティの値を返します</xref:System.Reflection.PropertyInfo.GetValue%2A>"
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "プロパティの値が返されるオブジェクト。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: '呼び出し属性。 This must be a bit flag from <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. 適切な呼び出し属性を指定する必要があります。 静的メンバーが呼び出される場合、 <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref>フラグ<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>設定する必要があります。'
    - id: binder
      type: System.Reflection.Binder
      description: "バインディング、引数の強制変換を有効にするオブジェクトの種類、メンバーの呼び出し、および取得<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>リフレクション オブジェクト。 場合`binder`は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>既定のバインダーが使用されます。"
    - id: index
      type: System.Object[]
      description: "インデックス付きプロパティの省略可能なインデックス値。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>のインデックスのないプロパティです。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>リソースのローカライズ対象のカルチャを表すオブジェクト。 リソースがこのカルチャにローカライズされていない場合、 <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref>メソッドは一致するものを連続して呼び出されます。 この値が場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>から取得した、 <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref>プロパティです。"
    return:
      type: System.Object
      description: "プロパティ値を<code> obj </code>パラメーター。"
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "プロパティとオブジェクトによって公開されたメソッドへのアクセスを提供します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "メンバーの識別子。"
    - id: riid
      type: System.Guid
      description: "将来の使用のために予約されています。 Iid_ にする必要があります。"
    - id: lcid
      type: System.UInt32
      description: "引数を解釈する対象のロケール コンテキスト。"
    - id: wFlags
      type: System.Int16
      description: "呼び出しのコンテキストを記述するフラグ。"
    - id: pDispParams
      type: System.IntPtr
      description: "引数の配列、名前付き引数、および各配列内の要素の数のカウントの引数 Dispid の配列を含む構造体へのポインター。"
    - id: pVarResult
      type: System.IntPtr
      description: "結果を格納する場所へのポインター。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "例外情報を格納する構造体へのポインター。"
    - id: puArgErr
      type: System.IntPtr
      description: "エラーが発生した最初の引数のインデックス。"
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.IsDefined*>メソッド</xref:System.Reflection.MemberInfo.IsDefined*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.IsDefined%2A>メソッドを示しますか&1; つ以上のインスタンス、`attributeType`パラメーターがこのメンバーに適用します</xref:System.Reflection.MemberInfo.IsDefined%2A>。"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref:System.Type>のカスタム属性が適用されるオブジェクトします</xref:System.Type>。"
    - id: inherit
      type: System.Boolean
      description: "属性を検索するこのメンバーの継承チェーンを検索する場合は trueそれ以外の場合は false。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合&1; つまたは複数のインスタンス、 <code> attributeType </code>パラメーターは、このメンバーに適用されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.IsSpecialName*>プロパティ</xref:System.Reflection.PropertyInfo.IsSpecialName*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.IsSpecialName%2A>プロパティは、プロパティは、特別な名前であるかどうかを示す値を設定します</xref:System.Reflection.PropertyInfo.IsSpecialName%2A>。"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、このプロパティは、特別な名前です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.MemberType*>プロパティ</xref:System.Reflection.PropertyInfo.MemberType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.MemberType%2A>プロパティを取得、<xref:System.Reflection.MemberTypes>このメンバーがプロパティであることを示す値</xref:System.Reflection.MemberTypes></xref:System.Reflection.PropertyInfo.MemberType%2A>。"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "1 つ、 <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>このメンバーがプロパティであることを示す値。"
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.Name*>プロパティ</xref:System.Reflection.MemberInfo.Name*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.Name%2A>プロパティは、現在のメンバーの名前を取得します</xref:System.Reflection.MemberInfo.Name%2A>。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>このメンバーの名前を表すオブジェクト</xref:System.String>。"
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.PropertyType*>プロパティ</xref:System.Reflection.PropertyInfo.PropertyType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.PropertyType%2A>プロパティは、このプロパティの型を取得します</xref:System.Reflection.PropertyInfo.PropertyType%2A>。"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "このプロパティの型。"
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.ReflectedType*>プロパティ</xref:System.Reflection.MemberInfo.ReflectedType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.ReflectedType%2A>プロパティは、これを取得するために使用されたクラス オブジェクトを取得<xref:System.Reflection.MemberInfo>オブジェクト</xref:System.Reflection.MemberInfo></xref:System.Reflection.MemberInfo.ReflectedType%2A>。"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>オブジェクトを<xref:System.Reflection.MemberInfo>オブジェクトを取得します</xref:System.Reflection.MemberInfo></xref:System.Type>。"
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.PropertyInfo.SetValue*>メソッド</xref:System.Reflection.PropertyInfo.SetValue*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.PropertyInfo.SetValue%2A>メソッドは、インデックスのプロパティの省略可能なインデックス値を持つプロパティの値を設定します</xref:System.Reflection.PropertyInfo.SetValue%2A>。"
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: "プロパティの値が設定されるオブジェクト。"
    - id: value
      type: System.Object
      description: "このプロパティの新しい値。"
    - id: index
      type: System.Object[]
      description: "インデックス付きプロパティの省略可能なインデックス値。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>のインデックスのないプロパティです。"
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.FieldInfo.SetValue*>メソッド</xref:System.Reflection.FieldInfo.SetValue*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.FieldInfo.SetValue%2A>メソッドは、特定の値に指定されたオブジェクトのプロパティ値を設定します</xref:System.Reflection.FieldInfo.SetValue%2A>。"
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "プロパティの値が返されるオブジェクト。"
    - id: value
      type: System.Object
      description: "このプロパティの新しい値。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: '呼び出し属性。 This must be a bit flag from <xref href=&quot;System.Reflection.BindingFlags&quot;></xref>: <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateInstance&quot; name=&quot;CreateInstance&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetField&quot; name=&quot;SetField&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetProperty&quot; name=&quot;GetProperty&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SetProperty&quot; name=&quot;SetProperty&quot; href=&quot;&quot;></xref>. 適切な呼び出し属性を指定する必要があります。 静的メンバーが呼び出される場合、 <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref>フラグ<xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref>設定する必要があります。'
    - id: binder
      type: System.Reflection.Binder
      description: "バインディング、引数の強制変換を有効にするオブジェクトの種類、メンバーの呼び出し、および取得<xref:System.Reflection.MemberInfo>リフレクション オブジェクト</xref:System.Reflection.MemberInfo>。 場合`binder`は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>既定のバインダーが使用されます。"
    - id: index
      type: System.Object[]
      description: "インデックス付きプロパティの省略可能なインデックス値。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>のインデックスのないプロパティです。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>リソースのローカライズ対象のカルチャを表すオブジェクト</xref:System.Globalization.CultureInfo>。 リソースがこのカルチャにローカライズされていない場合、 <xref uid=&quot;langword_csharp_CultureInfo.Parent&quot; name=&quot;CultureInfo.Parent&quot; href=&quot;&quot;> </xref>メソッドは一致するものを連続して呼び出されます。 この値が場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref>から取得した、 <xref uid=&quot;langword_csharp_CultureInfo.CurrentUICulture&quot; name=&quot;CultureInfo.CurrentUICulture&quot; href=&quot;&quot;> </xref>プロパティです。"
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.ToString*>メソッド</xref:System.Object.ToString*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在<xref:System.Object>。</xref:System.Object>を表す文字列です。"
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: System.Runtime.InteropServices._PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: true
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: System.Runtime.InteropServices._PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: System.Runtime.InteropServices._PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: System.Runtime.InteropServices._PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: System.Runtime.InteropServices._PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,Object[])
  nameWithType: _PropertyInfo.GetValue(Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._PropertyInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: System.Runtime.InteropServices._PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: System.Runtime.InteropServices._PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: System.Runtime.InteropServices._PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: System.Runtime.InteropServices._PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,Object[])
  nameWithType: _PropertyInfo.SetValue(Object,Object,Object[])
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._PropertyInfo.SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: System.Runtime.InteropServices._PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
