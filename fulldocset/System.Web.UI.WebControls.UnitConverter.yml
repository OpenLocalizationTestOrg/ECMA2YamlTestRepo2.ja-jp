### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.UnitConverter
  id: UnitConverter
  children:
  - System.Web.UI.WebControls.UnitConverter.#ctor
  - System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: UnitConverter
  nameWithType: UnitConverter
  fullName: System.Web.UI.WebControls.UnitConverter
  type: Class
  summary: "変換、 <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>オブジェクトを別の型、および別のデータ型のオブジェクトを<xref href=&quot;System.Web.UI.WebControls.Unit&quot;></xref>オブジェクト。"
  remarks: "変換する UnitConverter クラスを使用して、<xref:System.Web.UI.WebControls.Unit>別のデータ型のオブジェクトにします</xref:System.Web.UI.WebControls.Unit>。 <xref:System.Web.UI.WebControls.Unit>。</xref:System.Web.UI.WebControls.Unit>に別のデータ型のオブジェクトを変換するのに UnitConverter クラスを使用することもできます。      > [!NOTE] > このコンバーターは、文字列のみを変換できる<xref:System.Web.UI.WebControls.Unit>と<xref:System.Web.UI.WebControls.Unit>を文字列にします</xref:System.Web.UI.WebControls.Unit></xref:System.Web.UI.WebControls.Unit>。      > [!CAUTION] > 型コンバーターに直接アクセスする必要があることはありません。 代わりに、適切なコンバーター <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>。</xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>を使用して、 詳細については、<xref:System.ComponentModel.TypeConverter?displayProperty=fullName>基底クラス</xref:System.ComponentModel.TypeConverter?displayProperty=fullName>の例を参照してください。"
  syntax:
    content: 'public class UnitConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.WebControls.UnitConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.UnitConverter
  langs:
  - csharp
  name: UnitConverter()
  nameWithType: UnitConverter.UnitConverter()
  fullName: System.Web.UI.WebControls.UnitConverter.UnitConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.UnitConverter&quot;> </xref>クラスです。"
  syntax:
    content: public UnitConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.UnitConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: UnitConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "単位コンバーターが、指定した型から変換できるかどうかを示す値を返します。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>インスタンスが変換対象のオブジェクトのコンテキストを指定します。"
    - id: sourceType
      type: System.Type
      description: "ソースの種類。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>から、ソースの種類を変換できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.UnitConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: UnitConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コンバーターが変換できるかどうかを示す値を返します、 <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>オブジェクトを指定した型にします。"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>変換対象のオブジェクトのコンテキストを示すです。"
    - id: destinationType
      type: System.Type
      description: "&lt;Xref:System.Type?displayProperty=fullName&gt;に変換するデータ型を表すです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンバーターが変換をサポートしているかどうか、 <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>オブジェクトを移行先の型です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.UnitConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.WebControls.UnitConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: UnitConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.WebControls.UnitConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたコンテキスト、オブジェクト、および引数のリストからの型変換を実行します。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>変換対象のオブジェクトのコンテキストを示すインスタンスです。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;言語やカレンダー システムなどのカルチャに関する情報を表すオブジェクト。 このパラメーターは、このメソッドでは使用されません。 このメソッドの将来のバージョン用に予約されています。 渡すことができます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このパラメーターにします。"
    - id: value
      type: System.Object
      description: "変換するオブジェクト。"
    return:
      type: System.Object
      description: "変換後のオブジェクト。"
  overload: System.Web.UI.WebControls.UnitConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: UnitConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したコンテキスト、オブジェクト、および引数のリストを指定指定した型への型変換を実行します。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>変換対象のオブジェクトのコンテキストを示すインスタンスです。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;言語やカレンダー システムなどのカルチャに関する情報を表すオブジェクト。 このパラメーターは、このメソッドでは使用されません。 このメソッドの将来のバージョン用に予約されています。 渡すことができます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このパラメーターにします。"
    - id: value
      type: System.Object
      description: "変換するオブジェクト。"
    - id: destinationType
      type: System.Type
      description: "変換後の型。"
    return:
      type: System.Object
      description: "変換後のオブジェクト。"
  overload: System.Web.UI.WebControls.UnitConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Web.UI.WebControls.UnitConverter.#ctor
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: UnitConverter()
  nameWithType: UnitConverter.UnitConverter()
  fullName: System.Web.UI.WebControls.UnitConverter.UnitConverter()
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: UnitConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: UnitConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: UnitConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.WebControls.UnitConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: UnitConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Web.UI.WebControls.UnitConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Web.UI.WebControls.UnitConverter.#ctor*
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: UnitConverter
  nameWithType: UnitConverter.UnitConverter
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertFrom*
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: UnitConverter.CanConvertFrom
- uid: System.Web.UI.WebControls.UnitConverter.CanConvertTo*
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: UnitConverter.CanConvertTo
- uid: System.Web.UI.WebControls.UnitConverter.ConvertFrom*
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: UnitConverter.ConvertFrom
- uid: System.Web.UI.WebControls.UnitConverter.ConvertTo*
  parent: System.Web.UI.WebControls.UnitConverter
  isExternal: false
  name: ConvertTo
  nameWithType: UnitConverter.ConvertTo
