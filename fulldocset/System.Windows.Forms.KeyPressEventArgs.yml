### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref>イベント。"
  remarks: "KeyPressEventArgs は、ユーザーがキーを押すとで構成される文字を指定します。 たとえば、ユーザーは、shift キーを押しながら K キーを押すと、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>プロパティは、大文字の K を返します      A<xref:System.Windows.Forms.Control.KeyPress>イベント キーを押したときに発生します</xref:System.Windows.Forms.Control.KeyPress></xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>。 <xref:System.Windows.Forms.Control.KeyPress>イベントは、<xref:System.Windows.Forms.Control.KeyUp>および<xref:System.Windows.Forms.Control.KeyDown>。</xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyUp></xref:System.Windows.Forms.Control.KeyPress>密接に連携する&2; つのイベント <xref:System.Windows.Forms.Control.KeyDown>イベントの前に各<xref:System.Windows.Forms.Control.KeyPress>、キーを押したときにイベントおよび<xref:System.Windows.Forms.Control.KeyUp>イベント キーを離したときに発生します</xref:System.Windows.Forms.Control.KeyUp></xref:System.Windows.Forms.Control.KeyPress></xref:System.Windows.Forms.Control.KeyDown>。 ユーザーは、キーを保持しているときに重複する<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyPress>イベントが、文字が繰り返されるたびに発生します</xref:System.Windows.Forms.Control.KeyPress></xref:System.Windows.Forms.Control.KeyDown>。 1 つ<xref:System.Windows.Forms.Control.KeyUp>リリース時にイベントを生成します</xref:System.Windows.Forms.Control.KeyUp>。       各<xref:System.Windows.Forms.Control.KeyPress>、KeyPressEventArgs が渡されるイベント</xref:System.Windows.Forms.Control.KeyPress>。 A<xref:System.Windows.Forms.KeyEventArgs>各に渡される<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyUp>イベント</xref:System.Windows.Forms.Control.KeyUp></xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.KeyEventArgs>。 A<xref:System.Windows.Forms.KeyEventArgs>別のキーと共にどの修飾子キー (CTRL、shift キーを押し、または alt キー) が押されたかどうかを指定します</xref:System.Windows.Forms.KeyEventArgs>。 (この修飾子の詳細については、を介して取得することもできます、<xref:System.Windows.Forms.Control.ModifierKeys%2A>のプロパティ、<xref:System.Windows.Forms.Control>クラス)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A> 。     設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>を`true`を取り消す、`KeyPress`イベント</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>。 これにより、コントロールがキーを押すを処理します。      > [!NOTE] > 一部のコントロールでは、特定キー ストローク<xref:System.Windows.Forms.Control.KeyDown>。</xref:System.Windows.Forms.Control.KeyDown>を処理します。 たとえば、<xref:System.Windows.Forms.RichTextBox>する前に Enter キーを処理<xref:System.Windows.Forms.Control.KeyPress>と呼びます</xref:System.Windows.Forms.Control.KeyPress></xref:System.Windows.Forms.RichTextBox>。 このような場合はキャンセルできません、<xref:System.Windows.Forms.Control.KeyPress>イベントからキー ストロークを取り消す必要があると<xref:System.Windows.Forms.Control.KeyDown>代わりにします</xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyPress>。       イベント モデルについては、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref>クラスです。"
  remarks: "使用して、<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>修飾子キーの現在の状態を取得するプロパティ</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>。"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "ユーザーが押されたキーに対応する ASCII 文字。"
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref>イベントが処理されました。"
  remarks: "イベントが処理されない場合は、既定の処理用のオペレーティング システムに送信されます。 Handled &quot;éý&quot;`true`を取り消す、`KeyPress`イベント。"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>イベントが処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または押されたキーに対応する文字を設定します。"
  remarks: "実行時と実行時の特殊な状況でキーを変更するのには、サンプルのキーストロークを KeyChar プロパティを使用します。 たとえば、ユーザーが郵便番号が入ったときに、非数値キープレスを無効にするエントリのデータ フィールドで大文字にするか、キーボードまたは特定のキーの組み合わせの他のキー入力デバイスを監視するすべてのアルファベット キープレスの変更を KeyChar を行うこともできます。       取得または、次のキーを設定することができます: - a ~ z、A ~ Z。      -CTRL キー。      区切り記号。      -キー、およびキーボードのテンキーの一番上に両方の番号します。      -入力してください。       取得または、次のキーを設定することはできません:-、TAB キー。      -挿入および削除します。      ホームです。      -終了します。      -PAGEUP、PAGEDOWN です。      -F1、F2 キー。      ALT です。      下向きの矢印キー。      > [!NOTE] > 上記以外の文字のキーのいずれかを検出する方法については、<xref:System.Windows.Forms.KeyEventArgs>クラス</xref:System.Windows.Forms.KeyEventArgs>を参照してください。      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "構成される ASCII 文字。 たとえば、ユーザーは、shift キーを押しながら K キーを押すと、このプロパティは 大文字の K を返します"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
