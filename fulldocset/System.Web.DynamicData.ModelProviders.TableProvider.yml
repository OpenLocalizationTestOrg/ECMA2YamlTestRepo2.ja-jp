### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  id: TableProvider
  children:
  - System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)
  - System.Web.DynamicData.ModelProviders.TableProvider.Attributes
  - System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)
  - System.Web.DynamicData.ModelProviders.TableProvider.Columns
  - System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName
  - System.Web.DynamicData.ModelProviders.TableProvider.DataModel
  - System.Web.DynamicData.ModelProviders.TableProvider.EntityType
  - System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)
  - System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)
  - System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor
  - System.Web.DynamicData.ModelProviders.TableProvider.Name
  - System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType
  - System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType
  - System.Web.DynamicData.ModelProviders.TableProvider.ToString
  langs:
  - csharp
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
  type: Class
  summary: "テーブルの動的なデータ プロバイダーの基本クラスを提供します。"
  remarks: "テーブルのプロバイダーは、このクラスを拡張する必要があります。 LINQ to SQL クラスおよび ADO.NET エンティティ データ モデルは、このクラスを拡張するプロバイダーです。"
  syntax:
    content: public abstract class TableProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)
  id: '#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)'
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: TableProvider(DataModelProvider)
  nameWithType: TableProvider.TableProvider(DataModelProvider)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.TableProvider(DataModelProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.DynamicData.ModelProviders.TableProvider&quot;> </xref>継承クラス インスタンスによって使用されるクラスです。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。"
  syntax:
    content: protected TableProvider (System.Web.DynamicData.ModelProviders.DataModelProvider model);
    parameters:
    - id: model
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "このテーブルに所属するモデル。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Attributes
  id: Attributes
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: Attributes
  nameWithType: TableProvider.Attributes
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Attributes
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "このプロバイダーで表されるテーブルの定義されている属性を取得します。"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "属性のコレクション。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)
  id: CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: CanDelete(IPrincipal)
  nameWithType: TableProvider.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "ユーザーが、テーブルから項目を削除できるかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "ユーザー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが項目を削除するテーブルから許可された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)
  id: CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: CanInsert(IPrincipal)
  nameWithType: TableProvider.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "ユーザーがテーブルに項目を挿入できるかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "ユーザー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーがテーブルに項目を挿入できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)
  id: CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: CanRead(IPrincipal)
  nameWithType: TableProvider.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanRead(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "テーブル内のアイテムを表示するユーザーが許可されるかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "ユーザー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーがテーブル内のアイテムを表示する許可された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)
  id: CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: CanUpdate(IPrincipal)
  nameWithType: TableProvider.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(IPrincipal)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "ユーザーがテーブル内の項目を更新できるかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: "ユーザー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>テーブル内の項目を更新するユーザーが許可された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Columns
  id: Columns
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: Columns
  nameWithType: TableProvider.Columns
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Columns
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "派生クラスでオーバーライドされると、このテーブルの列のコレクションを取得します。"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.ModelProviders.ColumnProvider> Columns { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.ModelProviders.ColumnProvider}
      description: "このテーブルの列のコレクション。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName
  id: DataContextPropertyName
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: DataContextPropertyName
  nameWithType: TableProvider.DataContextPropertyName
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "データ コンテキストから、テーブルの名前を取得します。"
  syntax:
    content: public virtual string DataContextPropertyName { get; protected set; }
    return:
      type: System.String
      description: "テーブルの名前。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataModel
  id: DataModel
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: DataModel
  nameWithType: TableProvider.DataModel
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.DataModel
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "取得、 <xref href=&quot;System.Web.DynamicData.ModelProviders.DataModelProvider&quot;> </xref>オブジェクト。"
  remarks: "詳細については、次を参照してください。 [ASP.NET 動的データ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Web.DynamicData.ModelProviders.DataModelProvider DataModel { get; }
    return:
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "<xref href=&quot;System.Web.DynamicData.ModelProviders.DataModelProvider&quot;> </xref>オブジェクト。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.DataModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EntityType
  id: EntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: EntityType
  nameWithType: TableProvider.EntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.EntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "取得または設定のテーブルを表す型。"
  syntax:
    content: public virtual Type EntityType { get; protected set; }
    return:
      type: System.Type
      description: "テーブルを表す型。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.EntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)
  id: EvaluateForeignKey(System.Object,System.String)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: EvaluateForeignKey(Object,String)
  nameWithType: TableProvider.EvaluateForeignKey(Object,String)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "指定された行の外部キーの値を返します。"
  syntax:
    content: public virtual object EvaluateForeignKey (object row, string foreignKeyName);
    parameters:
    - id: row
      type: System.Object
      description: "外部キーの値を取得する行。"
    - id: foreignKeyName
      type: System.String
      description: "外部キー列の名前。"
    return:
      type: System.Object
      description: "外部キーです。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)
  id: GetQuery(System.Object)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: GetQuery(Object)
  nameWithType: TableProvider.GetQuery(Object)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "派生クラスでオーバーライドされると、 &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt;オブジェクトをさらに、テーブルの要素を返します。"
  syntax:
    content: public abstract System.Linq.IQueryable GetQuery (object context);
    parameters:
    - id: context
      type: System.Object
      description: "テーブルのデータ コンテキスト。"
    return:
      type: System.Linq.IQueryable
      description: "&lt;Xref:System.Linq.IQueryable?displayProperty=fullName&gt;テーブルの要素を表すオブジェクト。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor
  id: GetTypeDescriptor
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: GetTypeDescriptor()
  nameWithType: TableProvider.GetTypeDescriptor()
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "テーブルの型記述子を取得します。"
  syntax:
    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor ();
    parameters: []
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "テーブルの型記述子。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Name
  id: Name
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: Name
  nameWithType: TableProvider.Name
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Name
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "テーブルの名前を取得します。"
  remarks: "通常、これはデータ コンテキスト クラス内のテーブル プロパティの名前です。"
  syntax:
    content: public virtual string Name { get; protected set; }
    return:
      type: System.String
      description: "テーブルの名前。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType
  id: ParentEntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: ParentEntityType
  nameWithType: TableProvider.ParentEntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "親の種類を取得します。"
  syntax:
    content: public virtual Type ParentEntityType { get; protected set; }
    return:
      type: System.Type
      description: "エンティティが親を持つ場合、親の型それ以外の場合のインスタンス、 <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref>クラスです。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType
  id: RootEntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: RootEntityType
  nameWithType: TableProvider.RootEntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "このエンティティのルート型を取得します。"
  syntax:
    content: public virtual Type RootEntityType { get; protected set; }
    return:
      type: System.Type
      description: "エンティティが親を持つ場合は、このエンティティのルート型それ以外の場合のインスタンス、 <xref href=&quot;System.Data.Metadata.Edm.EntityType&quot;> </xref>クラスです。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ToString
  id: ToString
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: TableProvider.ToString()
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.ToString()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData.ModelProviders
  summary: "返します、<xref:System.Web.DynamicData.ModelProviders.TableProvider.Name*>のプロパティ、 <xref href=&quot;System.Web.DynamicData.ModelProviders.TableProvider&quot;> </xref>インスタンス</xref:System.Web.DynamicData.ModelProviders.TableProvider.Name*>。"
  remarks: "このメソッドは、デバッグのためのものです。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Web.DynamicData.ModelProviders.TableProvider&quot;> </xref>インスタンス。 場合、<xref:System.Web.DynamicData.ModelProviders.TableProvider.Name*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、基本クラス<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;></xref>プロパティが返されます</xref:System.Web.DynamicData.ModelProviders.TableProvider.Name*>。"
  overload: System.Web.DynamicData.ModelProviders.TableProvider.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: TableProvider(DataModelProvider)
  nameWithType: TableProvider.TableProvider(DataModelProvider)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.TableProvider(DataModelProvider)
- uid: System.Web.DynamicData.ModelProviders.DataModelProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: DataModelProvider
  nameWithType: DataModelProvider
  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Attributes
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Attributes
  nameWithType: TableProvider.Attributes
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanDelete(IPrincipal)
  nameWithType: TableProvider.CanDelete(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(IPrincipal)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanInsert(IPrincipal)
  nameWithType: TableProvider.CanInsert(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(IPrincipal)
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanRead(IPrincipal)
  nameWithType: TableProvider.CanRead(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanRead(IPrincipal)
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanUpdate(IPrincipal)
  nameWithType: TableProvider.CanUpdate(IPrincipal)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(IPrincipal)
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Columns
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Columns
  nameWithType: TableProvider.Columns
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Columns
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.ModelProviders.ColumnProvider}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ColumnProvider>
  nameWithType: ReadOnlyCollection<ColumnProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.ModelProviders.ColumnProvider>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.ModelProviders.ColumnProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.ModelProviders.ColumnProvider
    name: ColumnProvider
    nameWithType: ColumnProvider
    fullName: ColumnProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: DataContextPropertyName
  nameWithType: TableProvider.DataContextPropertyName
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataModel
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: DataModel
  nameWithType: TableProvider.DataModel
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.DataModel
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: EntityType
  nameWithType: TableProvider.EntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.EntityType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: EvaluateForeignKey(Object,String)
  nameWithType: TableProvider.EvaluateForeignKey(Object,String)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(Object,String)
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: GetQuery(Object)
  nameWithType: TableProvider.GetQuery(Object)
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(Object)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: GetTypeDescriptor()
  nameWithType: TableProvider.GetTypeDescriptor()
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor()
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Name
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Name
  nameWithType: TableProvider.Name
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.Name
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: ParentEntityType
  nameWithType: TableProvider.ParentEntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType
- uid: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: RootEntityType
  nameWithType: TableProvider.RootEntityType
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ToString
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: ToString()
  nameWithType: TableProvider.ToString()
  fullName: System.Web.DynamicData.ModelProviders.TableProvider.ToString()
- uid: System.Web.DynamicData.ModelProviders.TableProvider.#ctor*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider.TableProvider
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Attributes*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Attributes
  nameWithType: TableProvider.Attributes
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanDelete*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanDelete
  nameWithType: TableProvider.CanDelete
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanInsert*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanInsert
  nameWithType: TableProvider.CanInsert
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanRead*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanRead
  nameWithType: TableProvider.CanRead
- uid: System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: CanUpdate
  nameWithType: TableProvider.CanUpdate
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Columns*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Columns
  nameWithType: TableProvider.Columns
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: DataContextPropertyName
  nameWithType: TableProvider.DataContextPropertyName
- uid: System.Web.DynamicData.ModelProviders.TableProvider.DataModel*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: DataModel
  nameWithType: TableProvider.DataModel
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EntityType*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: EntityType
  nameWithType: TableProvider.EntityType
- uid: System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: EvaluateForeignKey
  nameWithType: TableProvider.EvaluateForeignKey
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetQuery*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: GetQuery
  nameWithType: TableProvider.GetQuery
- uid: System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: GetTypeDescriptor
  nameWithType: TableProvider.GetTypeDescriptor
- uid: System.Web.DynamicData.ModelProviders.TableProvider.Name*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: Name
  nameWithType: TableProvider.Name
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: ParentEntityType
  nameWithType: TableProvider.ParentEntityType
- uid: System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: RootEntityType
  nameWithType: TableProvider.RootEntityType
- uid: System.Web.DynamicData.ModelProviders.TableProvider.ToString*
  parent: System.Web.DynamicData.ModelProviders.TableProvider
  isExternal: false
  name: ToString
  nameWithType: TableProvider.ToString
