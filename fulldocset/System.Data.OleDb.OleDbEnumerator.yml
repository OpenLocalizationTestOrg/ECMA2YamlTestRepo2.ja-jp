### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "ローカル ネットワーク内のすべての利用可能な OLE DB プロバイダーを列挙するためのメカニズムを提供します。"
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "インスタンスを作成、 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref>クラスです。"
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得、 <xref href=&quot;System.Data.DataTable&quot;> </xref>表示されているすべての OLE DB プロバイダーに関する情報を格納します。"
  remarks: "このメソッドによって返されるテーブルには、次の列が含まれています: |列の序数 |列 |説明 |  |--------------------|------------|-----------------|  |&0; |SOURCES_NAME |ネイティブの OLEDB データ ソースまたは列挙子の不変名 |。  |&1; |SOURCES_PARSENAME |ネイティブの COM インターフェイスためのを使用して、モニカーに変換できる人間が判読できる名前です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_PARSENAME 列に対応しています |。  |&2; |SOURCES_DESCRIPTION |ネイティブの OLE DB データ ソースの説明です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_DESCRIPTION 列に対応しています |。  |&3; |SOURCES_TYPE |次の列挙メンバーのいずれかの: バインダー (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブの OLE DB ソースの行セットの SOURCES_TYPE 列に返される値に対応しています |。  |&4; |SOURCES_ISPARENT |列挙子だけに適用されます。 場合`true`エントリが GetSourcesRowset が呼び出された対象の同じ列挙子に適用されることを示す、サブ列挙型にも含まれていることを意味します。 ネイティブ OLE DB ソースの行セットの SOURCES_ISPARENT 列に対応しています |  |&5; |SOURCES_CLSID |人間が判読できる名前、ため、ネイティブ COM インターフェイスを使用しているモニカーに変換できます。 ネイティブ OLE DB ソースの行セットで返される SOURCES_CLSID 列に対応しています |。"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "返します、 <xref href=&quot;System.Data.DataTable&quot;> </xref>表示されている OLE DB プロバイダーに関する情報を格納します。"
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "プロバイダーは ISourcesRowset をサポートしていません。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基になるプロバイダーでは、例外が発生します。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "特定の OLE DB 列挙子を使用して、返します、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>のインスタンスを必要とせず、現在インストールされている OLE DB プロバイダーに関する情報を含む、 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref>クラスです。"
  remarks: "このメソッドによって返されるリーダーには、次の列が含まれています: |列の序数 |列 |説明 |  |--------------------|------------|-----------------|  |&0; |SOURCES_NAME |ネイティブの OLE DB データ ソースまたは列挙子の不変名 |。  |&1; |SOURCES_PARSENAME |ネイティブの COM インターフェイスを使用して、モニカーに変換できる人間が判読できる名前**ため**です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_PARSENAME 列に対応しています |。  |&2; |SOURCES_DESCRIPTION |ネイティブの OLE DB データ ソースの説明です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_DESCRIPTION 列に対応しています |。  |&3; |SOURCES_TYPE |次の列挙メンバーのいずれかの: バインダー (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブの OLE DB ソースの行セットの SOURCES_TYPE 列に返される値に対応しています |。  |&4; |SOURCES_ISPARENT |列挙子だけに適用されます。 場合`true`、エントリを同じ列挙子に適用されることを示す**GetSourcesRowset**が呼び出されたサブ列挙型にも含まれていることを意味します。 ネイティブ OLE DB ソースの行セットの SOURCES_ISPARENT 列に対応しています |      OLE DB では、MSDAENUM、MSDASQL 列挙子、SQLNCLI 列挙子、SQLOLEDB 列挙子、および他のユーザーを含め、複数のコンポーネントの列挙子を提供します。 列挙子のコンポーネントとその使用方法の詳細については、次を参照してください。、 [OLE DB プログラマーズ リファレンス](http://go.microsoft.com/fwlink/?LinkId=45232)です。"
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "返します、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>指定した OLE DB 列挙子を使用して、要求された OLE DB プロバイダーに関する情報を格納します。"
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "プロバイダーがサポートしていない**ISourcesRowset**です。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基になるプロバイダーで例外が発生しました。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "返します、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>のインスタンスを必要とせず、現在インストールされている OLE DB プロバイダーに関する情報を含む、 <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref>クラスです。"
  remarks: "このメソッドから返されたリーダーには、次の列が含まれています: |列の序数 |列 |説明 |  |--------------------|------------|-----------------|  |&0; |SOURCES_NAME |ネイティブの OLEDB データ ソースまたは列挙子の不変名 |。  |&1; |SOURCES_PARSENAME |ネイティブな COM インターフェイスためのを使用しているモニカーに変換できる人間が判読できる名前です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_PARSENAME 列に対応しています |。  |&2; |SOURCES_DESCRIPTION |ネイティブの OLE DB データ ソースの説明です。 ネイティブ OLE DB ソースの行セットで返される SOURCES_DESCRIPTION 列に対応しています |。  |&3; |SOURCES_TYPE |次の列挙メンバーのいずれかの: バインダー (0)、DataSource_MDP (1)、DataSource_TDP (2)、列挙子 (3)。 これらは、ネイティブの OLE DB ソースの行セットの SOURCES_TYPE 列に返される値に対応しています |。  |&4; |SOURCES_ISPARENT |列挙子だけに適用されます。 場合`true`エントリが GetSourcesRowset が呼び出された対象の同じ列挙子に適用されることを示す、サブ列挙型にも含まれていることを意味します。 ネイティブ OLE DB ソースの行セットの SOURCES_ISPARENT 列に対応しています |  |&5; |SOURCES_CLSID |人間が判読できる名前、ため、ネイティブ COM インターフェイスを使用しているモニカーに変換できます。 ネイティブ OLE DB ソースの行セットで返される SOURCES_CLSID 列に対応しています |。"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "返します、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>表示されている OLE DB プロバイダーに関する情報を格納します。"
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "プロバイダーは ISourcesRowset をサポートしていません。"
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "基になるプロバイダーでは、例外が発生します。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
