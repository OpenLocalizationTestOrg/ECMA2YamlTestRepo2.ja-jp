### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MemberDescriptor
  id: MemberDescriptor
  children:
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.MemberDescriptor.#ctor(System.String)
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  langs:
  - csharp
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
  type: Class
  summary: "プロパティまたはイベントなどのクラス メンバーを表します。 これは、抽象基本クラスです。"
  remarks: "MemberDescriptor の基本クラスである、<xref:System.ComponentModel.EventDescriptor>と<xref:System.ComponentModel.PropertyDescriptor>クラス</xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.EventDescriptor>。 <xref:System.ComponentModel.EventDescriptor>クラスは、イベントの説明を提供し、<xref:System.ComponentModel.PropertyDescriptor>クラスは、プロパティの説明を提供します</xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.EventDescriptor>。       このクラスは、プロパティと、保存された属性にアクセスするメソッドを定義します。 <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>プロパティは、属性のコレクションを取得します</xref:System.ComponentModel.MemberDescriptor.Attributes%2A>。 <xref:System.ComponentModel.MemberDescriptor.Category%2A>、 <xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A>、 <xref:System.ComponentModel.MemberDescriptor.Description%2A>、および<xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A>プロパティがその特定の属性の値を取得します</xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A></xref:System.ComponentModel.MemberDescriptor.Description%2A></xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A></xref:System.ComponentModel.MemberDescriptor.Category%2A>。 <xref:System.ComponentModel.MemberDescriptor.Name%2A>と<xref:System.ComponentModel.MemberDescriptor.DisplayName%2A>プロパティは、メンバーの名前を指定します</xref:System.ComponentModel.MemberDescriptor.DisplayName%2A></xref:System.ComponentModel.MemberDescriptor.Name%2A>。       また、MemberDescriptor も定義、<xref:System.ComponentModel.MemberDescriptor.Equals%2A>間この MemberDescriptor を比較するメソッド</xref:System.ComponentModel.MemberDescriptor.Equals%2A>。      > [!NOTE] > から継承する通常、<xref:System.ComponentModel.EventDescriptor>と<xref:System.ComponentModel.PropertyDescriptor>クラス、および、このクラスからではなく</xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.EventDescriptor>"
  example:
  - Since most of the usage of this class will fall on the inherited classes <xref:System.ComponentModel.EventDescriptor> and <xref:System.ComponentModel.PropertyDescriptor>, refer to the examples in these classes.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MemberDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 、指定したクラス<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>です。"
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>メンバーとその属性の名前を格納しています。"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>メンバーの指定した名前を持つクラス。"
  syntax:
    content: protected MemberDescriptor (string name);
    parameters:
    - id: name
      type: System.String
      description: "メンバーの名前です。"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "名前は、空の文字列 (&quot;&quot;) または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 、指定した名前のクラス<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>新旧で属性と属性<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>と<xref:System.Attribute>配列</xref:System.Attribute>。"
  remarks: "このコンス トラクターは<xref:System.Attribute>、古い<xref:System.ComponentModel.MemberDescriptor>。</xref:System.ComponentModel.MemberDescriptor>内の属性に配列</xref:System.Attribute>内の属性を追加します。"
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes);
    parameters:
    - id: oldMemberDescriptor
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>メンバーとその属性の名前を持ちます。"
    - id: newAttributes
      type: System.Attribute[]
      description: "配列<xref:System.Attribute>メンバーに追加する属性を持つオブジェクト</xref:System.Attribute>。"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>メンバーと属性の配列の指定した名前を持つクラス。"
  syntax:
    content: protected MemberDescriptor (string name, Attribute[] attributes);
    parameters:
    - id: name
      type: System.String
      description: "メンバーの名前です。"
    - id: attributes
      type: System.Attribute[]
      description: "型の配列<xref:System.Attribute>、メンバーの属性を格納している</xref:System.Attribute>。"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "名前は、空の文字列 (&quot;&quot;) または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  id: AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得または属性の配列を設定します。"
  remarks: "派生クラスで使用される属性の既定のセットを変更するのには、このメンバーにアクセスする、<xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>メソッド</xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>。"
  syntax:
    content: protected virtual Attribute[] AttributeArray { get; set; }
    return:
      type: System.Attribute[]
      description: "型の配列<xref:System.Attribute>このメンバーの属性を格納している</xref:System.Attribute>。"
  overload: System.ComponentModel.MemberDescriptor.AttributeArray*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このメンバーの属性のコレクションを取得します。"
  remarks: "ある場合ありません<xref:System.ComponentModel.AttributeCollection>このメンバーは、このプロパティの呼び出し、<xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>メソッドを作成、新しい<xref:System.ComponentModel.AttributeCollection>の配列を使用して<xref:System.Attribute>オブジェクト コンス トラクターに渡されます</xref:System.Attribute></xref:System.ComponentModel.AttributeCollection></xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A></xref:System.ComponentModel.AttributeCollection>。"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> <xref:System.ComponentModel.MemberDescriptor.AttributeArray*></xref:System.ComponentModel.MemberDescriptor.AttributeArray*>属性がない場合、このメンバー、または空のコレクションの属性を提供する。"
  overload: System.ComponentModel.MemberDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Category
  id: Category
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "メンバーが属するカテゴリの名前を取得で指定されたとおり、 <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;></xref>です。"
  remarks: "ビジュアル デザイナーは、このプロパティの値を使用して、カテゴリに属するメンバーを表示することができます。"
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "メンバーが属するカテゴリの名前。 ある場合ありません<xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>、既定のカテゴリにカテゴリ名が設定されている<xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MemberDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  id: CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンス トラクターに渡された属性の配列を使用して属性のコレクションを作成します。"
  remarks: "このメソッドは、<xref:System.ComponentModel.MemberDescriptor.Attributes%2A>プロパティがある場合にない<xref:System.ComponentModel.AttributeCollection>このメンバーの</xref:System.ComponentModel.AttributeCollection></xref:System.ComponentModel.MemberDescriptor.Attributes%2A>。 <xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>これは、空<xref:System.ComponentModel.AttributeCollection>。</xref:System.ComponentModel.AttributeCollection>を返します、</xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>属性がない場合"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection CreateAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "新しい<xref href=&quot;System.ComponentModel.AttributeCollection&quot;></xref>を格納している、<xref:System.ComponentModel.MemberDescriptor.AttributeArray*>属性</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>。"
  overload: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Description
  id: Description
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定されたメンバーの説明を取得、 <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;></xref>です。"
  remarks: "ビジュアル デザイナーは、この説明を使用して、このメンバーに関する情報を表示することができます。"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "メンバーの説明です。 ある場合ありません<xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;></xref>プロパティの値が空の文字列は、既定値に設定 (&quot;&quot;) です。"
  overload: System.ComponentModel.MemberDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このメンバーで指定されている、デザイン時にのみ設定する必要があるかどうかを取得、 <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;></xref>です。"
  remarks: "ある場合ありません<xref:System.ComponentModel.DesignOnlyAttribute>、戻り値は、既定値、つまり`false`</xref:System.ComponentModel.DesignOnlyAttribute>。"
  syntax:
    content: public virtual bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメンバーは、デザイン時のみ設定する必要がある場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、メンバーは、実行時に設定できます。"
  overload: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "プロパティ ウィンドウなどのウィンドウで表示できる名前を取得します。"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "メンバーの表示名。"
  overload: System.ComponentModel.MemberDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このインスタンスと同じかどうかを指定したオブジェクトを比較します。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "現在のインスタンスと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合と同じです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MemberDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、継承したクラスの属性を指定した属性の一覧で、親クラスに追加します。"
  remarks: "重複する属性を一覧に追加された最後の&1; つは保持されます。       <xref:System.Collections.IList>属性を持つは&1; 回に作成されます</xref:System.Collections.IList>。 一覧に重複する属性がある場合は、最初のインスタンスのみが保存されます。後続のすべての重複する属性は、一覧から削除されます。"
  syntax:
    content: protected virtual void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "の<xref:System.Collections.IList>親クラスで属性を一覧表示します。</xref:System.Collections.IList> 最初に、これが空です。"
  overload: System.ComponentModel.MemberDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "パブリック メソッドのみを検索、リフレクションを介して特定のメソッドを検索します。"
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType);
    parameters:
    - id: componentClass
      type: System.Type
      description: "このコンポーネントは、メソッドが含まれています。"
    - id: name
      type: System.String
      description: "検索するメソッドの名前。"
    - id: args
      type: System.Type[]
      description: "オーバー ロードされたメソッドを選択するために使用、メソッドのパラメーターの配列。"
    - id: returnType
      type: System.Type
      description: "メソッドの返される型。"
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>、メソッドを表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>メソッドが見つからない場合</xref:System.Reflection.MethodInfo>。"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "リフレクションでは、パブリック メソッドのみを検索するためのオプションで、特定のメソッドを検索します。"
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType, bool publicOnly);
    parameters:
    - id: componentClass
      type: System.Type
      description: "このコンポーネントは、メソッドが含まれています。"
    - id: name
      type: System.String
      description: "検索するメソッドの名前。"
    - id: args
      type: System.Type[]
      description: "オーバー ロードされたメソッドを選択するために使用、メソッドのパラメーターの配列。"
    - id: returnType
      type: System.Type
      description: "メソッドの返される型。"
    - id: publicOnly
      type: System.Boolean
      description: "パブリック メソッドに検索を制限するかどうか。"
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>、メソッドを表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>メソッドが見つからない場合</xref:System.Reflection.MethodInfo>。"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このインスタンスのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のハッシュ コード<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>です。"
  overload: System.ComponentModel.MemberDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "メンバーの呼び出し中に使用されるオブジェクトを取得します。"
  remarks: "通常は、戻り値と同じである、`instance`パラメーター。 別のオブジェクトは、このインスタンスに関連付けられている場合、またはインスタンスが、カスタム型記述子である場合は、GetInvocationTarget メソッドは、異なる値を返すことがあります。"
  syntax:
    content: protected virtual object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>呼び出し対象の</xref:System.Type>。"
    - id: instance
      type: System.Object
      description: "潜在的な呼び出し対象です。"
    return:
      type: System.Object
      description: "メンバーの呼び出し中に使用されるオブジェクト。"
  overload: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>instance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  id: GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "メソッドを呼び出す対象のコンポーネントを取得します。"
  syntax:
    content: protected static object GetInvokee (Type componentClass, object component);
    parameters:
    - id: componentClass
      type: System.Type
      description: "A<xref:System.Type>このコンポーネントの種類を表す<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>にバインドされています</xref:System.Type>。 たとえば、この<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>プロパティについて説明しますこのパラメーターは、プロパティに宣言されているクラスを指定する必要があります。"
    - id: component
      type: System.Object
      description: "呼び出すオブジェクトのインスタンス。"
    return:
      type: System.Object
      description: "呼び出すコンポーネントのインスタンス。 このメソッドは、プロパティが、ビジュアル デザイナーに関連付けられている場合に、ビジュアル デザイナーを返します。"
  overload: System.ComponentModel.MemberDescriptor.GetInvokee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentClass</code>or <code>component</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  id: GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "特定のコンポーネントのコンポーネントのサイトを取得します。"
  syntax:
    content: protected static System.ComponentModel.ISite GetSite (object component);
    parameters:
    - id: component
      type: System.Object
      description: "サイトを検索するコンポーネント。"
    return:
      type: System.ComponentModel.ISite
      description: "コンポーネントのサイトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>サイトが存在しない場合。"
  overload: System.ComponentModel.MemberDescriptor.GetSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "メンバーが参照可能なで指定されているかどうかを示す値を取得、 <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;></xref>です。"
  remarks: "通常、ビジュアル デザイナーには、プロパティ ウィンドウで参照可能では、メンバーが表示されます。"
  syntax:
    content: public virtual bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーが参照可能である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 ある場合ありません<xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>、プロパティの値は、既定値に設定、これは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MemberDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Name
  id: Name
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "メンバーの名前を取得します。"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "メンバーの名前です。"
  overload: System.ComponentModel.MemberDescriptor.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  id: NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "<xref:System.String.GetHashCode*>。</xref:System.String.GetHashCode*>で指定されている、メンバーの名前のハッシュ コードを取得します。"
  syntax:
    content: protected virtual int NameHashCode { get; }
    return:
      type: System.Int32
      description: "メンバーの名前のハッシュ コード。"
  overload: System.ComponentModel.MemberDescriptor.NameHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.#ctor*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection
  nameWithType: MemberDescriptor.CreateAttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Description*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals
  nameWithType: MemberDescriptor.Equals
- uid: System.ComponentModel.MemberDescriptor.FillAttributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: MemberDescriptor.FillAttributes
- uid: System.ComponentModel.MemberDescriptor.FindMethod*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod
  nameWithType: MemberDescriptor.FindMethod
- uid: System.ComponentModel.MemberDescriptor.GetHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: MemberDescriptor.GetHashCode
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: MemberDescriptor.GetInvocationTarget
- uid: System.ComponentModel.MemberDescriptor.GetInvokee*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee
  nameWithType: MemberDescriptor.GetInvokee
- uid: System.ComponentModel.MemberDescriptor.GetSite*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite
  nameWithType: MemberDescriptor.GetSite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
