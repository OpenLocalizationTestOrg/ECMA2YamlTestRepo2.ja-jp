### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.TypeDescriptorPermission
  id: TypeDescriptorPermission
  children:
  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)
  - System.Security.Permissions.TypeDescriptorPermission.Copy
  - System.Security.Permissions.TypeDescriptorPermission.Flags
  - System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted
  - System.Security.Permissions.TypeDescriptorPermission.ToXml
  - System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: TypeDescriptorPermission
  nameWithType: TypeDescriptorPermission
  fullName: System.Security.Permissions.TypeDescriptorPermission
  type: Class
  summary: "部分的に信頼されたへのアクセスを定義、 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>クラスです。"
  remarks: "TypeDescriptorPermission クラスへアクセスを<xref:System.ComponentModel.TypeDescriptor>クラス</xref:System.ComponentModel.TypeDescriptor>では、次のメソッドを定義します。      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>      -   <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29></xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29></xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: 'public sealed class TypeDescriptorPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: TypeDescriptorPermission(PermissionState)
  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)
  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.TypeDescriptorPermission&quot;> </xref>クラスです。"
  syntax:
    content: public TypeDescriptorPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "<xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>を要求します。 Only <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> and <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> are valid."
  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>有効なアクセス許可状態ではありません。 Only <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> and <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> are valid."
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)
  id: '#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)'
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)
  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)
  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.TypeDescriptorPermission&quot;> </xref>クラスの指定したアクセス許可フラグを使用します。"
  syntax:
    content: public TypeDescriptorPermission (System.Security.Permissions.TypeDescriptorPermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.TypeDescriptorPermissionFlags
      description: "要求するアクセス許可のフラグ。"
  overload: System.Security.Permissions.TypeDescriptorPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.Copy
  id: Copy
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: TypeDescriptorPermission.Copy()
  fullName: System.Security.Permissions.TypeDescriptorPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスで実装された場合、作成し、現在のアクセス許可オブジェクトの完全なコピーを返します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトのコピー。"
  overload: System.Security.Permissions.TypeDescriptorPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.Flags
  id: Flags
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: Flags
  nameWithType: TypeDescriptorPermission.Flags
  fullName: System.Security.Permissions.TypeDescriptorPermission.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "取得または設定、 <xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionFlags&quot;> </xref>型記述子のです。"
  syntax:
    content: public System.Security.Permissions.TypeDescriptorPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.TypeDescriptorPermissionFlags
      description: "<xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionFlags&quot;> </xref>型記述子のです。"
  overload: System.Security.Permissions.TypeDescriptorPermission.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.TypeDescriptorPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスでオーバーライドされると、XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "XML は、セキュリティ オブジェクトを再構築に使用するエンコーディングします。"
  overload: System.Security.Permissions.TypeDescriptorPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: TypeDescriptorPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスで実装された場合、作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Security.Permissions.TypeDescriptorPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスで実装された場合、現在のアクセス許可、指定した権限のサブセットであるかどうかを判断します。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係をテストするのには権限です。 このアクセス許可は、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: TypeDescriptorPermission.IsUnrestricted()
  fullName: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "型記述子を部分的に信頼されたコードから呼び出すことがあるかどうかを示す値を取得します。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Security.Permissions.TypeDescriptorPermission.Flags*>プロパティに設定されている<xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionFlags&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Security.Permissions.TypeDescriptorPermission.Flags*> 。"
  overload: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: TypeDescriptorPermission.ToXml()
  fullName: System.Security.Permissions.TypeDescriptorPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスでオーバーライドされると、セキュリティ オブジェクトと現在の状態の XML エンコードを作成します。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、セキュリティ オブジェクトの XML エンコード。"
  overload: System.Security.Permissions.TypeDescriptorPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: TypeDescriptorPermission.Union(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "派生クラスでオーバーライドされると、現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。"
  overload: System.Security.Permissions.TypeDescriptorPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: TypeDescriptorPermission(PermissionState)
  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)
  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: TypeDescriptorPermission(TypeDescriptorPermissionFlags)
  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)
  fullName: System.Security.Permissions.TypeDescriptorPermission.TypeDescriptorPermission(TypeDescriptorPermissionFlags)
- uid: System.Security.Permissions.TypeDescriptorPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: TypeDescriptorPermissionFlags
  nameWithType: TypeDescriptorPermissionFlags
  fullName: System.Security.Permissions.TypeDescriptorPermissionFlags
- uid: System.Security.Permissions.TypeDescriptorPermission.Copy
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Copy()
  nameWithType: TypeDescriptorPermission.Copy()
  fullName: System.Security.Permissions.TypeDescriptorPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.TypeDescriptorPermission.Flags
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Flags
  nameWithType: TypeDescriptorPermission.Flags
  fullName: System.Security.Permissions.TypeDescriptorPermission.Flags
- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: TypeDescriptorPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.TypeDescriptorPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: TypeDescriptorPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.Intersect(IPermission)
- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: TypeDescriptorPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: TypeDescriptorPermission.IsUnrestricted()
  fullName: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted()
- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: ToXml()
  nameWithType: TypeDescriptorPermission.ToXml()
  fullName: System.Security.Permissions.TypeDescriptorPermission.ToXml()
- uid: System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: TypeDescriptorPermission.Union(IPermission)
  fullName: System.Security.Permissions.TypeDescriptorPermission.Union(IPermission)
- uid: System.Security.Permissions.TypeDescriptorPermission.#ctor*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: TypeDescriptorPermission
  nameWithType: TypeDescriptorPermission.TypeDescriptorPermission
- uid: System.Security.Permissions.TypeDescriptorPermission.Copy*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Copy
  nameWithType: TypeDescriptorPermission.Copy
- uid: System.Security.Permissions.TypeDescriptorPermission.Flags*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Flags
  nameWithType: TypeDescriptorPermission.Flags
- uid: System.Security.Permissions.TypeDescriptorPermission.FromXml*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: FromXml
  nameWithType: TypeDescriptorPermission.FromXml
- uid: System.Security.Permissions.TypeDescriptorPermission.Intersect*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Intersect
  nameWithType: TypeDescriptorPermission.Intersect
- uid: System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: TypeDescriptorPermission.IsSubsetOf
- uid: System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: TypeDescriptorPermission.IsUnrestricted
- uid: System.Security.Permissions.TypeDescriptorPermission.ToXml*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: ToXml
  nameWithType: TypeDescriptorPermission.ToXml
- uid: System.Security.Permissions.TypeDescriptorPermission.Union*
  parent: System.Security.Permissions.TypeDescriptorPermission
  isExternal: false
  name: Union
  nameWithType: TypeDescriptorPermission.Union
