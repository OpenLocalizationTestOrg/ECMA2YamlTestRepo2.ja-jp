### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  id: CustomUserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  - System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: CustomUserNameSecurityTokenAuthenticator
  nameWithType: CustomUserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  type: Class
  summary: "認証、 <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>カスタム認証方式を使用してセキュリティ トークン。"
  remarks: "CustomUserNameSecurityTokenAuthenticator クラスをオーバーライドによって、Windows 認証が提供されるときに、<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>クラスが不十分です</xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>。 <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>クラスは、ユーザー名とパスワードを認証、 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>Windows アカウントとセキュリティ トークン</xref:System.IdentityModel.Tokens.UserNameSecurityToken></xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>。       カスタム認証方式を提供するには、クラスを派生<xref:System.IdentityModel.Selectors.UserNamePasswordValidator>クラス、認証スキームを実装し、そのクラス CustomUserNameSecurityTokenAuthenticator クラスのコンス トラクターに渡します</xref:System.IdentityModel.Selectors.UserNamePasswordValidator>"
  syntax:
    content: 'public class CustomUserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  id: '#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)'
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&quot;> </xref>クラスは、指定したバリデーターを使用します。"
  remarks: "<xref:System.IdentityModel.Selectors.UserNamePasswordValidator>で指定されている、`validator`がパラメーターを使用、<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>ユーザーを認証する方法</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A></xref:System.IdentityModel.Selectors.UserNamePasswordValidator>。"
  syntax:
    content: public CustomUserNameSecurityTokenAuthenticator (System.IdentityModel.Selectors.UserNamePasswordValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref>を認証するユーザー名とパスワードのカスタム認証方式を使用します。"
  overload: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validator</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定されたユーザー名とパスワードを認証および承認ポリシーのセットを返します<xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>セキュリティ トークン。"
  remarks: "ValidateUserNamePasswordCore メソッドを使用して、<xref:System.IdentityModel.Selectors.UserNamePasswordValidator>に渡される、<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A>ユーザーを認証するコンス トラクター</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A> </xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 。       ユーザー名とパスワードを検証することはできません、 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>。</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>をスローします。       このアプリケーションに対して有効な承認ポリシーがない場合戻り値、空<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.IdentityModel.Policy.IAuthorizationPolicy>。</xref:System.IdentityModel.Policy.IAuthorizationPolicy>の種類</xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       ときに`null`ValidateUserNamePasswordCore メソッドから返される[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>がスローされます"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "セキュリティ トークンに関連付けられているユーザー名。"
    - id: password
      type: System.String
      description: "セキュリティ トークンに関連付けられているパスワードです。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>このアプリケーションに対して有効な承認ポリシーのセットを格納します。"
  overload: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>userName</code>および<code>password</code>組み合わせが有効ではありません。"
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator(UserNamePasswordValidator)
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: CustomUserNameSecurityTokenAuthenticator
  nameWithType: CustomUserNameSecurityTokenAuthenticator.CustomUserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
