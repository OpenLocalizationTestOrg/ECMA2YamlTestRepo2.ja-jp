### YamlMime:ManagedReference
items:
- uid: System.UriParser
  id: UriParser
  children:
  - System.UriParser.#ctor
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  langs:
  - csharp
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
  type: Class
  summary: "新しい URI スキームを解析します。 これは、クラスは抽象クラスです。"
  remarks: "UriParser クラスでは、新しい URI スキームのパーサーを作成することができます。 これらのパーサーを作成するには、全体またはパーサーは既知のスキーム (HTTP、FTP、および他のスキームのネットワーク プロトコルに基づく) から派生することができます。 まったく新しいパーサーを作成する場合は、 <xref:System.GenericUriParser>。</xref:System.GenericUriParser>から継承します。 よく知られている URI スキームを拡張するパーサーを作成する場合は、継承<xref:System.FtpStyleUriParser>、 <xref:System.HttpStyleUriParser>、 <xref:System.FileStyleUriParser>、 <xref:System.GopherStyleUriParser>、または<xref:System.LdapStyleUriParser>.</xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FileStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.FtpStyleUriParser>       .NET Framework に付属のパーサーを使用することを強くお勧めします。 独自のパーサーを構築、アプリケーションが複雑になるし、出荷のパーサーが低くなります。"
  syntax:
    content: public abstract class UriParser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.UriParser.#ctor
  id: '#ctor'
  parent: System.UriParser
  langs:
  - csharp
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "既定の URI パーサーを構築します。"
  syntax:
    content: protected UriParser ();
    parameters: []
  overload: System.UriParser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  langs:
  - csharp
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "URI からコンポーネントを取得します。"
  remarks: "GetComponents メソッドなど、URI のさまざまな部分の値を使用して、 <xref:System.UriComponents>、 <xref:System.UriComponents>、または<xref:System.UriComponents>.</xref:System.UriComponents> </xref:System.UriComponents> </xref:System.UriComponents>       コンポーネントは、URI に出現する順序で返されます。 たとえば場合、<xref:System.UriComponents>を指定すると、最初に表示されます</xref:System.UriComponents>。"
  syntax:
    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);
    parameters:
    - id: uri
      type: System.Uri
      description: "解析する URI。"
    - id: components
      type: System.UriComponents
      description: "<xref:System.UriComponents>から取得する`uri`</xref:System.UriComponents>。"
    - id: format
      type: System.UriFormat
      description: "1 つ、<xref:System.UriFormat>方法特殊文字を制御する値がエスケープされます</xref:System.UriFormat>。"
    return:
      type: System.String
      description: "コンポーネントを含む文字列です。"
  overload: System.UriParser.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method."
  platform:
  - net462
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  id: InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "パーサーの状態を初期化し、URI を検証します。"
  remarks: "InitializeAndValidate メソッドが毎回、<xref:System.Uri>がインスタンス化します</xref:System.Uri>。"
  syntax:
    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);
    parameters:
    - id: uri
      type: System.Uri
      description: "検証する T:System.Uri です。"
    - id: parsingError
      type: System.UriFormatException
      description: "存在する場合は、検証エラー。"
  overload: System.UriParser.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  id: IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "指定するかどうか<code> baseUri </code>のベース URI は、 <code> relativeUri</code>です。"
  syntax:
    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "ベース URI。"
    - id: relativeUri
      type: System.Uri
      description: "テストへの URI。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.UriParser.IsBaseOf*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsKnownScheme(System.String)
  id: IsKnownScheme(System.String)
  parent: System.UriParser
  langs:
  - csharp
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "スキーム パーサーが登録されているかどうかを示します。"
  syntax:
    content: public static bool IsKnownScheme (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: "確認対象のスキーム名。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> schemeName </code>が登録されている、それ以外のされて<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.UriParser.IsKnownScheme*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> schemeName </code>パラメーターが null です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> schemeName </code>のパラメーターが無効です。"
  platform:
  - net462
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  id: IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "URI が整形式かどうかを示します。"
  remarks: "場合は false を返します IsWellFormedOriginalString メソッド:-文字列が RFC 2396 に従って正しくエスケープされていません。      -文字列では、暗黙的なファイル URI を参照する絶対 URI を表します。      -文字列では、パス コンポーネントの前にスラッシュが欠落している絶対 URI を表します。      -文字列には、スラッシュとして扱う場合でも、エスケープされていない円記号が含まれています。"
  syntax:
    content: protected virtual bool IsWellFormedOriginalString (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "確認への URI。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> uri </code>が整形式であるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.UriParser.IsWellFormedOriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnNewUri
  id: OnNewUri
  parent: System.UriParser
  langs:
  - csharp
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "によって呼び出された、<xref:System.Uri>を取得するコンス トラクター、 <xref href=&quot;System.UriParser&quot;> </xref>インスタンス</xref:System.Uri>"
  remarks: "既定の実装は、同じを返します<xref:System.UriParser>インスタンス</xref:System.UriParser>。 このメソッドをオーバーライドして、異なるを返す必要があります<xref:System.UriParser>マルチ スレッド環境で動作している場合は、各呼び出しに対して</xref:System.UriParser>。"
  syntax:
    content: protected virtual UriParser OnNewUri ();
    parameters: []
    return:
      type: System.UriParser
      description: "A <xref href=&quot;System.UriParser&quot;> </xref>構築<xref:System.Uri></xref:System.Uri>。"
  overload: System.UriParser.OnNewUri*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  id: OnRegister(System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "フレームワークによって呼び出されたときに、 <xref href=&quot;System.UriParser&quot;> </xref>メソッドが登録されています。"
  syntax:
    content: protected virtual void OnRegister (string schemeName, int defaultPort);
    parameters:
    - id: schemeName
      type: System.String
      description: "これに関連付けられているスキーム<xref href=&quot;System.UriParser&quot;></xref>です。"
    - id: defaultPort
      type: System.Int32
      description: "スキームのポート番号。"
  overload: System.UriParser.OnRegister*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  id: Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "スキームおよびポート番号を関連付ける、 <xref href=&quot;System.UriParser&quot;></xref>です。"
  remarks: "場合、`defaultPort`パラメーターが-1 に設定されている、登録メソッドには、ポート番号の既定値登録されません。"
  syntax:
    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);
    parameters:
    - id: uriParser
      type: System.UriParser
      description: "登録する URI パーサー。"
    - id: schemeName
      type: System.String
      description: "このパーサーに関連付けられている構成の名前。"
    - id: defaultPort
      type: System.Int32
      description: "指定されたスキームの既定のポート番号。"
  overload: System.UriParser.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."
  platform:
  - net462
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "によって呼び出されます<xref:System.Uri>コンス トラクターと&lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt;相対 URI を解決するのには</xref:System.Uri>。"
  remarks: "<xref:System.Uri>コンス トラクターと<xref:System.Uri.TryCreate%2A?displayProperty=fullName>から URI を構築するために、解決を使用して`baseUri`と`relativeUri`</xref:System.Uri.TryCreate%2A?displayProperty=fullName>。</xref:System.Uri>       場合は、解析エラーが発生する解決基準の返される文字列<xref:System.Uri>が null です</xref:System.Uri>。"
  syntax:
    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "ベース URI。"
    - id: relativeUri
      type: System.Uri
      description: "相対 URI です。"
    - id: parsingError
      type: System.UriFormatException
      description: "存在する場合、解決処理中のエラー。"
    return:
      type: System.String
      description: "解決基準<xref:System.Uri>。</xref:System.Uri>の文字列"
  overload: System.UriParser.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UriParser.#ctor
  parent: System.UriParser
  isExternal: false
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  isExternal: false
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriComponents
  parent: System
  isExternal: true
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: true
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
- uid: System.UriFormatException
  parent: System
  isExternal: true
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriParser.IsKnownScheme(System.String)
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
- uid: System.UriParser.OnNewUri
  parent: System.UriParser
  isExternal: false
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
- uid: System.UriParser
  parent: System
  isExternal: false
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
- uid: System.UriParser.#ctor*
  parent: System.UriParser
  isExternal: false
  name: UriParser
  nameWithType: UriParser.UriParser
- uid: System.UriParser.GetComponents*
  parent: System.UriParser
  isExternal: false
  name: GetComponents
  nameWithType: UriParser.GetComponents
- uid: System.UriParser.InitializeAndValidate*
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate
  nameWithType: UriParser.InitializeAndValidate
- uid: System.UriParser.IsBaseOf*
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf
  nameWithType: UriParser.IsBaseOf
- uid: System.UriParser.IsKnownScheme*
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme
  nameWithType: UriParser.IsKnownScheme
- uid: System.UriParser.IsWellFormedOriginalString*
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: UriParser.IsWellFormedOriginalString
- uid: System.UriParser.OnNewUri*
  parent: System.UriParser
  isExternal: false
  name: OnNewUri
  nameWithType: UriParser.OnNewUri
- uid: System.UriParser.OnRegister*
  parent: System.UriParser
  isExternal: false
  name: OnRegister
  nameWithType: UriParser.OnRegister
- uid: System.UriParser.Register*
  parent: System.UriParser
  isExternal: false
  name: Register
  nameWithType: UriParser.Register
- uid: System.UriParser.Resolve*
  parent: System.UriParser
  isExternal: false
  name: Resolve
  nameWithType: UriParser.Resolve
