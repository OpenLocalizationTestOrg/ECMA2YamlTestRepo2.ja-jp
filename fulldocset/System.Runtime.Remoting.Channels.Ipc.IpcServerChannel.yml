### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  id: IpcServerChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  langs:
  - csharp
  name: IpcServerChannel
  nameWithType: IpcServerChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  type: Class
  summary: "IPC システムを使用してメッセージを送信するリモートの呼び出しのためのサーバーのチャネルを実装します。"
  remarks: "チャネルは、リモート呼び出しを転送する、.NET Framework リモート処理インフラストラクチャによって使用されます。 クライアントが、リモート オブジェクトを呼び出すと呼び出しは、クライアント チャネルで送信され、サーバー チャネルによって受信されるメッセージにシリアル化されます。 メッセージを受信すると、それを逆シリアル化、処理します。 戻り値はすべては、サーバーのチャネルで送信され、クライアント チャネルで受信します。       IpcServerChannel クラスは、同じコンピューター上のアプリケーション ドメイン間でメッセージの転送を Windows のプロセス間通信 (IPC) システムを使用します。 同じコンピューター上のアプリケーション ドメイン間で通信している場合、IPC チャネルは TCP または HTTP チャネルより高速です。       サーバー側でメッセージの追加の処理を実行する指定の実装、 <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>IpcServerChannel インスタンスによって処理されるすべてのメッセージが渡されるによってインターフェイスします</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>。       IpcServerChannel インスタンスは、バイナリ形式または SOAP 形式でシリアル化されたメッセージを受け取ります。       オブジェクトで設定できる構成プロパティが関連付けられている IpcServerChannel 実行時構成ファイルのいずれか (静的なを起動して<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>メソッド) またはプログラムによって (を渡すことによって、<xref:System.Collections.IDictionary>コレクションに、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>コンス トラクター).</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> これらの構成プロパティの一覧は、のドキュメントを参照して、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A>コンス トラクター</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> 。      > [!CAUTION] > を設定する場合、`exclusiveAddressUse`プロパティを`false`で、`properties`オブジェクトを登録できるは、同じ名前付きパイプのいくつかの IpcServerChannel の引数。 このような場合は、要求が登録されているチャネルのいずれかに移動できます。 この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。"
  example:
  - "The following code example illustrates how to use the IpcServerChannel class.  \n  \n [!code-cpp[Remoting_Ipc#10](~/add/codesnippet/cpp/t-system.runtime.remotin_29_1.cpp)]\n [!code-cs[Remoting_Ipc#10](~/add/codesnippet/csharp/t-system.runtime.remotin_29_1.cs)]  \n  \n The preceding code is used to expose the following remote object.  \n  \n [!code-cpp[Remoting_Ipc#0](~/add/codesnippet/cpp/t-system.runtime.remotin_29_2.cpp)]\n [!code-cs[Remoting_Ipc#0](~/add/codesnippet/csharp/t-system.runtime.remotin_29_2.cs)]  \n  \n For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>."
  syntax:
    content: 'public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref> IPC ポートの指定した名前を持つクラス。"
  remarks: ''
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[Remoting_Ipc#11](~/add/codesnippet/cpp/m-system.runtime.remotin_9_1.cpp)]\n [!code-cs[Remoting_Ipc#11](~/add/codesnippet/csharp/m-system.runtime.remotin_9_1.cs)]"
  syntax:
    content: public IpcServerChannel (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "チャネルで使用する IPC ポートの名前。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref>シンクと指定したチャネルのプロパティを持つクラス。"
  remarks: "チャネルの構成プロパティの詳細については、次を参照してください。[チャネルとフォーマッタの構成プロパティ](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。      > [!CAUTION] > を設定する場合、`exclusiveAddressUse`プロパティを`false`で、`properties`引数、いくつか<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>、同じ名前付きパイプのオブジェクトを登録することができます</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>。 このような場合は、要求が登録されているチャネルのいずれかに移動できます。 この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/add/codesnippet/cpp/2f7e03cf-f060-405d-b2b0-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/add/codesnippet/csharp/2f7e03cf-f060-405d-b2b0-_1.cs)]"
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>チャネルによって使用される構成プロパティの値を指定するコレクション</xref:System.Collections.IDictionary>。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>チャネルで使用する実装。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String,String)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref> IPC ポート名と指定したチャネルの名前を持つクラス。"
  remarks: "このコンス トラクターを設定、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 。 1 つ以上のチャネルを登録する場合は、チャネルごとに一意の名前は必要です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/add/codesnippet/cpp/9c4d8393-cda8-4c07-a164-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/add/codesnippet/csharp/9c4d8393-cda8-4c07-a164-_1.cs)]"
  syntax:
    content: public IpcServerChannel (string name, string portName);
    parameters:
    - id: name
      type: System.String
      description: "チャネルの名前。"
    - id: portName
      type: System.String
      description: "チャネルで使用する IPC ポートの名前。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref>指定したチャネルのプロパティ、シンク、およびセキュリティ記述子を持つクラス。"
  remarks: "チャネルの構成プロパティの詳細については、次を参照してください。[チャネルとフォーマッタの構成プロパティ](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。 セキュリティ記述子が必要でない場合は、設定、`securityDescriptor`パラメーターを`null`です。      > [!CAUTION] > を設定する場合、`exclusiveAddressUse`プロパティを`false`で、`properties`引数、いくつか<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>、同じ名前付きパイプのオブジェクトを登録することができます</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>。 このような場合は、要求が登録されているチャネルのいずれかに移動できます。 この設定は、Alc も使用されている場合にのみセキュリティで保護されたと見なされます。"
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>チャネルによって使用される構成プロパティの値を指定するコレクション</xref:System.Collections.IDictionary>。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>チャネルで使用する実装。"
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "A <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref>チャネルで使用します。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String,String,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcServerChannel&quot;> </xref>クラスを指定したチャネルの名前、IPC ポート名、およびシンクを使用します。"
  remarks: "このコンス トラクターを設定、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> 。 1 つ以上のチャネルを登録する場合は、チャネルごとに一意の名前は必要です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/add/codesnippet/cpp/790e6976-8213-4e42-9ce7-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/add/codesnippet/csharp/790e6976-8213-4e42-9ce7-_1.cs)]"
  syntax:
    content: public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "チャネルの名前。"
    - id: portName
      type: System.String
      description: "チャネルで使用する IPC ポートの名前。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>チャネルで使用する実装。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "チャネル固有のデータを取得します。"
  remarks: "インスタンスとして返されますが、<xref:System.Object?displayProperty=fullName>クラス、このプロパティの値は、のインスタンスにキャストできます<xref:System.Runtime.Remoting.Channels.ChannelDataStore>先のチャネルを説明する、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>オブジェクトの受信を待機します</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel></xref:System.Runtime.Remoting.Channels.ChannelDataStore></xref:System.Object?displayProperty=fullName>。"
  example:
  - "The following code example shows how to use the ChannelData property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/add/codesnippet/csharp/p-system.runtime.remotin_89_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/add/codesnippet/cpp/p-system.runtime.remotin_89_1.cpp)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref>チャネル固有のデータを格納しているインスタンス。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの名前を取得します。"
  remarks: "登録されている各チャネルは、一意の名前を持ちます。 呼び出すときに、特定のチャネルを取得する名前が使用される、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>メソッド</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>。 既定の名前は、&quot;ipc server&quot;です。"
  example:
  - "The following code example shows how to use the ChannelName property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/add/codesnippet/csharp/p-system.runtime.remotin_90_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/add/codesnippet/cpp/p-system.runtime.remotin_90_1.cpp)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>チャネルの名前を格納しているインスタンス</xref:System.String>。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの優先度を取得します。"
  remarks: "優先順位でどのチャネルのデータの表示順序を制御する、<xref:System.Runtime.Remoting.ObjRef>インスタンス以外の優先順位の低いチャネルの前に優先順位の高いチャネル</xref:System.Runtime.Remoting.ObjRef>。 クライアントが記載されている順序でサーバー チャネルに接続しようとした場合、<xref:System.Runtime.Remoting.ObjRef>インスタンス</xref:System.Runtime.Remoting.ObjRef>。 既定の優先度が 20 です。負の値の優先度が許可されます。"
  example:
  - "The following code example shows how to use the ChannelPriority property.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/add/codesnippet/csharp/p-system.runtime.remotin_91_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/add/codesnippet/cpp/p-system.runtime.remotin_91_1.cpp)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "チャネルに割り当てる優先度を示す整数。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの URI を返します。"
  remarks: "チャネル URI は、クライアントを使用して、リモート サーバーのチャネルを指定します。"
  example:
  - "The following code example illustrates how to use the GetChannelUri method.  \n  \n [!code-cpp[Remoting_Ipc#12](~/add/codesnippet/cpp/m-system.runtime.remotin_26_1.cpp)]\n [!code-cs[Remoting_Ipc#12](~/add/codesnippet/csharp/m-system.runtime.remotin_26_1.cs)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>チャネルの URI を格納している</xref:System.String>。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在でホストされている、指定した URI を持つオブジェクトのすべての Url の配列を返します<xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref>インスタンス。"
  remarks: "このメソッドを使用して、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>メソッド</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>。"
  example:
  - "The following code example shows how to use the GetUrlsForUri method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/csharp/0920b678-3327-4cf6-ba1d-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/cpp/0920b678-3327-4cf6-ba1d-_1.cpp)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: "Url が必要であるオブジェクトの URI。"
    return:
      type: System.String[]
      description: "現在のホストされている、指定した URI を持つオブジェクトの Url の配列<xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpChannel&quot;></xref>インスタンス。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "取得または現在のチャネルがセキュリティで保護されたかどうかを示すブール値を設定します。"
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "現在のインスタンスがセキュリティで保護されたかどうかを示すブール値。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IpcServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "指定された URL からチャネル URI と URI のリモートのよく知られているオブジェクトを抽出します。"
  remarks: "オブジェクトの URI は、特定のオブジェクト インスタンスを一意に識別する値です。"
  example:
  - "The following code example shows how to use the Parse method.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/csharp/aae922d6-ceba-4430-9d67-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/add/codesnippet/cpp/aae922d6-ceba-4430-9d67-_1.cpp)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "リモートの既知のオブジェクトの URI を抽出する元の URL です。"
    - id: objectURI
      type: System.String
      description: "このメソッドが戻るとき、<xref:System.String>リモートの既知のオブジェクトの URI を保持するインスタンス</xref:System.String>。"
    return:
      type: System.String
      description: "現在のチャネルの URI。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの要求のリッスンを開始するように指示します。"
  remarks: "新しく初期化されたチャネルがリッスンを開始するには、このメソッドを呼び出す必要はありません。       このメソッドを使用して、再起動後にチャネルでリッスンしている、<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A>チャネルがリッスンを停止するメソッドが呼び出されました</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A>。       特定の初期化状態をチャネルに渡すには、データ オブジェクトを使用できます。 特定の状態をチャネルに渡すように場合は、渡す`null`として、`data`パラメーターの値。"
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "な初期化状態を指定するオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、特定の状態をチャネルに渡すしたくない場合。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "指定したリッスン ポートは使用できません。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "現在のチャネルの要求のリッスンを停止するように指示します。"
  remarks: "このメソッドを使用すると、チャネルでの待機を停止します。 リッスンして再起動して、以下の<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A>メソッド</xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A>。       特定の初期化状態をチャネルに渡すには、データ オブジェクトを使用できます。 特定の状態をチャネルに渡すように場合は、渡す`null`として、`data`パラメーターの値。"
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "な初期化状態を指定するオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、特定の状態をチャネルに渡すしたくない場合。"
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String,String)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(IDictionary,IServerChannelSinkProvider,CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String,String,IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IpcServerChannel(String,String,IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IpcServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel
  nameWithType: IpcServerChannel.IpcServerChannel
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: IpcServerChannel.GetChannelUri
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: IpcServerChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse
  nameWithType: IpcServerChannel.Parse
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening
  nameWithType: IpcServerChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening
  nameWithType: IpcServerChannel.StopListening
