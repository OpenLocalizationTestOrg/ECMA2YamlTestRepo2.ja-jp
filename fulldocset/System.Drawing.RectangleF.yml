### YamlMime:ManagedReference
items:
- uid: System.Drawing.RectangleF
  id: RectangleF
  children:
  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.Bottom
  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Contains(System.Single,System.Single)
  - System.Drawing.RectangleF.Empty
  - System.Drawing.RectangleF.Equals(System.Object)
  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.GetHashCode
  - System.Drawing.RectangleF.Height
  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IsEmpty
  - System.Drawing.RectangleF.Left
  - System.Drawing.RectangleF.Location
  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  - System.Drawing.RectangleF.Offset(System.Single,System.Single)
  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Right
  - System.Drawing.RectangleF.Size
  - System.Drawing.RectangleF.Top
  - System.Drawing.RectangleF.ToString
  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Width
  - System.Drawing.RectangleF.X
  - System.Drawing.RectangleF.Y
  langs:
  - csharp
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
  type: Struct
  summary: "一連の場所を表す&4; つの浮動小数点数や四角形のサイズを格納します。 高度な領域の関数を使用して、 <xref href=&quot;System.Drawing.Region&quot;> </xref>オブジェクト。"
  remarks: "四角形は、幅、高さ、および左上隅によって定義されます。"
  syntax:
    content: public struct RectangleF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>指定した位置とサイズを持つクラス。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, RectangleF, and <xref:System.Drawing.RectangleF.op_Equality%2A> members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/5d8998f0-9d41-440a-a9e3-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/5d8998f0-9d41-440a-a9e3-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/5d8998f0-9d41-440a-a9e3-_1.vb)]"
  syntax:
    content: public RectangleF (System.Drawing.PointF location, System.Drawing.SizeF size);
    parameters:
    - id: location
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>四角形領域の左上隅を表すです。"
    - id: size
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>四角形領域の高さと幅を表すです。"
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>指定した位置とサイズを持つクラス。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the RectangleF, <xref:System.Drawing.Rectangle.Round%2A> and <xref:System.Drawing.Rectangle.Truncate%2A> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/03a5ad52-9050-4211-8a75-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/03a5ad52-9050-4211-8a75-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/03a5ad52-9050-4211-8a75-_1.vb)]"
  syntax:
    content: public RectangleF (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "四角形の左上隅の x 座標。"
    - id: y
      type: System.Single
      description: "四角形の左上隅の y 座標。"
    - id: width
      type: System.Single
      description: "四角形の幅。"
    - id: height
      type: System.Single
      description: "四角形の高さ。"
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Bottom
  id: Bottom
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "和である y 座標を取得<> *> と<> *> この<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  remarks: "下の値では、四角形に含まれないする四角形の下端の最初のポイントの y 座標を表します。"
  syntax:
    content: public float Bottom { get; }
    return:
      type: System.Single
      description: "Y 座標の合計となる<> *> と<> *> この<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  id: Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した点がこの内に含まれるかどうかを判断<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public bool Contains (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;> </xref>をテストします。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表される点がある場合、 <code> pt </code>パラメーターに含まれるこの<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体です。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  id: Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "かどうかによって表される四角形の領域を判断<code> rect </code>完全に含まれるこの<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public bool Contains (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>をテストします。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表される四角形領域場合<code> rect </code>これによって表される四角形領域内に含まれる完全<xref href=&quot;System.Drawing.RectangleF&quot;></xref>それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した点がこの内に含まれるかどうかを判断<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public bool Contains (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "テストする点の x 座標。"
    - id: y
      type: System.Single
      description: "テストする点の y 座標。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって、ポイントが定義されている場合<code> x </code>と<code> y </code>これに含まれる<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体です。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Empty
  id: Empty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "インスタンスを表す、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>クラスで、メンバーを初期化します。"
  remarks: "新しいメンバー<xref:System.Drawing.RectangleF>は初期化されていない</xref:System.Drawing.RectangleF>。"
  syntax:
    content: public static readonly System.Drawing.RectangleF Empty;
    return:
      type: System.Drawing.RectangleF
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "テストするかどうか<code> obj </code>は、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>と同じ場所のサイズとこの<xref href=&quot;System.Drawing.RectangleF&quot;></xref>です。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>テストする</xref:System.Object>"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> obj </code>は、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>とその<xref uid=&quot;langword_csharp_X&quot; name=&quot;X&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_Y&quot; name=&quot;Y&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_Width&quot; name=&quot;Width&quot; href=&quot;&quot;> </xref>、および<xref uid=&quot;langword_csharp_Height&quot; name=&quot;Height&quot; href=&quot;&quot;></xref>プロパティがこの対応するプロパティに等しい<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>左上隅および右下隅で、指定された場所を含む構造体。"
  remarks: "このメソッドを作成、<xref:System.Drawing.RectangleF>左と右下角の指定</xref:System.Drawing.RectangleF>。"
  syntax:
    content: public static System.Drawing.RectangleF FromLTRB (float left, float top, float right, float bottom);
    parameters:
    - id: left
      type: System.Single
      description: "四角形領域の左上隅の x 座標。"
    - id: top
      type: System.Single
      description: "四角形領域の左上隅の y 座標。"
    - id: right
      type: System.Single
      description: "四角形領域の右下隅の x 座標。"
    - id: bottom
      type: System.Single
      description: "四角形領域の右下隅の y 座標。"
    return:
      type: System.Drawing.RectangleF
      description: "新しい<xref href=&quot;System.Drawing.RectangleF&quot;></xref>このメソッドが作成されます。"
  overload: System.Drawing.RectangleF.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このハッシュ コードを取得<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 ハッシュ コードの使用については、次を参照してください。 <xref uid=&quot;langword_csharp_Object.GetHashCode&quot; name=&quot;Object.GetHashCode&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "ハッシュ コードをこの<xref href=&quot;System.Drawing.RectangleF&quot;></xref>です。"
  overload: System.Drawing.RectangleF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Height
  id: Height
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの高さを取得または<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "この高さ<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.RectangleF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  id: Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この拡大<xref href=&quot;System.Drawing.RectangleF&quot;></xref>を指定の量。"
  remarks: "このメソッドは、この四角形のコピーではなくを拡大します。 四角形は、軸に沿った双方向に拡大されます。 たとえば、50 で 50 の四角形は、x 軸に 50 拡大は、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。"
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an OnPaint event object. The code creates a <xref:System.Drawing.RectangleF> and draws it to the screen in black. Notice that it has to be converted to a <xref:System.Drawing.Rectangle> for drawing purposes. Then the code enlarges the <xref:System.Drawing.RectangleF>, again converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.rectang_5_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/csharp/m-system.drawing.rectang_5_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/cpp/m-system.drawing.rectang_5_1.cpp)]"
  syntax:
    content: public void Inflate (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "この四角形の拡張量。"
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この拡大<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体を指定の量。"
  remarks: "このメソッドは、この四角形のコピーではなくを拡大します。 四角形は、軸に沿った双方向に拡大されます。 たとえば、50 で 50 の四角形は、x 軸に 50 拡大は、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。       いずれか`x`または`y`は負の値、<xref:System.Drawing.RectangleF>対応する方向に縮小された</xref:System.Drawing.RectangleF>。"
  syntax:
    content: public void Inflate (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "この拡張量<xref href=&quot;System.Drawing.RectangleF&quot;></xref>水平方向に構造体します。"
    - id: y
      type: System.Single
      description: "この拡張量<xref href=&quot;System.Drawing.RectangleF&quot;></xref>垂直方向に構造体します。"
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成して、指定の拡大したコピーを返します<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 コピーが指定した量によって拡張され、元の四角形は変更されません。"
  remarks: "このメソッドは、のコピー `rect`、拡大、および拡大したコピーを返します。 四角形は、軸に沿った双方向に拡大されます。 たとえば、50 で 50 の四角形は、x 軸に 50 拡大は、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。"
  syntax:
    content: public static System.Drawing.RectangleF Inflate (System.Drawing.RectangleF rect, float x, float y);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>をコピーします。 この四角形は変更されません。"
    - id: x
      type: System.Single
      description: "四角形のコピーを水平方向に拡大する量。"
    - id: y
      type: System.Single
      description: "四角形のコピーを垂直方向に拡大する量。"
    return:
      type: System.Drawing.RectangleF
      description: "拡大された<xref href=&quot;System.Drawing.RectangleF&quot;></xref>です。"
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これを置き換える<xref href=&quot;System.Drawing.RectangleF&quot;></xref>自体と、指定したの積集合を含む構造体<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public void Intersect (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "交差する四角形。"
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返します、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>を&2; つの四角形の交差部分を表す構造です。 積集合、および空が存在しない場合<xref href=&quot;System.Drawing.RectangleF&quot;></xref>が返されます。"
  remarks: ''
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> objects for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the <xref:System.Drawing.RectangleF.Intersect%2A> method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/visualbasic/47bd303e-f7ea-48d0-ae6d-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/csharp/47bd303e-f7ea-48d0-ae6d-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/cpp/47bd303e-f7ea-48d0-ae6d-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Intersect (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "交差する四角形。"
    - id: b
      type: System.Drawing.RectangleF
      description: "交差する四角形。"
    return:
      type: System.Drawing.RectangleF
      description: "3 番目<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体のサイズが&2; つの指定した四角形の領域ではオーバー ラップを表します。"
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  id: IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この四角形と交差するかどうかを判断<code> rect</code>です。"
  syntax:
    content: public bool IntersectsWith (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "テストする四角形。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>交差部分がある場合。"
  overload: System.Drawing.RectangleF.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "テストするかどうか、 <> </> *> または<> *> のこのプロパティ<xref href=&quot;System.Drawing.RectangleF&quot;></xref>がゼロの値。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "このプロパティを返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <> </> *> または<> *> のこのプロパティ<xref href=&quot;System.Drawing.RectangleF&quot;></xref>がゼロの値、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Left
  id: Left
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左端の x 座標を取得<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float Left { get; }
    return:
      type: System.Single
      description: "これの左端の x 座標<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Location
  id: Location
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の座標を取得または<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public System.Drawing.PointF Location { get; set; }
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>これの左上隅を表す<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  id: Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した量によっては、この四角形の位置を調整します。"
  syntax:
    content: public void Offset (System.Drawing.PointF pos);
    parameters:
    - id: pos
      type: System.Drawing.PointF
      description: "位置のオフセット量。"
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した量によっては、この四角形の位置を調整します。"
  syntax:
    content: public void Offset (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "位置の水平方向のオフセット量。"
    - id: y
      type: System.Single
      description: "位置の垂直方向のオフセット量。"
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体と同じ位置およびサイズがあります。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, <xref:System.Drawing.RectangleF.%23ctor%2A>and Equality members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/e6058e88-3cbe-4600-981e-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/e6058e88-3cbe-4600-981e-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/e6058e88-3cbe-4600-981e-_1.vb)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>等値演算子の左側にある構造体。"
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>等値演算子の右側にある構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、2 つ指定した<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体が等しい<> *>、 <> </> *>、 <> </> *>、および<> *> プロパティです。"
  overload: System.Drawing.RectangleF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  id: op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.RectangleF op_Implicit (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "追加します。"
    return:
      type: System.Drawing.RectangleF
      description: "追加します。"
  overload: System.Drawing.RectangleF.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体の位置またはサイズが異なります。"
  syntax:
    content: public static bool op_Inequality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>非等値演算子の左側にある構造体。"
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>非等値演算子の右側にある構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>のいずれかの場合、 <> </> *>、 <> </> *>、 <> </> *>、または<> *>、2 つのプロパティ<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体が等しくないそうでない<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.RectangleF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Right
  id: Right
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "和である x 座標を取得<> *> と<> *> この<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  remarks: "正しい値では、四角形に含まれていないを四角形の右端にある最初のポイントの x 座標を表します。"
  syntax:
    content: public float Right { get; }
    return:
      type: System.Single
      description: "X 座標の合計となる<> *> と<> *> この<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Size
  id: Size
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このサイズの設定を取得または<xref href=&quot;System.Drawing.RectangleF&quot;></xref>です。"
  syntax:
    content: public System.Drawing.SizeF Size { get; set; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>幅と高さはこれを表す<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Top
  id: Top
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの上端の y 座標を取得<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float Top { get; }
    return:
      type: System.Single
      description: "これの上端の y 座標<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  overload: System.Drawing.RectangleF.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.ToString
  id: ToString
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "変換、 <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref>と<xref href=&quot;System.Drawing.Size&quot;></xref>この<xref href=&quot;System.Drawing.RectangleF&quot;></xref>人間が判読できる文字列にします。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "位置、幅、およびこれの高さを表す文字列<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 たとえば、&quot;{X =&20;, Y =&20;, 幅 =&100;, Height =&50;}&quot;。"
  overload: System.Drawing.RectangleF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "最小考えられる&3; つ目の四角形の和集合を形成する&2; つの四角形の両方を含めることができますを作成します。"
  remarks: "2 つの四角形の 1 つが空、つまり、0 の場合は、すべての値の場合、<xref:System.Drawing.Rectangle.Union%2A>の開始位置を含む四角形を返します (0, 0)、空でない四角形の幅と高さ</xref:System.Drawing.Rectangle.Union%2A>。 たとえば、次の 2 つの四角形 A = がある場合 (0、0 以外の場合は 0, 0) と B = (1、1 以外の場合は 2、2)、A の和集合から、B が (0、0 以外の場合は 2、2)。"
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> s and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> s for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the Union method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/visualbasic/2f1239b4-8abf-4ed8-9c26-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/csharp/2f1239b4-8abf-4ed8-9c26-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/cpp/2f1239b4-8abf-4ed8-9c26-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Union (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "結合する四角形。"
    - id: b
      type: System.Drawing.RectangleF
      description: "結合する四角形。"
    return:
      type: System.Drawing.RectangleF
      description: "3 番目<xref href=&quot;System.Drawing.RectangleF&quot;></xref>和集合を形成する&2; つの四角形の両方を含む構造体。"
  overload: System.Drawing.RectangleF.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Width
  id: Width
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定のこの幅<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "この幅<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.RectangleF.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.X
  id: X
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の x 座標を取得または<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float X { get; set; }
    return:
      type: System.Single
      description: "これの左上隅の x 座標<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.RectangleF.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Y
  id: Y
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の y 座標の設定を取得または<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。"
  syntax:
    content: public float Y { get; set; }
    return:
      type: System.Single
      description: "これの左上隅の y 座標<xref href=&quot;System.Drawing.RectangleF&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.RectangleF.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.RectangleF.Bottom
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
- uid: System.Drawing.RectangleF.Empty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
- uid: System.Drawing.RectangleF.Equals(System.Object)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
- uid: System.Drawing.RectangleF.GetHashCode
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.RectangleF.Height
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
- uid: System.Drawing.RectangleF.IsEmpty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
- uid: System.Drawing.RectangleF.Location
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Right
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
- uid: System.Drawing.RectangleF.Size
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
- uid: System.Drawing.RectangleF.Top
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
- uid: System.Drawing.RectangleF.ToString
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Width
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
- uid: System.Drawing.RectangleF.X
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
- uid: System.Drawing.RectangleF.Y
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
- uid: System.Drawing.RectangleF.#ctor*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF.RectangleF
- uid: System.Drawing.RectangleF.Bottom*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains
  nameWithType: RectangleF.Contains
- uid: System.Drawing.RectangleF.Equals*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals
  nameWithType: RectangleF.Equals
- uid: System.Drawing.RectangleF.FromLTRB*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB
  nameWithType: RectangleF.FromLTRB
- uid: System.Drawing.RectangleF.GetHashCode*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
- uid: System.Drawing.RectangleF.Height*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate
  nameWithType: RectangleF.Inflate
- uid: System.Drawing.RectangleF.Intersect*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect
  nameWithType: RectangleF.Intersect
- uid: System.Drawing.RectangleF.IntersectsWith*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith
  nameWithType: RectangleF.IntersectsWith
- uid: System.Drawing.RectangleF.IsEmpty*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
- uid: System.Drawing.RectangleF.Location*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
- uid: System.Drawing.RectangleF.Offset*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset
  nameWithType: RectangleF.Offset
- uid: System.Drawing.RectangleF.op_Equality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality
  nameWithType: RectangleF.op_Equality
- uid: System.Drawing.RectangleF.op_Implicit*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit
  nameWithType: RectangleF.op_Implicit
- uid: System.Drawing.RectangleF.op_Inequality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality
  nameWithType: RectangleF.op_Inequality
- uid: System.Drawing.RectangleF.Right*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
- uid: System.Drawing.RectangleF.Size*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
- uid: System.Drawing.RectangleF.Top*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
- uid: System.Drawing.RectangleF.ToString*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString
  nameWithType: RectangleF.ToString
- uid: System.Drawing.RectangleF.Union*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union
  nameWithType: RectangleF.Union
- uid: System.Drawing.RectangleF.Width*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
- uid: System.Drawing.RectangleF.X*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
- uid: System.Drawing.RectangleF.Y*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
