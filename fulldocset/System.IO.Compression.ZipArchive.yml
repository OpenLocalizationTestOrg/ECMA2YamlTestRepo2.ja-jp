### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchive
  id: ZipArchive
  children:
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipArchive.Dispose
  - System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  - System.IO.Compression.ZipArchive.Entries
  - System.IO.Compression.ZipArchive.GetEntry(System.String)
  - System.IO.Compression.ZipArchive.Mode
  langs:
  - csharp
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
  summary: "Zip アーカイブ形式で圧縮されたファイルのパッケージを表します。"
  remarks: "The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, ZipArchive, and <xref:System.IO.Compression.ZipArchiveEntry>.  \n  \n|To|Use|  \n|--------|---------|  \n|Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  \n|Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  \n|Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  \n|Retrieve a file from a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  \n|Retrieve all the files from a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  \n|Open a stream to a single file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  \n|Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  \n  \n When you create a new entry, the file is compressed and added to the zip package. The <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method enables you to specify a directory hierarchy when adding the entry. You include the relative path of the new entry within the zip package. For example, creating a new entry with a relative path of `AddedFolder\\NewFile.txt` creates a compressed text file in a directory named AddedFolder.  \n  \n If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access three extension methods (from the <xref:System.IO.Compression.ZipFileExtensions> class) for the ZipArchive class: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, and <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>. These extension methods enable you to compress and decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can compress and decompress files by using the <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream> class, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkID=246357) and [Decompressor](http://go.microsoft.com/fwlink/p/?LinkID=246358)."
  example:
  - "The first example shows how to create a new entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_1.vb)]  \n  \n The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._1_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_2.vb)]  \n  \n The third example shows how to use extension methods to create a new entry in a zip archive from an existing file and extract the archive contents. You must reference the `System.IO.Compression.FileSystem` assembly to execute the code.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._1_3.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._1_3.vb)]"
  syntax:
    content: 'public class ZipArchive : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>指定したストリームからのクラスです。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "読み取るアーカイブを格納しているストリーム。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ストリームは既に閉じられていますか、読み取りをサポートしません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "ストリームの内容は、zip アーカイブ形式でができません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>指定されたモードを使用して、指定したストリームからのクラスです。"
  remarks: "場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは読み取りをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームが書き込みをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは、読み取り、書き込み、およびシークをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "入力または出力ストリーム。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "読み取り、作成、またはエントリを更新する zip アーカイブを使用するかどうかを示す列挙値の&1; つ。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>無効な値です。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip アーカイブとして、ストリームの内容を解釈できませんでした。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>とエントリ、アーカイブが見つからないかまたはが破損しているして読み取ることができません。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> /、エントリが大きすぎてメモリに収まるようにします。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>クラスは、指定したモード、および必要に応じて、ストリームを開いたままの指定したストリームにします。"
  remarks: "場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは読み取りをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームが書き込みをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは、読み取り、書き込み、およびシークをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "入力または出力ストリーム。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "読み取り、作成、またはエントリを更新する zip アーカイブを使用するかどうかを示す列挙値の&1; つ。"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ストリームは後に開いたままにして、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>オブジェクトが破棄された、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>無効な値です。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip アーカイブとして、ストリームの内容を解釈できませんでした。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>とエントリ、アーカイブが見つからないかまたはが破損しているして読み取ることができません。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> /、エントリが大きすぎてメモリに収まるようにします。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>指定されたモードを指定したストリームにクラスは、エントリ名の指定されたエンコーディングを使用し、必要に応じて、ストリームが開いたままにします。"
  remarks: "場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは読み取りをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームが書き込みをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode>、ストリームは、読み取り、書き込み、およびシークをサポートする必要があります</xref:System.IO.Compression.ZipArchiveMode>。       読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`に設定されている`null`エントリ名は、次の規則に従ってデコード: - 現在のシステム既定のコード ページで、ローカル ファイル ヘッダーの汎用のビット フラグ) エンコードのフラグが設定されていない言語が、エントリ名のデコードに使用する場合。      -ときは、言語エンコード フラグを設定すると、utf-8 はエントリ名のデコードに使用されます。       読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`以外の値に設定されて`null`、エントリ名は、次の規則に従ってデコード: - エンコード フラグが設定されていない、指定した場合`entryNameEncoding`エントリ名のデコードに使用します。      -ときは、言語エンコード フラグを設定すると、utf-8 はエントリ名のデコードに使用されます。       アーカイブ ファイルを記述する場合と`entryNameEncoding`に設定されている`null`エントリ名は、次のルールに従ってエンコード: - のエントリを ASCII 以外の文字を含む名前の範囲、エンコードのフラグが設定されている言語とエントリ名は、utf-8 を使用してエンコードされました。      -の ASCII 文字のみを含むエントリ名、言語エンコード フラグが設定されていないとエントリ名は、現在のシステム既定のコード ページを使用してエンコードされました。       アーカイブ ファイルを記述する場合と`entryNameEncoding`以外の値に設定されて`null`、指定した`entryNameEncoding`バイト エントリ名のエンコードに使用します。 フラグ (ローカル ファイル ヘッダーの汎用のビット フラグ) でのエンコード方法は、指定したエンコーディングが utf-8 エンコードの場合にのみ設定されます。"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "入力または出力ストリーム。"
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "読み取り、作成、またはエントリを更新する zip アーカイブを使用するかどうかを示す列挙値の&1; つ。"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ストリームは後に開いたままにして、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>オブジェクトが破棄された、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "読み取り時に使用するエンコーディングまたはこのアーカイブのエントリの名前を記述します。 エンコーディングは zip アーカイブ ツールとエントリ名の utf-8 エンコードをサポートしているライブラリとの相互運用に必要な場合にのみ、このパラメーターの値を指定します。"
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>無効な値です。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip アーカイブとして、ストリームの内容を解釈できませんでした。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>とエントリ、アーカイブが見つからないかまたはが破損しているして読み取ることができません。       - または - <code> mode </code>は<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> /、エントリが大きすぎてメモリに収まるようにします。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  id: CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内の指定したパス、およびエントリの名前を持つ空のエントリを作成します。"
  remarks: "`entryName`文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合、エントリが作成されると、zip アーカイブのコンテンツを抽出するときに例外を取得することがあります。 アーカイブに指定されたパスと名前を持つエントリが既に存在する場合は、パスと名前が同じで&2; 番目のエントリが作成されます。       値、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新しいエントリのプロパティが現在の時刻に設定します</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。 エントリは、基になる圧縮アルゴリズムの既定の圧縮レベルを使用して圧縮されます。 ごとに異なる圧縮レベルを指定する場合は、使用、<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>メソッド</xref:System.IO.Compression.ZipArchive.CreateEntry%2A>。"
  example:
  - "The following example shows how to create an entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._1_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "作成するエントリの名前を指定する、アーカイブのルートからの相対パス。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip アーカイブ内の空のエントリ。"
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip アーカイブは、書き込みをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内の指定されたエントリ名と圧縮レベルを持つ空のエントリを作成します。"
  remarks: "`entryName`文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合、エントリが作成されると、zip アーカイブのコンテンツを抽出するときに例外を取得することがあります。 アーカイブに指定した名前のエントリが既に存在する場合は、同じ名前の&2; 番目のエントリが作成されます。       値、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新しいエントリのプロパティが現在の時刻に設定します</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。 設定、`compressionLevel`パラメーターを<xref:System.IO.Compression.CompressionLevel>する場合、ファイルを圧縮するに可能な限り</xref:System.IO.Compression.CompressionLevel>。 設定、`compressionLevel`にパラメーター<xref:System.IO.Compression.CompressionLevel>こと、圧縮操作を完了できません十分に速いシナリオでは、問題がある場合のみです</xref:System.IO.Compression.CompressionLevel>。"
  example:
  - "The following example shows how to create an entry with the optimal compression level. It also writes to the new entry by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/csharp/356fbc42-2094-4738-b1de-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/visualbasic/356fbc42-2094-4738-b1de-_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: entryName
      type: System.String
      description: "作成するエントリの名前を指定する、アーカイブのルートからの相対パス。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の&1; つ。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip アーカイブ内の空のエントリ。"
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip アーカイブは、書き込みをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose
  id: Dispose
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "現在のインスタンスによって使用されるリソースを解放、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>クラスです。"
  remarks: "このメソッドは、アーカイブの書き込みが完了しで使用されるすべてのリソースを解放、<xref:System.IO.Compression.ZipArchive>オブジェクト</xref:System.IO.Compression.ZipArchive>。 使用してオブジェクトを構築する場合を除き、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>コンス トラクター オーバー ロードとセットの`leaveOpen`パラメーターを`true`、すべての基になるストリームが閉じていて、それ以降の書き込み操作で使用できなくします</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>。       このインスタンスの使用が終了したときに<xref:System.IO.Compression.ZipArchive>、このインスタンスによって使用されているすべてのリソースを解放するために Dispose を呼び出します</xref:System.IO.Compression.ZipArchive>。 これをさらに参照を削除する必要があります<xref:System.IO.Compression.ZipArchive>インスタンスのガベージ コレクターが終了処理の履歴に保持することではなく、インスタンスのメモリを再利用できるようにします</xref:System.IO.Compression.ZipArchive>。       Dispose の呼び出し、<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>メソッドで、マネージ コードとアンマネージ リソースを解放するコードが含まれています</xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>。 詳細についてを参照してください。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "によって呼び出される、 <xref href=&quot;System.IO.Compression.ZipArchive.Dispose&quot;> </xref>と<xref:System.Object.Finalize>の現在のインスタンスによって使用されているアンマネージ リソースを解放するメソッド、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>クラス、および必要に応じて、アーカイブの書き込みが完了し、マネージ リソースを解放します</xref:System.Object.Finalize>。"
  remarks: "場合`disposing`に設定されている`true`を使用してオブジェクトを構築する場合を除き、すべての基になるストリームが閉じていて、それ以降の書き込み操作では使用できなく、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>コンス トラクター オーバー ロードとその`leaveOpen`パラメーターを`true`</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>。       このメソッドは、パブリックによってのみ呼び出さ<xref:System.IO.Compression.ZipArchive.Dispose>と<xref:System.Object.Finalize>メソッドですこのメソッドを直接呼び出さないでください。</xref:System.Object.Finalize> </xref:System.IO.Compression.ZipArchive.Dispose> 。       Dispose パターンを実装するときに、Dispose メソッドのブール型パラメーターを次のように使用してください: -<xref:System.IO.Compression.ZipArchive.Dispose>現在のオブジェクトのメソッドは、ブール型のパラメーターを設定した Dispose を呼び出す必要があります`true`マネージ コードとアンマネージ リソースを解放する</xref:System.IO.Compression.ZipArchive.Dispose>。      -<xref:System.Object.Finalize>現在のオブジェクトのメソッドは、ブール型のパラメーターを設定した Dispose を呼び出す必要があります`false`アンマネージ リソースだけを解放します</xref:System.Object.Finalize>。       詳細についてを参照してください。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アーカイブの作成が終了して、アンマネージ コードとマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Entries
  id: Entries
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "現在 zip アーカイブ内にあるエントリのコレクションを取得します。"
  remarks: "エントリ プロパティを使用すると、エントリのコレクション全体を取得できます。 使用して、<xref:System.IO.Compression.ZipArchive.GetEntry%2A>を名前で&1; つのエントリを取得する方法</xref:System.IO.Compression.ZipArchive.GetEntry%2A>。"
  example:
  - "The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._5_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry> Entries { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
      description: "現在 zip アーカイブ内にあるエントリのコレクション。"
  overload: System.IO.Compression.ZipArchive.Entries*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip アーカイブは、読み取りをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip アーカイブ壊れており、そのエントリを取得することはできません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  id: GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブ内の指定したエントリのラッパーを取得します。"
  remarks: "指定した名前を持つ複数のエントリは、アーカイブに存在する場合は、最初の&1; つが返されます。 エントリの名前と比較されます`entryName`序数に基づく比較を使用します。"
  example:
  - "The following example shows how to use the GetEntry method to retrieve an entry.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/m-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/m-system.io.compression._4_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "取得するエントリを識別する、アーカイブのルートからの相対パス。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "アーカイブ; 内の指定したエントリのラッパー<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>アーカイブのエントリが存在しない場合。"
  overload: System.IO.Compression.ZipArchive.GetEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip アーカイブは、読み取りをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip アーカイブ壊れており、そのエントリを取得することはできません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Mode
  id: Mode
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip アーカイブがエントリで実行できるアクションの種類を記述する値を取得します。"
  remarks: "<xref:System.IO.Compression.ZipArchive><xref:System.IO.Compression.ZipArchive>クラス</xref:System.IO.Compression.ZipArchive>のインスタンスを作成するときにプロパティ</xref:System.IO.Compression.ZipArchive>の値を指定します。 使用して、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>または<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>Mode プロパティの値を指定するコンス トラクター</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> 。"
  syntax:
    content: public System.IO.Compression.ZipArchiveMode Mode { get; }
    return:
      type: System.IO.Compression.ZipArchiveMode
      description: "型を記述する列挙値のいずれかのアクション (読み取り、作成、または更新) の zip アーカイブがエントリで実行できます。"
  overload: System.IO.Compression.ZipArchive.Mode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipArchive.Dispose
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
- uid: System.IO.Compression.ZipArchive.Entries
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ZipArchiveEntry>
  nameWithType: ReadOnlyCollection<ZipArchiveEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    nameWithType: ZipArchiveEntry
    fullName: ZipArchiveEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
- uid: System.IO.Compression.ZipArchive.Mode
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
- uid: System.IO.Compression.ZipArchive.#ctor*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive.ZipArchive
- uid: System.IO.Compression.ZipArchive.CreateEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry
  nameWithType: ZipArchive.CreateEntry
- uid: System.IO.Compression.ZipArchive.Dispose*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose
  nameWithType: ZipArchive.Dispose
- uid: System.IO.Compression.ZipArchive.Entries*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
- uid: System.IO.Compression.ZipArchive.GetEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry
  nameWithType: ZipArchive.GetEntry
- uid: System.IO.Compression.ZipArchive.Mode*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
