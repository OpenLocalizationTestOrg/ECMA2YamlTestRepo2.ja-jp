### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlContext
  id: SqlContext
  children:
  - Microsoft.SqlServer.Server.SqlContext.IsAvailable
  - Microsoft.SqlServer.Server.SqlContext.Pipe
  - Microsoft.SqlServer.Server.SqlContext.TriggerContext
  - Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  langs:
  - csharp
  name: SqlContext
  nameWithType: SqlContext
  fullName: Microsoft.SqlServer.Server.SqlContext
  type: Class
  summary: "アクセスを提供する、呼び出し元のコンテキストの抽象化を表します、 <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref>、 <xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;> </xref>、および<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>オブジェクト。 このクラスは継承できません。"
  remarks: "SqlContext オブジェクトは、トリガーのコンテキスト (トリガーで実行されるコード) および (場合などに使用できる、ストアド プロシージャ内で)、パイプ オブジェクトの取得に使用できます。 取得に使用することもできます、<xref:System.Security.Principal.WindowsIdentity>統合認証を使用して、サーバーとクライアントが認証されている場合は、呼び出し元のクライアントの Microsoft Windows id を表すオブジェクト</xref:System.Security.Principal.WindowsIdentity>。"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_11_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_11_1.cs)]"
  syntax:
    content: public sealed class SqlContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  id: IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "コンテキスト接続にアクセスできる場合と、SQL Server の呼び出し元のコードが実行されているかどうかを指定します。"
  remarks: "このプロパティは false を返します、他のすべて場合<xref:Microsoft.SqlServer.Server.SqlContext>メンバーをスロー、<xref:System.InvalidOperationException>使用されている場合</xref:System.InvalidOperationException></xref:Microsoft.SqlServer.Server.SqlContext>。       このプロパティが false を返す場合しようとするを含む接続オブジェクトを開く&quot;コンテキスト接続 = true&quot;では、接続文字列が失敗します。       このプロパティは、読み取り専用です。       データ アクセスに ADO.NET を使用して、コードの部分は、(共通言語ランタイム統合を使用して) SQL Server 内部および外部 SQL Server を実行可能性がある場合は、ときに、コンテキスト接続が利用できるかどうかを確認するこのプロパティを使用できます。"
  syntax:
    content: public static bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>コンテキスト接続は使用可能な場合や、その他の<xref href=&quot;Microsoft.SqlServer.Server.SqlContext&quot;></xref>メンバーにアクセスできます。"
  overload: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  id: Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "結果セットをメッセージ、およびクライアントに返送コマンド実行の結果を送信する呼び出し元を許可するパイプのオブジェクトを取得します。"
  remarks: "外部の SQL Server から呼び出された場合、<xref:System.NotSupportedException>がスローされます</xref:System.NotSupportedException>。       このプロパティは、読み取り専用です。"
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlPipe
      description: "インスタンス<xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;></xref>パイプがある場合または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場所パイプでは使用できません (たとえば、ユーザー定義関数) のコンテキストで呼び出された場合。"
  overload: Microsoft.SqlServer.Server.SqlContext.Pipe*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  id: TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "呼び出し元に、トリガーを起動するには、原因と更新された列のマップに関する情報を提供するために使用するトリガーのコンテキストを取得します。"
  remarks: "<xref:Microsoft.SqlServer.Server.SqlTriggerContext>共通言語ランタイム トリガー内からオブジェクトが取得のみできます</xref:Microsoft.SqlServer.Server.SqlTriggerContext>。       TriggerContext プロパティが SQL Server の外部からアクセスする場合、<xref:System.NotSupportedException>がスローされます</xref:System.NotSupportedException>。       このプロパティは、読み取り専用です。"
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlTriggerContext
      description: "インスタンス<xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;></xref>トリガーのコンテキストがある場合または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>トリガーの呼び出しの外部で呼び出された場合。"
  overload: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  id: WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "呼び出し元の Microsoft Windows id。"
  remarks: "SQL Server の内部の共通言語ランタイム (CLR) コードは、プロセス アカウントのコンテキストで常に呼び出されます。 コードでの SQL Server のプロセス id ではなく呼び出し元のユーザーの id を使用して操作を実行する必要がある場合は、このプロパティで権限借用トークンを入手してください。 取得した後に、<xref:System.Security.Principal.WindowsIdentity>オブジェクト、呼び出し元がクライアントのアカウントを借用して、ユーザーに代わってに対してアクションを実行します</xref:System.Security.Principal.WindowsIdentity>。       外部の SQL Server から呼び出された場合、<xref:System.NotSupportedException>がスローされます</xref:System.NotSupportedException>。       マークされたアセンブリのみ`EXTERNAL_ACCESS`または`UNSAFE`アクセス許可がこのプロパティにアクセスできます。       このプロパティは、読み取り専用です。"
  example:
  - "The following example shows how to get the Windows identity of the calling client and impersonate the client. See \"Impersonation Sample\" in SQL Server Books Online for an example of impersonation using the WindowsIdentity property.  \n  \n [!code-cs[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/csharp/p-microsoft.sqlserver.se_6_1.cs)]\n [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/visualbasic/p-microsoft.sqlserver.se_6_1.vb)]"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 、呼び出し元の Windows id を表すインスタンスまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> SQL サーバー認証を使用して、クライアントが認証された場合。"
  overload: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlPipe
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlTriggerContext
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlTriggerContext
  nameWithType: SqlTriggerContext
  fullName: Microsoft.SqlServer.Server.SqlTriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
