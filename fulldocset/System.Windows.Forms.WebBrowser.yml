### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.WebBrowser
  id: WebBrowser
  children:
  - System.Windows.Forms.WebBrowser.#ctor
  - System.Windows.Forms.WebBrowser.AllowNavigation
  - System.Windows.Forms.WebBrowser.AllowWebBrowserDrop
  - System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)
  - System.Windows.Forms.WebBrowser.CanGoBack
  - System.Windows.Forms.WebBrowser.CanGoBackChanged
  - System.Windows.Forms.WebBrowser.CanGoForward
  - System.Windows.Forms.WebBrowser.CanGoForwardChanged
  - System.Windows.Forms.WebBrowser.CreateSink
  - System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase
  - System.Windows.Forms.WebBrowser.DefaultSize
  - System.Windows.Forms.WebBrowser.DetachInterfaces
  - System.Windows.Forms.WebBrowser.DetachSink
  - System.Windows.Forms.WebBrowser.Dispose(System.Boolean)
  - System.Windows.Forms.WebBrowser.Document
  - System.Windows.Forms.WebBrowser.DocumentCompleted
  - System.Windows.Forms.WebBrowser.DocumentStream
  - System.Windows.Forms.WebBrowser.DocumentText
  - System.Windows.Forms.WebBrowser.DocumentTitle
  - System.Windows.Forms.WebBrowser.DocumentTitleChanged
  - System.Windows.Forms.WebBrowser.DocumentType
  - System.Windows.Forms.WebBrowser.EncryptionLevel
  - System.Windows.Forms.WebBrowser.EncryptionLevelChanged
  - System.Windows.Forms.WebBrowser.FileDownload
  - System.Windows.Forms.WebBrowser.Focused
  - System.Windows.Forms.WebBrowser.GoBack
  - System.Windows.Forms.WebBrowser.GoForward
  - System.Windows.Forms.WebBrowser.GoHome
  - System.Windows.Forms.WebBrowser.GoSearch
  - System.Windows.Forms.WebBrowser.IsBusy
  - System.Windows.Forms.WebBrowser.IsOffline
  - System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled
  - System.Windows.Forms.WebBrowser.Navigate(System.String)
  - System.Windows.Forms.WebBrowser.Navigate(System.Uri)
  - System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)
  - System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)
  - System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)
  - System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)
  - System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  - System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  - System.Windows.Forms.WebBrowser.Navigated
  - System.Windows.Forms.WebBrowser.Navigating
  - System.Windows.Forms.WebBrowser.NewWindow
  - System.Windows.Forms.WebBrowser.ObjectForScripting
  - System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)
  - System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)
  - System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)
  - System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)
  - System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)
  - System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowser.Padding
  - System.Windows.Forms.WebBrowser.PaddingChanged
  - System.Windows.Forms.WebBrowser.Print
  - System.Windows.Forms.WebBrowser.ProgressChanged
  - System.Windows.Forms.WebBrowser.ReadyState
  - System.Windows.Forms.WebBrowser.Refresh
  - System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)
  - System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed
  - System.Windows.Forms.WebBrowser.ScrollBarsEnabled
  - System.Windows.Forms.WebBrowser.ShowPageSetupDialog
  - System.Windows.Forms.WebBrowser.ShowPrintDialog
  - System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog
  - System.Windows.Forms.WebBrowser.ShowPropertiesDialog
  - System.Windows.Forms.WebBrowser.ShowSaveAsDialog
  - System.Windows.Forms.WebBrowser.StatusText
  - System.Windows.Forms.WebBrowser.StatusTextChanged
  - System.Windows.Forms.WebBrowser.Stop
  - System.Windows.Forms.WebBrowser.Url
  - System.Windows.Forms.WebBrowser.Version
  - System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled
  - System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: WebBrowser
  nameWithType: WebBrowser
  fullName: System.Windows.Forms.WebBrowser
  type: Class
  summary: "フォーム内の Web ページを移動することができます。"
  remarks: "WebBrowser コントロールを使用すると、ホストの Web ページと、Windows フォーム アプリケーションで他のブラウザーが有効なドキュメントです。 WebBrowser コントロールを使用するなどを提供する統合された HTML ベースのユーザー アシスタンスまたは Web アプリケーションの機能を参照します。 さらに、WebBrowser コントロールを使用して、Windows フォーム クライアント アプリケーションに、既存の Web ベースのコントロールを追加することができます。      > [!IMPORTANT] >、WebBrowser コントロールは、リソースを消費します。 必ず、<xref:System.ComponentModel.Component.Dispose>メソッド コントロールを使用して、適切なタイミングですべてのリソースが解放されることを確認したら</xref:System.ComponentModel.Component.Dispose>。 呼び出す必要があります、<xref:System.ComponentModel.Component.Dispose>メソッド、イベントは、メッセージでは常に接続されている同じスレッドまたはユーザー インターフェイス (UI) スレッドを</xref:System.ComponentModel.Component.Dispose>。       WebBrowser コントロールは、部分的に信頼されたコードで使用できません。 詳細については、次を参照してください。[部分信頼コードからライブラリを使用して](~/add/includes/ajax-current-ext-md.md)です。       WebBrowser コントロールでは、いくつかのプロパティ、メソッド、およびナビゲーションに関連するイベントがあります。 次のメンバーでは、特定の URL、移動、ナビゲーション履歴一覧を上位および下位のコントロールを移動し、ホーム ページを現在のユーザーの検索ページ読み込みできます:- <xref:System.Windows.Forms.WebBrowser.Url%2A>- <xref:System.Windows.Forms.WebBrowser.Navigate%2A>- <xref:System.Windows.Forms.WebBrowser.GoBack%2A>- <xref:System.Windows.Forms.WebBrowser.GoForward%2A>- <xref:System.Windows.Forms.WebBrowser.GoHome%2A>-<xref:System.Windows.Forms.WebBrowser.GoSearch%2A>ナビゲーションが失敗した場合は、問題を示すページが表示されます。</xref:System.Windows.Forms.WebBrowser.GoSearch%2A> </xref:System.Windows.Forms.WebBrowser.GoHome%2A> </xref:System.Windows.Forms.WebBrowser.GoForward%2A> </xref:System.Windows.Forms.WebBrowser.GoBack%2A> </xref:System.Windows.Forms.WebBrowser.Navigate%2A> </xref:System.Windows.Forms.WebBrowser.Url%2A> 。 これらのメンバーの原因のいずれかによるナビゲーション、 <xref:System.Windows.Forms.WebBrowser.Navigating>、 <xref:System.Windows.Forms.WebBrowser.Navigated>、および<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>ナビゲーションの異なる段階で発生するイベントです</xref:System.Windows.Forms.WebBrowser.DocumentCompleted></xref:System.Windows.Forms.WebBrowser.Navigated></xref:System.Windows.Forms.WebBrowser.Navigating>。       これらおよび他のメンバーなど、<xref:System.Windows.Forms.WebBrowser.Stop%2A>と<xref:System.Windows.Forms.WebBrowser.Refresh%2A>メソッドを使用する Internet Explorer と同様、アプリケーションのユーザー インターフェイス コントロールを実装できます</xref:System.Windows.Forms.WebBrowser.Refresh%2A></xref:System.Windows.Forms.WebBrowser.Stop%2A>。 WebBrowser コントロールをフォームに表示したくない場合でも、一部のメンバーは便利です。 たとえば、使用することができます、<xref:System.Windows.Forms.WebBrowser.Print%2A>をユーザーにページを表示することがなく、最新の Web ページを印刷する方法</xref:System.Windows.Forms.WebBrowser.Print%2A>。       WebBrowser コントロールを使用して、アプリケーションで作成するか、またはデータベースやリソース ファイルから取得するコンテンツを表示することもできます。 使用して、<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>または<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティを取得または文字列データまたはデータ ストリームとして、現在のドキュメントの内容を設定します</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A>。       を介して、Web ページの内容を操作することも、<xref:System.Windows.Forms.WebBrowser.Document%2A>プロパティが含まれています、<xref:System.Windows.Forms.HtmlDocument>を現在のページの HTML ドキュメント オブジェクト モデル (DOM) への管理アクセスを提供するオブジェクト</xref:System.Windows.Forms.HtmlDocument></xref:System.Windows.Forms.WebBrowser.Document%2A>。 組み合わせて使用する場合、このプロパティは、 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>Web ページ、Web ベースのコントロールと Windows フォーム コントロールを&1; 人のユーザー インターフェイスに結合することで、アプリケーション コードとダイナミック HTML (DHTML) コードの間で双方向通信を実装するプロパティ</xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>。 使用することができます、<xref:System.Windows.Forms.WebBrowser.Document%2A>メソッドを呼び出すスクリプト コードをアプリケーションからのプロパティ</xref:System.Windows.Forms.WebBrowser.Document%2A>。 スクリプト コードをアプリケーションにアクセスでき、`window.external`ホスト アクセス用の組み込み DOM オブジェクトでは、指定したオブジェクトに対応して、オブジェクト、<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>。       WebBrowser コントロールは、ActiveX のマネージ ラッパー [WebBrowser コントロール](http://go.microsoft.com/fwlink/?LinkId=198812)、使用して、コントロールのどのバージョンが、ユーザーのコンピューターにインストールされているとします。      > [!NOTE] > このクラスは、クラス レベルのセキュリティ確認要求します。 A<xref:System.Security.SecurityException>派生クラスまたは呼び出し履歴内の呼び出し元に完全信頼のアクセス許可がない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、「[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。      > [!NOTE] >、WebBrowser クラスは、シングル スレッド アパートメント (STA) モードに設定のスレッドでのみ使用できます。 このクラスを使用することを確認、`Main`メソッドが付いて、<xref:System.STAThreadAttribute>属性</xref:System.STAThreadAttribute>。"
  example:
  - "The following code example demonstrates how to implement an address bar for use with the WebBrowser control. This example requires that you have a form that contains a WebBrowser control called `webBrowser1`, a <xref:System.Windows.Forms.TextBox> control called `TextBoxAddress`, and a <xref:System.Windows.Forms.Button> control called `ButtonGo`. When you type a URL into the text box and press ENTER or click the **Go** button, the WebBrowser control navigates to the URL specified. When you navigate by clicking a hyperlink, the text box automatically updates to display the current URL.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/cpp/t-system.windows.forms.w_4_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/visualbasic/t-system.windows.forms.w_4_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/csharp/t-system.windows.forms.w_4_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("DocumentCompleted")]

      [System.ComponentModel.DefaultProperty("Url")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)]

      public class WebBrowser : System.Windows.Forms.WebBrowserBase
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.WebBrowserBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.CreateParams
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnResize(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.WebBrowserBase.ActiveXInstance
  - System.Windows.Forms.WebBrowserBase.AllowDrop
  - System.Windows.Forms.WebBrowserBase.BackColor
  - System.Windows.Forms.WebBrowserBase.BackColorChanged
  - System.Windows.Forms.WebBrowserBase.BackgroundImage
  - System.Windows.Forms.WebBrowserBase.BackgroundImageChanged
  - System.Windows.Forms.WebBrowserBase.BackgroundImageLayout
  - System.Windows.Forms.WebBrowserBase.BackgroundImageLayoutChanged
  - System.Windows.Forms.WebBrowserBase.BindingContextChanged
  - System.Windows.Forms.WebBrowserBase.ChangeUICues
  - System.Windows.Forms.WebBrowserBase.Click
  - System.Windows.Forms.WebBrowserBase.Cursor
  - System.Windows.Forms.WebBrowserBase.CursorChanged
  - System.Windows.Forms.WebBrowserBase.DoubleClick
  - System.Windows.Forms.WebBrowserBase.DragDrop
  - System.Windows.Forms.WebBrowserBase.DragEnter
  - System.Windows.Forms.WebBrowserBase.DragLeave
  - System.Windows.Forms.WebBrowserBase.DragOver
  - System.Windows.Forms.WebBrowserBase.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.WebBrowserBase.Enabled
  - System.Windows.Forms.WebBrowserBase.EnabledChanged
  - System.Windows.Forms.WebBrowserBase.Enter
  - System.Windows.Forms.WebBrowserBase.Font
  - System.Windows.Forms.WebBrowserBase.FontChanged
  - System.Windows.Forms.WebBrowserBase.ForeColor
  - System.Windows.Forms.WebBrowserBase.ForeColorChanged
  - System.Windows.Forms.WebBrowserBase.GiveFeedback
  - System.Windows.Forms.WebBrowserBase.HelpRequested
  - System.Windows.Forms.WebBrowserBase.ImeMode
  - System.Windows.Forms.WebBrowserBase.ImeModeChanged
  - System.Windows.Forms.WebBrowserBase.IsInputChar(System.Char)
  - System.Windows.Forms.WebBrowserBase.KeyDown
  - System.Windows.Forms.WebBrowserBase.KeyPress
  - System.Windows.Forms.WebBrowserBase.KeyUp
  - System.Windows.Forms.WebBrowserBase.Layout
  - System.Windows.Forms.WebBrowserBase.Leave
  - System.Windows.Forms.WebBrowserBase.MouseCaptureChanged
  - System.Windows.Forms.WebBrowserBase.MouseClick
  - System.Windows.Forms.WebBrowserBase.MouseDoubleClick
  - System.Windows.Forms.WebBrowserBase.MouseDown
  - System.Windows.Forms.WebBrowserBase.MouseEnter
  - System.Windows.Forms.WebBrowserBase.MouseHover
  - System.Windows.Forms.WebBrowserBase.MouseLeave
  - System.Windows.Forms.WebBrowserBase.MouseMove
  - System.Windows.Forms.WebBrowserBase.MouseUp
  - System.Windows.Forms.WebBrowserBase.MouseWheel
  - System.Windows.Forms.WebBrowserBase.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.WebBrowserBase.Paint
  - System.Windows.Forms.WebBrowserBase.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.WebBrowserBase.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.WebBrowserBase.ProcessMnemonic(System.Char)
  - System.Windows.Forms.WebBrowserBase.QueryAccessibilityHelp
  - System.Windows.Forms.WebBrowserBase.QueryContinueDrag
  - System.Windows.Forms.WebBrowserBase.RightToLeft
  - System.Windows.Forms.WebBrowserBase.RightToLeftChanged
  - System.Windows.Forms.WebBrowserBase.Site
  - System.Windows.Forms.WebBrowserBase.StyleChanged
  - System.Windows.Forms.WebBrowserBase.Text
  - System.Windows.Forms.WebBrowserBase.TextChanged
  - System.Windows.Forms.WebBrowserBase.UseWaitCursor
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Forms.WebBrowser.WebBrowser()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>クラスです。"
  remarks: "既定では、<xref:System.Windows.Forms.WebBrowser>コントロールが空です</xref:System.Windows.Forms.WebBrowser>。 最初のドキュメントには、それを移動するには、設定、<xref:System.Windows.Forms.WebBrowser.Url%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.Url%2A>。"
  example:
  - "The following code example demonstrates the use of this member.  \n  \n [!code-cs[WebBrowserMisc#10](~/add/codesnippet/csharp/m-system.windows.forms.w_12_1.cs)]\n [!code-vb[WebBrowserMisc#10](~/add/codesnippet/visualbasic/m-system.windows.forms.w_12_1.vb)]"
  syntax:
    content: public WebBrowser ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールは、Internet Explorer 内でホストされます。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.AllowNavigation
  id: AllowNavigation
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: AllowNavigation
  nameWithType: WebBrowser.AllowNavigation
  fullName: System.Windows.Forms.WebBrowser.AllowNavigation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはの初期ページが読み込まれた後に、コントロールが別のページに移動できるかどうかを示す値を設定します。"
  remarks: "このプロパティができない最初のページの読み込みを設定してから、 <xref:System.Windows.Forms.WebBrowser.Url%2A>、<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>または<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティ、以降のすべての操作が妨げられることができます</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Url%2A>。"
  syntax:
    content: public bool AllowNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが別のページに移動できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.AllowNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop
  id: AllowWebBrowserDrop
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: AllowWebBrowserDrop
  nameWithType: WebBrowser.AllowWebBrowserDrop
  fullName: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールにドロップされたドキュメントに移動します。"
  remarks: "既定では、<xref:System.Windows.Forms.WebBrowser>コントロールが自動的にそれをドロップするドキュメントに移動</xref:System.Windows.Forms.WebBrowser>する この動作は、汎用のブラウザーとしてコントロールを使用する場合に便利です。 具体的には、HTML ベースのユーザー アシスタンスなど、アプリケーション用に設計されたコンテンツを表示するコントロールを使用する場合は、AllowWebBrowserDrop プロパティを設定`false`を他のコンテンツの表示を防ぐためにします。 使用しているという事実を非表示にする場合に特に便利ですが、<xref:System.Windows.Forms.WebBrowser>コントロール、Web ベースのコントロールを Windows フォーム コントロールをシームレスに結合するユーザー インターフェイスを作成する場合などです</xref:System.Windows.Forms.WebBrowser>。       設定してその他の標準的なブラウザーの機能を無効にすることができます、<xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>と<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>プロパティ`false`</xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A></xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>。      > [!NOTE] > このプロパティに関係のない、<xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=fullName>プロパティなど、ドラッグ アンド ドロップ イベントを発生しません、<xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>コントロールで発生するイベントです</xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName></xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=fullName>。"
  example:
  - "The following code example demonstrates how to use the AllowWebBrowserDrop property.  \n  \n [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/add/codesnippet/visualbasic/p-system.windows.forms.w_11_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/add/codesnippet/csharp/p-system.windows.forms.w_11_1.cs)]"
  syntax:
    content: public bool AllowWebBrowserDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがそれにドロップされたドキュメントを承認する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)
  id: AttachInterfaces(System.Object)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: AttachInterfaces(Object)
  nameWithType: WebBrowser.AttachInterfaces(Object)
  fullName: System.Windows.Forms.WebBrowser.AttachInterfaces(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "基になる ActiveX コントロールが作成されるときに、コントロールによって呼び出されます。"
  syntax:
    content: protected override void AttachInterfaces (object nativeActiveXObject);
    parameters:
    - id: nativeActiveXObject
      type: System.Object
      description: "基になる ActiveX コントロールを表すオブジェクト。"
  overload: System.Windows.Forms.WebBrowser.AttachInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CanGoBack
  id: CanGoBack
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Forms.WebBrowser.CanGoBack
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ナビゲーション履歴に前のページ提供されているか、これによりを示す値を取得、<xref:System.Windows.Forms.WebBrowser.GoBack*>メソッドは成功します</xref:System.Windows.Forms.WebBrowser.GoBack*>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>メソッドは、移動、 <xref:System.Windows.Forms.WebBrowser>1 つが利用可能な場合は、この履歴に前のページを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 ナビゲーション履歴があるし、前のページが含まれて かどうかを判断するのにには、CanGoBack プロパティを使用します。 このプロパティは、する場合`true`、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>メソッドは成功します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 それ以外の場合、呼び出し、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>メソッドは、値を返します`false`ナビゲーションは行われません</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。       処理することも、 <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>CanGoBack プロパティが変更されたときに通知を受信するイベントです</xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**戻る**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の先頭のままにします</xref:System.Windows.Forms.WebBrowser>。"
  example:
  - "The following code example demonstrates how to use the CanGoBack property to implement a **Back** button for the <xref:System.Windows.Forms.WebBrowser> control that is similar to the **Back** button in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `backButton`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/cpp/p-system.windows.forms.w_13_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/visualbasic/p-system.windows.forms.w_13_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/csharp/p-system.windows.forms.w_13_1.cs)]"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールをページに戻る場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CanGoBackChanged
  id: CanGoBackChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CanGoBackChanged
  nameWithType: WebBrowser.CanGoBackChanged
  fullName: System.Windows.Forms.WebBrowser.CanGoBackChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.WebBrowser.CanGoBack*>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.CanGoBack*>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>メソッドは、移動、 <xref:System.Windows.Forms.WebBrowser>1 つが利用可能な場合は、この履歴に前のページを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>プロパティは、ナビゲーション履歴が使用できると、前のページが含まれて かどうかを示します</xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>。 通知を受信する CanGoBackChanged イベントを処理時に、<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>プロパティが変更された</xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**戻る**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の先頭のままにします</xref:System.Windows.Forms.WebBrowser>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a handler for the CanGoBackChanged event to implement a **Back** button for the <xref:System.Windows.Forms.WebBrowser> control that is similar to the **Back** button in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `backButton`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/cpp/e-system.windows.forms.w_1_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/visualbasic/e-system.windows.forms.w_1_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/csharp/e-system.windows.forms.w_1_1.cs)]"
  syntax:
    content: public event EventHandler CanGoBackChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CanGoForward
  id: CanGoForward
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Forms.WebBrowser.CanGoForward
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ナビゲーション履歴に次のページ提供されているか、これによりを示す値を取得、<xref:System.Windows.Forms.WebBrowser.GoForward*>メソッドは成功します</xref:System.Windows.Forms.WebBrowser.GoForward*>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドは、移動、<xref:System.Windows.Forms.WebBrowser>が前の旧バージョンとナビゲーションの結果として使用できる場合は、この履歴で次のページを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.GoForward%2A>。 このプロパティは、する場合`true`、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドは成功します</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。 それ以外の場合、呼び出し、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドは、値を返します`false`ナビゲーションは行われません</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       ナビゲーション履歴があるし、現在&1; つの後にあるページが含まれて かどうかを判断する CanGoForward プロパティを使用できるように、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドが成功する</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       処理することも、 <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>CanGoForward プロパティが変更されたときに通知を受信するイベントです</xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**フォワード**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の最後のままにします</xref:System.Windows.Forms.WebBrowser>。"
  example:
  - "The following code example demonstrates how to use a handler for the CanGoForward event to implement a **Forward** button for the <xref:System.Windows.Forms.WebBrowser> control that is similar to the **Forward** button in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonForward`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/cpp/p-system.windows.forms.w_7_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/visualbasic/p-system.windows.forms.w_7_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/csharp/p-system.windows.forms.w_7_1.cs)]"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールのページに進むことができる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CanGoForwardChanged
  id: CanGoForwardChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CanGoForwardChanged
  nameWithType: WebBrowser.CanGoForwardChanged
  fullName: System.Windows.Forms.WebBrowser.CanGoForwardChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.WebBrowser.CanGoForward*>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.CanGoForward*>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドは、移動、<xref:System.Windows.Forms.WebBrowser>が前の旧バージョンとナビゲーションの結果として使用できる場合は、この履歴で次のページを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.GoForward%2A>。 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>プロパティは、ナビゲーション履歴が使用できると、現在&1; つの後にあるページが含まれて かどうかを示しますできるように、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッドは成功します。</xref:System.Windows.Forms.WebBrowser.GoForward%2A> </xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 。 通知を受信する CanGoForwardChanged イベントを処理時に、<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>プロパティが変更された</xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**フォワード**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の最後のままにします</xref:System.Windows.Forms.WebBrowser>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.WebBrowser.GoForward%2A> method to implement a **Forward** button for the <xref:System.Windows.Forms.WebBrowser> control that is similar to the **Forward** button in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonForward`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/cpp/e-system.windows.forms.w_9_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/visualbasic/e-system.windows.forms.w_9_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/csharp/e-system.windows.forms.w_9_1.cs)]"
  syntax:
    content: public event EventHandler CanGoForwardChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CreateSink
  id: CreateSink
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CreateSink()
  nameWithType: WebBrowser.CreateSink()
  fullName: System.Windows.Forms.WebBrowser.CreateSink()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールのイベントを処理できるクライアントを基になる ActiveX コントロールを関連付けます。"
  remarks: "このメソッドは、アンマネージを使用して OLE 開発に慣れている場合に役立ちます`WebBrowser`ActiveX コントロールと Windows フォームの機能を拡張する<xref:System.Windows.Forms.WebBrowser>コントロールで、ActiveX コントロールのマネージ ラッパーです。</xref:System.Windows.Forms.WebBrowser> 。 この拡張機能を使用するがラッパー コントロールで提供されていない ActiveX コントロールからイベントを実装します。"
  example:
  - "The following code example illustrates the use of this method in a class derived from <xref:System.Windows.Forms.WebBrowser> that supplements the normal <xref:System.Windows.Forms.WebBrowser> events with the `NavigateError` event from the OLE `DWebBrowserEvents2` interface.  \n  \n [!code-vb[WebBrowserExtensibility#00](~/add/codesnippet/visualbasic/m-system.windows.forms.w_5_1.vb)]\n [!code-cs[WebBrowserExtensibility#00](~/add/codesnippet/csharp/m-system.windows.forms.w_5_1.cs)]"
  syntax:
    content: protected override void CreateSink ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.CreateSink*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase
  id: CreateWebBrowserSiteBase
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: CreateWebBrowserSiteBase()
  nameWithType: WebBrowser.CreateWebBrowserSiteBase()
  fullName: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "アンマネージへの参照を返します<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>マネージをカスタマイズする、拡張可能な ActiveX コントロール サイト<xref href=&quot;System.Windows.Forms.WebBrowser&quot;></xref>コントロール。"
  remarks: "このメソッドは、アンマネージを使用して OLE 開発に慣れている場合に役立ちます`WebBrowser`ActiveX コントロールと Windows フォームの機能を拡張する<xref:System.Windows.Forms.WebBrowser>コントロールで、ActiveX コントロールのマネージ ラッパーです。</xref:System.Windows.Forms.WebBrowser> 。 ブラウザーのショートカット メニューとショートカット キーをカスタマイズするかホスト型のドキュメントにカスタム セキュリティ設定を指定して、この拡張性を使用できます。       この機能を使用するから継承するクラスを実装する、<xref:System.Windows.Forms.WebBrowser>と<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>クラス</xref:System.Windows.Forms.WebBrowser.WebBrowserSite></xref:System.Windows.Forms.WebBrowser>。 アンマネージ`WebBrowser`ActiveX コントロールでは、保護 CreateWebBrowserSiteBase メソッドを使用して、<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>クラス</xref:System.Windows.Forms.WebBrowser.WebBrowserSite>で実装された機能拡張インターフェイスを取得するには <xref:System.Windows.Forms.WebBrowser.WebBrowserSite>クラス</xref:System.Windows.Forms.WebBrowser.WebBrowserSite>から継承するクラスのインスタンスを返す CreateWebBrowserSiteBase メソッドをオーバーライドします。 <xref:System.Windows.Forms.WebBrowser.WebBrowserSite>クラスは、OLE の既定の実装を提供`IDocHostUIHandler`インターフェイス</xref:System.Windows.Forms.WebBrowser.WebBrowserSite>。 このインターフェイスの実装を提供したり、他の実装`WebBrowser`コントロールの動作をカスタマイズするために ActiveX コントロールのインターフェイスです。      > [!NOTE] > のいずれか、独自の実装を提供する場合`IDocHostUIHandler`メンバー、そのインターフェイスのすべてのメンバーを実装する必要があります。"
  syntax:
    content: protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();
    parameters: []
    return:
      type: System.Windows.Forms.WebBrowserSiteBase
      description: "A<xref:System.Windows.Forms.WebBrowser.WebBrowserSite>を表す、 <xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;> </xref> ActiveX コントロール サイト</xref:System.Windows.Forms.WebBrowser.WebBrowserSite>。"
  overload: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DefaultSize
  nameWithType: WebBrowser.DefaultSize
  fullName: System.Windows.Forms.WebBrowser.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コントロールの既定のサイズを取得します。"
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "コントロールの既定のサイズを取得します。"
  overload: System.Windows.Forms.WebBrowser.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DetachInterfaces
  id: DetachInterfaces
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DetachInterfaces()
  nameWithType: WebBrowser.DetachInterfaces()
  fullName: System.Windows.Forms.WebBrowser.DetachInterfaces()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "基になる ActiveX コントロールが破棄されたときに、コントロールによって呼び出されます。"
  syntax:
    content: protected override void DetachInterfaces ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.DetachInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DetachSink
  id: DetachSink
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DetachSink()
  nameWithType: WebBrowser.DetachSink()
  fullName: System.Windows.Forms.WebBrowser.DetachSink()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "イベント処理のクライアントがで接続を解放、<xref:System.Windows.Forms.WebBrowser.CreateSink*>基になる ActiveX コントロールからのメソッド</xref:System.Windows.Forms.WebBrowser.CreateSink*>。"
  remarks: "このメソッドは、アンマネージを使用して OLE 開発に慣れている場合に役立ちます`WebBrowser`ActiveX コントロールと Windows フォームの機能を拡張する<xref:System.Windows.Forms.WebBrowser>コントロールで、ActiveX コントロールのマネージ ラッパーです。</xref:System.Windows.Forms.WebBrowser> 。 この拡張機能を使用するがラッパー コントロールで提供されていない ActiveX コントロールからイベントを実装します。"
  example:
  - "The following code example illustrates the use of this method in a class derived from <xref:System.Windows.Forms.WebBrowser> that supplements the standard <xref:System.Windows.Forms.WebBrowser> events with the `NavigateError` event from the OLE `DWebBrowserEvents2` interface.  \n  \n For the complete code example, see <xref:System.Windows.Forms.WebBrowser.CreateSink%2A>.  \n  \n [!code-vb[WebBrowserExtensibility#10](~/add/codesnippet/visualbasic/m-system.windows.forms.w_3_1.vb)]\n [!code-cs[WebBrowserExtensibility#10](~/add/codesnippet/csharp/m-system.windows.forms.w_3_1.cs)]"
  syntax:
    content: protected override void DetachSink ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.DetachSink*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: WebBrowser.Dispose(Boolean)
  fullName: System.Windows.Forms.WebBrowser.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Windows.Forms.WebBrowser.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Document
  id: Document
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Forms.WebBrowser.Document
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref>に現在表示されている Web ページを表す、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "表示される Web ページの内容にアクセスするときに、このプロパティを使用して、 <xref:System.Windows.Forms.WebBrowser>HTML ドキュメント オブジェクト モデル (DOM) を使用してコントロール</xref:System.Windows.Forms.WebBrowser>。 これは、Windows フォーム アプリケーションで Web ベースのコントロールを使用する場合に便利です。       組み合わせてこのプロパティを使用することができます、<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>に表示される Web ページ間で双方向通信を実装する、プロパティ、<xref:System.Windows.Forms.WebBrowser>コントロールとアプリケーション</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>。 使用して、<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=fullName>に、クライアント アプリケーション コードから Web ページに実装されているスクリプト メソッドを呼び出すメソッド</xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=fullName>。 スクリプト コードをアプリケーションにアクセスでき、`window.external`ホスト アクセス用の組み込み DOM オブジェクトでは、指定したオブジェクトに対応して、オブジェクト、<xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A>。       文字列として Web ページのコンテンツにアクセスするには、使用、<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentText%2A>。 として Web ページの内容にアクセスする、<xref:System.IO.Stream>を使用して、<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.IO.Stream>。"
  example:
  - "The following code example demonstrates how to use the Document property in a handler for the <xref:System.Windows.Forms.WebBrowser.Navigating> event to determine whether a Web page form has been filled in. If the input field does not contain a value, the navigation is canceled.  \n  \n This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n [!code-cs[WebBrowserMisc#30](~/add/codesnippet/csharp/p-system.windows.forms.w_3_1.cs)]\n [!code-vb[WebBrowserMisc#30](~/add/codesnippet/visualbasic/p-system.windows.forms.w_3_1.vb)]"
  syntax:
    content: public System.Windows.Forms.HtmlDocument Document { get; }
    return:
      type: System.Windows.Forms.HtmlDocument
      description: "<xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref> 、現在のページを表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ページが読み込まれていない場合。"
  overload: System.Windows.Forms.WebBrowser.Document*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentCompleted
  id: DocumentCompleted
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentCompleted
  nameWithType: WebBrowser.DocumentCompleted
  fullName: System.Windows.Forms.WebBrowser.DocumentCompleted
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールでは、ドキュメントの読み込みが完了するとします。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>が設定されている、次のプロパティまたはメソッドが呼び出されるたびに新しいドキュメントにコントロールが移動:- <xref:System.Windows.Forms.WebBrowser.Url%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>- <xref:System.Windows.Forms.WebBrowser.Navigate%2A>- <xref:System.Windows.Forms.WebBrowser.GoBack%2A>- <xref:System.Windows.Forms.WebBrowser.GoForward%2A>- <xref:System.Windows.Forms.WebBrowser.GoHome%2A>-<xref:System.Windows.Forms.WebBrowser.GoSearch%2A>新しいドキュメントには、読み込みが完了したときに通知を受信する DocumentCompleted イベントを処理します</xref:System.Windows.Forms.WebBrowser.GoSearch%2A></xref:System.Windows.Forms.WebBrowser.GoHome%2A></xref:System.Windows.Forms.WebBrowser.GoForward%2A></xref:System.Windows.Forms.WebBrowser.GoBack%2A></xref:System.Windows.Forms.WebBrowser.Navigate%2A></xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Url%2A></xref:System.Windows.Forms.WebBrowser>。 DocumentCompleted イベントの発生時、この新しいドキュメントが完全に読み込まれる、を通じてその内容を表示することを意味する、 <xref:System.Windows.Forms.WebBrowser.Document%2A>、 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>、または<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Document%2A>。       ナビゲーションを開始する前に、通知を受信するには、処理、<xref:System.Windows.Forms.WebBrowser.Navigating>イベント</xref:System.Windows.Forms.WebBrowser.Navigating>。 このイベントを処理すると、たとえば、ユーザーが完全に入力していない場合、フォームなど、特定の条件が満たされなかった場合は、ナビゲーションをキャンセルできます。 処理、<xref:System.Windows.Forms.WebBrowser.Navigated>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser>コントロールがナビゲーションを終了して、新しい場所にあるドキュメントの読み込みを開始した</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Navigated>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this event to print a document after it has fully loaded.  \n  \n [!code-cs[WebBrowserMisc#10](~/add/codesnippet/csharp/e-system.windows.forms.w_10_1.cs)]\n [!code-vb[WebBrowserMisc#10](~/add/codesnippet/visualbasic/e-system.windows.forms.w_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;
    return:
      type: System.Windows.Forms.WebBrowserDocumentCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentStream
  id: DocumentStream
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentStream
  nameWithType: WebBrowser.DocumentStream
  fullName: System.Windows.Forms.WebBrowser.DocumentStream
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定に表示される Web ページの内容を含むストリーム、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティに Web ページの読み込みを使用して、<xref:System.Windows.Forms.WebBrowser>から制御、<xref:System.IO.Stream>オブジェクト</xref:System.IO.Stream></xref:System.Windows.Forms.WebBrowser>。 たとえば、このプロパティを使用するデータベースやリソース ファイルから Web ページを読み込めません。 このプロパティを設定すると、<xref:System.Windows.Forms.WebBrowser>にコントロールが自動的に移動、に関する: 指定されたテキストを読み込む前に URL を空白します</xref:System.Windows.Forms.WebBrowser>。 つまり、 <xref:System.Windows.Forms.WebBrowser.Navigating>、 <xref:System.Windows.Forms.WebBrowser.Navigated>、および<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>の値と、このプロパティを設定すると、イベントが発生した、<xref:System.Windows.Forms.WebBrowser.Url%2A>プロパティは意味のあるではなくなりました</xref:System.Windows.Forms.WebBrowser.Url%2A></xref:System.Windows.Forms.WebBrowser.DocumentCompleted></xref:System.Windows.Forms.WebBrowser.Navigated></xref:System.Windows.Forms.WebBrowser.Navigating>。      > [!NOTE] > 別のドキュメントが要求された場合でも、このプロパティは、現在のドキュメントの内容を格納します。 このプロパティの値を設定して、すぐに再度取得する場合は、取得した値が場合に設定された値よりも異なる可能性があります、<xref:System.Windows.Forms.WebBrowser>コントロールは、新しいコンテンツの読み込みに時間</xref:System.Windows.Forms.WebBrowser>。 新しい値を取得することができます、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベント ハンドラー</xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。       文字列として Web ページのコンテンツにアクセスするには、使用、<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentText%2A>。 HTML ドキュメント オブジェクト モデル (DOM) を使用してページの内容からアクセスすることもできます、<xref:System.Windows.Forms.WebBrowser.Document%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.Document%2A>。"
  syntax:
    content: public System.IO.Stream DocumentStream { get; set; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>、現在の Web ページの内容を含むまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ページが読み込まれていない場合</xref:System.IO.Stream>。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.DocumentStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentText
  id: DocumentText
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentText
  nameWithType: WebBrowser.DocumentText
  fullName: System.Windows.Forms.WebBrowser.DocumentText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定に表示されるページの HTML コンテンツ、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "表示される HTML ページの内容を操作するときに、このプロパティを使用して、<xref:System.Windows.Forms.WebBrowser>文字列処理ツールを使用して制御します</xref:System.Windows.Forms.WebBrowser>。 データベースからページを読み込むか、正規表現を使用してページを分析する、このプロパティを使用することができます。 このプロパティを設定すると、<xref:System.Windows.Forms.WebBrowser>にコントロールが自動的に移動、に関する: 指定されたテキストを読み込む前に URL を空白します</xref:System.Windows.Forms.WebBrowser>。 つまり、 <xref:System.Windows.Forms.WebBrowser.Navigating>、 <xref:System.Windows.Forms.WebBrowser.Navigated>、および<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>の値と、このプロパティを設定すると、イベントが発生した、<xref:System.Windows.Forms.WebBrowser.Url%2A>プロパティは意味のあるではなくなりました</xref:System.Windows.Forms.WebBrowser.Url%2A></xref:System.Windows.Forms.WebBrowser.DocumentCompleted></xref:System.Windows.Forms.WebBrowser.Navigated></xref:System.Windows.Forms.WebBrowser.Navigating>。      > [!NOTE] > 別のドキュメントが要求された場合でも、このプロパティには、現在のドキュメントのテキストが含まれます。 このプロパティの値を設定して、すぐに再度取得する場合は、取得した値が場合に設定された値よりも異なる可能性があります、<xref:System.Windows.Forms.WebBrowser>コントロールは、新しいコンテンツの読み込みに時間</xref:System.Windows.Forms.WebBrowser>。 新しい値を取得することができます、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベント ハンドラー</xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。 呼び出して、ドキュメントが読み込まれるまでスレッドをブロックする代わりに、 <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>DocumentText プロパティを設定していた値を返すまで、ループ内のメソッド</xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>。       として Web ページの内容にアクセスする、<xref:System.IO.Stream>を使用して、<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.IO.Stream>。 HTML ドキュメント オブジェクト モデル (DOM) を使用してページの内容からアクセスすることもできます、<xref:System.Windows.Forms.WebBrowser.Document%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.Document%2A>。"
  example:
  - "The following code example demonstrates how to use the DocumentText property to programmatically display document content of your choosing. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n [!code-cs[WebBrowserMisc#30](~/add/codesnippet/csharp/p-system.windows.forms.w_4_1.cs)]\n [!code-vb[WebBrowserMisc#30](~/add/codesnippet/visualbasic/p-system.windows.forms.w_4_1.vb)]"
  syntax:
    content: public string DocumentText { get; set; }
    return:
      type: System.String
      description: "表示されるページ、または空の文字列の HTML テキスト (&quot;&quot;) ドキュメントが読み込まれていない場合。"
  overload: System.Windows.Forms.WebBrowser.DocumentText*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentTitle
  id: DocumentTitle
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentTitle
  nameWithType: WebBrowser.DocumentTitle
  fullName: System.Windows.Forms.WebBrowser.DocumentTitle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されているドキュメントのタイトルを取得、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティ役に立ちます、たとえば、アプリケーションのタイトル バーにドキュメントのタイトルを表示する場合。 現在のドキュメントのタイトルが定義されていない場合、このプロパティは、ドキュメントの場所とファイル名に設定します。       処理、<xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged>バーの場合に、タイトルにタイトルを更新するイベント、<xref:System.Windows.Forms.WebBrowser>コントロールが新しいドキュメントに移動します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged>。"
  example:
  - "The following code example demonstrates how to use the DocumentTitle property to update the form title bar with the title of the current document. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/cpp/p-system.windows.forms.w_9_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/visualbasic/p-system.windows.forms.w_9_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/csharp/p-system.windows.forms.w_9_1.cs)]"
  syntax:
    content: public string DocumentTitle { get; }
    return:
      type: System.String
      description: "現在のドキュメントまたは空の文字列のタイトル (&quot;&quot;) ドキュメントが読み込まれていない場合。"
  overload: System.Windows.Forms.WebBrowser.DocumentTitle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentTitleChanged
  id: DocumentTitleChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentTitleChanged
  nameWithType: WebBrowser.DocumentTitleChanged
  fullName: System.Windows.Forms.WebBrowser.DocumentTitleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.WebBrowser.DocumentTitle*>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.DocumentTitle*>。"
  remarks: "現在の値で、アプリケーションのタイトル バーを更新するには、このイベントを処理することができます、<xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a handler for the DocumentTitleChanged event to update the form title bar with the title of the current document. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/cpp/e-system.windows.forms.w_4_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/visualbasic/e-system.windows.forms.w_4_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#15](~/add/codesnippet/csharp/e-system.windows.forms.w_4_1.cs)]"
  syntax:
    content: public event EventHandler DocumentTitleChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.DocumentType
  id: DocumentType
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: DocumentType
  nameWithType: WebBrowser.DocumentType
  fullName: System.Windows.Forms.WebBrowser.DocumentType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されているドキュメントの種類を取得、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティの値は、ドキュメントの Multipurpose Internet Mail Extensions (MIME) の種類に対応します。"
  syntax:
    content: public string DocumentType { get; }
    return:
      type: System.String
      description: "現在のドキュメントの種類。"
  overload: System.Windows.Forms.WebBrowser.DocumentType*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.EncryptionLevel
  id: EncryptionLevel
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: EncryptionLevel
  nameWithType: WebBrowser.EncryptionLevel
  fullName: System.Windows.Forms.WebBrowser.EncryptionLevel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されているドキュメントで使用する暗号化方法を示す値を取得、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティを使用することができます、 <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged>Internet Explorer のロック アイコンのようなアプリケーションのユーザー インターフェイスにインジケーターを実装するイベントです</xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged>。 このプロパティの値が<xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName>。</xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName>は、現在のドキュメントが暗号化されていない場合 ときに<xref:System.Windows.Forms.WebBrowser>コントロールが別の暗号化レベルのコンテンツを持つ複数のフレームを含む Web ページを表示、このプロパティの値は<xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName>.</xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowser> このプロパティの値が<xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName>。</xref:System.Windows.Forms.WebBrowserEncryptionLevel?displayProperty=fullName>は、暗号化レベルが不明の場合は、 その他の値は、現在の暗号化の種類を示します。 Internet Explorer のロック アイコンの動作を模倣するためには、マウス ポインターが、インジケーターの上に置いたときに表示されるツールヒントに、暗号化の種類を表示します。"
  syntax:
    content: public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }
    return:
      type: System.Windows.Forms.WebBrowserEncryptionLevel
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.WebBrowserEncryptionLevel&quot;> </xref>値。"
  overload: System.Windows.Forms.WebBrowser.EncryptionLevel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.EncryptionLevelChanged
  id: EncryptionLevelChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: EncryptionLevelChanged
  nameWithType: WebBrowser.EncryptionLevelChanged
  fullName: System.Windows.Forms.WebBrowser.EncryptionLevelChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>または暗号化を使用する Web サイトから離れた場所にコントロールが移動します。"
  remarks: "このイベントを使用することができます、 <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>Internet Explorer のロック アイコンのようなアプリケーションのユーザー インターフェイスにインジケーターを実装するプロパティ</xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>。 このイベントのハンドラーでの値を確認、<xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>プロパティを非表示にするか、インジケーターを表示する必要がありますかを判断します</xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A>。 Internet Explorer のロック アイコンの動作を模倣するために、マウス ポインターが、インジケーターの上に置いたときに、暗号化レベルを表示するツールヒントを指定することもできます。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the EncryptionLevelChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.WebBrowser> named `WebBrowser1`. Then ensure that the event handler is associated with the EncryptionLevelChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#647](~/add/codesnippet/csharp/e-system.windows.forms.w_6_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#647](~/add/codesnippet/visualbasic/e-system.windows.forms.w_6_1.vb)]"
  syntax:
    content: public event EventHandler EncryptionLevelChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.FileDownload
  id: FileDownload
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: FileDownload
  nameWithType: WebBrowser.FileDownload
  fullName: System.Windows.Forms.WebBrowser.FileDownload
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールは、ファイルをダウンロードします。"
  remarks: "イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FileDownload event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.WebBrowser> named `WebBrowser1`. Then ensure that the event handler is associated with the FileDownload event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#648](~/add/codesnippet/csharp/e-system.windows.forms.w_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#648](~/add/codesnippet/visualbasic/e-system.windows.forms.w_0_1.vb)]"
  syntax:
    content: public event EventHandler FileDownload;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Focused
  id: Focused
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Focused
  nameWithType: WebBrowser.Focused
  fullName: System.Windows.Forms.WebBrowser.Focused
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "かどうか、コントロールまたはその子ウィンドウのいずれかに入力フォーカスを示す値を取得します。"
  syntax:
    content: public override bool Focused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールまたはその子ウィンドウのいずれかが入力フォーカスがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.Focused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.GoBack
  id: GoBack
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Forms.WebBrowser.GoBack()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移動、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>&1; つが利用可能な場合は、ナビゲーション履歴に前のページを制御します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 実装する場合、GoBack メソッドを使用することができます、**戻る**Internet Explorer で、ナビゲーション履歴に前のページに戻るには、ユーザーを許可するようにボタンをクリックします。       使用して、<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>ナビゲーション履歴があるし、前のページが含まれて かどうかを判断するプロパティ</xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>。 処理、<xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.CanGoBack%2A></xref:System.Windows.Forms.WebBrowser.CanGoBackChanged>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**戻る**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の先頭のままにします</xref:System.Windows.Forms.WebBrowser>。"
  example:
  - "The following code example demonstrates how to use the GoBack method to implement a **Back** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `backButton`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/cpp/m-system.windows.forms.w_11_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/visualbasic/m-system.windows.forms.w_11_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#7](~/add/codesnippet/csharp/m-system.windows.forms.w_11_1.cs)]"
  syntax:
    content: public bool GoBack ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションが成功した場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ナビゲーション履歴に前のページが使用できない場合。"
  overload: System.Windows.Forms.WebBrowser.GoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.GoForward
  id: GoForward
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Forms.WebBrowser.GoForward()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移動、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>&1; つが利用可能な場合は、ナビゲーション履歴に次のページに制御します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 実装する場合、GoForward メソッドを使用することができます、**フォワード**ボタンのように Internet Explorer で、ナビゲーション履歴に次のページに戻ります後方に移動した後、ユーザーできるようにします。       使用して、<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>ナビゲーション履歴があるし、現在&1; つの後にあるページが含まれて かどうかを判断するプロパティ</xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>。 処理、<xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.CanGoForward%2A></xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged>。 このイベントを処理する役に立ちます、たとえばの有効な状態を変更する、**フォワード**ボタン、<xref:System.Windows.Forms.WebBrowser>コントロールに移動またはナビゲーション履歴の最後のままにします</xref:System.Windows.Forms.WebBrowser>。"
  example:
  - "The following code example demonstrates how to use the GoForward method to implement a **Forward** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonForward`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/cpp/m-system.windows.forms.w_15_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/visualbasic/m-system.windows.forms.w_15_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#8](~/add/codesnippet/csharp/m-system.windows.forms.w_15_1.cs)]"
  syntax:
    content: public bool GoForward ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ナビゲーションが成功した場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ナビゲーション履歴に次のページが使用できない場合。"
  overload: System.Windows.Forms.WebBrowser.GoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.GoHome
  id: GoHome
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: GoHome()
  nameWithType: WebBrowser.GoHome()
  fullName: System.Windows.Forms.WebBrowser.GoHome()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移動、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>現在のユーザーのホーム ページを制御します。"
  remarks: "このメソッドは実装を使用することができます、**ホーム**Internet explorer のようなボタンをクリックします。 ユーザーがホーム ページに指定できる、**インターネット オプション**コントロール パネル またはからに表示されるダイアログ ボックス、**ツール**Internet Explorer のメニュー。"
  example:
  - "The following code example demonstrates how to use the GoHome method to implement a **Home** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonHome`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#11](~/add/codesnippet/cpp/m-system.windows.forms.w_6_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#11](~/add/codesnippet/visualbasic/m-system.windows.forms.w_6_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#11](~/add/codesnippet/csharp/m-system.windows.forms.w_6_1.cs)]"
  syntax:
    content: public void GoHome ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.GoHome*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.GoSearch
  id: GoSearch
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: GoSearch()
  nameWithType: WebBrowser.GoSearch()
  fullName: System.Windows.Forms.WebBrowser.GoSearch()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "移動、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>現在のユーザーの既定の検索ページを制御します。"
  remarks: "You can use this method to implement a search feature similar to the one in Internet Explorer. Depending on the version of Internet Explorer installed, the user can specify a default search page in the **Internet Options** dialog box, which is available from Control Panel or from the **Tools** menu in Internet Explorer.  \n  \n The default search page is stored in the registry under the `HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main\\Search Page` registry key. With later versions of Internet Explorer, this registry key must be modified in order to change the default search page used by this method. To use a search page other than the default, call the <xref:System.Windows.Forms.WebBrowser.Navigate%2A> method or specify the <xref:System.Windows.Forms.WebBrowser.Url%2A> property."
  example:
  - "The following code example demonstrates how to use the GoSearch method to implement a **Search** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonSearch`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#12](~/add/codesnippet/cpp/m-system.windows.forms.w_4_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#12](~/add/codesnippet/visualbasic/m-system.windows.forms.w_4_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#12](~/add/codesnippet/csharp/m-system.windows.forms.w_4_1.cs)]"
  syntax:
    content: public void GoSearch ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.GoSearch*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.IsBusy
  id: IsBusy
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: IsBusy
  nameWithType: WebBrowser.IsBusy
  fullName: System.Windows.Forms.WebBrowser.IsBusy
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールが現在新しいドキュメントを読み込んでいます。"
  remarks: "このプロパティは、する場合`true`、使用することができます、 <xref:System.Windows.Forms.WebBrowser.Stop%2A>、新しいドキュメントが完全に読み込まれる前に、現在の移動を停止するようにメソッド</xref:System.Windows.Forms.WebBrowser.Stop%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.ReadyState%2A>の正確なナビゲーション状態を決定するプロパティ、<xref:System.Windows.Forms.WebBrowser>コントロール</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.ReadyState%2A>。 IsBusy プロパティ値が false 場合に、<xref:System.Windows.Forms.WebBrowser.ReadyState%2A>プロパティの値が<xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName>.</xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowser.ReadyState%2A>"
  syntax:
    content: public bool IsBusy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがドキュメントを読み込んでいてビジーな場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.IsBusy*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.IsOffline
  id: IsOffline
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: IsOffline
  nameWithType: WebBrowser.IsOffline
  fullName: System.Windows.Forms.WebBrowser.IsOffline
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールがオフライン モードになっています。"
  remarks: "オフライン モードで、<xref:System.Windows.Forms.WebBrowser>コントロールは強制的にダウンロードするのではなく、ローカル キャッシュから Web ページを読み込むにします</xref:System.Windows.Forms.WebBrowser>。"
  syntax:
    content: public bool IsOffline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールがオフライン モードである場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.IsOffline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled
  id: IsWebBrowserContextMenuEnabled
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: IsWebBrowserContextMenuEnabled
  nameWithType: WebBrowser.IsWebBrowserContextMenuEnabled
  fullName: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定を示す値かどうかのショートカット メニュー、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールが有効にします。"
  remarks: "既定では、<xref:System.Windows.Forms.WebBrowser>コントロールは、ユーザーは、それを右クリックしたときは、ショートカット メニューを表示</xref:System.Windows.Forms.WebBrowser>する この動作は、汎用のブラウザーとしてコントロールを使用する場合に便利です。 使用しているという事実を非表示にするかどうか、<xref:System.Windows.Forms.WebBrowser>と Windows フォーム コントロール、Web ベースのコントロールをシームレスに結合するユーザー インターフェイスを作成する場合などのコントロールが false に IsWebBrowserContextMenuEnabled プロパティを設定します</xref:System.Windows.Forms.WebBrowser>。       設定してその他の標準的なブラウザーの機能を無効にすることができます、<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>と<xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A>プロパティを false にします</xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A></xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>。"
  example:
  - "The following code example demonstrates how to use the IsWebBrowserContextMenuEnabled property.  \n  \n [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/add/codesnippet/visualbasic/p-system.windows.forms.w_0_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/add/codesnippet/csharp/p-system.windows.forms.w_0_1.cs)]"
  syntax:
    content: public bool IsWebBrowserContextMenuEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールのショートカット メニューが有効である、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String)
  id: Navigate(System.String)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した Locator (URL) にドキュメントを読み込みます、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、前のドキュメントを交換します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールが、指定された URI に移動して、履歴リストの末尾に追加します</xref:System.Windows.Forms.WebBrowser>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。       使用することができます、<xref:System.Windows.Forms.WebBrowser.Navigate%2A>のような Internet Explorer のアドレス バーを実装するメソッド</xref:System.Windows.Forms.WebBrowser.Navigate%2A>。"
  syntax:
    content: public void Navigate (string urlString);
    parameters:
    - id: urlString
      type: System.String
      description: "読み込むドキュメントの URL。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したによって示される位置にあるドキュメントを読み込みます<xref:System.Uri>に、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、前のドキュメントを交換します</xref:System.Uri>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールが、指定された URI に移動して、履歴リストの末尾に追加します</xref:System.Windows.Forms.WebBrowser>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。       使用することができます、<xref:System.Windows.Forms.WebBrowser.Navigate%2A>のような Internet Explorer のアドレス バーを実装するメソッド</xref:System.Windows.Forms.WebBrowser.Navigate%2A>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.WebBrowser.Navigate%2A> method to implement an address bar for the <xref:System.Windows.Forms.WebBrowser> control. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`, a <xref:System.Windows.Forms.TextBox> control called `TextBoxAddress`, and a <xref:System.Windows.Forms.Button> control called `ButtonGo`. When you type a URL into the text box and press ENTER or click the **Go** button, the <xref:System.Windows.Forms.WebBrowser> control navigates to the URL specified. When you navigate by clicking a hyperlink, the text box automatically updates to display the current URL.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/cpp/m-system.windows.forms.w_13_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/visualbasic/m-system.windows.forms.w_13_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/csharp/m-system.windows.forms.w_13_1.cs)]"
  syntax:
    content: public void Navigate (Uri url);
    parameters:
    - id: url
      type: System.Uri
      description: "A<xref:System.Uri>読み込むドキュメントの URL を表すします</xref:System.Uri>。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> url </code>パラメーターの値は絶対 URI を表していません。 詳細については、次を参照してください。 &lt;xref:System.Uri.IsAbsoluteUri%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)
  id: Navigate(System.String,System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(String,Boolean)
  nameWithType: WebBrowser.Navigate(String,Boolean)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "か、新しいブラウザー ウィンドウにドキュメントに、指定した Locator (URL) を読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 したこのオーバー ロードを呼び出すと、`newWindow`のパラメーター値`false`コントロールは通常、指定された URI に移動し、履歴リストの末尾に URI を追加します。 したこのオーバー ロードを呼び出すと、`newWindow`のパラメーター値`true`、<xref:System.Windows.Forms.WebBrowser>コントロールが、独自のナビゲーション履歴を保持する新しい Internet Explorer ウィンドウに、指定された URI にあるドキュメントを読み込みます</xref:System.Windows.Forms.WebBrowser>。 処理することができます、<xref:System.Windows.Forms.WebBrowser.NewWindow>イベント通知を受信して新しいブラウザー ウィンドウが開かれる前に必要な場合は、操作をキャンセルすることができます</xref:System.Windows.Forms.WebBrowser.NewWindow>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールでは、ページに移動するか、別のブラウザー ウィンドウにページを読み込む、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。 ユーザーが最新バージョンを取得 をクリックして、ページが別の Internet Explorer ウィンドウに読み込まれると、**更新**ボタンをクリックします。"
  syntax:
    content: public void Navigate (string urlString, bool newWindow);
    parameters:
    - id: urlString
      type: System.String
      description: "読み込むドキュメントの URL。"
    - id: newWindow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しいブラウザー ウィンドウにドキュメントの読み込み<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>にドキュメントを読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)
  id: Navigate(System.String,System.String)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(String,String)
  nameWithType: WebBrowser.Navigate(String,String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ドキュメントで、指定した Locator (URL) に読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、Web ページ フレームのコンテンツを指定した名前に置き換えます。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールがドキュメント内の指定した URI を指定した名前を持つ Web ページ フレームに読み込み、履歴一覧の末尾に URI を追加します</xref:System.Windows.Forms.WebBrowser>。 指定したフレームの名前が有効でない場合は、新しい Internet Explorer のウィンドウにドキュメントが読み込まれます。       使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。"
  syntax:
    content: public void Navigate (string urlString, string targetFrameName);
    parameters:
    - id: urlString
      type: System.String
      description: "読み込むドキュメントの URL。"
    - id: targetFrameName
      type: System.String
      description: "ドキュメントの読み込み先のフレームの名前。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)
  id: Navigate(System.Uri,System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri,Boolean)
  nameWithType: WebBrowser.Navigate(Uri,Boolean)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したによって示される位置にあるドキュメントを読み込みます<xref:System.Uri>か、新しいブラウザー ウィンドウに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール</xref:System.Uri>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 したこのオーバー ロードを呼び出すと、`newWindow`のパラメーター値`false`コントロールは通常、指定された URI に移動し、履歴リストの末尾に URI を追加します。 したこのオーバー ロードを呼び出すと、`newWindow`のパラメーター値`true`、<xref:System.Windows.Forms.WebBrowser>コントロールが、独自のナビゲーション履歴を保持する新しい Internet Explorer ウィンドウに、指定された URI にあるドキュメントを読み込みます</xref:System.Windows.Forms.WebBrowser>。 処理することができます、<xref:System.Windows.Forms.WebBrowser.NewWindow>イベント通知を受信して新しいブラウザー ウィンドウが開かれる前に必要な場合は、操作をキャンセルすることができます</xref:System.Windows.Forms.WebBrowser.NewWindow>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールでは、ページに移動するか、別のブラウザー ウィンドウにページを読み込む、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。 ユーザーが最新バージョンを取得 をクリックして、ページが別の Internet Explorer ウィンドウに読み込まれると、**更新**ボタンをクリックします。"
  syntax:
    content: public void Navigate (Uri url, bool newWindow);
    parameters:
    - id: url
      type: System.Uri
      description: "A<xref:System.Uri>読み込むドキュメントの URL を表すします</xref:System.Uri>。"
    - id: newWindow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しいブラウザー ウィンドウにドキュメントの読み込み<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>にドキュメントを読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> url </code>パラメーターの値は絶対 URI を表していません。 詳細については、次を参照してください。 &lt;xref:System.Uri.IsAbsoluteUri%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)
  id: Navigate(System.Uri,System.String)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri,String)
  nameWithType: WebBrowser.Navigate(Uri,String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したによって示される位置にあるドキュメントを読み込みます<xref:System.Uri>に、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、Web ページ フレームのコンテンツを指定した名前に置き換えます</xref:System.Uri>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールがドキュメント内の指定した URI を指定した名前を持つ Web ページ フレームに読み込み、履歴一覧の末尾に URI を追加します</xref:System.Windows.Forms.WebBrowser>。 指定したフレームの名前が有効でない場合は、新しい Internet Explorer のウィンドウにドキュメントが読み込まれます。       使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。"
  syntax:
    content: public void Navigate (Uri url, string targetFrameName);
    parameters:
    - id: url
      type: System.Uri
      description: "A<xref:System.Uri>読み込むドキュメントの URL を表すします</xref:System.Uri>。"
    - id: targetFrameName
      type: System.String
      description: "ドキュメントの読み込み先のフレームの名前。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> url </code>パラメーターの値は絶対 URI を表していません。 詳細については、次を参照してください。 &lt;xref:System.Uri.IsAbsoluteUri%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  id: Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,String,Byte[],String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した Locator (URL) にドキュメントを読み込みます、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、要求に指定された HTTP データを使用し、Web ページ フレームのコンテンツを指定した名前に置き換えます。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールがドキュメント内の指定した URI を指定した名前を持つ Web ページ フレームに読み込み、履歴一覧の末尾に URI を追加します</xref:System.Windows.Forms.WebBrowser>。 指定したフレームの名前が有効でない場合は、新しい Internet Explorer のウィンドウにドキュメントが読み込まれます。       使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。"
  syntax:
    content: public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: urlString
      type: System.String
      description: "読み込むドキュメントの URL。"
    - id: targetFrameName
      type: System.String
      description: "ドキュメントの読み込み先のフレームの名前。"
    - id: postData
      type: System.Byte[]
      description: "フォーム データなどの HTTP POST データ。"
    - id: additionalHeaders
      type: System.String
      description: "既定のヘッダーに追加する HTTP ヘッダー。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  id: Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,String,Byte[],String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したによって示される位置にあるドキュメントを読み込みます<xref:System.Uri>に、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール、要求に指定された HTTP データを使用し、Web ページ フレームのコンテンツを指定した名前に置き換えます</xref:System.Uri>。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 このオーバー ロードを呼び出すときに、<xref:System.Windows.Forms.WebBrowser>コントロールがドキュメント内の指定した URI を指定した名前を持つ Web ページ フレームに読み込み、履歴一覧の末尾に URI を追加します</xref:System.Windows.Forms.WebBrowser>。 指定したフレームの名前が有効でない場合は、新しい Internet Explorer のウィンドウにドキュメントが読み込まれます。       使用して、<xref:System.Windows.Forms.WebBrowser.GoBack%2A>ナビゲーション履歴に前のページにコントロールを返します</xref:System.Windows.Forms.WebBrowser.GoBack%2A>。 使用して、<xref:System.Windows.Forms.WebBrowser.GoForward%2A>メソッド後方に移動した後の移動履歴で、後のページに戻ります</xref:System.Windows.Forms.WebBrowser.GoForward%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。"
  syntax:
    content: public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: url
      type: System.Uri
      description: "A<xref:System.Uri>読み込むドキュメントの URL を表すします</xref:System.Uri>。"
    - id: targetFrameName
      type: System.String
      description: "ドキュメントの読み込み先のフレームの名前。"
    - id: postData
      type: System.Byte[]
      description: "フォーム データなどの HTTP POST データ。"
    - id: additionalHeaders
      type: System.String
      description: "既定のヘッダーに追加する HTTP ヘッダー。"
  overload: System.Windows.Forms.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> url </code>パラメーターの値は絶対 URI を表していません。 詳細については、次を参照してください。 &lt;xref:System.Uri.IsAbsoluteUri%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigated
  id: Navigated
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Forms.WebBrowser.Navigated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールが新しいドキュメントに移動し、読み込みを開始します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>が設定されている、次のプロパティまたはメソッドが呼び出されるたびに新しいドキュメントにコントロールが移動:- <xref:System.Windows.Forms.WebBrowser.Url%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>- <xref:System.Windows.Forms.WebBrowser.Navigate%2A>- <xref:System.Windows.Forms.WebBrowser.GoBack%2A>- <xref:System.Windows.Forms.WebBrowser.GoForward%2A>- <xref:System.Windows.Forms.WebBrowser.GoHome%2A>-<xref:System.Windows.Forms.WebBrowser.GoSearch%2A>通知を受信する Navigated イベントを処理時に、<xref:System.Windows.Forms.WebBrowser>コントロールが新しいドキュメントに移動します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.GoSearch%2A></xref:System.Windows.Forms.WebBrowser.GoHome%2A></xref:System.Windows.Forms.WebBrowser.GoForward%2A></xref:System.Windows.Forms.WebBrowser.GoBack%2A></xref:System.Windows.Forms.WebBrowser.Navigate%2A></xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Url%2A></xref:System.Windows.Forms.WebBrowser>。 新しいドキュメントから読み込まれたコンテンツにアクセスできることを意味の読み込みが始まった Navigated イベントの発生時、 <xref:System.Windows.Forms.WebBrowser.Document%2A>、 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>、および<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Document%2A>。 処理、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser>コントロールは、新しいドキュメントの読み込みが終了した</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.DocumentCompleted>。       ナビゲーションが処理を開始する前に通知を受信することも、<xref:System.Windows.Forms.WebBrowser.Navigating>イベント</xref:System.Windows.Forms.WebBrowser.Navigating>。 たとえば、ユーザーがいない完全にフォームに入力、このイベントを処理して特定の条件が満たされていない場合は、ナビゲーションをキャンセルできます。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a handler for the Navigated event to implement an address bar for the <xref:System.Windows.Forms.WebBrowser> control. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`, a <xref:System.Windows.Forms.TextBox> control called `TextBoxAddress`, and a <xref:System.Windows.Forms.Button> control called `ButtonGo`. When you type a URL into the text box and press ENTER or click the **Go** button, the <xref:System.Windows.Forms.WebBrowser> control navigates to the URL specified. When you navigate by clicking a hyperlink, the text box automatically updates to display the current URL.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/cpp/e-system.windows.forms.w_8_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/visualbasic/e-system.windows.forms.w_8_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/csharp/e-system.windows.forms.w_8_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;
    return:
      type: System.Windows.Forms.WebBrowserNavigatedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Navigating
  id: Navigating
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Forms.WebBrowser.Navigating
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生する前に、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールが新しいドキュメントに移動します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>が設定されている、次のプロパティまたはメソッドが呼び出されるたびに新しいドキュメントにコントロールが移動:- <xref:System.Windows.Forms.WebBrowser.Url%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>- <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>- <xref:System.Windows.Forms.WebBrowser.Navigate%2A>- <xref:System.Windows.Forms.WebBrowser.GoBack%2A>- <xref:System.Windows.Forms.WebBrowser.GoForward%2A>- <xref:System.Windows.Forms.WebBrowser.GoHome%2A>- <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>、たとえば、ユーザーが完全に入力していない場合、フォームなど、特定の条件が満たされなかった場合は、ナビゲーションをキャンセルする Navigating イベントを処理することができます</xref:System.Windows.Forms.WebBrowser.GoSearch%2A></xref:System.Windows.Forms.WebBrowser.GoHome%2A></xref:System.Windows.Forms.WebBrowser.GoForward%2A></xref:System.Windows.Forms.WebBrowser.GoBack%2A></xref:System.Windows.Forms.WebBrowser.Navigate%2A></xref:System.Windows.Forms.WebBrowser.DocumentStream%2A></xref:System.Windows.Forms.WebBrowser.DocumentText%2A></xref:System.Windows.Forms.WebBrowser.Url%2A></xref:System.Windows.Forms.WebBrowser>。 ナビゲーションをキャンセルする、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs>するイベント ハンドラーに渡されたオブジェクト`true`</xref:System.Windows.Forms.WebBrowserNavigatingEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。 このオブジェクトを使用してを使用して新しいドキュメントの URL を取得することもできます、<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=fullName>プロパティ</xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=fullName>。 新しいドキュメントは、Web ページ フレームに表示されますが場合、は、を通じてフレームの名前を取得することができます、<xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=fullName>プロパティ</xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=fullName>。       処理、<xref:System.Windows.Forms.WebBrowser.Navigated>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser>コントロールがナビゲーションを終了して、新しい場所にあるドキュメントの読み込みを開始した</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Navigated>。 処理、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベント通知を受信するときに、<xref:System.Windows.Forms.WebBrowser>コントロールは、新しいドキュメントの読み込みが終了した</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.DocumentCompleted>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a handler for the Navigating event to cancel navigation when a Web page form has not been filled in. The <xref:System.Windows.Forms.WebBrowser.Document%2A> property is used to determine whether the form input field contains a value.  \n  \n This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and that your form class has a <xref:System.Runtime.InteropServices.ComVisibleAttribute> making it accessible to COM.  \n  \n For a complete code example that you can paste the following code into, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebBrowserMisc#30](~/add/codesnippet/csharp/e-system.windows.forms.w_3_1.cs)]\n [!code-vb[WebBrowserMisc#30](~/add/codesnippet/visualbasic/e-system.windows.forms.w_3_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;
    return:
      type: System.Windows.Forms.WebBrowserNavigatingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.NewWindow
  id: NewWindow
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: NewWindow
  nameWithType: WebBrowser.NewWindow
  fullName: System.Windows.Forms.WebBrowser.NewWindow
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいブラウザー ウィンドウが開かれる前に発生します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールが別のブラウザー ウィンドウを開くときの適切なオーバー ロード、<xref:System.Windows.Forms.WebBrowser.Navigate%2A>メソッドが呼び出されるか、ユーザーがクリックしたとき、**新しいウィンドウで開く**ハイパーリンクにマウス ポインターを移動すると、ブラウザーのショートカット メニューのオプション</xref:System.Windows.Forms.WebBrowser.Navigate%2A></xref:System.Windows.Forms.WebBrowser>。 設定して、ショートカット メニューを無効にすることができます、<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>プロパティを false にします</xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>。       NewWindow イベントは、新しいブラウザー ウィンドウが開かれる前に発生します。 ウィンドウが特定の条件が満たされていないときに開くようにするのには、このイベントを処理できます。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the NewWindow event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.WebBrowser> named `WebBrowser1`. Then ensure that the event handler is associated with the NewWindow event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#651](~/add/codesnippet/csharp/e-system.windows.forms.w_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#651](~/add/codesnippet/visualbasic/e-system.windows.forms.w_7_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler NewWindow;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ObjectForScripting
  id: ObjectForScripting
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Forms.WebBrowser.ObjectForScripting
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定のスクリプトに表示される Web ページに含まれているコードからアクセスできるオブジェクト、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "によってホストされる Web ページ間の通信を有効にするこのプロパティを使用して、<xref:System.Windows.Forms.WebBrowser>コントロールとアプリケーションを含む、<xref:System.Windows.Forms.WebBrowser>コントロール</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser>。 このプロパティにより、クライアント アプリケーション コードとダイナミック HTML (DHTML) コードを統合できます。 このプロパティは Web ページのスクリプトとして指定されたオブジェクト、`window.external`ホスト アクセス用の組み込み DOM オブジェクトであるオブジェクト。       COM から参照できるオブジェクトとするパブリック プロパティとメソッドのスクリプト コードを使用できるこのプロパティを設定することができます。 <xref:System.Runtime.InteropServices.ComVisibleAttribute>。</xref:System.Runtime.InteropServices.ComVisibleAttribute>マークすることによって COM 参照可能クラスを行うことができます。       クライアント アプリケーション コードから Web ページで定義された関数を呼び出すを使用して、<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=fullName>のメソッド、<xref:System.Windows.Forms.HtmlDocument>オブジェクトから取得することができます、<xref:System.Windows.Forms.WebBrowser.Document%2A>プロパティ</xref:System.Windows.Forms.WebBrowser.Document%2A></xref:System.Windows.Forms.HtmlDocument></xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=fullName>。"
  example:
  - "The following code example demonstrates how to use the ObjectForScripting property. In the example, the ObjectForScripting property is set to the current form.  \n  \n [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/add/codesnippet/visualbasic/p-system.windows.forms.w_2_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/add/codesnippet/csharp/p-system.windows.forms.w_2_1.cs)]"
  syntax:
    content: public object ObjectForScripting { get; set; }
    return:
      type: System.Object
      description: "スクリプト コードから使用できるようにするオブジェクト。"
  overload: System.Windows.Forms.WebBrowser.ObjectForScripting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "このプロパティを設定するときに指定した値は、パブリックでない型のインスタンスです。       または、このプロパティを設定するときに指定した値が COM 表示されていない型のインスタンス。 詳細については、次を参照してください。 &lt;xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)
  id: OnCanGoBackChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnCanGoBackChanged(EventArgs)
  nameWithType: WebBrowser.OnCanGoBackChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnCanGoBackChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.CanGoBackChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnCanGoBackChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnCanGoBackChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnCanGoBackChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)
  id: OnCanGoForwardChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnCanGoForwardChanged(EventArgs)
  nameWithType: WebBrowser.OnCanGoForwardChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.CanGoForwardChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnCanGoForwardChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnCanGoForwardChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)
  id: OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
  nameWithType: WebBrowser.OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.DocumentCompleted&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnDocumentCompleted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.WebBrowserDocumentCompletedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.WebBrowserDocumentCompletedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.WebBrowser.OnDocumentCompleted*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)
  id: OnDocumentTitleChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnDocumentTitleChanged(EventArgs)
  nameWithType: WebBrowser.OnDocumentTitleChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.DocumentTitleChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnDocumentTitleChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnDocumentTitleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)
  id: OnEncryptionLevelChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnEncryptionLevelChanged(EventArgs)
  nameWithType: WebBrowser.OnEncryptionLevelChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.EncryptionLevelChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnEncryptionLevelChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnEncryptionLevelChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)
  id: OnFileDownload(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnFileDownload(EventArgs)
  nameWithType: WebBrowser.OnFileDownload(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnFileDownload(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.FileDownload&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnFileDownload メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnFileDownload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>イベント データを格納します</xref:System.ComponentModel.CancelEventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnFileDownload*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)
  id: OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnNavigated(WebBrowserNavigatedEventArgs)
  nameWithType: WebBrowser.OnNavigated(WebBrowserNavigatedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNavigated(WebBrowserNavigatedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.Navigated&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnNavigated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.WebBrowserNavigatedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.WebBrowserNavigatedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.WebBrowser.OnNavigated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)
  id: OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnNavigating(WebBrowserNavigatingEventArgs)
  nameWithType: WebBrowser.OnNavigating(WebBrowserNavigatingEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNavigating(WebBrowserNavigatingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.Navigating&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnNavigating メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.WebBrowserNavigatingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.WebBrowserNavigatingEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.WebBrowser.OnNavigating*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)
  id: OnNewWindow(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnNewWindow(CancelEventArgs)
  nameWithType: WebBrowser.OnNewWindow(CancelEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNewWindow(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.NewWindow&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnNewWindow メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>イベント データを格納します</xref:System.ComponentModel.CancelEventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnNewWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)
  id: OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnProgressChanged(WebBrowserProgressChangedEventArgs)
  nameWithType: WebBrowser.OnProgressChanged(WebBrowserProgressChangedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnProgressChanged(WebBrowserProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.ProgressChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnProgressChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.WebBrowserProgressChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.WebBrowserProgressChangedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Windows.Forms.WebBrowser.OnProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)
  id: OnStatusTextChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: OnStatusTextChanged(EventArgs)
  nameWithType: WebBrowser.OnStatusTextChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnStatusTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.WebBrowser.StatusTextChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。       OnStatusTextChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnStatusTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.WebBrowser.OnStatusTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Padding
  id: Padding
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Padding
  nameWithType: WebBrowser.Padding
  fullName: System.Windows.Forms.WebBrowser.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このプロパティは、このコントロールの意味がありません。"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: <xref href="System.Windows.Forms.Padding"></xref>
  overload: System.Windows.Forms.WebBrowser.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: WebBrowser.PaddingChanged
  fullName: System.Windows.Forms.WebBrowser.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときの値、<xref:System.Windows.Forms.WebBrowser.Padding*>プロパティが変更された</xref:System.Windows.Forms.WebBrowser.Padding*>。"
  remarks: "値を設定または取得できますが、<xref:System.Windows.Forms.WebBrowser.Padding%2A>パディング プロパティはこのコントロールで、プロパティ、このイベントを処理することによって変更するには、応答します</xref:System.Windows.Forms.WebBrowser.Padding%2A>。"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Print
  id: Print
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Print()
  nameWithType: WebBrowser.Print()
  fullName: System.Windows.Forms.WebBrowser.Print()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されている文書を印刷する、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>現在の印刷とページの設定を使用して制御します。"
  remarks: "このメソッドは実装を使用することができます、**印刷**Internet explorer のようなボタンをクリックします。 このメソッドは、さらにユーザー入力を必要とせず、現在のドキュメントを印刷します。 表示する、**印刷**印刷を使用する前に ダイアログ ボックス、<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>。 表示する、**ページ セットアップ** ダイアログ ボックスは、指定のヘッダーとフッター値およびその他のページの設定を使用して、ユーザー、<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>。 表示する、**印刷プレビュー**ダイアログ ボックスで、使用、<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>。"
  example:
  - "The following code example demonstrates how to use the Print method to implement a **Print** button for the <xref:System.Windows.Forms.WebBrowser> control that is similar to the **Print** button in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonPrint`.  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#13](~/add/codesnippet/cpp/m-system.windows.forms.w_1_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#13](~/add/codesnippet/visualbasic/m-system.windows.forms.w_1_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#13](~/add/codesnippet/csharp/m-system.windows.forms.w_1_1.cs)]"
  syntax:
    content: public void Print ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.Print*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ProgressChanged
  id: ProgressChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ProgressChanged
  nameWithType: WebBrowser.ProgressChanged
  fullName: System.Windows.Forms.WebBrowser.ProgressChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロールが移動先となるドキュメントのダウンロードの進行状況に関する情報を更新します。"
  remarks: "このイベントのハンドラーを使用すると、Internet explorer のようなナビゲーション進行状況バーを実装します。 使用して、<xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=fullName>プロパティが正常にダウンロードされているバイト数を決定します</xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=fullName>。 使用して、<xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=fullName>をダウンロードするために使用できるバイト数の合計数を決定するプロパティ</xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=fullName>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ProgressChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.WebBrowser> named `WebBrowser1`. Then ensure that the event handler is associated with the ProgressChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#652](~/add/codesnippet/csharp/e-system.windows.forms.w_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#652](~/add/codesnippet/visualbasic/e-system.windows.forms.w_5_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;
    return:
      type: System.Windows.Forms.WebBrowserProgressChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ReadyState
  id: ReadyState
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ReadyState
  nameWithType: WebBrowser.ReadyState
  fullName: System.Windows.Forms.WebBrowser.ReadyState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在の状態を示す値を取得、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "ReadyState プロパティを使用して、特定の状態を取得する、<xref:System.Windows.Forms.WebBrowser>より多くの情報を必要がある時期を制御、<xref:System.Windows.Forms.WebBrowser.IsBusy%2A>プロパティを提供します</xref:System.Windows.Forms.WebBrowser.IsBusy%2A></xref:System.Windows.Forms.WebBrowser>。       ときに<xref:System.Windows.Forms.WebBrowser>コントロールがドキュメントを含まない、このプロパティの値が<xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName>.</xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowser> その他の値は、新しいドキュメントに移動したときに、コントロールの状態を示します。 これらの値を含める<xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName>、 <xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName>、 <xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName>、 <xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName></xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> </xref:System.Windows.Forms.WebBrowserReadyState?displayProperty=fullName> 。"
  syntax:
    content: public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }
    return:
      type: System.Windows.Forms.WebBrowserReadyState
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.WebBrowserReadyState&quot;> </xref>値。"
  overload: System.Windows.Forms.WebBrowser.ReadyState*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Refresh
  id: Refresh
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Forms.WebBrowser.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されているドキュメントを再読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>更新されたバージョンのサーバーをチェックして制御します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 更新メソッドの強制、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser>。 このメソッドは実装を使用することができます、**更新**Internet explorer のようなボタンをクリックします。      > [!NOTE] > ドキュメントの更新の現在のページでは、再読み込みため、 <xref:System.Windows.Forms.WebBrowser.Navigating>、 <xref:System.Windows.Forms.WebBrowser.Navigated>、および<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>更新メソッドを呼び出すと、イベントが発生しません</xref:System.Windows.Forms.WebBrowser.DocumentCompleted></xref:System.Windows.Forms.WebBrowser.Navigated></xref:System.Windows.Forms.WebBrowser.Navigating>。"
  example:
  - "The following code example demonstrates how to use the Refresh method to implement a **Refresh** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonRefresh`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#10](~/add/codesnippet/cpp/m-system.windows.forms.w_10_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#10](~/add/codesnippet/visualbasic/m-system.windows.forms.w_10_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#10](~/add/codesnippet/csharp/m-system.windows.forms.w_10_1.cs)]"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)
  id: Refresh(System.Windows.Forms.WebBrowserRefreshOption)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Refresh(WebBrowserRefreshOption)
  nameWithType: WebBrowser.Refresh(WebBrowserRefreshOption)
  fullName: System.Windows.Forms.WebBrowser.Refresh(WebBrowserRefreshOption)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在表示されているドキュメントを再読み込み、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>指定された更新オプションを使用して制御します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、最近アクセスした Web ページをローカル ハード_ディスク上のキャッシュに格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 <xref:System.Windows.Forms.WebBrowser.Refresh%2A>メソッド フォース、<xref:System.Windows.Forms.WebBrowser>コントロールを現在のページを再読み込みします</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。 再読み込みの種類によって異なります、<xref:System.Windows.Forms.WebBrowserRefreshOption>指定された値</xref:System.Windows.Forms.WebBrowserRefreshOption>。 呼び出す場合は、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>メソッドを<xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName>値、ドキュメントの最新バージョンをダウンロードします</xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。 使用する場合、 <xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName>、現在のドキュメントの有効期限が切れた場合にのみ、値、最新バージョンをダウンロードします</xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName>。 使用する場合、<xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName>値、サーバーは独自のキャッシュに格納されているドキュメントのコピーを送信します</xref:System.Windows.Forms.WebBrowserRefreshOption?displayProperty=fullName>。      > [!NOTE] > ドキュメントの更新の現在のページでは、再読み込みため、 <xref:System.Windows.Forms.WebBrowser.Navigating>、 <xref:System.Windows.Forms.WebBrowser.Navigated>、および<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>呼び出すときにイベントは発生しません、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>メソッド</xref:System.Windows.Forms.WebBrowser.Refresh%2A></xref:System.Windows.Forms.WebBrowser.DocumentCompleted></xref:System.Windows.Forms.WebBrowser.Navigated></xref:System.Windows.Forms.WebBrowser.Navigating>。"
  syntax:
    content: public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);
    parameters:
    - id: opt
      type: System.Windows.Forms.WebBrowserRefreshOption
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.WebBrowserRefreshOption&quot;> </xref>値。"
  overload: System.Windows.Forms.WebBrowser.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed
  id: ScriptErrorsSuppressed
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ScriptErrorsSuppressed
  nameWithType: WebBrowser.ScriptErrorsSuppressed
  fullName: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>スクリプト エラー メッセージなどのダイアログ ボックスが表示されます。"
  remarks: "このプロパティを設定`false`で表示する Web ページのデバッグ、<xref:System.Windows.Forms.WebBrowser>コントロール</xref:System.Windows.Forms.WebBrowser>。 これは、機能は、コントロールを使用してアプリケーションに Web ベースのコントロールとスクリプト コードを追加するときに便利です。 汎用のブラウザーとしてコントロールを使用する場合に小さい便利です。 終了したら、このプロパティを設定、アプリケーションのデバッグ`true`スクリプト エラーのエラーを抑制します。      > [!NOTE] > に設定されているときに ScriptErrorsSuppressed `true`、<xref:System.Windows.Forms.WebBrowser>コントロールは、基になる ActiveX コントロールから、スクリプトのエラーだけでなく、すべてのダイアログ ボックスを非表示にします</xref:System.Windows.Forms.WebBrowser>。 場合によっては、ブラウザーのセキュリティ設定とユーザーのログインに使用されるなどのダイアログ ボックスを表示するときにスクリプトのエラーを抑制する必要があります。 この例では、&quot; éý &quot; ScriptErrorsSuppressed`false`のハンドラーでスクリプトのエラーを抑制して、<xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName>イベント</xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName>。 詳細については、このトピックのコード例を参照してください。"
  example:
  - "The following code example demonstrates how to suppress script errors without suppressing other dialog boxes. In the example, the ScriptErrorsSuppressed property is set to `false` to ensure that dialog boxes are displayed. A handler for the <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=fullName> event suppresses the error. This event is only accessible when a document is finished loading, so the handler is attached in a <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event handler.  \n  \n [!code-cs[WebBrowserMisc#40](~/add/codesnippet/csharp/p-system.windows.forms.w_12_1.cs)]\n [!code-vb[WebBrowserMisc#40](~/add/codesnippet/visualbasic/p-system.windows.forms.w_12_1.vb)]"
  syntax:
    content: public bool ScriptErrorsSuppressed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがそのダイアログ ボックスが表示されない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 [IWebBrowser2 インターフェイス](http://go.microsoft.com/fwlink/?LinkId=151479)基になる ActiveX から取得できませんでした[WebBrowser コントロール](http://go.microsoft.com/fwlink/?LinkId=151478)です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ScrollBarsEnabled
  id: ScrollBarsEnabled
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ScrollBarsEnabled
  nameWithType: WebBrowser.ScrollBarsEnabled
  fullName: System.Windows.Forms.WebBrowser.ScrollBarsEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定にスクロール バーを表示するかどうかを示す値、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティの値が場合`true`ページのコンテンツはブラウザーのウィンドウよりも大きい場合にのみ、スクロール バーが表示されます。"
  syntax:
    content: public bool ScrollBarsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールのスクロール バーが表示されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は true です。"
  overload: System.Windows.Forms.WebBrowser.ScrollBarsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ShowPageSetupDialog
  id: ShowPageSetupDialog
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ShowPageSetupDialog()
  nameWithType: WebBrowser.ShowPageSetupDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPageSetupDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Internet Explorer が開き**ページ セットアップ** ダイアログ ボックス。"
  remarks: "このメソッドは実装を使用することができます、**ページ セットアップ**メニュー項目には、Internet Explorer のような**ファイル**メニュー。 このメソッドは、表示、**ページ セットアップ** ダイアログ ボックスは、ヘッダーとページ フッターの値と印刷前に他のページの設定を指定できるように、します。 現在のドキュメントを印刷するには、使用、<xref:System.Windows.Forms.WebBrowser.Print%2A>メソッドまたは<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A></xref:System.Windows.Forms.WebBrowser.Print%2A>。 表示する、**印刷プレビュー**ダイアログ ボックスで、使用、<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>。"
  example:
  - "The following code example demonstrates how to use the ShowPageSetupDialog method to implement a **Page Setup** menu option that is similar to the one on the Internet Explorer **File** menu. This example requires that your form contains a menu with a menu item called `MenuItemFilePageSetup` and a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#2](~/add/codesnippet/cpp/m-system.windows.forms.w_7_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#2](~/add/codesnippet/visualbasic/m-system.windows.forms.w_7_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#2](~/add/codesnippet/csharp/m-system.windows.forms.w_7_1.cs)]"
  syntax:
    content: public void ShowPageSetupDialog ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.ShowPageSetupDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ShowPrintDialog
  id: ShowPrintDialog
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ShowPrintDialog()
  nameWithType: WebBrowser.ShowPrintDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPrintDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Internet Explorer が開き**印刷**ダイアログ ボックスはヘッダーとページ フッターの値を設定します。"
  remarks: "このメソッドは実装を使用することができます、**印刷**メニュー項目には、Internet Explorer のような**ファイル**メニュー。 このメソッドは、表示、**印刷**ダイアログ ボックスで、印刷前に印刷設定の変更、ユーザーを許可します。 ユーザーに知らせる印刷前にページの設定を指定して、使用して、<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>。 表示する、**印刷プレビュー**ダイアログ ボックスで、使用、<xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A>。"
  example:
  - "The following code example demonstrates how to use the ShowPrintDialog method to implement a **Print** menu option that is similar to the one on the Internet Explorer **File** menu. This example requires that your form contains a menu with a menu item called `MenuItemFilePrint` and a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1.`  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#3](~/add/codesnippet/cpp/m-system.windows.forms.w_14_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#3](~/add/codesnippet/visualbasic/m-system.windows.forms.w_14_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#3](~/add/codesnippet/csharp/m-system.windows.forms.w_14_1.cs)]"
  syntax:
    content: public void ShowPrintDialog ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.ShowPrintDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog
  id: ShowPrintPreviewDialog
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ShowPrintPreviewDialog()
  nameWithType: WebBrowser.ShowPrintPreviewDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Internet Explorer が開き**印刷プレビュー**  ダイアログ ボックス。"
  remarks: "このメソッドは実装を使用することができます、**印刷プレビュー**メニュー項目には、Internet Explorer のような**ファイル**メニュー。 このメソッドは、表示、**印刷プレビュー**ダイアログ ボックスで、現在のドキュメントがどのように表示されるかユーザーが印刷される場合。 ユーザーに知らせる印刷前にページの設定を指定して、使用して、<xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A>。 現在のドキュメントを印刷するには、使用、<xref:System.Windows.Forms.WebBrowser.Print%2A>メソッドまたは<xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A>メソッド</xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A></xref:System.Windows.Forms.WebBrowser.Print%2A>。"
  example:
  - "The following code example demonstrates how to use the ShowPrintPreviewDialog method to implement a **Print Preview** menu option similar to the one on the Internet Explorer **File** menu. This example requires that your form contains a menu with a menu item called `MenuItemFilePrintPreview`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#4](~/add/codesnippet/cpp/m-system.windows.forms.w_0_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#4](~/add/codesnippet/visualbasic/m-system.windows.forms.w_0_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#4](~/add/codesnippet/csharp/m-system.windows.forms.w_0_1.cs)]"
  syntax:
    content: public void ShowPrintPreviewDialog ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ShowPropertiesDialog
  id: ShowPropertiesDialog
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ShowPropertiesDialog()
  nameWithType: WebBrowser.ShowPropertiesDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPropertiesDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Internet Explorer が開き**プロパティ**現在のドキュメントのダイアログ ボックス。"
  remarks: "このメソッドは実装を使用することができます、**プロパティ**メニュー オプションには、Internet Explorer のような**ファイル**メニュー。 このメソッドは、表示、**プロパティ** ダイアログ ボックスは、型、URL、サイズ、作成と変更の日付などの現在のドキュメントに関する情報を格納します。"
  example:
  - "The following code example demonstrates how to use the ShowPropertiesDialog method to implement a **Properties** menu option that is similar to the one on the Internet Explorer **File** menu. This example requires that your form contains a menu with a menu item called `MenuItemFileProperties` and a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1.`  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#5](~/add/codesnippet/cpp/m-system.windows.forms.w_8_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#5](~/add/codesnippet/visualbasic/m-system.windows.forms.w_8_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#5](~/add/codesnippet/csharp/m-system.windows.forms.w_8_1.cs)]"
  syntax:
    content: public void ShowPropertiesDialog ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.ShowPropertiesDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.ShowSaveAsDialog
  id: ShowSaveAsDialog
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: ShowSaveAsDialog()
  nameWithType: WebBrowser.ShowSaveAsDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowSaveAsDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Internet Explorer が開き**Web ページの保存** ダイアログ ボックスまたは**保存**HTML ページではない場合は、ホストされているドキュメントのダイアログ ボックス。"
  remarks: "このメソッドは実装を使用することができます、**名前を付けて保存**メニュー項目を Internet Explorer のように**ファイル**メニュー。 このメソッドが呼び出されたときに表示されるダイアログ ボックスは、現在読み込まれているドキュメントの種類によって異なります。      > [!NOTE] > このメソッドにより、ユーザーが最初に読み込まれたドキュメントの内容のみを保存します。 ドキュメント内に行われた変更を実行時間、<xref:System.Windows.Forms.WebBrowser.Document%2A>プロパティは保持されません</xref:System.Windows.Forms.WebBrowser.Document%2A>。 実行時の変更を取得する方法の詳細については、次を参照してください。[する方法: マネージ HTML ドキュメント オブジェクト モデル内の HTML ソースへのアクセス](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the ShowSaveAsDialog method to implement a **Save As** menu option that is similar to the one on the Internet Explorer **File** menu. This example requires that your form contains a menu with a menu item called `MenuItemFileSaveAs` and a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`.  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#1](~/add/codesnippet/cpp/m-system.windows.forms.w_2_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#1](~/add/codesnippet/visualbasic/m-system.windows.forms.w_2_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#1](~/add/codesnippet/csharp/m-system.windows.forms.w_2_1.cs)]"
  syntax:
    content: public void ShowSaveAsDialog ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.ShowSaveAsDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.StatusText
  id: StatusText
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: StatusText
  nameWithType: WebBrowser.StatusText
  fullName: System.Windows.Forms.WebBrowser.StatusText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ステータス テキストを取得、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティを使用するには、<xref:System.Windows.Forms.WebBrowser>ステータス バー内のコントロール</xref:System.Windows.Forms.WebBrowser>の状態を表示するには 状態テキストは、マウス ポインターが現在読み込み中のドキュメントの URL とその上に置いたときに、ハイパーリンクの URL などの情報を含むメッセージです。 処理、<xref:System.Windows.Forms.WebBrowser.StatusTextChanged>バー StatusText プロパティの値が変更されたときの状態を更新するイベントです</xref:System.Windows.Forms.WebBrowser.StatusTextChanged>。"
  example:
  - "The following code example demonstrates how to use the StatusText property to implement a status bar for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.StatusBar> control called `StatusBar1`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/cpp/p-system.windows.forms.w_6_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/visualbasic/p-system.windows.forms.w_6_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/csharp/p-system.windows.forms.w_6_1.cs)]"
  syntax:
    content: public virtual string StatusText { get; }
    return:
      type: System.String
      description: "ステータス テキスト。"
  overload: System.Windows.Forms.WebBrowser.StatusText*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.StatusTextChanged
  id: StatusTextChanged
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: StatusTextChanged
  nameWithType: WebBrowser.StatusTextChanged
  fullName: System.Windows.Forms.WebBrowser.StatusTextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生したときに、<xref:System.Windows.Forms.WebBrowser.StatusText*>プロパティ値が変更された</xref:System.Windows.Forms.WebBrowser.StatusText*>。"
  remarks: "バーの場合、状態を更新するには、このイベント ハンドルの値、<xref:System.Windows.Forms.WebBrowser.StatusText%2A>プロパティが変更された</xref:System.Windows.Forms.WebBrowser.StatusText%2A>。       イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a handler for the StatusTextChanged event to implement a status bar for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.StatusBar> control called `StatusBar1`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/cpp/e-system.windows.forms.w_2_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/visualbasic/e-system.windows.forms.w_2_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#14](~/add/codesnippet/csharp/e-system.windows.forms.w_2_1.cs)]"
  syntax:
    content: public event EventHandler StatusTextChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Stop
  id: Stop
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Stop()
  nameWithType: WebBrowser.Stop()
  fullName: System.Windows.Forms.WebBrowser.Stop()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "保留中のナビゲーションをキャンセルして、バック グラウンド サウンドやアニメーションなどのすべての動的なページ要素を停止します。"
  remarks: "Stop メソッドを実装に使用できる、**停止**Internet explorer のようなボタンをクリックします。"
  example:
  - "The following code example demonstrates how to use the Stop method to implement a **Stop** button for the <xref:System.Windows.Forms.WebBrowser> control similar to the one in Internet Explorer. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1` and a <xref:System.Windows.Forms.Button> control called `ButtonStop`.  \n  \n For the complete code example, see [How to: Add Web Browser Capabilities to a Windows Forms Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#9](~/add/codesnippet/cpp/m-system.windows.forms.w_9_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#9](~/add/codesnippet/visualbasic/m-system.windows.forms.w_9_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#9](~/add/codesnippet/csharp/m-system.windows.forms.w_9_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Forms.WebBrowser.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Url
  id: Url
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Url
  nameWithType: WebBrowser.Url
  fullName: System.Windows.Forms.WebBrowser.Url
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または現在のドキュメントの URL を設定します。"
  remarks: "このプロパティは設定を呼び出すこと、<xref:System.Windows.Forms.WebBrowser.Navigate%2A>メソッドと、指定された URL を渡します</xref:System.Windows.Forms.WebBrowser.Navigate%2A>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、Web ページがブラウザー セッション中にアクセスしたすべての履歴リストを保持します</xref:System.Windows.Forms.WebBrowser>。 Url プロパティを設定すると、<xref:System.Windows.Forms.WebBrowser>コントロールが指定された URL に移動し、履歴リストの末尾に追加します</xref:System.Windows.Forms.WebBrowser>。       <xref:System.Windows.Forms.WebBrowser>コントロールは、ローカル ハード_ディスク上のキャッシュに最近アクセスしたサイトから Web ページを格納します</xref:System.Windows.Forms.WebBrowser>。 各ページには、どのくらいの時間は変化しません、キャッシュを示す有効期限を指定できます。 コントロールがページに移動する、ときに、ページを再度ダウンロードするのではなく、いずれかがある場合、キャッシュされたバージョンを表示して時間を保存します。 使用して、<xref:System.Windows.Forms.WebBrowser.Refresh%2A>強制する方法、<xref:System.Windows.Forms.WebBrowser>コントロールが、最新バージョンを表示することを確認、ダウンロードして、現在のページを再読み込みを制御します</xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser.Refresh%2A>。      > [!NOTE] > 別のドキュメントが要求されている場合でも、このプロパティが現在のドキュメントの URL を格納します。 このプロパティの値を設定して、すぐに再度取得する場合は、取得した値が場合に設定された値よりも異なる可能性があります、<xref:System.Windows.Forms.WebBrowser>コントロールは、この新しいドキュメントの読み込みに時間</xref:System.Windows.Forms.WebBrowser>。 新しい値を取得することができます、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベント ハンドラー</xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。"
  example:
  - "The following code example demonstrates how to use the Url property to implement an address bar for the <xref:System.Windows.Forms.WebBrowser> control. This example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control called `webBrowser1`, a <xref:System.Windows.Forms.TextBox> control called `TextBoxAddress`, and a <xref:System.Windows.Forms.Button> control called `ButtonGo`. When you type a URL into the text box and press ENTER or click the **Go** button, the <xref:System.Windows.Forms.WebBrowser> control navigates to the URL specified. When you navigate by clicking a hyperlink, the text box automatically updates to display the current URL.  \n  \n [!code-cpp[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/cpp/p-system.windows.forms.w_5_1.cpp)]\n [!code-vb[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/visualbasic/p-system.windows.forms.w_5_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser#6](~/add/codesnippet/csharp/p-system.windows.forms.w_5_1.cs)]"
  syntax:
    content: public Uri Url { get; set; }
    return:
      type: System.Uri
      description: "A<xref:System.Uri>現在のドキュメントの URL を表すします</xref:System.Uri>。"
  overload: System.Windows.Forms.WebBrowser.Url*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "これは、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>インスタンスが有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "実装への参照、 <xref uid=&quot;langword_csharp_IWebBrowser2&quot; name=&quot;IWebBrowser2&quot; href=&quot;&quot;> </xref>基になる ActiveX からインターフェイスを取得できませんでした<xref uid=&quot;langword_csharp_WebBrowser&quot; name=&quot;WebBrowser&quot; href=&quot;&quot;></xref>コントロール。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "このプロパティを設定する場合は、指定された値は、絶対 URI ではありません。 詳細については、次を参照してください。 &lt;xref:System.Uri.IsAbsoluteUri%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.Version
  id: Version
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: Version
  nameWithType: WebBrowser.Version
  fullName: System.Windows.Forms.WebBrowser.Version
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "インストールされている Internet Explorer のバージョンを取得します。"
  remarks: "<xref:System.Windows.Forms.WebBrowser>コントロールは、Internet Explorer と共にインストールされるコンポーネントを扱うマネージ ラッパー</xref:System.Windows.Forms.WebBrowser> 。 このプロパティを使用して、Internet Explorer のバージョンのインストールを決定します。 これは、機能は、アプリケーションが特定のバージョンにのみ存在する Internet Explorer の機能を使用する場合に便利です。 必要なバージョンがローカル コンピューターに存在しない場合は、代替機能を提供またはアップグレードするように求めることがことができます。"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A<xref:System.Version>インストールされている Internet Explorer のバージョンを表すオブジェクト</xref:System.Version>。"
  overload: System.Windows.Forms.WebBrowser.Version*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled
  id: WebBrowserShortcutsEnabled
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: WebBrowserShortcutsEnabled
  nameWithType: WebBrowser.WebBrowserShortcutsEnabled
  fullName: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または内でキーボード ショートカットを有効にするかどうかを示す値を設定、 <xref href=&quot;System.Windows.Forms.WebBrowser&quot;> </xref>コントロール。"
  remarks: "このプロパティをユーザーに Internet Explorer のキーボード ショートカットを使用するを防止する場合は false に設定、<xref:System.Windows.Forms.WebBrowser>コントロール</xref:System.Windows.Forms.WebBrowser>。 これは、使用しているという事実を非表示にする場合に便利です、 <xref:System.Windows.Forms.WebBrowser>DHTML ベースのコントロールを Windows フォーム コントロールをシームレスに結合するユーザー インターフェイスを作成する場合などのコントロールです</xref:System.Windows.Forms.WebBrowser>。       設定してその他の標準的なブラウザーの機能を無効にすることができます、<xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>と<xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A>プロパティ`false`</xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A></xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A>。"
  example:
  - "The following code example demonstrates how to use the WebBrowserShortcutsEnabled property.  \n  \n [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/add/codesnippet/visualbasic/p-system.windows.forms.w_1_1.vb)]\n [!code-cs[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/add/codesnippet/csharp/p-system.windows.forms.w_1_1.cs)]"
  syntax:
    content: public bool WebBrowserShortcutsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロール内でのキーボード ショートカットが有効になっている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.WebBrowser
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: WebBrowser.WndProc(Message)
  fullName: System.Windows.Forms.WebBrowser.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows メッセージを処理します。"
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>を処理します。"
  overload: System.Windows.Forms.WebBrowser.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.WebBrowserBase
  isExternal: false
  name: System.Windows.Forms.WebBrowserBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.WebBrowser.#ctor
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Forms.WebBrowser.WebBrowser()
- uid: System.Windows.Forms.WebBrowser.AllowNavigation
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AllowNavigation
  nameWithType: WebBrowser.AllowNavigation
  fullName: System.Windows.Forms.WebBrowser.AllowNavigation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AllowWebBrowserDrop
  nameWithType: WebBrowser.AllowWebBrowserDrop
  fullName: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop
- uid: System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AttachInterfaces(Object)
  nameWithType: WebBrowser.AttachInterfaces(Object)
  fullName: System.Windows.Forms.WebBrowser.AttachInterfaces(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.WebBrowser.CanGoBack
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Forms.WebBrowser.CanGoBack
- uid: System.Windows.Forms.WebBrowser.CanGoBackChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoBackChanged
  nameWithType: WebBrowser.CanGoBackChanged
  fullName: System.Windows.Forms.WebBrowser.CanGoBackChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.WebBrowser.CanGoForward
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Forms.WebBrowser.CanGoForward
- uid: System.Windows.Forms.WebBrowser.CanGoForwardChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoForwardChanged
  nameWithType: WebBrowser.CanGoForwardChanged
  fullName: System.Windows.Forms.WebBrowser.CanGoForwardChanged
- uid: System.Windows.Forms.WebBrowser.CreateSink
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CreateSink()
  nameWithType: WebBrowser.CreateSink()
  fullName: System.Windows.Forms.WebBrowser.CreateSink()
- uid: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CreateWebBrowserSiteBase()
  nameWithType: WebBrowser.CreateWebBrowserSiteBase()
  fullName: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase()
- uid: System.Windows.Forms.WebBrowserSiteBase
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserSiteBase
  nameWithType: WebBrowserSiteBase
  fullName: System.Windows.Forms.WebBrowserSiteBase
- uid: System.Windows.Forms.WebBrowser.DefaultSize
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DefaultSize
  nameWithType: WebBrowser.DefaultSize
  fullName: System.Windows.Forms.WebBrowser.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.WebBrowser.DetachInterfaces
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DetachInterfaces()
  nameWithType: WebBrowser.DetachInterfaces()
  fullName: System.Windows.Forms.WebBrowser.DetachInterfaces()
- uid: System.Windows.Forms.WebBrowser.DetachSink
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DetachSink()
  nameWithType: WebBrowser.DetachSink()
  fullName: System.Windows.Forms.WebBrowser.DetachSink()
- uid: System.Windows.Forms.WebBrowser.Dispose(System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: WebBrowser.Dispose(Boolean)
  fullName: System.Windows.Forms.WebBrowser.Dispose(Boolean)
- uid: System.Windows.Forms.WebBrowser.Document
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Forms.WebBrowser.Document
- uid: System.Windows.Forms.HtmlDocument
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: System.Windows.Forms.HtmlDocument
- uid: System.Windows.Forms.WebBrowser.DocumentCompleted
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentCompleted
  nameWithType: WebBrowser.DocumentCompleted
  fullName: System.Windows.Forms.WebBrowser.DocumentCompleted
- uid: System.Windows.Forms.WebBrowserDocumentCompletedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserDocumentCompletedEventHandler
  nameWithType: WebBrowserDocumentCompletedEventHandler
  fullName: System.Windows.Forms.WebBrowserDocumentCompletedEventHandler
- uid: System.Windows.Forms.WebBrowser.DocumentStream
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentStream
  nameWithType: WebBrowser.DocumentStream
  fullName: System.Windows.Forms.WebBrowser.DocumentStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Forms.WebBrowser.DocumentText
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentText
  nameWithType: WebBrowser.DocumentText
  fullName: System.Windows.Forms.WebBrowser.DocumentText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.WebBrowser.DocumentTitle
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentTitle
  nameWithType: WebBrowser.DocumentTitle
  fullName: System.Windows.Forms.WebBrowser.DocumentTitle
- uid: System.Windows.Forms.WebBrowser.DocumentTitleChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentTitleChanged
  nameWithType: WebBrowser.DocumentTitleChanged
  fullName: System.Windows.Forms.WebBrowser.DocumentTitleChanged
- uid: System.Windows.Forms.WebBrowser.DocumentType
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentType
  nameWithType: WebBrowser.DocumentType
  fullName: System.Windows.Forms.WebBrowser.DocumentType
- uid: System.Windows.Forms.WebBrowser.EncryptionLevel
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: EncryptionLevel
  nameWithType: WebBrowser.EncryptionLevel
  fullName: System.Windows.Forms.WebBrowser.EncryptionLevel
- uid: System.Windows.Forms.WebBrowserEncryptionLevel
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserEncryptionLevel
  nameWithType: WebBrowserEncryptionLevel
  fullName: System.Windows.Forms.WebBrowserEncryptionLevel
- uid: System.Windows.Forms.WebBrowser.EncryptionLevelChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: EncryptionLevelChanged
  nameWithType: WebBrowser.EncryptionLevelChanged
  fullName: System.Windows.Forms.WebBrowser.EncryptionLevelChanged
- uid: System.Windows.Forms.WebBrowser.FileDownload
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: FileDownload
  nameWithType: WebBrowser.FileDownload
  fullName: System.Windows.Forms.WebBrowser.FileDownload
- uid: System.Windows.Forms.WebBrowser.Focused
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Focused
  nameWithType: WebBrowser.Focused
  fullName: System.Windows.Forms.WebBrowser.Focused
- uid: System.Windows.Forms.WebBrowser.GoBack
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Forms.WebBrowser.GoBack()
- uid: System.Windows.Forms.WebBrowser.GoForward
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Forms.WebBrowser.GoForward()
- uid: System.Windows.Forms.WebBrowser.GoHome
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoHome()
  nameWithType: WebBrowser.GoHome()
  fullName: System.Windows.Forms.WebBrowser.GoHome()
- uid: System.Windows.Forms.WebBrowser.GoSearch
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoSearch()
  nameWithType: WebBrowser.GoSearch()
  fullName: System.Windows.Forms.WebBrowser.GoSearch()
- uid: System.Windows.Forms.WebBrowser.IsBusy
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsBusy
  nameWithType: WebBrowser.IsBusy
  fullName: System.Windows.Forms.WebBrowser.IsBusy
- uid: System.Windows.Forms.WebBrowser.IsOffline
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsOffline
  nameWithType: WebBrowser.IsOffline
  fullName: System.Windows.Forms.WebBrowser.IsOffline
- uid: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsWebBrowserContextMenuEnabled
  nameWithType: WebBrowser.IsWebBrowserContextMenuEnabled
  fullName: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String)
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(String,Boolean)
  nameWithType: WebBrowser.Navigate(String,Boolean)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,Boolean)
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(String,String)
  nameWithType: WebBrowser.Navigate(String,String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,String)
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(Uri,Boolean)
  nameWithType: WebBrowser.Navigate(Uri,Boolean)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,Boolean)
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(Uri,String)
  nameWithType: WebBrowser.Navigate(Uri,String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,String)
- uid: System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(String,String,Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Forms.WebBrowser.Navigate(Uri,String,Byte[],String)
- uid: System.Windows.Forms.WebBrowser.Navigated
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Forms.WebBrowser.Navigated
- uid: System.Windows.Forms.WebBrowserNavigatedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserNavigatedEventHandler
  nameWithType: WebBrowserNavigatedEventHandler
  fullName: System.Windows.Forms.WebBrowserNavigatedEventHandler
- uid: System.Windows.Forms.WebBrowser.Navigating
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Forms.WebBrowser.Navigating
- uid: System.Windows.Forms.WebBrowserNavigatingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserNavigatingEventHandler
  nameWithType: WebBrowserNavigatingEventHandler
  fullName: System.Windows.Forms.WebBrowserNavigatingEventHandler
- uid: System.Windows.Forms.WebBrowser.NewWindow
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: NewWindow
  nameWithType: WebBrowser.NewWindow
  fullName: System.Windows.Forms.WebBrowser.NewWindow
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.WebBrowser.ObjectForScripting
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Forms.WebBrowser.ObjectForScripting
- uid: System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnCanGoBackChanged(EventArgs)
  nameWithType: WebBrowser.OnCanGoBackChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnCanGoBackChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnCanGoForwardChanged(EventArgs)
  nameWithType: WebBrowser.OnCanGoForwardChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(EventArgs)
- uid: System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
  nameWithType: WebBrowser.OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnDocumentCompleted(WebBrowserDocumentCompletedEventArgs)
- uid: System.Windows.Forms.WebBrowserDocumentCompletedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserDocumentCompletedEventArgs
  nameWithType: WebBrowserDocumentCompletedEventArgs
  fullName: System.Windows.Forms.WebBrowserDocumentCompletedEventArgs
- uid: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnDocumentTitleChanged(EventArgs)
  nameWithType: WebBrowser.OnDocumentTitleChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(EventArgs)
- uid: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnEncryptionLevelChanged(EventArgs)
  nameWithType: WebBrowser.OnEncryptionLevelChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(EventArgs)
- uid: System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnFileDownload(EventArgs)
  nameWithType: WebBrowser.OnFileDownload(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnFileDownload(EventArgs)
- uid: System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNavigated(WebBrowserNavigatedEventArgs)
  nameWithType: WebBrowser.OnNavigated(WebBrowserNavigatedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNavigated(WebBrowserNavigatedEventArgs)
- uid: System.Windows.Forms.WebBrowserNavigatedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserNavigatedEventArgs
  nameWithType: WebBrowserNavigatedEventArgs
  fullName: System.Windows.Forms.WebBrowserNavigatedEventArgs
- uid: System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNavigating(WebBrowserNavigatingEventArgs)
  nameWithType: WebBrowser.OnNavigating(WebBrowserNavigatingEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNavigating(WebBrowserNavigatingEventArgs)
- uid: System.Windows.Forms.WebBrowserNavigatingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserNavigatingEventArgs
  nameWithType: WebBrowserNavigatingEventArgs
  fullName: System.Windows.Forms.WebBrowserNavigatingEventArgs
- uid: System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNewWindow(CancelEventArgs)
  nameWithType: WebBrowser.OnNewWindow(CancelEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnNewWindow(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnProgressChanged(WebBrowserProgressChangedEventArgs)
  nameWithType: WebBrowser.OnProgressChanged(WebBrowserProgressChangedEventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnProgressChanged(WebBrowserProgressChangedEventArgs)
- uid: System.Windows.Forms.WebBrowserProgressChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserProgressChangedEventArgs
  nameWithType: WebBrowserProgressChangedEventArgs
  fullName: System.Windows.Forms.WebBrowserProgressChangedEventArgs
- uid: System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnStatusTextChanged(EventArgs)
  nameWithType: WebBrowser.OnStatusTextChanged(EventArgs)
  fullName: System.Windows.Forms.WebBrowser.OnStatusTextChanged(EventArgs)
- uid: System.Windows.Forms.WebBrowser.Padding
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Padding
  nameWithType: WebBrowser.Padding
  fullName: System.Windows.Forms.WebBrowser.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.WebBrowser.PaddingChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: PaddingChanged
  nameWithType: WebBrowser.PaddingChanged
  fullName: System.Windows.Forms.WebBrowser.PaddingChanged
- uid: System.Windows.Forms.WebBrowser.Print
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Print()
  nameWithType: WebBrowser.Print()
  fullName: System.Windows.Forms.WebBrowser.Print()
- uid: System.Windows.Forms.WebBrowser.ProgressChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ProgressChanged
  nameWithType: WebBrowser.ProgressChanged
  fullName: System.Windows.Forms.WebBrowser.ProgressChanged
- uid: System.Windows.Forms.WebBrowserProgressChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserProgressChangedEventHandler
  nameWithType: WebBrowserProgressChangedEventHandler
  fullName: System.Windows.Forms.WebBrowserProgressChangedEventHandler
- uid: System.Windows.Forms.WebBrowser.ReadyState
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ReadyState
  nameWithType: WebBrowser.ReadyState
  fullName: System.Windows.Forms.WebBrowser.ReadyState
- uid: System.Windows.Forms.WebBrowserReadyState
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserReadyState
  nameWithType: WebBrowserReadyState
  fullName: System.Windows.Forms.WebBrowserReadyState
- uid: System.Windows.Forms.WebBrowser.Refresh
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Forms.WebBrowser.Refresh()
- uid: System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Refresh(WebBrowserRefreshOption)
  nameWithType: WebBrowser.Refresh(WebBrowserRefreshOption)
  fullName: System.Windows.Forms.WebBrowser.Refresh(WebBrowserRefreshOption)
- uid: System.Windows.Forms.WebBrowserRefreshOption
  parent: System.Windows.Forms
  isExternal: false
  name: WebBrowserRefreshOption
  nameWithType: WebBrowserRefreshOption
  fullName: System.Windows.Forms.WebBrowserRefreshOption
- uid: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ScriptErrorsSuppressed
  nameWithType: WebBrowser.ScriptErrorsSuppressed
  fullName: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed
- uid: System.Windows.Forms.WebBrowser.ScrollBarsEnabled
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ScrollBarsEnabled
  nameWithType: WebBrowser.ScrollBarsEnabled
  fullName: System.Windows.Forms.WebBrowser.ScrollBarsEnabled
- uid: System.Windows.Forms.WebBrowser.ShowPageSetupDialog
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPageSetupDialog()
  nameWithType: WebBrowser.ShowPageSetupDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPageSetupDialog()
- uid: System.Windows.Forms.WebBrowser.ShowPrintDialog
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPrintDialog()
  nameWithType: WebBrowser.ShowPrintDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPrintDialog()
- uid: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPrintPreviewDialog()
  nameWithType: WebBrowser.ShowPrintPreviewDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog()
- uid: System.Windows.Forms.WebBrowser.ShowPropertiesDialog
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPropertiesDialog()
  nameWithType: WebBrowser.ShowPropertiesDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowPropertiesDialog()
- uid: System.Windows.Forms.WebBrowser.ShowSaveAsDialog
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowSaveAsDialog()
  nameWithType: WebBrowser.ShowSaveAsDialog()
  fullName: System.Windows.Forms.WebBrowser.ShowSaveAsDialog()
- uid: System.Windows.Forms.WebBrowser.StatusText
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: StatusText
  nameWithType: WebBrowser.StatusText
  fullName: System.Windows.Forms.WebBrowser.StatusText
- uid: System.Windows.Forms.WebBrowser.StatusTextChanged
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: StatusTextChanged
  nameWithType: WebBrowser.StatusTextChanged
  fullName: System.Windows.Forms.WebBrowser.StatusTextChanged
- uid: System.Windows.Forms.WebBrowser.Stop
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Stop()
  nameWithType: WebBrowser.Stop()
  fullName: System.Windows.Forms.WebBrowser.Stop()
- uid: System.Windows.Forms.WebBrowser.Url
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Url
  nameWithType: WebBrowser.Url
  fullName: System.Windows.Forms.WebBrowser.Url
- uid: System.Windows.Forms.WebBrowser.Version
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Version
  nameWithType: WebBrowser.Version
  fullName: System.Windows.Forms.WebBrowser.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WebBrowserShortcutsEnabled
  nameWithType: WebBrowser.WebBrowserShortcutsEnabled
  fullName: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled
- uid: System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WndProc(Message)
  nameWithType: WebBrowser.WndProc(Message)
  fullName: System.Windows.Forms.WebBrowser.WndProc(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.WebBrowser.#ctor*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WebBrowser
  nameWithType: WebBrowser.WebBrowser
- uid: System.Windows.Forms.WebBrowser.AllowNavigation*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AllowNavigation
  nameWithType: WebBrowser.AllowNavigation
- uid: System.Windows.Forms.WebBrowser.AllowWebBrowserDrop*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AllowWebBrowserDrop
  nameWithType: WebBrowser.AllowWebBrowserDrop
- uid: System.Windows.Forms.WebBrowser.AttachInterfaces*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: AttachInterfaces
  nameWithType: WebBrowser.AttachInterfaces
- uid: System.Windows.Forms.WebBrowser.CanGoBack*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
- uid: System.Windows.Forms.WebBrowser.CanGoForward*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
- uid: System.Windows.Forms.WebBrowser.CreateSink*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CreateSink
  nameWithType: WebBrowser.CreateSink
- uid: System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: CreateWebBrowserSiteBase
  nameWithType: WebBrowser.CreateWebBrowserSiteBase
- uid: System.Windows.Forms.WebBrowser.DefaultSize*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DefaultSize
  nameWithType: WebBrowser.DefaultSize
- uid: System.Windows.Forms.WebBrowser.DetachInterfaces*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DetachInterfaces
  nameWithType: WebBrowser.DetachInterfaces
- uid: System.Windows.Forms.WebBrowser.DetachSink*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DetachSink
  nameWithType: WebBrowser.DetachSink
- uid: System.Windows.Forms.WebBrowser.Dispose*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Dispose
  nameWithType: WebBrowser.Dispose
- uid: System.Windows.Forms.WebBrowser.Document*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
- uid: System.Windows.Forms.WebBrowser.DocumentStream*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentStream
  nameWithType: WebBrowser.DocumentStream
- uid: System.Windows.Forms.WebBrowser.DocumentText*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentText
  nameWithType: WebBrowser.DocumentText
- uid: System.Windows.Forms.WebBrowser.DocumentTitle*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentTitle
  nameWithType: WebBrowser.DocumentTitle
- uid: System.Windows.Forms.WebBrowser.DocumentType*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: DocumentType
  nameWithType: WebBrowser.DocumentType
- uid: System.Windows.Forms.WebBrowser.EncryptionLevel*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: EncryptionLevel
  nameWithType: WebBrowser.EncryptionLevel
- uid: System.Windows.Forms.WebBrowser.Focused*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Focused
  nameWithType: WebBrowser.Focused
- uid: System.Windows.Forms.WebBrowser.GoBack*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoBack
  nameWithType: WebBrowser.GoBack
- uid: System.Windows.Forms.WebBrowser.GoForward*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoForward
  nameWithType: WebBrowser.GoForward
- uid: System.Windows.Forms.WebBrowser.GoHome*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoHome
  nameWithType: WebBrowser.GoHome
- uid: System.Windows.Forms.WebBrowser.GoSearch*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: GoSearch
  nameWithType: WebBrowser.GoSearch
- uid: System.Windows.Forms.WebBrowser.IsBusy*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsBusy
  nameWithType: WebBrowser.IsBusy
- uid: System.Windows.Forms.WebBrowser.IsOffline*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsOffline
  nameWithType: WebBrowser.IsOffline
- uid: System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: IsWebBrowserContextMenuEnabled
  nameWithType: WebBrowser.IsWebBrowserContextMenuEnabled
- uid: System.Windows.Forms.WebBrowser.Navigate*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Navigate
  nameWithType: WebBrowser.Navigate
- uid: System.Windows.Forms.WebBrowser.ObjectForScripting*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
- uid: System.Windows.Forms.WebBrowser.OnCanGoBackChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnCanGoBackChanged
  nameWithType: WebBrowser.OnCanGoBackChanged
- uid: System.Windows.Forms.WebBrowser.OnCanGoForwardChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnCanGoForwardChanged
  nameWithType: WebBrowser.OnCanGoForwardChanged
- uid: System.Windows.Forms.WebBrowser.OnDocumentCompleted*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnDocumentCompleted
  nameWithType: WebBrowser.OnDocumentCompleted
- uid: System.Windows.Forms.WebBrowser.OnDocumentTitleChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnDocumentTitleChanged
  nameWithType: WebBrowser.OnDocumentTitleChanged
- uid: System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnEncryptionLevelChanged
  nameWithType: WebBrowser.OnEncryptionLevelChanged
- uid: System.Windows.Forms.WebBrowser.OnFileDownload*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnFileDownload
  nameWithType: WebBrowser.OnFileDownload
- uid: System.Windows.Forms.WebBrowser.OnNavigated*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNavigated
  nameWithType: WebBrowser.OnNavigated
- uid: System.Windows.Forms.WebBrowser.OnNavigating*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNavigating
  nameWithType: WebBrowser.OnNavigating
- uid: System.Windows.Forms.WebBrowser.OnNewWindow*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnNewWindow
  nameWithType: WebBrowser.OnNewWindow
- uid: System.Windows.Forms.WebBrowser.OnProgressChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnProgressChanged
  nameWithType: WebBrowser.OnProgressChanged
- uid: System.Windows.Forms.WebBrowser.OnStatusTextChanged*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: OnStatusTextChanged
  nameWithType: WebBrowser.OnStatusTextChanged
- uid: System.Windows.Forms.WebBrowser.Padding*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Padding
  nameWithType: WebBrowser.Padding
- uid: System.Windows.Forms.WebBrowser.Print*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Print
  nameWithType: WebBrowser.Print
- uid: System.Windows.Forms.WebBrowser.ReadyState*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ReadyState
  nameWithType: WebBrowser.ReadyState
- uid: System.Windows.Forms.WebBrowser.Refresh*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Refresh
  nameWithType: WebBrowser.Refresh
- uid: System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ScriptErrorsSuppressed
  nameWithType: WebBrowser.ScriptErrorsSuppressed
- uid: System.Windows.Forms.WebBrowser.ScrollBarsEnabled*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ScrollBarsEnabled
  nameWithType: WebBrowser.ScrollBarsEnabled
- uid: System.Windows.Forms.WebBrowser.ShowPageSetupDialog*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPageSetupDialog
  nameWithType: WebBrowser.ShowPageSetupDialog
- uid: System.Windows.Forms.WebBrowser.ShowPrintDialog*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPrintDialog
  nameWithType: WebBrowser.ShowPrintDialog
- uid: System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPrintPreviewDialog
  nameWithType: WebBrowser.ShowPrintPreviewDialog
- uid: System.Windows.Forms.WebBrowser.ShowPropertiesDialog*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowPropertiesDialog
  nameWithType: WebBrowser.ShowPropertiesDialog
- uid: System.Windows.Forms.WebBrowser.ShowSaveAsDialog*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: ShowSaveAsDialog
  nameWithType: WebBrowser.ShowSaveAsDialog
- uid: System.Windows.Forms.WebBrowser.StatusText*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: StatusText
  nameWithType: WebBrowser.StatusText
- uid: System.Windows.Forms.WebBrowser.Stop*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Stop
  nameWithType: WebBrowser.Stop
- uid: System.Windows.Forms.WebBrowser.Url*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Url
  nameWithType: WebBrowser.Url
- uid: System.Windows.Forms.WebBrowser.Version*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: Version
  nameWithType: WebBrowser.Version
- uid: System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WebBrowserShortcutsEnabled
  nameWithType: WebBrowser.WebBrowserShortcutsEnabled
- uid: System.Windows.Forms.WebBrowser.WndProc*
  parent: System.Windows.Forms.WebBrowser
  isExternal: false
  name: WndProc
  nameWithType: WebBrowser.WndProc
