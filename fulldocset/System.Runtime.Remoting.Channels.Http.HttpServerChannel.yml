### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  id: HttpServerChannel
  children:
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  langs:
  - csharp
  name: HttpServerChannel
  nameWithType: HttpServerChannel
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  type: Class
  summary: "メッセージを送信するプロトコル、HTTP を使用するリモートの呼び出しのため、サーバーのチャネルを実装します。"
  remarks: "チャネルは、(たとえば、コンピューター間でのアプリケーション ドメイン) のリモート処理境界を越えてメッセージを転送します。 HttpServerChannel クラスは、HTTP プロトコルを使用してメッセージを転送します。       チャネルは、リモート呼び出しを転送する、.NET Framework リモート処理インフラストラクチャによって使用されます。 リモート オブジェクトへの呼び出しは、クライアントが、呼び出しは、クライアント チャネルで送信され、サーバー チャネルによって受信されるメッセージにシリアル化されます。 逆シリアル化し、処理されます。 戻り値はすべては、サーバーのチャネルで送信され、クライアント チャネルで受信します。       実行する追加のサーバー側でのメッセージの処理を指定できますの実装、 <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>、HttpServerChannel によって処理されるすべてのメッセージが渡されるからです</xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>。       HttpServerChannel は、バイナリ形式または SOAP 形式でシリアル化されたメッセージを受け入れます。       オブジェクトで設定できる構成プロパティが関連付けられている HttpServerChannel 実行時構成ファイルのいずれか (静的なを起動して<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName>メソッド) またはプログラムによって (を渡すことによって、<xref:System.Collections.IDictionary>コレクションに、<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>コンス トラクター).</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A> </xref:System.Collections.IDictionary> </xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> これらの構成プロパティの一覧は、 <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>。</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>のマニュアルを参照してください。"
  example:
  - "The following code example shows how to use a HttpServerChannel object to set up a remoting server and its client. The example contains three parts:  \n  \n-   A server  \n  \n-   A client  \n  \n-   A remote object used by the server and the client  \n  \n The following code example shows a server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_4_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_4_1.cs)]  \n  \n The following code example shows a client for this server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/cpp/t-system.runtime.remotin_4_2.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/csharp/t-system.runtime.remotin_4_2.cs)]  \n  \n The following code example shows the remote object used by the server and the client.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/cpp/t-system.runtime.remotin_4_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/csharp/t-system.runtime.remotin_4_3.cs)]"
  syntax:
    content: 'public class HttpServerChannel : System.Runtime.Remoting.Channels.BaseChannelWithProperties, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelReceiverHook'
  inheritance:
  - System.Object
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelReceiverHook
  inheritedMembers:
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Add(System.Object,System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Clear
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Contains(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.CopyTo(System.Array,System.Int32)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Count
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsFixedSize
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsReadOnly
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsSynchronized
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Remove(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.SyncRoot
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.System#Collections#IEnumerable#GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Values
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.Properties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.SinksWithProperties
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>クラスです。"
  syntax:
    content: public HttpServerChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>は指定されたポートでリッスンするクラス。"
  remarks: "使用可能なポートを動的に割り当てることを要求するには、設定、`port`パラメーターを 0 (ゼロ)。"
  syntax:
    content: public HttpServerChannel (int port);
    parameters:
    - id: port
      type: System.Int32
      description: "チャネルがリッスンするポートです。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>シンクと指定したチャネルのプロパティを持つクラス。"
  remarks: "チャネルの構成プロパティの詳細については、次を参照してください。[チャネルとフォーマッタの構成プロパティ](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)です。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/cpp/0921112d-a8ba-47f6-af0d-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/csharp/0921112d-a8ba-47f6-af0d-_1.cs)]"
  syntax:
    content: public HttpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>、チャネルのプロパティの現在のチャネルの構成情報を保持する</xref:System.Collections.IDictionary>。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>の新しいインスタンスを使用する、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref>です。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "構成プロパティの形式が正しくありませんでした。"
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>の指定された名前とクラスは、指定したポートでリッスンします。"
  remarks: "このコンス トラクターを設定、<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A> 。 1 つ以上のチャネルを登録する場合は、チャネルごとに一意の名前は必要です。       使用可能なポートを動的に割り当てることを要求するには、設定、`port`パラメーターを 0 (ゼロ)。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/cpp/57b12cf5-84d7-4c00-b238-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/csharp/57b12cf5-84d7-4c00-b238-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port);
    parameters:
    - id: name
      type: System.String
      description: "チャネルの名前。"
    - id: port
      type: System.Int32
      description: "チャネルがリッスンするポートです。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>指定されたポートでは、指定した名前は、指定されたポートでリッスンし、指定したシンクを使用しているクラスです。"
  remarks: "このコンス トラクターを設定、<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A>プロパティを使用して、`name`パラメーター</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A> 。       使用可能なポートを動的に割り当てることを要求するには、設定、`port`パラメーターを 0 (ゼロ)。       シンクの機能が必要でない場合は、設定、`sinkProvider`パラメーターを`null`です。"
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/cpp/460e07a0-c4b2-49f8-b602-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/csharp/460e07a0-c4b2-49f8-b602-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "チャネルの名前。"
    - id: port
      type: System.Int32
      description: "チャネルがリッスンするポートです。"
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;> </xref>チャネルで使用します。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  id: AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "チャネル フックする必要がありますリッスン URI を追加します。"
  syntax:
    content: public void AddHookChannelUri (string channelUri);
    parameters:
    - id: channelUri
      type: System.String
      description: "URI チャネル フックをリッスンする必要があります。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "チャネル固有のデータを取得します。"
  remarks: "インスタンスとして返されますが<xref:System.Object?displayProperty=fullName>のインスタンスにこのプロパティの値をキャストできます<xref:System.Runtime.Remoting.Channels.ChannelDataStore>先のチャネルを記述する、<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel>オブジェクトの受信を待機します</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel></xref:System.Runtime.Remoting.Channels.ChannelDataStore></xref:System.Object?displayProperty=fullName>。"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;> </xref>チャネル固有のデータを格納しているインスタンス。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルの名前を取得します。"
  remarks: "登録されている各チャネルは、一意の名前を持ちます。 この名前は<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>。</xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>を呼び出すときに、特定のチャネルを取得するために使用します。"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>チャネルの名前を含むオブジェクトです</xref:System.String>。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルの優先度を取得します。"
  remarks: "優先順位でどのチャネルのデータの表示順序を制御する、<xref:System.Runtime.Remoting.ObjRef>インスタンス以外の優先順位の低いチャネルの前に優先順位の高いチャネル</xref:System.Runtime.Remoting.ObjRef>。 クライアントが記載されている順序でサーバー チャネルに接続しようとした場合、<xref:System.Runtime.Remoting.ObjRef>インスタンス</xref:System.Runtime.Remoting.ObjRef>。 既定の優先順位が 1 になります。負の値の優先度が許可されます。"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "チャネルに割り当てる優先度を表す整数。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  id: ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "(たとえば、&quot;http&quot;) にフックするリスナーの種類を取得します。"
  remarks: "この値は区別されません。"
  example:
  - "The following code example shows how to use the ChannelScheme property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/cpp/p-system.runtime.remotin_52_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/csharp/p-system.runtime.remotin_52_1.cs)]"
  syntax:
    content: public string ChannelScheme { get; }
    return:
      type: System.String
      description: "フックするリスナーの種類。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  id: ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルを使用しているチャネル シンク チェーンを取得します。"
  remarks: ''
  example:
  - "The following code example shows how to use the ChannelSinkChain property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/cpp/p-system.runtime.remotin_84_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/csharp/p-system.runtime.remotin_84_1.cs)]"
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink ChannelSinkChain { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "現在のチャネルを使用しているチャネル シンク チェーン。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルの URI を返します。"
  remarks: ''
  example:
  - "The following code example shows how to use the GetChannelUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/cpp/m-system.runtime.remotin_75_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/csharp/m-system.runtime.remotin_75_1.cs)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: "現在のチャネルの URI。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在でホストされている、指定した URI を持つオブジェクトのすべての Url の配列を返します<xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>です。"
  remarks: "<xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>。</xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>が現在のメソッドを使用します。"
  example:
  - "The following code example shows how to use the GetUrlsForUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cs[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/csharp/b1e85e82-1fe9-423d-8938-_1.cs)]\n [!code-vb[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/visualbasic/b1e85e82-1fe9-423d-8938-_1.vb)]\n [!code-cpp[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/cpp/b1e85e82-1fe9-423d-8938-_1.cpp)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: "Url が必要であるオブジェクトの URI。"
    return:
      type: System.String[]
      description: "現在のホストされている、指定した URI を持つオブジェクトの Url の配列<xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>です。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  id: Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "指定したチャネルのプロパティを返します。"
  syntax:
    content: public override object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "取得するチャネルのプロパティのキー。"
    return:
      type: System.Object
      description: "A<xref:System.Object>によって指定されたチャネルのプロパティを表す<code> key </code></xref:System.Object> 。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  id: Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "取得、<xref:System.Collections.ICollection>キーのチャネルのプロパティに関連付けられています</xref:System.Collections.ICollection>。"
  remarks: "チャネルのプロパティは、実行時にチャネルを構成に使用されます。 可能なチャネルのプロパティと例の一覧は、次を参照してください。 [[\\<topic://cpconchannelformatterconfigurationproperties >]](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)です。"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "A<xref:System.Collections.ICollection>にキーのチャネルのプロパティが関連付けられている</xref:System.Collections.ICollection>。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "指定された URL からチャネル URI と URI のリモートのよく知られているオブジェクトを抽出します。"
  remarks: ''
  example:
  - "The following code example shows how to use the Parse method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/cpp/01d5e48c-ec6f-487a-b7a0-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/csharp/01d5e48c-ec6f-487a-b7a0-_1.cs)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "Uri の抽出元の URL です。"
    - id: objectURI
      type: System.String
      description: "このメソッドが戻るとき、<xref:System.String>リモートの既知のオブジェクトの URI を保持する</xref:System.String>。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.String
      description: "チャネル URI です。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルの要求のリッスンを開始するように指示します。"
  remarks: "新しく初期化されたチャネルがリッスンを開始するには、このメソッドを呼び出す必要はありません。       このメソッドを使用して、再起動後にチャネルでリッスンしている、<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening%2A>チャネルがリッスンを停止するメソッドが呼び出されました</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening%2A>。       チャネルは、動的に割り当てられたポート番号を使用している場合待機を再開したときに使用するポート番号を変更する可能性があります。"
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "常に<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の<xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>です。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "現在のチャネルの要求のリッスンを停止するように指示します。"
  remarks: "このメソッドを使用すると、チャネルでの待機を停止します。 リッスンして再起動して、以下の<xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening%2A>メソッド</xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening%2A>。       チャネルは、動的に割り当てられたポート番号を使用している場合待機を再開したときに使用するポート番号を変更する可能性があります。"
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "常に<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の<xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>です。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  id: WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "示すブール値を取得するかどうか<xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;></xref>外部リスナー サービスにフックします。"
  remarks: ''
  example:
  - "The following code example shows how to use the WantsToListen property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/cpp/p-system.runtime.remotin_104_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/csharp/p-system.runtime.remotin_104_1.cs)]"
  syntax:
    content: public bool WantsToListen { get; set; }
    return:
      type: System.Boolean
      description: "ブール値を示すかどうか<xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;></xref>外部リスナー サービスにフックします。"
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Channels.BaseChannelWithProperties
  isExternal: false
  name: System.Runtime.Remoting.Channels.BaseChannelWithProperties
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel
  nameWithType: HttpServerChannel.HttpServerChannel
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri
  nameWithType: HttpServerChannel.AddHookChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: HttpServerChannel.GetChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: HttpServerChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item
  nameWithType: HttpServerChannel.Item
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse
  nameWithType: HttpServerChannel.Parse
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening
  nameWithType: HttpServerChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening
  nameWithType: HttpServerChannel.StopListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
