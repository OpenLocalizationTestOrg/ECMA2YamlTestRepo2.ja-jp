### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  id: SecurityTokenManager
  children:
  - System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  langs:
  - csharp
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
  type: Class
  summary: "セキュリティ トークンを提供、認証、およびシリアル化する方法を指定するセキュリティ トークン マネージャーを表します。"
  remarks: "カスタム セキュリティ トークン、セキュリティ トークン認証システム、またはセキュリティ トークン プロバイダーが必要なときは、SecurityTokenManager クラスを使用します。 資格情報を処理するカスタム セキュリティ トークンを使用して[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]はサポートしていません。 カスタム セキュリティ トークン認証システムを使用するときに認証方法[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]を提供が不十分です。 SecurityTokenManager クラスでのセキュリティ トークン認証システムが返されます、<xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>。 セキュリティ トークン プロバイダーは、送信 SOAP メッセージのセキュリティ トークンを提供します。 SecurityTokenManager クラスを返しますでセキュリティ トークン プロバイダー、<xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>。       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]カスタム セキュリティ トークン認証システムとセキュリティ トークン プロバイダーを使用して、参照してください[カスタム資格情報と資格情報の検証](~/add/includes/ajax-current-ext-md.md)です。 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]カスタム セキュリティ トークンを作成するを参照してください[する方法: カスタム トークンを作成する](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public abstract class SecurityTokenManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref>クラスです。"
  syntax:
    content: protected SecurityTokenManager ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したセキュリティ トークン要件を満たすセキュリティ トークン認証システムを取得します。"
  remarks: "A<xref:System.IdentityModel.Selectors.SecurityTokenManager>クラスには、送信 SOAP メッセージのセキュリティ トークンを提供したり、受信 SOAP メッセージのセキュリティ トークンを認証できる型が用意されています</xref:System.IdentityModel.Selectors.SecurityTokenManager>。 CreateSecurityTokenAuthenticator メソッドがで指定した条件に一致するセキュリティ トークンを認証できるクラスを返します、`tokenRequirement`パラメーター。"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>セキュリティ トークンの要件を指定します。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>指定したセキュリティ トークンの要件に一致するセキュリティ トークンを指定します。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref>を指定した要件を満たす受信 SOAP メッセージのセキュリティ トークンを認証します。"
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したセキュリティ トークン要件を満たすセキュリティ トークン プロバイダーを取得します。"
  remarks: "A<xref:System.IdentityModel.Selectors.SecurityTokenManager>クラスには、送信 SOAP メッセージのセキュリティ トークンを提供したり、受信 SOAP メッセージのセキュリティ トークンを認証できる型が用意されています</xref:System.IdentityModel.Selectors.SecurityTokenManager>。 CreateSecurityTokenProvider メソッドがで指定した条件に一致するセキュリティ トークンを提供できるセキュリティ トークンを認証できるクラスを返します、`tokenRequirement`パラメーター。"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>セキュリティ トークンの要件を指定します。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref>送信 SOAP メッセージに対して指定した要件を満たすセキュリティ トークンを提供します。"
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定されたバージョンの ws-のセキュリティ トークンをシリアル化できる XML シリアライザーを取得 * 仕様です。"
  remarks: "カスタム トークンのシリアル化のサポートを追加するには、派生クラスを<xref:System.ServiceModel.Security.WSSecurityTokenSerializer>CreateSecurityTokenSerializer メソッドごとにそのクラスのインスタンスを返すとします</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>。 <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>から派生するクラス、<xref:System.IdentityModel.Selectors.SecurityTokenSerializer>クラス、およびに付属しているセキュリティ トークンを逆シリアル化できる[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</xref:System.IdentityModel.Selectors.SecurityTokenSerializer></xref:System.ServiceModel.Security.WSSecurityTokenSerializer>。 このため、シリアライザーにカスタム トークンのサポートを追加するには仮想メソッドをオーバーライドで、<xref:System.ServiceModel.Security.WSSecurityTokenSerializer>クラス、チェックされていない場合と必要なセキュリティ トークンが、カスタム トークンであるかどうかを呼び出すこと、基底クラス メソッドのコードを追加します</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>。"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref>を指定するには、ws-* セキュリティ トークンが準拠する仕様のバージョン。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>をセキュリティ トークンをシリアル化します。"
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager.SecurityTokenManager
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer
