### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  summary: "などのファイル ダイアログに共通する機能をカプセル化する抽象基本クラス<xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;></xref>と<xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;></xref>です。"
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref>クラスです。"
  syntax:
    content: protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得または拡張子を示すかどうか、ファイル ダイアログに自動的にファイル名に、ユーザーが拡張子を指定しない場合、値を設定します。"
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>拡張機能が追加されます。 場合、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログでは、ユーザーが存在しないファイルの名前を指定した場合に、警告が表示されるかどうかを示す値を設定します。"
  remarks: "<xref:Microsoft.Win32.OpenFileDialog>クラスでは、このプロパティを設定`true`コンス トラクター</xref:Microsoft.Win32.OpenFileDialog> 。"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>警告を表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 この基本クラスの既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはユーザーが無効なパスとファイル名を入力した場合に警告を表示するかどうかを指定する値を設定します。"
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>警告を表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログ ボックスのカスタム プレースのリストを設定します。"
  remarks: "以降で[!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)]が保存ファイル ダイアログ ボックスを開き、**お気に入りリンク**ユーザーが別の場所にすばやく移動できるダイアログ ボックスの左側のパネルです。 これらのリンクは、カスタムの場所と呼ばれます。 このプロパティでは、アプリケーション ファイル ダイアログ ボックスを使用するときに表示されるリストを変更することができます。"
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: "カスタム プレースのリスト。"
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得または表示されるファイルの一覧をフィルター処理に使用する既定の拡張子文字列を指定する値を設定します。"
  remarks: "拡張子の文字列には、先頭にピリオドを含める必要があります。 たとえば、すべてのテキスト ファイルを選択するには、&quot;.txt&quot;DefaultExt プロパティを設定します。       既定では、<xref:Microsoft.Win32.FileDialog.AddExtension%2A>プロパティが、拡張機能から表示されているファイルの一覧をフィルター処理を決定しようとした場合、<xref:Microsoft.Win32.FileDialog.Filter%2A>プロパティ</xref:Microsoft.Win32.FileDialog.Filter%2A></xref:Microsoft.Win32.FileDialog.AddExtension%2A>。 拡張機能を特定できない場合、<xref:Microsoft.Win32.FileDialog.Filter%2A>プロパティ、DefaultExt が代わりに使用されます</xref:Microsoft.Win32.FileDialog.Filter%2A>。"
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "既定の拡張子文字列。 既定値は<xref:System.String>。</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログがショートカットによって参照されるファイルの場所またはショートカット ファイル (.lnk) の場所のいずれかを返すかどうかを示す値を設定します。"
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>参照されている以外の場所を返す<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ショートカットの場所を返せません。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログで選択したファイルの完全パスを含む文字列を設定します。"
  remarks: "1 つ以上のファイル名が選択されている場合 (長さの<xref:Microsoft.Win32.FileDialog.FileNames%2A>が&1; より大きい) ファイル名が最初の選択したファイル名が含まれます</xref:Microsoft.Win32.FileDialog.FileNames%2A>。 このプロパティを含むファイル名が選択されていない場合<xref:System.String.Empty>なく`null`</xref:System.String.Empty>。"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>は、ファイルの完全パス、ファイル ダイアログで選択します</xref:System.String>。 既定値は<xref:System.String>。</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "選択したファイルごとに&1; つのファイル名を格納する配列を取得します。"
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "配列<xref:System.String>選択したファイルごとに&1; つのファイル名を格納している</xref:System.String>。 既定値は単一の値を持つ<xref:System.String>。</xref:System.String>項目を配列"
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "ユーザーをクリックするか、ファイル名を選択すると発生、**開く**のボタン、 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>または**保存**のボタン、 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;></xref>です。"
  remarks: "FileOk は、ユーザーがファイル名を選択しますが、ダイアログ ボックスが閉じ、前にすることができます、選択範囲を処理した後に発生します。 必要な場合、ユーザーの選択をキャンセルできます設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>への引数`true`</xref:System.ComponentModel.CancelEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得または設定のいずれかから表示されるファイルの種類を決定するフィルター文字列、 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>または<xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;></xref>です。"
  remarks: "If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, \\*.xls, \\*.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid Filter string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>フィルターを格納している</xref:System.String>。 既定値は<xref:System.String>、つまりフィルターが適用されていないと、すべてのファイルの種類が表示されます</xref:System.String>。"
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "フィルター文字列が正しくありません。"
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログで現在選択されているフィルターのインデックスを設定します。"
  remarks: "このインデックスは 1 ベースでない 0 から始まる、基になると互換性の要件により、 [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]です。"
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>選択したフィルターのインデックスである</xref:System.Int32>。 既定値は 1 です。"
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "ファイル ダイアログに共通の機能を追加するにはオーバーライドがコモン ファイル ダイアログのフック プロシージャを定義します。"
  syntax:
    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "ウィンドウ ハンドル、[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]ダイアログ。"
    - id: msg
      type: System.Int32
      description: "によって処理されるメッセージ、[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]ダイアログ。"
    - id: wParam
      type: System.IntPtr
      description: "ダイアログの動作のパラメーターです。"
    - id: lParam
      type: System.IntPtr
      description: "ダイアログの動作のパラメーターです。"
    return:
      type: System.IntPtr
      description: "返します<xref:System.IntPtr>成功した場合はそれ以外の場合、0 以外の値が失敗を示すときに返されます</xref:System.IntPtr>。"
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログに表示される初期ディレクトリを設定します。"
  remarks: "このプロパティには初期ディレクトリのセットがない場合は、 <xref:System.String>null 文字列ではなく</xref:System.String>。"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>初期ディレクトリを格納している</xref:System.String>。 既定値は<xref:System.String>。</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "発生させる、 <xref href=&quot;Microsoft.Win32.FileDialog.FileOk&quot;> </xref>イベント。"
  remarks: "OnFileOk を発生させる、<xref:Microsoft.Win32.FileDialog.FileOk>イベント</xref:Microsoft.Win32.FileDialog.FileOk>。       派生する型<xref:Microsoft.Win32.FileDialog>OnFileOk を上書きする可能性があります</xref:Microsoft.Win32.FileDialog>。 オーバーライドされたメソッドは、場合に、基本クラスでの OnFileOk を呼び出す必要があります<xref:Microsoft.Win32.FileDialog.FileOk>を発生させる必要があります</xref:Microsoft.Win32.FileDialog.FileOk>。"
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>イベント データを格納します</xref:System.ComponentModel.CancelEventArgs>。"
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得、[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]によって使用されているコモン ファイル ダイアログ フラグ ファイル ダイアログを初期化します。"
  remarks: "この値は、現在のプロパティの値のセットをファイル ダイアログを表示する使用されます。 実際のオプションが、特定のダイアログ ボックスのプロパティとして公開されているが、このレベルでは、パブリック フラグの値として記載されていないため、このプロパティの用途、主に内部で、派生クラス<xref:Microsoft.Win32.OpenFileDialog>と<xref:Microsoft.Win32.SaveFileDialog>。</xref:Microsoft.Win32.SaveFileDialog></xref:Microsoft.Win32.OpenFileDialog>を実装するときに使用します。"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "A<xref:System.Int32>を格納している、[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]によって使用されているコモン ファイル ダイアログ フラグ ファイルの初期化ダイアログ</xref:System.Int32>。"
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "設定ファイル ダイアログのすべてのプロパティは、それぞれの初期値に戻します。"
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "このプロパティは実装されていません。"
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "実装されていません。"
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "<xref:Microsoft.Win32.CommonDialog.RunDialog*>派生クラスで、ファイル ダイアログを表示するために呼び出される<xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;></xref>と<xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;></xref>です。</xref:Microsoft.Win32.CommonDialog.RunDialog*>"
  remarks: "最終的に表示されるダイアログ ボックスには、によって指定される、オーナー ウィンドウが割り当てられている、`hwndOwner`パラメーター。"
  syntax:
    content: protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "ダイアログ ボックスを所有するウィンドウへのハンドルします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーがクリックした場合、 **[ok]**表示されるダイアログ ボックスのボタン (たとえば、 <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>、 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>)、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "選択されたファイルのファイル名のみを格納する文字列を取得します。"
  remarks: "この値は、<xref:Microsoft.Win32.FileDialog.FileName%2A>パスに関する情報を削除します</xref:Microsoft.Win32.FileDialog.FileName%2A>。 パスを削除するように、部分信頼アプリケーションで使用するためからローカル ファイル システムに関する情報を検出するアプリケーションがなくなるためです。       1 つ以上のファイル名が選択されている場合 (の長さ<xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>が&1; より大きい)、このプロパティには、最初の選択したファイル名のみが含まれています</xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>。       参照してください[XBAP サンプルからの安全なファイル アップロード](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)です。"
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>のみに選択されたファイルのファイル名を格納する</xref:System.String>。 既定値は<xref:System.String>、ファイルが選択されていないか、ディレクトリが選択されている場合に、値ではまた</xref:System.String>。"
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "選択したファイルごとに&1; つの安全なファイル名を格納する配列を取得します。"
  remarks: "<xref:Microsoft.Win32.FileDialog.SafeFileName%2A>。</xref:Microsoft.Win32.FileDialog.SafeFileName%2A>を参照してください。"
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "配列<xref:System.String>選択したファイルごとに&1; つの安全なファイル名を格納している</xref:System.String>。 既定値は単一の値を持つ<xref:System.String>。</xref:System.String>項目を配列"
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得またはファイル ダイアログのタイトル バーに表示されるテキストを設定します。"
  remarks: "タイトルが null の場合、または<xref:System.String>、既定では、ローカライズされた値が使用されるなど「として保存する」または「開く」.</xref:System.String>"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>ファイル ダイアログのタイトル バーに表示されるテキストである</xref:System.String>。 既定値は<xref:System.String>。</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "ファイル ダイアログを表す文字列を返します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>の表現<xref href=&quot;Microsoft.Win32.FileDialog&quot;></xref>いずれかから選択したすべてのファイルの完全なパス名を格納している<xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>、 <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref></xref:System.String> 。"
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "取得または設定ダイアログを受け入れるかどうかを示す値だけ有効な[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]ファイル名。"
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>無効なファイル名が指定されたときに警告を表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
