### YamlMime:ManagedReference
items:
- uid: System.IO.Log.SequenceNumber
  id: SequenceNumber
  children:
  - System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  - System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.Object)
  - System.IO.Log.SequenceNumber.GetBytes
  - System.IO.Log.SequenceNumber.GetHashCode
  - System.IO.Log.SequenceNumber.Invalid
  - System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  langs:
  - csharp
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
  type: Struct
  summary: "レコード シーケンス内でのログ レコードに割り当てられたシーケンス番号を表します。"
  remarks: "シーケンス内の各ログ レコードには、その前に追加されたレコードのシーケンス番号より大きいシーケンス番号が割り当てられます。 シーケンス番号と比べると、できますが、それ以外の操作します。"
  syntax:
    content: 'public struct SequenceNumber : IComparable<System.IO.Log.SequenceNumber>'
  inheritance:
  - System.ValueType
  implements:
  - System.IComparable<System.IO.Log.SequenceNumber>
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>クラスです。"
  syntax:
    content: public SequenceNumber (byte[] sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.Byte[]
      description: "シーケンス番号を構成するバイト数です。"
  overload: System.IO.Log.SequenceNumber.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>長さが正しくない、または有効なシーケンス番号を表していません。"
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  id: CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "このシーケンス番号を指定したオブジェクトとを比較します。"
  syntax:
    content: public int CompareTo (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "現在のシーケンス番号に評価されるオブジェクト。"
    return:
      type: System.Int32
      description: "2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。       <table><tbody><tr><td> 値       </td><td> 条件       </td></tr><tr><td> 0 より小さい値       </td><td> このインスタンスより小さい<code> other</code>です。       </td></tr><tr><td> 0       </td><td> このインスタンスと等しい<code> other</code>です。       </td></tr><tr><td> 0 より大きい値       </td><td> このインスタンスがより大きい<code> other</code>です。       </td></tr></tbody></table>"
  overload: System.IO.Log.SequenceNumber.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  id: Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "このインスタンスと指定されたシーケンス番号が等しいかどうかを示します。"
  syntax:
    content: public bool Equals (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "別<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>と比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> other </code>とこのインスタンスが同じ値を表していると、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "このインスタンスと指定したオブジェクトが等しいかどうかを示します。"
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "別のオブジェクトと比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> other </code>とこのインスタンスが同じ型が同じ値を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetBytes
  id: GetBytes
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "現在のシーケンス番号の全部または一部をバイト配列にエンコードします。"
  syntax:
    content: public byte[] GetBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "現在のシーケンス番号の一部またはすべてを含むバイト配列。"
  overload: System.IO.Log.SequenceNumber.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetHashCode
  id: GetHashCode
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "このインスタンスのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.IO.Log.SequenceNumber.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Invalid
  id: Invalid
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "無効なシーケンス番号を表す既定値として機能するシーケンス番号を取得します。"
  syntax:
    content: public static System.IO.Log.SequenceNumber Invalid { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>に初期化 UInt64<xref:System.UInt64.MaxValue>を無効なシーケンス番号を表す既定値として機能する。</xref:System.UInt64.MaxValue> 。"
  overload: System.IO.Log.SequenceNumber.Invalid*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "比較する&2; つ<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>インスタンスをそれらが等しいかどうかを判断します。"
  syntax:
    content: public static bool op_Equality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>両方<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>インスタンスが等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "2 つの論理比較を実行<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>インスタンスを&1; つは、2 番目より大きいかどうかを判断します。"
  syntax:
    content: public static bool op_GreaterThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最初のインスタンスが&2; 番目のインスタンス、それ以外の場合より大きい場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "2 つの論理比較を実行<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>インスタンスを&1; つは、2 番目以上かどうかを判断します。"
  syntax:
    content: public static bool op_GreaterThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最初のインスタンスがより大きいか、それ以外の場合の&2; 番目のインスタンスに等しい場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "比較する&2; つ<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>両者が等しくないかどうかを決定するインスタンス。"
  syntax:
    content: public static bool op_Inequality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>両方<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>インスタンスが等しくない場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "2 つの論理比較を実行<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>最初が小さいかどうかを決定するパラメーター、秒を超える。"
  syntax:
    content: public static bool op_LessThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最初のインスタンスは、2 つ目のインスタンスより小さい、それ以外の場合場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "2 つの論理比較を実行<xref href=&quot;System.IO.Log.SequenceNumber&quot;></xref>パラメーターを最初は、2 番目以下かどうかを判断します。"
  syntax:
    content: public static bool op_LessThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の左側にあります。"
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "<xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref>演算子の右側にあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最初のインスタンスが&2; 番目のインスタンス、それ以外の場合、小さい場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Log.SequenceNumber.GetBytes
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
- uid: System.IO.Log.SequenceNumber.GetHashCode
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
- uid: System.IO.Log.SequenceNumber.Invalid
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.#ctor*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber.SequenceNumber
- uid: System.IO.Log.SequenceNumber.CompareTo*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo
  nameWithType: SequenceNumber.CompareTo
- uid: System.IO.Log.SequenceNumber.Equals*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals
  nameWithType: SequenceNumber.Equals
- uid: System.IO.Log.SequenceNumber.GetBytes*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes
  nameWithType: SequenceNumber.GetBytes
- uid: System.IO.Log.SequenceNumber.GetHashCode*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode
  nameWithType: SequenceNumber.GetHashCode
- uid: System.IO.Log.SequenceNumber.Invalid*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality
  nameWithType: SequenceNumber.op_Equality
- uid: System.IO.Log.SequenceNumber.op_GreaterThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan
  nameWithType: SequenceNumber.op_GreaterThan
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SequenceNumber.op_GreaterThanOrEqual
- uid: System.IO.Log.SequenceNumber.op_Inequality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality
  nameWithType: SequenceNumber.op_Inequality
- uid: System.IO.Log.SequenceNumber.op_LessThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan
  nameWithType: SequenceNumber.op_LessThan
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SequenceNumber.op_LessThanOrEqual
