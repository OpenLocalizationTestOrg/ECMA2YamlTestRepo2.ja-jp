### YamlMime:ManagedReference
items:
- uid: System.Web.VirtualPathUtility
  id: VirtualPathUtility
  children:
  - System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.Combine(System.String,System.String)
  - System.Web.VirtualPathUtility.GetDirectory(System.String)
  - System.Web.VirtualPathUtility.GetExtension(System.String)
  - System.Web.VirtualPathUtility.GetFileName(System.String)
  - System.Web.VirtualPathUtility.IsAbsolute(System.String)
  - System.Web.VirtualPathUtility.IsAppRelative(System.String)
  - System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  - System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  langs:
  - csharp
  name: VirtualPathUtility
  nameWithType: VirtualPathUtility
  fullName: System.Web.VirtualPathUtility
  type: Class
  summary: "仮想パスの一般的な操作のためのユーティリティ メソッドを提供します。"
  remarks: "The VirtualPathUtility class provides utility methods for common operations involving virtual paths. For ASP.NET server controls and server code, virtual paths using the Web application root operator, the tilde (~), commonly are used instead of relative and absolute paths. For more information, see [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the VirtualPathUtility class when you need to convert application-relative paths to absolute virtual paths, as might be the case in developing a custom Web service handler.  \n  \n An absolute virtual path starts with the literal slash mark (/). A relative virtual path is relative to the application root directory, if it is just a tilde (~) or starts with the tilde and a double backslash (~\\\\\\\\) or the tilde and a slash mark (~/). Making a virtual path relative makes the path independent of the application.  \n  \n The virtual directory for the application can be obtained from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> and <xref:System.Web.HttpRequest.ApplicationPath%2A> properties.  \n  \n> [!NOTE]\n>  The VirtualPathUtility class is not intended for security or canonicalization purposes. For more information about Web application security, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md). For generic URL processing functionality, see <xref:System.Uri>."
  example:
  - "The following code example demonstrates how to use the VirtualPathUtility class and some of its methods. First, the <xref:System.Web.HttpRequest.FilePath%2A> property generates the virtual path to the Web page. The <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods return information about the virtual path. Next, the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property generates a virtual path of the current request, which might be different from the <xref:System.Web.HttpRequest.FilePath%2A> property, if a <xref:System.Web.HttpResponse.Redirect%2A> method was called. The <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods return information about the virtual path.  \n  \n [!code-vb[System.Web.VirtualPathUtility#1](~/add/codesnippet/visualbasic/t-system.web.virtualpath_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#1](~/add/codesnippet/csharp/t-system.web.virtualpath_1.aspx)]"
  syntax:
    content: public static class VirtualPathUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  id: AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "既に存在しない場合は、仮想パスの末尾にリテラルのスラッシュ記号 (/) を追加します。"
  remarks: "仮想パスの末尾にリテラルのスラッシュ記号 (/) が存在する場合の仮想パスは変更されません。"
  syntax:
    content: public static string AppendTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "スラッシュを追加する仮想パス。"
    return:
      type: System.String
      description: "変更された仮想パス。"
  overload: System.Web.VirtualPathUtility.AppendTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "基本パスと相対パスを結合します。"
  remarks: "TheCombine メソッドの値を返します、<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティの相対パスが正確にティルダ (~) である場合</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>。       結合メソッドを使用して、<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティ ベースのパスではなく値の相対パスがチルダとスラッシュ (/) で始まる場合 (~/)、それ以外の結合メソッドは基本のパスを使用して</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>"
  syntax:
    content: public static string Combine (string basePath, string relativePath);
    parameters:
    - id: basePath
      type: System.String
      description: "基本パス。"
    - id: relativePath
      type: System.String
      description: "相対パス。"
    return:
      type: System.String
      description: "The combined <code>basePath</code> and <code>relativePath</code>."
  overload: System.Web.VirtualPathUtility.Combine*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>relativePath</code>物理パスです。       - または - <code>relativePath</code>&1; つまたは複数のコロンが含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relativePath</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列。       - または -<code>basePath</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスのディレクトリの部分を返します。"
  remarks: "場合`virtualPath`ルートがありませんつまり、ルート演算子 (ティルダ [~]) と等しくない、パラメーターがチルダとスラッシュ (/) など、チルダ (~) で始まっていない (~/) またはチルダと二重の円記号 (~//)、スラッシュ (/) で始まっていないか、<xref:System.ArgumentException>例外がスローされます。</xref:System.ArgumentException> 。       かどうかは、GetDirectory メソッドに渡される仮想パスは`&quot;/images/image1.gif&quot;`、返されたディレクトリは`&quot;/images&quot;`します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and GetDirectory methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_3_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_3_1.aspx)]"
  syntax:
    content: public static string GetDirectory (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "仮想パス。"
    return:
      type: System.String
      description: "仮想パスで参照されているディレクトリです。"
  overload: System.Web.VirtualPathUtility.GetDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  id: GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスで参照されているファイルの拡張子を取得します。"
  remarks: "かどうかは、GetExtension メソッドに渡される仮想パスは`&quot;/images/image1.gif&quot;`、返される拡張は`&quot;.gif&quot;`します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, GetExtension, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_0_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_0_1.aspx)]"
  syntax:
    content: public static string GetExtension (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "仮想パス。"
    return:
      type: System.String
      description: "ファイル名拡張子の文字列リテラル、ピリオド (.) を含む<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、または空の文字列 (&quot;&quot;) です。"
  overload: System.Web.VirtualPathUtility.GetExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>定義されている無効な文字が&1; つまたは複数含まれています<xref:System.IO.Path.InvalidPathChars>です。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  id: GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスで参照されているファイルのファイル名を取得します。"
  remarks: "かどうかは、GetFileName メソッドに渡される仮想パスは`&quot;/images/image1.gif&quot;`、返されたファイル名が`&quot;image1.gif&quot;`です。"
  example:
  - "The following code example demonstrates how to use the GetFileName, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_5_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_5_1.aspx)]"
  syntax:
    content: public static string GetFileName (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "仮想パス。"
    return:
      type: System.String
      description: "ファイル名の最後のディレクトリ文字の後にリテラル<code> virtualPath </code>、それ以外の場合は、最後のディレクトリ名の最後の文字<code> virtualPath </code>ディレクトリまたはボリューム区切り文字します。"
  overload: System.Web.VirtualPathUtility.GetFileName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>定義されている無効な文字が&1; つまたは複数含まれています<xref:System.IO.Path.InvalidPathChars>です。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  id: IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "指定した仮想パスが絶対; するかどうかを示すブール値を返しますつまり、リテラルのスラッシュ記号 (/) で開始します。"
  remarks: "仮想パスは、リテラルのスラッシュ記号 (/) で始まる場合は、絶対です。 <xref:System.Web.HttpRequest.Path%2A>プロパティは、絶対仮想パスを返します。</xref:System.Web.HttpRequest.Path%2A>たとえば、"
  example:
  - "The following code example demonstrates how to use the IsAbsolute, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_2_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_2_1.aspx)]"
  syntax:
    content: public static bool IsAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "確認への仮想パス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> virtualPath </code>絶対パスは、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.VirtualPathUtility.IsAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  id: IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "指定した仮想パスがアプリケーションを基準とするかどうかを示すブール値を返します。"
  remarks: "仮想パスは、ルート演算子 (、チルダ [])、または演算子付きのルートを開始します。 場合`virtualPath`は`null`、<xref:System.ArgumentNullException>例外がスローされます</xref:System.ArgumentNullException>。 場合`virtualPath`空の文字列 (&quot;&quot;)、IsAppRelative メソッドを返します`false`です。      > [!NOTE]  >   `&quot;~` `filename` `&quot;`は有効な仮想パスではありませんし、返します`false`IsAppRelative メソッドです。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, IsAppRelative, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_4_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_4_1.aspx)]"
  syntax:
    content: public static bool IsAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "確認への仮想パス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> virtualPath </code> 、それ以外のアプリケーションに相対<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.VirtualPathUtility.IsAppRelative*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  id: MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "別に、ルート演算子 (ティルダ [~]) を含む&1; つの仮想パスからの相対仮想パスを返します。"
  remarks: "場合、`fromPath`と`toPath`パラメーターはルートがないですつまり、ルート演算子 (ティルダ [~]) が等しくないが、パラメーターがチルダとスラッシュ (/) など、チルダ (~) で始まらない (~/) またはチルダと二重の円記号 (~//)、またはスラッシュ (/) で始まらない、<xref:System.ArgumentException>例外がスローされます。</xref:System.ArgumentException> 。       クエリ文字列パラメーターとは、URI で使用する HTML アンカーは、相対パスを決定するのには使用されません。       場合`fromPath`は`&quot;/directory1/file1.aspx&quot;`と`toPath`は`&quot;/directory2/file2.aspx&quot;`、MakeRelative メソッドを返します`&quot;../directory2/file2.aspx&quot;`です。"
  syntax:
    content: public static string MakeRelative (string fromPath, string toPath);
    parameters:
    - id: fromPath
      type: System.String
      description: "相対仮想パスを返すの開始となる仮想パス。"
    - id: toPath
      type: System.String
      description: "相対仮想パスを返すの終了となる仮想パス。"
    return:
      type: System.String
      description: "相対仮想パス<code> fromPath </code>に<code> toPath</code>です。"
  overload: System.Web.VirtualPathUtility.MakeRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>toPath</code> is not rooted."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  id: RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスから末尾のスラッシュ記号 (/) を削除します。"
  remarks: "RemoveTrailingSlash メソッドは、スラッシュ (/) を仮想パスの末尾から削除します。 仮想パスがルート ディレクトリで既に場合 (`&quot;/&quot;`)、アクションは実行されません。 仮想パスが場合`null`または空の文字列 (&quot;&quot;)、RemoveTrailingSlash メソッドを返します`null`です。"
  syntax:
    content: public static string RemoveTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "末尾のスラッシュを削除する仮想パスからマークを付けます。"
    return:
      type: System.String
      description: "仮想パスが末尾にスラッシュ記号、仮想パスがまだいない場合、ルート ディレクトリ (「/」) です。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  id: ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスをアプリケーション絶対パスに変換します。"
  remarks: "アプリケーション絶対パスは、ルート演算子 (ティルダ [~]) ではなく、アプリケーション パスが使用されているいずれかです。       場合`virtualPath`: 絶対 - ToAbsolute メソッドが変更されていない仮想パスを返します。      のアプリケーション相対パス、ToAbsolute メソッドの先頭に現在のアプリケーション仮想ディレクトリ パスを追加、`virtualPath`です。 現在のアプリケーションの仮想ディレクトリ パスのアクセスなど、<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティ</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>。      -Root 化されている、ToAbsolute メソッド、<xref:System.ArgumentOutOfRangeException>例外です</xref:System.ArgumentOutOfRangeException>。"
  syntax:
    content: public static string ToAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "アプリケーションの相対パスに変換する仮想パス。"
    return:
      type: System.String
      description: "指定した仮想パスの絶対パス形式です。"
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>virtualPath</code>ルートがありません。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "先頭に二重ピリオド (.) を使用すると、最上位ディレクトリを終了します。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  id: ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスを指定したアプリケーションのパスを使用してアプリケーション絶対パスに変換します。"
  remarks: "ToAbsolute のオーバー ロード<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>メソッドは現在のアプリケーションのパスではなく、指定されたアプリケーション パスを使用</xref:System.Web.VirtualPathUtility.ToAbsolute%2A>する       場合`virtualPath`: 絶対 - ToAbsolute メソッドは、変更せずに仮想パスを返します。      のアプリケーション相対パス、ToAbsolute メソッドは、追加`applicationPath`仮想パスの先頭にします。      -Root 化されている、ToAbsolute メソッド、<xref:System.ArgumentOutOfRangeException>例外です</xref:System.ArgumentOutOfRangeException>。"
  syntax:
    content: public static string ToAbsolute (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "アプリケーションの相対パスに変換する仮想パス。"
    - id: applicationPath
      type: System.String
      description: "変換に使用するアプリケーション パス`virtualPath`の相対パスにします。"
    return:
      type: System.String
      description: "絶対仮想パスの形式を<code> virtualPath</code>です。"
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>applicationPath</code>ルートがありません。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "先頭に二重ピリオド (.) は、最上位ディレクトリを終了するアプリケーションのパスで使用されます。"
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  id: ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスでは、アプリケーションの仮想パスを使用してアプリケーションの相対パスに変換、<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>プロパティ</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>。"
  remarks: "場合は、アプリケーションの仮想パス`&quot;myapp&quot;`および仮想パス`&quot;/myApp/sub/default.asp&quot;`渡される結果として得られるアプリケーションの相対パスは、ToAppRelative メソッドに`&quot;~/sub/default.aspx&quot;`です。       場合`virtualPath`と現在のアプリケーション パス、メソッドの仮想パスが変更せずに返します ToAppRelative が起動しません。       場合`virtualPath`はアプリケーションのパスと同じルート演算子 (、チルダ []) が返されます。 現在のアプリケーションの仮想ディレクトリ パスのアクセスなど、<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティ</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_1_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_1_1.aspx)]"
  syntax:
    content: public static string ToAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "アプリケーションの相対パスに変換する仮想パス。"
    return:
      type: System.String
      description: "アプリケーションの相対パス形式を<code> virtualPath</code>です。"
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  id: ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "仮想パスを指定したアプリケーションのパスを使用してアプリケーションの相対パスに変換します。"
  remarks: "ToAppRelative オーバー ロード、<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>メソッドを使用`applicationPath`現在のアプリケーションのパスではなく</xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 場合`virtualPath`で始まっていない`applicationPath`、ToAppRelative メソッドが変更されていない仮想パスを返します。"
  syntax:
    content: public static string ToAppRelative (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "アプリケーションの相対パスに変換する仮想パス。"
    - id: applicationPath
      type: System.String
      description: "変換に使用するアプリケーション パス`virtualPath`の相対パスにします。"
    return:
      type: System.String
      description: "アプリケーションの相対パス形式を<code> virtualPath</code>です。"
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash
  nameWithType: VirtualPathUtility.AppendTrailingSlash
- uid: System.Web.VirtualPathUtility.Combine*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine
  nameWithType: VirtualPathUtility.Combine
- uid: System.Web.VirtualPathUtility.GetDirectory*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory
  nameWithType: VirtualPathUtility.GetDirectory
- uid: System.Web.VirtualPathUtility.GetExtension*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension
  nameWithType: VirtualPathUtility.GetExtension
- uid: System.Web.VirtualPathUtility.GetFileName*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName
  nameWithType: VirtualPathUtility.GetFileName
- uid: System.Web.VirtualPathUtility.IsAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute
  nameWithType: VirtualPathUtility.IsAbsolute
- uid: System.Web.VirtualPathUtility.IsAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative
  nameWithType: VirtualPathUtility.IsAppRelative
- uid: System.Web.VirtualPathUtility.MakeRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative
  nameWithType: VirtualPathUtility.MakeRelative
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash
  nameWithType: VirtualPathUtility.RemoveTrailingSlash
- uid: System.Web.VirtualPathUtility.ToAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute
  nameWithType: VirtualPathUtility.ToAbsolute
- uid: System.Web.VirtualPathUtility.ToAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative
  nameWithType: VirtualPathUtility.ToAppRelative
