### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.AccessibleObject
  id: AccessibleObject
  children:
  - System.Windows.Forms.AccessibleObject.#ctor
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Bounds
  - System.Windows.Forms.AccessibleObject.DefaultAction
  - System.Windows.Forms.AccessibleObject.Description
  - System.Windows.Forms.AccessibleObject.DoDefaultAction
  - System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  - System.Windows.Forms.AccessibleObject.GetChildCount
  - System.Windows.Forms.AccessibleObject.GetFocused
  - System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  - System.Windows.Forms.AccessibleObject.GetSelected
  - System.Windows.Forms.AccessibleObject.Help
  - System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.KeyboardShortcut
  - System.Windows.Forms.AccessibleObject.Name
  - System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  - System.Windows.Forms.AccessibleObject.Parent
  - System.Windows.Forms.AccessibleObject.Role
  - System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  - System.Windows.Forms.AccessibleObject.State
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  - System.Windows.Forms.AccessibleObject.Value
  langs:
  - csharp
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
  type: Class
  summary: "障碍を持つユーザー用のアプリケーションのユーザー インターフェイス (UI) を調整するユーザー補助アプリケーションが使用する情報を提供します。"
  remarks: "ユーザー補助アプリケーションには、障碍を持つユーザーにとって使いやすさを向上させるために、アプリケーションの機能を調整できます。       ユーザーは、視覚に障害の場合、お客様のニーズに準拠するソフトウェアとオペレーティング システムの機能を調整できます。 たとえば、テキストや画像を拡大し、コントラストが、それらをレンダリングできます。 さらに、適切な色を使用して色盲に対応できます。 ユーザーは重大な視覚に障害の場合、コンピューターが画面レビュー補助画面に表示される変換を使用してアクセスできるテキストを音声または動的に更新可能なブライユ点字表示にします。       ユーザー、聴覚に対しては、点滅ツールバー; などの視覚的な手掛かりを使用するプログラムを設計することができます。または、テキストとして音声メッセージを表示することができます。 たとえば、オンにすると、`SoundSentry`警告システムでは、サウンドのアラームが、機能、コントロール パネルで、ユーザー補助のオプションを提供します。       モーション障碍を持つユーザーの場合にしコンピューターのユーザー補助機能を向上させるコントロールを絞り込んで、キーボードとマウスの使用を排除またはデザインできます。 コントロール パネルでは、アシスタンスを提供します。 たとえば、1 つの代替手段は、ナビゲーションのマウスの代わりにテンキーを使用するは。 呼ばれる別のオプション`StickyKeys`、ことはできませんを押しながら次の&2; つまたは複数のキー (ctrl キーを押しながら P) などの時に、一度に&1; つのキーを入力して、同じ結果を取得するユーザーを有効にします。       認知を持つユーザーと言語の障害より自分のニーズに合わせてソフトウェア プログラムを設計することができます。 たとえば、工夫のシーケンス処理、表示、少ない語、および小学校標準を対象とした読み取りレベルを使用すると、これらのユーザーが利用できるようになります。       強制疾患の方で、ユーザーになるようなパターンを排除するソフトウェア プログラムをデザインできます。       ユーザー補助アプリケーションに関する情報など、ユーザー補助機能に関する詳細については、MSDN ライブラリまたは Microsoft Web サイトでの Microsoft ユーザー補助機能のドキュメントを参照してください。      > [!NOTE] > AccessibleObject を使用するのへの参照を追加する必要があります、`Accessibility`と一緒にインストールされたアセンブリ、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]です。 Windows フォームは、Active Accessibility 2.0 のみをサポートします。"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the AccessibleObject and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/csharp/t-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/cpp/t-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Runtime.InteropServices.StandardOleMarshalObject
  implements:
  - Accessibility.IAccessible
  - System.Reflection.IReflect
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>クラスです。"
  remarks: "通常、このメソッドを使用してアクセス可能なオブジェクトを作成するときに、プロパティの独自の実装と、アプリケーションに固有の機能を提供するクラスのメソッドを提供しています。"
  syntax:
    content: public AccessibleObject ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  id: Accessibility#IAccessible#accChildCount
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このオブジェクトに属する子インターフェイスの数を取得します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: int Accessibility.IAccessible.accChildCount { get; }
    return:
      type: System.Int32
      description: "このオブジェクトに属する子ユーザー補助オブジェクトの数。 オブジェクトには、子オブジェクトがなければ、この値は 0 です。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  id: Accessibility#IAccessible#accDoDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定されたオブジェクトの既定のアクションを実行します。 すべてのオブジェクトでは、既定のアクションがあります。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: void IAccessible.accDoDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "子の ID、 <xref href=&quot;Accessibility.IAccessible&quot;> </xref>ユーザー補助オブジェクトを表すインターフェイス/子の ID のペア。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  id: Accessibility#IAccessible#accFocus
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "キーボード フォーカスを持つオブジェクトを取得します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;です。"
  remarks: "IAccessible.accFocus プロパティの戻り値の型は、キーボード フォーカスがあるオブジェクトに依存します。 次の表では、IAccessible.accFocus プロパティが返すオブジェクトの種類について説明します。      |型 |説明 |  |----------|-----------------|  |`null`|このオブジェクトは、キーボード フォーカス自体を持たないし、キーボード フォーカスを持っている子が含まれていない |。  | 整数 | 現在のオブジェクトがキーボード フォーカスがある場合は&0;それ以外の場合、キーボード フォーカスを持つ子ユーザー補助オブジェクトの子の ID です |。  |<xref:Accessibility.IAccessible>|キーボード フォーカスを持っている子ユーザー補助オブジェクトです |。      このメンバーは、明示的なインターフェイス メンバーの実装</xref:Accessibility.IAccessible>。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: object Accessibility.IAccessible.accFocus { get; }
    return:
      type: System.Object
      description: "キーボード フォーカスを持つオブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  id: Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した画面座標にある子オブジェクトを取得します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;です。"
  remarks: "次の表では、IAccessible.accHitTest メソッドが返すことができるオブジェクトの種類について説明します。      |型 |説明 |  |----------|-----------------|  |<xref:Accessibility.IAccessible>|指定した方向でアクセス可能なオブジェクトです |。  | 整数 |&0; 指定されたポイントが、現在のオブジェクトである場合、またはオブジェクトの境界の外それ以外の場合、指定した方向でのユーザー補助オブジェクトを識別する子の ID です |。      このメンバーは、明示的なインターフェイス メンバーの実装</xref:Accessibility.IAccessible>。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: object IAccessible.accHitTest (int xLeft, int yTop);
    parameters:
    - id: xLeft
      type: System.Int32
      description: "水平方向の座標。"
    - id: yTop
      type: System.Int32
      description: "垂直座標。"
    return:
      type: System.Object
      description: "指定された時点でユーザー補助オブジェクト<code> xLeft </code>と<code> yTop</code>です。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  id: Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オブジェクトの現在の画面位置を取得します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);
    parameters:
    - id: pxLeft
      type: System.Int32
      description: "このメソッドが戻るとき、オブジェクトの左端の x 座標を格納します。 このパラメーターは初期化せずに渡されます。"
    - id: pyTop
      type: System.Int32
      description: "このメソッドが戻るときに、オブジェクトの上端の y 座標が含まれています。 このパラメーターは初期化せずに渡されます。"
    - id: pcxWidth
      type: System.Int32
      description: "このメソッドが戻るときに、オブジェクトの幅が含まれています。 このパラメーターは初期化せずに渡されます。"
    - id: pcyHeight
      type: System.Int32
      description: "このメソッドが戻るときに、オブジェクトの高さが含まれています。 このパラメーターは初期化せずに渡されます。"
    - id: childID
      type: System.Object
      description: "ユーザー補助オブジェクトの ID 番号。 このパラメーターは、オブジェクト、またはオブジェクトの子オブジェクトのいずれかの場所を取得する子 ID の場所を取得する場合は 0 です。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  id: Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在のオブジェクトを基準としたユーザー補助オブジェクトに移動します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;です。"
  remarks: "次の表では、IAccessible.accNavigate メソッドが返すことができるオブジェクトの種類について説明します。      |型 |説明 |  |----------|-----------------|  |`null`|指定した方向でユーザー補助オブジェクトがありません |。  |<xref:Accessibility.IAccessible>|指定した方向でアクセス可能なオブジェクトです |。  | 整数 |指定した方向でのユーザー補助オブジェクトを識別する子の ID</xref:Accessibility.IAccessible> 。 ユーザー補助オブジェクトにアクセスする<xref:Accessibility.IAccessible>親と子の ID を使用します |。      このメンバーは、明示的なインターフェイス メンバーの実装</xref:Accessibility.IAccessible>。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: object IAccessible.accNavigate (int navDir, object childID);
    parameters:
    - id: navDir
      type: System.Int32
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref>移動する方向を指定する列挙値。"
    - id: childID
      type: System.Object
      description: "ユーザー補助オブジェクトの ID 番号。 このパラメーターは、オブジェクト、またはオブジェクトの子オブジェクトのいずれかからを起動する場合は子 ID から起動する場合は 0 です。"
    return:
      type: System.Object
      description: "指定された値に配置されているユーザー補助オブジェクト<code> navDir</code>です。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  id: Accessibility#IAccessible#accParent
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "親を取得します。 このオブジェクトのユーザー補助オブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみの<xref:System.Windows.Forms.AccessibleObject>インスタンスが、 <xref:Accessibility.IAccessible>.. インターフェイス</xref:Accessibility.IAccessible>にキャストされます。</xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accParent { get; }
    return:
      type: System.Object
      description: "<xref href=&quot;Accessibility.IAccessible&quot;> </xref>ユーザー補助オブジェクトの親を表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>親オブジェクトが存在しない場合。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  id: Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "選択範囲を変更するか、ユーザー補助オブジェクトのキーボード フォーカスを移動します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;です。"
  remarks: "これを以下に示します<xref:System.Windows.Forms.AccessibleSelection>に呼び出すときに指定する値`Select`複雑な選択操作を実行します</xref:System.Windows.Forms.AccessibleSelection>。      |操作 |フラグの組み合わせ |  |---------------|----------------------|  |クリックをシミュレートするために |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |CTRL + クリックをシミュレートすることで、ターゲット項目を選択する |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |CTRL + クリックをシミュレートすることで、ターゲット項目の選択を解除する |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |シミュレート shift キーを押しながらクリックを |<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  |オブジェクトの範囲を選択し、最後のオブジェクトにフォーカスを移す |指定<xref:System.Windows.Forms.AccessibleSelection>開始オブジェクトの選択範囲のアンカーを設定する</xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection>。 選択をもう一度呼び出すし、<xref:System.Windows.Forms.AccessibleSelection>を指定または<xref:System.Windows.Forms.AccessibleSelection>最後のオブジェクトにします |。  |すべてのオブジェクトの選択を解除する |指定<xref:System.Windows.Forms.AccessibleSelection>で任意のオブジェクト</xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection></xref:System.Windows.Forms.AccessibleSelection>。 このフラグは、選択した&1; つを除くすべての選択したオブジェクトを選択解除します。 選択をもう一度呼び出すし、同じオブジェクトに対して<xref:System.Windows.Forms.AccessibleSelection>を指定します |。      このメンバーは、明示的なインターフェイス メンバーの実装</xref:System.Windows.Forms.AccessibleSelection>。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: void IAccessible.accSelect (int flagsSelect, object childID);
    parameters:
    - id: flagsSelect
      type: System.Int32
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;> </xref>値。"
    - id: childID
      type: System.Object
      description: "選択範囲の実行対象のユーザー補助オブジェクトの ID 番号。 このパラメーターは、オブジェクト、またはオブジェクトの子オブジェクトのいずれかを選択する子 ID を選択する場合は 0 です。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  id: Accessibility#IAccessible#accSelection
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "選択された子ユーザー補助オブジェクトのオブジェクトを取得します。 このメンバーの説明は、次を参照してください。 &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;です。"
  remarks: "次の表に、IAccessible.accSelection プロパティが返すオブジェクトの種類 |型 |説明 |  |----------|-----------------|  |`null`|子オブジェクトが選択されていません |。  |<xref:Accessibility.IAccessible>|選択されている子ユーザー補助オブジェクトです |。  | 整数 |選択されているユーザー補助オブジェクトを識別する子の ID</xref:Accessibility.IAccessible> 。 ユーザー補助オブジェクトにアクセスする<xref:Accessibility.IAccessible>親と子の ID を使用します |。  |`IEnumVARIANT`|選択されている子オブジェクトの一覧です |。      このメンバーは、明示的なインターフェイス メンバーの実装</xref:Accessibility.IAccessible>。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:Accessibility.IAccessible>インターフェイス</xref:Accessibility.IAccessible></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: object Accessibility.IAccessible.accSelection { get; }
    return:
      type: System.Object
      description: "ユーザー補助オブジェクトの選択されている子オブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  id: Accessibility#IAccessible#get_accChild(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accChild (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.Object
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  id: Accessibility#IAccessible#get_accDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  id: Accessibility#IAccessible#get_accDescription(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDescription (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  id: Accessibility#IAccessible#get_accHelp(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accHelp (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  id: Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);
    parameters:
    - id: pszHelpFile
      type: System.String
      description: "追加します。"
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.Int32
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  id: Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accKeyboardShortcut (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  id: Accessibility#IAccessible#get_accName(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accName (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  id: Accessibility#IAccessible#get_accRole(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accRole (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.Object
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  id: Accessibility#IAccessible#get_accState(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accState (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.Object
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  id: Accessibility#IAccessible#get_accValue(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accValue (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  id: Accessibility#IAccessible#set_accName(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accName (object childID, string newName);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    - id: newName
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  id: Accessibility#IAccessible#set_accValue(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accValue (object childID, string newValue);
    parameters:
    - id: childID
      type: System.Object
      description: "追加します。"
    - id: newValue
      type: System.String
      description: "追加します。"
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Bounds
  id: Bounds
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトのサイズと場所を取得します。"
  remarks: "境界のプロパティは、画面座標で、オブジェクトの外接する四角形を取得します。 オブジェクトの四角形以外の場合、このプロパティはオブジェクト領域全体を完全に囲む最小の四角形を表します。 そのため、リスト ビュー項目などの四角形以外のオブジェクトで、オブジェクトの外接する四角形の座標に失敗し、テストされる場合は、呼び出すことによって、<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>メソッド、ため<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>ピクセルごとに、オブジェクトの境界を決定します</xref:System.Windows.Forms.AccessibleObject.HitTest%2A></xref:System.Windows.Forms.AccessibleObject.HitTest%2A>。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Bounds property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_14_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_14_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_14_1.cpp)]"
  syntax:
    content: public virtual System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>ユーザー補助オブジェクトの境界を表すです。"
  overload: System.Windows.Forms.AccessibleObject.Bounds*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールの境界を取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  id: DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オブジェクトの既定のアクションを説明する文字列を取得します。 すべてのオブジェクトでは、既定のアクションがあります。"
  remarks: "文字列では、いないどのようなオブジェクトがその結果、オブジェクトに対して実行される操作について説明します。 ツール バー ボタンでドキュメントを印刷する場合は、「現在のドキュメントを印刷します」するのではなく、&quot;Press&quot;の既定のアクション オブジェクトの既定のアクションの値とを混同しないでください。"
  syntax:
    content: public virtual string DefaultAction { get; }
    return:
      type: System.String
      description: "オブジェクトは、既定のアクションの説明または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このオブジェクトには、既定のアクションがあるない場合。"
  overload: System.Windows.Forms.AccessibleObject.DefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールの既定のアクションを取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Description
  id: Description
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したオブジェクトの外観を説明する文字列を取得します。 すべてのオブジェクトには、内容があります。"
  remarks: "このプロパティは、ユーザーからのオブジェクトの外観を示します。"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "オブジェクトのユーザーに視覚的な外観の説明または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトに説明がない場合。"
  overload: System.Windows.Forms.AccessibleObject.Description*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールの説明を取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  id: DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトに関連付けられている既定のアクションを実行します。"
  remarks: "クライアントは、オブジェクトの検査することによって、オブジェクトの既定のアクションを取得できるように<xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>プロパティ</xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>。 クライアントは、オブジェクトの既定のアクションを実行するのに、DoDefaultAction ではなく (サポートされている) 場合、オートメーションを使用できます。 ただし、DoDefaultAction はアクションを使用する最も一般的に、オブジェクトを実行する簡単な方法を提供します。"
  syntax:
    content: public virtual void DoDefaultAction ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールの既定のアクションを実行できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  id: GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したインデックスに対応する子ユーザー補助オブジェクトを取得します。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the GetChild method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the GetChild method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_1_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_1_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_1_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "子ユーザー補助オブジェクトの&0; から始まるインデックス。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>を表す、指定したインデックスに対応する子ユーザー補助オブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.GetChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  id: GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトに属する子の数を取得します。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the GetChildCount method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual int GetChildCount ();
    parameters: []
    return:
      type: System.Int32
      description: "ユーザー補助オブジェクトに属する子の数。"
  overload: System.Windows.Forms.AccessibleObject.GetChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  id: GetFocused
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "キーボード フォーカスを持つオブジェクトを取得します。"
  remarks: "キーボード フォーカスの概念は、アクティブなウィンドウに関連付けられます。 アクティブなウィンドウは、ユーザーが作業をフォア グラウンド ウィンドウです。 キーボード フォーカスを持つオブジェクトとは、アクティブなウィンドウまたはアクティブなウィンドウの子オブジェクトです。       1 つだけのオブジェクトまたはコンテナー内の項目は、任意の時点でフォーカスを持つことができます。 キーボード フォーカスを持つオブジェクトは、必ずしも、選択したオブジェクトではありません。"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetFocused ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>現在フォーカスがある子を指定します。 このメソッドは、オブジェクト自体にフォーカスが置かれている場合、呼び出し元のオブジェクトを返します。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトにフォーカスがありません。"
  overload: System.Windows.Forms.AccessibleObject.GetFocused*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールを取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  id: GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトに関連付けられているヘルプ ファイルへのヘルプ トピックの識別子と、パスの識別子を取得します。"
  remarks: "<xref:System.Windows.Forms.AccessibleObject>Windows のヘルプ システムを使用して、適切な<xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName><xref:System.Windows.Forms.Help>。</xref:System.Windows.Forms.Help>メソッド</xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName>にファイル名とトピック ID を渡すことができます</xref:System.Windows.Forms.AccessibleObject>のヘルプを表示するには"
  syntax:
    content: public virtual int GetHelpTopic (out string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "戻り時に、このプロパティには、ユーザー補助オブジェクトに関連付けられているヘルプ ファイルへのパスが含まれています。"
    return:
      type: System.Int32
      description: "ヘルプ トピック、またはヘルプ トピックが存在しない場合は-1 の識別子。 戻り時に、 <code> fileName </code>パラメーターには、ユーザー補助オブジェクトに関連付けられているヘルプ ファイルへのパスが含まれています。"
  overload: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールのヘルプ トピックを取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  id: GetSelected
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "現在選択されている子を取得します。"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetSelected ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>現在選択されている子を表すです。 このメソッドは、オブジェクト自体が選択されている場合、呼び出し元のオブジェクトを返します。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、子が選択されていないと、オブジェクト自体にフォーカスがないです。"
  overload: System.Windows.Forms.AccessibleObject.GetSelected*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "選択された子を取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Help
  id: Help
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オブジェクトの機能またはオブジェクトの使用方法の説明を取得します。"
  syntax:
    content: public virtual string Help { get; }
    return:
      type: System.String
      description: "A<xref:System.String>オブジェクトの機能またはオブジェクトの使用方法の説明を格納している</xref:System.String>。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ヘルプが定義されていない場合。"
  overload: System.Windows.Forms.AccessibleObject.Help*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールのヘルプ文字列を取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  id: HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定した画面座標にある子オブジェクトを取得します。"
  remarks: "リスト ビュー項目などの四角形以外のオブジェクトで、オブジェクトの座標の外接する四角形によって取得された<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>失敗する場合、HitTest でテスト HitTest ピクセルごとに、オブジェクトの境界と判断されるためです</xref:System.Windows.Forms.AccessibleObject.Bounds%2A>。"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "水平画面座標。"
    - id: y
      type: System.Int32
      description: "垂直画面座標。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>を表す、指定した画面座標にある子オブジェクト。 このメソッドは、オブジェクト自体が指定された場所にある場合、呼び出し元のオブジェクトを返します。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>テスト位置にオブジェクトがない場合。"
  overload: System.Windows.Forms.AccessibleObject.HitTest*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールにヒットすることはできませんをテストします。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  id: KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ショートカット キーまたはユーザー補助オブジェクトのアクセス キーを取得します。"
  remarks: "ニーモニックとも呼ばれる、アクセス キーは、メニューのメニュー項目、ボタン、または他のコントロールのラベルのテキストに下線付き文字です。 開くには、alt キーを押しながら F など、指定された下線付きのキーを押しながら ALT キーを押すことによって、ユーザーがメニューを表示するなど、`File`メニュー。 メニュー項目のアクセス キーを使用して、項目を含むメニューがアクティブでなければなりません。 ツールバーのボタンとメニュー項目などのコントロールには、関連付けられたショートカット キー多くの場合があります。 メニュー項目には、アクセス キーと関連付けられているショートカット キーの両方を持つことができます。 KeyboardShortcut プロパティの値が&1; つの文字の場合は、アクセス キーが想定することができます。"
  syntax:
    content: public virtual string KeyboardShortcut { get; }
    return:
      type: System.String
      description: "ショートカット キーまたはユーザー補助オブジェクトのアクセス キーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>かどうかは、オブジェクトに関連付けられているショートカット キーはありません。"
  overload: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールのショートカット キーを取得できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Name
  id: Name
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはオブジェクト名を設定します。"
  remarks: "Name プロパティは、識別、検索、またはユーザーのオブジェクトを通知するクライアントによって使用される文字列です。 子オブジェクトの名前にアクセスするに最初に呼び出す必要があります<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を取得している名前を持つ子のインデックスを持つ</xref:System.Windows.Forms.AccessibleObject.GetChild%2A>。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Name property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "オブジェクト名または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>プロパティが設定されていない場合。"
  overload: System.Windows.Forms.AccessibleObject.Name*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "コントロールの名前を取得または設定することはできません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  id: Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "別のユーザー補助オブジェクトに移動します。"
  remarks: "空間と、論理の両方のナビゲーションは、常に、コンテナー内のユーザー インターフェイス要素に制限します。 空間のナビゲーションを使用して、クライアントは、開始オブジェクトの兄弟にのみ移動できます。 論理ナビゲーションに使用される、ナビゲーション フラグによって、クライアントはいずれかの子または開始オブジェクトの兄弟を移動できます。 このメソッドは、選択項目またはフォーカスには変更されません。 フォーカスを変更するか、オブジェクトを選択するには、 <xref:System.Windows.Forms.AccessibleObject.Select%2A>。</xref:System.Windows.Forms.AccessibleObject.Select%2A>を使用します。 Navigate メソッドを定義済みの画面位置を持つユーザー インターフェイス要素のみを取得します。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Navigate method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/b72d660b-5a96-4d26-9d1d-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/b72d660b-5a96-4d26-9d1d-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/b72d660b-5a96-4d26-9d1d-_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);
    parameters:
    - id: navdir
      type: System.Windows.Forms.AccessibleNavigation
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref>値。"
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>の&1; つを表す、 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref>値。"
  overload: System.Windows.Forms.AccessibleObject.Navigate*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "ナビゲーションに失敗します。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Parent
  id: Parent
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトの親を取得します。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Parent property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_9_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_9_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_9_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Parent { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 、アクセス可能なオブジェクトの親を表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>親オブジェクトが存在しない場合。"
  overload: System.Windows.Forms.AccessibleObject.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Role
  id: Role
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトのロールを取得します。"
  remarks: "オブジェクトの役割は、オブジェクトの関数について説明することができます。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Role property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_13_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_13_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_13_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleRole Role { get; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref>値、または<xref href=&quot;System.Windows.Forms.AccessibleRole&quot;></xref>ロールが指定されていない場合。"
  overload: System.Windows.Forms.AccessibleObject.Role*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  id: Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "選択範囲を変更するか、ユーザー補助オブジェクトのキーボード フォーカスを移動します。"
  remarks: "アプリケーションは、このメソッドを使用して、複雑な選択操作を実行できます。       これを以下に示します<xref:System.Windows.Forms.AccessibleSelection>複雑な選択操作を実行する呼び出し時に指定する値を選択します</xref:System.Windows.Forms.AccessibleSelection>。      |操作 |フラグの組み合わせ |  |---------------|----------------------|  |クリックをシミュレートするために |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>**注:**ユーザーは、独自のアプリケーション内から呼び出された場合は、この組み合わせには、目的のコントロールは選択されません</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>。 目的のエフェクト、ただし、外部アプリケーションから呼び出された場合です |。  |CTRL + クリックをシミュレートすることで、ターゲット項目を選択する |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |CTRL + クリックをシミュレートすることで、ターゲット項目の選択を解除する |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |シミュレート shift キーを押しながらクリックを |<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  |オブジェクトの範囲を選択し、最後のオブジェクトにフォーカスを移す |指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>開始オブジェクトの選択範囲のアンカーを設定する</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>。 選択してもう一度指定して<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>`OR`<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>最後のオブジェクトにします |。  |すべてのオブジェクトの選択を解除する |指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>にあるオブジェクトに対する</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>。</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> このフラグは、選択した&1; つを除くすべての選択したオブジェクトを選択解除します。 選択をもう一度呼び出すし、指定<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>同じオブジェクトです |</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 。"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Select method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/f0c27e30-bd9a-4501-a7a0-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/f0c27e30-bd9a-4501-a7a0-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/f0c27e30-bd9a-4501-a7a0-_1.cpp)]"
  syntax:
    content: public virtual void Select (System.Windows.Forms.AccessibleSelection flags);
    parameters:
    - id: flags
      type: System.Windows.Forms.AccessibleSelection
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;> </xref>値。"
  overload: System.Windows.Forms.AccessibleObject.Select*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "選択範囲を実行できません。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.State
  id: State
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "ユーザー補助オブジェクトの状態を取得します。"
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the State property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_10_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_10_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_10_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleStates State { get; }
    return:
      type: System.Windows.Forms.AccessibleStates
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.AccessibleStates&quot;> </xref>値、または<xref href=&quot;System.Windows.Forms.AccessibleStates&quot;></xref>状態が設定されていない場合、します。"
  overload: System.Windows.Forms.AccessibleObject.State*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;オブジェクトの指定したフィールドに対応して、バインディング フラグ。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "検索するフィールドの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.FieldInfo
      description: "A &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;オブジェクトで指定された検索の制約を満たす名前付きオブジェクトのフィールド情報を含む<code> bindingAttr</code>です。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "オブジェクトでは、同じ名前の複数のフィールドを実装します。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "配列を取得&lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;現在のクラスのすべてのフィールドに対応するオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;です。"
  remarks: "各フィールドは、一意の名前でなければなりません。 <xref:System.Reflection.BindingFlags?displayProperty=fullName>フラグは、検索にパブリックでないフィールドが含まれることを指定します</xref:System.Reflection.BindingFlags?displayProperty=fullName>。 <xref:System.Reflection.BindingFlags?displayProperty=fullName>フラグは、パブリック フィールドが検索対象に含まれることを指定します</xref:System.Reflection.BindingFlags?displayProperty=fullName>。       このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.FieldInfo[]
      description: "配列&lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt;オブジェクトで指定された検索の制約を満たす、このリフレクション オブジェクトのすべてのフィールド情報を含む<code> bindingAttr</code>です。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "配列を取得&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;または指定した名前に一致するすべてのメンバーにすべてのパブリック メンバーに対応するオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメンバーの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "配列&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; name パラメーターと一致するオブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "配列を取得&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;か、または現在のクラスのすべてのメンバーにすべてのパブリック メンバーに対応するオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.MemberInfo[]
      description: "配列&lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt;このリフレクション オブジェクトのすべてのメンバー情報を含むオブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;下で、指定したメソッドに対応するオブジェクトが検索制約を指定します。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメンバーの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.MethodInfo
      description: "A &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;オブジェクトで指定されたメソッド名と検索の制約に基づくと一致するメソッドの情報を含む<code> bindingAttr</code>です。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "オブジェクトは、同じ名前の複数のメソッドを実装します。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;オーバー ロードされたメソッドの中から選択する型の配列を使用して、指定したメソッドに対応するオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;です。"
  remarks: "戻り値は、メソッド名を基に一致する、<xref:System.Reflection.BindingFlags?displayProperty=fullName>列挙型で指定された型変換の種類、`binder`パラメーターでは、オーバー ロードは、および<xref:System.Reflection.ParameterInfo?displayProperty=fullName>メソッドのシグネチャを記述する</xref:System.Reflection.ParameterInfo?displayProperty=fullName></xref:System.Reflection.BindingFlags?displayProperty=fullName>。       このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメンバーの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    - id: binder
      type: System.Reflection.Binder
      description: "実装するオブジェクト<xref href=&quot;System.Reflection.Binder&quot;> </xref>、このメソッドに関連するプロパティを格納します。"
    - id: types
      type: System.Type[]
      description: "オーバー ロードされたメソッドの中から選択に使用する配列。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "バインドの種類が変更されているパラメーター シグネチャで動作させるために使われるパラメーター修飾子の配列。"
    return:
      type: System.Reflection.MethodInfo
      description: "指定したすべてのパラメーターに一致する要求されたメソッドです。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "オブジェクトは、同じ名前の複数のメソッドを実装します。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "配列を取得&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;すべてのパブリック メソッドまたは現在のクラスのすべてのメソッドを持つオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.MethodInfo[]
      description: "配列&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;オブジェクト メソッドを含むすべて、このリフレクション オブジェクトの定義で指定された検索の制約を満たしている<xref uid=&quot;langword_csharp_bindingAttr&quot; name=&quot;bindingAttr&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "配列を取得&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;または現在のクラスのすべてのプロパティすべてのパブリック プロパティに対応するオブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.PropertyInfo[]
      description: "配列&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;リフレクション オブジェクトで定義されたすべてのプロパティのオブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;下で、指定したプロパティに対応するオブジェクトが検索制約を指定します。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "検索するプロパティの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;配置プロパティで指定された検索の制約を満たすオブジェクト<code> bindingAttr </code>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、プロパティが見つかりませんでした。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "オブジェクトは、同じ名前の複数のメソッドを実装します。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;で指定したプロパティに対応するオブジェクトが検索制約を指定します。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメンバーの名前。"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "検索の制御に使用されるバインディング属性。"
    - id: binder
      type: System.Reflection.Binder
      description: "このメソッドに関連するプロパティを含むバインダーを実装するオブジェクト。"
    - id: returnType
      type: System.Type
      description: "オーバー ロードされたメソッドの中から選択に使用する配列。"
    - id: types
      type: System.Type[]
      description: "バインドの種類が変更されているパラメーター シグネチャで動作させるために使われるパラメーター修飾子の配列。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "パラメーター修飾子の選択に使用する配列。"
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;リフレクション オブジェクトの指定した名前のプロパティが保持されていた場合は、配置プロパティのオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、プロパティが見つかりませんでした。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定したメンバーを呼び出します。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;です。"
  remarks: "`invokeAttr`コンス トラクター、メソッド、プロパティ、またはフィールドをパラメーターとして使用することがあります。 適切な呼び出し属性を指定する必要があります。 空の文字列を渡すことによって、クラスの既定のメンバーを呼び出す (&quot;&quot;) としてメンバーの名前。       `modifiers`パラメーターと同じ長さには、`args`メタデータで呼び出されるメンバーの引数の属性を表すパラメーター。 パラメーターは、次の属性を持つことができます: pdIn、pdOut、pdRetval、属性、および pdHasDefault です。 これらを [In]、[Out]、[retval]、[オプション]、および既定のパラメーターでは、それぞれします。       このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメンバーの名前。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "1 つ、 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref>呼び出し属性。"
    - id: binder
      type: System.Reflection.Binder
      description: "1 つ、 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref>ビット フラグです。 実装が含まれ、このメソッドに関連するプロパティです。"
    - id: target
      type: System.Object
      description: "指定したメンバーを呼び出す対象となるオブジェクト。 このパラメーターには、静的メンバーは無視されます。"
    - id: args
      type: System.Object[]
      description: "呼び出される数、順序、およびメンバーのパラメーターの型を含むオブジェクトの配列。 これは、パラメーターがない場合、空の配列です。"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "配列<xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>オブジェクト。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "インスタンス&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;型の強制変換を制御するために使用します。"
    - id: namedParameters
      type: System.String[]
      description: "パラメーターの文字列配列。"
    return:
      type: System.Object
      description: "指定されたメンバー。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1 つ以上の引数は、フィールド設定操作に指定します。"
  - type: System.MissingFieldException
    commentId: T:System.MissingFieldException
    description: "フィールドまたはプロパティが見つかりません。"
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "メソッドが見つかりません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "せずに、必要なプライベート メンバーが呼び出される<xref href=&quot;System.Security.Permissions.ReflectionPermission&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  id: System#Reflection#IReflect#UnderlyingSystemType
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表す、基になる型を取得、 <xref href=&quot;System.Reflection.IReflect&quot;> </xref>オブジェクト。 このメンバーの説明は、次を参照してください。 &lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Forms.AccessibleObject>にインスタンスをキャスト、<xref:System.Reflection.IReflect>インターフェイス</xref:System.Reflection.IReflect></xref:System.Windows.Forms.AccessibleObject>。"
  syntax:
    content: Type System.Reflection.IReflect.UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "基になる型を表す、 <xref href=&quot;System.Reflection.IReflect&quot;> </xref>オブジェクト。"
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  id: UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オブジェクトのインスタンスを<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>オブジェクトのハンドルに基づいています。"
  remarks: "サーバー アプリケーションは、システム指定のオブジェクトに似ていますが、カスタムの UI オブジェクトが含まれている場合、この関数を呼び出すことができます。 サーバー アプリケーションのコール`CreateStdAccessibleObject`をオーバーライドし、<xref:Accessibility.IAccessible>メソッドとプロパティは、オブジェクトのカスタムの一致するように、必要に応じて</xref:Accessibility.IAccessible>。 この方法により、完全に実装するすべての作業サーバー開発者、<xref:Accessibility.IAccessible>プロパティとメソッド</xref:Accessibility.IAccessible>。 この関数がに似ていますが`CreateStdAccessibleProxy`する点を除いて、`CreateStdAccessibleProxy`一方、クラス名をパラメーターとして指定することができます`CreateStdAccessibleObject`に関連付けられているクラス名を使用して、`hwnd`です。       このバージョンの呼び出し、`UseStdAccessible`クライアントのオブジェクト id で、次の&2; つのパラメーターのバージョンの呼び出しと同じです。"
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>オブジェクトのハンドルを格納している</xref:System.IntPtr>。"
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  id: UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "オブジェクトのインスタンスを<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>ハンドルとオブジェクトのオブジェクト id に基づきます。"
  remarks: "メソッドとシステム標準のユーザー インターフェイス要素の指定した型のプロパティをユーザー補助オブジェクトを作成します。       サーバー アプリケーションは、システム指定のオブジェクトに似ていますが、カスタムの UI オブジェクトが含まれている場合、この関数を呼び出すことができます。 サーバー アプリケーションのコール`CreateStdAccessibleObject`をオーバーライドし、<xref:Accessibility.IAccessible>メソッドとプロパティは、オブジェクトのカスタムの一致するように、必要に応じて</xref:Accessibility.IAccessible>。 この方法により、完全に実装するすべての作業サーバー開発者、<xref:Accessibility.IAccessible>プロパティとメソッド</xref:Accessibility.IAccessible>。       有効な`objid`値。      |オブジェクト |値 |説明 |  |------------|-----------|-----------------|  |アラート |&0;XFFFFFFF6 |ウィンドウまたはアプリケーションに関連付けられているメッセージを指します |。  |カレット |&0;XFFFFFFF8 |テキストの挿入を指します (キャレット) を横棒グラフのウィンドウ |。  |クライアント |&0;XFFFFFFFC |ウィンドウのクライアント領域を指します。 ほとんどの場合、オペレーティング システムが、フレーム要素を制御し、クライアント オブジェクトには、アプリケーションを制御するすべての要素が含まれています |。  |カーソル |&0;XFFFFFFF7 |マウス ポインターを指します。 システムの&1; つだけのマウス ポインターがあるし、ウィンドウの子ではありません |。  |HSCROLL |&0;XFFFFFFFA |ウィンドウの水平スクロール バーを指します |。  |メニュー |&0;XFFFFFFFD |ウィンドウのメニュー バーを指します |。  |SIZEGRIP |&0;XFFFFFFF9 |ウィンドウのサイズ変更グリップ、ウィンドウ フレームの右下隅にある省略可能なフレーム コンポーネントを指します |。  |サウンド |&0;XFFFFFFF5 |サウンドのオブジェクトを指します。 サウンド オブジェクトは、画面位置または子必要はありませんが、名前と状態の属性を持つ操作を行います。 サウンドの再生アプリケーションの子である |。  |SYSMENU |&0; XFFFFFFFF |ウィンドウのシステム メニューを参照します |。  |TITLEBAR |&0;XFFFFFFFE |ウィンドウのタイトル バーを指します |。  |VSCROLL |&0;XFFFFFFFB |ウィンドウの垂直スクロール バーを指します |。  |ウィンドウ |&0;X00000000 |子オブジェクトではなくウィンドウ自体への参照します |。"
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle, int objid);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>オブジェクトのハンドルを格納している</xref:System.IntPtr>。"
    - id: objid
      type: System.Int32
      description: "オブジェクトの種類を定義する Int、`handle`パラメーターを参照します。"
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Value
  id: Value
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または、ユーザー補助オブジェクトの値を設定します。"
  remarks: "通常、Value プロパティは、オブジェクトに含まれる visual の情報を表します。 値プロパティをサポートしていないすべてのオブジェクト。       ほとんどの場合、オブジェクトを視覚的情報はクライアントに指示するプロパティが使用される値が含まれます。 たとえば、エディット コントロールの値は、それに含まれるテキスト、メニュー項目には、値がありません。       Value プロパティには、ツリー ビュー コントロールなどの場合の階層の情報を提供できます。 ツリー ビュー コントロール内の親オブジェクトは値プロパティ内の情報にはできませんが、コントロール内の各項目は、階層内のレベルを表す&0; から始まる値を持ちます。 最上位アイテムがゼロの値を持つ、第&2; レベルの項目を選択して、1 つの値を持つようにします。      > [!NOTE] > 値が返されますスクロール バーとトラック バーからアクセス可能なオブジェクトが割合を表す 0 ~ 100 の範囲の整数があるためです。"
  syntax:
    content: public virtual string Value { get; set; }
    return:
      type: System.String
      description: "アクセス可能なオブジェクトの値または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトに設定された値がありません。"
  overload: System.Windows.Forms.AccessibleObject.Value*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "値を設定または取得できることはできません。"
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.StandardOleMarshalObject
  isExternal: false
  name: System.Runtime.InteropServices.StandardOleMarshalObject
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingFieldException
  isExternal: true
  name: System.MissingFieldException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Windows.Forms.AccessibleObject.#ctor
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Bounds
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
- uid: System.Windows.Forms.AccessibleObject.Help
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
- uid: System.Windows.Forms.AccessibleNavigation
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleNavigation
  nameWithType: AccessibleNavigation
  fullName: System.Windows.Forms.AccessibleNavigation
- uid: System.Windows.Forms.AccessibleObject.Parent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
- uid: System.Windows.Forms.AccessibleSelection
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleSelection
  nameWithType: AccessibleSelection
  fullName: System.Windows.Forms.AccessibleSelection
- uid: System.Windows.Forms.AccessibleObject.State
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
- uid: System.Windows.Forms.AccessibleStates
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleStates
  nameWithType: AccessibleStates
  fullName: System.Windows.Forms.AccessibleStates
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
- uid: System.Windows.Forms.AccessibleObject.Value
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
- uid: System.Windows.Forms.AccessibleObject.#ctor*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue
- uid: System.Windows.Forms.AccessibleObject.Bounds*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
- uid: System.Windows.Forms.AccessibleObject.DefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction
  nameWithType: AccessibleObject.DoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.GetChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild
  nameWithType: AccessibleObject.GetChild
- uid: System.Windows.Forms.AccessibleObject.GetChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount
  nameWithType: AccessibleObject.GetChildCount
- uid: System.Windows.Forms.AccessibleObject.GetFocused*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused
  nameWithType: AccessibleObject.GetFocused
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic
  nameWithType: AccessibleObject.GetHelpTopic
- uid: System.Windows.Forms.AccessibleObject.GetSelected*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected
  nameWithType: AccessibleObject.GetSelected
- uid: System.Windows.Forms.AccessibleObject.Help*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest
  nameWithType: AccessibleObject.HitTest
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate
  nameWithType: AccessibleObject.Navigate
- uid: System.Windows.Forms.AccessibleObject.Parent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleObject.Select*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select
  nameWithType: AccessibleObject.Select
- uid: System.Windows.Forms.AccessibleObject.State*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects
  nameWithType: AccessibleObject.UseStdAccessibleObjects
- uid: System.Windows.Forms.AccessibleObject.Value*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
