### YamlMime:ManagedReference
items:
- uid: System.Messaging.PeekCompletedEventArgs
  id: PeekCompletedEventArgs
  children:
  - System.Messaging.PeekCompletedEventArgs.AsyncResult
  - System.Messaging.PeekCompletedEventArgs.Message
  langs:
  - csharp
  name: PeekCompletedEventArgs
  nameWithType: PeekCompletedEventArgs
  fullName: System.Messaging.PeekCompletedEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Messaging.MessageQueue.PeekCompleted&quot;> </xref>イベント。 非同期操作を呼び出すと、イベント ハンドラー、このクラスのインスタンスはハンドラーに渡されます。"
  remarks: "を使用するとイベント通知メッセージをピーク (削除せずに読み取られる) を非同期的に、キューからメッセージを処理するメソッドを作成する必要があります。 コードを呼び出す必要があります<xref:System.Messaging.MessageQueue.BeginPeek%2A>非同期処理を開始します</xref:System.Messaging.MessageQueue.BeginPeek%2A>。 を介して、アプリケーションが通知メッセージをピーク時に、<xref:System.Messaging.MessageQueue.PeekCompleted>イベント</xref:System.Messaging.MessageQueue.PeekCompleted>。 PeekCompletedEventArgs のインスタンスは、イベント ハンドラーを呼び出してイベント デリゲートに渡されます。 関連付けられているデータ、<xref:System.Messaging.MessageQueue.PeekCompleted>デリゲートのイベントが含まれている<xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>パラメーター</xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> </xref:System.Messaging.MessageQueue.PeekCompleted> 。       イベントの完了通知を提供する&2; つの方法: イベント通知とコールバック。 PeekCompletedEventArgs は、イベント通知でのみ使用します。 コールバックとイベント通知の比較については、「イベントとを参照してください。 します。MSDN で&quot;コールバック。       PeekCompletedEventArgs を介して非同期操作の終了を開始メッセージへのアクセスを提供する、<xref:System.Messaging.PeekCompletedEventArgs.Message%2A>メンバー</xref:System.Messaging.PeekCompletedEventArgs.Message%2A> 。 これは、メッセージへのアクセスを代替であり、 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName>。</xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName>への呼び出しと同様の動作"
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.PeekCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.PeekCompletedEventHandler>. The event handler, `MyPeekCompleted`, peeks a message and writes its label to the screen.  \n  \n [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/cpp/t-system.messaging.peekc_0_1.cpp)]\n [!code-cs[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/csharp/t-system.messaging.peekc_0_1.cs)]\n [!code-vb[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/visualbasic/t-system.messaging.peekc_0_1.vb)]"
  syntax:
    content: 'public class PeekCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.PeekCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
  fullName: System.Messaging.PeekCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "取得または要求された非同期操作の結果を設定します。"
  remarks: "AsyncResult は、進行中または完了した非同期操作を識別します。 プロパティが完了するにはいくつかの潜在的な非同期操作を特定するのに役立つデータを格納でき、イベント ハンドラーに渡されると、<xref:System.Messaging.MessageQueue.EndPeek%2A>完了した操作に関連付けられているメッセージへのアクセスします</xref:System.Messaging.MessageQueue.EndPeek%2A>。       呼び出すと<xref:System.Messaging.MessageQueue.BeginPeek%2A>、<xref:System.IAsyncResult>場合でも、メッセージ、1 つ存在する場合、まだ取得されていません、操作が完了していないため、すぐに返される</xref:System.IAsyncResult></xref:System.Messaging.MessageQueue.BeginPeek%2A>。 AsyncResult は、非同期操作の状態を示します。 <xref:System.Messaging.MessageQueue.BeginPeek%2A><xref:System.Messaging.MessageQueue.EndPeek%2A>それが完了する</xref:System.Messaging.MessageQueue.EndPeek%2A>まで、操作全体にわたって変更されると、オブジェクトを作成します</xref:System.Messaging.MessageQueue.BeginPeek%2A>"
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "A<xref:System.IAsyncResult>ピーク操作に関連付けられているデータが含まれています</xref:System.IAsyncResult>。"
  overload: System.Messaging.PeekCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.PeekCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.PeekCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
  fullName: System.Messaging.PeekCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "非同期操作に関連付けられたメッセージを取得します。"
  remarks: "メッセージ プロパティは、非同期操作の終了を開始したメッセージを取得するための手段を提供します。       <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName>呼び出される、メッセージ プロパティは読み取り、初めてのために呼び出す必要はありません<xref:System.Messaging.MessageQueue.EndPeek%2A>前に、このプロパティの値を取得します</xref:System.Messaging.MessageQueue.EndPeek%2A>。</xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName>"
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref>非同期操作の最終結果を表すです。"
  overload: System.Messaging.PeekCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "メッセージを取得できませんでした。 非同期操作のタイムアウト時間は過ぎています可能性があります。"
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
  fullName: System.Messaging.PeekCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.PeekCompletedEventArgs.Message
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
  fullName: System.Messaging.PeekCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult*
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
- uid: System.Messaging.PeekCompletedEventArgs.Message*
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
