### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory
  id: WorkflowServiceHostFactory
  children:
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  langs:
  - csharp
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory
  type: Class
  summary: "インスタンスを提供するファクトリ<xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;></xref>管理対象ホスト環境のホスト インスタンスが動的に受信メッセージへの応答に作成された場所でします。"
  remarks: "動的アクティブ化をサポートする管理対象ホスティング環境とは、インターネット インフォメーション サービス (IIS) および Windows プロセス アクティブ化サービス (WAS) です。       <xref:System.ServiceModel.WorkflowServiceHost>WorkflowServiceHostFactory クラスから派生するファクトリの実装も検討してください</xref:System.ServiceModel.WorkflowServiceHost>のカスタム派生物を実装している場合       カスタム派生物を実装している場合<xref:System.ServiceModel.ServiceHostBase>検討してください、ファクトリから派生するファクトリを実装することも<xref:System.ServiceModel.Activation.ServiceHostFactoryBase>直接</xref:System.ServiceModel.Activation.ServiceHostFactoryBase></xref:System.ServiceModel.ServiceHostBase>。"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Activation.WorkflowServiceHostFactory&quot;> </xref>クラスです。"
  syntax:
    content: public WorkflowServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "作成、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 、ワークフロー マークアップ ファイルのファイル名またはワークフロー サービス型の型名と指定されたサービスのベース アドレスを表す文字列から。"
  remarks: "`constructorString`引数は、完全修飾ワークフロー型名か、いる .svc ファイルで宣言されたワークフロー定義ファイルの相対ファイル パス指定できますできます<xref:System.ServiceModel.Activation.ServiceHostFactory>ディレクティブが配置されています</xref:System.ServiceModel.Activation.ServiceHostFactory>。      > [!NOTE] > にルールの定義をワークフロー定義に関連付ける、名前、ルール定義ファイル、.rules 拡張子を持つワークフロー定義ファイルと同じ名前およびワークフロー定義ファイルと同じディレクトリに配置します。 たとえば、ルール定義ファイルという必要があります calculatorserviceworkflow.xoml 同じディレクトリにします。"
  example:
  - "The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow\" %>  \n```  \n  \n The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow.xoml\" %>  \n```"
  syntax:
    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: "ワークフロー サービスまたはワークフロー サービス型の型名を定義するワークフロー マークアップ ファイルのファイル名。"
    - id: baseAddresses
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "A <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>ワークフロー サービスに関連付けられているオブジェクト。 既定の実装を返します、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>指定したベース アドレスを持つオブジェクト。"
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost
