### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "ASP.NET Dynamic Data 機能を使用するデータ バインド コントロールに表示されるデータ フィールドを表します。"
  remarks: "このトピックの「:-[概要](#introduction)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## の概要 DynamicField クラスはなど、データ バインド コントロールで使用<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、表示するコントロールをカスタム ページの ASP.NET Dynamic Data 機能を使用するフィールドの値。</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             DynamicField クラスには、<xref:System.Web.UI.WebControls.BoundField>クラス</xref:System.Web.UI.WebControls.BoundField>のものに類似した機能が用意されています ただし、DynamicField オブジェクトを動的なデータ アプリケーションで使用するためは、次の Dynamic Data 機能を活用を受け取ることができます: - 自動的にデータ型に基づくフィールド テンプレートを使用してフィールドの適切なコントロールを描画します。 フィールド テンプレートは、アプリケーション全体でグローバルに変更できます。      -データベース スキーマに基づく組み込みのデータ検証を提供します。 データ モデルをカスタマイズすることで、検証の種類を追加することもできます。      -データ モデル内の属性を使用して、またはを使用して個々 のフィールドのデータの表示のカスタマイズ、<xref:System.Web.DynamicData.DynamicField.UIHint%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.UIHint%2A>。       DynamicField オブジェクトを使用して各フィールドの表示、`DynamicControl`コントロール。 DynamicField オブジェクトに表示するデータ フィールドを指定するには、設定、<xref:System.Web.DynamicData.DynamicField.DataField%2A>プロパティ フィールドの名前にします</xref:System.Web.DynamicData.DynamicField.DataField%2A>。 フィールドの値を設定して、カスタム書式指定文字列を適用することができます、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>。 既定では、データ バインド コントロールが読み取り専用モードの場合にのみ、書式指定文字列はフィールド値に適用します。 書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値を適用する設定、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>プロパティを`true`</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>。 フィールドの値が場合`null`を設定してカスタムのキャプションを表示することができます、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>。 DynamicField オブジェクトは、空の文字列にも自動的に変換できます (&quot;&quot;) を設定して値を null 値をフィールド、<xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>プロパティを`true`</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.DynamicData.DynamicField>クラス</xref:System.Web.DynamicData.DynamicField>の新しいインスタンスを初期化するためにこのコンス トラクターを使用します。 このコンス トラクターは、フィールドを動的に作成されたデータ バインド コントロールに追加する際に通常使用されます。       動的に追加する、<xref:System.Web.DynamicData.DynamicField>データ バインド コントロールにオブジェクトを新規作成<xref:System.Web.DynamicData.DynamicField>オブジェクト、そのプロパティを設定し、データ バインド コントロールのフィールド コレクションに追加します</xref:System.Web.DynamicData.DynamicField></xref:System.Web.DynamicData.DynamicField>。 たとえば、使用している場合、<xref:System.Web.UI.WebControls.GridView>コントロールを追加、<xref:System.Web.DynamicData.DynamicField>オブジェクトを<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションです</xref:System.Web.UI.WebControls.GridView.Columns%2A></xref:System.Web.DynamicData.DynamicField></xref:System.Web.UI.WebControls.GridView>。      > [!NOTE] > フィールドは、データ バインド コントロールを動的に追加することができます、強くお勧めことフィールド静的に宣言されていると、表示するか非表示に必要に応じて。 すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが縮小します。"
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定があるかどうか、書式設定された文字列がある文字列を示す値を指定、<xref:System.Web.DynamicData.DynamicField.DataFormatString*>データ フィールドが編集モードの場合、フィールド値にプロパティが適用されます</xref:System.Web.DynamicData.DynamicField.DataFormatString*>。"
  remarks: "データ バインド コントロール (など<xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.GridView>) ユーザーが読み取り、編集、またはレコードを挿入できるようにするさまざまな表示モードがあります</xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>。 既定では、書式指定文字列を指定して、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>プロパティがフィールドの値、データ バインド コントロールが読み取り専用モードの場合のみに適用します</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>。 書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値を適用する、ApplyFormatInEditMode プロパティを設定`true`です。      > [!NOTE] > A<xref:System.Web.DynamicData.DynamicField>オブジェクトは自動的に削除されないデータ ソースのフィールドが更新されたときに書式設定します</xref:System.Web.DynamicData.DynamicField>。 格納されている値の一部として書式設定したくない場合は、書式設定をプログラムで削除する必要があります。"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> 、それ以外の編集モードで書式設定を適用<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得、 <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref>オブジェクトこの<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>オブジェクトに関連付けられています。"
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "メタ列です。"
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "変更するメカニズムを提供、 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref>によって作成されたオブジェクト、<xref:System.Web.DynamicData.DynamicField.InitializeCell*>メソッド</xref:System.Web.DynamicData.DynamicField.InitializeCell*>。"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "変更するコントロール。"
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定を示す値の文字列値を空にするかどうか (&quot;&quot;) データ ソースのデータ フィールドが更新されたときに null 値に自動的に変換します。"
  remarks: "場合がありますユーザーは、フィールドの値を更新またはレコードを挿入するときに、空の文字列を入力する可能性があります。 ConvertEmptyStringToNull プロパティを使用すると、データ ソースのデータ フィールドが更新されたときに空の文字列値が自動的に null に変換するかどうかを指定できます。       既定では、<xref:System.Web.DynamicData.DynamicField>オブジェクトには、null 値が空の文字列として表示されます</xref:System.Web.DynamicData.DynamicField>。 表示するには、別の値を設定、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.Parameter>データ ソースのオブジェクトを制御する<xref:System.Web.DynamicData.DynamicField>オブジェクトのバインドも<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>をという名前のプロパティを持つ先</xref:System.Web.DynamicData.DynamicField>の親コントロール</xref:System.Web.UI.WebControls.Parameter> このプロパティは、同じ関数を実行します。 両方のプロパティを適切に設定することを確認します。"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動的に空の文字列値を null 値に変換するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "現在のプロパティをコピー <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>を指定したオブジェクト<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>オブジェクト。"
  remarks: "CopyProperties メソッドは、ヘルパー メソッドです。 によって使用されている、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>メソッド、現在のプロパティをコピーする<xref:System.Web.DynamicData.DynamicField>オブジェクトを<xref:System.Web.DynamicData.DynamicField>で渡されるオブジェクト、`newField`パラメーター</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 。"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 、現在のプロパティをコピーする<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>にします。"
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "派生するクラスのメカニズムを備えています<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>をオーバーライドする方法、 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref>オブジェクトを作成します。"
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "新しい動的コントロールです。"
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "作成しの新しいインスタンスを返します、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>クラスです。"
  remarks: "CreateField メソッドは、ヘルパー メソッドです。 によって使用されている、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>、空を作成するメソッド<xref:System.Web.DynamicData.DynamicField>オブジェクト</xref:System.Web.DynamicData.DynamicField></xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>。"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新しいインスタンス、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>クラスです。"
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定にバインドするデータ フィールドの名前、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>するオブジェクトします。"
  remarks: "DataField プロパティにバインドするデータ フィールドの指定を使用して、<xref:System.Web.DynamicData.DynamicField>オブジェクト</xref:System.Web.DynamicData.DynamicField>。 データ フィールドには、列名または、外部キー列、リレーションシップの名前を指定できます。       によって既定では、指定したデータ フィールドが表示される、<xref:System.Web.DynamicData.DynamicField>オブジェクトのフィールドのデータ型に関連付けられているフィールド テンプレートを使用します</xref:System.Web.DynamicData.DynamicField>。 データ フィールドの設定によって表示されるフィールド テンプレートを変更することができます、<xref:System.Web.DynamicData.DynamicField.UIHint%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.UIHint%2A>。 設定して、表示されるテキストをフォーマットすることも、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>。 フィールドの値が場合`null`、空の文字列 (&quot;&quot;) が既定では、値の表示されます。 別のキャプションを指定するには、設定、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>。       **注**表示と、データ フィールドの動作をグローバルに変更する場合は、特定のインスタンスでこれを設定する代わりに、データ モデルへの属性を適用する必要があります、<xref:System.Web.DynamicData.DynamicField>オブジェクト</xref:System.Web.DynamicData.DynamicField>。 詳細については、次を参照してください。 [ASP.NET 動的データ](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>DataField プロパティが設定されている場合、状態変更イベントを発生させるメソッドが呼び出されます</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>。       ビュー内の状態でプロパティがデータ フィールドの値が格納されています。"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "データの名前フィールドを<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>オブジェクトにバインドします。"
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはデータ フィールドの値の表示形式を指定する文字列を設定します。"
  remarks: "表示される値のカスタムの表示形式を指定、DataFormatString プロパティを使用して、<xref:System.Web.DynamicData.DynamicField>オブジェクト</xref:System.Web.DynamicData.DynamicField>。 DataFormatString プロパティが設定されていない場合は、特殊な書式なしフィールドの値が表示されます。       既定では、書式指定文字列が適用されるフィールドの値をデータ バインド コントロールを格納している場合にのみ、<xref:System.Web.DynamicData.DynamicField>オブジェクトは読み取り専用モードにします</xref:System.Web.DynamicData.DynamicField>。 書式指定文字列を編集モードでフィールドの値を適用する設定、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>プロパティを`true`</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>。       DataFormatString プロパティを使って指定する表示形式は、<xref:System.Web.DynamicData.DynamicField>クラス</xref:System.Web.DynamicData.DynamicField>のこのインスタンスに固有 適用することにより、アプリケーション全体の間でデータ フィールドの表示形式を変更することも、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>データ モデルと設定を<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>コンス トラクターのパラメーターをという名前です</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName></xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>。 詳細については、次を参照してください。 [ASP.NET 動的データ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "データ フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 (&quot;&quot;)、いる特殊な書式設定には適用されません、値を示します。"
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "現在のテーブル セルからデータ フィールドの値を抽出し、指定されたディクショナリに値を追加します。"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "セルの値を保持するディクショナリ。"
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "コントロールまたはテキストを含むセル、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "行の状態を指定する列挙値の&1; つ。"
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>読み取り専用のフィールドの値が含まれる`dictionary`、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "指定した属性の値を取得します。"
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "取得する属性のキー。"
    return:
      type: System.String
      description: "属性の値です。"
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定を含むデータ バインド コントロールのヘッダーに表示されるテキスト、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
  remarks: "HeaderText プロパティを使用すると、フレンドリ名をデータ バインド コントロール内のフィールドを識別できます。 HeaderText プロパティの最も一般的なアプリケーションはデータ フィールドにわかりやすい列名を指定する、<xref:System.Web.UI.WebControls.GridView>または<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       HeaderText プロパティを既定では、表示名を使用して、データ フィールドの設定を使用して、<xref:System.ComponentModel.DisplayNameAttribute>属性</xref:System.ComponentModel.DisplayNameAttribute>。 HeaderText プロパティの値を使用して表示名が設定されていない場合、<xref:System.Web.DynamicData.DynamicField.DataField%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.DataField%2A>。"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "含まれるデータ バインド コントロールのヘッダーに表示されるテキスト、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>を実装するデータ ソース コントロールにバインドされていないデータ バインド コントロール内のオブジェクトが、 <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref>インターフェイスです。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはデータ フィールドの値に表示される前に HTML でエンコードされた、かどうかを示す値を設定、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
  remarks: "HtmlEncode プロパティを使用すると、フィールドの値が、表示される前に、それぞれの文字列表現を HTML エンコードされた、かどうかを指定できます。      > [!NOTE] > HTML エンコーディング フィールドの値のクロス サイト スクリプト攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。 可能な限り、このプロパティを有効にする必要があります。 詳細については、次を参照してください。[スクリプト悪用概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>フィールド値は、HTML でエンコードされたからです。 表示される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "テキストを追加または指定されたセルを制御します。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "コントロールまたはテキストを格納しているオブジェクト、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "関数を指定する列挙値のいずれか、`cell`オブジェクト。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "行の状態を指定する列挙値の&1; つ。"
    - id: rowIndex
      type: System.Int32
      description: "行のインデックスを`cell`にオブジェクトが含まれています。"
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定される場合、フィールドの値がデータ フィールドに表示されるキャプション<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  remarks: "場合によってフィールドの値は、データ ソースの null として格納されます。 NullDisplayText プロパティを設定して、null 値を使用するデータ フィールドの表示するカスタムのキャプションを指定することができます。 Null フィールドの値が空の文字列として表示されるこのプロパティが設定されていない場合 (&quot;&quot;) です。"
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "フィールドの値が場合、データ フィールドに表示されるキャプション<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "動的フィールドの読み取り専用の状態を取得します。"
  remarks: "読み取り専用プロパティが場合`true`、<xref:System.Web.DynamicData.DynamicField>コントロールが読み取り専用テンプレートを読み込む</xref:System.Web.DynamicData.DynamicField>。 このプロパティは、ビュー ステートを有効にする必要があります。"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "動的フィールドの読み取り専用状態です。"
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "関連付けられている属性を設定して、 <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>オブジェクト。"
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "設定する属性の名前。"
    - id: value
      type: System.String
      description: "属性の値。"
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはデータ フィールドを使用するデータ ソースを並べ替える場合に使用される並べ替え式を設定します。"
  remarks: "SortExpression プロパティの値を使用しようとする、<xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>に関連付けられている列オブジェクトのプロパティ、<xref:System.Web.DynamicData.DynamicField>オブジェクトを設定して、<xref:System.Web.DynamicData.DynamicField.DataField%2A>プロパティ</xref:System.Web.DynamicData.DynamicField.DataField%2A></xref:System.Web.DynamicData.DynamicField></xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>SortExpression プロパティが設定されている場合、状態変更イベントを発生させるメソッドが呼び出されます</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>。       ビュー内の状態でプロパティは、SortExpression の値が格納されています。"
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "データ フィールドを使用するデータ ソースを並べ替える場合に使用される並べ替え式。"
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref>を実装するデータ ソース コントロールにバインドされていないデータ バインド コントロール内のオブジェクトが、 <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref>インターフェイスです。"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはデータ フィールドを表示するために使用するフィールド テンプレートを設定します。"
  remarks: "UIHint プロパティを使用すると、使用してデータ フィールドの UI を表示するのにフィールド テンプレートを指定できます。 既定ではフィールド テンプレートは、ユーザー コントロールとその名前には、フィールド テンプレート編集操作に使用され、挿入操作を識別するサフィックスが含まれます。 サフィックスは、それぞれ編集 (_e) と維持、です。 UIHint プロパティに値を設定するときに、サフィックスのない名前を設定します。 動的データは、データ フィールドの現在のモードを識別され、正しいフィールド テンプレートが表示されます。       UIHint プロパティが設定されていない場合、既定では動的なデータは、フィールドの種類に基づいたフィールド テンプレートがレンダリングされます。 詳細については、次を参照してください。 [ASP.NET 動的データ スキャフォールディング](~/add/includes/ajax-current-ext-md.md)です。       UIHint プロパティを使って指定するフィールド テンプレートは、<xref:System.Web.DynamicData.DynamicField>クラス</xref:System.Web.DynamicData.DynamicField>のこのインスタンスに固有 適用することにより、アプリケーション全体でデータ フィールドによって使用されるフィールド テンプレートを変更することも、<xref:System.ComponentModel.DataAnnotations.UIHintAttribute>データ モデル</xref:System.ComponentModel.DataAnnotations.UIHintAttribute>。 UIHint プロパティを設定すると、データ モデルに適用されるメタデータが上書きされます。 メタデータ属性の詳細については、次を参照してください。 [ASP.NET 動的データ](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>UIHint プロパティが設定されている場合、状態変更イベントを発生させるメソッドが呼び出されます</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>。       ビュー内の状態でプロパティが UIHint の値が格納されています。"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "データ フィールドを表示するために使用するフィールド テンプレートの名前。"
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはコントロールがクライアントの入力を検証するかどうかを指定する値を設定します。"
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがクライアントの入力を検証する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得、<xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>オブジェクトこの<xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref>オブジェクトに関連付けられている</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>。"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "この検証コントロールが属する検証グループの名前。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
