### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ObjectManager
  id: ObjectManager
  children:
  - System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Serialization.ObjectManager.DoFixups
  - System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  - System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  - System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  langs:
  - csharp
  name: ObjectManager
  nameWithType: ObjectManager
  fullName: System.Runtime.Serialization.ObjectManager
  type: Class
  summary: "追跡オブジェクトとは逆シリアル化します。"
  remarks: "逆シリアル化中に、<xref:System.Runtime.Serialization.Formatter>を逆シリアル化された、既にしているオブジェクト参照参照シリアル化ストリーム内のオブジェクトへの参照が、(旧バージョンとリファレンス) を使用するかどうかを判断する ObjectManager をクエリがないまだ逆シリアル化されたオブジェクトに (前方参照).</xref:System.Runtime.Serialization.Formatter> シリアル化ストリーム内の参照が前方参照の場合、 <xref:System.Runtime.Serialization.Formatter>ObjectManager で fixup を登録できます</xref:System.Runtime.Serialization.Formatter>。 シリアル化ストリーム内の参照が旧バージョンとの参照の場合、<xref:System.Runtime.Serialization.Formatter>参照をすぐに完了します</xref:System.Runtime.Serialization.Formatter>。 フィックス アップは、既に完了していないオブジェクトの逆シリアル化プロセス中にオブジェクト参照を最終処理中のプロセスを指します。 必要なオブジェクトが逆シリアル化、ObjectManager 参照によって完了します。       ObjectManager では、一連のフィックス アップ順序を指定するルールに従います。 実装するすべてのオブジェクト<xref:System.Runtime.Serialization.ISerializable>ことも、<xref:System.Runtime.Serialization.ISerializationSurrogate>経由で送信される、すべてのオブジェクトに予想される、<xref:System.Runtime.Serialization.SerializationInfo>オブジェクト ツリーが逆シリアル化されるときに使用できます</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.ISerializationSurrogate></xref:System.Runtime.Serialization.ISerializable>。 ただし、親オブジェクトでは、すべての子オブジェクトが完全に完了完全に逆シリアル化されることはできません推測します。 すべての子オブジェクトは存在しますが、孫のすべてのオブジェクトが存在するとは限りません。 オブジェクトは、その子オブジェクトでのコードの実行に依存する特定のアクションを実行する必要がある場合、これらのアクションの遅延、実装、<xref:System.Runtime.Serialization.IDeserializationCallback>インターフェイス、および戻るこのインターフェイスで呼び出されるときにのみ、コードを実行します</xref:System.Runtime.Serialization.IDeserializationCallback>。"
  example:
  - "The following code example shows how to use the ObjectManager class to walk through an object graph, traversing to each object only once.  \n  \n [!code-cs[ObjectManager#1](~/add/codesnippet/csharp/t-system.runtime.seriali_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ObjectManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Serialization.ObjectManager&quot;> </xref>クラスです。"
  syntax:
    content: public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "使用するサロゲート セレクター。 <xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;> </xref>指定された型のオブジェクトを逆シリアル化時に使用する正しいサロゲートを決定します。 逆シリアル化時に、サロゲート セレクターは、ストリームで送信される情報からオブジェクトの新しいインスタンスを作成します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ストリーミング コンテキスト。 <xref:System.Runtime.Serialization.StreamingContext>で使用されていない<xref uid=&quot;langword_csharp_ObjectManager&quot; name=&quot;ObjectManager&quot; href=&quot;&quot;> </xref>、実装する任意のオブジェクトに対するパラメーターとして渡されますが、 <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>句または having、 <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;> </xref></xref:System.Runtime.Serialization.StreamingContext> 。 これらのオブジェクトは、逆シリアル化する情報のソースに応じて、特定のアクションを実行できます。"
  overload: System.Runtime.Serialization.ObjectManager.#ctor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  id: DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "記録されたすべてのフィックス アップを実行します。"
  remarks: "フィックス アップがすべて該当するサロゲート、オブジェクト自体によって実行されます (実装している場合<xref:System.Runtime.Serialization.ISerializable>)、または既定の実装</xref:System.Runtime.Serialization.ISerializable>。"
  syntax:
    content: public virtual void DoFixups ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.DoFixups*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Fixup が正常に完了しませんでした。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  id: GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "指定したオブジェクト ID を持つオブジェクトを返します"
  remarks: "オブジェクトを登録およびへの呼び出しでオブジェクト ID を発行することができます、<xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>メソッド</xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>。"
  syntax:
    content: public virtual object GetObject (long objectID);
    parameters:
    - id: objectID
      type: System.Int64
      description: "要求されたオブジェクトの ID です。"
    return:
      type: System.Object
      description: "指定したオブジェクト ID が既に格納されている場合のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、このようなオブジェクトが登録されていません。"
  overload: System.Runtime.Serialization.ObjectManager.GetObject*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code>パラメーターが&0; 未満です。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  id: RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "実装する登録済みのオブジェクトに逆シリアル化イベントを発生させます<xref href=&quot;System.Runtime.Serialization.IDeserializationCallback&quot;></xref>です。"
  syntax:
    content: public virtual void RaiseDeserializationEvent ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  id: RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "<xref:System.Runtime.Serialization.OnDeserializingAttribute>。</xref:System.Runtime.Serialization.OnDeserializingAttribute>でマークされたメソッドを呼び出します"
  syntax:
    content: public void RaiseOnDeserializingEvent (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "呼び出されるメソッドを含む型のインスタンス。"
  overload: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "配列内の&1; つの要素のフィックス アップを記録します。"
  remarks: "フィックス アップは、指定した配列の指定した要素のことです。 修正プロセス中に使用される値が提供される、`objectRequired`パラメーター。"
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "フィックス アップを記録するために使用する配列の ID。"
    - id: index
      type: System.Int32
      description: "内のインデックス`arrayFixup`フィックス アップが要求されます。"
    - id: objectRequired
      type: System.Int64
      description: "フィックス アップが完了した後に、現在の配列要素が指すオブジェクトの ID。"
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code>または<code> objectRequired </code>パラメーターが&0; 未満です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>index</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "後で実行するために、配列内の指定した要素のフィックス アップを記録します。"
  remarks: "フィックス アップは、指定した配列の指定した要素です。 修正プロセス中に使用される値が提供される、`objectRequired`パラメーター。"
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "フィックス アップを記録するために使用する配列の ID。"
    - id: indices
      type: System.Int32[]
      description: "Fixup が要求される多次元配列内のインデックス。"
    - id: objectRequired
      type: System.Int64
      description: "オブジェクトの ID、配列の要素が指すフィックス アップが完了した後です。"
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code>または<code> objectRequired </code>パラメーターが&0; 未満です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>indices</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  id: RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "後で実行するために、オブジェクト メンバーのフィックス アップを記録します。"
  remarks: "フィックス アップは、指定したオブジェクトの指定したメンバーのことです。 としてフィックス アップ処理中に使用される値を指定、`objectRequired`引数。"
  syntax:
    content: public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "参照を必要とするオブジェクトの ID`objectRequired`です。"
    - id: memberName
      type: System.String
      description: "メンバー名`objectToBeFixed`フィックス アップを実行します。"
    - id: objectRequired
      type: System.Int64
      description: "必要なオブジェクトの ID`objectToBeFixed`です。"
  overload: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>objectToBeFixed</code>または<code>objectRequired</code>パラメーターが&0; 未満です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>memberName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  id: RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "後で実行するには、オブジェクトのメンバーのフィックス アップを記録します。"
  remarks: "フィックス アップは、指定したオブジェクトの指定したメンバーのことです。 としてフィックス アップ処理中に使用される値を指定、`objectRequired`のパラメーターです。"
  syntax:
    content: public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "参照を必要とするオブジェクトの ID、`objectRequired`オブジェクト。"
    - id: member
      type: System.Reflection.MemberInfo
      description: "メンバーの`objectToBeFixed`フィックス アップを実行します。"
    - id: objectRequired
      type: System.Int64
      description: "必要なオブジェクトの ID`objectToBeFixed`です。"
  overload: System.Runtime.Serialization.ObjectManager.RecordFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectToBeFixed </code>または<code> objectRequired </code>パラメーターが&0; 未満です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>member</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  id: RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "オブジェクトは、逆シリアル化に関連付けられたレジスタ<code> objectID</code>です。"
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>オブジェクトとその ID の両方に関する情報を保持します。</xref:System.Runtime.Serialization.ObjectManager> 逆シリアル化後<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>かどうかは、特定のオブジェクト ID は既に逆シリアル化された、または前方参照がないまだ逆シリアル化されたオブジェクトにあるかどうかを決定するために使用できます</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>。"
  syntax:
    content: public virtual void RegisterObject (object obj, long objectID);
    parameters:
    - id: obj
      type: System.Object
      description: "登録するオブジェクト。"
    - id: objectID
      type: System.Int64
      description: "登録するオブジェクトの ID。"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code>パラメーターが&0; 未満です。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code>は既に登録されて、オブジェクト以外の<code> obj</code>です。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "オブジェクトは、逆シリアル化に関連付けられたレジスタ<code> objectID </code>、および録画、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>一緒に使用します。"
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>オブジェクトとその ID の両方に関する情報を保持します。</xref:System.Runtime.Serialization.ObjectManager> 逆シリアル化中に後で行うこともできます<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>がないまだ逆シリアル化されたオブジェクトへの前方参照がある場合または ID は既に逆シリアル化された、特定のオブジェクトかどうかを検出します</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>。"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: obj
      type: System.Object
      description: "登録するオブジェクト。"
    - id: objectID
      type: System.Int64
      description: "登録するオブジェクトの ID。"
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code>パラメーターが&0; 未満です。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code>は既に登録されて、オブジェクト以外の<code> obj</code>です。"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "オブジェクトのメンバーは、逆シリアル化に関連付けられたレジスタ<code> objectID </code>、および録画、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>です。"
  remarks: "指定する必要があります、`member`と`idOfContainingObj`パラメーター場合`obj`は、<xref:System.ValueType>方法により、フィックス アップを実行して、<xref:System.ValueType>オブジェクト</xref:System.ValueType></xref:System.ValueType>。 情報を格納する領域、<xref:System.ValueType>インラインで含まれるオブジェクトが割り当てられます</xref:System.ValueType>。 ただし、<xref:System.ValueType>を登録することをボックス化、 <xref:System.Runtime.Serialization.ObjectManager>、親オブジェクトとの接続は失われます</xref:System.Runtime.Serialization.ObjectManager></xref:System.ValueType>。 フィックス アップがのインスタンスで実行することを保証するために、<xref:System.ValueType>とボックス化されたインスタンスではなく親オブジェクトに格納、<xref:System.Runtime.Serialization.ObjectManager>いくつかの情報を保持します</xref:System.Runtime.Serialization.ObjectManager></xref:System.ValueType>。       <xref:System.Runtime.Serialization.ObjectManager>オブジェクトとその ID の両方に関する情報を保持します。</xref:System.Runtime.Serialization.ObjectManager> 逆シリアル化後<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>を特定のオブジェクト ID は既に逆シリアル化された、またはまだ逆シリアル化するかどうかは、オブジェクトへの前方参照かどうかを検出するために使用できます</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>。"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);
    parameters:
    - id: obj
      type: System.Object
      description: "登録するオブジェクト。"
    - id: objectID
      type: System.Int64
      description: "登録するオブジェクトの ID。"
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。"
    - id: idOfContainingObj
      type: System.Int64
      description: "含むオブジェクトの ID`obj`です。 場合にのみ、このパラメーターは必須`obj`は値型です。"
    - id: member
      type: System.Reflection.MemberInfo
      description: "親オブジェクト内のフィールドを`obj`が存在します。 このパラメーターには意味がある場合にのみ`obj`は値型です。"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code>パラメーターが&0; 未満です。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "関連付けることが逆シリアル化中に、オブジェクトに含まれる配列のメンバーを登録<code> objectID </code>、および録画、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>です。"
  remarks: "指定する必要があります、`member`と`idOfContainingObj`パラメーター場合`obj`は、<xref:System.ValueType>方法により、フィックス アップを実行して、<xref:System.ValueType>オブジェクト</xref:System.ValueType></xref:System.ValueType>。 情報を格納する領域、<xref:System.ValueType>インラインで含まれるオブジェクトが割り当てられます</xref:System.ValueType>。 ただし、<xref:System.ValueType>を登録することをボックス化、 <xref:System.Runtime.Serialization.ObjectManager>、親オブジェクトとの接続は失われます</xref:System.Runtime.Serialization.ObjectManager></xref:System.ValueType>。 フィックス アップがのインスタンスで実行することを保証するために、<xref:System.ValueType>とボックス化されたインスタンスではなく親オブジェクトに格納、<xref:System.Runtime.Serialization.ObjectManager>いくつかの情報を保持します</xref:System.Runtime.Serialization.ObjectManager></xref:System.ValueType>。       <xref:System.Runtime.Serialization.ObjectManager>オブジェクトとその ID の両方に関する情報を保持します。</xref:System.Runtime.Serialization.ObjectManager> 逆シリアル化後<xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>を特定のオブジェクト ID は既に逆シリアル化された、またはまだ逆シリアル化するかどうかは、オブジェクトへの前方参照かどうかを検出するために使用できます</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>。"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);
    parameters:
    - id: obj
      type: System.Object
      description: "登録するオブジェクト。"
    - id: objectID
      type: System.Int64
      description: "登録するオブジェクトの ID。"
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`必要なフィックス アップについては、正常に完了せず、そのオブジェクトが完了したときに必要なオブジェクトに渡され、します。"
    - id: idOfContainingObj
      type: System.Int64
      description: "含むオブジェクトの ID`obj`です。 場合にのみ、このパラメーターは必須`obj`は値型です。"
    - id: member
      type: System.Reflection.MemberInfo
      description: "親オブジェクト内のフィールドを`obj`が存在します。 このパラメーターには意味がある場合にのみ`obj`は値型です。"
    - id: arrayIndex
      type: System.Int32[]
      description: "場合`obj`は、<xref:System.ValueType>であり、配列のメンバー`arrayIndex`その配列内のインデックスが含まれています、`obj`が存在します</xref:System.ValueType>。 `arrayIndex`場合は無視されます`obj`は両方とも、<xref:System.ValueType>であり、配列のメンバー</xref:System.ValueType> 。"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code>パラメーターが&0; 未満です。"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> isn&quot;t <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
- uid: System.Runtime.Serialization.ObjectManager.#ctor*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager
  nameWithType: ObjectManager.ObjectManager
- uid: System.Runtime.Serialization.ObjectManager.DoFixups*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups
  nameWithType: ObjectManager.DoFixups
- uid: System.Runtime.Serialization.ObjectManager.GetObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject
  nameWithType: ObjectManager.GetObject
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent
  nameWithType: ObjectManager.RaiseDeserializationEvent
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent
  nameWithType: ObjectManager.RaiseOnDeserializingEvent
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup
  nameWithType: ObjectManager.RecordArrayElementFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup
  nameWithType: ObjectManager.RecordDelayedFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup
  nameWithType: ObjectManager.RecordFixup
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject
  nameWithType: ObjectManager.RegisterObject
