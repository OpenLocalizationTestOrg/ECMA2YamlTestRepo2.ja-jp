### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.RegExpObject
  id: RegExpObject
  children:
  - Microsoft.JScript.RegExpObject.global
  - Microsoft.JScript.RegExpObject.ignoreCase
  - Microsoft.JScript.RegExpObject.lastIndex
  - Microsoft.JScript.RegExpObject.multiline
  - Microsoft.JScript.RegExpObject.source
  - Microsoft.JScript.RegExpObject.ToString
  langs:
  - csharp
  name: RegExpObject
  nameWithType: RegExpObject
  fullName: Microsoft.JScript.RegExpObject
  type: Class
  summary: "正規表現オブジェクトを表します。 このクラスは、組み込みのオブジェクト モデルのカテゴリに属しています。"
  syntax:
    content: 'public sealed class RegExpObject : Microsoft.JScript.JSObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.global
  id: global
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: global
  nameWithType: RegExpObject.global
  fullName: Microsoft.JScript.RegExpObject.global
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "フラグをグローバル検索が実行されるかどうかを示す値を取得 (`/g`)、すべての出現に一致します。"
  syntax:
    content: public bool global { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>グローバル検索が実行される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.RegExpObject.global*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.ignoreCase
  id: ignoreCase
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: ignoreCase
  nameWithType: RegExpObject.ignoreCase
  fullName: Microsoft.JScript.RegExpObject.ignoreCase
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "フラグを区別しない検索を実行するかどうかを示す値を取得 (`/i`)。"
  syntax:
    content: public bool ignoreCase { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は大文字と小文字の検索が実行されます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.RegExpObject.ignoreCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.lastIndex
  id: lastIndex
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: lastIndex
  nameWithType: RegExpObject.lastIndex
  fullName: Microsoft.JScript.RegExpObject.lastIndex
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "取得または設定と一致する最後のインデックス。"
  syntax:
    content: public object lastIndex { get; set; }
    return:
      type: System.Object
      description: "1 つを使用する必要がある場合、最後の一致のインデックス。"
  overload: Microsoft.JScript.RegExpObject.lastIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.multiline
  id: multiline
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: multiline
  nameWithType: RegExpObject.multiline
  fullName: Microsoft.JScript.RegExpObject.multiline
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "複数行のフラグを使って検索が実行されるかどうかを示す値を取得 (`/m`)。"
  syntax:
    content: public bool multiline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検索が複数行モードで実行される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.RegExpObject.multiline*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.source
  id: source
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: source
  nameWithType: RegExpObject.source
  fullName: Microsoft.JScript.RegExpObject.source
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "このオブジェクトによって表される正規表現パターンを取得します。"
  syntax:
    content: public string source { get; }
    return:
      type: System.String
      description: "このオブジェクトによって表される正規表現パターン。"
  overload: Microsoft.JScript.RegExpObject.source*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpObject.ToString
  id: ToString
  parent: Microsoft.JScript.RegExpObject
  langs:
  - csharp
  name: ToString()
  nameWithType: RegExpObject.ToString()
  fullName: Microsoft.JScript.RegExpObject.ToString()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "この正規表現パターンとフラグを格納しているオブジェクトの文字列表現を作成します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "このオブジェクトの文字列形式。"
  overload: Microsoft.JScript.RegExpObject.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.JSObject
  isExternal: false
  name: Microsoft.JScript.JSObject
- uid: Microsoft.JScript.RegExpObject.global
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: global
  nameWithType: RegExpObject.global
  fullName: Microsoft.JScript.RegExpObject.global
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.RegExpObject.ignoreCase
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: ignoreCase
  nameWithType: RegExpObject.ignoreCase
  fullName: Microsoft.JScript.RegExpObject.ignoreCase
- uid: Microsoft.JScript.RegExpObject.lastIndex
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: lastIndex
  nameWithType: RegExpObject.lastIndex
  fullName: Microsoft.JScript.RegExpObject.lastIndex
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.RegExpObject.multiline
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: multiline
  nameWithType: RegExpObject.multiline
  fullName: Microsoft.JScript.RegExpObject.multiline
- uid: Microsoft.JScript.RegExpObject.source
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: source
  nameWithType: RegExpObject.source
  fullName: Microsoft.JScript.RegExpObject.source
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.RegExpObject.ToString
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: ToString()
  nameWithType: RegExpObject.ToString()
  fullName: Microsoft.JScript.RegExpObject.ToString()
- uid: Microsoft.JScript.RegExpObject.global*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: global
  nameWithType: RegExpObject.global
- uid: Microsoft.JScript.RegExpObject.ignoreCase*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: ignoreCase
  nameWithType: RegExpObject.ignoreCase
- uid: Microsoft.JScript.RegExpObject.lastIndex*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: lastIndex
  nameWithType: RegExpObject.lastIndex
- uid: Microsoft.JScript.RegExpObject.multiline*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: multiline
  nameWithType: RegExpObject.multiline
- uid: Microsoft.JScript.RegExpObject.source*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: source
  nameWithType: RegExpObject.source
- uid: Microsoft.JScript.RegExpObject.ToString*
  parent: Microsoft.JScript.RegExpObject
  isExternal: false
  name: ToString
  nameWithType: RegExpObject.ToString
