### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrintDocument
  id: PrintDocument
  children:
  - System.Drawing.Printing.PrintDocument.#ctor
  - System.Drawing.Printing.PrintDocument.BeginPrint
  - System.Drawing.Printing.PrintDocument.DefaultPageSettings
  - System.Drawing.Printing.PrintDocument.DocumentName
  - System.Drawing.Printing.PrintDocument.EndPrint
  - System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  - System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  - System.Drawing.Printing.PrintDocument.OriginAtMargins
  - System.Drawing.Printing.PrintDocument.Print
  - System.Drawing.Printing.PrintDocument.PrintController
  - System.Drawing.Printing.PrintDocument.PrinterSettings
  - System.Drawing.Printing.PrintDocument.PrintPage
  - System.Drawing.Printing.PrintDocument.QueryPageSettings
  - System.Drawing.Printing.PrintDocument.ToString
  langs:
  - csharp
  name: PrintDocument
  nameWithType: PrintDocument
  fullName: System.Drawing.Printing.PrintDocument
  type: Class
  summary: "Windows フォーム アプリケーションから印刷したときに、プリンターに出力を送信する再利用可能なオブジェクトを定義します。"
  remarks: "通常、PrintDocument クラスのインスタンスを作成するなどのプロパティの設定、<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>と<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>を呼び出すと、<xref:System.Drawing.Printing.PrintDocument.Print%2A>印刷プロセスを開始するメソッド</xref:System.Drawing.Printing.PrintDocument.Print%2A></xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A></xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>。 <xref:System.Drawing.Printing.PrintDocument.PrintPage> <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics> <xref:System.Drawing.Printing.PrintPageEventArgs>。</xref:System.Drawing.Printing.PrintPageEventArgs>のプロパティ</xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>を使用して、印刷出力を指定したイベント</xref:System.Drawing.Printing.PrintDocument.PrintPage>を処理します。       詳細については、Windows フォーム アプリケーションから印刷すると、次を参照してください。、 [Windows フォームにおける印刷のサポート](~/add/includes/ajax-current-ext-md.md)です。 Windows Presentation Foundation アプリケーションから印刷する場合を参照してください、<xref:System.Printing>名前空間</xref:System.Printing>。"
  example:
  - "The following code example prints the file named C:\\My Documents\\MyFile.txt on the default printer. To run the example, create a new Windows Forms project and paste the example code into the form, replacing the file contents. For C#, you will need to delete the Form1.Designer.cs file. Also, change the path to the file you want to print.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_5_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_5_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PrintPage")]

      [System.ComponentModel.DefaultProperty("DocumentName")]

      [System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")]

      public class PrintDocument : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Printing.PrintDocument&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、既定のプリンターに基づくすべてのフィールドを初期化します。 新規作成した後は、通常、 <xref:System.Drawing.Printing.PrintDocument>、を通じて出力に影響するプリンターとページの設定を設定する、<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>と<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>プロパティをそれぞれ</xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A></xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A></xref:System.Drawing.Printing.PrintDocument>。"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_1_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_1_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_1_1.cs)]"
  syntax:
    content: public PrintDocument ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  id: BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "発生したときに、<xref:System.Drawing.Printing.PrintDocument.Print*>メソッドが呼び出されるとドキュメント印刷の最初のページの前にします</xref:System.Drawing.Printing.PrintDocument.Print*>。"
  remarks: "通常、フォント、ファイル ストリーム、および印刷処理中に使用されるその他のリソースを初期化するために BeginPrint イベントを処理します。       イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<xref:System.Drawing.Printing.PrintEventHandler>イベントにデリゲートします</xref:System.Drawing.Printing.PrintEventHandler>。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートでイベントを処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler BeginPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または設定 ページを印刷するすべてのページの既定値として使用されます。"
  remarks: "DefaultPageSettings プロパティを通じてのいくつかの既定のページ設定を指定できます。 など、<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>プロパティは、ページの色で印刷するかどうかを指定します、<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>プロパティは、横または縦の向きを指定し、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>プロパティがページの余白を指定します</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName></xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName></xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>。       ページの単位で設定を指定するには、処理、<xref:System.Drawing.Printing.PrintDocument.PrintPage>または<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベントを変更し、<xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A>引数に含まれる、<xref:System.Drawing.Printing.PrintPageEventArgs>または<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>、それぞれ</xref:System.Drawing.Printing.QueryPageSettingsEventArgs></xref:System.Drawing.Printing.PrintPageEventArgs></xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A></xref:System.Drawing.Printing.PrintDocument.QueryPageSettings></xref:System.Drawing.Printing.PrintDocument.PrintPage>。      > [!NOTE] > 印刷が開始した後、DefaultPageSettings プロパティ ページの設定への変更は無効になります印刷されるページです。"
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document. The example makes three assumptions: that a variable named `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_16_1.cs)]\n [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_16_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_16_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>ドキュメントの既定のページ設定を指定します。"
  overload: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  id: DocumentName
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得またはドキュメントの印刷中に (たとえば、印刷ステータス ダイアログ ボックスやプリンター キュー) で表示するドキュメントの名前を設定します。"
  remarks: "ドキュメント プロパティは、印刷するファイルを指定しません。 処理することにより、出力を指定する代わりに、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント</xref:System.Drawing.Printing.PrintDocument.PrintPage>。 例については、次を参照してください、<xref:System.Drawing.Printing.PrintDocument>クラスの概要。</xref:System.Drawing.Printing.PrintDocument> 。"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it, and sets the DocumentName to a user-friendly name. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_24_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_24_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_24_1.vb)]"
  syntax:
    content: public string DocumentName { get; set; }
    return:
      type: System.String
      description: "ドキュメントの印刷中に表示するドキュメントの名前。 既定値は&quot;document&quot;です。"
  overload: System.Drawing.Printing.PrintDocument.DocumentName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  id: EndPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "ドキュメントの最後のページが印刷されたときに発生します。"
  remarks: "通常、フォント、ファイル ストリーム、およびフォントのように、印刷処理中に使用されるその他のリソースを解放する EndPrint イベントを処理します。       設定して印刷するページはありませんがあることを示します、<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>プロパティを`false`で、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント</xref:System.Drawing.Printing.PrintDocument.PrintPage></xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>。 EndPrint イベントは、印刷処理が取り消されたり、印刷処理中に例外が発生した場合にも発生します。       イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<xref:System.Drawing.Printing.PrintEventHandler>イベントにデリゲートします</xref:System.Drawing.Printing.PrintEventHandler>。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートでイベントを処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler EndPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "発生させる、 <xref href=&quot;System.Drawing.Printing.PrintDocument.BeginPrint&quot;> </xref>イベント。 後に呼び出されます、<xref:System.Drawing.Printing.PrintDocument.Print*>メソッドが呼び出されると、ドキュメントの印刷がの最初のページの前にします</xref:System.Drawing.Printing.PrintDocument.Print*>。"
  remarks: "OnBeginPrint メソッドは、デリゲートを結び付けずに、イベントを処理する派生クラスを使用します。 これは、派生クラスでイベントを処理するための手法をお勧めします。       派生クラスが OnBeginPrint メソッドを呼び出すときに発生、<xref:System.Drawing.Printing.PrintDocument.BeginPrint>を呼び出して、イベント ハンドラーがデリゲートからのイベント</xref:System.Drawing.Printing.PrintDocument.BeginPrint>。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "発生させる、 <xref href=&quot;System.Drawing.Printing.PrintDocument.EndPrint&quot;> </xref>イベント。 ドキュメントの最後のページが印刷されたときに呼び出されます。"
  remarks: "OnEndPrint メソッドは、デリゲートを結び付けずに、イベントを処理する派生クラスを使用します。 これは、派生クラスでイベントを処理するための手法をお勧めします。 印刷処理が取り消されたり、印刷処理中に例外が発生した場合、OnEndPrint メソッドが呼び出されます。       派生クラスが OnEndPrint メソッドを呼び出すときに発生、<xref:System.Drawing.Printing.PrintDocument.EndPrint>を呼び出して、イベント ハンドラーがデリゲートからのイベント</xref:System.Drawing.Printing.PrintDocument.EndPrint>。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Drawing.Printing.PrintDocument.OnEndPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  id: OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "発生させる、 <xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;> </xref>イベント。 ページの印刷前に呼び出されます。"
  remarks: "OnPrintPage メソッドは、デリゲートを結び付けずに、イベントを処理する派生クラスを使用します。 これは、派生クラスでイベントを処理するための手法をお勧めします。       派生クラスが OnPrintPage メソッドを呼び出すときに発生、<xref:System.Drawing.Printing.PrintDocument.PrintPage>を呼び出して、イベント ハンドラーがデリゲートからのイベント</xref:System.Drawing.Printing.PrintDocument.PrintPage>。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintPageEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintPageEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Drawing.Printing.PrintDocument.OnPrintPage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  id: OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "発生させる、 <xref href=&quot;System.Drawing.Printing.PrintDocument.QueryPageSettings&quot;> </xref>イベント。 それぞれの直前に呼び出されますが、 <xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;> </xref>イベント。"
  remarks: "OnQueryPageSettings メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。       派生クラスが OnQueryPageSettings メソッドを呼び出すときに発生、<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>を呼び出して、イベント ハンドラーがデリゲートからのイベント</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.QueryPageSettingsEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.QueryPageSettingsEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  id: OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得またはページに関連付けられているグラフィック オブジェクトの位置が、ページの印刷可能領域の左上隅にあるまたはユーザー指定の余白の内側にあるかどうかを示す値を設定します。"
  remarks: "印刷可能な領域を計算するには、用紙、ページの余白の物理サイズとの場所を知る必要があります、<xref:System.Drawing.Graphics>配信元のオブジェクトします</xref:System.Drawing.Graphics>。 OriginAtMargins がある場合`true`、<xref:System.Drawing.Graphics>オブジェクトの場所は考慮に入れて、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>プロパティの値と、ページの印刷可能な領域</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName></xref:System.Drawing.Graphics>。 OriginAtMargins が場合`false`の場所を特定するページの印刷可能領域のみが使用される、 <xref:System.Drawing.Graphics>、元のオブジェクト、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>値は無視されます</xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName></xref:System.Drawing.Graphics>。       たとえば、OriginAtMargins`true`と<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>それぞれの側では、1 インチに設定されて、<xref:System.Drawing.Graphics>に含まれるオブジェクト、<xref:System.Drawing.Printing.PrintPageEventArgs>配置の 1 インチ、左右のページの上部から</xref:System.Drawing.Printing.PrintPageEventArgs></xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName>。 場合は、ページの印刷可能領域の両側に&1; インチの.25、OriginAtMargins `false`、<xref:System.Drawing.Graphics>オブジェクトは、インチ、左右のページの上部からのある.25</xref:System.Drawing.Graphics> 。      > [!NOTE] > ページの印刷可能な領域がプリンターの変化し、対称であるとは限りません。"
  syntax:
    content: public bool OriginAtMargins { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ページの余白にグラフィックスの元の開始<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>グラフィックスの元の印刷可能なページの左上隅にある場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.Print
  id: Print
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "ドキュメントの印刷プロセスを開始します。"
  remarks: "処理することにより、出力を指定、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント<xref:System.Drawing.Graphics><xref:System.Drawing.Printing.PrintPageEventArgs>.</xref:System.Drawing.Printing.PrintPageEventArgs>に含まれる</xref:System.Drawing.Graphics>を使用して</xref:System.Drawing.Printing.PrintDocument.PrintPage>       使用して、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>どのプリンターでドキュメントを印刷する必要がありますを指定するプロパティ</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>。       Print メソッドは、印刷ダイアログ ボックスを使用せず、文書を印刷します。 使用して、<xref:System.Windows.Forms.PrintDialog>印刷設定を選択する機能をユーザーに提供する場合</xref:System.Windows.Forms.PrintDialog>。      > [!NOTE] > 印刷中に印刷メソッドによって処理されていない例外がスローされた場合、ドキュメントの印刷は中止されます。"
  example:
  - "The following code example prints the file that is specified through the command line to the default printer.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public void Print ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.Print*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "プリンターがという名前で、 &lt;xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName&gt;プロパティは存在しません。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintController
  id: PrintController
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または印刷プロセスを制御するプリント コント ローラーを設定します。"
  remarks: "プリント コント ローラーは、いくつかの方法での印刷プロセスをガイドします。 たとえば、ドキュメントを印刷する必要がありますに変換する<xref:System.Drawing.Graphics>オブジェクト</xref:System.Drawing.Graphics>。 A<xref:System.Drawing.Printing.PrintController>または実際には、ドキュメントを印刷するプリンターで印刷プレビューの画像の画像を描画する場所を指定します</xref:System.Drawing.Printing.PrintController>。 プリント コント ローラーはすぐに、ドキュメントを印刷または指定した時間だけ待機するかどうかも指定できます。"
  example:
  - "The following code example requires that you have created an instance of the <xref:System.Drawing.Printing.PrintDocument> class that is named `myPrintDocument`. The example creates a new instance of the <xref:System.Drawing.Printing.PrintController> class, assigns it to the PrintController property of `myPrintDocument`, and prints the document.  \n  \n Use the <xref:System.Drawing.Printing> and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_6_1.cs)]\n [!code-vb[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_6_1.vb)]\n [!code-cpp[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_6_1.cpp)]"
  syntax:
    content: public System.Drawing.Printing.PrintController PrintController { get; set; }
    return:
      type: System.Drawing.Printing.PrintController
      description: "<xref href=&quot;System.Drawing.Printing.PrintController&quot;> </xref>印刷プロセスを制御します。 既定値はの新しいインスタンス、 <xref href=&quot;System.Windows.Forms.PrintControllerWithStatusDialog&quot;> </xref>クラスです。"
  overload: System.Drawing.Printing.PrintDocument.PrintController*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  id: PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得またはドキュメントを印刷するプリンターを設定します。"
  remarks: "PrinterSettings プロパティを通じて複数のプリンター設定を指定することができます。 たとえばこの<xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>プロパティを印刷する部数を指定する、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName>使用、および<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>印刷ページの範囲を指定するプロパティ</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName>にプリンターを指定するプロパティ</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName>を使用します。"
  example:
  - "The following code example prints a document on the specified printer. The example makes three assumptions: that a variable names `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_2_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }
    return:
      type: System.Drawing.Printing.PrinterSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>ドキュメントが印刷される場所と方法を指定します。 既定値は、 <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>とそのプロパティが既定値に設定します。"
  overload: System.Drawing.Printing.PrintDocument.PrinterSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  id: PrintPage
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "現在のページに印刷する出力が必要なときに発生します。"
  remarks: "印刷する出力を指定するには、 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> <xref:System.Drawing.Printing.PrintPageEventArgs>。</xref:System.Drawing.Printing.PrintPageEventArgs>のプロパティ</xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>を使用してください。 たとえばをある行のテキストを印刷するかを指定するには、描画を使用して、テキスト、<xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>メソッド</xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName>。       出力を指定するだけでなくを設定して印刷するその他のページがあるかどうかを示すことができます、<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>プロパティを`true`</xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName>。 既定値は`false`、印刷するページはありませんがあることを示します。 個々 のページの設定を変更することも、<xref:System.Drawing.Printing.PageSettings>を設定して、印刷ジョブを取り消すことができます、<xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName>プロパティを`true`</xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName></xref:System.Drawing.Printing.PageSettings>。 別のページの設定を使用してドキュメントの各ページを印刷するには、処理、<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベント</xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>。       イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<xref:System.Drawing.Printing.PrintPageEventHandler>イベントにデリゲートします</xref:System.Drawing.Printing.PrintPageEventHandler>。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートでイベントを処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates handling the PrintPage event.  \n  \n For another example, see [How to: Print a Multi-Page Text File in Windows Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/e-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/e-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/e-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public event System.Drawing.Printing.PrintPageEventHandler PrintPage;
    return:
      type: System.Drawing.Printing.PrintPageEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  id: QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "それぞれの直前に発生した<xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref>イベント。"
  remarks: "別のページの設定を使用してドキュメントの各ページを印刷することができます。 設定ページの個々 のプロパティを変更することによって、<xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName>プロパティまたは<xref:System.Drawing.Printing.PageSettings></xref:System.Drawing.Printing.PageSettings>プロパティを設定して</xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName>。 変更、<xref:System.Drawing.Printing.PageSettings>だけ現在のページ、ドキュメントの既定のページ設定ではなくに影響します</xref:System.Drawing.Printing.PageSettings>。 印刷ジョブを設定して取り消すこともできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true` <xref:System.Drawing.Printing.QueryPageSettingsEventArgs></xref:System.Drawing.Printing.QueryPageSettingsEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 。       イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<xref:System.Drawing.Printing.QueryPageSettingsEventHandler>イベントにデリゲートします</xref:System.Drawing.Printing.QueryPageSettingsEventHandler>。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートでイベントを処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and QueryPageSettings events are handled. The `currentPageNumber` variable is incremented after every page is printed in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, which is not shown.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/e-system.drawing.printin_1_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/e-system.drawing.printin_1_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/e-system.drawing.printin_1_1.vb)]"
  syntax:
    content: public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;
    return:
      type: System.Drawing.Printing.QueryPageSettingsEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.ToString
  id: ToString
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "文字列形式で、印刷ドキュメントに関する情報を提供します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "文字列。"
  overload: System.Drawing.Printing.PrintDocument.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.Drawing.Printing.PrintDocument.#ctor
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
- uid: System.Drawing.Printing.PrintEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventHandler
  nameWithType: PrintEventHandler
  fullName: System.Drawing.Printing.PrintEventHandler
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventArgs
  nameWithType: PrintEventArgs
  fullName: System.Drawing.Printing.PrintEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
- uid: System.Drawing.Printing.PrintPageEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventArgs
  nameWithType: PrintPageEventArgs
  fullName: System.Drawing.Printing.PrintPageEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
- uid: System.Drawing.Printing.QueryPageSettingsEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventArgs
  nameWithType: QueryPageSettingsEventArgs
  fullName: System.Drawing.Printing.QueryPageSettingsEventArgs
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrintDocument.Print
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
- uid: System.Drawing.Printing.PrintDocument.PrintController
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintController
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintController
  nameWithType: PrintController
  fullName: System.Drawing.Printing.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
- uid: System.Drawing.Printing.PrintPageEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventHandler
  nameWithType: PrintPageEventHandler
  fullName: System.Drawing.Printing.PrintPageEventHandler
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
- uid: System.Drawing.Printing.QueryPageSettingsEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventHandler
  nameWithType: QueryPageSettingsEventHandler
  fullName: System.Drawing.Printing.QueryPageSettingsEventHandler
- uid: System.Drawing.Printing.PrintDocument.ToString
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
- uid: System.Drawing.Printing.PrintDocument.#ctor*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument
  nameWithType: PrintDocument.PrintDocument
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint
  nameWithType: PrintDocument.OnBeginPrint
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint
  nameWithType: PrintDocument.OnEndPrint
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage
  nameWithType: PrintDocument.OnPrintPage
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings
  nameWithType: PrintDocument.OnQueryPageSettings
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
- uid: System.Drawing.Printing.PrintDocument.Print*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print
  nameWithType: PrintDocument.Print
- uid: System.Drawing.Printing.PrintDocument.PrintController*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.ToString*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString
  nameWithType: PrintDocument.ToString
