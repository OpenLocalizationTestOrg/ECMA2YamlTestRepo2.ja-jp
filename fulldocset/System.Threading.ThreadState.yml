### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "実行状態を指定、 <xref href=&quot;System.Threading.Thread&quot;></xref>です。"
  remarks: "ThreadState 列挙体は、いくつかでのみ関心のあるシナリオをデバッグします。 コードは、スレッドの活動を同期するために、スレッドの状態を使用する必要がありますしないでください。       ThreadState では、スレッドのすべての可能な実行状態のセットを定義します。 スレッドを作成すると、終了するまでの状態の少なくとも&1; つです。 共通言語ランタイム内で作成されたスレッドは最初に、`Unstarted`状態にある場合、ランタイムに付属している外部のスレッドが既に開始中に、`Running`状態です。 `Unstarted`にスレッドが遷移した、 `Running` <xref:System.Threading.Thread.Start%2A>.</xref:System.Threading.Thread.Start%2A>を呼び出すことによって状態 すべての組み合わせ`ThreadState`値は有効です。 たとえば、スレッドが両方にすることはできません、`Aborted`と`Unstarted`状態です。      > [!IMPORTANT] > は&2; つのスレッドの状態の列挙体、ThreadState <xref:System.Diagnostics.ThreadState?displayProperty=fullName>.</xref:System.Diagnostics.ThreadState?displayProperty=fullName>       次の表は、状態の変更が発生するアクションを示します。      |アクション |ThreadState |  |------------|-----------------|  |共通言語ランタイム内でスレッドを作成します |。まだ開始していない |  |別のスレッドの呼び出し、<xref:System.Threading.Thread.Start%2A?displayProperty=fullName>新しいスレッドの呼び出しでメソッドを返します</xref:System.Threading.Thread.Start%2A?displayProperty=fullName>。<br /><br /> <xref:System.Threading.Thread.Start%2A>メソッドは、新しいスレッドの実行が開始されるまでを返しません</xref:System.Threading.Thread.Start%2A>。 <xref:System.Threading.Thread.Start%2A>への呼び出し中に実行しますどの時点で、新しいスレッドが開始されますを知る方法はありません。 |。実行している |  |スレッド呼び出し<xref:System.Threading.Thread.Sleep%2A>|WaitSleepJoin |  |別のオブジェクトのスレッド呼び出し<xref:System.Threading.Monitor.Wait%2A>|。WaitSleepJoin |  |別のスレッドでスレッド呼び出し<xref:System.Threading.Thread.Join%2A>|。WaitSleepJoin |  |別のスレッド呼び出し<xref:System.Threading.Thread.Interrupt%2A>|実行している |  |別のスレッド呼び出し<xref:System.Threading.Thread.Suspend%2A>|SuspendRequested |  |スレッドが<xref:System.Threading.Thread.Suspend%2A>要求に応答します |。中断された |  |別のスレッド呼び出し<xref:System.Threading.Thread.Resume%2A>|実行している |  |別のスレッド呼び出し<xref:System.Threading.Thread.Abort%2A>|AbortRequested |  |スレッドが<xref:System.Threading.Thread.Abort%2A>要求に応答します |。停止 |  |スレッドが終了します |。停止 |      上記の状態、に加えても、`Background`状態は、背景または前景でスレッドが実行されているかどうかを示します</xref:System.Threading.Thread.Abort%2A></xref:System.Threading.Thread.Abort%2A></xref:System.Threading.Thread.Resume%2A></xref:System.Threading.Thread.Suspend%2A></xref:System.Threading.Thread.Suspend%2A></xref:System.Threading.Thread.Interrupt%2A></xref:System.Threading.Thread.Join%2A></xref:System.Threading.Monitor.Wait%2A></xref:System.Threading.Thread.Sleep%2A></xref:System.Threading.Thread.Start%2A>。       スレッドは、特定の時点で&1; つ以上の状態であることができます。 呼び出しでスレッドがブロックされている場合など、 <xref:System.Threading.Monitor.Wait%2A>、および別のスレッドの呼び出し<xref:System.Threading.Thread.Abort%2A>、ブロックされたスレッドでブロックされたスレッドされます両方で、`WaitSleepJoin`と`AbortRequested`同時状態</xref:System.Threading.Thread.Abort%2A></xref:System.Threading.Monitor.Wait%2A>。 ここでは、スレッドがへの呼び出しから戻るとすぐに<xref:System.Threading.Monitor.Wait%2A>かが中断されるは受信、<xref:System.Threading.ThreadAbortException>中止を開始する</xref:System.Threading.ThreadAbortException></xref:System.Threading.Monitor.Wait%2A>。       <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>、スレッドのプロパティは、スレッドの現在の状態を提供します</xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>。 アプリケーションは、スレッドが実行されているかどうかを決定するのにビットマスクを使用する必要があります。 値から`Running`はゼロ (0) などの c# コードを使用して、スレッドが実行されているかどうかをテスト`(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0`またはなど、Visual Basic コード`(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`です。"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドの状態を含む AbortRequested と、スレッドが停止している、今すぐがその状態がまだ停止 に変更されません。"
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; 、スレッドでメソッドが呼び出されて、スレッドをまだ受信していない、保留中<xref href=&quot;System.Threading.ThreadAbortException&quot;></xref>を中止することを試みます。"
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "フォア グラウンド スレッドではなく、バック グラウンド スレッドとスレッドを実行中です。 この状態は、設定によって制御されます、 &lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt;プロパティです。"
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドが開始されて、ブロックされていないとが保留中のない<xref href=&quot;System.Threading.ThreadAbortException&quot;></xref>です。"
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドが停止しました。"
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドの停止が要求されます。 これは内部使用のみです。"
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドが中断されました。"
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドを中断する要求されています。"
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;スレッドでメソッドが呼び出されていません。"
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドがブロックされます。 呼び出しの結果が考えられます&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;または&lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;、ロックを要求する — などを呼び出して&lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt;または&lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; — <xref:System.Threading.ManualResetEvent>.</xref:System.Threading.ManualResetEvent>など、スレッドの同期オブジェクトで待機しているのか"
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
