### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  id: KerberosSecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  langs:
  - csharp
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  type: Class
  summary: "提供するセキュリティ トークン プロバイダーを表す<xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;></xref>のセキュリティ トークンを SOAP メッセージ送信者です。"
  remarks: "ほとんどの場合、KerberosSecurityTokenProvider クラスを必要はありません、直接呼び出されるようにクライアントを必要とする SOAP メッセージを送信するときに呼び出されます、<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>セキュリティ トークン</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>。 具体的には、クライアントがセキュリティ必要なを使用してトークンの種類を指定します、<xref:System.ServiceModel.Description.ClientCredentials>クラスおよび<xref:System.ServiceModel.Description.ClientCredentials>クラスの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>セキュリティ トークンを取得するメソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A></xref:System.ServiceModel.Description.ClientCredentials></xref:System.ServiceModel.Description.ClientCredentials>。 必要なセキュリティ トークンの場合は、<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>セキュリティ トークン、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッドの呼び出し、<xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29>メソッド</xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29></xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A></xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>。"
  syntax:
    content: 'public class KerberosSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenProvider
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref>クラスの指定したサービス プリンシパル名を使用します。"
  remarks: "このコンス トラクター<xref:System.Security.Principal.TokenImpersonationLevel>にクライアントによって許可される偽装レベルを設定する`Identification`です。</xref:System.Security.Principal.TokenImpersonationLevel> 呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント id として使用します</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>。"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "取得するサービス プリンシパル名、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>のセキュリティ トークン。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref>クラスの指定したサービス プリンシパル名と、クライアントでの受信者を許可するかどうかを使用して、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>クライアントの資格情報を偽装するセキュリティ トークン。"
  remarks: "呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント id として使用します</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>。"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "取得するサービス プリンシパル名、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>のセキュリティ トークン。"
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A<xref:System.Security.Principal.TokenImpersonationLevel>レベルを指定の受信者、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンがクライアントの代理として機能できます</xref:System.Security.Principal.TokenImpersonationLevel>。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref>クラスの指定したサービス プリンシパル名、クライアント id を使用して、クライアントでの受信者を許可するかどうかと、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>クライアントの資格情報を偽装するセキュリティ トークン。"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "取得するサービス プリンシパル名、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>のセキュリティ トークン。"
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A<xref:System.Security.Principal.TokenImpersonationLevel>レベルを指定の受信者、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンがクライアント プロセスの代理として機能できます</xref:System.Security.Principal.TokenImpersonationLevel>。"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "A<xref:System.Net.NetworkCredential>の id を表す、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref></xref:System.Net.NetworkCredential> 。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "取得、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークン。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッドによって呼び出されます、<xref:System.ServiceModel.Description.ClientCredentials>クラスのクライアントが SOAP メッセージを送信するときに、<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>セキュリティ トークンが必要です</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken></xref:System.ServiceModel.Description.ClientCredentials></xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッド GetTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、セキュリティ トークンを取得します。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  id: NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Id を取得、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークン。"
  remarks: "NetworkCredential プロパティの値が`null`と<xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>メソッドを呼び出して、呼び出し元のスレッドの現在のコンテキスト (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) がクライアント id として使用します</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A></xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>。"
  syntax:
    content: public System.Net.NetworkCredential NetworkCredential { get; }
    return:
      type: System.Net.NetworkCredential
      description: "A<xref:System.Net.NetworkCredential>の id を表す、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref></xref:System.Net.NetworkCredential> 。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "サービス プリンシパル名を取得、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンを取得します。"
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "サービス プリンシパル名、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンを取得します。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  id: TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "レベルを指定する値を取得の受信者、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンがクライアントの代理として機能できます。"
  remarks: "TokenImpersonationLevel プロパティはいずれかである必要があります`Identification`または`Impersonation`です。"
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A<xref:System.Security.Principal.TokenImpersonationLevel>レベルを指定の受信者、 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>セキュリティ トークンがクライアントの代理として機能できます</xref:System.Security.Principal.TokenImpersonationLevel>。"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
