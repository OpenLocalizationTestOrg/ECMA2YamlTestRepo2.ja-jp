### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeClientStream
  id: NamedPipeClientStream
  children:
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  - System.IO.Pipes.NamedPipeClientStream.Connect
  - System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.Finalize
  - System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  langs:
  - csharp
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream
  fullName: System.IO.Pipes.NamedPipeClientStream
  type: Class
  summary: "公開、<xref:System.IO.Stream>名前付きパイプ、同期および非同期の両方がサポートする読み取りおよび書き込み操作中心</xref:System.IO.Stream>。"
  remarks: "名前付きパイプは、パイプ サーバーと&1; つ以上のパイプ クライアント間の通信の一方向または双方向のパイプを提供します。 名前付きパイプは、ローカルまたはネットワーク経由で、プロセス間通信に使用できます。 単一のパイプ名は、複数の NamedPipeClientStream オブジェクトで共有できます。       すべてのプロセスは、名前付きパイプ サーバーまたはクライアント、またはその両方として機能できます。      > [!NOTE] > の[!INCLUDE[winxppro](~/add/includes/winxppro-md.md)]と[!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)]、最大で 10 パイプは、ネットワーク経由で同時に接続できます。"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The server then waits for a NamedPipeClientStream object in a child process to connect to it. In this example, both processes are on the same computer and the NamedPipeClientStream object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which connects to the server process. For the entire code sample, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/t-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/t-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: 'public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>指定されたパイプ名を持つクラス。"
  remarks: "このコンス トラクターは、次の既定値を使用します:-の既定のサーバー名&quot;です。&quot;です。      -既定<xref:System.IO.Pipes.PipeDirection><xref:System.IO.Pipes.PipeDirection>。</xref:System.IO.Pipes.PipeDirection>の値</xref:System.IO.Pipes.PipeDirection>      -既定<xref:System.IO.Pipes.PipeOptions><xref:System.IO.Pipes.PipeOptions>。</xref:System.IO.Pipes.PipeOptions>の値</xref:System.IO.Pipes.PipeOptions>      -既定<xref:System.Security.Principal.TokenImpersonationLevel><xref:System.Security.Principal.TokenImpersonationLevel>。</xref:System.Security.Principal.TokenImpersonationLevel>の値</xref:System.Security.Principal.TokenImpersonationLevel>      -既定<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>長さゼロの文字列です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>指定されたパイプとサーバーの名前を持つクラス。"
  remarks: "このコンス トラクターは、次の既定値を使用します:-A の既定<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>      -既定<xref:System.IO.Pipes.PipeOptions><xref:System.IO.Pipes.PipeOptions>。</xref:System.IO.Pipes.PipeOptions>の値</xref:System.IO.Pipes.PipeOptions>      -既定<xref:System.Security.Principal.TokenImpersonationLevel><xref:System.Security.Principal.TokenImpersonationLevel>。</xref:System.Security.Principal.TokenImpersonationLevel>の値</xref:System.Security.Principal.TokenImpersonationLevel>      -既定<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>指定されたパイプとサーバー名、および指定されたパイプの方向を持つクラス。"
  remarks: "このコンス トラクターは、次の既定値を使用します:-A の既定<xref:System.IO.Pipes.PipeOptions>値<xref:System.IO.Pipes.PipeOptions>.</xref:System.IO.Pipes.PipeOptions> </xref:System.IO.Pipes.PipeOptions>      -既定<xref:System.Security.Principal.TokenImpersonationLevel><xref:System.Security.Principal.TokenImpersonationLevel>。</xref:System.Security.Principal.TokenImpersonationLevel>の値</xref:System.Security.Principal.TokenImpersonationLevel>      -既定<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/4b637d6e-09dd-4dd0-9a45-_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/4b637d6e-09dd-4dd0-9a45-_1.cs)]"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。       - または -<code>direction</code>が無効です<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>で指定されたパイプの方向は指定されたパイプ ハンドルのクラスです。"
  syntax:
    content: public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。"
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハンドルが非同期的に開かれたことを示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: isConnected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>パイプが接続されているを示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "このパイプのハンドルを安全な場所<xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref>オブジェクトによってカプセル化します。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ストリームが閉じられました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle</code>有効なハンドルではありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>指定されたパイプ名とサーバー名、および指定されたパイプの方向とパイプ オプションを持つクラス。"
  remarks: "このコンス トラクターは、次の既定値を使用します:-A の既定<xref:System.Security.Principal.TokenImpersonationLevel>値<xref:System.Security.Principal.TokenImpersonationLevel>.</xref:System.Security.Principal.TokenImpersonationLevel> </xref:System.Security.Principal.TokenImpersonationLevel>      -既定<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。"
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "開くか、パイプを作成する方法を決定する列挙値の&1; つ。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。       - または -<code>direction</code>が無効です<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。       - または -<code>options</code>が無効です<xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>クラスは、指定されたパイプ名とサーバー名、および指定されたパイプの方向、パイプのオプション、およびセキュリティ偽装レベルを使用します。"
  remarks: "このコンス トラクターが既定<xref:System.IO.HandleInheritability><xref:System.IO.HandleInheritability>。</xref:System.IO.HandleInheritability>の値</xref:System.IO.HandleInheritability>を使用します"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。"
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "開くか、パイプを作成する方法を決定する列挙値の&1; つ。"
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "セキュリティ偽装レベルを決定する列挙値の&1; つ。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。       - または -<code>direction</code>が無効です<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。       - または -<code>options</code>が無効です<xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref>値。       - または -<code>impersonationLevel</code>が無効です<xref:System.Security.Principal.TokenImpersonationLevel>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>クラスは、指定されたパイプ名とサーバー名、および指定されたパイプのオプション、セキュリティ偽装レベル、および継承性モードを使用します。"
  remarks: "このコンス トラクターのパイプの方向はによって決定されます、`desiredAccessRights`パラメーター。 場合、`desiredAccessRights`値は<xref:System.IO.Pipes.PipeAccessRights>、パイプの方向は<xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeAccessRights> 場合の値`desiredAccessRights` <xref:System.IO.Pipes.PipeAccessRights> <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection>をすることは、パイプの方向</xref:System.IO.Pipes.PipeAccessRights>には 場合の値`desiredAccessRights`両方<xref:System.IO.Pipes.PipeAccessRights><xref:System.IO.Pipes.PipeAccessRights><xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection>をすることは、パイプの方向</xref:System.IO.Pipes.PipeAccessRights>と</xref:System.IO.Pipes.PipeAccessRights>が含まれています"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
    - id: desiredAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: "パイプの必要なアクセス権を指定する列挙値の&1; つ。"
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "開くか、パイプを作成する方法を決定する列挙値の&1; つ。"
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "セキュリティ偽装レベルを決定する列挙値の&1; つ。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "基になるハンドルを子プロセスで継承可能をするかどうかを決定する列挙値の&1; つ。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。       - または -<code>options</code>が無効です<xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref>値。       - または -<code>impersonationLevel</code>が無効です<xref:System.Security.Principal.TokenImpersonationLevel>値。       - または -<code>inheritability</code>が無効です<xref:System.IO.HandleInheritability>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>クラスは、指定されたパイプ名とサーバー名、および指定されたパイプの方向、パイプのオプション、セキュリティ偽装レベル、および継承性モードを使用します。"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "、に接続するリモート コンピューターの名前または&quot;です。&quot;ローカル コンピューターを指定します。"
    - id: pipeName
      type: System.String
      description: "パイプの名前。"
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "パイプの方向を決定する列挙値の&1; つ。"
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "開くか、パイプを作成する方法を決定する列挙値の&1; つ。"
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "セキュリティ偽装レベルを決定する列挙値の&1; つ。"
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "基になるハンドルを子プロセスで継承可能をするかどうかを決定する列挙値の&1; つ。"
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>または<code>serverName</code>は長さ&0; の文字列。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>設定されている「匿名」です。       - または -<code>direction</code>が無効です<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。       - または -<code>options</code>が無効です<xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref>値。       - または -<code>impersonationLevel</code>が無効です<xref:System.Security.Principal.TokenImpersonationLevel>値。       - または -<code>inheritability</code>が無効です<xref:System.IO.HandleInheritability>値。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  id: Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "無限のタイムアウト値を待機中のサーバーに接続します。"
  remarks: "このメソッドは、<xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29>無限のタイムアウト値を持つメソッドです</xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29>。       このメソッドでは、使用可能になるパイプ インスタンスが待機します。 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>前に返す場合があります<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>から呼び出される、<xref:System.IO.Pipes.NamedPipeServerStream>オブジェクトが、<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>まで返されません<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>が返されました</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A></xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A></xref:System.IO.Pipes.NamedPipeServerStream></xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>。</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>       後のパイプに書き込まれたデータ、<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトが接続されている、 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>への呼び出しの後、サーバーを使用することは</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>、サーバーが呼び出される前に、</xref:System.IO.Pipes.NamedPipeClientStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/m-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: public void Connect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "クライアントが既に接続されています。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  id: Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "指定されたタイムアウト期間内で待機中のサーバーに接続します。"
  remarks: "このメソッドでは、使用可能になるパイプ インスタンスが待機します。 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>前に返す場合があります<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>から呼び出される、<xref:System.IO.Pipes.NamedPipeServerStream>が<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>まで返されません<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>が返されました</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A></xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A></xref:System.IO.Pipes.NamedPipeServerStream></xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>。</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> 設定する、`timeout`パラメーターを<xref:System.Threading.Timeout.Infinite>無限のタイムアウト値を指定します</xref:System.Threading.Timeout.Infinite>。       後のパイプに書き込まれたデータ、<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトが接続されている、 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>への呼び出しの後、サーバーを使用することは</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>、サーバーが呼び出される前に、</xref:System.IO.Pipes.NamedPipeClientStream>"
  syntax:
    content: public void Connect (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "サーバーが、接続がタイムアウトする前に応答するまで待機するミリ秒数。"
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定したサーバーに接続できませんでした<code> timeout </code>期間。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 より小さいに設定されていない<xref:System.Threading.Timeout.Infinite>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "クライアントが既に接続されています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "サーバーが別のクライアントに接続されているし、タイムアウト期限が切れました。"
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  id: ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "無限のタイムアウト時間を待機中のサーバーに非同期接続します。"
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "接続操作を表す、非同期タスク。"
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  id: ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "指定されたタイムアウト期間内で待機中のサーバーに非同期接続します。"
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "サーバーが、接続がタイムアウトする前に応答するまで待機するミリ秒数。"
    return:
      type: System.Threading.Tasks.Task
      description: "接続操作を表す、非同期タスク。"
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  id: ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "非同期的に待機中のサーバーに接続し、キャンセル要求を監視します。"
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "キャンセル要求を監視するトークンです。 既定値は<xref:System.Threading.CancellationToken.None*>。</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "接続操作を表す、非同期タスク。"
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  id: ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "非同期的に指定されたタイムアウト期間内で待機中のサーバーに接続し、キャンセル要求を監視します。"
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.Int32
      description: "サーバーが、接続がタイムアウトする前に応答するまで待機するミリ秒数。"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "キャンセル要求を監視するトークンです。 既定値は<xref:System.Threading.CancellationToken.None*>。</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "接続操作を表す、非同期タスク。"
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "アンマネージ リソースを解放し、前に他のクリーンアップ操作を実行、 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref>インスタンスがガベージ コレクションによって回収されます。"
  syntax:
    content: ~NamedPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  id: NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "同じパイプ名を共有するサーバー インスタンスの数を取得します。"
  remarks: "このプロパティは、サーバー インスタンスの数を返します、<xref:System.IO.Pipes.NamedPipeServerStream>オブジェクトを現在<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトへのハンドルがまたはに接続されている</xref:System.IO.Pipes.NamedPipeClientStream></xref:System.IO.Pipes.NamedPipeServerStream>。 場合、現在の<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトが、名前付きパイプ サーバーに接続されていないか現在のパイプ ハンドルが設定されていない場合、このプロパティは<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>をスロー</xref:System.IO.Pipes.NamedPipeClientStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. In this example, a <xref:System.IO.Pipes.NamedPipeClientStream> object is created in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/p-system.io.pipes.namedp_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/p-system.io.pipes.namedp_1.cs)]"
  syntax:
    content: public int NumberOfServerInstances { get; }
    return:
      type: System.Int32
      description: "同じパイプ名を共有するサーバー インスタンスの数。"
  overload: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプ ハンドルが設定されていません。       - または - 現在<xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref>オブジェクトがまだに接続されていない、 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref>オブジェクト。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、I/O エラーが発生しました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "基になるパイプ ハンドルは閉じられます。"
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream.NamedPipeClientStream
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.NamedPipeClientStream.Connect*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect
  nameWithType: NamedPipeClientStream.Connect
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync
  nameWithType: NamedPipeClientStream.ConnectAsync
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeClientStream.Finalize
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
