### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  id: SecurityKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  langs:
  - csharp
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  type: Class
  summary: "キー識別子句の抽象基本クラスを表します。"
  remarks: "通常、SecurityKeyIdentifierClause は、以外のときに使用される、カスタム セキュリティ トークン サービスが作成される必要はありません。 セキュリティ トークン サービスには、セキュリティ トークンが返される、ときに、発行されたセキュリティ トークンには、接続されており、結び付けられていないセキュリティ トークンへの参照が含まれています。 アタッチされた参照が SOAP メッセージのセキュリティ ヘッダー内に含まれるセキュリティ トークンを参照し、結び付けられていない参照が SOAP メッセージのセキュリティ ヘッダーに含まれていないセキュリティ トークンを参照します。 これらの参照は、通常、発行されたセキュリティ トークンの信頼性を確認します。"
  syntax:
    content: public abstract class SecurityKeyIdentifierClause
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: SecurityKeyIdentifierClause(String)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>クラス、指定したキー識別句型を使用します。"
  remarks: "このセキュリティ キー識別子が XML にシリアル化する際、`clauseType`パラメーターとしてシリアル化、`ValueType`の属性、`<SecurityTokenReference>`要素。"
  syntax:
    content: protected SecurityKeyIdentifierClause (string clauseType);
    parameters:
    - id: clauseType
      type: System.String
      description: "キー識別子句型。 値を設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>プロパティ</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: SecurityKeyIdentifierClause(String,Byte[],Int32)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>クラスの指定したキー識別子句型、nonce、および派生キーの長さを使用します。"
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙的な派生キー識別子の作成はできません。 ただし、[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙のキー識別子を含む受信 SOAP メッセージを処理します。'
  syntax:
    content: protected SecurityKeyIdentifierClause (string clauseType, byte[] nonce, int length);
    parameters:
    - id: clauseType
      type: System.String
      description: "キー識別子句型。 値を設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>プロパティ</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>。"
    - id: nonce
      type: System.Byte[]
      description: "配列<xref:System.Byte>派生キーの作成に使用された nonce を格納している</xref:System.Byte>。 によって返される値の設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>メソッド</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>。"
    - id: length
      type: System.Int32
      description: "派生キーのサイズ。 値を設定、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>プロパティ</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キーを作成するかどうかを示す値を取得します。"
  remarks: "キーを作成するには、コンス トラクターに渡されたパラメーターを使用して、ときに、返される CanCreateKey メソッドをオーバーライド`true`を実装し、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>メソッド</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>。"
  syntax:
    content: public virtual bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、キーを作成することができます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  id: ClauseType
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キー識別句型を取得します。"
  syntax:
    content: public string ClauseType { get; }
    return:
      type: System.String
      description: "キー識別子句型。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "コンス トラクターに渡されるパラメーターに基づいたキーを作成します。"
  remarks: "コンス トラクターに渡されるパラメーターを使用して、キーを作成するときに、上書き、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A>を返すメソッドを`true`CreateKey メソッドを実装します</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A>。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>作成されたキーを格納しています。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  id: DerivationLength
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "派生キーのサイズを取得します。"
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙的な派生キー識別子の作成はできません。 ただし、[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙のキー識別子を含む受信 SOAP メッセージを処理します。'
  syntax:
    content: public int DerivationLength { get; }
    return:
      type: System.Int32
      description: "派生キーのサイズ。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  id: GetDerivationNonce
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: GetDerivationNonce()
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "派生キーの生成に使用された nonce を取得します。"
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙的な派生キー識別子の作成はできません。 ただし、[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]暗黙のキー識別子を含む受信 SOAP メッセージを処理します。'
  syntax:
    content: public byte[] GetDerivationNonce ();
    parameters: []
    return:
      type: System.Byte[]
      description: "配列<xref:System.Byte>派生キーの生成に使用された nonce を格納している</xref:System.Byte>。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  id: Id
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または設定キー識別子句の id。"
  remarks: "Id プロパティとしてシリアル化されるこのセキュリティ キー識別子が XML にシリアル化されるとき、`Id`の属性、`<SecurityTokenReference>`要素。 プロパティが場合`null`、`Id`で属性が含まれていない、`<SecurityTokenReference>`要素。"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "キー識別子句の id。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのキー識別子が、指定したキー識別句と同じかどうかを示す値を返します。"
  syntax:
    content: public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>と比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> keyIdentifierClause </code> ; 現在のインスタンスと同じインスタンスは、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause(String)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause(String,Byte[],Int32)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: GetDerivationNonce()
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: GetDerivationNonce
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: SecurityKeyIdentifierClause.Matches
