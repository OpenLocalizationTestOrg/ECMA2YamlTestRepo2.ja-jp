### YamlMime:ManagedReference
items:
- uid: System.Windows.TriggerBase
  id: TriggerBase
  children:
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  langs:
  - csharp
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.TriggerBase
  type: Class
  summary: "内で条件付きの値を指定する基本クラスを表します、 <xref href=&quot;System.Windows.Style&quot;> </xref>オブジェクト。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]スタイルとテンプレートのモデルでは、内でトリガーを指定することができます、 <xref:System.Windows.Style>、 <xref:System.Windows.Controls.ControlTemplate>、 <xref:System.Windows.DataTemplate>.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Style> TriggerBase できるようにするときに特定の変更を適用するオブジェクトの基本クラスは、基本的には、条件 (など、特定のプロパティの値に変わったら`true`、イベント発生時または) がなければです。"
  example:
  - "There are several different types of triggers: <xref:System.Windows.Trigger>, <xref:System.Windows.MultiTrigger>, <xref:System.Windows.EventTrigger>, <xref:System.Windows.DataTrigger>, and <xref:System.Windows.MultiDataTrigger>.  \n  \n The <xref:System.Windows.Trigger> class is the simplest type of triggers. A <xref:System.Windows.Trigger> object allows you to apply changes based on the value of a property. For example, the following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]  \n  \n If you need to apply changes based on the state of multiple properties, you can use the <xref:System.Windows.MultiTrigger>. For an example, see the <xref:System.Windows.MultiTrigger> page.  \n  \n The <xref:System.Windows.EventTrigger> class allows you to apply changes when an event occurs. The following example contains two <xref:System.Windows.EventTrigger> objects, one of which occurs when the mouse enters the element and the other occurs when the mouse leaves the element.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/t-system.windows.trigger_2.xaml)]  \n  \n These are also the <xref:System.Windows.DataTrigger> and the <xref:System.Windows.MultiDataTrigger> classes. These are similar to <xref:System.Windows.Trigger> and <xref:System.Windows.MultiTrigger> except that they are for data-bound properties."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public abstract class TriggerBase : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.TriggerBase.EnterActions
  id: EnterActions
  parent: System.Windows.TriggerBase
  langs:
  - csharp
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
  fullName: System.Windows.TriggerBase.EnterActions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コレクションを取得<xref href=&quot;System.Windows.TriggerAction&quot;></xref>トリガー オブジェクトがアクティブになったときに適用するオブジェクト。 このプロパティには適用されません、 <xref href=&quot;System.Windows.EventTrigger&quot;> </xref>クラスです。"
  remarks: "このプロパティは適用されません、<xref:System.Windows.EventTrigger>クラス イベントは、EnterActions 中の時間の時点を表すためおよび<xref:System.Windows.TriggerBase.ExitActions%2A>オブジェクトの状態に対応します</xref:System.Windows.TriggerBase.ExitActions%2A></xref:System.Windows.EventTrigger>。 <xref:System.Windows.EventTrigger>オブジェクトを使用して、<xref:System.Windows.EventTrigger.Actions%2A>プロパティ代わりにします</xref:System.Windows.EventTrigger.Actions%2A></xref:System.Windows.EventTrigger>。      > [!NOTE] > このプロパティのみ設定できます[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]に示すコレクション構文を使用して、またはコレクション オブジェクトにアクセスして追加などのさまざまなメソッドを使用します。 コレクション オブジェクト自体にアクセスするプロパティは読み取り専用で、コレクション自体は読み取り/書き込みです。      <a name=&quot;xamlPropertyElementUsage_EnterActions&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.EnterActions>       OneOrMoreTriggerActions     </object.EnterActions >   </object>   ``` <a name=&quot;xamlValues_EnterActions&quot;> </a> ## XAML 値*OneOrMoreTriggerActions*&1; つまたは複数<xref:System.Windows.TriggerAction>オブジェクト</xref:System.Windows.TriggerAction>。      "
  syntax:
    content: public System.Windows.TriggerActionCollection EnterActions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.TriggerBase.EnterActions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerBase.ExitActions
  id: ExitActions
  parent: System.Windows.TriggerBase
  langs:
  - csharp
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
  fullName: System.Windows.TriggerBase.ExitActions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コレクションを取得<xref href=&quot;System.Windows.TriggerAction&quot;></xref>トリガー オブジェクトが非アクティブになったときに適用するオブジェクト。 このプロパティには適用されません、 <xref href=&quot;System.Windows.EventTrigger&quot;> </xref>クラスです。"
  remarks: "このプロパティは適用されません、<xref:System.Windows.EventTrigger>クラス イベントは、中に、時間の時点を表すため<xref:System.Windows.TriggerBase.EnterActions%2A>ExitActions をオブジェクトの状態に対応しているとします</xref:System.Windows.TriggerBase.EnterActions%2A></xref:System.Windows.EventTrigger>。 <xref:System.Windows.EventTrigger>オブジェクトを使用して、<xref:System.Windows.EventTrigger.Actions%2A>プロパティ代わりにします</xref:System.Windows.EventTrigger.Actions%2A></xref:System.Windows.EventTrigger>。      > [!NOTE] > このプロパティのみ設定できます[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]に示すコレクション構文を使用して、またはコレクション オブジェクトにアクセスして追加などのさまざまなメソッドを使用します。 コレクション オブジェクト自体にアクセスするプロパティは読み取り専用で、コレクション自体は読み取り/書き込みです。      <a name=&quot;xamlPropertyElementUsage_ExitActions&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.ExitActions>       OneOrMoreTriggerActions     </object.ExitActions >   </object>   ``` <a name=&quot;xamlValues_ExitActions&quot;> </a> ## XAML 値*OneOrMoreTriggerActions*&1; つまたは複数<xref:System.Windows.TriggerAction>オブジェクト</xref:System.Windows.TriggerAction>。      "
  syntax:
    content: public System.Windows.TriggerActionCollection ExitActions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.TriggerBase.ExitActions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.TriggerBase.EnterActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
  fullName: System.Windows.TriggerBase.EnterActions
- uid: System.Windows.TriggerActionCollection
  parent: System.Windows
  isExternal: false
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.TriggerActionCollection
- uid: System.Windows.TriggerBase.ExitActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
  fullName: System.Windows.TriggerBase.ExitActions
- uid: System.Windows.TriggerBase.EnterActions*
  parent: System.Windows.TriggerBase
  isExternal: false
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
- uid: System.Windows.TriggerBase.ExitActions*
  parent: System.Windows.TriggerBase
  isExternal: false
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
