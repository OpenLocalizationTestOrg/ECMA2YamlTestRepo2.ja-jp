### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.AspLog
  id: AspLog
  children:
  - Microsoft.VisualBasic.Logging.AspLog.#ctor
  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  langs:
  - csharp
  name: AspLog
  nameWithType: AspLog
  fullName: Microsoft.VisualBasic.Logging.AspLog
  type: Class
  summary: "プロパティとイベントと例外の情報をアプリケーションのログ リスナーに書き込むためのメソッドを提供します。"
  remarks: "`My.Application.Log`オブジェクトにアクセスするための簡単なエントリ ポイントを提供する、 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]services のログ記録します。 `WriteEntry`と`WriteException`メソッドは、アプリケーションのログ リスナーにメッセージを書き込みます。 リスナーは、アプリケーションの構成ファイルで構成できます。 詳細については、次を参照してください。[チュートリアル: 変更場所 My.Application.Log 書き込みます情報](~/add/includes/ajax-current-ext-md.md)と[アプリケーション ログの使用](~/add/includes/ajax-current-ext-md.md)です。       `My.Application.Log`オブジェクトはクライアント アプリケーションでのみ使用できます。 Web アプリケーションを使用して`My.Log`です。 詳細については、 <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>。</xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>を参照してください。       次の表に、関連するタスクの例については、`My.Application.Log`オブジェクト。      ||参照してください |  |--------|---------|  |イベント情報をアプリケーションのログ リスナーに書き込む |[する方法: ログ メッセージを書き込む](~/add/includes/ajax-current-ext-md.md)|  |例外情報をアプリケーションのログ リスナーに書き込む |[する方法: 例外をログ](~/add/includes/ajax-current-ext-md.md)|  |場所を特定する`My.Application.Log`情報の書き込み |[チュートリアル: My.Application.Log による情報の書き込み先の確認](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.Logging.Log
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref>クラスです。"
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref>クラスです。"
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> 指定する名前、<xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>プロパティ オブジェクト</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>。"
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "新たに作成<xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;></xref>に追加し、<xref:System.Diagnostics.TraceSource.Listeners*>コレクションです</xref:System.Diagnostics.TraceSource.Listeners*>。"
  remarks: "このメソッドが新たに作成<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>、その名前に設定`FileLog`、重大度レベルとメッセージをログに記録するように構成および<xref:System.Diagnostics.SourceLevels>およびそれ以降</xref:System.Diagnostics.SourceLevels></xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>。 新しい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>にオブジェクトが追加し、<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクションです</xref:System.Diagnostics.TraceSource.Listeners%2A></xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>。       <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>場合、メソッドを呼び出して、<xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>プロパティが構成されていません</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A></xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>。 トレース ソースは、アプリケーションの構成ファイルで構成できます。"
  syntax:
    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Microsoft.VisualBasic.Logging.Log
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog
  nameWithType: AspLog.AspLog
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists
