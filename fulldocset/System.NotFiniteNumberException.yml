### YamlMime:ManagedReference
items:
- uid: System.NotFiniteNumberException
  id: NotFiniteNumberException
  children:
  - System.NotFiniteNumberException.#ctor
  - System.NotFiniteNumberException.#ctor(System.Double)
  - System.NotFiniteNumberException.#ctor(System.String)
  - System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double)
  - System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  - System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.OffendingNumber
  langs:
  - csharp
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException
  fullName: System.NotFiniteNumberException
  type: Class
  summary: "浮動小数点値が正の無限大、負の無限大、または Not 数 (NaN) 場合にスローされる例外。"
  remarks: "NotFiniteNumberException は浮動小数点演算で、無限大および Not 数の概念をサポートしていないプログラミング言語で使用できます。       NotFiniteNumberException は、値は 0x80131528 HRESULT COR_E_NOTFINITENUMBER を使用します。       NotFiniteNumberException のインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.NotFiniteNumberException.%23ctor%2A>コンス トラクター。</xref:System.NotFiniteNumberException.%23ctor%2A> 。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class NotFiniteNumberException : ArithmeticException
  inheritance:
  - System.ArithmeticException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor
  id: '#ctor'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: System.NotFiniteNumberException.NotFiniteNumberException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、 <xref:System.Exception.Message%2A>「で見つかった数は有限な数ですをでした」などに、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ</xref:System.Exception.Message%2A>を初期化します このメッセージでは、現在のシステム カルチャが考慮されます。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException ();
    parameters: []
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(Double)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>無効な番号を持つクラス。"
  remarks: "`offendingNumber`パラメーターは両方を指定する必要があります、<xref:System.Double>と数が無効です</xref:System.Double>。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.NotFiniteNumberException.OffendingNumber%2A>|数が無効です |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException (double offendingNumber);
    parameters:
    - id: offendingNumber
      type: System.Double
      description: "例外を引き起こした引数の値。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>指定したエラー メッセージを使用します。"
  remarks: "いることを確認、`message`文字列は、ユーザーが理解できるものと、現在のカルチャに合わせてローカライズされています。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException (string message);
    parameters:
    - id: message
      type: System.String
      description: "エラーを説明するメッセージ。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>シリアル化されたデータを持つクラス。"
  remarks: "このコンス トラクターは、ストリームで送信された例外オブジェクトを再構成する逆シリアル化中に呼び出されます。"
  syntax:
    content: protected NotFiniteNumberException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データを保持するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは転送先に関する文脈情報。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>した指定したエラー メッセージと数が無効です。"
  remarks: "いることを確認、`message`文字列は、ユーザーが理解できるものと、現在のカルチャに合わせてローカライズされています。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |。  |<xref:System.NotFiniteNumberException.OffendingNumber%2A>|数が無効です |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber);
    parameters:
    - id: message
      type: System.String
      description: "エラーを説明するメッセージ。"
    - id: offendingNumber
      type: System.Double
      description: "例外を引き起こした引数の値。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>指定したエラー メッセージおよびこの例外の根本原因である内部例外への参照を持つクラス。"
  remarks: "前の例外への参照を含めることができます、前の例外の直接の結果としてスローされる例外、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。 <xref:System.Exception.InnerException%2A>プロパティは、コンス トラクターに渡されたものと同じ値を返しますまたは`null`場合、<xref:System.Exception.InnerException%2A>プロパティがコンス トラクターには、内部例外値を指定していません</xref:System.Exception.InnerException%2A></xref:System.Exception.InnerException%2A>。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部例外の参照 |。  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
    - id: innerException
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`innerException`パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) で現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  id: '#ctor(System.String,System.Double,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Double,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref>した指定したエラー メッセージ、無効な番号は、この例外の根本原因となった内部例外への参照。"
  remarks: "前の例外への参照を含めることができます、前の例外の直接の結果としてスローされる例外、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。 <xref:System.Exception.InnerException%2A>プロパティは、コンス トラクターに渡されたものと同じ値を返しますまたは`null`場合、<xref:System.Exception.InnerException%2A>プロパティがコンス トラクターには、内部例外値を指定していません</xref:System.Exception.InnerException%2A></xref:System.Exception.InnerException%2A>。       次の表は、 <xref:System.NotFiniteNumberException>。</xref:System.NotFiniteNumberException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部例外の参照 |。  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |。  |<xref:System.NotFiniteNumberException.OffendingNumber%2A>|数が無効です |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
    - id: offendingNumber
      type: System.Double
      description: "例外を引き起こした引数の値。"
    - id: innerException
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`innerException`パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) で現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "セット、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>無効な数と追加の例外情報を含むオブジェクト。"
  remarks: "<xref:System.TypeLoadException.GetObjectData%2A>設定、<xref:System.Runtime.Serialization.SerializationInfo>シリアル化の対象となるすべての例外オブジェクト データ</xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.TypeLoadException.GetObjectData%2A> 逆シリアル化中に例外オブジェクトを再構成、 <xref:System.Runtime.Serialization.SerializationInfo>、ストリームで転送します</xref:System.Runtime.Serialization.SerializationInfo>。       詳細については、 <xref:System.Runtime.Serialization.SerializationInfo>。</xref:System.Runtime.Serialization.SerializationInfo>を参照してください。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データを保持するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは転送先に関する文脈情報。"
  overload: System.NotFiniteNumberException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.NotFiniteNumberException.OffendingNumber
  id: OffendingNumber
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: System.NotFiniteNumberException.OffendingNumber
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "無効な数値が正の無限大、負の無限大、または Not 数 (NaN) を取得します。"
  remarks: "OffendingNumber プロパティは、値が指定されていない場合、コンス トラクター、または&0; に渡されたものと同じ値を返します。 コンテンツまたは、無効な値の書式をカスタマイズする OffendingNumber プロパティをオーバーライドします。       このプロパティは、読み取り専用です。"
  syntax:
    content: public double OffendingNumber { get; }
    return:
      type: System.Double
      description: "無効な数です。"
  overload: System.NotFiniteNumberException.OffendingNumber*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArithmeticException
  isExternal: false
  name: System.ArithmeticException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotFiniteNumberException.#ctor
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: System.NotFiniteNumberException.NotFiniteNumberException()
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.NotFiniteNumberException.#ctor(System.String)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double)
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Double,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.NotFiniteNumberException.OffendingNumber
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: System.NotFiniteNumberException.OffendingNumber
- uid: System.NotFiniteNumberException.#ctor*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException.NotFiniteNumberException
- uid: System.NotFiniteNumberException.GetObjectData*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData
  nameWithType: NotFiniteNumberException.GetObjectData
- uid: System.NotFiniteNumberException.OffendingNumber*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
