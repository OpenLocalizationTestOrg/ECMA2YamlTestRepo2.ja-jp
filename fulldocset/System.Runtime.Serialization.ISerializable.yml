### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ISerializable
  id: ISerializable
  children:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
  type: Interface
  summary: "独自のシリアル化と逆シリアル化を制御するオブジェクトを許可します。"
  remarks: "<xref:System.SerializableAttribute>。</xref:System.SerializableAttribute>でシリアル化する可能性がある。 任意のクラスをマークする必要があります。 クラスをシリアル化プロセスを制御する場合は、ISerializable インターフェイスを実装できます。 <xref:System.Runtime.Serialization.Formatter>呼び出し、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>シリアル化時に指定された設定と<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトを表すために必要なすべてのデータ</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A></xref:System.Runtime.Serialization.Formatter>。 <xref:System.Runtime.Serialization.Formatter>を作成、<xref:System.Runtime.Serialization.SerializationInfo>グラフ内のオブジェクトの型を使用します</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.Formatter>。 オブジェクト自体を使用できるは、プロキシを送信する必要がある、<xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>と<xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>メソッド<xref:System.Runtime.Serialization.SerializationInfo>、転送された情報を変更する</xref:System.Runtime.Serialization.SerializationInfo></xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A></xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>。       クラスの継承の場合は、ISerializable を実装する基本クラスから派生するクラスをシリアル化することはできます。 この場合、派生クラスが<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A><xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>。</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>の実装内</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>の基本クラス実装を呼び出す必要があります。 それ以外の場合、基本クラスからのデータはシリアル化されません。       ISerializable インターフェイスにコンス トラクター シグネチャのコンス トラクターを持つ (<xref:System.Runtime.Serialization.SerializationInfo>については、<xref:System.Runtime.Serialization.StreamingContext>コンテキスト).</xref:System.Runtime.Serialization.StreamingContext> </xref:System.Runtime.Serialization.SerializationInfo> 内のデータの後に逆シリアル化時に、現在のコンス トラクターが呼び出されます、<xref:System.Runtime.Serialization.SerializationInfo>フォーマッタによって逆シリアル化されたが</xref:System.Runtime.Serialization.SerializationInfo>。 一般に、クラスが封印されていない場合は、このコンス トラクターを保護する必要があります。       オブジェクトが逆シリアル化の順序は保証できません。 たとえば、1 つの型がないされてまだ逆シリアル化する型を参照する場合、例外が発生します。 実装することによって、問題を回避することができます、このような依存関係のある型を作成する場合、`IDeserializationCallback`インターフェイスおよび`OnDeserialization`メソッドです。       シリアル化アーキテクチャ<xref:System.MarshalByRefObject><xref:System.Object>。</xref:System.Object>を拡張する型と同じ</xref:System.MarshalByRefObject>拡張オブジェクトの種類を処理します。 これらの型をマークすることができます、<xref:System.SerializableAttribute>およびその他のオブジェクトの種類と ISerializable インターフェイスを実装します</xref:System.SerializableAttribute>。 そのオブジェクトの状態はキャプチャされ、ストリームに永続化します。       これらの型を<xref:System.Runtime.Remoting>リモート処理インフラストラクチャを提供する一般的なシリアル化のプリエンプションを行い、代わりにシリアル化<xref:System.MarshalByRefObject>。</xref:System.MarshalByRefObject>プロキシのためのサロゲート</xref:System.Runtime.Remoting>、使用されている場合 サロゲートは、および特定の種類のオブジェクトを逆シリアル化する方法を知っているヘルパーです。 <xref:System.Runtime.Remoting.ObjRef>。</xref:System.Runtime.Remoting.ObjRef>の種類は、プロキシは、ほとんどの場合、ユーザーに非表示になります       一般的なデザイン パターンとしてではない通常の両方でシリアル化可能な属性でマークして<xref:System.MarshalByRefObject>。</xref:System.MarshalByRefObject>を拡張するクラスの 開発者は、これら&2; つの特性を結合するときにシリアル化とリモート処理シナリオについて慎重に検討する必要があります。 <xref:System.IO.MemoryStream>。</xref:System.IO.MemoryStream>が&1; つの例が、これを適用できます。 基本クラスを while <xref:System.IO.MemoryStream>(<xref:System.IO.Stream>) から拡張<xref:System.MarshalByRefObject>の状態をキャプチャすることは、<xref:System.IO.MemoryStream>が復元および</xref:System.IO.MemoryStream></xref:System.MarshalByRefObject></xref:System.IO.Stream></xref:System.IO.MemoryStream>。 そのため、あります意味のあるデータベースにこのストリームの状態をシリアル化の後で復元します。 ただし、使用すると、リモート処理、この型のオブジェクトはプロキシのようになります。       クラスのシリアル化の詳細については<xref:System.MarshalByRefObject>、 <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>。</xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>を参照してください。</xref:System.MarshalByRefObject>拡張します。 詳細については、ISerializable を実装する、次を参照してください。[カスタム シリアル化](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of the ISerializable interface to define custom serialization behavior for a class.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_4_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_4_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_4_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISerializable
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化するために必要なデータを使用します。"
  remarks: "含まれているすべてのオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタによってシリアル化します</xref:System.Runtime.Serialization.SerializationInfo>。       GetObjectData を呼び出すコードが必要です、<xref:System.Security.Permissions.SecurityPermission>をシリアル化サービスを提供します</xref:System.Security.Permissions.SecurityPermission>。 関連する列挙値: <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>      > [!NOTE] > このメソッドは呼び出すこと&1; 回だけオブジェクトのインスタンスごとのシリアル化中には保証されません。 そのため、その動作がなる呼び出された回数に関係なく同じように、メソッドを実装する必要があります。"
  example:
  - "The following example uses the GetObjectData method to set alternate values for a serialized object. The code uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method of the <xref:System.Runtime.Serialization.SerializationInfo> class to store the alternate values when the object is serialized. Conversely, when the constructor of the `Person` class is called during deserialization, the alternatve values are retrieved using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method and reassigned to the object's fields.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/8416df17-ca26-45ef-baab-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/8416df17-ca26-45ef-baab-_1.vb)]"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "宛先 (を参照してください<xref:System.Runtime.Serialization.StreamingContext>) このシリアル化します</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Runtime.Serialization.ISerializable.GetObjectData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ISerializable.GetObjectData*
  parent: System.Runtime.Serialization.ISerializable
  isExternal: false
  name: GetObjectData
  nameWithType: ISerializable.GetObjectData
