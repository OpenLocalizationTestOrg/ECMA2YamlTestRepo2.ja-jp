### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  id: SecurityTokenResolver
  children:
  - System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
  type: Class
  summary: "キー識別子またはキー識別句があるときにセキュリティ トークンまたはキーを取得するユーティリティ クラスを表します。"
  remarks: "SecurityTokenResolver クラス キーまたはセキュリティを取得するトークンのキー識別子またはキー識別句があるときに使用します。 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>メソッドは、キー識別子またはキー識別句があることにトークンを取得します</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A></xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>。 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>キー識別子句があること、キーを取得します</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A></xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>。 持つメソッド、`Try`戻り値のプレフィックス`false`取得できない場合は、一方せず、メソッド、`Try`プレフィックスが例外をスローします。"
  syntax:
    content: 'public abstract class SecurityTokenResolver : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>クラスです。"
  syntax:
    content: protected SecurityTokenResolver ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  id: CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定されたセキュリティ トークンの既定のセキュリティ トークン リゾルバーを作成します。"
  remarks: "このメソッドから返されるセキュリティ トークン リゾルバーを使用して、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>と<xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>キー識別子およびキー識別句を解決するのには、指定したセキュリティ トークンのメソッド</xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A></xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>。"
  syntax:
    content: public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken> tokens, bool canMatchLocalId);
    parameters:
    - id: tokens
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>をこのセキュリティ トークン リゾルバーをキー識別子およびキー識別句を解決できるセキュリティ トークンのセットを格納します。"
    - id: canMatchLocalId
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>解決するのには、 <xref uid=&quot;langword_csharp_&lt;SecurityTokenReference&gt;&quot; name=&quot;&lt;SecurityTokenReference&gt;&quot; href=&quot;&quot;> </xref>キー識別句がある場所に、SOAP メッセージ内の他、それ以外のセキュリティ キーを参照する<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>キー識別子および句で指定されたセキュリティ トークンを解決する、 <code> tokens </code>パラメーター。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。"
  remarks: "既定では、スロー <xref:System.NotImplementedException>。</xref:System.NotImplementedException> 派生クラスでの機能を提供するには、このメソッドをオーバーライドすることができます。"
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "カスタム構成要素。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別子句で参照されるキーを取得します。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>ResolveSecurityKey メソッド キー識別句は、キーに解決できない場合の動作が異なるとします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>。 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>メソッドを返します`false`、ResolveSecurityKey メソッドが例外をスローします。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> 。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>のためキーを取得します。"
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>キーを表す、指定したキー識別子句で参照します。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定したキー識別句に対してキーを取得できませんでした、 <code> keyIdentifierClause </code>パラメーター。"
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別子に含まれるセキュリティ キー識別句のいずれかに一致するセキュリティ トークンを取得します。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>ResolveToken メソッド キー識別子が、セキュリティ トークンに解決できない場合の動作が異なるとします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>。 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>メソッドを返します`false`、ResolveToken メソッドが例外をスローします。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>セキュリティ トークンを作成します。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別子。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定したキー識別子に対してセキュリティ トークンを作成できません。"
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別句に一致するセキュリティ トークンを取得します。"
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>ResolveToken メソッド キー識別句は、セキュリティ トークンに解決できない場合の動作が異なるとします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>。 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>メソッドを返します`false`、ResolveToken メソッドが例外をスローします。</xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> 。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>セキュリティ トークンを作成します。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別句。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別子句で参照されるキーの取得を試みます。"
  remarks: "TryResolveSecurityKey と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>メソッド キー識別句は、キーに解決できない場合の動作が異なります</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>。 TryResolveSecurityKey メソッドを返します`false`であるのに対し、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>メソッドが例外をスローします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>。"
  syntax:
    content: public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>のためキーを取得します。"
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>指定したキー識別子句で参照されているキーを格納します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーを取得して、指定したキー識別句に対して; ときそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別子句で参照されるキーの取得を試みます。"
  remarks: "TryResolveSecurityKeyCore メソッドによって呼び出されます、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A></xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>。"
  syntax:
    content: protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>のためキーを取得します。"
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>指定したキー識別子句で参照されているキーを格納します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーを取得して、指定したキー識別句に対して; ときそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別子に含まれるキー識別句のいずれかに一致するセキュリティ トークンの取得を試みます。"
  remarks: "TryResolveToken と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッド キー識別子が、セキュリティ トークンに解決できない場合の動作が異なります</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>。 TryResolveToken メソッドを返します`false`であるのに対し、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッドが例外をスローします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>。"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>セキュリティ トークンを作成します。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別子。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ トークンを取得して、指定したキー識別子の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したキー識別句に一致するセキュリティ トークンの取得を試みます。"
  remarks: "TryResolveToken と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッド キー識別子句は、セキュリティ トークンに解決できない場合の動作が異なります</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>。 TryResolveToken メソッドを返します`false`であるのに対し、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッドが例外をスローします</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>。"
  syntax:
    content: public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>セキュリティ トークンを作成します。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別句。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ トークンを取得して、指定したキー識別句に対して; ときそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、指定したキー識別子に含まれるキー識別句の少なくとも&1; つに一致するセキュリティ トークンの取得を試みます。"
  remarks: "TryResolveTokenCore メソッドによって呼び出されます、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A></xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>。"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>セキュリティ トークンを作成します。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別子。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ トークンを取得して、指定したキー識別子の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、指定したキー識別句に一致するセキュリティ トークンの解決を試行します。"
  remarks: "TryResolveTokenCore メソッドによって呼び出されます、<xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A></xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>。"
  syntax:
    content: protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>セキュリティ トークンを作成します。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "このメソッドが戻るとき、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、指定したキー識別句。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セキュリティ トークンを取得して、指定したキー識別句に対して; ときそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver()
  nameWithType: SecurityTokenResolver.SecurityTokenResolver()
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.SecurityTokenResolver()
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>,Boolean)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityToken>
  nameWithType: ReadOnlyCollection<SecurityToken>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: SecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifier)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken(SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: CreateDefaultSecurityTokenResolver
  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SecurityTokenResolver.LoadCustomConfiguration
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveSecurityKey
  nameWithType: SecurityTokenResolver.ResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: ResolveToken
  nameWithType: SecurityTokenResolver.ResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKey
  nameWithType: SecurityTokenResolver.TryResolveSecurityKey
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: SecurityTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveToken
  nameWithType: SecurityTokenResolver.TryResolveToken
- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: SecurityTokenResolver.TryResolveTokenCore
