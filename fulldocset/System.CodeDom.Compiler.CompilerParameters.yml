### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerParameters
  id: CompilerParameters
  children:
  - System.CodeDom.Compiler.CompilerParameters.#ctor
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  - System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  - System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  - System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  - System.CodeDom.Compiler.CompilerParameters.Evidence
  - System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  - System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  - System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  - System.CodeDom.Compiler.CompilerParameters.LinkedResources
  - System.CodeDom.Compiler.CompilerParameters.MainClass
  - System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  - System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  - System.CodeDom.Compiler.CompilerParameters.TempFiles
  - System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  - System.CodeDom.Compiler.CompilerParameters.UserToken
  - System.CodeDom.Compiler.CompilerParameters.WarningLevel
  - System.CodeDom.Compiler.CompilerParameters.Win32Resource
  langs:
  - csharp
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
  type: Class
  summary: "コンパイラを呼び出すために使用されるパラメーターを表します。"
  remarks: "CompilerParameters オブジェクトが、設定を表しのオプションを<xref:System.CodeDom.Compiler.ICodeCompiler>インターフェイス</xref:System.CodeDom.Compiler.ICodeCompiler>。       設定する必要がある実行可能プログラムをコンパイルする場合、<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>プロパティを`true`</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>。 ときに、<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>に設定されている`false`コンパイラはクラス ライブラリを生成します</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>。 既定では、新しい CompilerParameters はによる初期化を行うその<xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>プロパティに設定`false`</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>。 CodeDOM グラフから実行可能ファイルをコンパイルする場合、<xref:System.CodeDom.CodeEntryPointMethod>グラフで定義する必要があります</xref:System.CodeDom.CodeEntryPointMethod>。 クラスの名前を設定して使用するエントリ ポイントを定義するクラスを指定するには、複数のコード エントリ ポイントがある場合、<xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>。       出力内のアセンブリ ファイル名を指定することができます、<xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>。 それ以外の場合、既定の出力ファイル名が使用されます。 生成されたアセンブリのデバッグ情報は、設定、<xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>プロパティを`true`</xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>。 内の項目としてアセンブリ名を指定する必要があります、プロジェクトは、すべてのアセンブリを参照する場合、<xref:System.Collections.Specialized.StringCollection>設定、<xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>コンパイルを呼び出すときに使用される CompilerParameters のプロパティ</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A></xref:System.Collections.Specialized.StringCollection>。       設定して、ディスクではなく、メモリに書き込まれるアセンブリをコンパイルすることができます、<xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>プロパティを`true`</xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>。 メモリ内アセンブリが生成されると、コードが<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A><xref:System.CodeDom.Compiler.CompilerResults>。</xref:System.CodeDom.Compiler.CompilerResults>プロパティ</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>から生成されたアセンブリへの参照を取得できます。 アセンブリが記述されている場合、ディスクから取得できますパス生成されたアセンブリに<xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A><xref:System.CodeDom.Compiler.CompilerResults></xref:System.CodeDom.Compiler.CompilerResults>プロパティ</xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>。       コンパイルを中止する位置を示す警告レベルを指定するには、設定、<xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>コンパイルを中止する位置を示す警告レベルを表す整数のプロパティ</xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>。 設定によって警告が発生した場合は、コンパイルを停止するようにコンパイラを構成することも、<xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>プロパティを`true`</xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>。       コンパイル処理の実行時に使用するカスタムのコマンドライン引数の文字列を指定する文字列を設定、<xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>。 コンパイラ プロセスを開始するには、Win32 のセキュリティ トークンが必要された場合、でトークンを指定する、<xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>。 .NET Framework リソース ファイル、コンパイルされたアセンブリで、追加するリソース ファイルの名前、<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>。 別のアセンブリ内の .NET Framework のリソースを参照するに追加するリソース ファイルの名前、<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>。 コンパイルされたアセンブリで Win32 リソース ファイルを含めるで Win32 リソース ファイルの名前を指定、<xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>。      > [!NOTE] > このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、「[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。"
  example:
  - "The following example builds a CodeDOM source graph for a simple Hello World program.  The source is then saved to a file, compiled into an executable, and run. The `CompileCode` method illustrates how to use the CompilerParameters class to specify various compiler settings and options.  \n  \n [!code-cpp[CompilerParametersExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_3_1.cpp)]\n [!code-cs[CompilerParametersExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_3_1.cs)]\n [!code-vb[CompilerParametersExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_3_1.vb)]"
  syntax:
    content: public class CompilerParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/m-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/m-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/m-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public CompilerParameters ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref>クラスの指定したアセンブリ名を使用します。"
  syntax:
    content: public CompilerParameters (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "参照するアセンブリの名前。"
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  id: '#ctor(System.String[],System.String)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref>クラスの指定したアセンブリ名と出力ファイル名を使用します。"
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "参照するアセンブリの名前。"
    - id: outputName
      type: System.String
      description: "出力ファイル名。"
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  id: '#ctor(System.String[],System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref>クラスの指定したアセンブリ名、出力名、およびデバッグ情報を含めるかどうかを示す値を使用します。"
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "参照するアセンブリの名前。"
    - id: outputName
      type: System.String
      description: "出力ファイル名。"
    - id: includeDebugInformation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>デバッグ情報を含める<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>デバッグ情報を除外します。"
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  id: CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはコンパイラを呼び出すときに使用する省略可能なコマンドライン引数を設定します。"
  remarks: "<xref:System.CodeDom.Compiler.ICodeCompiler>通常コマンド ライン コンパイラを呼び出すときに、コマンドラインでは、この文字列が含まれています</xref:System.CodeDom.Compiler.ICodeCompiler>。 既定では、このプロパティには、空の文字列が含まれています。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_14_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_14_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_14_1.vb)]"
  syntax:
    content: public string CompilerOptions { get; set; }
    return:
      type: System.String
      description: "コンパイラのコマンド ライン追加引数。"
  overload: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  id: CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "コアまたは基本型を含む標準のアセンブリの名前を取得または<xref:System.Object>、 <xref:System.String>、または<xref:System.Int32>.</xref:System.Int32> </xref:System.String> </xref:System.Object>"
  remarks: "かどうか、このプロパティの値は空の文字列または`null`コンパイラは、既定のコア アセンブリを使用します。 コンパイラのバージョンに応じて、既定のコア アセンブリがあります mscorlib.dll または System.Runtime.dll Framework ディレクトリまたは参照アセンブリのディレクトリにします。 このプロパティの値が空でない場合、Code Document Object Model (CodeDOM) は明示的に指定したアセンブリを参照し、出力をコンパイラがコンパイル時にアセンブリを暗黙的に参照しないコンパイラ オプション. 既定では、コアまたは標準のアセンブリをのみによって暗黙的に参照するコンパイラのこのプロパティは、独自に使用できます。 コンパイラに暗黙的にアセンブリを参照するさらにコアまたは標準のアセンブリには、このオプションを使用することがあります指定する必要に追加エントリ、<xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>プロパティ</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>。      > [!NOTE] >、<xref:System.CodeDom.Compiler.ICodeCompiler>または<xref:System.CodeDom.Compiler.CodeDomProvider>実装は、このプロパティを無視することができます</xref:System.CodeDom.Compiler.CodeDomProvider></xref:System.CodeDom.Compiler.ICodeCompiler>。"
  syntax:
    content: public string CoreAssemblyFileName { get; set; }
    return:
      type: System.String
      description: "基本型を含むコア アセンブリの名前。"
  overload: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  id: EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "アセンブリの出力をコンパイルするときに含まれる .NET Framework リソース ファイルを取得します。"
  remarks: "埋め込みリソースは、生成されたアセンブリの出力ファイルに組み込まれます。 このプロパティを使用してファイルを含むに似ていますが、`/resource`さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。       <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>フラグ<xref:System.CodeDom.Compiler.GeneratorSupport>。</xref:System.CodeDom.Compiler.GeneratorSupport>でメソッド</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>を呼び出すことによって、このサポートをテストする必要がありますいないすべてのコンパイラが .NET Framework リソース ファイルをサポートします。       返された&1; つまたは複数の .NET Framework リソース ファイル パスを追加する<xref:System.Collections.Specialized.StringCollection>、コンパイルされたアセンブリにファイルのリソースを埋め込む</xref:System.Collections.Specialized.StringCollection>。 コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。       EmbeddedResources を使用して、アセンブリの既定値またはニュートラル カルチャの .NET Framework のリソースをインクルードするには使用して、 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>.NET Framework のリソースをサテライト アセンブリを参照するプロパティ</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_7_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_7_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection EmbeddedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "生成されたアセンブリに含めるように、.NET Framework リソースのファイル パスを含むコレクション。"
  overload: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  id: Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "証拠を表すオブジェクトをコンパイルされたアセンブリを付与するセキュリティ ポリシーのアクセス許可を指定します。"
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "コンパイル済みのアセンブリを付与するセキュリティ ポリシーのアクセス許可を表すオブジェクト。"
  overload: System.CodeDom.Compiler.CompilerParameters.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  id: GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または実行可能ファイルを生成するかどうかを示す値を設定します。"
  remarks: "このプロパティの値が場合`false`DLL が生成されます。 既定では、このプロパティの値は`false`します。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_8_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_8_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_8_1.vb)]"
  syntax:
    content: public bool GenerateExecutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>実行可能ファイルを生成する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  id: GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはメモリ内で出力を生成するかどうかを示す値を設定します。"
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_1_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_1_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_1_1.vb)]"
  syntax:
    content: public bool GenerateInMemory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンパイラは、メモリ内で出力を生成する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  id: IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはコンパイル済みの実行可能ファイルにデバッグ情報を含めるかどうかを示す値を設定します。"
  syntax:
    content: public bool IncludeDebugInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>デバッグ情報を生成する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  id: LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "現在のソースで参照されている .NET Framework リソース ファイルを取得します。"
  remarks: "リンクされたリソース ファイルには、リソースを参照する .NET Framework アセンブリで実際のリソースを埋め込まなくても、アセンブリが許可されます。 に似ていますがこのプロパティを使用してファイルを参照する、`/linkresource`さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。       <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>フラグ<xref:System.CodeDom.Compiler.GeneratorSupport>。</xref:System.CodeDom.Compiler.GeneratorSupport>でメソッド</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>を呼び出すことによって、このサポートをテストする必要がありますいないすべてのコンパイラが .NET Framework リソース ファイルをサポートします。       返された&1; つまたは複数の .NET Framework リソース ファイル パスを追加する<xref:System.Collections.Specialized.StringCollection>、コンパイルされたアセンブリでリソースへのリンクを作成する</xref:System.Collections.Specialized.StringCollection>。 コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。       LinkedResources を使用して、特定のカルチャのローカライズされたサテライト アセンブリに .NET Framework のリソースを参照するには使用して、<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>プロパティをコンパイルされたアセンブリにリソースを埋め込む</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection LinkedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "ソースによって参照されている .NET Framework リソース ファイルのパスを含むコレクション。"
  overload: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  id: MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはメイン クラスの名前を設定します。"
  remarks: "メイン クラスには、プログラムのエントリ ポイントが含まれています。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_13_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_13_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_13_1.vb)]"
  syntax:
    content: public string MainClass { get; set; }
    return:
      type: System.String
      description: "メインのクラスの名前。"
  overload: System.CodeDom.Compiler.CompilerParameters.MainClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  id: OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または出力アセンブリの名前を設定します。"
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_6_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_6_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_6_1.vb)]"
  syntax:
    content: public string OutputAssembly { get; set; }
    return:
      type: System.String
      description: "出力アセンブリの名前。"
  overload: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "現在のプロジェクトによって参照されるアセンブリを取得します。"
  remarks: "文字列のコレクションに含まれるか、含めるには、現在のプロジェクトによって参照されるアセンブリください。 返されたアセンブリ ファイル名を追加<xref:System.Collections.Specialized.StringCollection>をアセンブリ マニフェストをインポートし、現在のプロジェクトでアセンブリの型情報を参照します</xref:System.Collections.Specialized.StringCollection>。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_9_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_9_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_9_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "コンパイルするソースによって参照されているアセンブリ名を含むコレクション。"
  overload: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  id: TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または一時ファイルを含んでいるコレクションを設定します。"
  remarks: "コレクション内の一時ファイルの保持またはの値に基づいてコンパイラ アクティビティの完了時に削除された、<xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>コレクション内のプロパティ</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>。 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>プロパティを使用して、コレクションを作成する場合、<xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>を持つコンス トラクター、`keepFiles`パラメーターに設定`true`</xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29></xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>。      > [!NOTE] > このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、「[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_4_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_4_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_4_1.vb)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "一時ファイルを格納するコレクション。"
  overload: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  id: TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得または警告をエラーとして扱うかどうかを示す値を設定します。"
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_5_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_5_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_5_1.vb)]"
  syntax:
    content: public bool TreatWarningsAsErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>警告をエラーとして扱う場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  id: UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはコンパイラ プロセスを作成するときに使用するユーザーのトークンを設定します。"
  syntax:
    content: public IntPtr UserToken { get; set; }
    return:
      type: System.IntPtr
      description: "使用するユーザー トークンです。"
  overload: System.CodeDom.Compiler.CompilerParameters.UserToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  id: WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはコンパイラがコンパイルを中止する警告レベルを設定します。"
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_11_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_11_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_11_1.vb)]"
  syntax:
    content: public int WarningLevel { get; set; }
    return:
      type: System.Int32
      description: "警告レベル コンパイラがコンパイルを中止します。"
  overload: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  id: Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "取得またはコンパイルされたアセンブリにリンクする Win32 リソース ファイルのファイル名を設定します。"
  remarks: "このプロパティを使用してファイルをリンクすることと似ています、`/winres`と`/winresource`さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。       Win32Resource を使用して、アセンブリに Win32 リソース ファイルをコンパイルします。 使用して<xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>または<xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>.NET Framework リソース ファイルをコンパイルする</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A></xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>。       すべてのコンパイラは、Win32 リソース ファイルをサポートするため、<xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>フラグを<xref:System.CodeDom.Compiler.GeneratorSupport>。</xref:System.CodeDom.Compiler.GeneratorSupport>メソッド</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>を呼び出すことによって、リソース ファイルをリンクする前にこのサポートのコード ジェネレーターをテストする必要があります。"
  syntax:
    content: public string Win32Resource { get; set; }
    return:
      type: System.String
      description: "コンパイルされたアセンブリにリンクする Win32 リソース ファイル。"
  overload: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
