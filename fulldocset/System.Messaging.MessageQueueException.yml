### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueException
  id: MessageQueueException
  children:
  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.Message
  - System.Messaging.MessageQueueException.MessageQueueErrorCode
  langs:
  - csharp
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
  type: Class
  summary: "Microsoft メッセージ キューの内部エラーが発生した場合にスローされる例外。"
  remarks: "MessageQueueException クラスに関連付けられている例外は、コードを処理する必要がありますあるメッセージ キューの内部エラーによって生成されます。       すべての例外は、エラー コードとエラーの原因を説明するテキスト文字列で構成されます。 参照してください、<xref:System.Messaging.MessageQueueErrorCode>これらのエラー コードとその説明の一覧のクラス</xref:System.Messaging.MessageQueueErrorCode>。       場合、<xref:System.Messaging.MessageQueue>でキューを開く、`sharedModeDenyReceive`パラメーターの設定を true にいずれかの<xref:System.Messaging.MessageQueue>こと、その後、キューからの読み取りを試みます例外が生成される MessageQueueException 共有違反が原因です</xref:System.Messaging.MessageQueue></xref:System.Messaging.MessageQueue>。 場合、同じ例外がスローされます、<xref:System.Messaging.MessageQueue>し、別の排他モードでキューにアクセスしようとしています<xref:System.Messaging.MessageQueue>既に排他的にアクセスするキュー。</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue> 。      >**警告タグがサポートされていません!!!**   ><xref:System.Messaging.MessageQueueTransaction>はスレッドのアパートメントに対応しています</xref:System.Messaging.MessageQueueTransaction>。 Visual Basic にメイン スレッドの状態を設定する`STA`適用する必要がありますので、<xref:System.MTAThreadAttribute>で、`Main`サブルーチン</xref:System.MTAThreadAttribute>。 それ以外の場合、別のスレッドを使用してトランザクション メッセージを送信するには、MessageQueueException 例外がスローされます。"
  example:
  - >-
    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_3_1.vb)]
     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/csharp/t-system.messaging.messa_3_1.cs)]
     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/cpp/t-system.messaging.messa_3_1.cpp)]
  syntax:
    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>シリアル化されたデータを持つクラス。"
  syntax:
    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>に関連付けられているシリアル化されたデータを保持する、 <xref href=&quot;System.Messaging.MessageQueueException&quot;></xref>です。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A<xref:System.Runtime.Serialization.StreamingContext>ソースを格納していると、シリアル化されたストリームの転送先に関連付けられている、 <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref></xref:System.Runtime.Serialization.StreamingContext> 。"
  overload: System.Messaging.MessageQueueException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "シリアル化情報オブジェクトをシリアル化に必要なデータを追加、 <xref href=&quot;System.Messaging.MessageQueueException&quot;></xref>です。"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>に関連付けられているシリアル化されたデータを保持する、 <xref href=&quot;System.Messaging.MessageQueueException&quot;></xref>です。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A<xref:System.Runtime.Serialization.StreamingContext>ソースを格納していると、シリアル化されたストリームの転送先に関連付けられている、 <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref></xref:System.Runtime.Serialization.StreamingContext> 。"
  overload: System.Messaging.MessageQueueException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.Message
  id: Message
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "メッセージ キューのエラーを記述する値を取得します。"
  remarks: "メソッドに関連付けられているテキスト文字列を取得しようとしたこのプロパティを取得するときに、<xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>プロパティ</xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>。 メソッドが生成されたメッセージ キュー エラー コードを解釈できない場合は、メッセージのプロパティ値を取得します`UnknownError`です。"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "これを生成したメッセージ キュー内部エラーの説明<xref href=&quot;System.Messaging.MessageQueueException&quot;></xref>です。"
  overload: System.Messaging.MessageQueueException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  id: MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "この例外に関連付けられているエラー コードを示す値を取得します。"
  remarks: "<xref:System.Messaging.MessageQueueException.Message%2A>プロパティには、このエラーの原因をより詳細に説明する MessageQueueErrorCode に関連付けられた文字列が含まれています</xref:System.Messaging.MessageQueueException.Message%2A>。"
  syntax:
    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }
    return:
      type: System.Messaging.MessageQueueErrorCode
      description: "A <xref href=&quot;System.Messaging.MessageQueueErrorCode&quot;> </xref>メッセージ キューが生成されたエラーの種類を識別します。"
  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Messaging.MessageQueueException.Message
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueErrorCode
  parent: System.Messaging
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueException.#ctor*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException.MessageQueueException
- uid: System.Messaging.MessageQueueException.GetObjectData*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData
  nameWithType: MessageQueueException.GetObjectData
- uid: System.Messaging.MessageQueueException.Message*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
