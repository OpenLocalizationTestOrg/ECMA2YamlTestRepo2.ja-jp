### YamlMime:ManagedReference
items:
- uid: System.ApplicationException
  id: ApplicationException
  children:
  - System.ApplicationException.#ctor
  - System.ApplicationException.#ctor(System.String)
  - System.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ApplicationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
  type: Class
  summary: "アプリケーション定義の例外の基底クラスとして機能します。"
  remarks: >-
    > [!IMPORTANT]

    >  You should derive custom exceptions from the <xref:System.Exception> class rather than the ApplicationException class.  You should not throw an ApplicationException exception in your code, and you should not catch an ApplicationException exception unless you intend to re-throw the original exception.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ApplicationException : Exception
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ApplicationException.#ctor
  id: '#ctor'
  parent: System.ApplicationException
  langs:
  - csharp
  name: ApplicationException()
  nameWithType: ApplicationException.ApplicationException()
  fullName: System.ApplicationException.ApplicationException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ApplicationException&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、 <xref:System.Exception.Message%2A>「アプリケーション エラーが発生しました」などに、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ</xref:System.Exception.Message%2A>を初期化します このメッセージでは、現在のシステム カルチャが考慮されます。       次の表は、 <xref:System.ApplicationException>。</xref:System.ApplicationException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public ApplicationException ();
    parameters: []
  overload: System.ApplicationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ApplicationException
  langs:
  - csharp
  name: ApplicationException(String)
  nameWithType: ApplicationException.ApplicationException(String)
  fullName: System.ApplicationException.ApplicationException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ApplicationException&quot;> </xref>指定したエラー メッセージを使用します。"
  remarks: "内容、`message`パラメーターをユーザーが理解できるものではします。 このコンス トラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認するために必要です。       このメッセージでは、現在のシステム カルチャが考慮されます。       次の表は、 <xref:System.ApplicationException>。</xref:System.ApplicationException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |`Message`|エラー メッセージ文字列 |</xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public ApplicationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "エラーを説明するメッセージ。"
  overload: System.ApplicationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.ApplicationException
  langs:
  - csharp
  name: ApplicationException(SerializationInfo,StreamingContext)
  nameWithType: ApplicationException.ApplicationException(SerializationInfo,StreamingContext)
  fullName: System.ApplicationException.ApplicationException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ApplicationException&quot;> </xref>シリアル化されたデータを持つクラス。"
  remarks: "このコンス トラクターは、ストリームで送信された例外オブジェクトを再構成する逆シリアル化中に呼び出されます。 詳細については、次を参照してください。 [XML および SOAP シリアル化](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected ApplicationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データを保持するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは転送先に関する文脈情報。"
  overload: System.ApplicationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.ApplicationException
  langs:
  - csharp
  name: ApplicationException(String,Exception)
  nameWithType: ApplicationException.ApplicationException(String,Exception)
  fullName: System.ApplicationException.ApplicationException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ApplicationException&quot;> </xref>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を持つクラス。"
  remarks: "内容、`message`パラメーターをユーザーが理解できるものではします。 このコンス トラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認するために必要です。       前の例外への参照を含める必要があります前の例外の直接の結果としてスローされる例外、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。 <xref:System.Exception.InnerException%2A>プロパティが同じ場合は、コンス トラクター、または null 参照に渡される値を返します、<xref:System.Exception.InnerException%2A>プロパティがコンス トラクターには、内部例外値を指定していません</xref:System.Exception.InnerException%2A></xref:System.Exception.InnerException%2A>。       次の表は、 <xref:System.ApplicationException>。</xref:System.ApplicationException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部例外の参照 |。  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public ApplicationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
    - id: innerException
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`innerException`パラメーターが null 参照でないで現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.ApplicationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.ApplicationException.#ctor
  parent: System.ApplicationException
  isExternal: false
  name: ApplicationException()
  nameWithType: ApplicationException.ApplicationException()
  fullName: System.ApplicationException.ApplicationException()
- uid: System.ApplicationException.#ctor(System.String)
  parent: System.ApplicationException
  isExternal: false
  name: ApplicationException(String)
  nameWithType: ApplicationException.ApplicationException(String)
  fullName: System.ApplicationException.ApplicationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ApplicationException
  isExternal: false
  name: ApplicationException(SerializationInfo,StreamingContext)
  nameWithType: ApplicationException.ApplicationException(SerializationInfo,StreamingContext)
  fullName: System.ApplicationException.ApplicationException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ApplicationException.#ctor(System.String,System.Exception)
  parent: System.ApplicationException
  isExternal: false
  name: ApplicationException(String,Exception)
  nameWithType: ApplicationException.ApplicationException(String,Exception)
  fullName: System.ApplicationException.ApplicationException(String,Exception)
- uid: System.ApplicationException.#ctor*
  parent: System.ApplicationException
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException.ApplicationException
