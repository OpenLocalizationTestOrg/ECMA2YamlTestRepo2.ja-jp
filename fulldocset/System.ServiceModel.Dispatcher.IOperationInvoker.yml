### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker
  id: IOperationInvoker
  children:
  - System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  - System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  - System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  langs:
  - csharp
  name: IOperationInvoker
  nameWithType: IOperationInvoker
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker
  type: Interface
  summary: "オブジェクトおよびメッセージから抽出されたパラメーターの配列を受け取り、これらのパラメーターを使用してそのオブジェクトに対してメソッドを呼び出すとメソッドの戻り値を返す出力パラメーターされるメソッドを宣言します。"
  remarks: "そのオブジェクトの厳密に型指定されたメソッドの呼び出しに型指定されていないオブジェクトとパラメーターの配列から変換を制御する IOperationInvoker インターフェイスを実装します。 同期が<xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>メソッドは、インスタンスと型オブジェクトの入力のセットを受け取り、オブジェクトと型のオブジェクトの出力セットを返します</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>。 さらに、<xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>と[InvokeEnd (Object, Object\\[\\]、IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True)バリアント</xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>。  <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>プロパティは、同期または非同期のメソッドを使用するかどうかを指定します</xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>。"
  syntax:
    content: public interface IOperationInvoker
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  id: AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "返します、 &lt;xref:System.Array?displayProperty=fullName&gt;パラメーター オブジェクトの。"
  remarks: "この操作のパラメーターの配列を返すために実装します。 この配列をフォーマッタで塗りつぶされ、呼び出し元に戻すとき<xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>と呼びます</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>。"
  syntax:
    content: public object[] AllocateInputs ();
    parameters: []
    return:
      type: System.Object[]
      description: "操作の引数として使用されるパラメーター。"
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  id: Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "インスタンスと一連の入力オブジェクトからオブジェクトと出力オブジェクトのセットを返します。"
  syntax:
    content: public object Invoke (object instance, object[] inputs, out object[] outputs);
    parameters:
    - id: instance
      type: System.Object
      description: "呼び出されるオブジェクト。"
    - id: inputs
      type: System.Object[]
      description: "メソッドに入力します。"
    - id: outputs
      type: System.Object[]
      description: "このメソッドから出力します。"
    return:
      type: System.Object
      description: "戻り値。"
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  id: InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "非同期実装、<xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>メソッド</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>。"
  syntax:
    content: public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "呼び出されるオブジェクト。"
    - id: inputs
      type: System.Object[]
      description: "メソッドに入力します。"
    - id: callback
      type: System.AsyncCallback
      description: "非同期のコールバック オブジェクト。"
    - id: state
      type: System.Object
      description: "関連付けられた状態データ。"
    return:
      type: System.IAsyncResult
      description: "A &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;非同期呼び出しを完了するために使用します。"
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  id: InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "非同期の終了メソッド。"
  syntax:
    content: public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);
    parameters:
    - id: instance
      type: System.Object
      description: "呼び出すオブジェクト。"
    - id: outputs
      type: System.Object[]
      description: "このメソッドから出力します。"
    - id: result
      type: System.IAsyncResult
      description: "&lt;Xref:System.IAsyncResult?displayProperty=fullName&gt;オブジェクト。"
    return:
      type: System.Object
      description: "戻り値。"
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  id: IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "指定する値を取得するかどうか、 <> </> *> または<> *> メソッドは、ディスパッチャーによって呼び出されます。"
  remarks: "既定の呼び出し元は、既定では、同期操作にメッセージをディスパッチします。 この値は、ディスパッチャーによってキャッシュし、 <xref:System.ServiceModel.Dispatcher.IOperationInvoker>。</xref:System.ServiceModel.Dispatcher.IOperationInvoker>を実装するオブジェクトの有効期間にわたってので変更しないでください。"
  syntax:
    content: public bool IsSynchronous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディスパッチャーが同期操作を呼び出す場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs
  nameWithType: IOperationInvoker.AllocateInputs
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke
  nameWithType: IOperationInvoker.Invoke
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin
  nameWithType: IOperationInvoker.InvokeBegin
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd
  nameWithType: IOperationInvoker.InvokeEnd
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
