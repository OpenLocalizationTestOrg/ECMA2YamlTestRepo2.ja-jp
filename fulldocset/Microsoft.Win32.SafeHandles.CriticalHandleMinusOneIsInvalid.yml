### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  id: CriticalHandleMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor
  - Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: CriticalHandleMinusOneIsInvalid
  nameWithType: CriticalHandleMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  type: Class
  summary: "-1 の値が無効なハンドルを Win32 critical ハンドルの実装の基本クラスを提供します。"
  remarks: "このクラスの<xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName>クラス</xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName>から派生します。 これには、-1 の値を使用して無効なハンドルの形式について説明します。 さらに派生 (ファイルやレジストリなどの処理) に対して、このクラスのことができます、さらなる特化します。       この型は、<xref:System.IDisposable>インターフェイス</xref:System.IDisposable>。 型を使用してが完了したらを直接的または間接的にその破棄する必要があります。 型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロック</xref:System.IDisposable.Dispose%2A>。 直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。 詳細についてを参照してください&quot;を使用して、オブジェクトを実装する IDisposable&quot;、<xref:System.IDisposable>インターフェイスに関するトピック</xref:System.IDisposable>。      > [!NOTE] > を参照してください、 <xref:System.Runtime.InteropServices.CriticalHandle>critical ハンドルのセキュリティとスレッドの安全性に関する重要な情報のクラス</xref:System.Runtime.InteropServices.CriticalHandle>。"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class CriticalHandleMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle
  inheritance:
  - System.Runtime.InteropServices.CriticalHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  langs:
  - csharp
  name: CriticalHandleMinusOneIsInvalid()
  nameWithType: CriticalHandleMinusOneIsInvalid.CriticalHandleMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.CriticalHandleMinusOneIsInvalid()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid&quot;> </xref>クラスです。"
  syntax:
    content: protected CriticalHandleMinusOneIsInvalid ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: CriticalHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "ハンドルが無効かどうかを示す値を取得します。"
  remarks: "共通言語ランタイムでは、このプロパティを使用して、重大な終了処理が必要かどうかを判断します。"
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合はハンドルが無効です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: System.Runtime.InteropServices.CriticalHandle
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleMinusOneIsInvalid()
  nameWithType: CriticalHandleMinusOneIsInvalid.CriticalHandleMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.CriticalHandleMinusOneIsInvalid()
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleMinusOneIsInvalid
  nameWithType: CriticalHandleMinusOneIsInvalid.CriticalHandleMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleMinusOneIsInvalid.IsInvalid
