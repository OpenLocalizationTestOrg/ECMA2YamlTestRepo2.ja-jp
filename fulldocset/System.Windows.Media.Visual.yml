### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Visual
  id: Visual
  children:
  - System.Windows.Media.Visual.#ctor
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.GetVisualChild(System.Int32)
  - System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualChildrenCount
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  langs:
  - csharp
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
  type: Class
  summary: "使用できるようにレンダリング[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]が含まれている、ヒット テスト、座標の変換、および境界ボックス計算します。"
  remarks: "ビジュアルのクラスは、元の基本抽象化すべて<xref:System.Windows.FrameworkElement>オブジェクトの派生元します</xref:System.Windows.FrameworkElement>。 新しいコントロールを作成するためのエントリ ポイントとしても機能している[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]、し、さまざまな方法ではようなもののウィンドウ ハンドル (HWND) と同等で、[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]アプリケーション モデルです。       ビジュアル オブジェクトは、コア[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]プライマリ ロールがあるレンダリング サポートを提供するオブジェクト。 などのユーザー インターフェイス コントロール<xref:System.Windows.Controls.Button>と<xref:System.Windows.Controls.TextBox>Visual のクラスから派生しをレンダリング データを保持するため Visual の定義済みプロパティを使用して、</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> 。 ビジュアル オブジェクトは、次のサポートを提供します。-出力の表示: ビジュアルの描画コンテンツをシリアル化、永続的なレンダリングします。      -変換: は、ビジュアルで変換を実行します。      クリップ: は、ビジュアルのクリッピング領域のサポートを提供します。      -ヒット テスト: 指定された座標 (ポイント) またはジオメトリがビジュアルの境界内に含まれるかどうかを決定します。      -境界ボックス計算: ビジュアルの外接する四角形を決定します。       アーキテクチャ上、ビジュアル オブジェクトを含まない他のアプリケーションの開発要件のサポート/[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]のレンダリングでは、次のようにすぐに関連付けられていない機能: - イベント処理のレイアウト スタイルのデータ バインディングのグローバリゼーション Visual をさらにクラスを導出するパブリックの抽象クラスとして提供されます。 次の図は、既存の visual オブジェクトで定義されている階層、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]アーキテクチャ。       ![Visual オブジェクトから派生したクラスのダイアグラム](~/add/media/visualclass01.png &quot;Visual オブジェクトから派生したクラスのダイアグラム&quot;)場合によっては、保護対象として Visual に定義されているメンバーに視覚的クラス階層は、類似した名前、派生<xref:System.Windows.UIElement>クラス</xref:System.Windows.UIElement>でより簡単にアクセス可能なメンバーとして公開されます       詳細については、次を参照してください。 [WPF グラフィックス レンダリングの概要](~/add/includes/ajax-current-ext-md.md)です。       ビジュアルには、限られた数のレベルがあります。 .NET Framework の以前のバージョンでは、この最大の深さは、255 をでした。 この制限は、ビジュアル ツリー内の多くのレベルがあるいくつかのレイアウトで適切ではありません。       [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]ビジュアルの最大の深さは、値の 2047 より深くのビジュアル ツリーを有効にします。 ほとんどのアプリケーションで十分なスタック領域が非常に多くのレベルを走査して、結果は、<xref:System.StackOverflowException>レイアウト中に</xref:System.StackOverflowException>。 既定のスタック サイズのツリーの深さが約 800、入れ子になった 190 約に対応する場合にこの例外はスロー通常<xref:System.Windows.Controls.TreeViewItem>オブジェクト</xref:System.Windows.Controls.TreeViewItem>。       この例外は、アプリケーションと、ビジュアル ツリーを深くしておく必要は、アプリケーションのスタック サイズを増やすことができます。 コンパイル時に/STACK オプションを使用して、または EDITBIN ユーティリティを使用してスタックのサイズを増やすことができます。 スタック サイズを増やすと、アプリケーションのパフォーマンスに影響します。 詳細については、次を参照してください。[スタック割り当て](http://go.microsoft.com/fwlink/?LinkId=165510)と[EDITBIN オプション](http://go.microsoft.com/fwlink/?LinkId=165511)です。"
  syntax:
    content: 'public abstract class Visual : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Visual.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: Visual()
  nameWithType: Visual.Visual()
  fullName: System.Windows.Media.Visual.Visual()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "派生したオブジェクトの基本の初期化を提供、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>クラスです。"
  syntax:
    content: protected Visual ();
    parameters: []
  overload: System.Windows.Media.Visual.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  id: AddVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: AddVisualChild(Visual)
  nameWithType: Visual.AddVisualChild(Visual)
  fullName: System.Windows.Media.Visual.AddVisualChild(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "2 つのビジュアル間の親子リレーションシップを定義します。"
  remarks: "AddVisualChild メソッドは、次の&2; つのビジュアル オブジェクト間の親子関係を設定します。 詳細な低レベルの visual の子オブジェクトの基になる記憶域実装制御する必要がある場合、このメソッドを使用する必要があります。 <xref:System.Windows.Media.VisualCollection>子オブジェクトを格納するため、既定の実装として使用できます。</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to define custom storage requirements for a visual child. The example uses the AddVisualChild and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`. In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.  \n  \n> [!NOTE]\n>  Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.  \n  \n [!code-cs[AddVisualChild#AddVisualChild01](~/add/codesnippet/csharp/AddVisualChild/Window1.xaml.cs#addvisualchild01)]\n [!code-vb[AddVisualChild#AddVisualChild01](~/add/codesnippet/visualbasic/addvisualchild/window1.xaml.vb#addvisualchild01)]"
  syntax:
    content: protected void AddVisualChild (System.Windows.Media.Visual child);
    parameters:
    - id: child
      type: System.Windows.Media.Visual
      description: "親 visual に追加する子ビジュアル オブジェクトです。"
  overload: System.Windows.Media.Visual.AddVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  id: FindCommonVisualAncestor(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: FindCommonVisualAncestor(DependencyObject)
  nameWithType: Visual.FindCommonVisualAncestor(DependencyObject)
  fullName: System.Windows.Media.Visual.FindCommonVisualAncestor(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "2 つのビジュアル オブジェクトの共通の先祖を返します。"
  remarks: "2D および 3D 保持できるオブジェクトが共通の visual の先祖を渡すことであるため、<xref:System.Windows.Media.Media3D.Visual3D>の`otherVisual`</xref:System.Windows.Media.Media3D.Visual3D>。"
  syntax:
    content: public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);
    parameters:
    - id: otherVisual
      type: System.Windows.DependencyObject
      description: "型のビジュアル オブジェクト<xref href=&quot;System.Windows.DependencyObject&quot;></xref>です。"
    return:
      type: System.Windows.DependencyObject
      description: "ビジュアル オブジェクトの共通の先祖と<code> otherVisual </code> ; が存在する場合は、それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Visual.FindCommonVisualAncestor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.GetVisualChild(System.Int32)
  id: GetVisualChild(System.Int32)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: GetVisualChild(Int32)
  nameWithType: Visual.GetVisualChild(Int32)
  fullName: System.Windows.Media.Visual.GetVisualChild(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "指定したを返します<xref href=&quot;System.Windows.Media.Visual&quot;></xref>親<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "既定では、<xref:System.Windows.Media.Visual>子を持っていない</xref:System.Windows.Media.Visual>。 そのため、常に既定の実装が<xref:System.ArgumentOutOfRangeException>。</xref:System.ArgumentOutOfRangeException>がスローされます。"
  example:
  - "The following example defines an overridden implementation of GetVisualChild.  \n  \n [!code-cs[DrawingVisualSample#102b](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#102b)]\n [!code-vb[DrawingVisualSample#102b](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#102b)]"
  syntax:
    content: protected virtual System.Windows.Media.Visual GetVisualChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "ビジュアル オブジェクトのインデックス、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
    return:
      type: System.Windows.Media.Visual
      description: "内の子、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>内の指定した<code> index </code>値。"
  overload: System.Windows.Media.Visual.GetVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  id: HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: Visual.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(GeometryHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ジオメトリ値がビジュアル オブジェクトの境界内にあるかどうかを判断します。"
  remarks: "既定のヒットしてビジュアル オブジェクトのサポートをオーバーライドすることでテストをオーバーライドすることができます、<xref:System.Windows.Media.Visual.HitTestCore%2A>メソッド</xref:System.Windows.Media.Visual.HitTestCore%2A>。 つまりを呼び出すときは、<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>メソッドは、のオーバーライドされた実装<xref:System.Windows.Media.Visual.HitTestCore%2A>と呼びます</xref:System.Windows.Media.Visual.HitTestCore%2A></xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>。 ビジュアル オブジェクトのジオメトリの座標が含まれていない場合でも、ビジュアル オブジェクトの外接する四角形内でヒット テストが実行されると、オーバーライドされたメソッドが呼び出されます。"
  example:
  - "The following example shows how to override the HitTestCore method. One reason you might want to override this method is to provide additional functionality during the hit testing process.  \n  \n [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/visualbasic/hittestingoverview/geometryhittest.vb#hittestingoverviewsnippet13)]\n [!code-cs[HitTestingOverview#HitTestingOverviewSnippet13](~/add/codesnippet/csharp/HitTestingOverview/GeometryHitTest.cs#hittestingoverviewsnippet13)]"
  syntax:
    content: protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.GeometryHitTestParameters
      description: "A <xref href=&quot;System.Windows.Media.GeometryHitTestParameters&quot;> </xref>を指定するオブジェクト、 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref>ヒット テストの対象にします。"
    return:
      type: System.Windows.Media.GeometryHitTestResult
      description: "A <xref href=&quot;System.Windows.Media.GeometryHitTestResult&quot;> </xref>ヒット テストの結果を表すです。"
  overload: System.Windows.Media.Visual.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  id: HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: HitTestCore(PointHitTestParameters)
  nameWithType: Visual.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(PointHitTestParameters)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ポイント座標の値がビジュアル オブジェクトの境界内にあるかどうかを判断します。"
  remarks: "既定のヒットをオーバーライドすることによってビジュアル オブジェクトに対するサポートをテストをオーバーライドすることができます、<xref:System.Windows.Media.Visual.HitTestCore%2A>メソッド</xref:System.Windows.Media.Visual.HitTestCore%2A>。 つまりを呼び出すときは、<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>メソッドは、のオーバーライドされた実装<xref:System.Windows.Media.Visual.HitTestCore%2A>と呼びます</xref:System.Windows.Media.Visual.HitTestCore%2A></xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>。 ビジュアル オブジェクトのジオメトリの座標が含まれていない場合でも、ビジュアル オブジェクトの外接する四角形内でヒット テストが実行されると、オーバーライドされたメソッドが呼び出されます。"
  example:
  - "The following example shows how to override the HitTestCore method. One reason you might want to override this method is to provide additional functionality during the hit testing process.  \n  \n [!code-cs[HitTestingOverview#107](~/add/codesnippet/csharp/HitTestingOverview/Window1.xaml.cs#107)]\n [!code-vb[HitTestingOverview#107](~/add/codesnippet/visualbasic/hittestingoverview/window1.xaml.vb#107)]"
  syntax:
    content: protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);
    parameters:
    - id: hitTestParameters
      type: System.Windows.Media.PointHitTestParameters
      description: "A <xref href=&quot;System.Windows.Media.PointHitTestParameters&quot;> </xref>を指定するオブジェクト、 <xref href=&quot;System.Windows.Point&quot;> </xref>ヒット テストの対象にします。"
    return:
      type: System.Windows.Media.HitTestResult
      description: "A <xref href=&quot;System.Windows.Media.HitTestResult&quot;> </xref>を表す、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>ヒット テストから返されます。"
  overload: System.Windows.Media.Visual.HitTestCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  id: IsAncestorOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: IsAncestorOf(DependencyObject)
  nameWithType: Visual.IsAncestorOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsAncestorOf(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビジュアル オブジェクトが子孫のビジュアル オブジェクトの先祖であるかどうかを判断します。"
  syntax:
    content: public bool IsAncestorOf (System.Windows.DependencyObject descendant);
    parameters:
    - id: descendant
      type: System.Windows.DependencyObject
      description: "型の値<xref href=&quot;System.Windows.DependencyObject&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ビジュアル オブジェクトの先祖であるが、する場合<code> descendant </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Visual.IsAncestorOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  id: IsDescendantOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: IsDescendantOf(DependencyObject)
  nameWithType: Visual.IsDescendantOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsDescendantOf(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビジュアル オブジェクトが先祖ビジュアル オブジェクトの子孫であるかどうかを判断します。"
  syntax:
    content: public bool IsDescendantOf (System.Windows.DependencyObject ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.DependencyObject
      description: "型の値<xref href=&quot;System.Windows.DependencyObject&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ビジュアル オブジェクトの子孫である場合<code> ancestor </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Visual.IsDescendantOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  id: OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnDpiChanged(DpiScale,DpiScale)
  nameWithType: Visual.OnDpiChanged(DpiScale,DpiScale)
  fullName: System.Windows.Media.Visual.OnDpiChanged(DpiScale,DpiScale)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ときに呼び出されますをこのビューの変更が表示される DPI。"
  syntax:
    content: protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);
    parameters:
    - id: oldDpi
      type: System.Windows.DpiScale
      description: "設定前の DPI スケールします。"
    - id: newDpi
      type: System.Windows.DpiScale
      description: "新しい DPI スケールを設定します。"
  overload: System.Windows.Media.Visual.OnDpiChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  id: OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnVisualChildrenChanged(DependencyObject,DependencyObject)
  nameWithType: Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ときに呼び出されます、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>のビジュアル オブジェクトを変更します。"
  syntax:
    content: protected virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);
    parameters:
    - id: visualAdded
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>をコレクションに追加されました。"
    - id: visualRemoved
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>ですが、コレクションから削除されました。"
  overload: System.Windows.Media.Visual.OnVisualChildrenChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  id: OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: Visual.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualParentChanged(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビジュアル オブジェクトの親が変更されたときに呼び出されます。"
  remarks: "派生したクラス<xref:System.Windows.Media.Visual>このメソッドをオーバーライドすることもできます</xref:System.Windows.Media.Visual>。       インスタンスにこの変更を報告する指定された&quot;VisualParentChanged&quot;のイベントはありません。 したがって、通知シナリオを処理し、シナリオの一部である場合は、通知のインスタンスのバージョンを提供するには、このメソッドをオーバーライドする必要があります。"
  example:
  - "The following example defines an overridden implementation of OnVisualParentChanged.  \n  \n [!code-vb[VisualSnippets#VisualSnippet10](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet10)]\n [!code-cs[VisualSnippets#VisualSnippet10](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet10)]"
  syntax:
    content: protected virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);
    parameters:
    - id: oldParent
      type: System.Windows.DependencyObject
      description: "型の値<xref href=&quot;System.Windows.DependencyObject&quot;></xref>の以前の親を表す、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>オブジェクト。 場合、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>オブジェクトは以前の親がありません、パラメーターの値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Visual.OnVisualParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  id: PointFromScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: PointFromScreen(Point)
  nameWithType: Visual.PointFromScreen(Point)
  fullName: System.Windows.Media.Visual.PointFromScreen(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "変換、 <xref href=&quot;System.Windows.Point&quot;> </xref>を画面座標で、 <xref href=&quot;System.Windows.Point&quot;> </xref>の現在の座標システムを表す、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "使用して、<xref:System.Windows.Media.Visual.PointToScreen%2A>に変換する方法、<xref:System.Windows.Point>の現在の座標システムを表す、<xref:System.Windows.Media.Visual>に、<xref:System.Windows.Point>画面座標で表した</xref:System.Windows.Point></xref:System.Windows.Media.Visual></xref:System.Windows.Point></xref:System.Windows.Media.Visual.PointToScreen%2A>。"
  syntax:
    content: public System.Windows.Point PointFromScreen (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref>画面座標の値。"
    return:
      type: System.Windows.Point
      description: "変換された<xref href=&quot;System.Windows.Point&quot;></xref>の現在の座標システムを表す値、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  overload: System.Windows.Media.Visual.PointFromScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  id: PointToScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: PointToScreen(Point)
  nameWithType: Visual.PointToScreen(Point)
  fullName: System.Windows.Media.Visual.PointToScreen(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "変換、 <xref href=&quot;System.Windows.Point&quot;> </xref>の現在の座標システムを表す、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>に、 <xref href=&quot;System.Windows.Point&quot;> </xref>画面座標でします。"
  remarks: "<xref:System.Windows.Media.Visual.PointFromScreen%2A>は、<xref:System.Windows.Point>画面の座標<xref:System.Windows.Point>を表す<xref:System.Windows.Media.Visual>。</xref:System.Windows.Media.Visual>の現在の座標系</xref:System.Windows.Point>に</xref:System.Windows.Point>変換するメソッド</xref:System.Windows.Media.Visual.PointFromScreen%2A>を使用します。"
  syntax:
    content: public System.Windows.Point PointToScreen (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref>の現在の座標システムを表す値、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
    return:
      type: System.Windows.Point
      description: "変換された<xref href=&quot;System.Windows.Point&quot;></xref>画面座標の値。"
  overload: System.Windows.Media.Visual.PointToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  id: RemoveVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: RemoveVisualChild(Visual)
  nameWithType: Visual.RemoveVisualChild(Visual)
  fullName: System.Windows.Media.Visual.RemoveVisualChild(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "2 つのビジュアル間の親子リレーションシップを削除します。"
  remarks: "RemoveVisualChild メソッドでは、2 つのビジュアル間の親子リレーションシップを削除します。 このメソッドと共に、 <xref:System.Windows.Media.Visual.AddVisualChild%2A>visual の子オブジェクトの基になる記憶域実装低レベルより詳細に制御する必要がある場合、メソッドを使用する必要があります</xref:System.Windows.Media.Visual.AddVisualChild%2A>。 <xref:System.Windows.Media.VisualCollection>子オブジェクトを格納するため、既定の実装として使用できます。</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to define custom storage requirements for a visual child. The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and RemoveVisualChild methods to sets up the parent-child relationship between the parent visual and `child`. In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.  \n  \n> [!NOTE]\n>  Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.  \n  \n [!code-cs[AddVisualChild#AddVisualChild01](~/add/codesnippet/csharp/AddVisualChild/Window1.xaml.cs#addvisualchild01)]\n [!code-vb[AddVisualChild#AddVisualChild01](~/add/codesnippet/visualbasic/addvisualchild/window1.xaml.vb#addvisualchild01)]"
  syntax:
    content: protected void RemoveVisualChild (System.Windows.Media.Visual child);
    parameters:
    - id: child
      type: System.Windows.Media.Visual
      description: "ビジュアルの親から削除する子ビジュアル オブジェクト。"
  overload: System.Windows.Media.Visual.RemoveVisualChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  id: TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToAncestor(Visual3D)
  nameWithType: Visual.TransformToAncestor(Visual3D)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual3D)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "座標に変換するために使用する変換を返します、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>を指定した<xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;></xref>ビジュアル オブジェクトの先祖です。"
  syntax:
    content: public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.Media.Media3D.Visual3D
      description: "<xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;> </xref>座標が変換されます。"
    return:
      type: System.Windows.Media.Media3D.GeneralTransform2DTo3D
      description: "座標に変換するために使用する変換、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>を指定した<xref href=&quot;System.Windows.Media.Media3D.Visual3D&quot;></xref>ビジュアル オブジェクトの先祖です。"
  overload: System.Windows.Media.Visual.TransformToAncestor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  id: TransformToAncestor(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToAncestor(Visual)
  nameWithType: Visual.TransformToAncestor(Visual)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "座標に変換するために使用する変換を返します、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>を指定した<xref href=&quot;System.Windows.Media.Visual&quot;></xref>ビジュアル オブジェクトの先祖です。"
  remarks: "また、使用することができます、<xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName>をその親のビジュアル オブジェクトのオフセットを取得する方法</xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=fullName>。 オフセット値が含まれている、返された内<xref:System.Windows.Vector>値</xref:System.Windows.Vector>。       [!code-vb[VisualSnippets #VisualSnippet2](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet2)][!code-cs[VisualSnippets #VisualSnippet2  ](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet2)]"
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.  \n  \n [!code-xml[VisualSnippets#VisualSnippet7](~/add/codesnippet/xaml/VisualSnippets/Window2.xaml#visualsnippet7)]  \n  \n The following code example shows how to use the TransformToAncestor method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>. The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.  \n  \n [!code-vb[VisualSnippets#VisualSnippet5](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet5)]\n [!code-cs[VisualSnippets#VisualSnippet5](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet5)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>. In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);
    parameters:
    - id: ancestor
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>座標が変換されます。"
    return:
      type: System.Windows.Media.GeneralTransform
      description: "型の値<xref href=&quot;System.Windows.Media.GeneralTransform&quot;></xref>です。"
  overload: System.Windows.Media.Visual.TransformToAncestor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ancestor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ancestor</code>visual の先祖ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "視覚的なオブジェクトが関連付けられていません。"
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  id: TransformToDescendant(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToDescendant(Visual)
  nameWithType: Visual.TransformToDescendant(Visual)
  fullName: System.Windows.Media.Visual.TransformToDescendant(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "座標に変換するために使用する変換を返します、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>指定したビジュアル オブジェクトの子にします。"
  remarks: ''
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.  \n  \n [!code-xml[VisualSnippets#VisualSnippet4](~/add/codesnippet/xaml/VisualSnippets/Window1.xaml#visualsnippet4)]  \n  \n The following code example shows how to use the TransformToDescendant method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-vb[VisualSnippets#VisualSnippet9](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet9)]\n [!code-cs[VisualSnippets#VisualSnippet9](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet9)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects. In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4. The offset values are negative values because the parent object is negatively offset relative to its child object."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);
    parameters:
    - id: descendant
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>座標が変換されます。"
    return:
      type: System.Windows.Media.GeneralTransform
      description: "型の値<xref href=&quot;System.Windows.Media.GeneralTransform&quot;></xref>です。"
  overload: System.Windows.Media.Visual.TransformToDescendant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>descendant</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ビジュアルがの親ではない、 <code> descendant </code> visual です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "視覚的なオブジェクトが関連付けられていません。"
  platform:
  - net462
- uid: System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  id: TransformToVisual(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: TransformToVisual(Visual)
  nameWithType: Visual.TransformToVisual(Visual)
  fullName: System.Windows.Media.Visual.TransformToVisual(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "座標に変換するために使用する変換を返します、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>指定された visual オブジェクト。"
  remarks: "<xref:System.Windows.Media.Visual.TransformToAncestor%2A>と<xref:System.Windows.Media.Visual.TransformToDescendant%2A>方法は、ビジュアル オブジェクトの変換を返すにも使用できます</xref:System.Windows.Media.Visual.TransformToDescendant%2A></xref:System.Windows.Media.Visual.TransformToAncestor%2A>。"
  example:
  - "The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.  \n  \n [!code-xml[VisualSnippets#VisualSnippet4](~/add/codesnippet/xaml/VisualSnippets/Window1.xaml#visualsnippet4)]  \n  \n The following code example shows how to use the TransformToVisual method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>. The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.  \n  \n [!code-vb[VisualSnippets#VisualSnippet8](~/add/codesnippet/visualbasic/visualsnippets/window1.xaml.vb#visualsnippet8)]\n [!code-cs[VisualSnippets#VisualSnippet8](~/add/codesnippet/csharp/VisualSnippets/Window1.xaml.cs#visualsnippet8)]  \n  \n The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects. In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4. The offset values are negative values because the parent object is negatively offset relative to its child object."
  syntax:
    content: public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>座標が変換されます。"
    return:
      type: System.Windows.Media.GeneralTransform
      description: "型の値<xref href=&quot;System.Windows.Media.GeneralTransform&quot;></xref>です。"
  overload: System.Windows.Media.Visual.TransformToVisual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visual</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "視覚的なオブジェクトが関連付けられていません。"
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapEffect
  id: VisualBitmapEffect
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
  fullName: System.Windows.Media.Visual.VisualBitmapEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>値を<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "このビジュアル オブジェクトのビットマップ効果。"
  overload: System.Windows.Media.Visual.VisualBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput
  id: VisualBitmapEffectInput
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
  fullName: System.Windows.Media.Visual.VisualBitmapEffectInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>値を<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "ビットマップ効果は、このビジュアル オブジェクトの値を入力します。"
  overload: System.Windows.Media.Visual.VisualBitmapEffectInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode
  id: VisualBitmapScalingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
  fullName: System.Windows.Media.Visual.VisualBitmapScalingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.BitmapScalingMode&quot;> </xref>の<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { get; set; }
    return:
      type: System.Windows.Media.BitmapScalingMode
      description: "The <xref href=&quot;System.Windows.Media.BitmapScalingMode&quot;></xref> value for the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualBitmapScalingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualCacheMode
  id: VisualCacheMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
  fullName: System.Windows.Media.Visual.VisualCacheMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定のキャッシュされた表現、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "表示するために時間がかかる場合がコンテンツのパフォーマンスを向上させる必要がある場合は、VisualCacheMode プロパティを設定します。 詳細については、 <xref:System.Windows.Media.BitmapCache>。</xref:System.Windows.Media.BitmapCache>を参照してください。"
  syntax:
    content: protected System.Windows.Media.CacheMode VisualCacheMode { get; set; }
    return:
      type: System.Windows.Media.CacheMode
      description: "A <xref href=&quot;System.Windows.Media.CacheMode&quot;> </xref>のキャッシュされた表現を保持する、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  overload: System.Windows.Media.Visual.VisualCacheMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualChildrenCount
  id: VisualChildrenCount
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
  fullName: System.Windows.Media.Visual.VisualChildrenCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "子要素の数を取得、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "既定では、<xref:System.Windows.Media.Visual>子を持っていない</xref:System.Windows.Media.Visual>。 したがって、既定の実装を常に 0 を返します。"
  example:
  - "The following example defines an overridden implementation of VisualChildrenCount.  \n  \n [!code-cs[DrawingVisualSample#102a](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#102a)]\n [!code-vb[DrawingVisualSample#102a](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#102a)]"
  syntax:
    content: protected virtual int VisualChildrenCount { get; }
    return:
      type: System.Int32
      description: "子要素の数。"
  overload: System.Windows.Media.Visual.VisualChildrenCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualClearTypeHint
  id: VisualClearTypeHint
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
  fullName: System.Windows.Media.Visual.VisualClearTypeHint
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.ClearTypeHint&quot;> </xref>で ClearType がどのように表示されるかを決定する、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }
    return:
      type: System.Windows.Media.ClearTypeHint
      description: "A <xref href=&quot;System.Windows.Media.ClearTypeHint&quot;></xref> of the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualClearTypeHint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualClip
  id: VisualClip
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualClip
  nameWithType: Visual.VisualClip
  fullName: System.Windows.Media.Visual.VisualClip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定のクリップ領域、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>として、 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref>値。"
  syntax:
    content: protected System.Windows.Media.Geometry VisualClip { get; set; }
    return:
      type: System.Windows.Media.Geometry
      description: "されたビジュアルのクリップ領域の値、 <xref href=&quot;System.Windows.Media.Geometry&quot;> </xref>型です。"
  overload: System.Windows.Media.Visual.VisualClip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualEdgeMode
  id: VisualEdgeMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
  fullName: System.Windows.Media.Visual.VisualEdgeMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "エッジ モードの取得または設定、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>として、 <xref href=&quot;System.Windows.Media.EdgeMode&quot;> </xref>値。"
  syntax:
    content: protected System.Windows.Media.EdgeMode VisualEdgeMode { get; set; }
    return:
      type: System.Windows.Media.EdgeMode
      description: "<xref href=&quot;System.Windows.Media.EdgeMode&quot;> </xref>ビジュアルの値。"
  overload: System.Windows.Media.Visual.VisualEdgeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualEffect
  id: VisualEffect
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualEffect
  nameWithType: Visual.VisualEffect
  fullName: System.Windows.Media.Visual.VisualEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定を適用するビットマップ効果、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.Effects.Effect VisualEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.Effect
      description: "<xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>を表すビットマップ効果。"
  overload: System.Windows.Media.Visual.VisualEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOffset
  id: VisualOffset
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOffset
  nameWithType: Visual.VisualOffset
  fullName: System.Windows.Media.Visual.VisualOffset
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得またはビジュアル オブジェクトのオフセット値を設定します。"
  syntax:
    content: protected System.Windows.Vector VisualOffset { get; set; }
    return:
      type: System.Windows.Vector
      description: "A <xref href=&quot;System.Windows.Vector&quot;> </xref>オフセット値を指定します。"
  overload: System.Windows.Media.Visual.VisualOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOpacity
  id: VisualOpacity
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
  fullName: System.Windows.Media.Visual.VisualOpacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定の不透明度、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "不透明度の値、 <xref:System.Windows.Media.Visual>0 ~ 1 の値として表されます</xref:System.Windows.Media.Visual>。 値 0 は、要素が 1 の値は、要素が完全に不透明であることを示しますが、完全に透明であることを示します。 値 0.5 の要素が 50% 不透明であることを示します。 0 より小さい値は 0 として扱われます1 より大きい値は 1 として扱われます。"
  syntax:
    content: protected double VisualOpacity { get; set; }
    return:
      type: System.Double
      description: "ビジュアルの不透明度の値。"
  overload: System.Windows.Media.Visual.VisualOpacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualOpacityMask
  id: VisualOpacityMask
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
  fullName: System.Windows.Media.Visual.VisualOpacityMask
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref>の不透明度マスクを表す値、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "不透明度マスクは、<xref:System.Windows.Media.Brush>このビジュアルの描画された内容の任意のアルファ チャンネル マスクに適用されている</xref:System.Windows.Media.Brush>。"
  syntax:
    content: protected System.Windows.Media.Brush VisualOpacityMask { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "A <xref href=&quot;System.Windows.Media.Brush&quot;> </xref>ビジュアルの不透明度マスクの値を表すです。"
  overload: System.Windows.Media.Visual.VisualOpacityMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualParent
  id: VisualParent
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualParent
  nameWithType: Visual.VisualParent
  fullName: System.Windows.Media.Visual.VisualParent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビジュアル オブジェクトのビジュアル ツリーの親を取得します。"
  syntax:
    content: protected System.Windows.DependencyObject VisualParent { get; }
    return:
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>親。"
  overload: System.Windows.Media.Visual.VisualParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip
  id: VisualScrollableAreaClip
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
  fullName: System.Windows.Media.Visual.VisualScrollableAreaClip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定の場合は、クリップされたスクロール可能な領域、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "ソフトウェアでレンダリングするときに、高速スクロールを有効にする VisualScrollableAreaClip プロパティを設定します。 これは、リモート デスクトップを実行しているか、仮想マシンで実行するなど、リモートのレンダリングのシナリオで役に立ちます。 親要素の子がスクロール可能では、このプロパティを設定します。 VisualScrollableAreaClip プロパティの設定も何も起こりませんがハードウェア アクセラレータをレンダリングします。       VisualScrollableAreaClip プロパティは、特定の高度なシナリオを実現できます。 VisualScrollableAreaClip プロパティを使用するときに適用される際の注意点を次に示します。      -スクロール領域の背景が不透明である必要があります。 または成果物のスクロールが発生します。      -VisualScrollableAreaClip プロパティは、のみと WPF レンダリング ソフトウェアでスクロールを促進します。 たとえば、アプリケーションがリモート デスクトップを実行している、または仮想マシン上でローカルで実行すると、このような状況が発生します。      -ハードウェアでレンダリングするときに、、スクロール動作は変更されません。 スクロール動作の相違を防ぐためには、ハードウェアとソフトウェアの両方を有効になっている VisualScrollableAreaClip プロパティを保持する必要があります。      回転と傾斜の変換は、高速スクロールを無効にします。 スケールの変換およびスクロール領域上の水平または垂直の翻訳正常に動作し、スクロール アクセラレータを無効にしません。      サブツリーを変更するか、アニメーションを使用して再描画するスクロール可能な領域の部分をトリガーする、期待どおりに動作しますが、再描画領域を高速スクロールの利点が失われます。 同じフレームの間に、スクロール領域を無効にするすべてのアニメーションでスクロールするには、この最適化の利点がなくなりますが発生します。      -VisualScrollableAreaClip 四角形は、ピクセルに達するまで内側に向かってスナップされます。 そのため、スクロールされる四角形の簡単な例のサイズは常に設定したサイズ以下です。      にスナップを下オフセットします。 これは、前の相違点のオフセットのスナップ、スナップの現在のオフセットは、ピクセル数は整数では常にことを意味します。      -ヒット テストは、ピクセルまででオフにできます。      -レイアウトの丸めをオンに、これにより、スクロール可能な領域との境界 ウィンドウのクライアント領域のエッジが、正しい配置ピクセルの境界にスナップされていること。      アクセラレータをスクロールしてもレイヤード ウィンドウでは機能しません。 つまり、どの AllowTransparency で windows = = true の場合、window.windowstyle なし、= = し、などです。      アクセラレータをスクロールしてもフル ウィンドウのレンダリング中には発生しません。      アクセラレータをスクロールしても、ウィンドウが&2; つのモニターをまたがっている場合は機能しません。      スクロール アクセラレータは、スクロールした要素の親チェーン内の中間レンダー ターゲットが存在する場合は機能しません。 これらのいくつかの中間レンダー ターゲットを次に示します。          -高速化された&1; つだけのスクロールをフレームごとに発生する可能性が影響 - DrawingBrushes - VisualBrushes - OpacityMasks の不透明度 - をクリップします。 複数の高速化されたスクロール領域があることができますが、それらの&1; つのみが、フレームの間に高速化されたスクロールを実行できます。 のどの領域がスクロールされる基準が不定になります。      アクセラレータをスクロールすると、他のコンテンツのスクロールされていません (z オーダー) 内のスクロール領域上のコンテンツがサポートしています。 必要なすべてのダーティ領域が計算され、高速のスクロールが完了したが、画面上の正しい位置に意図せずにスクロールした部分に移動する、ネットワーク経由で追加のビットマップをいくつかのバックアップを送信します。"
  syntax:
    content: protected Nullable<System.Windows.Rect> VisualScrollableAreaClip { get; set; }
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "A <xref href=&quot;System.Windows.Rect&quot;> </xref>スクロール可能なクリッピング領域を表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>のクリッピング領域が割り当てられていない場合。"
  overload: System.Windows.Media.Visual.VisualScrollableAreaClip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTextHintingMode
  id: VisualTextHintingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
  fullName: System.Windows.Media.Visual.VisualTextHintingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.TextHintingMode&quot;> </xref>の<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }
    return:
      type: System.Windows.Media.TextHintingMode
      description: "The <xref href=&quot;System.Windows.Media.TextHintingMode&quot;></xref> applied to the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualTextHintingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTextRenderingMode
  id: VisualTextRenderingMode
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
  fullName: System.Windows.Media.Visual.VisualTextRenderingMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.TextRenderingMode&quot;> </xref>の<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }
    return:
      type: System.Windows.Media.TextRenderingMode
      description: "The <xref href=&quot;System.Windows.Media.TextRenderingMode&quot;></xref> applied to the <xref href=&quot;System.Windows.Media.Visual&quot;></xref>."
  overload: System.Windows.Media.Visual.VisualTextRenderingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualTransform
  id: VisualTransform
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualTransform
  nameWithType: Visual.VisualTransform
  fullName: System.Windows.Media.Visual.VisualTransform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Transform&quot;> </xref>値を<xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Media.Transform VisualTransform { get; set; }
    return:
      type: System.Windows.Media.Transform
      description: "ビジュアルの変換の値。"
  overload: System.Windows.Media.Visual.VisualTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines
  id: VisualXSnappingGuidelines
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualXSnappingGuidelines
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または x 座標 (垂直) ガイドライン コレクションを設定します。"
  remarks: "ピクセル スナップは、プロセス オブジェクトのエッジがデバイスに固有のピクセル単位で表示できるようにのコンテンツのレイアウトは固定です。 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を有効にします。 システムのされた各デバイスに依存しないピクセルが自動的に拡大縮小[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]設定します。 これにより、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]アプリケーションの適切なスケーリングの異なる[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]設定して、アプリケーションを自動的に[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-注意してください。       ただし、この[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]の独立性がアンチ エイリアス処理のための不規則なエッジ表示を作成できます。 これらの成果物がぼやけて、または「ソフト」のエッジとしても表示は、エッジ場所がデバイス ピクセルの間ではなく、デバイス ピクセル中央にあるときに発生します。 この問題に対処[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]オブジェクト「スナップ」デバイス (ピクセル単位) をアンチ エイリアス処理によって生成される、ぼかしを排除するビジュアル ツリーの端を方法を提供します。"
  syntax:
    content: protected System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { get; set; }
    return:
      type: System.Windows.Media.DoubleCollection
      description: "ビジュアルの x 座標ガイドライン コレクション。"
  overload: System.Windows.Media.Visual.VisualXSnappingGuidelines*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines
  id: VisualYSnappingGuidelines
  parent: System.Windows.Media.Visual
  langs:
  - csharp
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualYSnappingGuidelines
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または y 座標 (水平) ガイドライン コレクションを設定します。"
  remarks: "ピクセル スナップは、プロセス オブジェクトのエッジがデバイスに固有のピクセル単位で表示できるようにのコンテンツのレイアウトは固定です。 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を有効にします。 システムのされた各デバイスに依存しないピクセルが自動的に拡大縮小[!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)]設定します。 これにより、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]アプリケーションの適切なスケーリングの異なる[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]設定して、アプリケーションを自動的に[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]-注意してください。       ただし、この[!INCLUDE[TLA2#tla_dpi](~/add/includes/tla2sharptla-dpi-md.md)]の独立性がアンチ エイリアス処理のための不規則なエッジ表示を作成できます。 これらの成果物がぼやけていたり、か「ソフト」のエッジとしても表示は、エッジの場所がデバイス ピクセルの間ではなく、デバイスのピクセルの中央にあるときに発生します。 この問題に対処[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]オブジェクト「スナップ」デバイス (ピクセル単位) をアンチ エイリアス処理によって生成される、ぼかしを排除するビジュアル ツリーの端を方法を提供します。"
  syntax:
    content: protected System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { get; set; }
    return:
      type: System.Windows.Media.DoubleCollection
      description: "ビジュアルの y 座標ガイドライン コレクション。"
  overload: System.Windows.Media.Visual.VisualYSnappingGuidelines*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Visual.#ctor
  parent: System.Windows.Media.Visual
  isExternal: false
  name: Visual()
  nameWithType: Visual.Visual()
  fullName: System.Windows.Media.Visual.Visual()
- uid: System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: AddVisualChild(Visual)
  nameWithType: Visual.AddVisualChild(Visual)
  fullName: System.Windows.Media.Visual.AddVisualChild(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: FindCommonVisualAncestor(DependencyObject)
  nameWithType: Visual.FindCommonVisualAncestor(DependencyObject)
  fullName: System.Windows.Media.Visual.FindCommonVisualAncestor(DependencyObject)
- uid: System.Windows.Media.Visual.GetVisualChild(System.Int32)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: GetVisualChild(Int32)
  nameWithType: Visual.GetVisualChild(Int32)
  fullName: System.Windows.Media.Visual.GetVisualChild(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore(GeometryHitTestParameters)
  nameWithType: Visual.HitTestCore(GeometryHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(GeometryHitTestParameters)
- uid: System.Windows.Media.GeometryHitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestResult
  nameWithType: GeometryHitTestResult
  fullName: System.Windows.Media.GeometryHitTestResult
- uid: System.Windows.Media.GeometryHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: GeometryHitTestParameters
  nameWithType: GeometryHitTestParameters
  fullName: System.Windows.Media.GeometryHitTestParameters
- uid: System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore(PointHitTestParameters)
  nameWithType: Visual.HitTestCore(PointHitTestParameters)
  fullName: System.Windows.Media.Visual.HitTestCore(PointHitTestParameters)
- uid: System.Windows.Media.HitTestResult
  parent: System.Windows.Media
  isExternal: false
  name: HitTestResult
  nameWithType: HitTestResult
  fullName: System.Windows.Media.HitTestResult
- uid: System.Windows.Media.PointHitTestParameters
  parent: System.Windows.Media
  isExternal: false
  name: PointHitTestParameters
  nameWithType: PointHitTestParameters
  fullName: System.Windows.Media.PointHitTestParameters
- uid: System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsAncestorOf(DependencyObject)
  nameWithType: Visual.IsAncestorOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsAncestorOf(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsDescendantOf(DependencyObject)
  nameWithType: Visual.IsDescendantOf(DependencyObject)
  fullName: System.Windows.Media.Visual.IsDescendantOf(DependencyObject)
- uid: System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnDpiChanged(DpiScale,DpiScale)
  nameWithType: Visual.OnDpiChanged(DpiScale,DpiScale)
  fullName: System.Windows.Media.Visual.OnDpiChanged(DpiScale,DpiScale)
- uid: System.Windows.DpiScale
  parent: System.Windows
  isExternal: false
  name: DpiScale
  nameWithType: DpiScale
  fullName: System.Windows.DpiScale
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualChildrenChanged(DependencyObject,DependencyObject)
  nameWithType: Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualChildrenChanged(DependencyObject,DependencyObject)
- uid: System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualParentChanged(DependencyObject)
  nameWithType: Visual.OnVisualParentChanged(DependencyObject)
  fullName: System.Windows.Media.Visual.OnVisualParentChanged(DependencyObject)
- uid: System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointFromScreen(Point)
  nameWithType: Visual.PointFromScreen(Point)
  fullName: System.Windows.Media.Visual.PointFromScreen(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointToScreen(Point)
  nameWithType: Visual.PointToScreen(Point)
  fullName: System.Windows.Media.Visual.PointToScreen(Point)
- uid: System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: RemoveVisualChild(Visual)
  nameWithType: Visual.RemoveVisualChild(Visual)
  fullName: System.Windows.Media.Visual.RemoveVisualChild(Visual)
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor(Visual3D)
  nameWithType: Visual.TransformToAncestor(Visual3D)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual3D)
- uid: System.Windows.Media.Media3D.GeneralTransform2DTo3D
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: GeneralTransform2DTo3D
  nameWithType: GeneralTransform2DTo3D
  fullName: System.Windows.Media.Media3D.GeneralTransform2DTo3D
- uid: System.Windows.Media.Media3D.Visual3D
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: Visual3D
  nameWithType: Visual3D
  fullName: System.Windows.Media.Media3D.Visual3D
- uid: System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor(Visual)
  nameWithType: Visual.TransformToAncestor(Visual)
  fullName: System.Windows.Media.Visual.TransformToAncestor(Visual)
- uid: System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  isExternal: false
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToDescendant(Visual)
  nameWithType: Visual.TransformToDescendant(Visual)
  fullName: System.Windows.Media.Visual.TransformToDescendant(Visual)
- uid: System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToVisual(Visual)
  nameWithType: Visual.TransformToVisual(Visual)
  fullName: System.Windows.Media.Visual.TransformToVisual(Visual)
- uid: System.Windows.Media.Visual.VisualBitmapEffect
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
  fullName: System.Windows.Media.Visual.VisualBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
  fullName: System.Windows.Media.Visual.VisualBitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
  fullName: System.Windows.Media.Visual.VisualBitmapScalingMode
- uid: System.Windows.Media.BitmapScalingMode
  parent: System.Windows.Media
  isExternal: false
  name: BitmapScalingMode
  nameWithType: BitmapScalingMode
  fullName: System.Windows.Media.BitmapScalingMode
- uid: System.Windows.Media.Visual.VisualCacheMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
  fullName: System.Windows.Media.Visual.VisualCacheMode
- uid: System.Windows.Media.CacheMode
  parent: System.Windows.Media
  isExternal: false
  name: CacheMode
  nameWithType: CacheMode
  fullName: System.Windows.Media.CacheMode
- uid: System.Windows.Media.Visual.VisualChildrenCount
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
  fullName: System.Windows.Media.Visual.VisualChildrenCount
- uid: System.Windows.Media.Visual.VisualClearTypeHint
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
  fullName: System.Windows.Media.Visual.VisualClearTypeHint
- uid: System.Windows.Media.ClearTypeHint
  parent: System.Windows.Media
  isExternal: false
  name: ClearTypeHint
  nameWithType: ClearTypeHint
  fullName: System.Windows.Media.ClearTypeHint
- uid: System.Windows.Media.Visual.VisualClip
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClip
  nameWithType: Visual.VisualClip
  fullName: System.Windows.Media.Visual.VisualClip
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media.Visual.VisualEdgeMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
  fullName: System.Windows.Media.Visual.VisualEdgeMode
- uid: System.Windows.Media.EdgeMode
  parent: System.Windows.Media
  isExternal: false
  name: EdgeMode
  nameWithType: EdgeMode
  fullName: System.Windows.Media.EdgeMode
- uid: System.Windows.Media.Visual.VisualEffect
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEffect
  nameWithType: Visual.VisualEffect
  fullName: System.Windows.Media.Visual.VisualEffect
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Visual.VisualOffset
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOffset
  nameWithType: Visual.VisualOffset
  fullName: System.Windows.Media.Visual.VisualOffset
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Media.Visual.VisualOpacity
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
  fullName: System.Windows.Media.Visual.VisualOpacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Visual.VisualOpacityMask
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
  fullName: System.Windows.Media.Visual.VisualOpacityMask
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Visual.VisualParent
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualParent
  nameWithType: Visual.VisualParent
  fullName: System.Windows.Media.Visual.VisualParent
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
  fullName: System.Windows.Media.Visual.VisualScrollableAreaClip
- uid: System.Nullable{System.Windows.Rect}
  parent: System
  isExternal: true
  name: Nullable<Rect>
  nameWithType: Nullable<Rect>
  fullName: System.Nullable<System.Windows.Rect>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Windows.Rect>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Visual.VisualTextHintingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
  fullName: System.Windows.Media.Visual.VisualTextHintingMode
- uid: System.Windows.Media.TextHintingMode
  parent: System.Windows.Media
  isExternal: false
  name: TextHintingMode
  nameWithType: TextHintingMode
  fullName: System.Windows.Media.TextHintingMode
- uid: System.Windows.Media.Visual.VisualTextRenderingMode
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
  fullName: System.Windows.Media.Visual.VisualTextRenderingMode
- uid: System.Windows.Media.TextRenderingMode
  parent: System.Windows.Media
  isExternal: false
  name: TextRenderingMode
  nameWithType: TextRenderingMode
  fullName: System.Windows.Media.TextRenderingMode
- uid: System.Windows.Media.Visual.VisualTransform
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTransform
  nameWithType: Visual.VisualTransform
  fullName: System.Windows.Media.Visual.VisualTransform
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualXSnappingGuidelines
- uid: System.Windows.Media.DoubleCollection
  parent: System.Windows.Media
  isExternal: false
  name: DoubleCollection
  nameWithType: DoubleCollection
  fullName: System.Windows.Media.DoubleCollection
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
  fullName: System.Windows.Media.Visual.VisualYSnappingGuidelines
- uid: System.Windows.Media.Visual.#ctor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: Visual
  nameWithType: Visual.Visual
- uid: System.Windows.Media.Visual.AddVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: AddVisualChild
  nameWithType: Visual.AddVisualChild
- uid: System.Windows.Media.Visual.FindCommonVisualAncestor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: FindCommonVisualAncestor
  nameWithType: Visual.FindCommonVisualAncestor
- uid: System.Windows.Media.Visual.GetVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: GetVisualChild
  nameWithType: Visual.GetVisualChild
- uid: System.Windows.Media.Visual.HitTestCore*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: HitTestCore
  nameWithType: Visual.HitTestCore
- uid: System.Windows.Media.Visual.IsAncestorOf*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsAncestorOf
  nameWithType: Visual.IsAncestorOf
- uid: System.Windows.Media.Visual.IsDescendantOf*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: IsDescendantOf
  nameWithType: Visual.IsDescendantOf
- uid: System.Windows.Media.Visual.OnDpiChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnDpiChanged
  nameWithType: Visual.OnDpiChanged
- uid: System.Windows.Media.Visual.OnVisualChildrenChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualChildrenChanged
  nameWithType: Visual.OnVisualChildrenChanged
- uid: System.Windows.Media.Visual.OnVisualParentChanged*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: OnVisualParentChanged
  nameWithType: Visual.OnVisualParentChanged
- uid: System.Windows.Media.Visual.PointFromScreen*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointFromScreen
  nameWithType: Visual.PointFromScreen
- uid: System.Windows.Media.Visual.PointToScreen*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: PointToScreen
  nameWithType: Visual.PointToScreen
- uid: System.Windows.Media.Visual.RemoveVisualChild*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: RemoveVisualChild
  nameWithType: Visual.RemoveVisualChild
- uid: System.Windows.Media.Visual.TransformToAncestor*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToAncestor
  nameWithType: Visual.TransformToAncestor
- uid: System.Windows.Media.Visual.TransformToDescendant*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToDescendant
  nameWithType: Visual.TransformToDescendant
- uid: System.Windows.Media.Visual.TransformToVisual*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: TransformToVisual
  nameWithType: Visual.TransformToVisual
- uid: System.Windows.Media.Visual.VisualBitmapEffect*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffect
  nameWithType: Visual.VisualBitmapEffect
- uid: System.Windows.Media.Visual.VisualBitmapEffectInput*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapEffectInput
  nameWithType: Visual.VisualBitmapEffectInput
- uid: System.Windows.Media.Visual.VisualBitmapScalingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualBitmapScalingMode
  nameWithType: Visual.VisualBitmapScalingMode
- uid: System.Windows.Media.Visual.VisualCacheMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualCacheMode
  nameWithType: Visual.VisualCacheMode
- uid: System.Windows.Media.Visual.VisualChildrenCount*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualChildrenCount
  nameWithType: Visual.VisualChildrenCount
- uid: System.Windows.Media.Visual.VisualClearTypeHint*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClearTypeHint
  nameWithType: Visual.VisualClearTypeHint
- uid: System.Windows.Media.Visual.VisualClip*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualClip
  nameWithType: Visual.VisualClip
- uid: System.Windows.Media.Visual.VisualEdgeMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEdgeMode
  nameWithType: Visual.VisualEdgeMode
- uid: System.Windows.Media.Visual.VisualEffect*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualEffect
  nameWithType: Visual.VisualEffect
- uid: System.Windows.Media.Visual.VisualOffset*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOffset
  nameWithType: Visual.VisualOffset
- uid: System.Windows.Media.Visual.VisualOpacity*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacity
  nameWithType: Visual.VisualOpacity
- uid: System.Windows.Media.Visual.VisualOpacityMask*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualOpacityMask
  nameWithType: Visual.VisualOpacityMask
- uid: System.Windows.Media.Visual.VisualParent*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualParent
  nameWithType: Visual.VisualParent
- uid: System.Windows.Media.Visual.VisualScrollableAreaClip*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualScrollableAreaClip
  nameWithType: Visual.VisualScrollableAreaClip
- uid: System.Windows.Media.Visual.VisualTextHintingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextHintingMode
  nameWithType: Visual.VisualTextHintingMode
- uid: System.Windows.Media.Visual.VisualTextRenderingMode*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTextRenderingMode
  nameWithType: Visual.VisualTextRenderingMode
- uid: System.Windows.Media.Visual.VisualTransform*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualTransform
  nameWithType: Visual.VisualTransform
- uid: System.Windows.Media.Visual.VisualXSnappingGuidelines*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualXSnappingGuidelines
  nameWithType: Visual.VisualXSnappingGuidelines
- uid: System.Windows.Media.Visual.VisualYSnappingGuidelines*
  parent: System.Windows.Media.Visual
  isExternal: false
  name: VisualYSnappingGuidelines
  nameWithType: Visual.VisualYSnappingGuidelines
