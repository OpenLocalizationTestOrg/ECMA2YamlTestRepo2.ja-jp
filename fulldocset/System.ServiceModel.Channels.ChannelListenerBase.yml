### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelListenerBase
  id: ChannelListenerBase
  children:
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelListenerBase.Uri
  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase
  fullName: System.ServiceModel.Channels.ChannelListenerBase
  type: Class
  summary: "サービス チャネル リスナーに対して共通の基本実装を提供します。"
  remarks: "サービスのチャネル リスナーは、待機し、クライアントのファクトリによって作成されるチャネルを受け入れます。 クライアントとサービス間でチャネル接続が確立されると、メッセージを交換して、分散アプリケーションが通信できます。 リスナーによって提供される処理機能が選択するときに、モジュール性を提供するチャネル リスナーのスタックされたセットにレイヤー化、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]の機能を展開します。 サービス スタック内の各チャネル リスナーは、クライアント スタック内のチャネル ファクトリに対応します。 ファクトリにより作成されるチャネルは、実際に要求を受け取り、サービスのリスナーのスタックによって処理されるチャネルのスタックです。"
  syntax:
    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'
  inheritance:
  - System.ServiceModel.Channels.ChannelManagerBase
  implements:
  - System.ServiceModel.Channels.IChannelListener
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、メッセージを交換するときに、サービス モデルのタイムアウト値でタイムアウト プロパティを初期化します。 既定値は 1 分開く、送信、および閉じる操作、受信操作の 10 分です。 使用して<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>これらの操作のタイムアウトに他の値を指定するかどうか</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。"
  syntax:
    content: protected ChannelListenerBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref>指定された既定の通信タイムアウトを持つクラス。"
  remarks: "開く、送信のためのカスタム値を指定、受信、および閉じる操作のタイムアウトにサービス モデルの既定値を使用する代わりにする場合は、既定のコンス トラクターではなく ChannelListenerBase を使用します。"
  syntax:
    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>送信、受信、および閉じる操作のメッセージを交換するときにオープンで、既定のタイムアウトを指定する</xref:System.ServiceModel.IDefaultCommunicationTimeouts>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスとして実装された場合、チャネルの到着を待機する非同期操作を開始します。"
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル操作の待機がタイムアウトするまでに完了する必要がある期間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>チャネル操作の待機の非同期完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "チャネル操作の非同期待機に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>チャネル操作の非同期待機を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "チャネル リスナーが開かれていないと、ため、使用できません。"
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "クローズ操作が完了するまで待機する時間の既定の間隔を取得します。"
  remarks: "新たに作成するときにこの値は設定<xref:System.ServiceModel.Channels.ChannelListenerBase>オブジェクト</xref:System.ServiceModel.Channels.ChannelListenerBase>。 既定値<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>コンス トラクターは、1 分の値に defaultclosetimeout に対するプロパティを設定します</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>。 使用して<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>このタイムアウトに他の値を指定するかどうか</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "既定値<xref:System.TimeSpan>クローズ操作がタイムアウトするまでに完了するがどのくらいの期間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "操作が完了するまで待機する時間の既定の間隔を取得します。"
  remarks: "新たに作成するときにこの値は設定<xref:System.ServiceModel.Channels.ChannelListenerBase>オブジェクト</xref:System.ServiceModel.Channels.ChannelListenerBase>。 既定値<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>コンス トラクターは、1 分の値に defaultopentimeout に対するプロパティを設定します</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>。 使用して<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>このタイムアウトに他の値を指定するかどうか</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "既定値<xref:System.TimeSpan>オープン操作がタイムアウトするまでに完了するがどのくらいの期間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "受信操作を完了するまで待機する時間の既定の間隔を取得します。"
  remarks: "新たに作成するときにこの値は設定<xref:System.ServiceModel.Channels.ChannelListenerBase>オブジェクト</xref:System.ServiceModel.Channels.ChannelListenerBase>。 既定値<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>コンス トラクターは、10 分の値に DefaultReceiveTimeout プロパティを設定します</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>。 使用して<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>このタイムアウトに他の値を指定するかどうか</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。"
  syntax:
    content: protected override TimeSpan DefaultReceiveTimeout { get; }
    return:
      type: System.TimeSpan
      description: "既定値<xref:System.TimeSpan>受信操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "送信操作が完了するまで待機する時間の既定の間隔を取得します。"
  remarks: "新たに作成するときにこの値は設定<xref:System.ServiceModel.Channels.ChannelListenerBase>オブジェクト</xref:System.ServiceModel.Channels.ChannelListenerBase>。 既定値<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>コンス トラクターは、1 分の値に DefaultSendTimeout プロパティを設定します</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>。 使用して<xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>このタイムアウトに他の値を指定するかどうか</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。"
  syntax:
    content: protected override TimeSpan DefaultSendTimeout { get; }
    return:
      type: System.TimeSpan
      description: "既定値<xref:System.TimeSpan>送信操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスとして実装された場合は、チャネルの到着を待機する非同期操作を完了します。"
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>EndWaitForChannel メソッドへの呼び出しによって返される</xref:System.IAsyncResult>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メッセージが届いた場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public virtual T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "追加します。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスとして実装された場合、チャネルの到着を待機を開始するときの拡張ポイントを提供します。"
  syntax:
    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>での待機開始操作がタイムアウトするまでに完了する時間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>で非同期操作の通知を受信するデリゲートは、待機の完了を開始します</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクトは、待機操作を開始します。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>で非同期の開始の参照が操作を待機する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  id: OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスとして実装された場合、チャネルの到着を待機が終了するときの拡張ポイントを提供します。"
  syntax:
    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、 &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッド</xref:System.IAsyncResult>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した時間間隔の前に、メソッドが完了したかどうか、 <code> timeout </code>それ以外の有効期限が切れた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  id: OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスでオーバーライドされると、チャネルの到着を待機しているときの拡張ポイントを提供します。"
  syntax:
    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル操作の on 待機がタイムアウトするまでに完了する必要がある期間を指定します</xref:System.TimeSpan>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した時間間隔の前に、メソッドが完了したかどうか、 <code> timeout </code>それ以外の有効期限が切れた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  id: Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスとして実装された場合は、チャネル リスナーが受信チャネルをリッスンする URI を取得します。"
  syntax:
    content: public abstract Uri Uri { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>で受信チャネルを待ち受けるチャネル リスナー</xref:System.Uri> 。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "派生クラスで実装された場合、チャネルの到着を待機します。"
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル操作の待機がタイムアウトするまでに完了する必要がある期間を指定します</xref:System.TimeSpan>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した時間間隔の前にチャネルを受信した場合、 <code> timeout </code>それ以外の有効期限が切れた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase.ChannelListenerBase
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: ChannelListenerBase.BeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel
  nameWithType: ChannelListenerBase.EndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>
  nameWithType: ChannelListenerBase.GetProperty<T>
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel
  nameWithType: ChannelListenerBase.OnEndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel
  nameWithType: ChannelListenerBase.OnWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel
  nameWithType: ChannelListenerBase.WaitForChannel
