### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath
  id: MatrixAnimationUsingPath
  children:
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  langs:
  - csharp
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath
  type: Class
  summary: "値をアニメーション化、 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>プロパティを使用して、 <xref href=&quot;System.Windows.Media.PathGeometry&quot;> </xref>をアニメーション化された値を生成します。 このアニメーションは、ビジュアル オブジェクトをパスに沿って移動に使用できます。"
  remarks: "MatrixAnimationUsingPath では、角度と&1; つのアニメーションと<xref:System.Windows.Media.MatrixTransform>。</xref:System.Windows.Media.MatrixTransform>を持つオブジェクトの位置をアニメーション化することができます。       <xref:System.Windows.Media.Animation.PointAnimationUsingPath>指定した<xref:System.Windows.Media.Animation.Timeline.Duration%2A>。</xref:System.Windows.Media.Animation.Timeline.Duration%2A>経由で線形補間を使用して、そのターゲットをアニメーション化</xref:System.Windows.Media.Animation.PointAnimationUsingPath>"
  syntax:
    content: 'public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.MatrixAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: MatrixAnimationUsingPath()
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;> </xref>クラスです。"
  remarks: "既定値はありません<xref:System.Windows.Media.PathGeometry>ので、ユーザーは、いずれかを指定する必要があります</xref:System.Windows.Media.PathGeometry>。"
  syntax:
    content: public MatrixAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: MatrixAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;> </xref>、このオブジェクトの値の詳細コピーを作成します。 依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。"
  remarks: "変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。       詳細については、 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.MatrixAnimationUsingPath
      description: "現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの<> *> プロパティになります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合でも、ソースの<> *> プロパティ<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;></xref>です。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新しいインスタンス。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  id: DoesRotateWithTangent
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはオブジェクトがパスの接線に沿って回転するかどうかを示す値を設定します。"
  remarks: "アニメーション化されたオブジェクトに「スライド」アニメーション パスに沿ってして表示する場合は、プロパティを使用します。      <a name=&quot;dependencyPropertyInfo_DoesRotateWithTangent&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>"
  syntax:
    content: public bool DoesRotateWithTangent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>オブジェクトが、パスの接線に沿って回転する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  id: DoesRotateWithTangentProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: DoesRotateWithTangentProperty
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*>依存関係プロパティ</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "によって決定されたように、アニメーションを付けるプロパティの現在の値を表す値を計算、 <xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;></xref>です。"
  remarks: "場合、`defaultOriginValue`最初のスナップショット値 (1 つある場合) または基本プロパティ値、複合チェーンでこの値になりますそれ以外の場合この値はチェーンの前のアニメーションによって返される値、<xref:System.Windows.Media.Animation.AnimationClock>外にある<xref:System.Windows.Media.Animation.Clock.Stopped%2A>。</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock> 。       `defaultDestinationValue`は基本値の場合、プロパティにアニメーションの最初のコンポジション レイヤーには、アニメーションのそれ以外の値はプロパティのアニメーションの前の構成のレイヤーからの出力値。"
  syntax:
    content: protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Windows.Media.Matrix
      description: "起点の推奨値をアニメーションに独自明示的に設定されていない場合に使用される値を開始します。"
    - id: defaultDestinationValue
      type: System.Windows.Media.Matrix
      description: "アニメーションに独自明示的に設定されていない場合に使用される、終点の推奨値の値を終了します。"
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref>を生成する、 <> </> *> または<> *> アニメーションで使用します。"
    return:
      type: System.Windows.Media.Matrix
      description: "現在のアニメーションで決定された、プロパティの計算値です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはターゲット プロパティの現在の値をこのアニメーションの開始値を追加する必要があるかどうかを示す値を設定します。"
  remarks: "<a name=&quot;dependencyPropertyInfo_IsAdditive&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  |メタデータ プロパティに設定`true`|None |     > [!NOTE] > その識別子のフィールドに由来するのでこの依存関係プロパティは通常は<xref:System.Windows.Media.Animation.AnimationTimeline>さまざまな派生クラスで共有します</xref:System.Windows.Media.Animation.AnimationTimeline></xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>。"
  example:
  - "The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. The first animation's IsAdditive property is set to `false`, so it always animates the rectangle from (0,0), the animation's starting value. The second animation has the same target values (their <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> settings are identical), but its IsAdditive property is set to `true`; as a result, it animates the rectangle from whatever position it is at when the animation is applied.  \n  \n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_1_1.xaml)]\n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_1_1.xaml)]"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>対象プロパティの現在場合は、値がこのアニメーションの開始値に追加する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  id: IsAngleCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはアニメーション化された行列の回転角度を繰り返しで累積するかどうかを指定する値を設定します。"
  remarks: "このプロパティ設定されている場合`true`、アニメーション化された行列の回転角度は、アニメーションを繰り返すたびに蓄積されます。  ご使用のパスが小さい円弧である場合は、累積的な角度に回転を再開する代わりに繰り返されるたびに継続的に回転するオブジェクトが発生します。  組み合わせると、<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>の`true`、転落 (指定したパス) に応じて bounces その中に、オブジェクトが表示される</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>。 関連情報については、 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>を参照してください。       このプロパティの設定も何も起こりません場合<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A>は`false`</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A>。       このプロパティは、のために、アニメーションが繰り返されます時に、アニメーション マトリックスの角度を累積するかどうかを決定しますその<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>; の設定は行われません、アニメーションの再開時に蓄積するオフセット。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 。 ビルド前のアニメーションの値にアニメーションを作成する方法については、 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>を参照してください。      <a name=&quot;dependencyPropertyInfo_IsAngleCumulative&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>"
  example:
  - "The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. Both animations have the same <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> setting, which causes the rectangle to rotate as it moves along the screen to the right, and both animations are set to repeat four times. The first animation's IsAngleCumulative property is set to `false`, so the rectangle jumps back to its original angle when the animation repeats. The second animation's IsAngleCumulative property is set to `true`; as a result, the rectangle angle appears to increase when the animation repeats, rather than jumping back to its original value.  \n  \n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_8_1.xaml)]\n [!code-xml[PathAnimationGallery_snip#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/add/codesnippet/xaml/p-system.windows.media.a_8_1.xaml)]"
  syntax:
    content: public bool IsAngleCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アニメーションの回転角度を繰り返しで累積する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  id: IsAngleCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsAngleCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*>依存関係プロパティ</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  id: IsOffsetCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはアニメーション化された行列によって生成されるオフセットを繰り返しで累積するかどうかを示す値を設定します。"
  remarks: "このプロパティ設定されている場合`true`アニメーションが繰り返されますアニメーション化された行列のオフセットを累積します。 たとえば、パスは、小さい円弧を繰り返し表示する、アニメーションが設定されている場合は、累積的なオフセットには、画面間でバウンスを表示するオブジェクトが発生します。       このプロパティは、のために、アニメーションが繰り返されます時に、アニメーション マトリックスのオフセットを累積するかどうかを決定しますその<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>; の設定は行われません、アニメーションの再開時に蓄積するオフセット。</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 。 ビルド前のアニメーションの値にアニメーションを作成する方法については、 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>。</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>を参照してください。      <a name=&quot;dependencyPropertyInfo_IsOffsetCumulative&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>"
  syntax:
    content: public bool IsOffsetCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>オブジェクトを累積する場合は、アニメーションの繰り返されますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  id: IsOffsetCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: IsOffsetCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*>依存関係プロパティ</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: MatrixAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "ときに呼び出されますこの<xref href=&quot;System.Windows.Media.Animation.MatrixAnimationUsingPath&quot;></xref>を変更します。"
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはこのアニメーションの出力値の生成に使用されるジオメトリを設定します。"
  remarks: "A<xref:System.Windows.Media.PathGeometry>曲線を含む複雑な図形を記述することができを有効にすると、円弧が入力、アニメーション用の複雑な図形を指定します</xref:System.Windows.Media.PathGeometry>。 詳細については、次を参照してください。[ジオメトリの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "このアニメーションの生成に使用するジオメトリの値を出力します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*>依存関係プロパティ</xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.MatrixAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.MatrixAnimationBase
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: MatrixAnimationUsingPath()
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.MatrixAnimationUsingPath()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: MatrixAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangentProperty
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(Matrix,Matrix,AnimationClock)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulativeProperty
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: MatrixAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: MatrixAnimationUsingPath
  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: MatrixAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: DoesRotateWithTangent
  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: MatrixAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsAngleCumulative
  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: IsOffsetCumulative
  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: MatrixAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: MatrixAnimationUsingPath.PathGeometry
