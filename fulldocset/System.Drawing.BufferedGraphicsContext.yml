### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphicsContext
  id: BufferedGraphicsContext
  children:
  - System.Drawing.BufferedGraphicsContext.#ctor
  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Dispose
  - System.Drawing.BufferedGraphicsContext.Finalize
  - System.Drawing.BufferedGraphicsContext.Invalidate
  - System.Drawing.BufferedGraphicsContext.MaximumBuffer
  langs:
  - csharp
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext
  fullName: System.Drawing.BufferedGraphicsContext
  type: Class
  summary: "ダブル バッファリングに使用できるグラフィックス バッファーを作成するためのメソッドを提供します。"
  remarks: "BufferedGraphicsContext クラスでは、グラフィックスのカスタムのダブル バッファリングを実装することができます。 ダブル バッファリングを使用するグラフィックスを軽減または、画面の表面を再描画が原因で発生するちらつきを除去します。      > [!NOTE] > ダブル バッファリングを使用する最も簡単な方法が設定するには、<xref:System.Windows.Forms.ControlStyles>を使用してコントロールのスタイル フラグを制御、<xref:System.Windows.Forms.Control.SetStyle%2A>メソッド</xref:System.Windows.Forms.Control.SetStyle%2A></xref:System.Windows.Forms.ControlStyles>。 設定、<xref:System.Windows.Forms.ControlStyles>コントロールのコントロールのスタイル フラグが追加のコードを必要とせず、既定のグラフィックス バッファーを使用してコントロールのすべての描画をリダイレクトします</xref:System.Windows.Forms.ControlStyles>。 このフラグに設定されている`true`既定です。       BufferedGraphicsContext クラスは、作成およびグラフィックス バッファーを構成するためのメソッドを提供します。 <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドを作成、 <xref:System.Drawing.BufferedGraphics>、これはまた、バッファーに書き込むし、出力デバイスにコンテンツのレンダリングに使用できる方法を提供するグラフィックス バッファーのラッパー</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> 。       現在のアプリケーション ドメインに対する BufferedGraphicsContext を取得するには、静的なから<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>プロパティ</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>。 アニメーションなどの画像を多用するアプリケーションは、コンス トラクターを使用して専用 BufferedGraphicsContext を作成することができますが、ほとんどのアプリケーション、<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>プロパティでは十分です</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>。       バッファリングされたグラフィックスとバッファー処理のカスタム実装の描画の詳細については、次を参照してください。[ダブル バッファリングされたグラフィックス](~/add/includes/ajax-current-ext-md.md)と[する方法: バッファリングされたグラフィックス管理手動で](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphicsContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  id: '#ctor'
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref>クラスです。"
  remarks: "アニメーションなどの画像を多用するアプリケーションは、場合によってパフォーマンスを向上できる、専用の<xref:System.Drawing.BufferedGraphicsContext><xref:System.Drawing.BufferedGraphicsManager>。</xref:System.Drawing.BufferedGraphicsManager>によって提供される既定のインスタンスではなく</xref:System.Drawing.BufferedGraphicsContext>を使用して これにより、作成およびグラフィックス バッファーを個別に管理することができます。      > [!NOTE] ><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>専用<xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext>の使用が終了するとき</xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>を常に呼び出す必要があります       専用のグラフィックス バッファーの詳細については、次を参照してください。[する方法: バッファリングされたグラフィックス管理手動で](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したピクセル形式を使用して、指定されたサイズのグラフィックス バッファーを作成<xref href=&quot;System.Drawing.Graphics&quot;></xref>です。"
  remarks: "値を超えるメソッドを呼び出す場合、割り当て、四角形のサイズが、<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>プロパティ、一時的な<xref:System.Drawing.BufferedGraphicsContext>バッファーを割り当てるし、バッファーの一時的なコンテキストを指定するために作成します</xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>。 新しい<xref:System.Drawing.BufferedGraphicsContext>とは異なります、<xref:System.Drawing.BufferedGraphicsContext>アプリケーションのドメインが破棄されて自動的にとき、<xref:System.Drawing.BufferedGraphics>メソッドが破棄される割り当てによって返される</xref:System.Drawing.BufferedGraphics></xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext>。"
  example:
  - "The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetGraphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref>に新しいバッファーのピクセル形式に一致するようにします。"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>を作成するバッファーのサイズを示すです。"
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref>を使用して指定された大きさのバッファーを描画することです。"
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  id: Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したピクセル形式を使用して、指定されたサイズのグラフィックス バッファーを作成<xref href=&quot;System.Drawing.Graphics&quot;></xref>です。"
  remarks: "呼び出すと、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>サイズが値を超えると、四角形を持つメソッドの<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>プロパティ、一時的な<xref:System.Drawing.BufferedGraphicsContext>バッファーを割り当てるし、バッファーの一時的なコンテキストを指定するために作成します</xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A></xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>。 新しい<xref:System.Drawing.BufferedGraphicsContext>とは異なります、<xref:System.Drawing.BufferedGraphicsContext>アプリケーションのドメインが破棄されて自動的にとき、<xref:System.Drawing.BufferedGraphics>によって返される、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドが破棄されて</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A></xref:System.Drawing.BufferedGraphics></xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext>。"
  example:
  - "The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "<xref:System.IntPtr>に新しいバッファーのピクセル形式に一致するデバイス コンテキストにします</xref:System.IntPtr>。"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>を作成するバッファーのサイズを示すです。"
    return:
      type: System.Drawing.BufferedGraphics
      description: "A <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref>を使用して指定された大きさのバッファーを描画することです。"
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;></xref>です。"
  remarks: "<xref:System.Drawing.BufferedGraphicsContext>。</xref:System.Drawing.BufferedGraphicsContext>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Drawing.BufferedGraphicsContext>使用不可の状態</xref:System.Drawing.BufferedGraphicsContext>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Drawing.BufferedGraphicsContext>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Drawing.BufferedGraphicsContext>占有されていた</xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Drawing.BufferedGraphicsContext></xref:System.Drawing.BufferedGraphicsContext>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されません、ガベージ コレクターが<xref:System.Object.Finalize%2A><xref:System.Drawing.BufferedGraphicsContext>。</xref:System.Drawing.BufferedGraphicsContext>のメソッド</xref:System.Object.Finalize%2A>を呼び出すまで"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  id: Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "バッファーが割り当てられていて、まだ破棄されていない場合は、現在のグラフィックス バッファーを破棄します。"
  remarks: "グラフィックス バッファーが使用中にある場合は、マークされます廃棄されるとすぐに、無料です。それ以外の場合、インスタンスは破棄されますすぐにします。"
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  id: MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または使用するバッファーの最大サイズを設定します。"
  remarks: "このプロパティを取得またはメモリに保持するバッファーの最大サイズを設定できます。 任意のサイズのバッファーを割り当てることができます、ただし、バッファーに格納 MaximumBuffer サイズよりも大きいディメンションの使用は一時的に使用され、破棄時に、<xref:System.Drawing.BufferedGraphics>オブジェクトを解放します</xref:System.Drawing.BufferedGraphics>。"
  example:
  - "The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public System.Drawing.Size MaximumBuffer { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>バッファーの大きさの最大サイズを示すです。"
  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズの幅、高さは&0; に等しいまたはそれよりも小さいです。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
- uid: System.Drawing.BufferedGraphics
  parent: System.Drawing
  isExternal: false
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.BufferedGraphicsContext.#ctor*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext
- uid: System.Drawing.BufferedGraphicsContext.Allocate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate
  nameWithType: BufferedGraphicsContext.Allocate
- uid: System.Drawing.BufferedGraphicsContext.Dispose*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphicsContext.Dispose
- uid: System.Drawing.BufferedGraphicsContext.Finalize*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphicsContext.Finalize
- uid: System.Drawing.BufferedGraphicsContext.Invalidate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate
  nameWithType: BufferedGraphicsContext.Invalidate
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
