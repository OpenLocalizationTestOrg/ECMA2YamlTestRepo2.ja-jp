### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "指定するかどうか、<xref:System.Net.Sockets.Socket>呼び出しの後に接続されたまま、 <> </> *> または<> *> メソッドとの時間は引き続き接続を送信するデータが残っている場合</xref:System.Net.Sockets.Socket>。"
  remarks: "ありますデータ送信のネットワーク バッファーで使用できるアプリケーションの呼び出し後、<xref:System.Net.Sockets.Socket>または<xref:System.Net.Sockets.TcpClient>メソッド</xref:System.Net.Sockets.TcpClient></xref:System.Net.Sockets.Socket>。 量を指定する場合に、<xref:System.Net.Sockets.Socket>終了後に未送信のデータを送信すると LingerOption の作成を試みます、`enable`パラメーターに設定`true`、および`seconds`パラメーターが必要な時間数に設定します</xref:System.Net.Sockets.Socket>。 `seconds`パラメーターを使用するを指定する時間を<xref:System.Net.Sockets.Socket>タイムアウトするまでに接続したままにします</xref:System.Net.Sockets.Socket>。 たくない場合、<xref:System.Net.Sockets.Socket>終了タグの後の任意の期間の接続を維持すると LingerOption インスタンスを作成、`enable`パラメーターに設定`true`と`seconds`パラメーター&0; に設定します</xref:System.Net.Sockets.Socket>。 ここで、<xref:System.Net.Sockets.Socket>は直ちに終了し、未送信のすべてのデータは失われます</xref:System.Net.Sockets.Socket>。 作成した後に LingerOption を渡す、<xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>メソッド</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>。 使用してデータを送受信する場合、<xref:System.Net.Sockets.TcpClient>で LingerOption インスタンスを設定、<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>プロパティ</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName></xref:System.Net.Sockets.TcpClient>。       IP スタックは、接続のラウンド トリップ時間に基づいて使用する既定の IP プロトコルのタイムアウト期間を計算します。 ほとんどの場合、スタックによって計算されたタイムアウトは、アプリケーションで定義された&1; より関連性が高いです。 既定の動作は、この、<xref:System.Net.Sockets.Socket>ときに、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていないと、<xref:System.Net.Sockets.TcpClient>ときに、<xref:System.Net.Sockets.TcpClient.LingerState%2A>プロパティが設定されていない</xref:System.Net.Sockets.TcpClient.LingerState%2A></xref:System.Net.Sockets.TcpClient></xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.Socket>。"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Sockets.LingerOption&quot;> </xref>クラスです。"
  remarks: "ありますデータ送信のネットワーク バッファーで使用できる<xref:System.Net.Sockets.Socket>。</xref:System.Net.Sockets.Socket>を閉じた後 使用して、`enable`かどうかを指定するパラメーター、 <xref:System.Net.Sockets.Socket>close メソッドが呼び出された後に未送信のデータの送信を続行します</xref:System.Net.Sockets.Socket>。 使用して、`seconds`時間かを示すためにパラメーター、<xref:System.Net.Sockets.Socket>タイムアウトするまでに未送信のデータの転送を試みます</xref:System.Net.Sockets.Socket>。 指定した場合`true`の`enable`パラメーターとの場合は 0、 `seconds` 、パラメーター、<xref:System.Net.Sockets.Socket>は出力方向のネットワーク バッファーにデータの左側がなくなるまで、データを送信しよう</xref:System.Net.Sockets.Socket>。 指定した場合`false`の`enable`、パラメーター、<xref:System.Net.Sockets.Socket>は直ちに終了し、未送信のすべてのデータは失われます</xref:System.Net.Sockets.Socket>。       動作を次の表に示します、<xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>と<xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>方法で使用できる値に基づいて、`enable`と`seconds`閉じてインスタンスが作成されで設定する場合のパラメーター、<xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>または<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>プロパティ</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName></xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName></xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName></xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>。      |`enable`|`seconds`|動作 |  |--------------|---------------|--------------|  |`false` (無効)、既定値 |タイムアウトは適用、されません (既定値). |有効期限が切れるまで既定の IP プロトコル タイムアウト保留中の接続指向のソケット (たとえば、TCP) のデータ送信を試みます |。  |`true` (有効) |0 以外のタイムアウト |指定したタイムアウトが経過するまでの試行が失敗した場合は、Winsock 接続がリセットの保留中のデータ送信を試行します |。  |`true` (有効) |0 のタイムアウト |。保留中のデータを破棄します。 Winsock 接続指向のソケットで、(たとえば、TCP)、接続がリセットされます |。      IP スタックは、接続のラウンド トリップ時間に基づいて使用する既定の IP プロトコルのタイムアウト期間を計算します。 ほとんどの場合、スタックによって計算されたタイムアウトは、アプリケーションで定義された&1; より関連性が高いです。 ソケットの既定の動作は、このとき、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていません</xref:System.Net.Sockets.Socket.LingerState%2A>。       ときに、<xref:System.Net.Sockets.LingerOption.LingerTime%2A>に格納されているプロパティ、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティは、既定の IP プロトコル タイムアウトよりも大きい設定、既定の IP プロトコル タイムアウトを引き続き適用を上書きします</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.LingerOption.LingerTime%2A>。"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>後に接続されたままにして、 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;メソッドが呼び出される、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: seconds
      type: System.Int32
      description: "後に接続されているままにしておく秒数、 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;メソッドが呼び出されます。"
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "取得または後に待機するかどうかを示す値を設定、<xref:System.Net.Sockets.Socket>が閉じられた</xref:System.Net.Sockets.Socket>。"
  remarks: "Enabled プロパティを使用するを判断するかどうか、<xref:System.Net.Sockets.Socket>終了後に待機されます</xref:System.Net.Sockets.Socket>。 この値に変更`true`または`false`させ、変更された<xref:System.Net.Sockets.LingerOption>を<xref:System.Net.Sockets.Socket.SetSocketOption%2A>メソッドまたはセット、<xref:System.Net.Sockets.TcpClient.LingerState%2A>または<xref:System.Net.Sockets.Socket.LingerState%2A>property.to が接続を維持を有効または無効にします</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.TcpClient.LingerState%2A></xref:System.Net.Sockets.Socket.SetSocketOption%2A></xref:System.Net.Sockets.LingerOption>。       次の表に、Enabled プロパティの有効な値の動作は、および<xref:System.Net.Sockets.LingerOption.LingerTime%2A>に格納されているプロパティ、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティ</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.LingerOption.LingerTime%2A>。      |`enable`|`seconds`|動作 |  |--------------|---------------|--------------|  |`false` (無効)、既定値 |タイムアウトは適用、されません (既定値). |有効期限が切れるまで既定の IP プロトコル タイムアウト保留中の接続指向のソケット (たとえば、TCP) のデータ送信を試みます |。  |`true` (有効) |0 以外のタイムアウト |指定したタイムアウトが経過するまでの試行が失敗した場合は、Winsock 接続がリセットの保留中のデータ送信を試行します |。  |`true` (有効) |0 のタイムアウト |。保留中のデータを破棄します。 Winsock 接続指向のソケットで、(たとえば、TCP)、接続がリセットされます |。      IP スタックは、接続のラウンド トリップ時間に基づいて使用する既定の IP プロトコルのタイムアウト期間を計算します。 ほとんどの場合、スタックによって計算されたタイムアウトは、アプリケーションで定義された&1; より関連性が高いです。 ソケットの既定の動作は、このとき、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていません</xref:System.Net.Sockets.Socket.LingerState%2A>。       ときに、<xref:System.Net.Sockets.LingerOption.LingerTime%2A>に格納されているプロパティ、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティは、既定の IP プロトコル タイムアウトよりも大きい設定、既定の IP プロトコル タイムアウトを引き続き適用を上書きします</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.LingerOption.LingerTime%2A>。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Net.Sockets.Socket>後に待機する必要があります&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;が呼び出された場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Net.Sockets.Socket> 。"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "取得または設定を呼び出した後に接続しておく時間、 &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;メソッドに送信されるデータが残っている場合。"
  remarks: "長時間閉じた方法を決定する場合、この値を使用して<xref:System.Net.Sockets.Socket>タイムアウトするまでに未送信のデータ転送を試みます</xref:System.Net.Sockets.Socket>。 この値は秒単位で、目的のタイムアウト期間に設定することもできます。       場合、<xref:System.Net.Sockets.LingerOption.Enabled%2A>プロパティは`true`、LingerTime が 0 に設定して、<xref:System.Net.Sockets.Socket>保留中の出力方向のネットワーク バッファーに送信するデータをすべて破棄します</xref:System.Net.Sockets.Socket></xref:System.Net.Sockets.LingerOption.Enabled%2A>。 この値を変更する場合は、渡す必要があります、変更された<xref:System.Net.Sockets.LingerOption>インスタンスを<xref:System.Net.Sockets.Socket.SetSocketOption%2A>メソッドまたはセット、<xref:System.Net.Sockets.TcpClient.LingerState%2A>または<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティ</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.TcpClient.LingerState%2A></xref:System.Net.Sockets.Socket.SetSocketOption%2A></xref:System.Net.Sockets.LingerOption>。       次の表に、使用できる値の動作、<xref:System.Net.Sockets.LingerOption.Enabled%2A>プロパティと LingerTime プロパティに格納されている、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティ</xref:System.Net.Sockets.Socket.LingerState%2A></xref:System.Net.Sockets.LingerOption.Enabled%2A>。      |`enable`|`seconds`|動作 |  |--------------|---------------|--------------|  |`false` (無効)、既定値 |タイムアウトは適用、されません (既定値). |有効期限が切れるまで既定の IP プロトコル タイムアウト保留中の接続指向のソケット (たとえば、TCP) のデータ送信を試みます |。  |`true` (有効) |0 以外のタイムアウト |指定したタイムアウトが経過するまでの試行が失敗した場合は、Winsock 接続がリセットの保留中のデータ送信を試行します |。  |`true` (有効) |0 のタイムアウト |。保留中のデータを破棄します。 Winsock 接続指向のソケットで、(たとえば、TCP)、接続がリセットされます |。      IP スタックは、接続のラウンド トリップ時間に基づいて使用する既定の IP プロトコルのタイムアウト期間を計算します。 ほとんどの場合、スタックによって計算されたタイムアウトは、アプリケーションで定義された&1; より関連性が高いです。 ソケットの既定の動作は、このとき、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていません</xref:System.Net.Sockets.Socket.LingerState%2A>。       LingerTime プロパティが格納されている場合、<xref:System.Net.Sockets.Socket.LingerState%2A>プロパティは、既定の IP プロトコル タイムアウトよりも大きい設定、既定の IP プロトコル タイムアウトを引き続き適用を上書きします</xref:System.Net.Sockets.Socket.LingerState%2A>。"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "呼び出した後に接続されたままにする秒単位の時間&lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;です。"
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
