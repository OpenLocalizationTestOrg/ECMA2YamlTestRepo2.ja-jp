### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "キーの派生関数を指定します、 <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref>秘密協定をキー マテリアルに変換するクラスが使用されます。"
  remarks: "ECDiffieHellmanKeyDerivationFunction 列挙型では、キー マテリアルに生秘密協定を変換するために使用するアルゴリズムの種類を定義します。 秘密協定は、キー交換の一部として、秘密キーとその他のパーティの公開キーから生成される値です。 によって生成されるキー マテリアルのシード値では、<xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>メソッド</xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>。       <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>プロパティが<xref:System.Security.Cryptography.ECDiffieHellmanCng>クラス</xref:System.Security.Cryptography.ECDiffieHellmanCng>のキー派生関数を取得するには、この列挙を使用</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>する"
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "ハッシュ アルゴリズムを使用して、キー マテリアルを生成します。 <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>プロパティを使用するアルゴリズムの名前を指定します</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>。 アルゴリズムの名前が指定されていない場合<xref href=&quot;System.Security.Cryptography.SHA256&quot;></xref>は既定のアルゴリズムとして使用します。"
  remarks: "指定することも、<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>と<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>プロパティも、これらは必須ではありません</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>。       生成されるキー マテリアルの量は、指定したアルゴリズムのハッシュ値のサイズと同じです。"
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "ハッシュ ベース メッセージ認証コード (HMAC) アルゴリズムを使用して、キー マテリアルを生成します。 <> </> *> プロパティを使用するキーを指定します。このいずれかのプロパティを設定する必要がありますまたは<> *> プロパティに設定する必要があります<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。 それ以外の場合、 <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> Hmac を使用する場合にスローされます。 両方のプロパティが設定されている場合は、秘密協定が HMAC キーとして使用されます。"
  remarks: "指定することも、<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>と<xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>プロパティも、これらは必須ではありません</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>。       生成されるキー マテリアルの量は、HMAC 値のサイズと同じです。"
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "トランスポート層セキュリティ (TLS) プロトコルを使用して、キー マテリアルを生成します。 <> </> *> と<> *> プロパティが、それ以外の設定にする必要があります、 <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> Tls を使用する場合にスローされます。"
  remarks: "この値は、160 ビットのキー マテリアルを生成します。"
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
