### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.UserMapPath
  id: UserMapPath
  children:
  - System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)
  - System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)
  - System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  - System.Web.Configuration.UserMapPath.GetMachineConfigFilename
  - System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  - System.Web.Configuration.UserMapPath.GetRootWebConfigFilename
  - System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)
  - System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  langs:
  - csharp
  name: UserMapPath
  nameWithType: UserMapPath
  fullName: System.Web.Configuration.UserMapPath
  type: Class
  summary: "構成ファイルの仮想パスを物理パスにマップします。"
  syntax:
    content: 'public class UserMapPath : System.Web.Configuration.IConfigMapPath'
  inheritance:
  - System.Object
  implements:
  - System.Web.Configuration.IConfigMapPath
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)
  id: '#ctor(System.Configuration.ConfigurationFileMap)'
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: UserMapPath(ConfigurationFileMap)
  nameWithType: UserMapPath.UserMapPath(ConfigurationFileMap)
  fullName: System.Web.Configuration.UserMapPath.UserMapPath(ConfigurationFileMap)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Configuration.UserMapPath&quot;> </xref>クラスです。"
  syntax:
    content: public UserMapPath (System.Configuration.ConfigurationFileMap fileMap);
    parameters:
    - id: fileMap
      type: System.Configuration.ConfigurationFileMap
      description: "マシン構成ファイルの構成ファイルのマッピング。"
  overload: System.Web.Configuration.UserMapPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)
  id: GetAppPathForPath(System.String,System.String)
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: GetAppPathForPath(String,String)
  nameWithType: UserMapPath.GetAppPathForPath(String,String)
  fullName: System.Web.Configuration.UserMapPath.GetAppPathForPath(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "特定のサイトに関連付けられている仮想ディレクトリ名を返します。"
  syntax:
    content: public string GetAppPathForPath (string siteID, string path);
    parameters:
    - id: siteID
      type: System.String
      description: "サイトの一意の識別子。"
    - id: path
      type: System.String
      description: "サイトに関連付けられている URL です。"
    return:
      type: System.String
      description: "<code> siteID </code>値は一意である必要があります。 <code> siteID </code>値が同じ名前を持つサイトを識別します。"
  overload: System.Web.Configuration.UserMapPath.GetAppPathForPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  id: GetDefaultSiteNameAndID(System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: GetDefaultSiteNameAndID(String,String)
  nameWithType: UserMapPath.GetDefaultSiteNameAndID(String,String)
  fullName: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "既定のサイト名と、サイト ID を設定します。"
  syntax:
    content: public void GetDefaultSiteNameAndID (out string siteName, out string siteID);
    parameters:
    - id: siteName
      type: System.String
      description: "既定のサイトの名前。"
    - id: siteID
      type: System.String
      description: "サイトの一意の識別子。"
  overload: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename
  id: GetMachineConfigFilename
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: GetMachineConfigFilename()
  nameWithType: UserMapPath.GetMachineConfigFilename()
  fullName: System.Web.Configuration.UserMapPath.GetMachineConfigFilename()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "マシン構成ファイル名を返します。"
  syntax:
    content: public string GetMachineConfigFilename ();
    parameters: []
    return:
      type: System.String
      description: "マシン構成ファイルの名前。"
  overload: System.Web.Configuration.UserMapPath.GetMachineConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  id: GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: GetPathConfigFilename(String,String,String,String)
  nameWithType: UserMapPath.GetPathConfigFilename(String,String,String,String)
  fullName: System.Web.Configuration.UserMapPath.GetPathConfigFilename(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "サイトの ID とサイト パスに基づいて、構成ファイルの名前とディレクトリを追加します。"
  syntax:
    content: public void GetPathConfigFilename (string siteID, string path, out string directory, out string baseName);
    parameters:
    - id: siteID
      type: System.String
      description: "サイトの一意の識別子。"
    - id: path
      type: System.String
      description: "サイトに関連付けられている URL です。"
    - id: directory
      type: System.String
      description: "構成ファイルの物理パス。"
    - id: baseName
      type: System.String
      description: "構成ファイルの名前。"
  overload: System.Web.Configuration.UserMapPath.GetPathConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename
  id: GetRootWebConfigFilename
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: GetRootWebConfigFilename()
  nameWithType: UserMapPath.GetRootWebConfigFilename()
  fullName: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Web アプリケーションのルートにある構成ファイルの物理パスを返します。"
  syntax:
    content: public string GetRootWebConfigFilename ();
    parameters: []
    return:
      type: System.String
      description: "Web アプリケーション ルートにある Web.config ファイルの物理パス。"
  overload: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)
  id: MapPath(System.String,System.String)
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: MapPath(String,String)
  nameWithType: UserMapPath.MapPath(String,String)
  fullName: System.Web.Configuration.UserMapPath.MapPath(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "サイト ID と、サイトに関連付けられている URL に基づいて物理パスを返します。"
  syntax:
    content: public string MapPath (string siteID, string path);
    parameters:
    - id: siteID
      type: System.String
      description: "サイトの一意の識別子。"
    - id: path
      type: System.String
      description: "サイトに関連付けられている URL です。"
    return:
      type: System.String
      description: "サイトの物理パス。"
  overload: System.Web.Configuration.UserMapPath.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  id: ResolveSiteArgument(System.String,System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  langs:
  - csharp
  name: ResolveSiteArgument(String,String,String)
  nameWithType: UserMapPath.ResolveSiteArgument(String,String,String)
  fullName: System.Web.Configuration.UserMapPath.ResolveSiteArgument(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "サイト名とサイト引数の値に基づくサイトの ID を追加します。"
  remarks: "場合`siteArgument`は`null`が既定のサイト名と等しいか、既定のサイトの識別子に等しい、`siteName`と`siteID`値には、サイトの既定値が設定されます。"
  syntax:
    content: public void ResolveSiteArgument (string siteArgument, out string siteName, out string siteID);
    parameters:
    - id: siteArgument
      type: System.String
      description: "サイトの名前またはサイトの識別子。"
    - id: siteName
      type: System.String
      description: "既定のサイト名。"
    - id: siteID
      type: System.String
      description: "サイトの一意の識別子。"
  overload: System.Web.Configuration.UserMapPath.ResolveSiteArgument*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Configuration.UserMapPath.#ctor(System.Configuration.ConfigurationFileMap)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: UserMapPath(ConfigurationFileMap)
  nameWithType: UserMapPath.UserMapPath(ConfigurationFileMap)
  fullName: System.Web.Configuration.UserMapPath.UserMapPath(ConfigurationFileMap)
- uid: System.Configuration.ConfigurationFileMap
  parent: System.Configuration
  isExternal: false
  name: ConfigurationFileMap
  nameWithType: ConfigurationFileMap
  fullName: System.Configuration.ConfigurationFileMap
- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath(System.String,System.String)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetAppPathForPath(String,String)
  nameWithType: UserMapPath.GetAppPathForPath(String,String)
  fullName: System.Web.Configuration.UserMapPath.GetAppPathForPath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetDefaultSiteNameAndID(String,String)
  nameWithType: UserMapPath.GetDefaultSiteNameAndID(String,String)
  fullName: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID(String,String)
- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetMachineConfigFilename()
  nameWithType: UserMapPath.GetMachineConfigFilename()
  fullName: System.Web.Configuration.UserMapPath.GetMachineConfigFilename()
- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetPathConfigFilename(String,String,String,String)
  nameWithType: UserMapPath.GetPathConfigFilename(String,String,String,String)
  fullName: System.Web.Configuration.UserMapPath.GetPathConfigFilename(String,String,String,String)
- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetRootWebConfigFilename()
  nameWithType: UserMapPath.GetRootWebConfigFilename()
  fullName: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename()
- uid: System.Web.Configuration.UserMapPath.MapPath(System.String,System.String)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: MapPath(String,String)
  nameWithType: UserMapPath.MapPath(String,String)
  fullName: System.Web.Configuration.UserMapPath.MapPath(String,String)
- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument(System.String,System.String@,System.String@)
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: ResolveSiteArgument(String,String,String)
  nameWithType: UserMapPath.ResolveSiteArgument(String,String,String)
  fullName: System.Web.Configuration.UserMapPath.ResolveSiteArgument(String,String,String)
- uid: System.Web.Configuration.UserMapPath.#ctor*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: UserMapPath
  nameWithType: UserMapPath.UserMapPath
- uid: System.Web.Configuration.UserMapPath.GetAppPathForPath*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetAppPathForPath
  nameWithType: UserMapPath.GetAppPathForPath
- uid: System.Web.Configuration.UserMapPath.GetDefaultSiteNameAndID*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetDefaultSiteNameAndID
  nameWithType: UserMapPath.GetDefaultSiteNameAndID
- uid: System.Web.Configuration.UserMapPath.GetMachineConfigFilename*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetMachineConfigFilename
  nameWithType: UserMapPath.GetMachineConfigFilename
- uid: System.Web.Configuration.UserMapPath.GetPathConfigFilename*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetPathConfigFilename
  nameWithType: UserMapPath.GetPathConfigFilename
- uid: System.Web.Configuration.UserMapPath.GetRootWebConfigFilename*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: GetRootWebConfigFilename
  nameWithType: UserMapPath.GetRootWebConfigFilename
- uid: System.Web.Configuration.UserMapPath.MapPath*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: MapPath
  nameWithType: UserMapPath.MapPath
- uid: System.Web.Configuration.UserMapPath.ResolveSiteArgument*
  parent: System.Web.Configuration.UserMapPath
  isExternal: false
  name: ResolveSiteArgument
  nameWithType: UserMapPath.ResolveSiteArgument
