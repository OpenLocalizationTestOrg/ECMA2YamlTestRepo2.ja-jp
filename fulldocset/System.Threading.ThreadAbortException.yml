### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadAbortException
  id: ThreadAbortException
  children:
  - System.Threading.ThreadAbortException.ExceptionState
  langs:
  - csharp
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
  type: Class
  summary: "呼び出しが行われた場合にスローされる例外、<xref:System.Threading.Thread.Abort*>メソッド</xref:System.Threading.Thread.Abort*>。 このクラスは継承できません。"
  remarks: "呼び出しが行われたときに、<xref:System.Threading.Thread.Abort%2A>スレッド、共通言語ランタイムを破棄するメソッドが ThreadAbortException がスローされます</xref:System.Threading.Thread.Abort%2A>。 ThreadAbortException が特別な例外をキャッチできるが、これは自動的に再び発生させるの最後に、`catch`ブロックします。 この例外が発生したときに、ランタイムは実行すべて、`finally`スレッドを終了するまでブロックします。 スレッドがバインド解除済みの計算を実行できるため、`finally`ブロックや呼び出し<xref:System.Threading.Thread.ResetAbort%2A?displayProperty=fullName>abort を取り消す場合に、スレッドはこれまでに終了するという保証はありません</xref:System.Threading.Thread.ResetAbort%2A?displayProperty=fullName>。 中止されたスレッドが終了するまで待機する場合を呼び出すことができます、<xref:System.Threading.Thread.Join%2A?displayProperty=fullName>メソッド</xref:System.Threading.Thread.Join%2A?displayProperty=fullName>。 <xref:System.Threading.Thread.Join%2A>ブロッキング呼び出しスレッドが実際に実行を停止するまで戻りませんです。</xref:System.Threading.Thread.Join%2A>      > [!NOTE] > <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>を使用しない共通言語ランタイム (CLR) を停止すると、マネージ実行可能ファイル内のすべてのフォア グラウンド スレッドが終了したバック グラウンド threadsafter、 そのため、バック グラウンド スレッドが終了します。 CLR によってときを検出するために ThreadAbortException を使うことはできません。       ThreadAbortException、値が 0x80131530 HRESULT COR_E_THREADABORTED を使用します。      > [!NOTE] > の継承された値<xref:System.Exception.Data%2A>プロパティは常に`null`</xref:System.Exception.Data%2A>。"
  example:
  - "The following example demonstrates aborting a thread. The thread that receives the `ThreadAbortException` uses the <xref:System.Threading.Thread.ResetAbort%2A> method to cancel the abort request and continue executing.  \n  \n [!code-cpp[ThreadAbEx#1](~/add/codesnippet/cpp/t-system.threading.threa_4_1.cpp)]\n [!code-vb[ThreadAbEx#1](~/add/codesnippet/visualbasic/t-system.threading.threa_4_1.vb)]\n [!code-cs[ThreadAbEx#1](~/add/codesnippet/csharp/t-system.threading.threa_4_1.cs)]  \n  \n This code produces the following output:  \n  \n```  \nThread - working.  \nMain - aborting my thread.  \nThread - caught ThreadAbortException - resetting.  \nException message: Thread was being aborted.  \nThread - still alive and working.  \nThread - finished working.  \nMain ending.  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ThreadAbortException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.ThreadAbortException.ExceptionState
  id: ExceptionState
  parent: System.Threading.ThreadAbortException
  langs:
  - csharp
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
  fullName: System.Threading.ThreadAbortException.ExceptionState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "スレッドの中止に関連するアプリケーションに固有の情報を格納しているオブジェクトを取得します。"
  remarks: "このプロパティによって返されるオブジェクトを指定、`stateInfo`のパラメーター、<xref:System.Threading.Thread.Abort%2A>メソッド</xref:System.Threading.Thread.Abort%2A>。 このオブジェクトの使用方法と正確な内容が定義されているアプリケーションです。通常は、中止するスレッドにわかりやすい情報を伝えるために使用します。"
  example:
  - "The following code example shows how to pass information to a thread that is being aborted.  \n  \n [!code-cs[System.Threading.Thread.Abort2#1](~/add/codesnippet/csharp/p-system.threading.threa_10_1.cs)]\n [!code-cpp[System.Threading.Thread.Abort2#1](~/add/codesnippet/cpp/p-system.threading.threa_10_1.cpp)]\n [!code-vb[System.Threading.Thread.Abort2#1](~/add/codesnippet/visualbasic/p-system.threading.threa_10_1.vb)]"
  syntax:
    content: public object ExceptionState { get; }
    return:
      type: System.Object
      description: "アプリケーションに固有の情報を格納するオブジェクト。"
  overload: System.Threading.ThreadAbortException.ExceptionState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Threading.ThreadAbortException.ExceptionState
  parent: System.Threading.ThreadAbortException
  isExternal: false
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
  fullName: System.Threading.ThreadAbortException.ExceptionState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.ThreadAbortException.ExceptionState*
  parent: System.Threading.ThreadAbortException
  isExternal: false
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
