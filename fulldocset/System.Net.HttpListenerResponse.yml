### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "によって処理される要求に応答を表します、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>オブジェクト。"
  remarks: "によって処理される場合は、クライアントがリソースの要求、<xref:System.Net.HttpListener>オブジェクト内のアプリケーションで利用できる要求と応答、<xref:System.Net.HttpListenerContext>オブジェクト</xref:System.Net.HttpListenerContext></xref:System.Net.HttpListener>。 要求がによって表される、<xref:System.Net.HttpListenerRequest>オブジェクトし、で使用可能な<xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>プロパティ</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName></xref:System.Net.HttpListenerRequest>。 応答 HttpListenerResponse オブジェクトによって表されるで使用できる、<xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>プロパティ</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>。       など、さまざまなプロパティの設定によって、応答をカスタマイズすることができます<xref:System.Net.HttpListenerResponse.StatusCode%2A>、 <xref:System.Net.HttpListenerResponse.StatusDescription%2A>、 <xref:System.Net.HttpListenerResponse.Cookies%2A></xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> 。 使用して、<xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>を取得するプロパティ、<xref:System.IO.Stream>インスタンスを応答にデータを書き込むことができます</xref:System.IO.Stream></xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>。 最後に、呼び出すことによって応答データをクライアントに送信、<xref:System.Net.HttpListenerResponse.Close%2A>メソッド</xref:System.Net.HttpListenerResponse.Close%2A>。"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "応答を送信せず、クライアントへの接続を閉じます。"
  remarks: "既に閉じられているオブジェクトでこのメソッドを呼び出しても効果はありません。 このメソッドは、関連付けられた閉じます応答が終了されていない場合<xref:System.Net.HttpListenerRequest>と<xref:System.Net.HttpListenerContext>オブジェクト</xref:System.Net.HttpListenerContext></xref:System.Net.HttpListenerRequest>。 関係なく、閉じている、クライアントへの接続も、<xref:System.Net.HttpListenerRequest.KeepAlive%2A>クライアント要求のプロパティの値</xref:System.Net.HttpListenerRequest.KeepAlive%2A>。"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "この応答の HTTP ヘッダーに指定されたヘッダーと値を追加します。"
  remarks: "呼び出すことと同じではこのメソッドを呼び出す、<xref:System.Net.WebHeaderCollection.Set%2A>メソッドによって返されるコレクションを<xref:System.Net.HttpListenerResponse.Headers%2A>プロパティ</xref:System.Net.HttpListenerResponse.Headers%2A></xref:System.Net.WebHeaderCollection.Set%2A>。       ヘッダーで指定される場合`name`がありませんこのメソッドに新しいヘッダーを挿入する、<xref:System.Net.HttpListenerResponse.Headers%2A>プロパティのコレクション。</xref:System.Net.HttpListenerResponse.Headers%2A> 。 場合`name`は既存の値をこのメソッドの置換、コレクション内にある`value`です。 既存の値を置き換えることがなく、既存のヘッダーに値を追加するには、使用、<xref:System.Net.HttpListenerResponse.AppendHeader%2A>メソッド</xref:System.Net.HttpListenerResponse.AppendHeader%2A>。"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "設定する HTTP ヘッダーの名前。"
    - id: value
      type: System.String
      description: "値、`name`ヘッダー。"
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定したヘッダーの値を指定することはできません。       - または - <code> name </code>または<code> value </code>無効な文字が含まれています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "長さ<code> value </code>が 65,535 文字を超えています。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "指定した追加<xref:System.Net.Cookie>にこの応答のクッキーのコレクション</xref:System.Net.Cookie>。"
  remarks: "呼び出すことと同じではこのメソッドを呼び出す、<xref:System.Net.CookieCollection.Add%2A>メソッドによって返されるコレクションを<xref:System.Net.HttpListenerResponse.Cookies%2A>プロパティ</xref:System.Net.HttpListenerResponse.Cookies%2A></xref:System.Net.CookieCollection.Add%2A>。       指定された cookie が存在しない場合、<xref:System.Net.HttpListenerResponse.Cookies%2A>プロパティのコレクション、`cookie`が追加されます</xref:System.Net.HttpListenerResponse.Cookies%2A>。 クッキーが、コレクション内に存在する場合は`cookie`に置き換えられます。"
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "<xref:System.Net.Cookie>この応答で送信されるコレクションに追加する</xref:System.Net.Cookie>。"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "この応答で送信される指定した HTTP ヘッダーに値を追加します。"
  remarks: "呼び出すことと同じではこのメソッドを呼び出す、<xref:System.Net.WebHeaderCollection.Add%2A>メソッドによって返されるコレクションを<xref:System.Net.HttpListenerResponse.Headers%2A>プロパティ</xref:System.Net.HttpListenerResponse.Headers%2A></xref:System.Net.WebHeaderCollection.Add%2A>。       ヘッダーで指定される場合`header`がありませんこのメソッドに新しいヘッダーを挿入する、<xref:System.Net.HttpListenerResponse.Headers%2A>プロパティのコレクション。</xref:System.Net.HttpListenerResponse.Headers%2A> 。 場合`header`は、コレクション内にある、このメソッドは、追加`value`既存の値にします。 既存のヘッダーの値を置き換えるを使用して、<xref:System.Net.HttpListenerResponse.AddHeader%2A>メソッド</xref:System.Net.HttpListenerResponse.AddHeader%2A>。"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "追加する HTTP ヘッダーの名前`value`にします。"
    - id: value
      type: System.String
      description: "追加する値、`name`ヘッダー。"
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。       または、指定したヘッダーの値を指定することはできません。       - または -<code>name</code>または<code>value</code>無効な文字が含まれています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "長さ<code> value </code>が 65,535 文字を超えています。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "クライアントに応答を送信し、これによって保持されているリソースを解放<xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>インスタンス。"
  remarks: "このメソッドは、応答ストリームを閉じ、<xref:System.Net.HttpListenerRequest>応答に関連付けられている</xref:System.Net.HttpListenerRequest>。"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "クライアントに指定したバイト配列を返すし、これによって保持されているリソースを解放<xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>インスタンス。"
  remarks: "として送信するこのメソッドを使用するには、応答本文のデータを送信する場合、<xref:System.Byte>本文データの書き込みではなく配列、<xref:System.Net.HttpListenerResponse.OutputStream%2A>プロパティは、通話、<xref:System.Net.HttpListenerResponse.Close%2A>メソッド</xref:System.Net.HttpListenerResponse.Close%2A></xref:System.Net.HttpListenerResponse.OutputStream%2A></xref:System.Byte>。       このメソッドは、応答ストリームを閉じ、<xref:System.Net.HttpListenerRequest>応答に関連付けられている</xref:System.Net.HttpListenerRequest>。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "A<xref:System.Byte>をクライアントに送信する応答を格納する配列</xref:System.Byte>。"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアントにストリームのフラッシュ中に実行をブロックするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または設定、<xref:System.Text.Encoding>この応答の<xref:System.Net.HttpListenerResponse.OutputStream*>。</xref:System.Net.HttpListenerResponse.OutputStream*>の</xref:System.Text.Encoding>"
  remarks: "<xref:System.Text.Encoding>バイト シーケンスを文字セット (コード ページ) と文字をバイト シーケンスに変換するオブジェクトを使用できます</xref:System.Text.Encoding>。"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>オブジェクト内のデータで使用するのに適した、<xref:System.Net.HttpListenerResponse.OutputStream*>プロパティ、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>エンコーディングが指定されていない場合</xref:System.Net.HttpListenerResponse.OutputStream*></xref:System.Text.Encoding>。"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または応答に含める本文データのバイト数を設定します。"
  remarks: "`Content-Length`ヘッダーは応答の本文データの長さ、(バイト単位) を表します。 形式を使用してデータを送信しない、チャンクまたは生のときは、ContentLength64 プロパティを設定する必要があります。 そうしない場合、<xref:System.Net.HttpListener>応答データを送信しません</xref:System.Net.HttpListener>。       応答ヘッダーの完全な一覧については、<xref:System.Net.HttpResponseHeader>列挙体です</xref:System.Net.HttpResponseHeader>。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "応答の値<xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;></xref>ヘッダー。"
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定操作は指定された値が&0; 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "応答は既に送信されています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または返されるコンテンツの MIME の種類を設定します。"
  remarks: "以外の任意のコンテンツ タイプを返すときにこのプロパティを設定する Web ブラウザーで通信しているときに明示的にする必要があります`text/html`です。       応答ヘッダーの完全な一覧については、<xref:System.Net.HttpResponseHeader>列挙体です</xref:System.Net.HttpResponseHeader>。"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>の応答のテキストを含むインスタンス<xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;></xref>ヘッダー</xref:System.String> 。"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定操作は指定された値<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定操作は、空の文字列に指定された値 (&quot;&quot;) です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または応答で返されるクッキーのコレクションを設定します。"
  remarks: 'Cookie とは、ローカル (クライアント) コンピューターに格納されている Web サーバーから名前/値のテキスト データです。 次の cookie の形式がサポートされます: Netscape、RFC 2109 および RFC 2965 です。 Netscape の cookie の仕様は http://wp.netscape.com/newsref/std/cookie_spec.html;RFC ドキュメントはいただけます[http://www.rfc-editor.org](http://www.rfc-editor.org)です。'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "A<xref:System.Net.CookieCollection>に添える応答のクッキーを格納している</xref:System.Net.CookieCollection>。 コレクションは、空の場合は、応答に cookie が追加されていません。"
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "指定された対象からプロパティをコピー <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>この応答にします。"
  remarks: "新しい値の固定セットをその既定値から定期的に多くのプロパティを変更する場合を使用すると便利です、<xref:System.Net.HttpListenerResponse>をテンプレートとしてのインスタンス</xref:System.Net.HttpListenerResponse>。 1 回、それぞれの応答を個別に構成する代わりに、テンプレートの応答をカスタマイズする、テンプレートの応答でプロパティ値に基づいて、新しい応答を構成する CopyFrom メソッドを呼び出します。       次のプロパティからコピーされる`templateResponse`現在のインスタンスにします。      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "<xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>コピー対象のインスタンス。"
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得またはサーバーによって返されるヘッダーの名前/値ペアのコレクションを設定します。"
  remarks: "応答ヘッダーは、日付と、応答時間、応答側のサーバーと、応答本文に含まれるデータの MIME の種類の id などのメタデータ情報を含むです。       応答ヘッダーの完全な一覧については、<xref:System.Net.HttpResponseHeader>列挙体です</xref:System.Net.HttpResponseHeader>。      > [!NOTE] > コンテンツの長さを設定しようとする場合、Keep Alive Transfer-encoding、またはヘッダーのプロパティ、例外を使用して、Www-authenticate ヘッダーがスローされます。 使用して、<xref:System.Net.HttpListenerResponse.KeepAlive%2A>または<xref:System.Net.HttpListenerResponse.ContentLength64%2A>これらのヘッダーを設定するプロパティ</xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A>。 転送エンコードまたは WWW 認証ヘッダーを手動で設定することはできません。"
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A<xref:System.Net.WebHeaderCollection>インスタンスすべてを含む、応答に含まれる HTTP ヘッダーを明示的に設定します</xref:System.Net.WebHeaderCollection>。"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.WebHeaderCollection>で指定された設定操作の応答を有効なインスタンス</xref:System.Net.WebHeaderCollection>。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得またはサーバーが永続的な接続を要求するかどうかを示す値を設定します。"
  remarks: "場合は、HTTP クライアントとサーバー データを交換、短時間で複数回、永続的な接続の通信速度が各メッセージ用の TCP 接続の開閉するために必要なオーバーヘッドを回避することです。 永続的な接続は、最近の Web ブラウザーと Web サーバー間の通信で広く使用されています。       永続的な接続は、http/1.1 プロトコル仕様 (RFC 2616) RTF Editor の Web サイトで利用可能なで詳しく説明 ([http://www.rfc-editor.org](http://www.rfc-editor.org))。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サーバーは、永続的な接続を要求する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得、<xref:System.IO.Stream>オブジェクトの応答を書き込むことができます</xref:System.IO.Stream>。"
  remarks: "<xref:System.Net.HttpListenerResponse.ContentLength64%2A>プロパティは、返されたに書き込む前に明示的に設定する必要があります<xref:System.IO.Stream>オブジェクト</xref:System.IO.Stream></xref:System.Net.HttpListenerResponse.ContentLength64%2A>。      > [!NOTE] >、リクエストを終了すると、このプロパティによって返されたストリームが閉じられません。 ストリームが不要になったときに、Close メソッドを呼び出すことで閉じる必要があります。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>オブジェクトの応答を書き込むことができます</xref:System.IO.Stream>。"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または応答に使用する HTTP バージョンを設定します。"
  remarks: "さまざまな HTTP バージョンの機能は、http://www.ietf.org で利用可能なドキュメントで指定されます。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "A<xref:System.Version>クライアントに応答する場合に使用される HTTP のバージョンを示すオブジェクト</xref:System.Version>。 このプロパティは使用されなくなりましたことに注意してください。"
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定操作は指定された値<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定操作がありませんでした。 指定された値をその<> *> プロパティを 1 に設定かがない、 <> </> *> プロパティを 0 または 1 に設定します。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "指定された URL にクライアントをリダイレクトする応答を構成します。"
  remarks: "リダイレクト メソッドを使用すると、リソースの新しい場所にクライアントをリダイレクトします。 このメソッドは、応答を設定`Location`ヘッダーを`url`、<xref:System.Net.HttpListenerResponse.StatusCode%2A>プロパティを<xref:System.Net.HttpStatusCode>、および<xref:System.Net.HttpListenerResponse.StatusDescription%2A>プロパティを「検出」します</xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpStatusCode></xref:System.Net.HttpListenerResponse.StatusCode%2A>。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "クライアントが要求されたリソースの検索に使用する URL です。"
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "HTTP の値の設定を取得または<xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;></xref>この応答のヘッダー。"
  remarks: "`Location`ヘッダーは、クライアントが要求されたリソースを見つける宛ての URL を指定します。      > [!NOTE] > 設定がこのプロパティは自動的に設定されていない、<xref:System.Net.HttpListenerResponse.StatusCode%2A>プロパティ</xref:System.Net.HttpListenerResponse.StatusCode%2A>。"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>でクライアントに送信される絶対 URL を格納している、 <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref>ヘッダー</xref:System.String> 。"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定操作は、空の文字列に指定された値 (&quot;&quot;) です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または、応答でチャンク転送エンコードが使用するかどうかを設定します。"
  remarks: "チャンク メッセージの本文は、一連のチャンクで構成されます。 各チャンクは、2 つの部分は構成されています: チャンク データと実際のデータのサイズ。 設定すると、応答を true を使用して送信はチャンク転送エンコードです。"
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>チャンク転送エンコード; を使用する応答が設定されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "追加または更新、<xref:System.Net.Cookie>この応答に送信されたクッキーのコレクション</xref:System.Net.Cookie>。"
  remarks: "2 つの cookie が場合でも同じと見なされますの値、 <xref:System.Net.Cookie.Name%2A>、 <xref:System.Net.Cookie.Domain%2A>、および<xref:System.Net.Cookie.Path%2A>プロパティは同じです</xref:System.Net.Cookie.Path%2A></xref:System.Net.Cookie.Domain%2A></xref:System.Net.Cookie.Name%2A>。 これら&3; つの情報が同じ場合、メソッドは、クッキーを更新しようとします。 名とドメインの比較、大文字小文字が区別されませんが、パスの比較、大文字小文字を区別します。"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "A<xref:System.Net.Cookie>この応答に対する</xref:System.Net.Cookie>。"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "クッキーは既にコレクションに存在し、置き換えられませんでした。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得またはクライアントに返される HTTP ステータス コードを設定します。"
  remarks: "クライアントは、続行するのに方法を決定するのに、サーバーによって返されるステータス コードを使用します。 値<xref:System.Net.HttpStatusCode>サーバーが正常にクライアントの要求を処理し、応答本文に要求されたリソースを含めることを示します</xref:System.Net.HttpStatusCode>。 その他の一般的なステータス コードを含める<xref:System.Net.HttpStatusCode>、サーバーで、要求されたリソースが見つからなかったことを示すと<xref:System.Net.HttpStatusCode>が最新では、クライアントは、リソースのコピーをキャッシュされたのため、応答本文に要求されたリソースを返す必要がないことを示すします</xref:System.Net.HttpStatusCode></xref:System.Net.HttpStatusCode>。       可能な状態コードの完全な一覧を参照してください、<xref:System.Net.HttpStatusCode>列挙体です</xref:System.Net.HttpStatusCode>。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>要求されたリソースに対する HTTP ステータス コードを指定する値</xref:System.Int32>。 既定値は<xref:System.Net.HttpStatusCode>、サーバーが正常にクライアントの要求を処理し、応答本文に要求されたリソースを含めることを示すします</xref:System.Net.HttpStatusCode>。"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトが閉じられます。"
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "設定操作に指定された値が正しくありません。 有効な値は、100 ~ 999 の範囲です。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得またはクライアントに返される HTTP ステータス コードの説明テキストを設定します。"
  remarks: "ステータスの説明が通常を説明する詳細情報を提供、<xref:System.Net.HttpListenerResponse.StatusCode%2A>値</xref:System.Net.HttpListenerResponse.StatusCode%2A>。"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "クライアントに返される HTTP ステータス コードの説明文です。 既定値は RFC 2616 の説明、<xref:System.Net.HttpListenerResponse.StatusCode*>プロパティ値または空の文字列 (&quot;&quot;)、RFC 2616 説明が存在しない場合</xref:System.Net.HttpListenerResponse.StatusCode*>。"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定操作は指定された値<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "設定操作に指定された値には、印刷できない文字が含まれています。"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Net.HttpListenerResponse&quot;></xref>です。"
  remarks: "<xref:System.Net.HttpListenerResponse.Close%2A>応答を送信し、 <xref:System.Net.HttpListenerResponse>。</xref:System.Net.HttpListenerResponse>によって保持されているリソースを解放するメソッド</xref:System.Net.HttpListenerResponse.Close%2A>を使用して 応答を破棄して、このインスタンスによって保持されているリソースを解放を使用して、<xref:System.Net.HttpListenerResponse.Abort%2A>メソッド</xref:System.Net.HttpListenerResponse.Abort%2A>。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
