### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.IActivityTemplateFactory
  id: IActivityTemplateFactory
  children:
  - System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)
  langs:
  - csharp
  name: IActivityTemplateFactory
  nameWithType: IActivityTemplateFactory
  fullName: System.Activities.Presentation.IActivityTemplateFactory
  type: Interface
  summary: "「プレース ホルダー」をカプセル化するテンプレートを作成するクラスが実装するファクトリ メソッドを定義<xref href=&quot;System.Activities.Activity&quot;></xref>オブジェクト。"
  remarks: "カスタム アクティビティ テンプレートには、IActivityTemplateFactory を実装しなければなりません。 カスタム アクティビティ テンプレートを使用できるように、ユーザーは、各アクティビティを個別に作成し、すべてのプロパティおよびその他の設定を構成する必要はありませんは、カスタム複合アクティビティを含め、活動の構成のカスタマイズを手動でします。"
  example:
  - "```  \n  \npublic sealed class MyDelayActivity : IActivityTemplateFactory  \n  \n{  \n     public Activity Create(DependencyObject target)  \n     {  \n         return new System.Activities.Statements.Delay  \n         {  \n             DisplayName = \"DelayActivityTemplate\",  \n             Duration = new TimeSpan(0,0,10)  \n  \n         };  \n     }  \n }  \n  \n```"
  syntax:
    content: public interface IActivityTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)
  id: Create(System.Windows.DependencyObject)
  parent: System.Activities.Presentation.IActivityTemplateFactory
  langs:
  - csharp
  name: Create(DependencyObject)
  nameWithType: IActivityTemplateFactory.Create(DependencyObject)
  fullName: System.Activities.Presentation.IActivityTemplateFactory.Create(DependencyObject)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation
  summary: "インスタンスを作成、 <xref href=&quot;System.Activities.Activity&quot;> </xref>指定した対象オブジェクトの定義済みのデザイン パターンを表すクラス。"
  remarks: "作成して、カスタム アクティビティ テンプレートで使用されるアクティビティ インスタンスを構成するには、これを使用します。"
  example:
  - "Create a template that configures a Delay activity with a duration of ten seconds.  \n  \n```  \n  \npublic sealed class MyDelayActivity : IActivityTemplateFactory  \n  \n{  \n     public Activity Create(DependencyObject target)  \n     {  \n         return new System.Activities.Statements.Delay  \n         {  \n             DisplayName = \"DelayActivityTemplate\",  \n             Duration = new TimeSpan(0,0,10)  \n  \n         };  \n     }  \n }  \n  \n```"
  syntax:
    content: public System.Activities.Activity Create (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "このインスタンスによって使用される依存オブジェクト、 <xref href=&quot;System.Activities.Presentation.IActivityTemplateFactory&quot;></xref>です。"
    return:
      type: System.Activities.Activity
      description: "ワークフロー <xref href=&quot;System.Activities.Activity&quot;></xref>です。"
  overload: System.Activities.Presentation.IActivityTemplateFactory.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)
  parent: System.Activities.Presentation.IActivityTemplateFactory
  isExternal: false
  name: Create(DependencyObject)
  nameWithType: IActivityTemplateFactory.Create(DependencyObject)
  fullName: System.Activities.Presentation.IActivityTemplateFactory.Create(DependencyObject)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Activities.Presentation.IActivityTemplateFactory.Create*
  parent: System.Activities.Presentation.IActivityTemplateFactory
  isExternal: false
  name: Create
  nameWithType: IActivityTemplateFactory.Create
