### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DpapiDataProtector
  id: DpapiDataProtector
  children:
  - System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  - System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  - System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.Scope
  langs:
  - csharp
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector
  fullName: System.Security.Cryptography.DpapiDataProtector
  type: Class
  summary: "単純なデータ保護方法を提供します。"
  remarks: "DpapiDataProtector クラスには、構造化された<xref:System.Security.Cryptography.ProtectedData>クラス</xref:System.Security.Cryptography.ProtectedData>を使用してデータを保護する方法が用意されています クラス コンス トラクターには、保護されたデータを特定するためのパスワードを提供する用途のパラメーターがあります。 3 つすべてのパラメーターはハッシュされ、暗号化されたデータ文字列の一部として含まれます。 データの保護を解除する用途のパラメーターを知る必要があります。 <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName>データを暗号化するために呼び出されるメソッドには、`optionalEntropy`パラメーターをより安全にデータの暗号化に該当する情報を追加することができます</xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName>。 目的のパラメーターのハッシュは、オプションのエントロピーに使用されます。 データの暗号化を解除するキーを使用する必要はありません、ために、慎重に選択して、目的のデータと、別のレベルのセキュリティがデータの保護に追加します。       使用する場合、<xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>設定<xref:System.Security.Cryptography.DataProtectionScope>、データの復号化できるデータを暗号化したユーザーの一致するログオン資格情報を持つユーザーのみです</xref:System.Security.Cryptography.DataProtectionScope></xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>。 さらに、復号化通常できるデータが暗号化されているコンピューター上でのみ。 データを暗号化する Windows の関数は、暗号化を実行するセッション キーを作成します。 セッション キーは、データの復号化されるときにもう一度取得されます。 セッション キーを使用してデータを保護する方法の詳細については、次を参照してください。 [Windows データ保護](http://go.microsoft.com/fwlink/?LinkId=224686)です。       使用する場合、<xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>の設定<xref:System.Security.Cryptography.DataProtectionScope>データを保護するときに、目的のパラメーターを慎重に識別しないと、その目的を認識しているコンピューター上の他のアプリケーションにアクセスして、データの保護を解除します</xref:System.Security.Cryptography.DataProtectionScope></xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>。"
  syntax:
    content: 'public sealed class DpapiDataProtector : System.Security.Cryptography.DataProtector'
  inheritance:
  - System.Object
  - System.Security.Cryptography.DataProtector
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DataProtector.ApplicationName
  - System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  - System.Security.Cryptography.DataProtector.GetHashedPurpose
  - System.Security.Cryptography.DataProtector.PrimaryPurpose
  - System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  - System.Security.Cryptography.DataProtector.SpecificPurposes
  - System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  id: '#ctor(System.String,System.String,System.String[])'
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Security.Cryptography.DpapiDataProtector&quot;> </xref>クラスを指定したアプリケーション名、主な目的は、および特定の目的を使用します。"
  remarks: "によって指定されたアプリケーション名、`appName`パラメーターは、目的は、保護されたデータの一部と見なされます。 3 つのパラメーターはハッシュされ、保護して、データを復号化の両方のハッシュを使用します。 例として`primaryPurpose`と`specificPurposes`値は**Giftcard**と**\\<ギフト カード番号 >**または**請求書**と**\\<請求番号 >**です。"
  syntax:
    content: public DpapiDataProtector (string appName, string primaryPurpose, string[] specificPurpose);
    parameters:
    - id: appName
      type: System.String
      description: "アプリケーションの名前。"
    - id: primaryPurpose
      type: System.String
      description: "データ プロテクターの主な目的です。"
    - id: specificPurpose
      type: System.String[]
      description: "データ プロテクターの特定の目的。"
  overload: System.Security.Cryptography.DpapiDataProtector.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>appName</code>空の文字列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または -<code>primaryPurpose</code>空の文字列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または - <code>specificPurposes</code> 、空の文字列を含むまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  id: IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "データを再暗号化する必要があるかどうかを判断します。"
  remarks: "このメソッドは常に返します`true`です。"
  syntax:
    content: public override bool IsReprotectRequired (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "チェックする暗号化されたデータ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データを再暗号化する必要があります。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  id: PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override bool PrependHashedPurposeToPlaintext { get; }
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  id: ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderProtect (byte[] userData);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "追加します。"
    return:
      type: System.Byte[]
      description: "追加します。"
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  id: ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderUnprotect (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "追加します。"
    return:
      type: System.Byte[]
      description: "追加します。"
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  id: Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "取得またはデータ保護のスコープを設定します。"
  remarks: "他のプログラムで読み取ることができません、データ保護はディスク上のデータを暗号化します。  キーの保護やデータの保護を解除する必要はありません。 スコープを設定する場合<xref:System.Security.Cryptography.DataProtectionScope>、データの保護を解除できる資格情報で実行されているアプリケーションのみですただし、つまり、資格情報で実行されているすべてのアプリケーションが、保護されたデータにアクセスできること。</xref:System.Security.Cryptography.DataProtectionScope> 。  スコープを設定する場合<xref:System.Security.Cryptography.DataProtectionScope>、コンピューター上の任意の完全に信頼されたアプリケーションは、保護の解除、アクセス、およびアプリケーション名、主な目的、および特定の目的が認識されている場合は、データを変更します</xref:System.Security.Cryptography.DataProtectionScope>。"
  syntax:
    content: public System.Security.Cryptography.DataProtectionScope Scope { get; set; }
    return:
      type: System.Security.Cryptography.DataProtectionScope
      description: "Data protection (現在のユーザーまたはローカル コンピューター) のスコープを指定する列挙値の&1; つ。 既定値は<xref href=&quot;System.Security.Cryptography.DataProtectionScope&quot;></xref>です。"
  overload: System.Security.Cryptography.DpapiDataProtector.Scope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DataProtector
  isExternal: false
  name: System.Security.Cryptography.DataProtector
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
- uid: System.Security.Cryptography.DataProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtectionScope
  nameWithType: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector.DpapiDataProtector
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired
  nameWithType: DpapiDataProtector.IsReprotectRequired
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect
  nameWithType: DpapiDataProtector.ProviderProtect
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect
  nameWithType: DpapiDataProtector.ProviderUnprotect
- uid: System.Security.Cryptography.DpapiDataProtector.Scope*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
