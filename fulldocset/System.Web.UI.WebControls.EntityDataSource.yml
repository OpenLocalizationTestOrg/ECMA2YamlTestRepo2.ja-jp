### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EntityDataSource
  id: EntityDataSource
  children:
  - System.Web.UI.WebControls.EntityDataSource.#ctor
  - System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  - System.Web.UI.WebControls.EntityDataSource.AutoPage
  - System.Web.UI.WebControls.EntityDataSource.AutoSort
  - System.Web.UI.WebControls.EntityDataSource.CommandParameters
  - System.Web.UI.WebControls.EntityDataSource.CommandText
  - System.Web.UI.WebControls.EntityDataSource.ConnectionString
  - System.Web.UI.WebControls.EntityDataSource.ContextCreated
  - System.Web.UI.WebControls.EntityDataSource.ContextCreating
  - System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  - System.Web.UI.WebControls.EntityDataSource.ContextType
  - System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  - System.Web.UI.WebControls.EntityDataSource.CreateView
  - System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  - System.Web.UI.WebControls.EntityDataSource.Deleted
  - System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  - System.Web.UI.WebControls.EntityDataSource.Deleting
  - System.Web.UI.WebControls.EntityDataSource.EnableDelete
  - System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  - System.Web.UI.WebControls.EntityDataSource.EnableInsert
  - System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  - System.Web.UI.WebControls.EntityDataSource.EntitySetName
  - System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  - System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  - System.Web.UI.WebControls.EntityDataSource.GetViewNames
  - System.Web.UI.WebControls.EntityDataSource.GroupBy
  - System.Web.UI.WebControls.EntityDataSource.Include
  - System.Web.UI.WebControls.EntityDataSource.Inserted
  - System.Web.UI.WebControls.EntityDataSource.Inserting
  - System.Web.UI.WebControls.EntityDataSource.InsertParameters
  - System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  - System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OrderBy
  - System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  - System.Web.UI.WebControls.EntityDataSource.QueryCreated
  - System.Web.UI.WebControls.EntityDataSource.SaveControlState
  - System.Web.UI.WebControls.EntityDataSource.Select
  - System.Web.UI.WebControls.EntityDataSource.Selected
  - System.Web.UI.WebControls.EntityDataSource.Selecting
  - System.Web.UI.WebControls.EntityDataSource.SelectParameters
  - System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  - System.Web.UI.WebControls.EntityDataSource.TrackViewState
  - System.Web.UI.WebControls.EntityDataSource.Updated
  - System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  - System.Web.UI.WebControls.EntityDataSource.Updating
  - System.Web.UI.WebControls.EntityDataSource.Where
  - System.Web.UI.WebControls.EntityDataSource.WhereParameters
  langs:
  - csharp
  name: EntityDataSource
  nameWithType: EntityDataSource
  fullName: System.Web.UI.WebControls.EntityDataSource
  type: Class
  summary: "ASP.NET アプリケーションでのデータ バインド コントロールを Entity Data Model (EDM) を表します。"
  remarks: "このトピックの内容:-[概要](#introduction)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## 概要 EDM からデータを取得および表示するには次のように編集、データ バインド コントロールと共に EntityDataSource コントロールを使用してほとんどまたはまったくないコードを使用して、Web ページ上のデータを並べ替えます。       詳細については、次を参照してください。 [EntityDataSource Web サーバー コントロールの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:EntityDataSource       AutoGenerateOrderByClause=&quot;True|False&quot;       AutoGenerateWhereClause=&quot;True|False&quot;       AutoPage=&quot;True|False&quot;       AutoSort=&quot;True|False&quot;       CommandText=&quot;string&quot;       ConnectionString=&quot;string&quot;       ContextType=&quot;typed ObjectContext&quot;       ContextTypeName=&quot;string&quot;       DefaultContainerName=&quot;string&quot;       EnableDelete=&quot;True|False&quot;       EnableInsert=&quot;True|False&quot;       EnableUpdate=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       EntitySetName=&quot;string&quot;       EntityTypeFilter=&quot;string&quot;       GroupBy=&quot;string&quot;       Include=&quot;string&quot;       OnContextCreated=&quot;ContextCreated event handler&quot;       OnContextCreating=&quot;ContextCreating event handler&quot;       OnContextDisposing=&quot;ContextDisposing event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnException=&quot;IDynamicDataSource.Exception event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       OrderBy=&quot;string&quot;       runat=&quot;server&quot;       Select=&quot;string&quot;       StoreOriginalValuesInViewState=&quot;True|False&quot;       Where=&quot;string&quot;   >           <CommandParameters />           <DeleteParameters />           <GroupByParameters />           <InsertParameters />           <OrderByParameters />           <SelectParameters />           <UpdateParameters />           <WhereParameters />   </asp:EntityDataSource>   ```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("EntitySetName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements:
  - System.Web.DynamicData.IDynamicDataSource
  - System.Web.UI.WebControls.IQueryableDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>クラスです。"
  syntax:
    content: public EntityDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  id: '#ctor(System.Data.EntityClient.EntityConnection)'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>指定された接続を持つクラス。"
  syntax:
    content: public EntityDataSource (System.Data.EntityClient.EntityConnection connection);
    parameters:
    - id: connection
      type: System.Data.EntityClient.EntityConnection
      description: "<xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> Entity Data Model (EDM) にします。"
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  id: AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは、ORDER BY 句の値に基づいて動的に作成、<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>コレクションです</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>。"
  remarks: "ときに、AutoGenerateOrderByClause プロパティの<xref:System.Web.UI.WebControls.EntityDataSource>コントロールに設定されている`true`、コントロールでのパラメーターからの ORDER BY 句を自動的に生成されます、<xref:System.Web.UI.WebControls.ParameterCollection>を割り当て、<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A></xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.EntityDataSource>。 これを ORDER BY 句を明示的に割り当てる必要がある、<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>。       AutoGenerateOrderByClause プロパティを設定する場合`true`に値を明示的に割り当てる必要がありますいない、<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>。"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `OrderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:DropDownList AutoPostBack=\"true\" ID=\"OrderByDropDownList\" runat=\"server\">  \n    <asp:ListItem Value=\"TotalDue\"></asp:ListItem>  \n    <asp:ListItem Value=\"OrderDate\"></asp:ListItem>  \n</asp:DropDownList>  \n  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:ControlParameter  \n    ControlID=\"OrderByDropDownList\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```  \n  \n The following example automatically generates the ORDER BY clause and uses the `DefaultValue` attribute of the `Parameter` element to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:Parameter  \n    DefaultValue=\"TotalDue\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```"
  syntax:
    content: public bool AutoGenerateOrderByClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは、ORDER BY 句を作成、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AutoGenerateOrderByClause プロパティに設定するときに<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>プロパティが null でない</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  id: AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは、WHERE 句で定義された値に基づいて動的に作成、<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>コレクションです</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>。"
  remarks: "式に、エンティティ型のプロパティが等しいか調査して、クエリの結果をフィルターするには、AutoGenerateWhereClause プロパティを使用することができます。 ときに、AutoGenerateWhereClause プロパティの<xref:System.Web.UI.WebControls.EntityDataSource>コントロールに設定されている`true`、コントロールが自動的に生成されます、`WHERE`句内のパラメーターから、<xref:System.Web.UI.WebControls.ParameterCollection>の<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A></xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.EntityDataSource>。 <xref:System.Web.UI.WebControls.Parameter.Name%2A>各パラメーターのプロパティは、クエリの結果に含まれるエンティティ型のプロパティ名と一致しています</xref:System.Web.UI.WebControls.Parameter.Name%2A>。 AutoGenerateWhereClause プロパティを設定する場合`true`、明示的に割り当てる必要がありますいないを`WHERE`句を<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>。      ## 例に次の例、AutoGenerateWhereClause プロパティが設定されているで`true`です。 したがって、<xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティのクエリの結果に含まれるエンティティ型のプロパティ名と一致するがします</xref:System.Web.UI.WebControls.Parameter.Name%2A>。 クエリには、SalesOrderHeader エンティティ型の SalesOrderID および TotalDue プロパティが選択されます。 自動的に生成された`WHERE`句がクエリの結果をフィルター処理、TotalDue 値 TotalDueList リスト ボックス コントロールで選択した値と比較します。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Select=&quot;it.SalesOrderID, it.TotalDue&quot;       AutoGenerateWhereClause=&quot;True&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;TotalDue&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```## 既定の例では、AutoGenerateWhereClause プロパティ`false`です。 つまり、ことを指定する、`WHERE`句。 次の例で、`WHERE`句は`Where=&quot;it.TotalDue < @totalDueParam&quot;`totalDueParam は、パラメーター名。      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithOutAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Where=&quot;it.TotalDue < @totalDueParam&quot;        Select=&quot;it.SalesOrderID, it.TotalDue&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;totalDueParam&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```"
  syntax:
    content: public bool AutoGenerateWhereClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールが WHERE 句を作成、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AutoGenerateWhereClause プロパティに設定するときに<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref:System.Web.UI.WebControls.EntityDataSource.Where*>プロパティが null でない</xref:System.Web.UI.WebControls.EntityDataSource.Where*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  id: AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは実行時に、データのセクション内の移動をサポートします。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>コントロールが自動的にクエリによって返されるデータのページングをサポートしています</xref:System.Web.UI.WebControls.EntityDataSource>。 AutoPage プロパティは、データ コントロールにバインドされたクエリによって返されるデータのページングが有効になっているかどうかを示すブール型プロパティです。 このプロパティを設定すると`true`、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールを追加する適切なクエリ ビルダー メソッド、<xref:System.Data.Objects.ObjectQuery%601>に指定された情報に基づいて、<xref:System.Web.UI.WebControls.EntityDataSourceView>データ バインドされたコントロールによって</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Data.Objects.ObjectQuery%601></xref:System.Web.UI.WebControls.EntityDataSource>。       AutoPage プロパティの値を決定するかどうか、<xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceView>データ ソースをサポートするコントロールは`true`または`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>。       ページングが有効になっていると、射影を定義するときに、結果の並べ替えに使用するプロパティを定義します。 つまり、設定すると、<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>射影を定義でき、AutoPage に設定するプロパティ`true`も設定する必要があります、<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>順序を定義または設定するプロパティ、<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>プロパティを`true`を ORDER BY パラメーターを追加し、<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コレクションです</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A></xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A></xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A></xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>。"
  syntax:
    content: public bool AutoPage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーがデータをページに表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  id: AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは実行時に、データの並べ替えをサポートします。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、クエリによって返されるデータを自動的に並べ替えをサポートします</xref:System.Web.UI.WebControls.EntityDataSource>。 並べ替えプロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、データ コントロールにバインドされているクエリによって返されるデータの並べ替えが有効かどうかを示すブール型プロパティです</xref:System.Web.UI.WebControls.EntityDataSource>。 このプロパティを設定すると`true`、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールを追加する適切なクエリ ビルダー メソッド、<xref:System.Data.Objects.ObjectQuery%601>に指定された情報に基づいて、<xref:System.Web.UI.WebControls.EntityDataSourceView>データ バインドされたコントロールによって</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Data.Objects.ObjectQuery%601></xref:System.Web.UI.WebControls.EntityDataSource>。       自動並べ替えプロパティの値を決定するかどうか、<xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>と<xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceView>データ ソースをサポートするコントロールは`true`または`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A></xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>。"
  syntax:
    content: public bool AutoSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ユーザーがデータを並べ替えることができますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  id: CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "クエリのパラメーターのコレクションを取得します。"
  remarks: "CommandParameters プロパティが使用にアクセスする、<xref:System.Web.UI.WebControls.ParameterCollection>を使用して指定されている明示的な Entity SQL クエリに渡されるパラメーターの<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A></xref:System.Web.UI.WebControls.ParameterCollection>。"
  example:
  - "The following example supplies Entity SQL command text that returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n         FROM Products AS p   \n         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n         ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n               ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n               ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>クエリ コマンドに渡されるパラメーターを格納します。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  id: CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリを定義する Entity SQL コマンドを設定します。"
  remarks: "CommandText プロパティの<xref:System.Web.UI.WebControls.EntityDataSource>コントロールでは、カスタムの Entity SQL 式を使用するクエリを指定することができます</xref:System.Web.UI.WebControls.EntityDataSource>。 、SELECT ステートメントのように、CommandText は更新可能なは、元のデータの予測を作成します。       CommandText プロパティが割り当てられると、update、insert、および delete の機能は無効です。 この場合、メソッド<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>、 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>、および<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>関連の<xref:System.Web.UI.WebControls.EntityDataSourceView>コントロールのすべてのリターン`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A></xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A></xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>。       例外がスロー時に、CommandText プロパティが設定されている場合、<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>メソッドにバインドされたデータであるコントロールによって呼び出されます、<xref:System.Web.UI.WebControls.EntityDataSource>場合は、制御の値<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>、 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>、または<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>éý &quot; è `true`</xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 。       プロパティの射影を返すクエリには、CommandText が設定されているかどうか (たとえば、&quot;`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`&quot;)、<xref:System.Data.Common.DbDataRecord>が返されます</xref:System.Data.Common.DbDataRecord>。"
  example:
  - "The following example uses the supplied Entity SQL command to returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n          FROM Products AS p   \n          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n          ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n                ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n                ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> Entity SQL クエリである値。"
  overload: System.Web.UI.WebControls.EntityDataSource.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリを実行するために使用される接続文字列を設定します。"
  remarks: "ConnectionString プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、アプリケーション構成ファイルの要素に格納されている名前付き EDM の接続文字列から初期化することができます</xref:System.Web.UI.WebControls.EntityDataSource>。 Entity Data Model ウィザードを使用して、EDM が作成されると、アプリケーション構成ファイルに名前付きの EDM 接続が作成されます。 EDM の名前付き接続文字列が見つかった場合に、アプリケーション構成ファイル、接続が EntityDataSource デザイナーのデータ ソースの構成ウィザードのオプションとして表示します。 詳細については、次を参照してください。[データ ソース構成ウィザード (EntityDataSource コントロール)](http://msdn.microsoft.com/en-us/263976a5-2406-47c0-8919-c6af6e76d78e)です。       場合、<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>プロパティが指定されていない両方<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A><xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext>を作成するコントロールには、ConnectionString プロパティを設定する必要がありますと</xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A></xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "クエリの接続文字列。"
  overload: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>作成を完了したら、 <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>エンティティ データ オブジェクトを操作に使用されます。"
  remarks: "アクセスするには、このイベントを処理、<xref:System.Data.Objects.ObjectContext>によって使用される、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールをクエリを実行し、変更を追跡します</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext>。 このコンテキスト オブジェクトを格納して<xref:System.Web.UI.WebControls.EntityDataSource>。</xref:System.Web.UI.WebControls.EntityDataSource>外の一連の操作を使用できます。 <xref:System.Data.Objects.ObjectContext>から取得した、 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>ContextCreated イベントによって返される</xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs></xref:System.Data.Objects.ObjectContext>。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。 オブジェクト コンテキストの詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)です。       ContextCreated イベント割り当てることができます<xref:System.Data.Objects.ObjectContext>が<xref:System.Web.UI.WebControls.EntityDataSource>。</xref:System.Web.UI.WebControls.EntityDataSource>外の一連の操作用の変数を作成する</xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>プロパティにはで作成されているコンテキストが含まれています、<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>イベント</xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating></xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>。 ユーザーが中にコンテキストを割り当てない場合、<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>イベントにコンテキストのインスタンスが含まれている<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>で作成されたものでは、<xref:System.Web.UI.WebControls.EntityDataSource>に基づいて、 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName>、 <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName>、または<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>を作成、 <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>エンティティ データ オブジェクトを操作に使用されます。"
  remarks: "自分独自 ContextCreating イベントを処理<xref:System.Data.Objects.ObjectContext>新しいではなく<xref:System.Data.Objects.ObjectContext>を作成します</xref:System.Data.Objects.ObjectContext></xref:System.Data.Objects.ObjectContext>。 ContextCreating イベントが処理されないか、ハンドラーが提供されません、 <xref:System.Data.Objects.ObjectContext>、<xref:System.Web.UI.WebControls.EntityDataSource>の構成に従って&1; つを作成します</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext>。 ときに、<xref:System.Data.Objects.ObjectContext>に ContextCreating イベントに、同じインスタンスが割り当てられている提供、`Context`の連続するイベントのイベント オブジェクトのプロパティ</xref:System.Data.Objects.ObjectContext>。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。 オブジェクト コンテキストの詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)です。"
  example:
  - "The following example shows how to create an <xref:System.Data.Objects.ObjectContext> variable of the <xref:System.Web.UI.Page> object and assign it to the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> object.  \n  \n```c#  \npublic partial class _Default : System.Web.UI.Page  \n    {  \n        AdventureWorksModel.AdventureWorksEntities objCtx =  \n            new AdventureWorksModel.AdventureWorksEntities();  \n  \n        protected void EntityDataSource2_ContextCreating(object sender,   \n            EntityDataSourceContextCreatingEventArgs e)  \n        {  \n            e.Context = objCtx;  \n        }  \n    }  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "発生する前に、 <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>が破棄されています。"
  remarks: "防ぐためにこのイベントを処理、<xref:System.Data.Objects.ObjectContext>によって使用される、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールの破棄されるからです</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext>。 これを&1; つを使用する際に行います<xref:System.Data.Objects.ObjectContext>、ページのいくつかのコントロールまたはのインスタンスのインスタンス、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext>。 防ぐために、<xref:System.Data.Objects.ObjectContext>破棄されているから次のように設定します、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>オブジェクトを`true`。</xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Data.Objects.ObjectContext> 。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。 オブジェクト コンテキストの詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)です。"
  example:
  - "To keep an existing <xref:System.Data.Objects.ObjectContext> instance member for future reference cancel the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event as shown by the following code.  \n  \n```c#  \nprotected void EntityDataSource2_ContextDisposing(object sender,   \n    EntityDataSourceContextDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、型指定された<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>によって使用される、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Data.Objects.ObjectContext>によって使用される、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールが ContextType プロパティからアクセスできます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext>。 詳細については、次を参照してください。[オブジェクト コンテキストのライフ サイクル管理 (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)です。"
  syntax:
    content: public Type ContextType { get; set; }
    return:
      type: System.Type
      description: "派生したオブジェクト<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の型指定された完全修飾名<xref href=&quot;System.Data.Objects.ObjectContext&quot;></xref>によって使用される、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "ContextTypeName プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、型指定されたの完全修飾型名を指定する文字列<xref:System.Data.Objects.ObjectContext>によって使用される、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Data.Objects.ObjectContext></xref:System.Web.UI.WebControls.EntityDataSource>。 かどうか ContextTypeName プロパティは、両方指定<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>され<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A><xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext>を作成するコントロールのプロパティを設定する必要があります</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A></xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>"
  syntax:
    content: public string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>型の完全修飾名です</xref:System.String>。"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  id: CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref>このコントロールに関連付けられています。"
  remarks: "カスタム ビューを提供するには、派生クラスでは、このメソッドをオーバーライドすることができます。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.EntityDataSourceView
      description: "データ バインド コントロールのインターフェイスとして機能するオブジェクト。"
  overload: System.Web.UI.WebControls.EntityDataSource.CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  id: DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得または既定のコンテナー名を設定します。"
  remarks: "場合、<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>プロパティが指定されていない、DefaultContainerName、 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> <xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext>を作成するコントロールのプロパティを設定する必要があります</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A></xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string DefaultContainerName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>の既定のコンテナー名</xref:System.String>。"
  overload: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "オブジェクトが、データ ソースから削除された後に発生します。"
  remarks: "後に削除されたこのイベントは、<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>メソッドが正常に呼び出された上、<xref:System.Data.Objects.ObjectContext>オブジェクトを削除する</xref:System.Data.Objects.ObjectContext></xref:System.Data.Objects.ObjectContext.SaveChanges%2A>。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトが削除されたオブジェクトにアクセスするために使用します</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。 このオブジェクトは、<xref:System.Data.EntityState>状態</xref:System.Data.EntityState>。       オブジェクトが削除されたときに、エラーが発生すると、削除されたイベントには、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトが設定されているに返された<xref:System.Exception>、および<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>プロパティに設定されている`null`</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A></xref:System.Exception></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>。 削除されたイベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Delete 操作中に使用されるパラメーターのコレクションを取得します。"
  remarks: "ASP.NET 4 以降を対象とする web アプリケーションのプロパティの値はビュー ステートに格納され、ポストバック間で自動的に維持します。 ASP.NET 4.5 を対象とする web アプリケーションのプロパティ値がビュー状態で格納されないと、HTTP 要求ごとに値を設定する必要があります。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Delete 操作中に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "データ ソースからオブジェクトを削除する前に発生します。"
  remarks: "前に削除すると、イベントが発生した、<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>メソッドが、<xref:System.Data.Objects.ObjectContext>オブジェクトを削除します</xref:System.Data.Objects.ObjectContext></xref:System.Data.Objects.ObjectContext.SaveChanges%2A>。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトが削除されるオブジェクトのアクセスに使用します</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。 このオブジェクトのプロパティを完全に設定できません可能性があります。 オブジェクトを識別するために必要なプロパティのみを設定する必要があります。       削除されないオブジェクトを停止する、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       オブジェクトを削除すると、イベントが発生した削除し、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A><xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトが返される<xref:System.Exception>。</xref:System.Exception>セット</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>のプロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>を準備する際にエラーが発生した場合       削除すると、イベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを通じてオブジェクトを削除できるかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>EnableDelete プロパティが有効になっている場合は設定できません。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`で EnableDelete プロパティに割り当てられた値、<xref:System.Web.UI.WebControls.EntityDataSource>強制的に、<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>の関連するプロパティ<xref:System.Web.UI.WebControls.EntityDataSourceView>オブジェクトを返す`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A></xref:System.Web.UI.WebControls.EntityDataSource>。 EnableDelete プロパティに設定するときに`false`、<xref:System.NotSupportedException>データ バインド コントロールが<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A><xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView>メソッド</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>を呼び出した場合に発生</xref:System.NotSupportedException>する。       更新の実行条件のいずれかが満たされず、EnableDelete プロパティに設定する場合`true`、<xref:System.Web.UI.WebControls.EntityDataSource>例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource>。"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動削除の各操作は有効な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  id: EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはラッパーの作成をオフにするかどうかを示す値を設定します。"
  remarks: "初期化するとき、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールを使用して、 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>結果のオブジェクトの各エンティティのインスタンスをラップ、<xref:System.ComponentModel.ICustomTypeDescriptor>型です</xref:System.ComponentModel.ICustomTypeDescriptor></xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A></xref:System.Web.UI.WebControls.EntityDataSource>。 詳細については、次を参照してください。[フラット化オブジェクト (EntityDataSource)](http://msdn.microsoft.com/en-us/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)です。"
  syntax:
    content: public bool EnableFlattening { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>プロパティを平坦化する場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを通じてオブジェクトを追加できるかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>EnableInsert プロパティ設定されている場合に設定することはできません`true`です。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A`false`で EnableInsert プロパティに割り当てられた値、<xref:System.Web.UI.WebControls.EntityDataSource>強制的に、<xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>の関連するプロパティ<xref:System.Web.UI.WebControls.EntityDataSourceView>オブジェクトを返す`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A></xref:System.Web.UI.WebControls.EntityDataSource>。 EnableInsert プロパティに設定するときに`false`、<xref:System.NotSupportedException>データ バインド コントロールが<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A><xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView>メソッド</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>を呼び出した場合に発生した</xref:System.NotSupportedException>。       更新の実行条件のいずれかが満たされず、EnableInsert プロパティに設定する場合`true`、<xref:System.Web.UI.WebControls.EntityDataSource>例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource>。"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動挿入操作は有効な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはを通じてオブジェクトを変更できるかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>EnableUpdate プロパティ設定されている場合に設定することはできません`true`です。</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       A `false` EnableUpdate プロパティ強制的に割り当てられた値、<xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>の関連するプロパティ<xref:System.Web.UI.WebControls.EntityDataSourceView>オブジェクトを返す`false`</xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>。 EnableUpdate プロパティに設定するときに`false`、<xref:System.NotSupportedException>データ バインド コントロールが<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A><xref:System.Web.UI.WebControls.EntityDataSourceView></xref:System.Web.UI.WebControls.EntityDataSourceView>メソッド</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>を呼び出した場合に発生した</xref:System.NotSupportedException>。       EnableUpdate プロパティを設定`true`更新とは限りません。       更新の実行条件のいずれかが満たされず、EnableUpdate プロパティに設定する場合`true`、<xref:System.Web.UI.WebControls.EntityDataSource>例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource>。"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>自動更新操作は有効な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  id: EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で使用されるエンティティ セットの名前、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "EntitySetName プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールがコントロールによってアクセスされるオブジェクトの種類のエンティティ セットを指定するために使用します</xref:System.Web.UI.WebControls.EntityDataSource>。 EntitySetName プロパティの値は、コントロールによって使用される既定の SELECT ステートメントです。 用意されている Entity SQL 式としてクエリが指定されている場合、設定は必要ありません、<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>。 詳細については、次を参照してください。[カスタム コマンド テキスト (EntityDataSource)](http://msdn.microsoft.com/en-us/d42e90d0-1443-474e-8940-53f504d6fc91)です。"
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "エンティティ セットの名前。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  id: EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの特定の派生型の結果のみを制限する式を設定します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、特定の派生型を返す必要があります、EntityTypeFilter プロパティは、この派生型の名前を指定する設定することも必要があります</xref:System.Web.UI.WebControls.EntityDataSource>。 場合、<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>ポリモーフィックな結果を生成できるエンティティ セットを指定するプロパティ、EntityTypeFilter プロパティ データを編集できるようにする必要があります</xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>。 <xref:System.Data.Objects.ObjectQuery%601.OfType%2A> <xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>メソッド</xref:System.Data.Objects.ObjectQuery%601.OfType%2A>を適用すると同じ効果をが データ バインディングが読み取り専用の場合は、EntityTypeFilter プロパティは必要ありません。 この場合、エンティ セットの既定のエンティティ型のクエリによって返されるオブジェクトのプロパティがあります。"
  syntax:
    content: public string EntityTypeFilter { get; set; }
    return:
      type: System.String
      description: "フィルター式です。"
  overload: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "データ ソース コントロールに関連付けられている名前付きのデータ ソース ビューを取得します。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、1 つだけのデータ ソース ビューをサポートしています</xref:System.Web.UI.WebControls.EntityDataSource>。 すべてのデータ ソース ビュー オブジェクトと同様に、 <xref:System.Web.UI.WebControls.EntityDataSourceView>、データ ソース コントロールに関連付けられているオブジェクトは、その機能を定義は、基になるデータベースからデータを取得する必要はし、並べ替え、挿入、削除、および更新などの操作を実行するすべての作業を実行します</xref:System.Web.UI.WebControls.EntityDataSourceView>。"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "取得するビューの名前。 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールは、1 つのビューをサポートしている`viewName`は無視されます。"
    return:
      type: System.Web.UI.DataSourceView
      description: "<xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref>と関連付けられている、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.EntityDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "関連付けられているビュー オブジェクトの一覧を表す名前のコレクションを取得、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、その基になるデータの&1; つのビューをサポートしています</xref:System.Web.UI.WebControls.EntityDataSource>。 GetViewNames メソッドは、この&1; つのビュー名の文字列としての&1; つの要素コレクションを返します。"
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>に関連付けられているビューの名前を格納している、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール</xref:System.Collections.ICollection>。"
  overload: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  id: GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの結果をグループ化する方法を指定する Entity SQL 式を設定します。"
  syntax:
    content: public string GroupBy { get; set; }
    return:
      type: System.String
      description: "GROUP BY 句。"
  overload: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  id: Include
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの結果に含める関連オブジェクトを指定する式を設定します。"
  remarks: "Include プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、具体的には照会されたオブジェクトと共に返されるオブジェクトとを定義するクエリ パスのコンマ区切りの一覧を指定します</xref:System.Web.UI.WebControls.EntityDataSource>。 として個別に呼び出して、改変の有無、文字列内の各コンマ区切り値が渡される、<xref:System.Data.Objects.ObjectQuery%601.Include%2A>のメソッド、<xref:System.Data.Objects.ObjectQuery%601>によって実行される、 [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Include%2A> 。 このクエリによって規制データのソースである、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource>。 含めるプロパティは、引数に適用される、<xref:System.Data.Objects.ObjectQuery%601>が実行される前にします</xref:System.Data.Objects.ObjectQuery%601>。       含めるプロパティを指定する文字列<xref:System.Data.Objects.ObjectQuery%601.Include%2A><xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>メソッド</xref:System.Data.Objects.ObjectQuery%601.Include%2A>に渡される文字列と同じフォーマットを使用します。 クエリ パスを使用して、関連するオブジェクトを自動的にロードする方法の例については、次を参照してください。[する方法: 図形の結果にクエリ パスを使用して](http://msdn.microsoft.com/en-us/100bf7f5-00ba-4c17-8e27-7a8a14831093)です。       含めるプロパティを使用して、クエリ パスを指定する、関連エンティティのプロパティは読み取り専用のデータ バインディングにのみ使用できます。 関連オブジェクトが明示的にクエリ パスに含まれていない場合、データ バインディングのプロパティ記述子を利用できますが、プロパティ自体は、null 値を返します。 この場合、その値を表示する関連オブジェクトを明示的に読み込む必要があります。 詳細については、次を参照してください。[関連オブジェクトの読み込み](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)です。"
  example:
  - "The following XML markup defines a query path that returns `SalesOrderHeader` objects related to the returned `Contact` object. With each `SalesOrderHeader`, the related `SalesOrderDetail` and `Address` objects are also returned.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `customers`:  \n  \n```  \nObjectQuery<Contact> customers =  \n      context.Contact  \n       .Where(\"it.ContactID = @ContactID\",  \n         new ObjectParameter(\"ContactID\", customerId))  \n        .Include(\"SalesOrderHeader.SalesOrderDetail\")  \n        .Include(\"SalesOrderHeader.Address\");  \n  \n```"
  syntax:
    content: public string Include { get; set; }
    return:
      type: System.String
      description: "クエリ結果に返すクエリ パスをコンマで区切って指定します。"
  overload: System.Web.UI.WebControls.EntityDataSource.Include*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "データ ソースで新しいオブジェクトを作成した後に発生します。"
  remarks: "データ ソースに追加するオブジェクトが作成されるとき、またはデータ ソースにオブジェクトのデータが保存されるときにエラーが発生した場合、挿入したイベントが発生します。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトが追加されたオブジェクトにアクセスするために使用します</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>。       このオブジェクトのプロパティは、データ ソースが生成した値も含めて、データ ソースから返される値を格納します。       データ ソースにオブジェクトが保存されるときにエラーが発生した、Inserted イベントが発生し、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A><xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトが返される<xref:System.Exception></xref:System.Exception>設定</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>のプロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>。 Inserted イベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "データ ソースに新しいオブジェクトが保存される前に発生します。"
  remarks: "データ ソースに新しいオブジェクトが保存される前に、挿入イベントが発生します。 挿入イベントを使用すると、変更、オブジェクトが追加されていることを確認や、別のオブジェクトを追加、または操作をキャンセルできます。 追加するオブジェクトにアクセスすることができます、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクト</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。 正しいエンティティの種類を設定するため、ユーザーは、別のオブジェクトを指定する場合など、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。       セットをオブジェクトの追加を停止する、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       新しいオブジェクトを作成するときに、エラーが発生する場合、挿入イベントが発生し、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A><xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトが返される<xref:System.Exception></xref:System.Exception>設定</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>のプロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>。       挿入のイベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "挿入操作中に使用されるパラメーターのコレクションを取得します。"
  remarks: "ASP.NET 4 以降を対象とする web アプリケーションのプロパティの値はビュー ステートに格納され、ポストバック間で自動的に維持します。 ASP.NET 4.5 を対象とする web アプリケーションのプロパティ値がビュー状態で格納されないと、HTTP 要求ごとに値を設定する必要があります。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "挿入操作中に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "指定したプロパティの状態を読み込みます、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールを永続化する必要があります。"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>状態情報を格納します</xref:System.Object>。"
  overload: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "追加、 <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref>イベント ハンドラーを<xref href=&quot;System.Web.UI.Page&quot;></xref>が含まれるコントロール、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納するオブジェクト</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.EntityDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref>イベント。"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納するオブジェクト</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  id: OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの結果を並べ替える方法を指定する Entity SQL 式を設定します。"
  remarks: 'OrderBy プロパティの<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、Entity SQL クエリの式を表す文字列です</xref:System.Web.UI.WebControls.EntityDataSource>。 この文字列が渡される、改変の有無に、<xref:System.Data.Objects.ObjectQuery%601>によって実行される、 [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</xref:System.Data.Objects.ObjectQuery%601> 。 このクエリによって規制データのソースである、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource>。 OrderBy プロパティに指定された文字列<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A><xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>メソッド</xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>に渡される文字列と同じフォーマットを使用します。 クエリ結果の順序付けに句を使用する方法の例については、次を参照してください。[する方法: データの並べ替え](http://msdn.microsoft.com/en-us/c05f2506-cb9d-4ebc-822b-300042ad53e7)です。'
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is equivalent to the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public string OrderBy { get; set; }
    return:
      type: System.String
      description: "ORDER BY 句。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "ORDER BY 句の作成に使用されるパラメーターのコレクションを取得します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールに設定されている`true`、コントロールでのパラメーターからの ORDER BY 句を自動的に生成されます、 <xref:System.Web.UI.WebControls.ParameterCollection>OrderByParameters プロパティに割り当てられます</xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>。 これを ORDER BY 句を明示的に割り当てる必要がある、<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>。 OrderByParameters プロパティから、ORDER BY 句の構築では、する必要があります、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>、コレクション内のパラメーターのプロパティは、クエリから返される項目の&1; つのプロパティを識別します</xref:System.Web.UI.WebControls.Parameter.Name%2A>。"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `orderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n    ConnectionString=\"name=AdventureWorksEntities\"  \n    DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n    EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n    Where=\"it.OnlineOrderFlag = true\" AutoGenerateOrderByClause=\"True\">  \n    <OrderByParameters>  \n        <asp:ControlParameter Name=\"OrderByParameter\"   \n            ControlID=\"orderByDropDownList\" Type=\"String\" />  \n    </OrderByParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "ORDER BY 句の作成に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  id: QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "後に発生、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>の構成中に指定された Entity SQL クエリを作成、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロール。"
  remarks: "詳細については、次を参照してください。 [EntityDataSource する LINQ クエリを適用する](http://msdn.microsoft.com/en-us/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)です。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs> QueryCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "指定したプロパティの状態を保存、 <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref>コントロールを永続化する必要があります。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>状態情報を格納します</xref:System.Object>。"
  overload: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの結果に含めるプロパティを定義する投影法を設定します。"
  remarks: "Select プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールには、Entity SQL クエリのステートメントを表す文字列が含まれています</xref:System.Web.UI.WebControls.EntityDataSource>。 これにより、指定されたクエリによって返されるオブジェクトのプロパティのセットを射影することができます。       この文字列が渡される、改変の有無に、<xref:System.Data.Objects.ObjectQuery%601>によって実行される、 [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</xref:System.Data.Objects.ObjectQuery%601> 。 このクエリによって規制データのソースである、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource>。 選択のプロパティを指定する文字列<xref:System.Data.Objects.ObjectQuery%601.Select%2A><xref:System.Data.Objects.ObjectQuery%601>。</xref:System.Data.Objects.ObjectQuery%601>メソッド</xref:System.Data.Objects.ObjectQuery%601.Select%2A>に渡される文字列と同じフォーマットを使用します。 クエリの射影を定義する句を使用する方法の例については、次を参照してください。[する方法: そのを返します。 匿名型のオブジェクト クエリを実行する](http://msdn.microsoft.com/en-us/3b264025-e911-4d73-90ce-992d2b9d189d)です。       射影されたデータに対する更新はサポートされていません。 つまり、投影法を指定する、Select プロパティを使用するときにバインドされたデータ バインド更新をサポートしません。       ページングが有効になっていると、射影を定義するときに、結果の並べ替えに使用するプロパティを定義します。 つまり、when 射影を定義する Select プロパティを設定するいて<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>&quot;éý&quot;`true`も設定する必要があります、<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>順序を定義または設定するプロパティ、<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>プロパティを`true`に ORDER BY パラメーターを追加し、<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コレクションです</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A></xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A></xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A></xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>。       選択を設定できません<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>、 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>、または<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>が有効になっています</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A></xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A></xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>。       プロパティの射影を返すクエリを選択 が設定されている場合 (たとえば、 `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`)、<xref:System.Data.Common.DbDataRecord>が返されます</xref:System.Data.Common.DbDataRecord>。"
  example:
  - "The following XML markup uses the Select property to specify a projection with six of the properties of the Product type:  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `products`:  \n  \n```  \nObjectQuery<Product> products = context.Product  \n    .Select(it.[ProductID], it.[Name], it.[ListPrice],   \n      it.[Size], it.[Style], it.[Weight])  \n    .OrderBy(\"it.[ProductID]\");  \n  \n```"
  syntax:
    content: public string Select { get; set; }
    return:
      type: System.String
      description: "ORDER BY 句の作成に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "選択のプロパティが、クエリ射影との値を指定するときに<> *>、 <> </> *>、または<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "クエリの実行後に発生します。"
  remarks: "クエリが実行され、データが返された後に、選択したイベントが発生します。 クエリの準備または実行中にエラーが発生した場合にも発生します。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>オブジェクトが含まれています、<xref:System.Collections.IEnumerable>クエリから返されるオブジェクトの</xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>。 取得し、 <xref:System.Web.UI.Control.ViewState%2A>。</xref:System.Web.UI.Control.ViewState%2A>返されたエンティティを格納するには、選択したイベントを処理します。 このページ上のオブジェクトの変更を保持するの操作を行います。       <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>オブジェクトは、ページングにデータ バインドされたコントロールによって渡された値に関係なく、すべてのページにオブジェクトの合計数を示します</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>。 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>のみ取得場合は、データ バインド コントロールで必要な場合などページングが有効になっています。</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>       クエリが準備または実行されるときに、エラーが発生すると、選択したイベントには、<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>オブジェクトが設定されているに返された<xref:System.Exception>、および<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>プロパティに設定されている`null`</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A></xref:System.Exception></xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>。 選択したイベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "クエリが作成され、実行前に発生します。"
  remarks: "クエリが作成され、実行前を選択するとイベントが発生します。 構成を変更するイベントを処理、<xref:System.Web.UI.WebControls.EntityDataSource>またはの読み取りや、クエリを構築および実行する前に、データ バインド コントロールから引数を変更します</xref:System.Web.UI.WebControls.EntityDataSource>。       設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>オブジェクトを`true`クエリを取り消します</xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。 SELECT 操作が取り消されたときに、データ バインド コントロールにデータは返されません。       場合`AllowPaging`に設定`true`データ バインド コントロールで、<xref:System.Web.UI.WebControls.EntityDataSource>呼び出します、<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>と<xref:System.Data.Objects.ObjectQuery%601.Top%2A>でクエリ ビルダー メソッド<xref:System.Data.Objects.ObjectQuery%601>の値を使用して、<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>と<xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>のプロパティ、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクト</xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A></xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A></xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Top%2A></xref:System.Data.Objects.ObjectQuery%601.Skip%2A></xref:System.Web.UI.WebControls.EntityDataSource>。       場合`AllowSorting`に設定されている`true`データ バインド コントロールで、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>の<xref:System.Web.UI.DataSourceSelectArguments>を選択するとイベントが処理されるときに、オブジェクトを変更することができます</xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>。 場所などの他のクエリ演算子または ORDER BY、ページのマークアップで指定されている後に適用するイベントが発生します。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "射影を作成するために使用されるパラメーターのコレクションを取得します。"
  remarks: "同様に、<xref:System.Data.Objects.ObjectQuery%601.Select%2A>のメソッド、<xref:System.Data.Objects.ObjectQuery%601>クラス、パラメーターは、によって定義されるプロジェクションに渡すことができます、<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A></xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Select%2A>。 Selectparameters のどのプロパティの<xref:System.Web.UI.WebControls.EntityDataSource>コントロールを指定します、<xref:System.Web.UI.WebControls.ParameterCollection>クエリの SELECT ステートメントに指定するパラメーターを格納している</xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.EntityDataSource>。 Selectparameters のどのプロパティでは、名前付き引数を使用して、用意されている文字列で指定されているパラメーターを参照してください、<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>。       SelectParametersproperty が設定されていない場合、パラメーターの置換は行われません。 先頭に、SELECT ステートメント内のすべてのパラメーター名、&quot;`@&quot;`シンボル`,` <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>で一致する名前を指定する必要があります <xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>パラメーターに null 値は許可されていません"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "射影の作成に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソースからデータをデータが変更されていないことを別のプロセスが更新または削除する前に確認するビュー ステートに保存するかどうかを示す値を設定します。"
  remarks: "変更を追跡するときに更新および削除操作が有効に、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールが<xref:System.Web.UI.PageStatePersister.ControlState%2A></xref:System.Web.UI.PageStatePersister.ControlState%2A>読み込まれたオブジェクトの元の値に関する情報を格納する必要があります</xref:System.Web.UI.WebControls.EntityDataSource>。 ビュー ステートにこの必要な情報を格納すると、ページ サイズが増加します。 ビュー ステートに元の値を格納する StoreOriginalValuesInViewState プロパティを設定を無効にする`false`です。 これを行う場合、[!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]更新されたオブジェクトの同時実行を追跡することはできません。 詳細については、次を参照してください。[更新データ (EntityDataSource)](http://msdn.microsoft.com/en-us/ca153eec-6817-4c1d-b262-efd6d35b0246)です。"
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>値がビューに格納する場合は、次の状態です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  id: System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  isEii: true
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "パラメーター オブジェクトが変更されており、データ バインド コントロールを更新する必要があるデータ バインド コントロールに通知します。"
  syntax:
    content: void IQueryableDataSource.RaiseViewChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "サーバー コントロールにビュー ステートの変更の追跡すると、サーバー コントロールの保存できるため<xref href=&quot;System.Web.UI.StateBag&quot;></xref>オブジェクト。 このオブジェクトは、経由でアクセスできる、 &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;プロパティです。"
  remarks: "詳細については、 <xref:System.Web.UI.Control.TrackViewState%2A>。</xref:System.Web.UI.Control.TrackViewState%2A>を参照してください。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "オブジェクトへの変更が永続化されていないデータ ソースにした後に発生します。"
  remarks: "変更されたオブジェクトへの変更がデータ ソースに保存されるときに、または変更を適用するときにエラーが発生した場合、更新イベントが発生します。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトが変更されたオブジェクトにアクセスするために使用します</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>。       このオブジェクトのプロパティでは、サーバーで生成された値も含めて、データ ソースから返される値を格納します。       エラーが発生したは、変更がデータ ソースに保存されるときに、更新イベントが発生し、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A><xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトが返される<xref:System.Exception></xref:System.Exception>設定</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>のプロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>。 最新のイベント ハンドラーで例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "更新操作中に使用されるパラメーターのコレクションを取得します。"
  remarks: "ASP.NET 4 以降を対象とする web アプリケーションのプロパティの値はビュー ステートに格納され、ポストバック間で自動的に維持します。 ASP.NET 4.5 を対象とする web アプリケーションのプロパティ値がビュー状態で格納されないと、HTTP 要求ごとに値を設定する必要があります。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "更新操作中に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "オブジェクトへの変更がデータ ソースに保存される前に発生します。"
  remarks: "オブジェクトのプロパティへの変更がデータ ソースに保存される前に、更新イベントが発生します。 更新するイベントを使用すると、変更またはオブジェクトへの変更を検証する、別のオブジェクトを指定または変更が保存される前に、操作をキャンセルできます。 変更されたオブジェクトにアクセスすることができます、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクト</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。 正しいエンティティの種類を設定するため、ユーザーは、別のオブジェクトを指定する場合など、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>。       イベントを処理します更新する必要がありますを変更する場合、<xref:System.Data.Objects.ObjectStateEntry>の同時実行制御の別の元の値を設定するオブジェクト</xref:System.Data.Objects.ObjectStateEntry>。 詳細については、次を参照してください。[変更を保存および管理する同時実行](http://msdn.microsoft.com/en-us/b8378601-4f26-4a05-a24a-f50aeb68610e)です。       変更を停止する、永続化してから、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       オブジェクトをインスタンス化するときにエラーが発生したかのプロパティを変更するには、更新イベントが発生し、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A><xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトが返される<xref:System.Exception></xref:System.Exception>設定</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>のプロパティ</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>。       設定の更新イベント ハンドラーで例外を処理する場合、<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティを`true`</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。 これは、再発生から例外を防ぎます。 値を指定すると`false`の<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>、プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>再度、例外を発生させます</xref:System.Web.UI.WebControls.EntityDataSource></xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>。"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  id: Where
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "取得またはクエリの結果をフィルター処理する方法を指定する Entity SQL 式を設定します。"
  remarks: "場所のプロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールは、Entity SQL クエリの述語である句を表す文字列です</xref:System.Web.UI.WebControls.EntityDataSource>。 この文字列が渡される、改変の有無に、<xref:System.Data.Objects.ObjectQuery%601>によって実行される、 [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)]</xref:System.Data.Objects.ObjectQuery%601> 。 このクエリによって規制データのソースである、<xref:System.Web.UI.WebControls.EntityDataSource>コントロール</xref:System.Web.UI.WebControls.EntityDataSource>。 指定された文字列 where プロパティは<xref:System.Data.Objects.ObjectQuery%601.Where%2A><xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601>メソッド</xref:System.Data.Objects.ObjectQuery%601.Where%2A>に渡される文字列と同じフォーマットを使用。 句を使用してクエリをフィルター処理する方法の例については、次を参照してください。[する方法: データのフィルター選択](http://msdn.microsoft.com/en-us/776f8556-3350-4572-804a-b1513515c1b2)です。       クエリ結果をフィルター処理、エンティティ型プロパティを式が等しいか調査して、情報を参照してください、<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>プロパティ。</xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 。"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the Where property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n```"
  syntax:
    content: public string Where { get; set; }
    return:
      type: System.String
      description: "WHERE 句です。"
  overload: System.Web.UI.WebControls.EntityDataSource.Where*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "WHERE 句の作成に使用されるパラメーターのコレクションを取得します。"
  remarks: "同様に、<xref:System.Data.Objects.ObjectQuery%601.Where%2A>のメソッド、<xref:System.Data.Objects.ObjectQuery%601>クラス、パラメーターを渡す場合、述語に割り当てられている、<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A></xref:System.Data.Objects.ObjectQuery%601></xref:System.Data.Objects.ObjectQuery%601.Where%2A>。 WhereParameters プロパティ、<xref:System.Web.UI.WebControls.EntityDataSource>コントロールを指定します、 <xref:System.Web.UI.WebControls.ParameterCollection>、クエリの WHERE 句に指定するパラメーターを格納している</xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.EntityDataSource>。 WhereParameters プロパティでは、名前付き引数を使用して、用意されている文字列で指定されているパラメーターを参照してください、<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティ</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>。       WhereParametersproperty が設定されていない場合、パラメーターの置換は行われません。 記号の前に、WHERE 句内のすべてのパラメーター名&quot;`@&quot;` <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>で一致する名前を指定する必要があります <xref:System.Web.UI.WebControls.ParameterCollection>。</xref:System.Web.UI.WebControls.ParameterCollection>パラメーターに null 値は許可されていません"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n  ConnectionString=\"name=AdventureWorksEntities\"   \n  DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n  EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n  EntityTypeFilter=\"\" OrderBy=\"it.TotalDue DESC\" Select=\"\"   \n   Where=\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\">  \n  <WhereParameters>  \n    <asp:ControlParameter ControlID=\"costLimit\" DbType=\"Int32\"   \n      DefaultValue=\"2500\" Name=\"ordercost\" PropertyName=\"Text\" />  \n  </WhereParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "WHERE 句の作成に使用されるパラメーター。"
  overload: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
- uid: System.Data.EntityClient.EntityConnection
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatedEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs
    name: EntityDataSourceContextCreatedEventArgs
    nameWithType: EntityDataSourceContextCreatedEventArgs
    fullName: EntityDataSourceContextCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs
    name: EntityDataSourceContextCreatingEventArgs
    nameWithType: EntityDataSourceContextCreatingEventArgs
    fullName: EntityDataSourceContextCreatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextDisposingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextDisposingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs
    name: EntityDataSourceContextDisposingEventArgs
    nameWithType: EntityDataSourceContextDisposingEventArgs
    fullName: EntityDataSourceContextDisposingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
- uid: System.Web.UI.WebControls.EntityDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: EntityDataSourceView
  nameWithType: EntityDataSourceView
  fullName: System.Web.UI.WebControls.EntityDataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangedEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangedEventArgs
    name: EntityDataSourceChangedEventArgs
    nameWithType: EntityDataSourceChangedEventArgs
    fullName: EntityDataSourceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangingEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangingEventArgs
    name: EntityDataSourceChangingEventArgs
    nameWithType: EntityDataSourceChangingEventArgs
    fullName: EntityDataSourceChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
- uid: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<QueryCreatedEventArgs>
  nameWithType: EventHandler<QueryCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.QueryCreatedEventArgs
    name: QueryCreatedEventArgs
    nameWithType: QueryCreatedEventArgs
    fullName: QueryCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectedEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs
    name: EntityDataSourceSelectedEventArgs
    nameWithType: EntityDataSourceSelectedEventArgs
    fullName: EntityDataSourceSelectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectingEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs
    name: EntityDataSourceSelectingEventArgs
    nameWithType: EntityDataSourceSelectingEventArgs
    fullName: EntityDataSourceSelectingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource
  nameWithType: EntityDataSource.EntityDataSource
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView
  nameWithType: EntityDataSource.CreateView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView
  nameWithType: EntityDataSource.GetView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: EntityDataSource.GetViewNames
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState
  nameWithType: EntityDataSource.LoadControlState
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit
  nameWithType: EntityDataSource.OnInit
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload
  nameWithType: EntityDataSource.OnUnload
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState
  nameWithType: EntityDataSource.SaveControlState
- uid: System.Web.UI.WebControls.EntityDataSource.Select*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: EntityDataSource.TrackViewState
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Where*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
