### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionPrefixAttribute
  id: ExpressionPrefixAttribute
  children:
  - System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  - System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  langs:
  - csharp
  name: ExpressionPrefixAttribute
  nameWithType: ExpressionPrefixAttribute
  fullName: System.Web.Compilation.ExpressionPrefixAttribute
  type: Class
  summary: "式ビルダーで使用するプレフィックス属性を指定します。 このクラスは継承できません。"
  remarks: "ExpressionPrefixAttribute クラスは、構成ファイルで定義されていない式を持つデザイン時に使用されます。 使用して、 <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>ExpressionPrefixAttribute オブジェクトに関連付けられているプレフィックスの名前を取得するプロパティ</xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>。 式ビルダーは、次の形式でステートメントを検索:`<%$ [expressionPrefix]:[expressionValue] %>`式ビルダーは、式のプレフィックスに基づくが、プロパティの割り当てのコードを生成し、します。 `expressionPrefix`パラメーターはまたは ExpressionPrefixAttribute オブジェクトを通じて、構成ファイルで定義されている構成されている式ビルダーを表します。"
  example:
  - "The following code examples demonstrate how to use the ExpressionPrefixAttribute class. The attribute is applied to a custom expression builder that implements the <xref:System.Web.Compilation.ExpressionBuilder> abstract class. This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)]

      public sealed class ExpressionPrefixAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  langs:
  - csharp
  name: ExpressionPrefixAttribute(String)
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ExpressionPrefixAttribute&quot;> </xref>クラスです。"
  remarks: "インスタンスを初期化するために、ExpressionPrefixAttribute コンス トラクターを使用して、<xref:System.Web.Compilation.ExpressionPrefixAttribute>クラスのプレフィックスの識別子を使用します</xref:System.Web.Compilation.ExpressionPrefixAttribute>。 ExpressionPrefixAttribute は<xref:System.Web.Compilation.ExpressionPrefixAttribute>クラス</xref:System.Web.Compilation.ExpressionPrefixAttribute>の既定のコンス トラクターです。"
  syntax:
    content: public ExpressionPrefixAttribute (string expressionPrefix);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "現在のプレフィックス<xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;></xref>です。"
  overload: System.Web.Compilation.ExpressionPrefixAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expressionPrefix</code>null または空の文字列 (&quot;&quot;) です。"
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "現在のプレフィックス値を取得<xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;></xref>オブジェクト。"
  remarks: "されてプロパティを使用すると、特定の属性に関連付けられているプレフィックスの名前を取得できます。"
  syntax:
    content: public string ExpressionPrefix { get; }
    return:
      type: System.String
      description: "構成済みの式のプレフィックス<xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;></xref>です。"
  overload: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefixAttribute(String)
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor*
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefixAttribute
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix*
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
