### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.Providers.ClientRoleProvider
  id: ClientRoleProvider
  children:
  - System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  - System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  - System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  - System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  langs:
  - csharp
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider
  type: Class
  summary: "Windows ベースのアプリケーションからのロール情報を取得、[!INCLUDE[ajax_current_short](~/add/includes/ajax-current-short-md.md)]ロール サービス。"
  remarks: "クライアント アプリケーション サービスを使用すると、ClientRoleProvider クラスを使用するのにアプリケーションを構成することによって、既存のロール サービスからロール情報を取得します。 構成すると、認証されたユーザーが呼び出すことによって、特定のロールがかどうかを決定できます、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName></xref:System.Security.Principal.IPrincipal></xref:System.Security.Principal.IPrincipal.IsInRole%2A>。 クライアント アプリケーション サービスを使用するように構成するアプリケーションでは、このプロパティは<xref:System.Web.ClientServices.ClientRolePrincipal>。</xref:System.Web.ClientServices.ClientRolePrincipal>を返します。 このクラスが実装されているため、<xref:System.Security.Principal.IPrincipal>インターフェイス、する必要はありません、明示的に参照します</xref:System.Security.Principal.IPrincipal>。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>メソッドは内部的には、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName>メソッド</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName></xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>。       ClientRoleProvider クラスによって示される役割サービスから認証済みユーザーのロール情報を取得する読み取り専用のロールのメンバーシップ プロバイダーは、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>プロパティ</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>。 値、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>プロパティは通常、アプリケーション構成ファイルからその他の構成値と共に取得します</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>。 詳細については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。       使用して現在 ClientRoleProvider インスタンスを取得することができます、 `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>プロパティ</xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>。       ClientRoleProvider クラスのみをサポート、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>および<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A><xref:System.Web.Security.RoleProvider>抽象クラス</xref:System.Web.Security.RoleProvider>のメソッド</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A></xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 呼び出すとこれらのメソッドのいずれかの特定のユーザーに対して、サービス プロバイダーはまずローカル データ キャッシュのロール情報を確認します。 場合は、キャッシュにロール情報が含まれていないか、キャッシュの有効期限が切れた、サービス プロバイダーはロール サービスからロール情報を取得し、キャッシュに追加します。       クライアント アプリケーション サービスを構成するときに、ロールのキャッシュのタイムアウト期間を指定できます。 強制的に、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>を呼び出し、ローカル キャッシュではなく、サービスからロールのデータを取得する方法、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>メソッド最初</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A></xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>。       作成または削除、役割またはユーザーのロールのメンバーシップを変更するのには、ClientRoleProvider クラスを使用することはできません。 ロール情報を作成または変更、サーバーの役割サービスの構成を変更する必要があります。"
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: 'public class ClientRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref>クラスです。"
  syntax:
    content: public ClientRoleProvider ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "使用されません。"
    - id: roleNames
      type: System.String[]
      description: "使用されません。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このプロパティは、このクラスでは使用されません。"
  remarks: "このプロパティを設定しても効果はありません。"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "プロバイダーのアプリケーションの名前。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "使用されません。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "使用されません。"
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "使用されません。"
    return:
      type: System.Boolean
      description: "該当なし。 このメソッドは、常に例外をスローします。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "使用されません。"
    - id: usernameToMatch
      type: System.String
      description: "使用されません。"
    return:
      type: System.String[]
      description: "該当なし。 このメソッドは、常に例外をスローします。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "該当なし。 このメソッドは、常に例外をスローします。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "指定したユーザーが所属するロールの名前を取得します。"
  remarks: "GetRolesForUser メソッドで指定する必要があります現在、認証されたユーザーのロール情報の取得、`username`パラメーター。 ユーザーの名前を取得するには、、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>次のようにプロパティ: `Thread.CurrentPrincipal.Identity.Name`</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> 。       サービス プロバイダーは、不要なサービスの呼び出しを避けるためにローカル ファイル システムの役割情報をキャッシュします。 詳細については、次を参照してください、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスの概要。</xref:System.Web.ClientServices.Providers.ClientRoleProvider> 。"
  example:
  - "The following example code demonstrates how to use this method to determine whether the user login has expired before testing role membership. This code assumes that all valid users are associated with one or more roles. In this case, the GetRolesForUser method will not return any roles for a previously-authenticated user whose login has expired. If the user login has expired, this code displays the login dialog box. Otherwise, it calls the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> method to determine whether the user is in the \"manager\" role. The restricted code is in a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "ロールを取得するユーザーの名前。"
    return:
      type: System.String[]
      description: "ロールの名前を<code> username </code>に属しているか、ユーザーが認証されていない場合は空の配列。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>username</code>は現在の認証されたユーザーのユーザー名ではありません。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "使用されません。"
    return:
      type: System.String[]
      description: "該当なし。 このメソッドは、常に例外をスローします。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "プロバイダーを初期化します。"
  remarks: "[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]機能拡張モデルが初期化するために初期化メソッドを呼び出して、 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>、アプリケーション構成ファイルに情報を使用します</xref:System.Web.ClientServices.Providers.ClientRoleProvider>。 このメソッドは、次の役割サービスの構成属性を認識します。- `name`       -    `description`       -    `cacheTimeout`       -    `connectionStringName`       -    `serviceUri`       -    `honorCookieExpiry`これらの属性の詳細については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "プロバイダーのフレンドリ名。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "このプロバイダーの構成で指定されたプロバイダーに固有の属性を表す名前/値ペアのコレクション。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>config</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>空です。       - または -<code>config</code>認識されない値が含まれています。 詳細については、「解説」セクションを参照してください。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "これは、 <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref>は既に初期化されています。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>config</code>含まれています、`cacheTimeout`に変換するための正しい形式ではない値が、<xref:System.Int32>値。"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "<code>config</code>含まれています、`cacheTimeout`数値を表す値より小さい<xref:System.Int32.MinValue>以上<xref:System.Int32.MaxValue>です。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "指定したユーザーが指定したロールがあるかどうかを示す値を取得します。"
  remarks: "認証されたユーザーが呼び出すことによって、特定のロールがかどうかを判断できます、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName></xref:System.Security.Principal.IPrincipal></xref:System.Security.Principal.IPrincipal.IsInRole%2A>。 クライアント アプリケーション サービスを使用するように構成するアプリケーションでは、このプロパティは<xref:System.Web.ClientServices.ClientRolePrincipal>。</xref:System.Web.ClientServices.ClientRolePrincipal>を返します。 このクラスが実装されているため、<xref:System.Security.Principal.IPrincipal>インターフェイス、する必要はありません、明示的に参照します</xref:System.Security.Principal.IPrincipal>。 <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>メソッドは内部的に IsUserInRole メソッドを呼び出します</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>。 IsUserInRole メソッドを使用して、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッドによって、ユーザーが示されるかどうかを決定する`username`がによって示されるロール`roleName`</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>。       サービス プロバイダーは、不要なサービスの呼び出しを避けるためにローカル ファイル システムの役割情報をキャッシュします。 詳細については、次を参照してください、<xref:System.Web.ClientServices.Providers.ClientRoleProvider>クラスの概要。</xref:System.Web.ClientServices.Providers.ClientRoleProvider> 。"
  example:
  - "The following example code demonstrates how to access this method directly to determine whether the user is in a particular role. This code first tests whether the user login has expired. An explicit <xref:System.Web.ClientServices.Providers.ClientRoleProvider> reference is required to call the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> method, so the same reference is used to call the IsUserInRole method. If the user is in the \"manager\" role, this code calls a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "ユーザーの名前です。"
    - id: roleName
      type: System.String
      description: "ロールの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したユーザーが指定されたロールの場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>か、指定したユーザーが認証されていないが、指定されたロールはありません。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>username</code>は現在の認証されたユーザーのユーザー名ではありません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "ユーザーは認証されなくなります。       または、役割サービスは利用できません。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "使用されません。"
    - id: roleNames
      type: System.String[]
      description: "使用されません。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  id: ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "キャッシュされたロール情報をクリアし、キャッシュのタイムアウト期間をリセットします。"
  remarks: "ResetCache メソッドでは、ローカル キャッシュからすべてのロール情報を削除し、により、キャッシュは期限切れにします。 このメソッドを呼び出した後、次へ呼び出し、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>または<xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>メソッドは、ローカル キャッシュではなく、構成済みのロール サービスからロール情報を取得します</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A></xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>。       このメソッドを使用すると、ユーザーが各自のロールが変更されていて、キャッシュがまだ失効していないときに、ロール キャッシュを更新できるようにします。 ロール キャッシュ タイムアウト間隔を設定する方法については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example code demonstrates how to use this method to reset the local roles cache.  \n  \n [!code-vb[ClientApplicationServices#314](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#314)]\n [!code-cs[ClientApplicationServices#314](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#314)]"
  syntax:
    content: public void ResetCache ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "このメソッドは、このクラスでは使用されません。"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "使用されません。"
    return:
      type: System.Boolean
      description: "該当なし。 このメソッドは、常に例外をスローします。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  id: ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "取得または役割サービスの URI を設定します。"
  remarks: "ServiceUri プロパティを設定するには、アプリケーション コードでが、通常、アプリケーション構成ファイルで、値は設定されます。 これにより、コードを再コンパイルしなくても、サービスの場所を変更することができます。 詳細については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。       サービスの場所をプログラムで設定すると、&quot;Role_JSON_AppService.axd&quot;で終わるは常に、URI の完全なサービスを指定する必要があります。"
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: public string ServiceUri { get; set; }
    return:
      type: System.String
      description: "役割サービス URI。"
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "このプロパティを取得するときに、サービス URI が見つからず、アプリケーション構成ファイルで、このプロパティが以前に設定されていません。"
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider.ClientRoleProvider
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: ClientRoleProvider.AddUsersToRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: ClientRoleProvider.CreateRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: ClientRoleProvider.DeleteRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: ClientRoleProvider.FindUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: ClientRoleProvider.GetAllRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: ClientRoleProvider.GetRolesForUser
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: ClientRoleProvider.GetUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: ClientRoleProvider.Initialize
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: ClientRoleProvider.IsUserInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache
  nameWithType: ClientRoleProvider.ResetCache
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: ClientRoleProvider.RoleExists
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
