### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElementCollection
  id: AutomationElementCollection
  children:
  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  - System.Windows.Automation.AutomationElementCollection.Count
  - System.Windows.Automation.AutomationElementCollection.GetEnumerator
  - System.Windows.Automation.AutomationElementCollection.IsSynchronized
  - System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  - System.Windows.Automation.AutomationElementCollection.SyncRoot
  langs:
  - csharp
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクト。"
  remarks: "AutomationElementCollection は<xref:System.Windows.Automation.AutomationElement.FindAll%2A>。</xref:System.Windows.Automation.AutomationElement.FindAll%2A>などのメソッドの戻り値の型として使用します。 <xref:System.Collections.ArrayList>。</xref:System.Collections.ArrayList>などのよりジェネリックなクラスを使用する必要があります、アプリケーション定義のコレクションに使用するものではありません。"
  syntax:
    content: 'public class AutomationElementCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "対象配列内の指定したインデックス位置開始位置として、配列にコレクションの要素をコピーします。"
  remarks: ''
  example:
  - "The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of objects.  \n  \n [!code-vb[UIAClient_snip#118](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#118)]\n [!code-cs[UIAClient_snip#118](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#118)]"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "要素のコレクションからコピー先。"
    - id: index
      type: System.Int32
      description: "先の配列のコピーの開始位置の&0; から始まるインデックス。"
  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  id: CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: CopyTo(AutomationElement[],Int32)
  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "対象配列内の指定したインデックスから始まる、特殊な配列のインスタンスに、コレクションの要素をコピーします。"
  remarks: ''
  example:
  - "The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of <xref:System.Windows.Automation.AutomationElement> objects.  \n  \n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]"
  syntax:
    content: public void CopyTo (System.Windows.Automation.AutomationElement[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Automation.AutomationElement[]
      description: "要素のコレクションからコピー先。"
    - id: index
      type: System.Int32
      description: "先の配列のコピーの開始位置の&0; から始まるインデックス。"
  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "コピー先の配列のサイズが不十分、または<code> index </code>配列の境界外です。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.Count
  id: Count
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: AutomationElementCollection.Count
  fullName: System.Windows.Automation.AutomationElementCollection.Count
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このコレクション内の要素の数を取得します。"
  remarks: ''
  example:
  - "The following example shows the Count property being used.  \n  \n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "要素の数。"
  overload: System.Windows.Automation.AutomationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AutomationElementCollection.GetEnumerator()
  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "コレクション内の項目を反復処理に使用できる列挙子を返します。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "反復処理に使用できる列挙子、 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;> </xref>オブジェクトが同期されている (スレッド セーフ)。"
  remarks: "<xref:System.Windows.Automation.AutomationElementCollection>はスレッド セーフではありません</xref:System.Windows.Automation.AutomationElementCollection>。"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AutomationElementCollection.Item(Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>指定したインデックス位置。"
  remarks: ''
  example:
  - "In the following example, the first element is retrieved from an <xref:System.Windows.Automation.AutomationElementCollection>.  \n  \n [!code-vb[UIAClient_snip#182](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#182)]\n [!code-cs[UIAClient_snip#182](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#182)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "コレクション内の要素の&0; から始まるインデックス。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>指定したインデックス位置。"
  overload: System.Windows.Automation.AutomationElementCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "負の整数値が指定されました<code> index </code>、または<code> index </code> <xref:System.Windows.Automation.AutomationElementCollection.Count*>.</xref:System.Windows.Automation.AutomationElementCollection.Count*>以上"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;> </xref>コレクション。"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するために使用できるオブジェクト。"
  overload: System.Windows.Automation.AutomationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo(AutomationElement[],Int32)
  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)
- uid: System.Windows.Automation.AutomationElement[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationElement
    name: AutomationElement
    nameWithType: AutomationElement
    fullName: AutomationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElementCollection.Count
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Count
  nameWithType: AutomationElementCollection.Count
  fullName: System.Windows.Automation.AutomationElementCollection.Count
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: AutomationElementCollection.GetEnumerator()
  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AutomationElementCollection.Item(Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: AutomationElementCollection.CopyTo
- uid: System.Windows.Automation.AutomationElementCollection.Count*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Count
  nameWithType: AutomationElementCollection.Count
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: AutomationElementCollection.GetEnumerator
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
- uid: System.Windows.Automation.AutomationElementCollection.Item*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Item
  nameWithType: AutomationElementCollection.Item
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
