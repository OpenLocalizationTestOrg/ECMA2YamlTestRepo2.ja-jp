### YamlMime:ManagedReference
items:
- uid: System.Web.Management.EventLogWebEventProvider
  id: EventLogWebEventProvider
  children:
  - System.Web.Management.EventLogWebEventProvider.Flush
  - System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.EventLogWebEventProvider.Shutdown
  langs:
  - csharp
  name: EventLogWebEventProvider
  nameWithType: EventLogWebEventProvider
  fullName: System.Web.Management.EventLogWebEventProvider
  type: Class
  summary: "Windows アプリケーション イベント ログに ASP.NET の稼働状況の監視イベントをログに記録するイベント プロバイダーを実装します。"
  remarks: "配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。 <xref:System.Web.Management>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています</xref:System.Web.Management>。 正常性イベントの管理を支援するサポート型も含まれています。       EventLogWebEventProvider、失敗の監査、および稼働状況の監視のエラー イベントは、既定では、(有効) で構成されます。 これは、失敗の監査と稼働状況の監視イベントには既定では Windows アプリケーション イベント ログでは、記録されたエラーを意味します。      > [!NOTE] > ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。 独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。 カスタム プロバイダーの作成の例は、次を参照してください。[する方法: 例を実装、正常性監視カスタム プロバイダー](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following configuration file excerpt shows how to specify a provider of type EventLogWebEventProvider to handle success audit events. The EventLogWebEventProvider and the failure audit health-event types to monitor are configured by default. To monitor the success audits, you need to configure them, as shown in the example code.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"10\">  \n  \n  <rule>  \n    <add name=\"Success Audits Default\"  \n      eventName=\"Success Audits\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rule>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "プロバイダーのバッファーからイベントをイベント ログに移動します。"
  remarks: "このメソッドが呼び出されると、バッファー内の最後の書き込みまたはイベントの数からプロバイダーのバッファー内のイベントには、Windows アプリケーション イベント ログに、どのくらいの時間に関係なく、直ちに書き込まれますすべてが経過しました。 最後の書き込みの時間は、フラッシュ操作の時間にリセットされます。 バッファー機能が有効でない場合は、このメソッドを呼び出すことはありません効果のいずれか。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "このオブジェクトの初期値を設定します。"
  remarks: "初期化するためにこのメソッドは、<xref:System.Web.Management.EventLogWebEventProvider>構成設定と構成ファイルで指定された名前を使用します</xref:System.Web.Management.EventLogWebEventProvider>。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "このプロバイダーを識別する構成ファイルで使用する名前。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>このプロバイダーの構成ファイルに割り当てられている属性を指定します。"
  overload: System.Web.Management.EventLogWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "プロバイダーに渡されたイベントを処理します。"
  remarks: "これは、イベントの処理を開始するを呼び出す ASP.NET 正常性の監視方法です。"
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "<xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref>オブジェクトを処理します。"
  overload: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "プロバイダーのシャット ダウンに関連付けられているタスクを実行します。"
  remarks: "ASP.NET は、Web アプリケーションをホストしているアプリケーション ドメインが終了するときに、シャット ダウン メソッドを呼び出します。 メソッドは正常に終了するアプリケーションを許可するタスクを実行します。"
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
- uid: System.Web.Management.EventLogWebEventProvider.Flush*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: EventLogWebEventProvider.Flush
- uid: System.Web.Management.EventLogWebEventProvider.Initialize*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: EventLogWebEventProvider.Initialize
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: EventLogWebEventProvider.ProcessEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: EventLogWebEventProvider.Shutdown
