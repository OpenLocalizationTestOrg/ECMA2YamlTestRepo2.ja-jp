### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.InputScopeName
  id: InputScopeName
  children:
  - System.Windows.Input.InputScopeName.#ctor
  - System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)
  - System.Windows.Input.InputScopeName.AddChild(System.Object)
  - System.Windows.Input.InputScopeName.AddText(System.String)
  - System.Windows.Input.InputScopeName.NameValue
  langs:
  - csharp
  name: InputScopeName
  nameWithType: InputScopeName
  fullName: System.Windows.Input.InputScopeName
  type: Class
  summary: "テキスト入力パターンの名前を定義します。"
  remarks: "このクラスで定義されている名前は、<xref:System.Windows.Input.InputScopePhrase>クラス</xref:System.Windows.Input.InputScopePhrase>によって使用されます。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Input.InputScopeNameConverter, PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ContentProperty("NameValue")]

      public class InputScopeName : System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeName.#ctor
  id: '#ctor'
  parent: System.Windows.Input.InputScopeName
  langs:
  - csharp
  name: InputScopeName()
  nameWithType: InputScopeName.InputScopeName()
  fullName: System.Windows.Input.InputScopeName.InputScopeName()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.InputScopeName&quot;> </xref>クラスです。"
  syntax:
    content: public InputScopeName ();
    parameters: []
  overload: System.Windows.Input.InputScopeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)
  id: '#ctor(System.Windows.Input.InputScopeNameValue)'
  parent: System.Windows.Input.InputScopeName
  langs:
  - csharp
  name: InputScopeName(InputScopeNameValue)
  nameWithType: InputScopeName.InputScopeName(InputScopeNameValue)
  fullName: System.Windows.Input.InputScopeName.InputScopeName(InputScopeNameValue)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.InputScopeName&quot;> </xref>に指定された<xref:System.Windows.Input.InputScopeName.NameValue*></xref:System.Windows.Input.InputScopeName.NameValue*>クラス"
  syntax:
    content: public InputScopeName (System.Windows.Input.InputScopeNameValue nameValue);
    parameters:
    - id: nameValue
      type: System.Windows.Input.InputScopeNameValue
      description: "代替の入力メソッドからの入力の解釈方法を変更する入力スコープ名。"
  overload: System.Windows.Input.InputScopeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeName.AddChild(System.Object)
  id: AddChild(System.Object)
  parent: System.Windows.Input.InputScopeName
  langs:
  - csharp
  name: AddChild(Object)
  nameWithType: InputScopeName.AddChild(Object)
  fullName: System.Windows.Input.InputScopeName.AddChild(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "これを子オブジェクトを追加<xref href=&quot;System.Windows.Input.InputScopeName&quot;></xref>です。"
  syntax:
    content: public void AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "これの子として追加するオブジェクト<xref href=&quot;System.Windows.Input.InputScopeName&quot;></xref>です。"
  overload: System.Windows.Input.InputScopeName.AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeName.AddText(System.String)
  id: AddText(System.String)
  parent: System.Windows.Input.InputScopeName
  langs:
  - csharp
  name: AddText(String)
  nameWithType: InputScopeName.AddText(String)
  fullName: System.Windows.Input.InputScopeName.AddText(String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "これの子としてテキスト文字列を追加<xref href=&quot;System.Windows.Input.InputScopeName&quot;></xref>です。"
  syntax:
    content: public void AddText (string name);
    parameters:
    - id: name
      type: System.String
      description: "追加するテキスト、 <xref href=&quot;System.Windows.Input.InputScopeName&quot;></xref>です。"
  overload: System.Windows.Input.InputScopeName.AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeName.NameValue
  id: NameValue
  parent: System.Windows.Input.InputScopeName
  langs:
  - csharp
  name: NameValue
  nameWithType: InputScopeName.NameValue
  fullName: System.Windows.Input.InputScopeName.NameValue
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得または代替の入力メソッドからの入力を解釈する方法を変更する入力スコープ名の値を設定します。"
  remarks: "<a name=&quot;xamlAttributeUsage_InputScopeName&quot;></a>## XAML 属性の使用```   <object NameValue=&quot;inputScopeNameValue&quot;/>   ``` <a name=&quot;xamlValues_InputScopeName&quot;> </a> ## XAML 値*inputScopeNameValue*の文字列表現を<xref:System.Windows.Input.InputScopeNameValue>値</xref:System.Windows.Input.InputScopeNameValue>。      "
  syntax:
    content: public System.Windows.Input.InputScopeNameValue NameValue { get; set; }
    return:
      type: System.Windows.Input.InputScopeNameValue
      description: "代替の入力メソッドからの入力を解釈する方法を変更する入力スコープ名の値。"
  overload: System.Windows.Input.InputScopeName.NameValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.InputScopeName.#ctor
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: InputScopeName()
  nameWithType: InputScopeName.InputScopeName()
  fullName: System.Windows.Input.InputScopeName.InputScopeName()
- uid: System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: InputScopeName(InputScopeNameValue)
  nameWithType: InputScopeName.InputScopeName(InputScopeNameValue)
  fullName: System.Windows.Input.InputScopeName.InputScopeName(InputScopeNameValue)
- uid: System.Windows.Input.InputScopeNameValue
  parent: System.Windows.Input
  isExternal: false
  name: InputScopeNameValue
  nameWithType: InputScopeNameValue
  fullName: System.Windows.Input.InputScopeNameValue
- uid: System.Windows.Input.InputScopeName.AddChild(System.Object)
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: AddChild(Object)
  nameWithType: InputScopeName.AddChild(Object)
  fullName: System.Windows.Input.InputScopeName.AddChild(Object)
- uid: System.Windows.Input.InputScopeName.AddText(System.String)
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: AddText(String)
  nameWithType: InputScopeName.AddText(String)
  fullName: System.Windows.Input.InputScopeName.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Input.InputScopeName.NameValue
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: NameValue
  nameWithType: InputScopeName.NameValue
  fullName: System.Windows.Input.InputScopeName.NameValue
- uid: System.Windows.Input.InputScopeName.#ctor*
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: InputScopeName
  nameWithType: InputScopeName.InputScopeName
- uid: System.Windows.Input.InputScopeName.AddChild*
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: AddChild
  nameWithType: InputScopeName.AddChild
- uid: System.Windows.Input.InputScopeName.AddText*
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: AddText
  nameWithType: InputScopeName.AddText
- uid: System.Windows.Input.InputScopeName.NameValue*
  parent: System.Windows.Input.InputScopeName
  isExternal: false
  name: NameValue
  nameWithType: InputScopeName.NameValue
