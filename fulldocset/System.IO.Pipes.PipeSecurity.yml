### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "表すアクセス制御と監査セキュリティをパイプします。"
  remarks: "PipeSecurity クラスでは、パイプとは、アクセス試行の監査のアクセス権を指定します。  このクラスは、一連のルールとして、アクセスおよび監査権限を表します。 各アクセス規則は、<xref:System.IO.Pipes.PipeAccessRule>オブジェクト、各監査規則がによって表されるときに、<xref:System.IO.Pipes.PipeAuditRule>オブジェクト</xref:System.IO.Pipes.PipeAuditRule></xref:System.IO.Pipes.PipeAccessRule>。       PipeSecurity クラスは、基になる Microsoft Windows ファイルのセキュリティ システムの抽象化です。 このシステムの各パイプがパイプへのアクセスを制御するには、随意アクセス制御リスト (DACL)、およびシステム アクセス制御リスト (SACL) は監査するアクセス制御の試行を指定します。  <xref:System.IO.Pipes.PipeAccessRule>と<xref:System.IO.Pipes.PipeAuditRule>クラスは、Dacl と Sacl を構成するアクセス制御エントリ (Ace) の抽象化します</xref:System.IO.Pipes.PipeAuditRule></xref:System.IO.Pipes.PipeAccessRule>。       PipeSecurity クラスを非表示に多くの Dacl と Sacl; の詳細ACE の順序または null DACL について心配する必要はありません。       PipeSecurity クラスを使用すると、取得、追加、または、DACL とパイプの SACL を表すアクセス規則を変更します。       新しいまたは変更されたアクセスを永続化または監査規則、パイプを使用して、<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>メソッド</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>。 アクセスを取得または監査規則、既存のファイルを使用して、<xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>メソッド</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>。"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、空を作成<xref:System.IO.Pipes.PipeSecurity>オブジェクトが、既存のパイプに基づいていないです</xref:System.IO.Pipes.PipeSecurity>。 アクセス制御情報を持つオブジェクトを設定し、パイプに適用することができます。       アクセスを追加したり、監査規則を<xref:System.IO.Pipes.PipeSecurity>オブジェクトを使用して、<xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>メソッド</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A></xref:System.IO.Pipes.PipeSecurity>。 アクセス権を削除したり、監査規則を使用して、<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>メソッド</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>。       新しいまたは変更されたアクセスを永続化または監査規則、パイプを使用して、<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>メソッド</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>。 アクセスを取得または監査規則、既存のファイルを使用して、<xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>メソッド</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>。"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得、<xref:System.Type>に現在関連付けられているセキュリティ保護可能なオブジェクトの<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト</xref:System.Type>。"
  remarks: "派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>プロパティと戻り値のアクセス権を表すために使用する型</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A></xref:System.Security.AccessControl.ObjectSecurity>。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "現在関連付けられているセキュリティ保護可能なオブジェクトの種類<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>値を指定しています。"
  remarks: "アクセス制御規則を作成することをお勧めは<xref:System.IO.Pipes.PipeAccessRule>クラス</xref:System.IO.Pipes.PipeAccessRule>のコンス トラクターを使用するには"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "アクセス ルールが適用される id。 オブジェクトとしてキャスト可能なをする必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    - id: accessMask
      type: System.Int32
      description: "この規則のアクセス マスク。 アクセス マスクの意味は、各インテグレーターによって定義された匿名ビットの 32 ビットのコレクションは、します。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このルールは、親コンテナーから継承する場合それ以外の場合は false。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>アクセス規則の継承プロパティを指定する値。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref>継承されたアクセス規則を自動的に反映させるかどうかを指定する値。 場合、伝達フラグは無視されます`inheritanceFlags`に設定されている<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>です。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "有効なアクセス制御の種類を指定します。"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>このメソッドを作成するオブジェクト。"
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>、 <code>inheritanceFlags</code>、 <code>propagationFlags</code>、または<code>type</code>に無効な値を指定します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>accessMask</code>ゼロです。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>型のどちらも<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>も、型のように<xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>、型に変換できる<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得、 <xref:System.Type>、現在のアクセス ルールに関連付けられているオブジェクトの<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト</xref:System.Type>。"
  remarks: "派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>プロパティと戻り値のアクセス権を表すために使用する型</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A></xref:System.Security.AccessControl.ObjectSecurity>。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "現在のアクセス規則に関連付けられているオブジェクトの種類<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "アクセス規則を追加するを随意アクセス制御リスト (DACL) に現在関連付けられている<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: 'AddAccessRule メソッドは、新しいルールを<xref:System.IO.Pipes.PipeSecurity>オブジェクトに含まれているルールの一覧に追加します。AddAccessRule メソッドは&1; つの例外、規則を追加しても、指定された規則のアクセス制御リスト (ACL) が既に存在する場合:<xref:System.IO.Pipes.PipeAccessRule>を使用して作成されたオブジェクトに、<xref:System.Security.AccessControl.AccessControlType>値を使用して作成されるオブジェクトに置き換えられる、<xref:System.Security.AccessControl.AccessControlType>値</xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.AccessControlType></xref:System.IO.Pipes.PipeAccessRule></xref:System.IO.Pipes.PipeSecurity>。'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "追加するアクセス規則。"
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "監査規則を追加するをシステム アクセス制御リスト (SACL) に現在関連付けられている<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "メソッドの一覧に新しい監査規則を追加する AddAuditRule ルールを<xref:System.IO.Pipes.PipeSecurity>オブジェクトが含まれます</xref:System.IO.Pipes.PipeSecurity>。       指定したルールの監査規則が既に存在する場合、AddAuditRule メソッドはまだルールを追加します。"
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "追加する監査規則。"
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>値を指定しています。"
  remarks: "監査規則を作成することをお勧めは<xref:System.IO.Pipes.PipeAuditRule>クラス</xref:System.IO.Pipes.PipeAuditRule>のコンス トラクターを使用するには"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "アクセス ルールが適用される id。 オブジェクトとしてキャスト可能なをする必要があります、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    - id: accessMask
      type: System.Int32
      description: "この規則のアクセス マスク。 アクセス マスクの意味は、各インテグレーターによって定義された匿名ビットの 32 ビットのコレクションは、します。"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このルールは、親コンテナーから継承する場合それ以外の場合は false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>アクセス規則の継承プロパティを指定する値。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref>継承されたアクセス規則を自動的に反映させるかどうかを指定する値。 場合、伝達フラグは無視されます`inheritanceFlags`に設定されている<xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;></xref>です。"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref>コントロール型の有効なアクセス権を指定する値。"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>このメソッドを作成するオブジェクト。"
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -、 <code> accessMask </code>プロパティが&0; です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code>プロパティは、型のどちらも<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>も、型のように<xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>、型に変換できる<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得、<xref:System.Type>オブジェクトの現在の監査規則に関連付けられている<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト</xref:System.Type>。"
  remarks: "派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>プロパティと戻り値のアクセス権を表すために使用する型</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A></xref:System.Security.AccessControl.ObjectSecurity>。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "現在の監査規則に関連付けられているオブジェクトの種類<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在関連付けられているセキュリティ記述子の指定したセクションでは、保存<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>永続ストレージにオブジェクト。"
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "セキュリティ保護可能なハンドル オブジェクトを現在<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクトに関連付けられています。"
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在関連付けられているセキュリティ記述子の指定したセクションでは、保存<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>永続ストレージにオブジェクト。"
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "オブジェクトのセキュリティ保護可能な名前を現在<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクトに関連付けられています。"
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "随意アクセス制御リスト (DACL) に現在関連付けられているアクセス規則を削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "RemoveAccessRule メソッドでは、すべて一致するかを削除<xref:System.Security.AccessControl.AccessControlType>アクセス ルールまたは照合<xref:System.Security.AccessControl.AccessControlType>現在からアクセス規則<xref:System.IO.Pipes.PipeSecurity>オブジェクト</xref:System.IO.Pipes.PipeSecurity></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.AccessControlType>。 たとえば、すべてを削除するこのメソッドを使用できます<xref:System.Security.AccessControl.AccessControlType>に対してアクセス規則、ユーザーを渡すことによって、<xref:System.IO.Pipes.PipeAccessRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType>値、<xref:System.IO.Pipes.PipeAccessRights>値、およびユーザー アカウント</xref:System.IO.Pipes.PipeAccessRights></xref:System.Security.AccessControl.AccessControlType></xref:System.IO.Pipes.PipeAccessRule></xref:System.Security.AccessControl.AccessControlType>。 RemoveAccessRule メソッドを指定する、拒否のルールの削除、<xref:System.IO.Pipes.PipeAccessRights>値または<xref:System.IO.Pipes.PipeAccessRights>値</xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeAccessRights>。"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "削除するアクセス規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>操作が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "随意アクセス制御リスト (DACL) に現在関連付けられている指定されたアクセス規則を削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>メソッドはすべて一致するか、削除<xref:System.Security.AccessControl.AccessControlType>アクセス ルールまたは照合<xref:System.Security.AccessControl.AccessControlType>現在からアクセス規則<xref:System.IO.Pipes.PipeSecurity>オブジェクト</xref:System.IO.Pipes.PipeSecurity></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.AccessControlType></xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>。 たとえば、すべてを削除するこのメソッドを使用できます<xref:System.Security.AccessControl.AccessControlType>に対してアクセス規則、ユーザーを渡すことによって、<xref:System.IO.Pipes.PipeAccessRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType>値、<xref:System.IO.Pipes.PipeAccessRights>値、およびユーザー アカウント</xref:System.IO.Pipes.PipeAccessRights></xref:System.Security.AccessControl.AccessControlType></xref:System.IO.Pipes.PipeAccessRule></xref:System.Security.AccessControl.AccessControlType>。 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>メソッドを指定する、拒否のルールの削除、<xref:System.IO.Pipes.PipeAccessRights>値または<xref:System.IO.Pipes.PipeAccessRights>値</xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>。"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "削除するアクセス規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "システム アクセス制御リスト (SACL) に現在関連付けられている監査規則を削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "RemoveAuditRule メソッドでは、すべて一致するかを削除<xref:System.Security.AccessControl.AccessControlType>監査規則、またはすべてに一致する<xref:System.Security.AccessControl.AccessControlType>監査規則を現在<xref:System.IO.Pipes.PipeSecurity>オブジェクト</xref:System.IO.Pipes.PipeSecurity></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.AccessControlType>。  たとえば、すべてを削除するこのメソッドを使用できます<xref:System.Security.AccessControl.AccessControlType>に関する監査規則、ユーザーを渡すことによって、<xref:System.Security.AccessControl.FileSystemAuditRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType>値、<xref:System.Security.AccessControl.AuditFlags>値、およびユーザー アカウント</xref:System.Security.AccessControl.AuditFlags></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.FileSystemAuditRule></xref:System.Security.AccessControl.AccessControlType>。  RemoveAuditRule メソッドは、拒否のルールを指定するを削除した場合、<xref:System.Security.AccessControl.AuditFlags>値または<xref:System.Security.AccessControl.AuditFlags>値</xref:System.Security.AccessControl.AuditFlags></xref:System.Security.AccessControl.AuditFlags>。"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "削除する監査規則。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>監査規則が削除された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "指定された監査規則からのシステム アクセス制御リスト (SACL) に現在関連付けられていると同じセキュリティ識別子を持つすべての監査規則を削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "RemoveAuditRuleAll メソッドでは、指定したユーザーのすべての監査規則を削除します。  すべての値は無視されます、<xref:System.IO.Pipes.PipeAuditRule>ユーザー アカウントを除くオブジェクト</xref:System.IO.Pipes.PipeAuditRule>。"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "削除する監査規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "システム アクセス制御リスト (SACL) に現在関連付けられている指定された監査規則が削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "RemoveAuditRuleSpecific メソッドでは、指定した一致を削除<xref:System.Security.AccessControl.AccessControlType>ルールまたは指定した照合監査<xref:System.Security.AccessControl.AccessControlType>現在から監査規則<xref:System.IO.Pipes.PipeSecurity>オブジェクト</xref:System.IO.Pipes.PipeSecurity></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.AccessControlType>。  このメソッドを指定された削除を使用するなど、<xref:System.Security.AccessControl.AccessControlType>を渡すことによって、ユーザーの監査規則、<xref:System.Security.AccessControl.FileSystemAuditRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType>値、<xref:System.Security.AccessControl.AuditFlags>値、およびユーザー アカウント</xref:System.Security.AccessControl.AuditFlags></xref:System.Security.AccessControl.AccessControlType></xref:System.Security.AccessControl.FileSystemAuditRule></xref:System.Security.AccessControl.AccessControlType>。  RemoveAuditRuleSpecific メソッドは拒否規則のみを指定を削除した場合、<xref:System.Security.AccessControl.AuditFlags>値</xref:System.Security.AccessControl.AuditFlags>。  指定する任意の拒否規則は削除されません、<xref:System.Security.AccessControl.AuditFlags>値</xref:System.Security.AccessControl.AuditFlags>。"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "削除する監査規則。"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "随意アクセス制御リスト (DACL) に現在関連付けられているすべてのアクセス規則を削除<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクトし、指定されたアクセス規則を追加します。"
  remarks: "ResetAccessRule メソッドを指定したアクセス制御リスト (ACL) の規則を追加またはと一致する同一の ACL ルールの上書き、`rule`パラメーター。  たとえば場合、`rule`パラメーターを指定します、<xref:System.IO.Pipes.PipeAccessRights>値と ResetAccessRule メソッドを指定すると同一の ACL ルールを検索、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールが上書きされます</xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeAccessRights>。  ResetAccessRule メソッドが同一の ACL ルールを検索するかどうかを指定する、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールもは上書きされます</xref:System.IO.Pipes.PipeAccessRights>。"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "追加するアクセス規則。"
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "随意アクセス制御リスト (DACL) に現在関連付けられているアクセス規則を設定<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "SetAccessRule メソッドを指定したアクセス制御リスト (ACL) の規則を追加またはと一致する同一の ACL ルールの上書き、<xref:System.IO.Pipes.PipeAccessRights>の値、`rule`パラメーター</xref:System.IO.Pipes.PipeAccessRights> 。  たとえば場合、`rule`パラメーターを指定します、<xref:System.IO.Pipes.PipeAccessRights>値と SetAccessRule メソッドを指定すると同一の ACL ルールを検索、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールが上書きされます</xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeAccessRights>。  SetAccessRule メソッドが同一の ACL ルールを検索するかどうかを指定する、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールは上書きされません</xref:System.IO.Pipes.PipeAccessRights>。"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "設定するルール。"
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "システム アクセス制御リスト (SACL) に現在関連付けられている監査規則を設定<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクト。"
  remarks: "SetAuditRule メソッドは指定された監査規則を追加するかに一致する任意のと同じ監査規則を上書き、<xref:System.IO.Pipes.PipeAccessRights>の値、`rule`パラメーター</xref:System.IO.Pipes.PipeAccessRights> 。  たとえば場合、`rule`パラメーターを指定します、<xref:System.IO.Pipes.PipeAccessRights>値と SetAuditRule メソッドを指定するのと同じ監査規則を検索、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールが上書きされます</xref:System.IO.Pipes.PipeAccessRights></xref:System.IO.Pipes.PipeAccessRights>。  SetAuditRule メソッドが同じ監査規則を検索するかどうかを指定する、<xref:System.IO.Pipes.PipeAccessRights>値と同じルールは上書きされません</xref:System.IO.Pipes.PipeAccessRights>。"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "設定するルール。"
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
