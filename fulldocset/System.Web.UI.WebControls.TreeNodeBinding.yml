### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBinding
  id: TreeNodeBinding
  children:
  - System.Web.UI.WebControls.TreeNodeBinding.#ctor
  - System.Web.UI.WebControls.TreeNodeBinding.DataMember
  - System.Web.UI.WebControls.TreeNodeBinding.Depth
  - System.Web.UI.WebControls.TreeNodeBinding.FormatString
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  - System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  - System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNodeBinding.Target
  - System.Web.UI.WebControls.TreeNodeBinding.TargetField
  - System.Web.UI.WebControls.TreeNodeBinding.Text
  - System.Web.UI.WebControls.TreeNodeBinding.TextField
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ToString
  - System.Web.UI.WebControls.TreeNodeBinding.Value
  - System.Web.UI.WebControls.TreeNodeBinding.ValueField
  langs:
  - csharp
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
  type: Class
  summary: "データ項目とそのバインド先のノードの間のリレーションシップを定義、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがバインドされている各データ項目がいくつかの属性を持つ XML 要素) などの複数のフィールドを含むデータ ソースにノードがによって返される値を表示、`ToString`既定では、データ項目のメソッド</xref:System.Web.UI.WebControls.TreeView>。 XML 要素の場合、ノードには、要素名、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが表示されます。 ノードのプロパティは、ツリー ノードのバインディングを指定することによって、特定のフィールドにバインドできます。 TreeNodeBinding オブジェクトでは、各データ項目とそのバインド先のノード間のリレーションシップを定義します。       <xref:System.Web.UI.WebControls.TreeView>コントロール内の TreeNodeBinding オブジェクトを格納する、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>プロパティし、ツリー階層と、データ ソースの階層間で一対一のリレーションシップを作成するデータ ソースにバインドを適用します</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A></xref:System.Web.UI.WebControls.TreeView>。 データ ソース内の各データ項目の<xref:System.Web.UI.WebControls.TreeView>コントロールが、対応するを作成するために、TreeNodeBinding オブジェクトにデータ項目を照合しようとしています<xref:System.Web.UI.WebControls.TreeNode>オブジェクト。</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView> 。       TreeNodeBinding オブジェクトを作成する場合は、バインディングの基準を指定する必要があります。 条件は、データ項目ノードにバインドするときを示します。 指定することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。 両方を指定してがわずかなパフォーマンスが向上します。 ノードの深さは、バインドされるノードのレベルを指定します。 たとえば、次の TreeNodeBinding 宣言に結合され、`Name`と`ID`をデータ ソースのフィールド、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>と<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ、それぞれに、すべてのノードの深さが 0 の:```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```データ メンバーは、基になるデータ ソースのデータ項目の種類を指定しますが、データ ソースに応じて、異なる情報を表すことができます</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 階層データ ソース内の各データ項目 (によって表される、<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>インターフェイス) を公開、<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>プロパティをデータ項目の種類を指定します</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName></xref:System.Web.UI.IHierarchyData?displayProperty=fullName>。 たとえば、XML 要素のデータ メンバーは、要素の名前を指定します。 データ メンバーがデータを指定して、データ ソースには、複数のデータ項目の種類が含まれている、項目の種類を使用します。 次 TreeNodeBinding 宣言に結合され、`<Book>`の要素、<xref:System.Web.UI.WebControls.XmlDataSource>コントロールを階層内の場所に関係なく、ツリー内のすべてのノード:```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```のプロパティをバインドできますし、バインディングの基準が確立されると、<xref:System.Web.UI.WebControls.TreeNode>値にバインドできるオブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.XmlDataSource>。 データ項目のフィールドまたは静的な値をバインドすることができます。 静的な値にバインドされるとすべて<xref:System.Web.UI.WebControls.TreeNode>TreeNodeBinding オブジェクトが適用されるオブジェクトが同じ値を共有します</xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > にバインドされたプロパティを選択的にオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト ノードで直接対応するプロパティを設定します</xref:System.Web.UI.WebControls.TreeNode>。       次の表に、TreeNodeBinding クラスのプロパティのプロパティをバインドすることを<xref:System.Web.UI.WebControls.TreeNode>データ項目のフィールドへのオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティにバインドするフィールドです |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>プロパティにバインドするフィールドです |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>プロパティにバインドするフィールドです |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティにバインドするフィールドです |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>プロパティにバインドするフィールドです |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティにバインドするフィールドです |。      次の表に、TreeNodeBinding クラスのプロパティのプロパティをバインドすることを<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを静的な値にします</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.Target%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>プロパティにバインドする静的な値です |。  |<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>|<xref:System.Web.UI.WebControls.TreeNode>オブジェクトの<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティにバインドする静的な値です |。      競合する TreeNodeBinding オブジェクトが定義されている場合、<xref:System.Web.UI.WebControls.TreeView>制御の優先順位の順にツリー ノードのバインディングに適用されます: 1</xref:System.Web.UI.WebControls.TreeView>  </xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>  </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>  </xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>  </xref:System.Web.UI.WebControls.TreeNode.Target%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>  </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>  </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>  </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>  </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>  </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> 。  定義し、深さと、データ メンバーの両方に一致する TreeNodeBinding オブジェクト。      2.  TreeNodeBinding オブジェクト定義し、一致するデータ メンバーのみです。      3.  定義し、深度だけ TreeNodeBinding オブジェクト。      4.  深さでも、データ メンバーを定義する TreeNodeBinding オブジェクト。 (この型のツリー ノードのバインディングは、ツリー内のすべてのノードに適用されます)。    5.  データ ソースに一致していない TreeNodeBinding オブジェクト。 この場合、によって返される値、`ToString`データ項目のメソッドにバインドし、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>と<xref:System.Web.UI.WebControls.TreeNode.Value%2A>TreeNodeBinding オブジェクトを適用するノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。       TreeNodeBinding クラスでは設定して、ノードに表示されるテキストの書式設定することもできます、<xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>。"
  example:
  - "The following table shows some example tree node binding declarations.  \n  \n|Example binding|Description|  \n|---------------------|-----------------|  \n|`<asp:TreeNodeBinding TextField=\"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the data source, respectively. All nodes use this tree node binding declaration because the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> and <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> properties are not set.|  \n|`<asp:TreeNodeBinding DataMember= \"Book\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding Depth=\"2\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding DataMember=\"Book\" Depth= \"2\" TextField= \"Title\" ValueField= \"ID\" ImageUrl= \"Image.jpg\">`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively. Also binds the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of the nodes to a static value.|  \n  \n This section contains three code examples. The first code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. The second code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. The third code example provides sample XML data for the first and second code examples.  \n  \n The following code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_1.aspx)]  \n  \n The following code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data that is provided in the next code example to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_2.aspx)]  \n  \n The following code example provides sample XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class TreeNodeBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.TreeNodeBinding>クラス</xref:System.Web.UI.WebControls.TreeNodeBinding>の新しいインスタンスを初期化するために TreeNodeBinding コンス トラクターを使用します。 動的に設定するときによく使用される、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>のコレクション、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。"
  example:
  - "The following code example demonstrates how to use the TreeNodeBinding constructor to add a <xref:System.Web.UI.WebControls.TreeNodeBinding> object dynamically to the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_41_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_41_1.aspx)]"
  syntax:
    content: public TreeNodeBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定と照合する値、 &lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;ツリー ノードのバインドを適用するかどうかを判断するデータ項目のプロパティです。"
  remarks: "データ メンバーは、基になるデータ ソースのデータ項目の種類を指定しますが、データ ソースに応じて、異なる情報を表すことができます。 階層データ ソース内の各データ項目 (によって表される、<xref:System.Web.UI.IHierarchyData?displayProperty=fullName>オブジェクト) を公開、<xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>プロパティをデータ項目の種類を指定します</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName></xref:System.Web.UI.IHierarchyData?displayProperty=fullName>。 たとえば、XML 要素のデータ メンバーは、要素の名前を指定します。 データ メンバーがデータを指定して、データ ソースには、複数のデータ項目の種類が含まれている、項目の種類を使用します。 次<xref:System.Web.UI.WebControls.TreeNodeBinding>宣言バインド、`<Book>`の要素、<xref:System.Web.UI.WebControls.XmlDataSource>コントロールを階層内の場所に関係なく、ツリー内のすべてのノード:```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ```を作成するとき、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクト、バインディングの基準を指定する必要があります</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.TreeNodeBinding>。 条件は、データ項目ノードにバインドするときを示します。 指定することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または DataMember プロパティ、または両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。 両方を指定してがわずかなパフォーマンスが向上します。       バインディングの基準が確立されるのプロパティはバインドし、<xref:System.Web.UI.WebControls.TreeNode>値にバインドできるオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 データ項目のフィールドまたは静的な値をバインドすることができます。 静的な値にバインドするときすべて<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用される同じ値を共有します</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. For this code example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_464_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_464_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "データ項目のと照合する値&lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt;ツリー ノードのバインドを適用するかどうかを決定するプロパティです。 既定値は空の文字列 (&quot;&quot;)、DataMember プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のノードの深さ、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "ノードの深さは、バインドされるノードのレベルを指定します。 たとえば、次<xref:System.Web.UI.WebControls.TreeNodeBinding>宣言バインド、`Name`と`ID`をデータ ソースのフィールド、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>と<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ、それぞれに、すべてのノードの深さが 0 の:```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ```を作成するとき、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクト、バインディングの基準を指定する必要があります</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNodeBinding>。 条件は、データ項目ノードにバインドするときを示します。 深さを指定するか、<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>。 両方を指定してがわずかなパフォーマンスが向上します。       バインディングの基準が確立されるのプロパティはバインドし、<xref:System.Web.UI.WebControls.TreeNode>値にバインドできるオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 データ項目のフィールドまたは静的な値をバインドすることができます。 静的な値にバインドするときすべて<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用される同じ値を共有します</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_444_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_444_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "ノード階層の深さです、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 既定値は-1、深さプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードのテキストの表示形式を指定する文字列、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "FormatString プロパティを使用すると、ノードのテキストのカスタム書式指定を提供します。 データの書式指定文字列は、フォームで、コロンで区切られた&2; つの部分で構成されます { `A` : `Bxx` }。 たとえば、書式設定文字列`{0:F2}`小数点以下&2; 桁の固定小数点数が表示されます。      > [!NOTE] > 文字列全体があることを示す書式指定文字列とリテラル文字列ではなくよう中かっこで囲む必要があります。 かっこの外側の任意のテキストは、リテラル テキストとして表示されます。       コロンの前に値 (`A`一般的な例で) パラメーターの&0; から始まるリストのパラメーターのインデックスを指定します。      > [!NOTE] > 内の各ノードは 1 つだけの値がないために、この値を 0 に設定することができます。       コロンの後に文字 (`B`一般的な例で) 値の表示形式を指定します。 次の表は、一般的な形式を示します。      |形式指定文字 |数値が表示されます |  |----------------------|--------------------------------|  |`C`|通貨の形式です |。  |`D`|10 進形式です |。  |`E`|指数 (指数) 形式です |。  |`F`|固定形式です |。  |`G`|一般的な形式です |。  |`N`|数値書式 |。  |`X`|16 進数形式です |。     > [!NOTE] > 除く`X`、書式指定文字が大文字小文字を区別します。 `X`形式の文字が指定されている場合、16 進文字を表示します。       書式指定文字の後の値 (`xx`一般的な例で) の有効桁数または小数点以下桁数を表示する数を指定します。       書式指定文字列の詳細については、次を参照してください。[型の書式設定](~/add/includes/ajax-current-ext-md.md)です。       このプロパティの値は、ビュー ステートに格納されます。       FormatString プロパティの値設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_755_1.aspx)]\n [!code-cs[TreeNodeBindingFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_755_1.aspx)]  \n  \n The following code example is sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "ノードのテキストの表示形式を指定する書式指定文字列、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 既定値は空の文字列 (&quot;&quot;)、FormatString プロパティは設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードの横に表示されるイメージのツールヒントのテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ImageToolTip プロパティにバインドする値の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeView>。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。       このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 ノードの横にあるイメージが表示されたら、画像の上にマウス ポインターが配置されているときにツールヒント テキストが表示されます。      > [!NOTE] > ImageToolTip プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>。       ImageToolTip プロパティを使用して、各ノードのイメージを同じのツールヒント テキストをバインドするの代わりにバインドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_796_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_796_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "ノードの横に表示されるイメージのツールヒントのテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 既定値は空の文字列 (&quot;&quot;)、値が設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  id: ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ImageToolTipField プロパティにバインドするフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeView>。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。       このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 ノードの横にあるイメージが表示されたら、画像の上にマウス ポインターが配置されているときにツールヒント テキストが表示されます。      > [!NOTE] > ImageToolTipField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>。       バインドする ImageToolTipField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_953_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_953_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTipField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>。 既定値は空の文字列 (&quot;&quot;)、ImageToolTipField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得するノードの横に表示されるイメージの URL を設定または、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ImageUrl プロパティにバインドするカスタム イメージの指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 イメージは、ノードの横にあるが表示され、クライアントのブラウザーでサポートされている限り、任意のファイル形式 (.jpg、.gif、.bmp など) することができます。      > [!NOTE] > を設定して、個々 のノードのイメージをオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティを直接</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。       このプロパティを使用して、各ノードに、同じイメージをバインドするの代わりにバインドできます、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。       ImageUrl プロパティを持つノードの横にあるイメージを表示するときに、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>。 ツールヒントのテキストを指定するは、支援テクノロジ デバイスで、コントロールを使いやすくするために使用できるイメージの説明を提供します。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrl property to specify a custom image for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_58_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "ノードの横に表示されるイメージの URL、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 ImageUrl プロパティが設定されていません。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ImageUrlField プロパティにバインドするフィールドの名前を指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 イメージは、ノードの横にあるが表示され、クライアント ブラウザーには、形式がサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にできます。      > [!NOTE] > を設定して、個々 のノードのイメージをオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティを直接</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。       このプロパティを使用してバインドするのではなく、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       ImageUrlField プロパティを持つノードの横にあるイメージを表示するときに、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>。 ツールヒントのテキストを指定するは、支援テクノロジ デバイスで、コントロールを使いやすくするために使用できるイメージの説明を提供します。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1012_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1012_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>。 既定値は空の文字列 (&quot;&quot;)、ImageUrlField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードにリンクする URL、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用して、クリックします。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、NavigateUrl プロパティにバインドする URL を指定して、使用して、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 このプロパティが設定されている場合、<xref:System.Web.UI.WebControls.TreeView>コントロールには、プレーン テキストではなく、ノードのテキストのハイパーリンクが表示されます</xref:System.Web.UI.WebControls.TreeView>。 また、必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>ウィンドウまたはリンクされたコンテンツを表示するフレームを指定するプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>。      > [!NOTE] > を設定して NavigateUrl プロパティを選択的にオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。       NavigateUrl プロパティを使用して、各ノードに同じ URL をバインドするの代わりにバインドすることができます、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1267_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1267_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "ときにノードのリンク先の URL、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトが適用されてをクリックします。 既定値は空の文字列 (&quot;&quot;)、NavigateUrl プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、NavigateUrlField プロパティにバインドするフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 NavigateUrlField プロパティが設定されている場合、<xref:System.Web.UI.WebControls.TreeView>コントロールには、プレーン テキストではなく、ノードのテキストのハイパーリンクが表示されます</xref:System.Web.UI.WebControls.TreeView>。 また、必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>ウィンドウまたはリンクされたコンテンツを表示するフレームを指定するプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>。      > [!NOTE] > NavigateUrlField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。       バインドする NavigateUrlField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1074_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1074_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>。 既定値は空の文字列 (&quot;&quot;)、NavigateUrlField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうか、ノード、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトが適用されるが動的に設定されます。"
  remarks: "場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 PopulateOnDemand プロパティに設定するときに`true`、ノードの子ノードを<xref:System.Web.UI.WebControls.TreeNodeBinding>を取得するオブジェクトが適用されて、ノードを展開するときに実行時に設定されます</xref:System.Web.UI.WebControls.TreeNodeBinding>。       設定してデータ バインディングを作成するときに、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>の<xref:System.Web.UI.WebControls.TreeView>に制御を`true`、作成されるバインド、PopulateOnDemand プロパティが設定されて`true`</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>。 宣言によって作成されるデータのバインドに設定された PopulateOnDemand プロパティを持って`false`です。 宣言の構文を使用するには、個々 のデータ バインディングの動作を制御することができます。      > [!NOTE] ><xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A><xref:System.Web.UI.WebControls.TreeNode>クラス、PopulateOnDemand プロパティはイベント処理メソッドを定義する<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベント、 <xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource>などのデータ ソース コントロールを使用している場合</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate></xref:System.Web.UI.WebControls.TreeNode>のプロパティ</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>とは異なり 代わりに、<xref:System.Web.UI.WebControls.TreeView>コントロールのプロパティを使用して、イベント処理メソッドを動的に生成する、<xref:System.Web.UI.WebControls.TreeNodeBinding>内のオブジェクト、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A></xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeView>。 用のイベント ハンドラー メソッドを定義できます、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベントですただし、イベント ハンドラー メソッドの後に呼び出されます、<xref:System.Web.UI.WebControls.TreeView>コントロール。</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 。       サポートされているブラウザーでは、クライアント側のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>ノードを展開すると、不要にサーバーにポストバック時に、クライアントで動的にノードを設定するとします</xref:System.Web.UI.WebControls.TreeView>。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_426_1.aspx)]\n [!code-vb[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_426_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>設定するノードを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>動的に、それ以外のオブジェクトが適用されて<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "イベントまたはイベントを生成する先のノードを取得または設定、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトの適用が選択されています。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、SelectAction プロパティにバインドする値を指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードが選択されているときに発生するイベントまたはイベントを指定するプロパティを使用します</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。      > [!NOTE] > SelectAction プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。       次の表には、使用可能なオプションが一覧表示します。      |`SelectAction`値 |説明 |  |--------------------------|-----------------|  |`TreeNodeSelectAction.Expand`|ノードの展開と折りたたみを切り替えます。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>イベントまたは必要に応じて、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>イベントを発生させます |。  |`TreeNodeSelectAction.None`|ノードが選択されているときにイベントを発生させません |。  |`TreeNodeSelectAction.Select`|ノードを選択すると、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベントを発生させます |。  |`TreeNodeSelectAction.SelectExpand`|両方を生成、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>と<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ノードが選択されているときにイベント</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>。 ノードのみを展開、折りたたむことはできません |。     > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingSelectAction#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_346_1.aspx)]\n [!code-vb[TreeNodeBindingSelectAction#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_346_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードの横にあるチェック ボックスを表示するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "複数ノードの選択のサポートを提供する、<xref:System.Web.UI.WebControls.TreeView>コントロール内のノード イメージの横にあるチェック ボックスを表示することができます</xref:System.Web.UI.WebControls.TreeView>。 ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ShowCheckBox プロパティにバインドする値の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>プロパティは、またはノードのチェック ボックスを非表示に使用します</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>。      > [!NOTE] > ShowCheckBox プロパティを使用して、チェック ボックスを表示できますが、使用する一般的なは、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>。 ただし、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティにはプロパティで指定されているすべてのノード型が影響しますしたがって、ShowCheckBox プロパティが多くの場合、使用するノードでその設定を上書きする、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています。</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 。 選択的に設定して ShowCheckBox プロパティをオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1341_1.aspx)]\n [!code-vb[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1341_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ノードの横にあるチェック ボックスを表示する、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトが適用されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コピーを作成、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクト。"
  remarks: "ICloneable.Clone メソッドのコピーを作成するヘルパー関数では、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトから ICloneable.Clone メソッドが呼び出されます</xref:System.Web.UI.WebControls.TreeNodeBinding>。      > [!NOTE] >、ICloneable.Clone メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "コピーを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 <xref href=&quot;System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema&quot;></xref>です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.TreeNodeBinding>にインスタンスをキャスト、<xref:System.Web.UI.IDataSourceViewSchemaAccessor>インターフェイス</xref:System.Web.UI.IDataSourceViewSchemaAccessor></xref:System.Web.UI.WebControls.TreeNodeBinding>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "関連付けられているスキーマを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 <xref href=&quot;System.Web.UI.IStateManager.IsTrackingViewState&quot;></xref>です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.TreeNodeBinding>インスタンスにキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、その状態を保存するコントロールがマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの以前に保存したビューステートを読み込みます。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;保存されているビュー ステートの値を格納しています。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "オブジェクトに、ビュー状態の変更を保存します。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "ビュー ステートの変化を格納するオブジェクト。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>ビューステートへの変更を追跡するオブジェクト。"
  remarks: "サーバー コントロールで IStateManager.TrackViewState メソッドが呼び出された後、<xref:System.Web.UI.Control.IsTrackingViewState%2A>プロパティから返される`true`</xref:System.Web.UI.Control.IsTrackingViewState%2A>。"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "対象のウィンドウまたはフレームをノードに関連付けられている Web ページの内容を表示するための取得または設定、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ターゲット プロパティにバインドする値の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Target%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.Target%2A>プロパティの使用をウィンドウを指定、またはノードがクリックしてされたときに、ノードに表示される Web する、コンテンツ フレームがリンクされています</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。      > [!NOTE] > ターゲット プロパティのオーバーライドを設定、<xref:System.Web.UI.WebControls.TreeView.Target%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>するノードのコントロール、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.Target%2A>。 選択的に設定して、ターゲット プロパティを上書きできます、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。      > [!NOTE] > として Target プロパティが表示されます、`target`属性。 `target`属性`anchor`要素は、XHTML 1.1 ドキュメント型定義で許可されていません。 ターゲット プロパティを設定しない場合に表示される出力、<xref:System.Web.UI.WebControls.TreeNodeBinding>コントロールは XHTML 1.1 に準拠する必要があります</xref:System.Web.UI.WebControls.TreeNodeBinding>。 詳細については、次を参照してください。 [Visual Studio および ASP.NET で XHTML 標準](~/add/includes/ajax-current-ext-md.md)です。   >> をアクセス可能な Web ページを作成する場合は、別のウィンドウを対象とするターゲット プロパティを使用してを避ける必要があります。 詳細については、次を参照してください。 [NIB: ASP.NET のユーザー補助](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)です。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_78_1.aspx)]\n [!code-cs[TreeNodeBindingTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_78_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "ターゲット ウィンドウまたはリンクされた Web ページの内容を表示するフレーム。 値で始めなければなりません A Z からの範囲の文字 (大文字小文字を区別しない)、次の表に示すように、アンダー スコアで始まる特殊な値を除く。       <table><thead><tr><th> 対象の値       </th><th> 説明       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> 新しいウィンドウ フレームを使用せずにコンテンツをレンダリングします。       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 直前のフレーム セットの親に内容を表示します。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> [検索] ウィンドウの内容を表示します。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> フォーカスのあるフレームのコンテンツをレンダリングします。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> フル ウィンドウ フレームを使用せずにコンテンツをレンダリングします。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    ブラウザーのマニュアルを参照するかどうかを<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>値はサポートされています。  Microsoft Internet Explorer バージョン 5.0 およびそれ以降のサポートなど、 <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref>ターゲット値。      </div>       既定値は空の文字列 (&quot;&quot;)、ウィンドウまたはフォーカスのあるフレームが更新されます。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.Target*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Target*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、TargetField プロパティにバインドするフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Target%2A></xref:System.Web.UI.WebControls.TreeView>。 <xref:System.Web.UI.WebControls.TreeNode.Target%2A>プロパティの使用をウィンドウを指定、またはノードがクリックしてされたときに、ノードに表示される Web する、コンテンツ フレームがリンクされています</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。       このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > TargetField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。       バインドする TargetField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます<xref:System.Web.UI.WebControls.TreeNode.Target%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A></xref:System.Web.UI.WebControls.TreeNode.Target%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Target%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.Target*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Target*>。 既定値は空の文字列 (&quot;&quot;)、TargetField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードに表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、値にバインドを指定する文字列プロパティを使用して、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティの使用をノードに表示されるテキストを指定します</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。      > [!NOTE] > 選択的に設定して、テキストのプロパティを上書きできます、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。       Text プロパティを使用して、各ノードに同じテキストをバインドするの代わりにバインドすることができます、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_55_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "ノードに表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.Text*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Text*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされているプロパティを使用、テキスト フィールドにバインドするフィールド名を指定する、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティの使用をノードに表示されるテキストを指定します</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。      > [!NOTE] > TextField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。       TextField プロパティを使用してバインドするのではなく、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1062_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1062_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.Text*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Text*>。 既定値は空の文字列 (&quot;&quot;)、テキスト フィールド プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するノードのツールヒントのテキストを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ツールヒント プロパティにバインドする値の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 ノード上にマウス ポインターを置くと、ツールヒントのテキストが表示されます。      > [!NOTE] > ToolTip プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>。       ToolTip プロパティを使用して、各ノードに同じのツールヒント テキストをバインドするの代わりにバインドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_552_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_552_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "ノードのツールヒントのテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトを適用します。 既定値は空の文字列 (&quot;&quot;)、ToolTip プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ToolTip*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ToolTipField プロパティにバインドするフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 ノード上にマウス ポインターを置くと、ツールヒントのテキストが表示されます。      > [!NOTE] > ToolTipField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>。       バインドする ToolTipField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_325_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_325_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.ToolTip*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.ToolTip*>。 既定値は空の文字列 (&quot;&quot;)、ToolTipField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返します、<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "返します、 <> </> *> プロパティです。場合、 <> </> *> プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列 (&quot;&quot;)、 **(空)**が返されます。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定は表示されませんが、先のノードに関するその他のデータの格納に使用する値を表示、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>ポストバック イベントを処理するために使用されるデータなど、オブジェクトを適用します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、バインドする値を指定する値のプロパティを使用して、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.Value%2A>を補足するプロパティを使用、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>するノードに関連付けられている追加のデータを格納することによってプロパティ、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトを適用します</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 この値は、コントロールでは表示されず、一般的にポストバック イベントを処理するためのデータを格納するために使用します。      > [!NOTE] > 選択的に設定して値プロパティを上書きできます、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A>。       Value プロパティを使用して、各ノードに同じ値をバインドするの代わりにバインドすることができます、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを設定して、データ ソースのフィールドを<xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1097_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1097_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "先のノードに関する補足データ、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトが適用されてです。 このデータは表示されません。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定フィールドの名前、データ ソースにバインドする、<xref:System.Web.UI.WebControls.TreeNode.Value*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Value*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがデータ ソースにバインドされている、ValueField プロパティにバインドするフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeView>。 このバインディングの関係をすべてに影響<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode>。 <xref:System.Web.UI.WebControls.TreeNode.Value%2A>を補足するプロパティを使用、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>するノードに関連付けられている追加のデータを格納することによってプロパティ、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトを適用します</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 この値は、コントロールでは表示されず、一般的にポストバック イベントを処理するためのデータを格納するために使用します。      > [!NOTE] > ValueField プロパティを設定して選択的にオーバーライドできます、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>直接の各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A>。       バインドする ValueField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト、フィールドを設定することができます、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティを設定して、固定値を<xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。      > [!NOTE] > 最初に設定する必要がある、データ ソースに複数のフィールドが含まれている場合、<xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>または<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>プロパティ、または適切なフィールドにバインドするために両方のプロパティ</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A></xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1111_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1111_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、<xref:System.Web.UI.WebControls.TreeNode.Value*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクトを<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトが適用されています</xref:System.Web.UI.WebControls.TreeNode.Value*>。 既定値は空の文字列 (&quot;&quot;)、ValueField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNodeBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString
  nameWithType: TreeNodeBinding.ToString
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
