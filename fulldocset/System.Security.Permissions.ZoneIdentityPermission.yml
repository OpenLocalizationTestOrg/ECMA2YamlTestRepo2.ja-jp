### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ZoneIdentityPermission
  id: ZoneIdentityPermission
  children:
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  - System.Security.Permissions.ZoneIdentityPermission.Copy
  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  - System.Security.Permissions.ZoneIdentityPermission.ToXml
  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission
  fullName: System.Security.Permissions.ZoneIdentityPermission
  type: Class
  summary: "コードが元のゾーンの id アクセス許可を定義します。 このクラスは継承できません。"
  remarks: "このアクセス許可は、呼び出し元のコードが特定のゾーンからがかどうかを判断できます。 ゾーンは、Microsoft Internet Explorer のオプションに従って構成され、Internet Explorer の IInternetSecurityManager および関連する Api によって URL からマップされます。 アクセス許可の正確なゾーンの一致を定義するのみURL は、1 つのゾーンにのみ所属できます。      -ローカル イントラネット ゾーン: 会社のイントラネット上のコンテンツのローカル イントラネット ゾーンを使用します。 サーバーでは、企業のファイアウォール内であるため、イントラネット上のコンテンツに高いレベルの信頼が割り当てられます。      信頼済みサイト ゾーン: よりよりも信頼できるインターネット上の他のサイトと見なされる Web サイトにあるコンテンツの 信頼済みサイト ゾーンを使用します。 ユーザーは、このゾーンを使用して、高い信頼レベルを特定のインターネット サイトに割り当てることができます。 これらの信頼できる Web サイトの Url は、ユーザーがこのゾーンにマップする必要があります。 既定では、信頼済みサイト ゾーンのサイトのインターネット ゾーンの場合よりも信頼性の高いは発生しません。 ユーザーまたは会社は、高いレベルの信頼を付与するが含まれている場合は、サイトにこのゾーンに付与された信頼のレベルを変更する必要があります。      インターネット ゾーン: 別のゾーンに属していないインターネット上の Web サイトのインターネット ゾーンを使用します。 既定の設定は、ユーザーのコンピューター上のリソースにこれらのサイトのみの最小限のアクセスからダウンロードされたコードを許可します。 マップされていない他のゾーンに自動的に web サイトは、このゾーンに分類されます。      -制限付きサイト ゾーン: コンテンツになる場合、または可能性があります。 以前、ダウンロードするときに問題が含まれている Web サイトに対して制限付きサイト ゾーンを使用します。 このゾーンをユーザーのコンピューターで実行されているこれらのサイトからダウンロードされたコードを防ぐために使用できます。 信頼されていない Web サイトの Url は、ユーザーがこのゾーンにマップする必要があります。      -ローカル コンピューターのゾーン: ローカル マシンから、ゾーンは、ユーザーのコンピューターに存在するコンテンツに使用する暗黙的なゾーンです。 Internet Explorer で、ローカル システムでキャッシュされたコンテンツを除いて、ユーザーのコンピューター上のコンテンツは、非常に高いレベルの信頼で処理されます。      > [!IMPORTANT] > 以降で、 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]、id アクセス許可は使用されません。   >>.NET Framework version 1.0 および 1.1 では、id アクセス許可の要求が、効果的なときでも、呼び出し元アセンブリが完全に信頼されています。 つまり、呼び出し元のアセンブリが、完全な信頼がありますが、id アクセス許可を要求が失敗したアセンブリが要求されている条件を満たしていない場合。 以降、.NET Framework version 2.0 では、id アクセス許可を要求していない呼び出し元のアセンブリに完全な信頼がある場合に効果的なされます。 これには、特殊なケースとして id アクセス許可の処理方法を排除すること、すべての権限の一貫性が保証されします。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>です。"
  remarks: "作成するか完全に制限 (`None`) または`Unrestricted`権限です。      > [!NOTE] >.NET Framework version 1.0 および 1.1 では、id アクセス許可が持つことはできません、<xref:System.Security.Permissions.PermissionState>アクセス許可の状態の値</xref:System.Security.Permissions.PermissionState>。 以降、.NET Framework version 2.0 では、id アクセス許可はアクセス許可の状態値を設定できます。 つまり、2.0 以降のバージョンでは、id アクセス許可を実装するためのアクセス許可と同じ動作、<xref:System.Security.Permissions.IUnrestrictedPermission>インターフェイス</xref:System.Security.Permissions.IUnrestrictedPermission>。 つまり、id の要求は常に成功すると、アセンブリの id に関係なく、アセンブリに完全な信頼が付与されている場合。       .NET Framework バージョン 1.0 および 1.1 では、呼び出し元のアセンブリが完全に信頼されている場合でも id アクセス許可の要求は効果的です。 つまり、呼び出し元のアセンブリが、完全な信頼がありますが、id アクセス許可を要求が失敗したアセンブリが要求されている条件を満たしていない場合。 以降、.NET Framework version 2.0 では、id アクセス許可を要求していない呼び出し元のアセンブリに完全な信頼がある場合に効果的なされます。 これには、特殊なケースとして id アクセス許可の処理方法を排除すること、すべての権限の一貫性が保証されします。"
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/visualbasic/15a7f59e-a46d-4cbf-89a9-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/csharp/15a7f59e-a46d-4cbf-89a9-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code>パラメーターがの有効な値ではありません<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  id: '#ctor(System.Security.SecurityZone)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>指定されたゾーン id を表すクラス。"
  remarks: ''
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/visualbasic/66b125e0-a7cf-4ec2-89f3-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/csharp/66b125e0-a7cf-4ec2-89f3-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);
    parameters:
    - id: zone
      type: System.Security.SecurityZone
      description: "ゾーンの識別子です。"
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成して、現在のアクセス許可の完全なコピーを返します。"
  remarks: "アクセス許可のコピーは、元のアクセス許可リソースに対して同じアクセス権を表します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可のコピー。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "XML エンコードから指定された状態で、アクセス許可を再構築します。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "XML を使用して、アクセス許可を再構築するエンコーディングします。"
  overload: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code>パラメーターが有効なアクセス許可要素ではありません。       - または -、 <code> esd </code>パラメーターのバージョン番号が無効です。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  remarks: "2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。 元の両方の権限を通過する要求だけでは、積集合を渡されます。       同一の&2; つの交差部分<xref:System.Security.Permissions.ZoneIdentityPermission>オブジェクトは、同じアクセス許可</xref:System.Security.Permissions.ZoneIdentityPermission>。 その他の組み合わせの結果であるアクセス許可、`null`です。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と現在のアクセス許可と同じ型でもありません。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。"
  remarks: "2 つのアクセス許可が等しい場合、または現在のアクセス許可を表している場合、現在のアクセス許可は、指定した権限のサブセット、<xref:System.Security.SecurityZone>セキュリティ ゾーン</xref:System.Security.SecurityZone>。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係をテストするのには権限です。 このアクセス許可は、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、このアクセス許可がありません、 <xref href=&quot;System.Security.SecurityZone&quot;> </xref>セキュリティ ゾーン、および指定したアクセス許可が現在のアクセス許可と等しくありません。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  id: SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得または設定の現在のによって表されるゾーン<xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;></xref>です。"
  syntax:
    content: public System.Security.SecurityZone SecurityZone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: "1 つ、 <xref href=&quot;System.Security.SecurityZone&quot;> </xref>値。"
  overload: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "パラメーター値が有効な値の<xref href=&quot;System.Security.SecurityZone&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "アクセス許可と、現在の状態の XML エンコードを作成します。"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "状態情報を含む、アクセス許可の XML エンコード。"
  overload: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  remarks: "共用体への呼び出しの結果は、現在のアクセス許可と、指定した権限の両方で表されるセキュリティ ゾーンを表すアクセス許可です。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。 同一の&2; つの共用体<xref:System.Security.Permissions.ZoneIdentityPermission>オブジェクトは、同じアクセス許可</xref:System.Security.Permissions.ZoneIdentityPermission>。 Null のアクセス許可の和集合と<xref:System.Security.Permissions.ZoneIdentityPermission>権限は権限が null でないこと</xref:System.Security.Permissions.ZoneIdentityPermission>。       なお、<xref:System.Security.Permissions.ZoneIdentityPermission>オブジェクトを表す、<xref:System.Security.SecurityZone>セキュリティ ゾーンが null のアクセス許可として扱われ、特殊なケースとして処理します</xref:System.Security.SecurityZone></xref:System.Security.Permissions.ZoneIdentityPermission>。 和集合、<xref:System.Security.Permissions.ZoneIdentityPermission>オブジェクトを表す、<xref:System.Security.SecurityZone>セキュリティ ゾーンと null のアクセス許可が null です</xref:System.Security.SecurityZone></xref:System.Security.Permissions.ZoneIdentityPermission>。 2 つの別のゾーンの id アクセス許可の和集合の結果、 <xref:System.ArgumentException>2 つのアクセス許可のどちらを表しているときにスローされた例外、<xref:System.Security.SecurityZone>セキュリティ ゾーン</xref:System.Security.SecurityZone></xref:System.ArgumentException>。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。"
  overload: System.Security.Permissions.ZoneIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code>パラメーターではありません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と現在のアクセス許可と同じ型でもありません。       2 つのアクセス許可が等しくないと、現在のアクセス許可がありません - または -、 <xref href=&quot;System.Security.SecurityZone&quot;> </xref>セキュリティ ゾーンです。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: ZoneIdentityPermission.Copy
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: ZoneIdentityPermission.FromXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: ZoneIdentityPermission.Intersect
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ZoneIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: ZoneIdentityPermission.ToXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Union*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union
  nameWithType: ZoneIdentityPermission.Union
