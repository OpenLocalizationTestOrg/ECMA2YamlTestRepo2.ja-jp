### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlCachePolicy
  id: ControlCachePolicy
  children:
  - System.Web.UI.ControlCachePolicy.Cached
  - System.Web.UI.ControlCachePolicy.Dependency
  - System.Web.UI.ControlCachePolicy.Duration
  - System.Web.UI.ControlCachePolicy.ProviderName
  - System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  - System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  - System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  - System.Web.UI.ControlCachePolicy.SupportsCaching
  - System.Web.UI.ControlCachePolicy.VaryByControl
  - System.Web.UI.ControlCachePolicy.VaryByParams
  langs:
  - csharp
  name: ControlCachePolicy
  nameWithType: ControlCachePolicy
  fullName: System.Web.UI.ControlCachePolicy
  type: Class
  summary: "ASP.NET ユーザー コントロールの出力キャッシュを設定するには、プログラムによるアクセスを提供します。"
  remarks: "開発者プログラム ユーザー制御のシナリオには、ControlCachePolicy クラスを使用して、ユーザー コントロール (.ascx ファイル) の出力キャッシュ設定を指定します。 ASP.NET 内でユーザー コントロールが埋め込まれます、<xref:System.Web.UI.BasePartialCachingControl>インスタンス</xref:System.Web.UI.BasePartialCachingControl>。 <xref:System.Web.UI.BasePartialCachingControl>クラスは、キャッシュが有効な出力がユーザー コントロールを表します</xref:System.Web.UI.BasePartialCachingControl>。 アクセスするときに、<xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName>のプロパティ、<xref:System.Web.UI.PartialCachingControl>コントロール、常に有効な ControlCachePolicy オブジェクトを受け取ります</xref:System.Web.UI.PartialCachingControl></xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName>。 ただし、アクセスする場合、<xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName>のプロパティ、<xref:System.Web.UI.UserControl>コントロール、有効な ControlCachePolicy オブジェクト場合にのみ表示で、ユーザー コントロールがまだラップ、<xref:System.Web.UI.BasePartialCachingControl>コントロール</xref:System.Web.UI.BasePartialCachingControl></xref:System.Web.UI.UserControl></xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName>。 関連付けられている<xref:System.Web.UI.BasePartialCachingControl>。</xref:System.Web.UI.BasePartialCachingControl>があるないために操作しようとしたときに、プロパティによって返される ControlCachePolicy オブジェクトは例外をスロー ラップされていない場合 確認するかどうか、<xref:System.Web.UI.UserControl>インスタンスは例外を生成せずにキャッシュをサポートする、検査、<xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A>プロパティ</xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A></xref:System.Web.UI.UserControl>。       ControlCachePolicy クラスを使用すると、出力キャッシュを有効にするいくつかの方法の&1; つです。 次の一覧が出力キャッシュの有効化に使用できる方法について説明します。-ディレクティブを使用して宣言型のシナリオでの出力キャッシュを有効にします。      -を使用して、<xref:System.Web.UI.PartialCachingAttribute>分離コード ファイル内のユーザー コントロールのキャッシュを有効にする属性</xref:System.Web.UI.PartialCachingAttribute>。      -ControlCachePolicy クラスを使用して、キャッシュの設定を使用しているプログラムのシナリオで指定<xref:System.Web.UI.BasePartialCachingControl>にキャッシュが有効な前のメソッドのいずれかを使用しを使用して動的に読み込むインスタンス、<xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName></xref:System.Web.UI.BasePartialCachingControl>。 ControlCachePolicy インスタンスが正常に操作できる間でのみ、`Init`と`PreRender`コントロール ライフ サイクルの段階です。 後に ControlCachePolicy オブジェクトを変更する場合、`PreRender`フェーズでは、ASP.NET が例外をスロー、コントロールが表示された後、すべての変更が行われるため実際に影響することキャッシュの設定 (中に、コントロールがキャッシュされる、`Render`ステージ)。 最後に、ユーザー コントロールのインスタンス (とそのため、ControlCachePolicy オブジェクト) はプログラムで操作に使用できる場合にのみが実際にレンダリングされます。"
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated ControlCachePolicy object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> methods if some conditions are met.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_1.aspx)]  \n  \n The following code example demonstrates using the `SimpleControl` user control from a Web Forms page. To run this example successfully, make sure the user control file (.ascx), its code-behind file (.cs or .vb), and the Web Forms page that hosts the user control (.aspx) are in the same directory.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_2.cs)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_2.vb)]  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_3.ascx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_3.ascx)]"
  syntax:
    content: public sealed class ControlCachePolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Cached
  id: Cached
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Cached
  nameWithType: ControlCachePolicy.Cached
  fullName: System.Web.UI.ControlCachePolicy.Cached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはユーザー コントロールのフラグメント キャッシュが有効になっているかどうかを示す値を設定します。"
  syntax:
    content: public bool Cached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザー コントロールの出力をキャッシュがの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCachePolicy.Cached*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Cached property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Dependency
  id: Dependency
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
  fullName: System.Web.UI.ControlCachePolicy.Dependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または設定のインスタンス、 <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref>キャッシュされたユーザー コントロールの出力に関連付けられているクラスです。"
  remarks: "依存関係プロパティを委任する場合、<xref:System.Web.UI.BasePartialCachingControl.Dependency%2A>のプロパティ、<xref:System.Web.UI.BasePartialCachingControl>ユーザー コントロールをラップするコントロール</xref:System.Web.UI.BasePartialCachingControl></xref:System.Web.UI.BasePartialCachingControl.Dependency%2A>。 ときに、<xref:System.Web.Caching.CacheDependency>インスタンスが無効になって、ユーザー コントロールは、キャッシュから削除します</xref:System.Web.Caching.CacheDependency>。"
  syntax:
    content: public System.Web.Caching.CacheDependency Dependency { get; set; }
    return:
      type: System.Web.Caching.CacheDependency
      description: "<xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref>コントロールに関連付けられています。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCachePolicy.Dependency*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Dependency property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Duration
  id: Duration
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Duration
  nameWithType: ControlCachePolicy.Duration
  fullName: System.Web.UI.ControlCachePolicy.Duration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはキャッシュされたアイテムの出力キャッシュ内に存続時間を設定します。"
  remarks: "使用して絶対有効期限ポリシーが設定されている場合、<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>メソッド、Duration プロパティは、キャッシュ エントリの有効期限までの残り時間を返します</xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>。"
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the Duration property is examined during page initialization and cache expiration is changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_0_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_0_1.aspx)]"
  syntax:
    content: public TimeSpan Duration { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>ユーザー コントロールは、出力キャッシュ内に存続時間を表す</xref:System.TimeSpan>。 既定値は<xref:System.TimeSpan>。</xref:System.TimeSpan>"
  overload: System.Web.UI.ControlCachePolicy.Duration*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Duration property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.ProviderName
  id: ProviderName
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
  fullName: System.Web.UI.ControlCachePolicy.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはコントロールのインスタンスに関連付けられている出力キャッシュ プロバイダーの名前を設定します。"
  remarks: "ProviderName プロパティを使用して、コントロールに関連付けられている現在の出力キャッシュ プロバイダーを指定することができます、<xref:System.Web.UI.ControlCachePolicy>インスタンス</xref:System.Web.UI.ControlCachePolicy>。 このプロパティは前にのみ設定することができます、<xref:System.Web.UI.Control.PreRender>コントロールの有効期間でイベントが発生します</xref:System.Web.UI.Control.PreRender>。"
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: "プロバイダーの名前。"
  overload: System.Web.UI.ControlCachePolicy.ProviderName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "プロバイダー名が見つかりませんでした。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "インストール中または後に、ProviderName プロパティを設定しようとしましたが、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベント。"
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  id: SetExpires(System.DateTime)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetExpires(DateTime)
  nameWithType: ControlCachePolicy.SetExpires(DateTime)
  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>キャッシュ エントリを指定した日付と時刻に有効期限が切れるユーザー コントロールをラップするコントロール。"
  remarks: "SetExpires を使用してと<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>メソッド (渡す`true`) に指示するため、<xref:System.Web.UI.BasePartialCachingControl>キャッシュ絶対有効期限ポリシーではなくポリシー スライド式有効期限を使用するユーザー コントロールをラップするコントロール</xref:System.Web.UI.BasePartialCachingControl></xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>。 SetExpires メソッドを使用して、<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>メソッド (渡す`false`) 絶対有効期限ポリシーを指定します</xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>。"
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and SetExpires methods if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_2_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_2_1.aspx)]"
  syntax:
    content: public void SetExpires (DateTime expirationTime);
    parameters:
    - id: expirationTime
      type: System.DateTime
      description: "A<xref:System.DateTime>キャッシュ エントリが期限切れの後にします</xref:System.DateTime>。"
  overload: System.Web.UI.ControlCachePolicy.SetExpires*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ユーザー コントロールに関連付けられていない、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>はキャッシュされません。"
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  id: SetSlidingExpiration(System.Boolean)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetSlidingExpiration(Boolean)
  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)
  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指示、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>スライディングまたは絶対有効期限を使用するユーザー コントロールのキャッシュ エントリを設定するユーザー コントロールをラップするコントロール。"
  remarks: "使用して、<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>と SetSlidingExpiration メソッド (渡す`true`) に指示するため、<xref:System.Web.UI.BasePartialCachingControl>キャッシュ絶対有効期限ポリシーではなくポリシー スライド式有効期限を使用するユーザー コントロールをラップするコントロール</xref:System.Web.UI.BasePartialCachingControl></xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>。 使用して、<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>メソッドおよび SetSlidingExpiration メソッド (渡す`false`) 絶対有効期限ポリシーを指定します</xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>。"
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. A user control named `SimpleControl` is decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, caching settings are examined during page initialization and changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_8_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_8_1.aspx)]"
  syntax:
    content: public void SetSlidingExpiration (bool useSlidingExpiration);
    parameters:
    - id: useSlidingExpiration
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スライド式キャッシュ有効期限を絶対有効期限の代わりに使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ユーザー コントロールに関連付けられていない、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>はキャッシュされません。"
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  id: SetVaryByCustom(System.String)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetVaryByCustom(String)
  nameWithType: ControlCachePolicy.SetVaryByCustom(String)
  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ユーザー コントロールを変更するため、出力キャッシュに使用するカスタム文字列のリストを設定します。"
  remarks: "として&quot;browser&quot;を渡す場合、`varyByCustom`パラメーター、ブラウザーの種類とメジャー バージョン番号により、ユーザー コントロールが変更されます。 オーバーライドする必要がある別のカスタム文字列が入力した場合、 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A>、アプリケーションの Global.asax ファイル内のメソッド</xref:System.Web.HttpApplication.GetVaryByCustomString%2A>。"
  syntax:
    content: public void SetVaryByCustom (string varyByCustom);
    parameters:
    - id: varyByCustom
      type: System.String
      description: "カスタム文字列のリスト。"
  overload: System.Web.UI.ControlCachePolicy.SetVaryByCustom*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ユーザー コントロールに関連付けられていない、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>はキャッシュされません。"
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching
  id: SupportsCaching
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ユーザー コントロールはキャッシュをサポートするかどうかを示す値を取得します。"
  remarks: "ユーザー コントロールに関連付けられている場合に、キャッシュをサポートしている、 <xref:System.Web.UI.BasePartialCachingControl>ASP.NET パーサーによって、ディレクティブが解析されたかまたはユーザー コントロールがで装飾されたことを示すインスタンス、<xref:System.Web.UI.PartialCachingAttribute>属性</xref:System.Web.UI.PartialCachingAttribute></xref:System.Web.UI.BasePartialCachingControl>。"
  syntax:
    content: public bool SupportsCaching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザー コントロールは、キャッシュをサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCachePolicy.SupportsCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.VaryByControl
  id: VaryByControl
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
  fullName: System.Web.UI.ControlCachePolicy.VaryByControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはによってキャッシュされた出力を変化させるコントロール id の一覧を設定します。"
  syntax:
    content: public string VaryByControl { get; set; }
    return:
      type: System.String
      description: "ユーザー コントロールを変更するために使用する文字列のセミコロンで区切られた一覧には、キャッシュを出力します。 これらの文字列を表す、<xref:System.Web.UI.Control.ID*>ユーザー コントロールでの ASP.NET サーバー コントロールのプロパティ値が宣言されています</xref:System.Web.UI.Control.ID*>。"
  overload: System.Web.UI.ControlCachePolicy.VaryByControl*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The VaryByControl property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.VaryByParams
  id: VaryByParams
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
  fullName: System.Web.UI.ControlCachePolicy.VaryByParams
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得または設定の一覧<xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;></xref>または<xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;></xref>によってキャッシュされた出力を変化させるパラメーターの名前。"
  remarks: "既定では、これらの文字列には、GET メソッドを使用して送信されたクエリ文字列値または POST メソッドを使用して送信されるパラメーターが対応しています。 VaryByParams プロパティが複数のパラメーターに設定されている場合、出力キャッシュには、指定したパラメーターごとに、要求されたドキュメントの別のバージョンが含まれています。 指定できる値は&quot;none&quot;、&quot;*&quot;と有効なクエリ文字列またはポスト パラメーターの名前。"
  syntax:
    content: public System.Web.HttpCacheVaryByParams VaryByParams { get; }
    return:
      type: System.Web.HttpCacheVaryByParams
      description: "出力キャッシュの変更に使用される文字列のセミコロンで区切った一覧。"
  overload: System.Web.UI.ControlCachePolicy.VaryByParams*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ユーザー コントロールに関連付けられていない、 <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;> </xref>はキャッシュされません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.UI.ControlCachePolicy.Cached
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Cached
  nameWithType: ControlCachePolicy.Cached
  fullName: System.Web.UI.ControlCachePolicy.Cached
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlCachePolicy.Dependency
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
  fullName: System.Web.UI.ControlCachePolicy.Dependency
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.Web.UI.ControlCachePolicy.Duration
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Duration
  nameWithType: ControlCachePolicy.Duration
  fullName: System.Web.UI.ControlCachePolicy.Duration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.ControlCachePolicy.ProviderName
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
  fullName: System.Web.UI.ControlCachePolicy.ProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetExpires(DateTime)
  nameWithType: ControlCachePolicy.SetExpires(DateTime)
  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetSlidingExpiration(Boolean)
  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)
  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetVaryByCustom(String)
  nameWithType: ControlCachePolicy.SetVaryByCustom(String)
  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching
- uid: System.Web.UI.ControlCachePolicy.VaryByControl
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
  fullName: System.Web.UI.ControlCachePolicy.VaryByControl
- uid: System.Web.UI.ControlCachePolicy.VaryByParams
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
  fullName: System.Web.UI.ControlCachePolicy.VaryByParams
- uid: System.Web.HttpCacheVaryByParams
  parent: System.Web
  isExternal: false
  name: HttpCacheVaryByParams
  nameWithType: HttpCacheVaryByParams
  fullName: System.Web.HttpCacheVaryByParams
- uid: System.Web.UI.ControlCachePolicy.Cached*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Cached
  nameWithType: ControlCachePolicy.Cached
- uid: System.Web.UI.ControlCachePolicy.Dependency*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
- uid: System.Web.UI.ControlCachePolicy.Duration*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Duration
  nameWithType: ControlCachePolicy.Duration
- uid: System.Web.UI.ControlCachePolicy.ProviderName*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
- uid: System.Web.UI.ControlCachePolicy.SetExpires*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetExpires
  nameWithType: ControlCachePolicy.SetExpires
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetSlidingExpiration
  nameWithType: ControlCachePolicy.SetSlidingExpiration
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetVaryByCustom
  nameWithType: ControlCachePolicy.SetVaryByCustom
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
- uid: System.Web.UI.ControlCachePolicy.VaryByControl*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
- uid: System.Web.UI.ControlCachePolicy.VaryByParams*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
