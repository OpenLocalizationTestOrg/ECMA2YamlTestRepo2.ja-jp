### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ReplicatorActivity
  id: ReplicatorActivity
  children:
  - System.Workflow.Activities.ReplicatorActivity.#ctor
  - System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)
  - System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete
  - System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReplicatorActivity.ChildCompleted
  - System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent
  - System.Workflow.Activities.ReplicatorActivity.ChildInitialized
  - System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent
  - System.Workflow.Activities.ReplicatorActivity.Completed
  - System.Workflow.Activities.ReplicatorActivity.CompletedEvent
  - System.Workflow.Activities.ReplicatorActivity.CurrentChildData
  - System.Workflow.Activities.ReplicatorActivity.CurrentIndex
  - System.Workflow.Activities.ReplicatorActivity.DynamicActivities
  - System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReplicatorActivity.ExecutionType
  - System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty
  - System.Workflow.Activities.ReplicatorActivity.InitialChildData
  - System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty
  - System.Workflow.Activities.ReplicatorActivity.Initialized
  - System.Workflow.Activities.ReplicatorActivity.InitializedEvent
  - System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)
  - System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.ReplicatorActivity.UntilCondition
  - System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty
  langs:
  - csharp
  name: ReplicatorActivity
  nameWithType: ReplicatorActivity
  fullName: System.Workflow.Activities.ReplicatorActivity
  type: Class
  summary: "子アクティビティの複数のインスタンスを実行します。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]ReplicatorActivity がに似ていますが、`for each`コード内のステートメント。 複数の異なるエンティティで同じ関数を繰り返すタスクが表示される場合は、ReplicatorActivity は<xref:System.Workflow.Activities.WhileActivity>.</xref:System.Workflow.Activities.WhileActivity>より優れたソリューションと可能性があります。       既定では、すべての子インスタンスが完了すると、ReplicatorActivity が完了しました。 この動作は、アクティビティが終了したときに使用するカスタム条件を上書きできます。 この条件の評価が場合`true`すべての子の前に、のインスタンスが完了した後、任意の実行中で未完了の子インスタンスが取り消されました。"
  example:
  - "The following code example shows how to create a new instance of the ReplicatorActivity class and define a handler for the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event. This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#177](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#177)]\n [!code-vb[wf_samples#177](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#177)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Initialized")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReplicatorDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReplicatorActivity), "Resources.Replicator.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReplicatorValidator))]

      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]

      public sealed class ReplicatorActivity : System.Workflow.ComponentModel.CompositeActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ReplicatorActivity()
  nameWithType: ReplicatorActivity.ReplicatorActivity()
  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ReplicatorActivity> class.  This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public ReplicatorActivity ();
    parameters: []
  overload: System.Workflow.Activities.ReplicatorActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ReplicatorActivity(String)
  nameWithType: ReplicatorActivity.ReplicatorActivity(String)
  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>クラス、アクティビティの名前を使用します。"
  syntax:
    content: public ReplicatorActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "アクティビティのユーザー定義の名前。"
  overload: System.Workflow.Activities.ReplicatorActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete
  id: AllChildrenComplete
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: AllChildrenComplete
  nameWithType: ReplicatorActivity.AllChildrenComplete
  fullName: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "すべての子インスタンスが完了するかどうかを示す値を取得します。"
  remarks: "このプロパティにより、<xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A>ライターを独自のコレクションを管理したり、動的アクティビティ セットを評価せずにこの情報を取得する簡単な方法です</xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A>。"
  syntax:
    content: public bool AllChildrenComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての子インスタンスがある場合は完了です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReplicatorActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReplicatorActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "追加します。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "追加します。"
  overload: System.Workflow.Activities.ReplicatorActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompleted
  id: ChildCompleted
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ChildCompleted
  nameWithType: ReplicatorActivity.ChildCompleted
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompleted
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "直後、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>子の実行が完了するアクティビティ インスタンス。"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs> ChildCompleted;
    return:
      type: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent
  id: ChildCompletedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ChildCompletedEvent
  nameWithType: ReplicatorActivity.ChildCompletedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "発生したときに、子アクティビティ インスタンスの<xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;></xref>が完了しました。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ChildCompletedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitialized
  id: ChildInitialized
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ChildInitialized
  nameWithType: ReplicatorActivity.ChildInitialized
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitialized
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "子アクティビティが初期化された直後後に発生します。"
  remarks: "サブスクライブして場合このイベントは、内のアイテムの子アクティビティのインスタンスが作成されるたびに、`Children`コレクション。 `Children`によって設定されているコレクション、<xref:System.Workflow.Activities.ReplicatorChildEventArgs>の<xref:System.Workflow.Activities.ReplicatorActivity.Initialized>イベント ハンドラー</xref:System.Workflow.Activities.ReplicatorActivity.Initialized> </xref:System.Workflow.Activities.ReplicatorChildEventArgs> 。 子<xref:System.Workflow.ComponentModel.Activity>インスタンスが、呼び出しに渡されるように、<xref:System.Workflow.Activities.ReplicatorActivity>子の値を設定することができます</xref:System.Workflow.Activities.ReplicatorActivity></xref:System.Workflow.ComponentModel.Activity>。 関連する<xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A>オブジェクトから、`Children`もコレクションが渡されます</xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A>。"
  example:
  - "The following code example shows how to set the value of the ChildInitialized event. This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs> ChildInitialized;
    return:
      type: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent
  id: ChildInitializedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ChildInitializedEvent
  nameWithType: ReplicatorActivity.ChildInitializedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "発生したときに、子アクティビティ インスタンスの<xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;></xref>が初期化されます。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ChildInitializedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.Completed
  id: Completed
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: Completed
  nameWithType: ReplicatorActivity.Completed
  fullName: System.Workflow.Activities.ReplicatorActivity.Completed
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "発生したときに、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>が完了します。"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.CompletedEvent
  id: CompletedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: CompletedEvent
  nameWithType: ReplicatorActivity.CompletedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.CompletedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "発生したときに、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>が完了しました。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData
  id: CurrentChildData
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: CurrentChildData
  nameWithType: ReplicatorActivity.CurrentChildData
  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentChildData
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "すべての子アクティビティの一覧を返します。"
  syntax:
    content: public System.Collections.IList CurrentChildData { get; }
    return:
      type: System.Collections.IList
      description: "すべての子アクティビティの一覧。"
  overload: System.Workflow.Activities.ReplicatorActivity.CurrentChildData*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex
  id: CurrentIndex
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: CurrentIndex
  nameWithType: ReplicatorActivity.CurrentIndex
  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentIndex
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "現在の子アクティビティのインデックス位置を取得します。"
  syntax:
    content: public int CurrentIndex { get; }
    return:
      type: System.Int32
      description: "現在の子アクティビティのインデックス位置。"
  overload: System.Workflow.Activities.ReplicatorActivity.CurrentIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities
  id: DynamicActivities
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: DynamicActivities
  nameWithType: ReplicatorActivity.DynamicActivities
  fullName: System.Workflow.Activities.ReplicatorActivity.DynamicActivities
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "実行中の子アクティビティ インスタンスの配列を取得します。"
  remarks: "このプロパティによって返されるアクティビティ インスタンスは、 <xref:System.Workflow.Activities.ReplicatorActivity>。</xref:System.Workflow.Activities.ReplicatorActivity>内に含まれるアクティビティ タイプのインスタンス 場合、<xref:System.Workflow.Activities.ReplicatorActivity>が実行されている配列が&2; つ以上のアクティビティを含むシーケンス モードで以外の場合は、配列が現在実行されているすべてのインスタンスを含む並列モードで実行されている場合</xref:System.Workflow.Activities.ReplicatorActivity>。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity> DynamicActivities { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}
      description: "現在実行中の子アクティビティ インスタンスの配列。"
  overload: System.Workflow.Activities.ReplicatorActivity.DynamicActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ReplicatorActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReplicatorActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "追加します。"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "追加します。"
  overload: System.Workflow.Activities.ReplicatorActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType
  id: ExecutionType
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ExecutionType
  nameWithType: ReplicatorActivity.ExecutionType
  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得または設定、 <xref href=&quot;System.Workflow.Activities.ExecutionType&quot;> </xref>の<xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;></xref>です。"
  remarks: ''
  example:
  - "The following sample shows setting the `ExecutionType` property. This sample is from the Simple Replicator SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Replicator Sample](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#180](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#180)]\n [!code-vb[wf_samples#180](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#180)]"
  syntax:
    content: public System.Workflow.Activities.ExecutionType ExecutionType { get; set; }
    return:
      type: System.Workflow.Activities.ExecutionType
      description: "The <xref href=&quot;System.Workflow.Activities.ExecutionType&quot;></xref> for the <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;></xref>."
  overload: System.Workflow.Activities.ReplicatorActivity.ExecutionType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty
  id: ExecutionTypeProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: ExecutionTypeProperty
  nameWithType: ReplicatorActivity.ExecutionTypeProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表す、 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>を対象とする、<xref:System.Workflow.Activities.ReplicatorActivity.ExecutionType*>プロパティ</xref:System.Workflow.Activities.ReplicatorActivity.ExecutionType*>。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutionTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData
  id: InitialChildData
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: InitialChildData
  nameWithType: ReplicatorActivity.InitialChildData
  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildData
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得または子アクティビティ データの一覧を設定します。"
  syntax:
    content: public System.Collections.IList InitialChildData { get; set; }
    return:
      type: System.Collections.IList
      description: "子アクティビティ データの一覧。"
  overload: System.Workflow.Activities.ReplicatorActivity.InitialChildData*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty
  id: InitialChildDataProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: InitialChildDataProperty
  nameWithType: ReplicatorActivity.InitialChildDataProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表す、 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>を対象とする、<xref:System.Workflow.Activities.ReplicatorActivity.InitialChildData*>プロパティ</xref:System.Workflow.Activities.ReplicatorActivity.InitialChildData*>。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitialChildDataProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.Initialized
  id: Initialized
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: Initialized
  nameWithType: ReplicatorActivity.Initialized
  fullName: System.Workflow.Activities.ReplicatorActivity.Initialized
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "発生したときに、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>が実行を開始します。"
  remarks: ''
  example:
  - "The following code example shows how to set the value of the Initialized event. This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public event EventHandler Initialized;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.InitializedEvent
  id: InitializedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: InitializedEvent
  nameWithType: ReplicatorActivity.InitializedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.InitializedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表す、 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>を対象とする、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity.Initialized&quot;> </xref>イベント。"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitializedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)
  id: IsExecuting(System.Int32)
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: IsExecuting(Int32)
  nameWithType: ReplicatorActivity.IsExecuting(Int32)
  fullName: System.Workflow.Activities.ReplicatorActivity.IsExecuting(Int32)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "指定された子アクティビティが現在実行中かどうかを示します。"
  syntax:
    content: public bool IsExecuting (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "子アクティビティのインデックス位置。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、子アクティビティが実行中です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Workflow.Activities.ReplicatorActivity.IsExecuting*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: ReplicatorActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ReplicatorActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "追加します。"
  overload: System.Workflow.Activities.ReplicatorActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition
  id: UntilCondition
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: UntilCondition
  nameWithType: ReplicatorActivity.UntilCondition
  fullName: System.Workflow.Activities.ReplicatorActivity.UntilCondition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "取得または設定のタイミングを示す完了条件、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>完了する必要があります。"
  remarks: "この既定条件は、のすべての子インスタンスを完了する必要があります、<xref:System.Workflow.Activities.ReplicatorActivity>を完了できます</xref:System.Workflow.Activities.ReplicatorActivity>。       同様、 <xref:System.Workflow.Activities.ConditionedActivityGroup>、ルールの条件またはコード条件を使用して完了条件を指定することができます</xref:System.Workflow.Activities.ConditionedActivityGroup>。"
  example:
  - "The following code example shows how to set the value of the UntilCondition property to `null`, which means the `ReplicatorActivity` never closes. This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using Replicator](http://msdn.microsoft.com/en-us/4e35f26b-cf12-4c04-9d25-9ceb958f2858).  \n  \n [!code-cs[wf_samples#178](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#178)]\n [!code-vb[wf_samples#178](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#178)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }
    return:
      type: System.Workflow.ComponentModel.ActivityCondition
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;> </xref>を決定するかどうか、 <xref href=&quot;System.Workflow.Activities.ReplicatorActivity&quot;> </xref>が終了します。"
  overload: System.Workflow.Activities.ReplicatorActivity.UntilCondition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty
  id: UntilConditionProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  langs:
  - csharp
  name: UntilConditionProperty
  nameWithType: ReplicatorActivity.UntilConditionProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "表す、 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref>を対象とする、<xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition*>プロパティ</xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition*>。"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.Activities.ReplicatorActivity.#ctor
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ReplicatorActivity()
  nameWithType: ReplicatorActivity.ReplicatorActivity()
  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity()
- uid: System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ReplicatorActivity(String)
  nameWithType: ReplicatorActivity.ReplicatorActivity(String)
  fullName: System.Workflow.Activities.ReplicatorActivity.ReplicatorActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: AllChildrenComplete
  nameWithType: ReplicatorActivity.AllChildrenComplete
  fullName: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReplicatorActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReplicatorActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompleted
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ChildCompleted
  nameWithType: ReplicatorActivity.ChildCompleted
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompleted
- uid: System.EventHandler{System.Workflow.Activities.ReplicatorChildEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ReplicatorChildEventArgs>
  nameWithType: EventHandler<ReplicatorChildEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.ReplicatorChildEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.ReplicatorChildEventArgs
    name: ReplicatorChildEventArgs
    nameWithType: ReplicatorChildEventArgs
    fullName: ReplicatorChildEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ChildCompletedEvent
  nameWithType: ReplicatorActivity.ChildCompletedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitialized
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ChildInitialized
  nameWithType: ReplicatorActivity.ChildInitialized
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitialized
- uid: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ChildInitializedEvent
  nameWithType: ReplicatorActivity.ChildInitializedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent
- uid: System.Workflow.Activities.ReplicatorActivity.Completed
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Completed
  nameWithType: ReplicatorActivity.Completed
  fullName: System.Workflow.Activities.ReplicatorActivity.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.Activities.ReplicatorActivity.CompletedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: CompletedEvent
  nameWithType: ReplicatorActivity.CompletedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.CompletedEvent
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: CurrentChildData
  nameWithType: ReplicatorActivity.CurrentChildData
  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentChildData
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: CurrentIndex
  nameWithType: ReplicatorActivity.CurrentIndex
  fullName: System.Workflow.Activities.ReplicatorActivity.CurrentIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: DynamicActivities
  nameWithType: ReplicatorActivity.DynamicActivities
  fullName: System.Workflow.Activities.ReplicatorActivity.DynamicActivities
- uid: System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Activity>
  nameWithType: ICollection<Activity>
  fullName: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Workflow.ComponentModel.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ReplicatorActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReplicatorActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ExecutionType
  nameWithType: ReplicatorActivity.ExecutionType
  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionType
- uid: System.Workflow.Activities.ExecutionType
  parent: System.Workflow.Activities
  isExternal: false
  name: ExecutionType
  nameWithType: ExecutionType
  fullName: System.Workflow.Activities.ExecutionType
- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ExecutionTypeProperty
  nameWithType: ReplicatorActivity.ExecutionTypeProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty
- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: InitialChildData
  nameWithType: ReplicatorActivity.InitialChildData
  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildData
- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: InitialChildDataProperty
  nameWithType: ReplicatorActivity.InitialChildDataProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty
- uid: System.Workflow.Activities.ReplicatorActivity.Initialized
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Initialized
  nameWithType: ReplicatorActivity.Initialized
  fullName: System.Workflow.Activities.ReplicatorActivity.Initialized
- uid: System.Workflow.Activities.ReplicatorActivity.InitializedEvent
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: InitializedEvent
  nameWithType: ReplicatorActivity.InitializedEvent
  fullName: System.Workflow.Activities.ReplicatorActivity.InitializedEvent
- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: IsExecuting(Int32)
  nameWithType: ReplicatorActivity.IsExecuting(Int32)
  fullName: System.Workflow.Activities.ReplicatorActivity.IsExecuting(Int32)
- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: ReplicatorActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ReplicatorActivity.OnClosed(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: UntilCondition
  nameWithType: ReplicatorActivity.UntilCondition
  fullName: System.Workflow.Activities.ReplicatorActivity.UntilCondition
- uid: System.Workflow.ComponentModel.ActivityCondition
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCondition
  nameWithType: ActivityCondition
  fullName: System.Workflow.ComponentModel.ActivityCondition
- uid: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: UntilConditionProperty
  nameWithType: ReplicatorActivity.UntilConditionProperty
  fullName: System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty
- uid: System.Workflow.Activities.ReplicatorActivity.#ctor*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ReplicatorActivity
  nameWithType: ReplicatorActivity.ReplicatorActivity
- uid: System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: AllChildrenComplete
  nameWithType: ReplicatorActivity.AllChildrenComplete
- uid: System.Workflow.Activities.ReplicatorActivity.Cancel*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Cancel
  nameWithType: ReplicatorActivity.Cancel
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentChildData*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: CurrentChildData
  nameWithType: ReplicatorActivity.CurrentChildData
- uid: System.Workflow.Activities.ReplicatorActivity.CurrentIndex*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: CurrentIndex
  nameWithType: ReplicatorActivity.CurrentIndex
- uid: System.Workflow.Activities.ReplicatorActivity.DynamicActivities*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: DynamicActivities
  nameWithType: ReplicatorActivity.DynamicActivities
- uid: System.Workflow.Activities.ReplicatorActivity.Execute*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: Execute
  nameWithType: ReplicatorActivity.Execute
- uid: System.Workflow.Activities.ReplicatorActivity.ExecutionType*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: ExecutionType
  nameWithType: ReplicatorActivity.ExecutionType
- uid: System.Workflow.Activities.ReplicatorActivity.InitialChildData*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: InitialChildData
  nameWithType: ReplicatorActivity.InitialChildData
- uid: System.Workflow.Activities.ReplicatorActivity.IsExecuting*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: IsExecuting
  nameWithType: ReplicatorActivity.IsExecuting
- uid: System.Workflow.Activities.ReplicatorActivity.OnClosed*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: OnClosed
  nameWithType: ReplicatorActivity.OnClosed
- uid: System.Workflow.Activities.ReplicatorActivity.UntilCondition*
  parent: System.Workflow.Activities.ReplicatorActivity
  isExternal: false
  name: UntilCondition
  nameWithType: ReplicatorActivity.UntilCondition
