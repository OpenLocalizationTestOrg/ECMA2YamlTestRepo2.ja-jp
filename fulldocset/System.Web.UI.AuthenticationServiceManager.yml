### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AuthenticationServiceManager
  id: AuthenticationServiceManager
  children:
  - System.Web.UI.AuthenticationServiceManager.#ctor
  - System.Web.UI.AuthenticationServiceManager.Path
  langs:
  - csharp
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager
  fullName: System.Web.UI.AuthenticationServiceManager
  type: Class
  summary: "認証サービスのカスタム実装の場所を構成します。"
  remarks: "AuthenticationServiceManager クラスに対応して、<xref:System.Web.UI.ScriptManager.AuthenticationService%2A>のプロパティ、<xref:System.Web.UI.ScriptManager>または<xref:System.Web.UI.ScriptManagerProxy>コントロール</xref:System.Web.UI.ScriptManagerProxy></xref:System.Web.UI.ScriptManager></xref:System.Web.UI.ScriptManager.AuthenticationService%2A>。       AJAX 対応アプリケーションでは、ログオンし、クライアント スクリプトからログオフに認証 Web サービスを使用しています。 AuthenticationServiceManager を使用すると、認証 Web サービスは ASP.NET の AJAX 機能によって提供される組み込みの Web サービスを使用する代わりに、別の実装のパスを指定します。       アプリケーションの認証サービスを使用するには、構成ファイルで有効にする必要があります。 組み込みの Web サービスの認証を使用する場合、ページ上で、認証サービス マネージャーを明示的に宣言するはありません。       独自の認証サービスを作成するには、次の&2; つのメソッドを持つ Web サービスを実装する必要があります:`Login`と`Logout`です。 さらに、これらのメソッドでは、組み込みの認証 Web サービスと同じ署名が必要です。       次の例では、カスタム認証 Web サービス クラスで実装する必要がある基本クラス構造を示します。       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]カスタム認証 Web サービスを使用することができますサービスを追加する、宣言によってマークアップを含めることによって、`<AuthenticationService>`内の要素、`<asp:ScriptManager>`要素] ページで、次の例で示すようにします。      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <AuthenticationService Path=&quot;MyAuthenticationService.asmx&quot; />   </asp:ScriptManager>   ```プログラムによって構成できる<xref:System.Web.UI.AuthenticationServiceManager.Path%2A>カスタム認証 Web サービスを使用します</xref:System.Web.UI.AuthenticationServiceManager.Path%2A>。       関係なくがかどうか、認証サービスの宣言セクション ページで、認証サービスが有効な場合、構成ファイルでは、AJAX 対応アプリケーションがレンダリングされるページで、ECMAScript (JavaScript) 変数が含まれます。 これにより、クライアント スクリプトを現在のユーザーが認証されたかどうかを判断できます。"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class AuthenticationServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;> </xref>クラスです。"
  syntax:
    content: public AuthenticationServiceManager ();
    parameters: []
  overload: System.Web.UI.AuthenticationServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.Path
  id: Path
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "取得または認証サービスへのパスを設定します。"
  remarks: "Path プロパティが設定されていない場合、戻り値は<xref:System.String?displayProperty=fullName>。</xref:System.String?displayProperty=fullName> この例では、asp.net AJAX 機能は、次の内部の既定のパスに対応する Web サービスの組み込みの認証を使用: ~/ScriptServices_AuthenticationService.asmx です。 パスを空の値に設定した場合、同じ動作が発生するか、`null`です。       パスを指定することができます、<xref:System.Web.UI.ScriptManager>コントロールまたは関連付けられている<xref:System.Web.UI.ScriptManagerProxy>コントロール</xref:System.Web.UI.ScriptManagerProxy></xref:System.Web.UI.ScriptManager>。 パスを設定すると、<xref:System.Web.UI.ScriptManagerProxy>レベル、次の警告が適用されます-コントロールの階層に複数のプロキシがある場合は、パスを各プロキシ インスタンスに設定するにはありません。</xref:System.Web.UI.ScriptManagerProxy> 。      場合、パスは、プロキシ インスタンスで明示的に設定されて、値は、このプロパティが明示的に設定された他のすべてのプロキシの同じにする必要があります。"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "カスタム認証 Web サービスのパス。"
  overload: System.Web.UI.AuthenticationServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1 つ以上の一意のパスは、コントロールの階層構造で設定されました。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
- uid: System.Web.UI.AuthenticationServiceManager.Path
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AuthenticationServiceManager.#ctor*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager
- uid: System.Web.UI.AuthenticationServiceManager.Path*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
