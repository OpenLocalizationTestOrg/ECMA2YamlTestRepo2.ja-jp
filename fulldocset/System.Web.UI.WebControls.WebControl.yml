### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebControl
  id: WebControl
  children:
  - System.Web.UI.WebControls.WebControl.#ctor
  - System.Web.UI.WebControls.WebControl.#ctor(System.String)
  - System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  langs:
  - csharp
  name: WebControl
  nameWithType: WebControl
  fullName: System.Web.UI.WebControls.WebControl
  type: Class
  summary: "すべてのコントロールにメソッド、プロパティ、および共通のイベントを定義する基底クラスとして機能、 <xref href=&quot;System.Web.UI.WebControls&quot;> </xref>名前空間。"
  remarks: "WebControl クラスは、プロパティ、メソッド、およびすべての Web サーバー コントロールに共通するイベントを提供します。 このクラスで定義されているプロパティを設定して、Web サーバー コントロールの動作と外観を制御できます。 使用して、コントロールのフォントの色と背景色を制御するなど、<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>と<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A></xref:System.Web.UI.WebControls.WebControl.BackColor%2A>。 枠線を表示できるコントロールを制御できます境界線の幅、罫線のスタイル、および境界線の色を設定して、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>、および<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.BorderColor%2A></xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A></xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>。 使用して、Web サーバー コントロールのサイズを指定することができます、<xref:System.Web.UI.WebControls.WebControl.Height%2A>と<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.Width%2A></xref:System.Web.UI.WebControls.WebControl.Height%2A>。       コントロールの動作は、特定のプロパティを設定して指定できます。 有効にして設定して、コントロールを無効にすることができます、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。 タブ オーダー内のコントロールの場所は、設定によって制御されます、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>。 設定して、コントロールにツールヒントを指定できます、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>。      > [!NOTE] > いないすべてのコントロールは、このクラスで定義されているすべてのプロパティをサポートします。 詳細については、プロパティはサポートされているかどうか、特定のコントロールのドキュメントを参照してください。      > [!NOTE] > では、このクラスのプロパティが、ブラウザーによって異なる方法で表示します。 Render、他のユーザーがある影響しない中に、いくつかのプロパティが、まったく表示されません。 <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>のプロパティ、<xref:System.Web.HttpBrowserCapabilities>オブジェクトは、Web サーバー コントロールのレンダリング方法を決定します</xref:System.Web.HttpBrowserCapabilities></xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>。 HTML 4.0 をサポートしているブラウザーの場合、<xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>プロパティには、通常<xref:System.Web.HttpBrowserCapabilities>HTML 4.0 のスタイル属性を使用して、オブジェクト、およびほとんどのプロパティがレンダリングされます</xref:System.Web.HttpBrowserCapabilities></xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>。 HTML 4.0 のサポートに認識されていないブラウザーを使用して、<xref:System.Web.UI.Html32TextWriter>オブジェクト</xref:System.Web.UI.Html32TextWriter>。 スタイル属性は、関連する HTML 3.2 タグ属性をこの自動的にマッピングされます。 場合によってなどの<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>プロパティ、スタイルの属性に変換されます、付加的なタグなど`<font>`タグ</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>。 場合によってがありますいないマッピングを実行します。 さまざまなブラウザーでプロパティを表示する方法の詳細については、特定のプロパティのマニュアルを参照してください。       WebControl のインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>コンス トラクター。</xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> 。"
  example:
  - >-
    [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_324_1.cs)]
     [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_324_1.vb)]
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.Themeable(true)]

      public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl()
  nameWithType: WebControl.WebControl()
  fullName: System.Web.UI.WebControls.WebControl.WebControl()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>を表すクラス、 <xref uid=&quot;langword_csharp_Span&quot; name=&quot;Span&quot; href=&quot;&quot;> </xref> HTML タグ。"
  remarks: "このコンス トラクターはの新しいインスタンスを初期化するために使用される、<xref:System.Web.UI.WebControls.WebControl>を表すクラス、 `Span` HTML 要素です</xref:System.Web.UI.WebControls.WebControl>。       次の表は、 <xref:System.Web.UI.WebControls.WebControl>。</xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag>列挙値です |。     > [!NOTE] > このコンス トラクターは直接呼び出されません</xref:System.Web.UI.HtmlTextWriterTag>。 代わりに、通常は呼び出さ初期化するために派生クラスのコンス トラクターによって、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>プロパティを<xref:System.Web.UI.HtmlTextWriterTag>列挙値</xref:System.Web.UI.HtmlTextWriterTag></xref:System.Web.UI.WebControls.WebControl.TagKey%2A>。"
  syntax:
    content: protected WebControl ();
    parameters: []
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl(String)
  nameWithType: WebControl.WebControl(String)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>クラスの指定された HTML タグを使用します。"
  remarks: "このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.WebControl>クラスの指定された HTML タグを使用します</xref:System.Web.UI.WebControls.WebControl>。       次の表は、 <xref:System.Web.UI.WebControls.WebControl>。</xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag>列挙値です |。  |`TagName`|値、`tag`パラメーターです |。     > [!NOTE] > このコンス トラクターは直接呼び出されません</xref:System.Web.UI.HtmlTextWriterTag>。 代わりに、通常は呼び出さ初期化するために派生クラスのコンス トラクターによって、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>と<xref:System.Web.UI.WebControls.WebControl.TagName%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.TagName%2A></xref:System.Web.UI.WebControls.WebControl.TagKey%2A>。"
  syntax:
    content: protected WebControl (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "HTML タグ。"
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  id: '#ctor(System.Web.UI.HtmlTextWriterTag)'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl(HtmlTextWriterTag)
  nameWithType: WebControl.WebControl(HtmlTextWriterTag)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>クラスの指定された HTML タグを使用します。"
  remarks: "このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.WebControl>クラス<xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName>値</xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName></xref:System.Web.UI.WebControls.WebControl>。       次の表は、 <xref:System.Web.UI.WebControls.WebControl>。</xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag>によって指定された列挙値、`tag`のパラメーターです |</xref:System.Web.UI.HtmlTextWriterTag> 。"
  example:
  - "The following example demonstrates how to use the constructor for the <xref:System.Web.UI.WebControls.WebControl> class to create a `TextArea` HTML element and display it on the Web Forms page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx file name extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.WebControl Example#1](~/add/codesnippet/csharp/f14f48ff-56ff-441a-acce-_1.aspx)]\n [!code-vb[Classic WebControl.WebControl Example#1](~/add/codesnippet/visualbasic/f14f48ff-56ff-441a-acce-_1.aspx)]"
  syntax:
    content: public WebControl (System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "1 つ、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.AccessKey
  id: AccessKey
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: AccessKey
  nameWithType: WebControl.AccessKey
  fullName: System.Web.UI.WebControls.WebControl.AccessKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールにすばやく移動できるようにするアクセス キーを設定します。"
  remarks: "AccessKey プロパティを使用すると、Web サーバー コントロールのキーボード ショートカットを指定できます。 これにより、キーボードの ALT キーと指定した文字のキーを押して、コントロールにすばやく移動することができます。 たとえば、コントロールのアクセス キーを文字列に設定`&quot;D&quot;`ALT キーを押しながら D キーを押して、ユーザーがコントロールに移動できることを示します。       AccessKey プロパティに&1; つの文字列のみが許可されます。 このプロパティはどちらも値を設定しようとする場合`null`、 <xref:System.String>、単一の文字の文字列では、例外がスローされても</xref:System.String>。      > [!NOTE] > 以降 Internet Explorer 4.0 でのみ、このプロパティはサポートされています。"
  example:
  - "The following example illustrates how to set and use the AccessKey property of a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.AccessKey Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_842_1.aspx)]\n [!code-vb[Classic WebControl.AccessKey Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_842_1.aspx)]"
  syntax:
    content: public virtual string AccessKey { get; set; }
    return:
      type: System.String
      description: "Web サーバー コントロールにすばやく移動のアクセス キー。 既定値は<xref:System.String>、このプロパティが設定されていないことを示します</xref:System.String>。"
  overload: System.Web.UI.WebControls.WebControl.AccessKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定したアクセス キーはどちらも<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.String>も&1; つの文字列</xref:System.String>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "HTML 属性およびスタイルをレンダリングする必要がある追加を指定した<xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref>です。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "クライアント上の Web サーバー コントロールの属性およびスタイルを表示するために通常を呼び出す、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName>それぞれを挿入するメソッドの属性およびスタイル指定に個別に、<xref:System.Web.UI.HtmlTextWriter>出力ストリーム</xref:System.Web.UI.HtmlTextWriter></xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName></xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>。 このメソッドをプロセスを簡略化には、すべての呼び出しをカプセル化、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName>すべての属性と、Web サーバー コントロールに関連付けられたスタイル</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName></xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName>。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter>1 つのメソッドの呼び出しでストリームを出力します</xref:System.Web.UI.HtmlTextWriter>。 このメソッドは、適切な属性と<xref:System.Web.UI.HtmlTextWriter>クラスの出力ストリーム</xref:System.Web.UI.HtmlTextWriter>にスタイルを挿入する派生クラス内でコントロールの開発者によってオーバーライド通常      > [!NOTE] >、AddAttributesToRender メソッドは、クライアント スクリプトを挿入を使用することはできません。 クライアント スクリプトを使用して、<xref:System.Web.UI.ClientScriptManager>クラス</xref:System.Web.UI.ClientScriptManager>を参照してください。"
  example:
  - "The following example demonstrates how to create a class that derives from the <xref:System.Web.UI.WebControls.WebControl> class. The base implementation of the AddAttributesToRender method is overridden to add attributes appropriate to the derived class in the <xref:System.Web.UI.HtmlTextWriter> output stream.  \n  \n [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/d4294fb1-e347-43c5-b4eb-_1.cs)]\n [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/d4294fb1-e347-43c5-b4eb-_1.vb)]"
  syntax:
    content: protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.WebControl.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  id: ApplyStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ApplyStyle(Style)
  nameWithType: WebControl.ApplyStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Web コントロールは、コントロールの既存のスタイル要素を上書きするのには、指定したスタイルの空白以外の要素をコピーします。 このメソッドは主に、コントロールの開発者によって使用されます。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the ApplyStyle method to apply a style to a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebControlApplyStyle#1](~/add/codesnippet/csharp/7479ba8d-e90a-4a61-ae1c-_1.aspx)]\n [!code-vb[WebControlApplyStyle#1](~/add/codesnippet/visualbasic/7479ba8d-e90a-4a61-ae1c-_1.aspx)]"
  syntax:
    content: public void ApplyStyle (System.Web.UI.WebControls.Style s);
    parameters:
    - id: s
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>をコピーするスタイルを表すです。"
  overload: System.Web.UI.WebControls.WebControl.ApplyStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Attributes
  id: Attributes
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Attributes
  nameWithType: WebControl.Attributes
  fullName: System.Web.UI.WebControls.WebControl.Attributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "(表示専用) の任意の属性のコレクションを取得するコントロールのプロパティに対応していないこと。"
  remarks: "属性コレクションには、Web サーバー コントロールの開始タグで宣言されているすべての属性のコレクションが含まれています。 これにより、Web サーバー コントロールに関連付けられている属性をプログラムで制御できます。 コレクションに属性を追加したり、コレクションから属性を削除することができます。      > [!NOTE] > このプロパティは、ブラウザーの設定に関係なく、コントロールの開始タグ内のコレクションのすべての属性と共に表示されます。 すべてのブラウザーでは、表示されるすべての属性をサポートします。 サポートされていない属性は通常、ブラウザーで無視されます。      > [!NOTE] > をクライアント側スクリプトを追加することはできません、<xref:System.Web.UI.WebControls.WebControl>属性コレクションを使用してインスタンスします</xref:System.Web.UI.WebControls.WebControl>。 クライアント側スクリプトを追加するには、使用、<xref:System.Web.UI.Page.ClientScript%2A>プロパティを<xref:System.Web.UI.Page>コントロール</xref:System.Web.UI.Page></xref:System.Web.UI.Page.ClientScript%2A>。"
  example:
  - "The following example illustrates how the Attributes property of a <xref:System.Web.UI.WebControls.WebControl> can be used to run a JavaScript command when the <xref:System.Web.UI.WebControls.TextBox> control loses focus.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1256_1.aspx)]\n [!code-cs[Classic WebControl.Attributes Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1256_1.aspx)]"
  syntax:
    content: public System.Web.UI.AttributeCollection Attributes { get; }
    return:
      type: System.Web.UI.AttributeCollection
      description: "A <xref href=&quot;System.Web.UI.AttributeCollection&quot;> </xref>の名前と値のペア。"
  overload: System.Web.UI.WebControls.WebControl.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BackColor
  id: BackColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BackColor
  nameWithType: WebControl.BackColor
  fullName: System.Web.UI.WebControls.WebControl.BackColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの背景色を設定します。"
  remarks: "BackColor プロパティを使用すると、Web サーバー コントロールの背景色を指定できます。 このプロパティを使用して、<xref:System.Drawing.Color?displayProperty=fullName>オブジェクト</xref:System.Drawing.Color?displayProperty=fullName>。      > [!NOTE] > このプロパティは、特定のコントロールに表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>このプロパティを表示します</xref:System.Web.UI.WebControls.ValidationSummary></xref:System.Web.UI.WebControls.Calendar></xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.Panel></xref:System.Web.UI.WebControls.Table>。 に対しては機能も<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>場合その`RepeatLayout`プロパティは`RepeatLayout.Table`ではなく、 `RepeatLayout.Flow`</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList> 。       一般に、その出力でのみ制御、`<table>`タグは、ほとんどのコントロールが HTML 4.0 でできる一方に、HTML 3.2 での背景色を表示できます。       としてレンダリングするコントロールの`<span>`タグ (など<xref:System.Web.UI.WebControls.Label>すべて、検証コントロール、およびリスト コントロールとその`RepeatLayout`プロパティに設定`RepeatLayout.Flow`)、このプロパティは、Microsoft Internet Explorer version 4 ではなく Microsoft Internet Explorer 5 以降のバージョンでは動作します</xref:System.Web.UI.WebControls.Label>。"
  example:
  - "The following example illustrates how to set the BackColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-vb[Classic WebControl.BackColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[Classic WebControl.BackColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>コントロールの背景色を表すです。 既定値は<xref href=&quot;System.Drawing.Color&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.WebControl.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderColor
  id: BorderColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderColor
  nameWithType: WebControl.BorderColor
  fullName: System.Web.UI.WebControls.WebControl.BorderColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web コントロールの境界線の色を設定します。"
  remarks: "BorderColor プロパティを使用すると、Web サーバー コントロールの境界線の色を指定できます。 このプロパティを使用して、<xref:System.Drawing.Color>オブジェクト</xref:System.Drawing.Color>。      > [!NOTE] > BorderColor プロパティがのみ特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>コントロールは、このプロパティが表示されます</xref:System.Web.UI.WebControls.ValidationSummary></xref:System.Web.UI.WebControls.Calendar></xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.Panel></xref:System.Web.UI.WebControls.Table>。 に対しては機能も、 <xref:System.Web.UI.WebControls.CheckBoxList>、 <xref:System.Web.UI.WebControls.RadioButtonList>、および<xref:System.Web.UI.WebControls.DataList>されている場合、制御、`RepeatLayout`プロパティに設定されている`RepeatLayout.Table`ではなく、 `RepeatLayout.Flow`</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList> 。 ただし、これは、`bordercolor`属性には、HTML 3.2 規格の一部ではありません。 `bordercolor`属性は、Microsoft Internet Explorer version 3.0 以降ですがほとんどないその他のブラウザーの動作です。       BorderColor プロパティが設定されていないときに、ブラウザーはその既定の罫線の色を使用します。 既定の配色を判断するのには、ブラウザーを参照してください。"
  example:
  - "The following example illustrates how to set the BorderColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[Classic WebControl.BorderColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_3.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color BorderColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>を表すコントロールの境界線の色。 既定値は<xref href=&quot;System.Drawing.Color&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.WebControl.BorderColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderStyle
  id: BorderStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
  fullName: System.Web.UI.WebControls.WebControl.BorderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの境界線スタイルを設定します。"
  remarks: "BorderStyle プロパティを使用すると、Web サーバー コントロールの境界線スタイルを指定できます。 このプロパティのいずれかを使用して、<xref:System.Web.UI.WebControls.BorderStyle>列挙値</xref:System.Web.UI.WebControls.BorderStyle>。 次の表は、使用可能な値を一覧表示します。      |境界線スタイル |説明 |  |------------------|-----------------|  |`NotSet`|罫線のスタイルが設定されていません |。  |`None`|境界線なし |  |`Dotted`|点線の枠線 |。  |`Dashed`|点線 |。  |`Solid`|実線の境界線 |。  |`Double`|二重実線の境界線 |。  |`Groove`|浮き彫り罫線の外観のくぼんだ罫線 |。  |`Ridge`|浮き出し罫線の外観のための罫線 |。  |`Inset`|インセット枠線のくぼみコントロールの外観にします |。  |`Outset`|発生したコントロールの外観を外枠 |。     > [!NOTE] > このプロパティは任意の Web サーバー コントロールの Microsoft Internet Explorer 4 より前のブラウザーで表示されません。 HTML 3.2 でそれに該当するショートカットはありません。"
  example:
  - "The following example illustrates how to set the BorderStyle property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_1.aspx)]\n [!code-vb[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_3.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Web.UI.WebControls.BorderStyle
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.BorderStyle&quot;> </xref>列挙値。 既定値は<xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.BorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderWidth
  id: BorderWidth
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
  fullName: System.Web.UI.WebControls.WebControl.BorderWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの境界線の幅を設定します。"
  remarks: "BorderWidth プロパティを使用すると、コントロールの境界線の幅を指定できます。      > [!NOTE] > このプロパティは、すべての Web サーバー コントロールでは機能しません。 <xref:System.Web.UI.WebControls.Table> <xref:System.Web.UI.WebControls.DataGrid>。</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.Table>など、テーブルとして表示するコントロールにのみ適用されます。       このプロパティは、<xref:System.Web.UI.WebControls.Unit>オブジェクト</xref:System.Web.UI.WebControls.Unit>。 場合、<xref:System.Web.UI.WebControls.Unit.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.Unit>負の数値を含む、例外がスローされます</xref:System.Web.UI.WebControls.Unit></xref:System.Web.UI.WebControls.Unit.Value%2A>。      > [!NOTE] > 境界線の幅を Microsoft Internet Explorer バージョン 5 以降のブラウザーのピクセル単位でのみ指定できます。 すべてのユニットの種類は、Microsoft Internet Explorer 5 およびそれ以降のバージョンでサポートされます。 詳細については、特定のコントロールを参照してください。"
  example:
  - "The following example illustrates how to set the BorderWidth property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_1.aspx)]\n [!code-vb[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_3.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> Web サーバー コントロールの境界線の幅を表すです。 既定値は<xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.WebControl.BorderWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された罫線の幅は、負の値です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ControlStyle
  id: ControlStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
  fullName: System.Web.UI.WebControls.WebControl.ControlStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Web サーバー コントロールのスタイルを取得します。 このプロパティは、主にコントロールの開発者によって使用されます。"
  remarks: "ControlStyle プロパティ<xref:System.Web.UI.WebControls.WebControl><xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>や<xref:System.Web.UI.WebControls.WebControl.Font%2A>。</xref:System.Web.UI.WebControls.WebControl.Font%2A></xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>など、コントロールの外観を指定するクラス</xref:System.Web.UI.WebControls.WebControl>のすべてのプロパティをカプセル化します。"
  syntax:
    content: public System.Web.UI.WebControls.Style ControlStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> Web サーバー コントロールの外観のプロパティをカプセル化します。"
  overload: System.Web.UI.WebControls.WebControl.ControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  id: ControlStyleCreated
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>オブジェクトが作成されている、<xref:System.Web.UI.WebControls.WebControl.ControlStyle*>プロパティ</xref:System.Web.UI.WebControls.WebControl.ControlStyle*>。 このプロパティは、主にコントロールの開発者によって使用します。"
  syntax:
    content: public bool ControlStyleCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>オブジェクトが作成されている、<xref:System.Web.UI.WebControls.WebControl.ControlStyle*>プロパティ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.WebControl.ControlStyle*> 。"
  overload: System.Web.UI.WebControls.WebControl.ControlStyleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  id: CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CopyBaseAttributes(WebControl)
  nameWithType: WebControl.CopyBaseAttributes(WebControl)
  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によってカプセル化されていないプロパティをコピー、<xref:System.Web.UI.WebControls.WebControl.Style*>からこのメソッドが呼び出される Web サーバー コントロールに指定された Web サーバー コントロールからのオブジェクト</xref:System.Web.UI.WebControls.WebControl.Style*>。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "CopyBaseAttributes メソッド コピー、 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>、 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>、 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>、 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>、および<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>からこのメソッドが呼び出される Web サーバー コントロールに指定された Web サーバー コントロールからプロパティ</xref:System.Web.UI.WebControls.WebControl.Attributes%2A></xref:System.Web.UI.WebControls.WebControl.TabIndex%2A></xref:System.Web.UI.WebControls.WebControl.ToolTip%2A></xref:System.Web.UI.WebControls.WebControl.Enabled%2A></xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>。 これは、Web サーバー コントロールが表示およびコントロールを使用するときに動的に新しいコントロールを作成することでは機能の場合でよく使用します。 によってカプセル化されていない Web サーバー コントロールのすべてのプロパティをコピーするので、このメソッドはこのような状況で役に立ちます、<xref:System.Web.UI.WebControls.Style>オブジェクトのレンダリングされているタグの最も外側にあるコントロールを配置することができるようにします</xref:System.Web.UI.WebControls.Style>。"
  syntax:
    content: public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);
    parameters:
    - id: controlSrc
      type: System.Web.UI.WebControls.WebControl
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>からこのメソッドが呼び出される Web サーバー コントロールにコピーするプロパティを持つソース コントロールを表すです。"
  overload: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>controlSrc</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: WebControl.CreateControlStyle()
  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって内部的に使用するスタイル オブジェクトを作成、 <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>プロパティに関連したすべてのスタイルを実装するクラス。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "すべての実装に内部的に使用するスタイル オブジェクトを作成するメソッドが使用される CreateControlStyle スタイルを関連するプロパティ。 派生クラスでは、クラスに適切なスタイルを作成するには、このメソッドをオーバーライドできます。 このメソッドは主に、コントロールの開発者によって使用されます。       **注**コントロールの開発者が返す必要があります、<xref:System.Web.UI.WebControls.Style>から派生した、<xref:System.Web.UI.WebControls.Style>基本コントロールを返す</xref:System.Web.UI.WebControls.Style></xref:System.Web.UI.WebControls.Style>。 これを想定できないこと、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>は特定のスタイル型から派生したコントロールが別の種類を返す可能性があります</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>コントロールのすべてのスタイル関連プロパティの実装に使用されます。"
  overload: System.Web.UI.WebControls.WebControl.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CssClass
  id: CssClass
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CssClass
  nameWithType: WebControl.CssClass
  fullName: System.Web.UI.WebControls.WebControl.CssClass
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはクライアント上の Web サーバー コントロールによって表示されるカスケード スタイル シート (CSS) クラスを設定します。"
  remarks: "CssClass プロパティを使用すると、Web サーバー コントロールのクライアントで表示するために、CSS クラスを指定できます。 このプロパティは、すべてのコントロールのブラウザーに表示されます。 クラスの属性で、ブラウザーに関係なく常に表示されます。      > [!IMPORTANT] > この例は、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックス。 既定では、ASP.NET Web ページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。 詳細については、次を参照してください。[スクリプト悪用概要](~/add/includes/ajax-current-ext-md.md)です。       たとえば、次の Web サーバー コントロールの宣言: ```   <asp:TextBox id=&quot;TextBox1&quot; ForeColor=&quot;Red&quot; CssClass=&quot;class1&quot; />   ``` Web サーバー コントロールの前の宣言用のクライアントで、次の HTML が表示される:```   <input type=text class=&quot;class1&quot; style=&quot;ForeColor:red&quot;>   ```コントロールの外観をカスタマイズするカスケード スタイル シート (CSS) を使用する場合は、インライン スタイルまたは個別の CSS ファイルの両方ではなくはどちらかを使用します。 インライン スタイルと個別の CSS ファイルの両方を使用すると、予期しない結果を可能性があります。      > [!NOTE] > CSS をサポートしていないブラウザーでは、CssClass プロパティを設定する影響はありません。"
  example:
  - "The following example illustrates how to use the CssClass property to change the style of a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[Classic WebControl.CssClass Example#1](~/add/codesnippet/xml/p-system.web.ui.webcontr_267_1.xml)]\n [!code-vb[Classic WebControl.CssClass Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_267_1.aspx)]\n [!code-cs[Classic WebControl.CssClass Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_267_1.aspx)]"
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "クライアントの Web サーバー コントロールによって表示される CSS クラスです。 既定値は<xref:System.String>。</xref:System.String>"
  overload: System.Web.UI.WebControls.WebControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass
  id: DisabledCssClass
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールが無効になっている場合、レンダリングされた HTML 要素に適用する CSS クラスを設定します。"
  remarks: "個々 の Web コントロールの DisabledCssClass プロパティに対して表示される名前を変更するのには、このプロパティを使用できます。 既定では、このプロパティは、&quot;aspNetDisabled&quot;を返します。       ときに<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>返される派生クラスでオーバーライドされる`false`、DisabledCssClass プロパティの値がの値として表示される、`class`コントロールの HTML 要素の属性です</xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>。 その場合、値がある場合、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティ、両方の CSS クラスは、レンダリングされた HTML 要素に適用されます</xref:System.Web.UI.WebControls.WebControl.CssClass%2A>。 `class`属性の値を続けて DisabledCssClass プロパティの値では、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>をスペースで区切ってプロパティ</xref:System.Web.UI.WebControls.WebControl.CssClass%2A>。       このプロパティが静的であることは、<xref:System.Web.UI.WebControls.WebControl>クラス</xref:System.Web.UI.WebControls.WebControl>に対してのみ設定できます。 どのような値に設定することは、Web アプリケーションのすべてのコントロールに使用されます。 個々 のコントロールにさまざまな値を指定することはできません。       操作するコードを通常配置&quot;aspNetDisabled&quot;の既定値から別のクラス名を使用する場合、 `Application_Start` Global.asax ファイルは、次の例のようにのメソッド。```vb#   Private Sub Application_Start(       ByVal sender As Object, ByVal e As EventArgs)       WebControl.DisabledCssClass = &quot;customDisabledClassName&quot;   End Sub   ```      ```c#   void Application_Start(object sender, EventArgs e)   {       WebControl.DisabledCssClass = &quot;customDisabledClassName&quot;;   }   ```"
  example:
  - "The following example shows rendered HTML for a disabled <xref:System.Web.UI.WebControls.Label> control when the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property is `false`, when the DisabledCssClass property has its default value, and when the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property is empty.  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled\">Test</span>`  \n  \n The following example shows rendered HTML under the same conditions except that the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property has the value \"SampleStyle\"`:`  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled SampleStyle\">Test</span>`  \n  \n For more information, see the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property."
  syntax:
    content: public static string DisabledCssClass { get; set; }
    return:
      type: System.String
      description: "コントロールが無効にすると、レンダリングされた HTML 要素に適用される CSS クラス。 既定値は、&quot;aspNetDisabled&quot;です。"
  overload: System.Web.UI.WebControls.WebControl.DisabledCssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Enabled
  nameWithType: WebControl.Enabled
  fullName: System.Web.UI.WebControls.WebControl.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールが有効になっているかどうかを示す値を設定します。"
  remarks: "コントロールの Enabled プロパティを設定すると`false`、通常このコントロールが淡色表示されます。 コントロールが入力要素の場合は、ブラウザーには、ユーザーがクリックしてまたは入力ができないようにします。 サーバー コントロールにレンダリングされる HTML 要素を設定して無効になっている、`disabled`属性またはその CSS`class`属性。 詳細については、「 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A></xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>の使用」を参照していますください。       このプロパティは、コントロールの階層構造を反映します。 コンテナー コントロールを無効にすると、そのコンテナー内の子コントロールも無効になります。 詳細については、次を参照してください、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティ。</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 。      > [!NOTE] > カスタム複合コントロールでは、この継承の動作は、子コントロールが作成されていないコントロールに適用されません。 設定するか、子の有効状態は、コントロールを作成、または呼び出す Enabled プロパティをオーバーライドしたとき、<xref:System.Web.UI.Control.EnsureChildControls%2A>メソッド</xref:System.Web.UI.Control.EnsureChildControls%2A>。      > [!NOTE] > のみで、コントロールを無効にするとブラウザー UI を通じた、ユーザーがコントロールでの操作を防ぐことができます。 ページ上のコントロールが無効になっている場合でも、ページが処理されるポストバックを送信する要求を作成するユーザーのことができます。 ポストバックの要求を処理する前に、コントロールが有効になっていると表示されていることを確認することを確認します。       すべてのコントロールは、このプロパティをサポートします。 詳細については、個々 のコントロールを参照してください。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  example:
  - "The following example illustrates how to enable and disable a <xref:System.Web.UI.WebControls.TextBox> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class, by setting its Enabled property programmatically.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_515_1.aspx)]\n [!code-cs[Classic WebControl.Enabled Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_515_1.aspx)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
  fullName: System.Web.UI.WebControls.WebControl.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはこのコントロールにテーマを適用するかどうかを示す値を設定します。"
  remarks: "EnableTheming プロパティは、指定したコントロールのテーマが有効かどうかを示します。 EnableTheming プロパティが`true`、コントロール スキンを適用するアプリケーションのテーマのディレクトリが検索されます。 テーマのディレクトリ内の特定のコントロール スキンが存在しない場合、スキンは適用されません。       EnableTheming プロパティが`false`、テーマのディレクトリは検索されませんの内容と、<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>プロパティは使用されません</xref:System.Web.UI.WebControls.WebControl.SkinID%2A>。       コントロールは、親コントロールまたはコントロールを含むページで設定された EnableTheming 値をオーバーライドできます。 たとえば、親コントロール、EnableTheming プロパティに設定`false`、EnableTheming プロパティを設定して、親内に含まれる子コントロールにテーマを選択的に適用できます`true`個々 の子コントロールにします。       テーマは、ページ、コンテナー、または制御レベルで有効にすることができます。 テーマは、ページまたはコンテナー レベルで無効になっている、ページまたはコンテナーに含まれるすべてのコントロールのテーマは無効です。"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>テーマを使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Font
  id: Font
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Font
  nameWithType: WebControl.Font
  fullName: System.Web.UI.WebControls.WebControl.Font
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Web サーバー コントロールに関連付けられているフォントのプロパティを取得します。"
  remarks: "Font プロパティを使用すると、Web サーバー コントロールのフォントのプロパティを指定できます。 このプロパティが含まれていますサブプロパティ アクセス可能なには宣言の形式で`Property-Subproperty`(たとえば`Font-Bold`) またはの形式でプログラムによって`Property.Subproperty`(たとえば`Font.Bold`)。       1 つを除くすべてのサブプロパティは、Microsoft Internet Explorer のすべてのコントロール バージョン 4 の前にブラウザーで表示されます。 : <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Name%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Names%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>、および<xref:System.Web.UI.WebControls.FontInfo.Size%2A>(ただしなど、フォント サイズの名前のみ`Small`、`Smaller`は動作).</xref:System.Web.UI.WebControls.FontInfo.Size%2A> </xref:System.Web.UI.WebControls.FontInfo.Underline%2A> </xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A> </xref:System.Web.UI.WebControls.FontInfo.Names%2A> </xref:System.Web.UI.WebControls.FontInfo.Name%2A> </xref:System.Web.UI.WebControls.FontInfo.Italic%2A> </xref:System.Web.UI.WebControls.FontInfo.Bold%2A>      > [!NOTE] > レンダリングされる HTML が以降のブラウザーとは異なるこれらサブプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーでレンダリング、します。 スタイル属性としてレンダリングでは、代わりにこれらのサブプロパティとしてレンダリングされます、HTML 要素など`<b>`と`<font>`です。       すべてのコントロールの以前のブラウザーで表示されない&1; つのサブプロパティが<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>。</xref:System.Web.UI.WebControls.FontInfo.Overline%2A>"
  example:
  - "The following example illustrates how to use the Font property to gather font information from a <xref:System.Web.UI.WebControls.Label> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Font Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_725_1.aspx)]\n [!code-cs[Classic WebControl.Font Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_725_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FontInfo Font { get; }
    return:
      type: System.Web.UI.WebControls.FontInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;> </xref> Web サーバー コントロールのフォントのプロパティを表すです。"
  overload: System.Web.UI.WebControls.WebControl.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ForeColor
  id: ForeColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ForeColor
  nameWithType: WebControl.ForeColor
  fullName: System.Web.UI.WebControls.WebControl.ForeColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの前景色 (通常はテキストの色) を設定します。"
  remarks: "ForeColor プロパティを使用すると、Web サーバー コントロールの前景色を指定できます。 前景色はテキストの色では通常です。 このプロパティは、Microsoft Internet Explorer <xref:System.Web.UI.WebControls.Image> <xref:System.Web.UI.WebControls.AdRotator>、<xref:System.Web.UI.WebControls.HyperLink>および<xref:System.Web.UI.WebControls.LinkButton>。</xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.AdRotator></xref:System.Web.UI.WebControls.Image>を除く、すべてのコントロールの version 4 より前のブラウザーに表示されます。      > [!NOTE] > Microsoft Internet Explorer version 4 より前のブラウザーでは、このプロパティとしてレンダリング`<font>`タグ。"
  example:
  - "The following example illustrates how to set the ForeColor property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.ForeColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_658_1.aspx)]\n [!code-vb[Classic WebControl.ForeColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_658_1.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>コントロールの前景色を表すです。 既定値は<xref href=&quot;System.Drawing.Color&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.HasAttributes
  id: HasAttributes
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
  fullName: System.Web.UI.WebControls.WebControl.HasAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールに設定された属性があるかどうかを示す値を取得します。"
  remarks: "HasAttributes プロパティから返される`true`ときに、<xref:System.Web.UI.WebControls.WebControl>インスタンスには属性の名前/値ペア</xref:System.Web.UI.WebControls.WebControl>。 ビュー ステートにまたはプロパティで、属性のペアを設定できます。"
  syntax:
    content: public bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールに設定されている属性がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.HasAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Height
  id: Height
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Height
  nameWithType: WebControl.Height
  fullName: System.Web.UI.WebControls.WebControl.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの高さを設定します。"
  remarks: "高さのプロパティを使用すると、Web サーバー コントロールの高さを指定できます。      > [!NOTE] > このプロパティは Microsoft Internet Explorer version 4 より前のすべてのコントロールのブラウザーで表示されません。 以前のブラウザーでこのプロパティにレンダリングされないコントロールが含まれる<xref:System.Web.UI.WebControls.Label>、 <xref:System.Web.UI.WebControls.HyperLink>、 <xref:System.Web.UI.WebControls.LinkButton>、および検証コントロール</xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.Label>。 <xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>も以前のブラウザーでこのプロパティはレンダリングされないときにその`RepeatLayout`プロパティに設定されている`RepeatLayout.Flow`</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.RadioButtonList></xref:System.Web.UI.WebControls.CheckBoxList>。 さらの単位型のみ`Pixel`と`Percentage`以前のブラウザーでサポートされています。       このプロパティが非標準の HTML では、Web サーバーなどのコントロールの表示をテーブルとして<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>、サポートされていないこのプロパティ ブラウザー Microsoft Internet Explorer version 4 より前です</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.Table>。      > [!NOTE] > 高さを設定する単位にプロパティを型の既定値以外の`Pixel`、する単位の種類に固有新しいユニットの種類を作成する必要があります。 たとえば、100 のパーセンテージ値をコントロールの高さのプロパティを設定するにする可能性があります、次の操作: >> `myWebControl.Width = Unit.Percentage(100);` >> Height プロパティの使用可能な単位の種類の詳細については、<xref:System.Web.UI.WebControls.Unit>クラス</xref:System.Web.UI.WebControls.Unit>を参照してください。"
  example:
  - "The following example illustrates how to declaratively set the Height property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.Height Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_740_1.aspx)]\n [!code-vb[Classic WebControl.Height Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_740_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>コントロールの高さを表すです。 既定値は<xref href=&quot;System.Web.UI.WebControls.Unit&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.Height*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "高さは、負の値に設定されました。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.IsEnabled
  id: IsEnabled
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
  fullName: System.Web.UI.WebControls.WebControl.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールが有効になっているかどうかを示す値を取得します。"
  remarks: "これは、プロパティは読み取り専用プロパティです。 設定する場合は、コントロールを無効にするには、その<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを`false`</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。       別のコントロールでコントロールが含まれていない場合、IsEnabled プロパティの値は常の値と同じ、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。       IsEnabled プロパティとは異なる値を持つ、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ、コントロールが別のコントロールの子である場合、次のすべての状況に該当する場合:-の値、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティまたは親コントロールの IsEnabled プロパティは、 `false`</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> </xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 。      -<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>子コントロールのプロパティに設定されて`true`</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。       このような状況では、子コントロールは、親コントロールの無効の状態を継承します。 子コントロールの IsEnabled プロパティを返します`false`コントロールが無効である場合でも、子コントロールが明示的に無効になっていない設定を示すためにその<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを`false`</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。 親コントロール自体があります、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティに設定`true`しますが、可能性があります無効の状態をその親から継承され</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。       設定して無効になっていると、要素をマーク ASP.NET サーバー コントロールの HTML 要素をレンダリングするとき、`disabled`属性またはその CSS`class`属性。 詳細については、「 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A></xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>の使用」を参照していますください。"
  syntax:
    content: protected bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref>オブジェクトが有効になっている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WebControl.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって保存された前回の要求からビューステート情報を復元、<xref:System.Web.UI.WebControls.WebControl.SaveViewState*>メソッド</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドは、中、以前に保存されているビュー ステート情報を復元<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>要求</xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>。 <xref:System.Web.UI.WebControls.WebControl>クラスでオーバーライド ベース<xref:System.Web.UI.Control.LoadViewState%2A>を処理するメソッド、 <xref:System.Web.UI.Control.ViewState%2A>、 <xref:System.Web.UI.WebControls.WebControl.Style%2A>、および<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.Attributes%2A></xref:System.Web.UI.WebControls.WebControl.Style%2A></xref:System.Web.UI.Control.ViewState%2A></xref:System.Web.UI.Control.LoadViewState%2A></xref:System.Web.UI.WebControls.WebControl>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "復元するコントロールの状態を表すオブジェクト。"
  overload: System.Web.UI.WebControls.WebControl.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  id: MergeStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: MergeStyle(Style)
  nameWithType: WebControl.MergeStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コピーを Web に指定したスタイルの空白以外の要素を制御するが、コントロールの既存のスタイル要素を上書きしません。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: ''
  example:
  - "The following example demonstrates how to use the MergeStyle method to merge a style with the style of a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebControlMergeStyle#1](~/add/codesnippet/csharp/e45b1a42-f3d8-4239-ac7e-_1.aspx)]\n [!code-vb[WebControlMergeStyle#1](~/add/codesnippet/visualbasic/e45b1a42-f3d8-4239-ac7e-_1.aspx)]"
  syntax:
    content: public void MergeStyle (System.Web.UI.WebControls.Style s);
    parameters:
    - id: s
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>をコピーするスタイルを表すです。"
  overload: System.Web.UI.WebControls.WebControl.MergeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebControl.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された HTML ライターにコントロールを表示します。"
  remarks: "Render メソッドは、主にコントロールの開発者によって使用されます。       Render メソッドを指定した Web コントロールを送信する<xref:System.Web.UI.HtmlTextWriter>インスタンス</xref:System.Web.UI.HtmlTextWriter>。 カスタム サーバー コントロールをクライアントに送信するには、このメソッドをオーバーライドします。       Render メソッドの最初の呼び出し、<xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>メソッドを<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>メソッド、および最後に、<xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A>コントロールをクライアントに送信するメソッド</xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A></xref:System.Web.UI.WebControls.WebControl.RenderContents%2A></xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>コントロールの内容を受け取るオブジェクトです。"
  overload: System.Web.UI.WebControls.WebControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "開始タグを指定されたライターにコントロールの HTML をレンダリングします。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "これが他のコントロールは、開始タグと終了タグの Web サーバー コントロールの間に複数のコントロールを表示できるように公開されます。"
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.WebControl.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: WebControl.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したライターにコントロールの内容を表示します。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "開始と終了タグの間、コントロールの内容を表示するために RenderContents メソッドをオーバーライドします。 このメソッドの既定の実装は、すべての子コントロールをレンダリングします。       基本 RenderContents メソッドまたは呼び出しを呼び出す必要がありますか、コントロールに子コントロールがある場合、<xref:System.Web.UI.Control.RenderChildren%2A>するテキスト ライターにレンダリングする子コントロールの時点</xref:System.Web.UI.Control.RenderChildren%2A>。"
  syntax:
    content: protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.WebControl.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたライターにコントロールのタグを閉じる HTML をレンダリングします。 このメソッドは、主にコントロールの開発者によって使用されます。"
  remarks: "これが他のコントロールは、開始タグと終了タグの Web サーバー コントロールの間に複数のコントロールを表示できるように公開されます。"
  syntax:
    content: public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.WebControl.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: WebControl.SaveViewState()
  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "後に変更された状態を保存、<xref:System.Web.UI.WebControls.Style.TrackViewState*>メソッドが呼び出されました</xref:System.Web.UI.WebControls.Style.TrackViewState*>。"
  remarks: "SaveViewState メソッドは、主にコントロールの開発者によって使用されます。       ビュー ステートは、サーバー コントロールのプロパティの累積的な値です。 これらの値は、<xref:System.Web.UI.Control.ViewState%2A><xref:System.Web.UI.StateBag>クラス</xref:System.Web.UI.StateBag>のインスタンスは、サーバー コントロールのプロパティ</xref:System.Web.UI.Control.ViewState%2A>に自動的に配置されます。 <xref:System.Web.UI.Control.ViewState%2A>保存状態のサーバー コントロールのライフ サイクルの段階の後に、プロパティの値が文字列オブジェクトに永続化し、</xref:System.Web.UI.Control.ViewState%2A> 。 詳細については、次を参照してください。 [ASP.NET ページ ライフ サイクルの概要](~/add/includes/ajax-current-ext-md.md)です。       ビューステートを保存すると、この文字列として返されるオブジェクトをクライアントに非表示の html 形式で格納されている変数`input`要素。 SaveViewState メソッドをオーバーライドし、効率を向上できますとカスタム サーバー コントロールを作成するときに、<xref:System.Web.UI.Control.ViewState%2A>サーバー コントロールのプロパティ</xref:System.Web.UI.Control.ViewState%2A>。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "コントロールの現在のビュー ステートを格納しているオブジェクトそれ以外の場合、コントロールに関連付けられたビュー ステートがない<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SkinID
  nameWithType: WebControl.SkinID
  fullName: System.Web.UI.WebControls.WebControl.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールに適用するスキンを設定します。"
  remarks: "コントロールで使用できるスキンは、テーマ ディレクトリ内の&1; つまたは複数のスキン ファイルに格納されます。 これらのコントロールに適用するスキンの SkinID プロパティを指定します。 スキンは、特定のコントロールに固有さまざまな種類のコントロール間のスキンの設定を共有することはできません。       SkinID プロパティを設定しない場合、コントロールは、定義されている場合、既定のスキンを使用します。 たとえば場合、スキンなし ID の定義、<xref:System.Web.UI.WebControls.Image>制御、そのスキンはすべてに適用されます<xref:System.Web.UI.WebControls.Image>コントロールを明示的に参照しない ID によって、スキンとテーマを無効にするには設定されていない</xref:System.Web.UI.WebControls.Image></xref:System.Web.UI.WebControls.Image>。 <xref:System.Web.UI.WebControls.Image>し、<xref:System.Web.UI.WebControls.Image>その ID を持つ SkinID が設定されているコントロール</xref:System.Web.UI.WebControls.Image>だけにスキンが適用されるコントロール</xref:System.Web.UI.WebControls.Image>の ID を使用して、スキンが定義されている場合       テーマのディレクトリにスキン ファイルに指定の SkinID をスキンが含まれていない場合、<xref:System.ArgumentException>実行時に例外がスローされます</xref:System.ArgumentException>。"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "コントロールに適用するスキンの名前。 既定値は<xref:System.String>。</xref:System.String>"
  overload: System.Web.UI.WebControls.WebControl.SkinID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "テーマでは、スキンの SkinID プロパティで指定することがありません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Style
  id: Style
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Style
  nameWithType: WebControl.Style
  fullName: System.Web.UI.WebControls.WebControl.Style
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Web サーバー コントロールの外側のタグにスタイル属性としてレンダリングされるテキスト属性のコレクションを取得します。"
  remarks: "スタイルのコレクションを使用すると、Web サーバー コントロールの外側のタグの表示スタイル属性を管理できます。 このプロパティは、すべてのコントロールのすべてのブラウザーに表示されます。      > [!NOTE] > スタイル属性をサポートしていないブラウザーでレンダリングされる HTML は無視されます。       厳密に型指定のスタイル プロパティを介して設定されたスタイル値 (たとえば、 `BackColor=&quot;Red&quot;`) このコレクション内の対応する値を自動的にオーバーライドします。       このコレクション内で設定された値は、厳密に型指定のスタイル プロパティで自動的には反映されません。"
  example:
  - "The following example illustrates how to use the Style property to hide or display a <xref:System.Web.UI.WebControls.Label> control on a page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Style Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1246_1.aspx)]\n [!code-cs[Classic WebControl.Style Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1246_1.aspx)]"
  syntax:
    content: public System.Web.UI.CssStyleCollection Style { get; }
    return:
      type: System.Web.UI.CssStyleCollection
      description: "A <xref href=&quot;System.Web.UI.CssStyleCollection&quot;> </xref> Web サーバー コントロールの外側のタグをレンダリングする HTML スタイル属性を格納しています。"
  overload: System.Web.UI.WebControls.WebControl.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールを設定するかどうかを示す値を取得、 <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;> </xref>にレンダリングされた HTML 要素の属性&quot;disabled&quot;ときに、コントロールの<xref:System.Web.UI.WebControls.WebControl.IsEnabled*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.WebControl.IsEnabled*> 。"
  remarks: "派生クラスでは、このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。      ## ASP.NET Web コントロールとの無効化、 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>ASP.NET コントロールのプロパティに設定されて`false`(つまり、コントロールが無効にすると)、目的は、ASP.NET がページで、コントロールの表示が (通常淡色表示) 無効な状態で表示する必要があります</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>。 親コントロールが無効になっているもにはそのコントロールの子は、無効になっているように表示されます。 その場合、子コントロールの<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティに設定されている`false`場合でも、その<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティに設定することがあります`true`</xref:System.Web.UI.WebControls.WebControl.Enabled%2A></xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>。       ASP.NET 3.5 以前で、ときに、コントロールの<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティは`false`、ASP.NET 設定、`disabled`コントロールのレンダリングされる HTML 要素の属性を&quot;disabled&quot;.</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> ただしでは、HTML 4.01 標準、`disabled`のみユーザー入力を使用する特定の要素の属性です。 たとえば、`disabled`属性は許可`input`、要素のではなく`span`要素。       ほとんどのブラウザーでは、無効になっている既定の外観をサポートされている表示のみの要素に`disabled`属性。 ただし、HTML 標準に準拠して、既定では、ASP.NET 4 のためには、無効な属性を省略します。      ## どのように、SupportsDisabledAttribute プロパティは使用する場合、SupportsDisabledAttribute プロパティ`true`、ASP.NET は表示、`disabled`属性のコントロールを無効にします。 場合は、このプロパティは`false`、ASP.NET は表示、`class`属性のコントロールを無効にします。       派生クラスを返すには、このプロパティをオーバーライドする`false`、次の条件に該当する場合:-コントロールをサポートしない HTML 要素を表示する、`disabled`属性。      -<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ 4.0 より低い ASP.NET のバージョン番号を示します</xref:System.Web.UI.Control.RenderingCompatibility%2A>。       SupportsDisabledAttribute プロパティ必ずしもコントロールのレンダリングされる HTML 要素をサポートしているかどうか (可能)、`disabled`属性。 コントロールの場合、<xref:System.Web.UI.Control.RenderingCompatibility%2A>コントロールの SupportsDisabledAttribute プロパティの値を返す場合がありますプロパティは、4.0 より低い ASP.NET のバージョン番号を示す、`true`レンダリングされた HTML がサポートしていない場合でも、`disabled`属性</xref:System.Web.UI.Control.RenderingCompatibility%2A>。      ## Visual Studio を使用して、以前のバージョンの ASP.NET 4 Web プロジェクトをアップグレードするときに無効なコントロールとの下位互換性は、Visual Studio は自動的に設定、 `controlRenderingCompatibilityVersion` Web.config ファイル内の属性 (設定する、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ) に以前のバージョン番号</xref:System.Web.UI.Control.RenderingCompatibility%2A>。 SupportsDisabledAttribute プロパティは常に返すため`true`ときに、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティを 4.0 より前は、これが原因で、以前のバージョンの場合と同様に、無効になっているコントロールの HTML を表示する Web コントロールです</xref:System.Web.UI.Control.RenderingCompatibility%2A>。 ASP.NET 4 で導入されたアルゴリズムを使用して HTML を表示するために、アップグレード済みの Web サイトを設定する場合は、変更または削除、`controlRenderingCompatibilityVersion`属性。 詳細については、次を参照してください、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ。</xref:System.Web.UI.Control.RenderingCompatibility%2A> 。      ## 無効になっている外観でを使用して CSS If、SupportsDisabledAttribute プロパティを設定するコントロールの`false`コントロールは、ASP.NET 設定が無効な`class`の値にレンダリングされた HTML 要素の属性、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>。 既定値、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>プロパティが&quot;aspNetDisabled&quot;.</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>       無効なコントロールに対して無効な外観を提供するには、値で表されるクラスの CSS 規則を定義する必要があります、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>。       複数の値を持っている場合、コントロールのレンダリングされる HTML 要素の`class`属性の値がある場合、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.CssClass%2A>。 詳細については、次を参照してください、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>プロパティ。</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 。"
  example:
  - "The following example shows markup for a disabled <xref:System.Web.UI.WebControls.Label> control:  \n  \n `<asp:Label id=\"Label1\" runat=\"server\" Text=\"Test\" Enabled=\"false\"/>`  \n  \n In ASP.NET 3.5 and earlier versions, this markup renders the following HTML:  \n  \n `<span id=\"Label1\" disabled=\"disabled\">Test</span>`  \n  \n In ASP.NET 4, if the value of the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is 4.0 or greater, and if the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property is set to its default value, the same markup renders the following HTML:  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled\">Test</span>`"
  syntax:
    content: public virtual bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した名前の Web コントロールの属性を取得します。"
  remarks: "IAttributeAccessor.GetAttribute メソッドは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみのインスタンス、<xref:System.Web.UI.WebControls.WebControl>クラスにキャスト、<xref:System.Web.UI.IAttributeAccessor>インターフェイス</xref:System.Web.UI.IAttributeAccessor></xref:System.Web.UI.WebControls.WebControl>。"
  syntax:
    content: string IAttributeAccessor.GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "属性の名前です。"
    return:
      type: System.String
      description: "属性の値です。"
  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した名前と値を Web コントロールの属性を設定します。"
  remarks: "IAttributeAccessor.SetAttribute メソッドは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみのインスタンス、<xref:System.Web.UI.WebControls.WebControl>クラスにキャスト、<xref:System.Web.UI.IAttributeAccessor>インターフェイス</xref:System.Web.UI.IAttributeAccessor></xref:System.Web.UI.WebControls.WebControl>。"
  syntax:
    content: void IAttributeAccessor.SetAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "属性の名前/値ペアの名コンポーネントです。"
    - id: value
      type: System.String
      description: "属性の名前/値ペアの値のコンポーネントです。"
  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TabIndex
  id: TabIndex
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TabIndex
  nameWithType: WebControl.TabIndex
  fullName: System.Web.UI.WebControls.WebControl.TabIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールのタブ インデックスを設定します。"
  remarks: "TabIndex プロパティを使用して、Web フォーム ページ上の Web サーバー コントロールのタブ インデックスを指定します。 押すと、`Tab`キー、Web サーバー コントロールにフォーカスが表示される順序はによって決まります各コントロールの TabIndex プロパティです。 ページが最初に読み込まれると、最初の項目を受け取るフォーカス、`Tab`キーが押されるアドレス バーします。 次に、Web フォーム ページ上のコントロールは、各コントロールの TabIndex プロパティの値に基づく順序の昇順にタブ付きします。 複数のコントロールは、同じタブ インデックスを共有している場合、コントロールは、Web フォーム ページで宣言されている順序でフォーカスを受け取る。 最後に、0 のタブ インデックスを持つコントロールには、宣言された順序でタブ付きします。      > [!NOTE] >&0; 以外のタブ インデックスを持つコントロールのみが表示されます、`tabindex`属性。       タブ オーダーから Web サーバー コントロールを削除するには、負の値に TabIndex プロパティを設定します。      > [!NOTE] > のみ Internet Explorer 4 以降でこのプロパティはサポートされています。"
  example:
  - "The following example illustrates how to use the TabIndex property of the <xref:System.Web.UI.WebControls.WebControl> to set the tab order of controls on the page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.TabIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1094_1.aspx)]\n [!code-cs[Classic WebControl.TabIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1094_1.aspx)]"
  syntax:
    content: public virtual short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "Web サーバー コントロールのタブ インデックス。 既定値は<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.WebControl.TabIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "-32768 から 32767 までの指定したタブのインデックスがします。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TagKey
  nameWithType: WebControl.TagKey
  fullName: System.Web.UI.WebControls.WebControl.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>この Web サーバー コントロールに対応する値。 このプロパティは、主にコントロールの開発者によって使用されます。"
  remarks: "TagKey プロパティを使用して、<xref:System.Web.UI.HtmlTextWriterTag>この Web サーバー コントロールに関連付けられている値</xref:System.Web.UI.HtmlTextWriterTag>。 このプロパティは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "1 つ、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>列挙値。"
  overload: System.Web.UI.WebControls.WebControl.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TagName
  id: TagName
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TagName
  nameWithType: WebControl.TagName
  fullName: System.Web.UI.WebControls.WebControl.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールのタグの名前を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。"
  remarks: "タグ名のプロパティを使用して、この Web サーバー コントロールに関連付けられているコントロールのタグの名前を特定します。 このプロパティは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: protected virtual string TagName { get; }
    return:
      type: System.String
      description: "コントロールのタグの名前。"
  overload: System.Web.UI.WebControls.WebControl.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ToolTip
  nameWithType: WebControl.ToolTip
  fullName: System.Web.UI.WebControls.WebControl.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールにマウス ポインターを合わせたときに表示されるテキストを設定します。"
  remarks: "ToolTip プロパティを使用すると、Web サーバー コントロールにマウス ポインターを合わせたときに表示されるカスタム テキストを指定できます。      > [!NOTE] > このプロパティはすべてのブラウザーで表示されます。 ただし、Microsoft Internet Explorer のみでは、ツールヒントとしてこのプロパティが表示されます。 その他のすべてのブラウザーでは、このプロパティを無視します。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following example illustrates how to set the ToolTip property on the <xref:System.Web.UI.WebControls.Button> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.ToolTip Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1206_1.aspx)]\n [!code-vb[Classic WebControl.ToolTip Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1206_1.aspx)]"
  syntax:
    content: public virtual string ToolTip { get; set; }
    return:
      type: System.String
      description: "マウス ポインターが、Web サーバー コントロール上に置いたときに表示されるテキスト。 既定値は&lt;xref:System.String?displayProperty=fullName&gt;です。"
  overload: System.Web.UI.WebControls.WebControl.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebControl.TrackViewState()
  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "変更を追跡するビュー ステートへのオブジェクトの保存できるように、コントロール<xref:System.Web.UI.Control.ViewState*>プロパティ</xref:System.Web.UI.Control.ViewState*>。"
  remarks: "TrackViewState メソッドは、主にコントロールの開発者によって使用されます。       TrackViewState は、コントロールのビュー ステートの変更を保存および追跡を開始する開始位置をマークします。 TrackViewState メソッドは、サーバー コントロールが初期化されたときにも、ASP.NET によって自動的に呼び出されます。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebControl.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Width
  id: Width
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Width
  nameWithType: WebControl.Width
  fullName: System.Web.UI.WebControls.WebControl.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または Web サーバー コントロールの幅を設定します。"
  remarks: "幅のプロパティを使用すると、Web サーバー コントロールの幅を指定できます。      > [!NOTE] > このプロパティは Microsoft Internet Explorer version 4 より前のすべてのコントロールのブラウザーで表示されません。 以前のブラウザーでこのプロパティにレンダリングされないコントロールが含まれる<xref:System.Web.UI.WebControls.Label>、 <xref:System.Web.UI.WebControls.HyperLink>、 <xref:System.Web.UI.WebControls.LinkButton>、および検証コントロール</xref:System.Web.UI.WebControls.LinkButton></xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.Label>。 <xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>も以前のブラウザーでこのプロパティはレンダリングされないときにその`RepeatLayout`プロパティに設定されている`RepeatLayout.Flow`</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.RadioButtonList></xref:System.Web.UI.WebControls.CheckBoxList>。 さらの単位型のみ`Pixel`と`Percentage`以前のブラウザーでサポートされています。       このプロパティが非標準の HTML では、Web サーバーなどのコントロールの表示をテーブルとして<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>、サポートされていないこのプロパティ ブラウザー Microsoft Internet Explorer version 4 より前です</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.Table>。      > [!NOTE] > 幅を設定する単位を宣言によってプロパティ以外の種類の既定`Pixel`、する単位の種類に固有新しいユニットの種類を作成する必要があります。 たとえば、100 のパーセンテージ値をコントロールの幅のプロパティを設定するにする可能性があります、次の操作: >> `myWebControl.width = Unit.Percentage(100);` >>、Width プロパティの使用可能な単位の種類の詳細については、<xref:System.Web.UI.WebControls.Unit>クラス</xref:System.Web.UI.WebControls.Unit>を参照してください。"
  example:
  - "The following example illustrates how to declaratively set the Width property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.Width Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_671_1.aspx)]\n [!code-vb[Classic WebControl.Width Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_671_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>コントロールの幅を表すです。 既定値は<xref href=&quot;System.Web.UI.WebControls.Unit&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebControl.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Web サーバー コントロールの幅は、負の値に設定されました。"
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebControl.#ctor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl()
  nameWithType: WebControl.WebControl()
  fullName: System.Web.UI.WebControls.WebControl.WebControl()
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl(String)
  nameWithType: WebControl.WebControl(String)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl(HtmlTextWriterTag)
  nameWithType: WebControl.WebControl(HtmlTextWriterTag)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.WebControl.AccessKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AccessKey
  nameWithType: WebControl.AccessKey
  fullName: System.Web.UI.WebControls.WebControl.AccessKey
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ApplyStyle(Style)
  nameWithType: WebControl.ApplyStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.WebControl.Attributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Attributes
  nameWithType: WebControl.Attributes
  fullName: System.Web.UI.WebControls.WebControl.Attributes
- uid: System.Web.UI.AttributeCollection
  parent: System.Web.UI
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.Web.UI.AttributeCollection
- uid: System.Web.UI.WebControls.WebControl.BackColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BackColor
  nameWithType: WebControl.BackColor
  fullName: System.Web.UI.WebControls.WebControl.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Web.UI.WebControls.WebControl.BorderColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderColor
  nameWithType: WebControl.BorderColor
  fullName: System.Web.UI.WebControls.WebControl.BorderColor
- uid: System.Web.UI.WebControls.WebControl.BorderStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
  fullName: System.Web.UI.WebControls.WebControl.BorderStyle
- uid: System.Web.UI.WebControls.BorderStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Web.UI.WebControls.BorderStyle
- uid: System.Web.UI.WebControls.WebControl.BorderWidth
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
  fullName: System.Web.UI.WebControls.WebControl.BorderWidth
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebControl.ControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
  fullName: System.Web.UI.WebControls.WebControl.ControlStyle
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CopyBaseAttributes(WebControl)
  nameWithType: WebControl.CopyBaseAttributes(WebControl)
  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)
- uid: System.Web.UI.WebControls.WebControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WebControl
  nameWithType: WebControl
  fullName: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CreateControlStyle()
  nameWithType: WebControl.CreateControlStyle()
  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()
- uid: System.Web.UI.WebControls.WebControl.CssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CssClass
  nameWithType: WebControl.CssClass
  fullName: System.Web.UI.WebControls.WebControl.CssClass
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass
- uid: System.Web.UI.WebControls.WebControl.Enabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Enabled
  nameWithType: WebControl.Enabled
  fullName: System.Web.UI.WebControls.WebControl.Enabled
- uid: System.Web.UI.WebControls.WebControl.EnableTheming
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
  fullName: System.Web.UI.WebControls.WebControl.EnableTheming
- uid: System.Web.UI.WebControls.WebControl.Font
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Font
  nameWithType: WebControl.Font
  fullName: System.Web.UI.WebControls.WebControl.Font
- uid: System.Web.UI.WebControls.FontInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FontInfo
  nameWithType: FontInfo
  fullName: System.Web.UI.WebControls.FontInfo
- uid: System.Web.UI.WebControls.WebControl.ForeColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ForeColor
  nameWithType: WebControl.ForeColor
  fullName: System.Web.UI.WebControls.WebControl.ForeColor
- uid: System.Web.UI.WebControls.WebControl.HasAttributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
  fullName: System.Web.UI.WebControls.WebControl.HasAttributes
- uid: System.Web.UI.WebControls.WebControl.Height
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Height
  nameWithType: WebControl.Height
  fullName: System.Web.UI.WebControls.WebControl.Height
- uid: System.Web.UI.WebControls.WebControl.IsEnabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
  fullName: System.Web.UI.WebControls.WebControl.IsEnabled
- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WebControl.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: MergeStyle(Style)
  nameWithType: WebControl.MergeStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)
- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebControl.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: WebControl.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.SaveViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SaveViewState()
  nameWithType: WebControl.SaveViewState()
  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()
- uid: System.Web.UI.WebControls.WebControl.SkinID
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SkinID
  nameWithType: WebControl.SkinID
  fullName: System.Web.UI.WebControls.WebControl.SkinID
- uid: System.Web.UI.WebControls.WebControl.Style
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Style
  nameWithType: WebControl.Style
  fullName: System.Web.UI.WebControls.WebControl.Style
- uid: System.Web.UI.CssStyleCollection
  parent: System.Web.UI
  isExternal: false
  name: CssStyleCollection
  nameWithType: CssStyleCollection
  fullName: System.Web.UI.CssStyleCollection
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
- uid: System.Web.UI.WebControls.WebControl.TabIndex
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TabIndex
  nameWithType: WebControl.TabIndex
  fullName: System.Web.UI.WebControls.WebControl.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Web.UI.WebControls.WebControl.TagKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagKey
  nameWithType: WebControl.TagKey
  fullName: System.Web.UI.WebControls.WebControl.TagKey
- uid: System.Web.UI.WebControls.WebControl.TagName
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagName
  nameWithType: WebControl.TagName
  fullName: System.Web.UI.WebControls.WebControl.TagName
- uid: System.Web.UI.WebControls.WebControl.ToolTip
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ToolTip
  nameWithType: WebControl.ToolTip
  fullName: System.Web.UI.WebControls.WebControl.ToolTip
- uid: System.Web.UI.WebControls.WebControl.TrackViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TrackViewState()
  nameWithType: WebControl.TrackViewState()
  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()
- uid: System.Web.UI.WebControls.WebControl.Width
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Width
  nameWithType: WebControl.Width
  fullName: System.Web.UI.WebControls.WebControl.Width
- uid: System.Web.UI.WebControls.WebControl.#ctor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl
  nameWithType: WebControl.WebControl
- uid: System.Web.UI.WebControls.WebControl.AccessKey*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AccessKey
  nameWithType: WebControl.AccessKey
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AddAttributesToRender
  nameWithType: WebControl.AddAttributesToRender
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ApplyStyle
  nameWithType: WebControl.ApplyStyle
- uid: System.Web.UI.WebControls.WebControl.Attributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Attributes
  nameWithType: WebControl.Attributes
- uid: System.Web.UI.WebControls.WebControl.BackColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BackColor
  nameWithType: WebControl.BackColor
- uid: System.Web.UI.WebControls.WebControl.BorderColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderColor
  nameWithType: WebControl.BorderColor
- uid: System.Web.UI.WebControls.WebControl.BorderStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
- uid: System.Web.UI.WebControls.WebControl.BorderWidth*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
- uid: System.Web.UI.WebControls.WebControl.ControlStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CopyBaseAttributes
  nameWithType: WebControl.CopyBaseAttributes
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CreateControlStyle
  nameWithType: WebControl.CreateControlStyle
- uid: System.Web.UI.WebControls.WebControl.CssClass*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CssClass
  nameWithType: WebControl.CssClass
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
- uid: System.Web.UI.WebControls.WebControl.Enabled*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Enabled
  nameWithType: WebControl.Enabled
- uid: System.Web.UI.WebControls.WebControl.EnableTheming*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
- uid: System.Web.UI.WebControls.WebControl.Font*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Font
  nameWithType: WebControl.Font
- uid: System.Web.UI.WebControls.WebControl.ForeColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ForeColor
  nameWithType: WebControl.ForeColor
- uid: System.Web.UI.WebControls.WebControl.HasAttributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
- uid: System.Web.UI.WebControls.WebControl.Height*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Height
  nameWithType: WebControl.Height
- uid: System.Web.UI.WebControls.WebControl.IsEnabled*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
- uid: System.Web.UI.WebControls.WebControl.LoadViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: LoadViewState
  nameWithType: WebControl.LoadViewState
- uid: System.Web.UI.WebControls.WebControl.MergeStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: MergeStyle
  nameWithType: WebControl.MergeStyle
- uid: System.Web.UI.WebControls.WebControl.Render*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Render
  nameWithType: WebControl.Render
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderBeginTag
  nameWithType: WebControl.RenderBeginTag
- uid: System.Web.UI.WebControls.WebControl.RenderContents*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderContents
  nameWithType: WebControl.RenderContents
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderEndTag
  nameWithType: WebControl.RenderEndTag
- uid: System.Web.UI.WebControls.WebControl.SaveViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SaveViewState
  nameWithType: WebControl.SaveViewState
- uid: System.Web.UI.WebControls.WebControl.SkinID*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SkinID
  nameWithType: WebControl.SkinID
- uid: System.Web.UI.WebControls.WebControl.Style*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Style
  nameWithType: WebControl.Style
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute
- uid: System.Web.UI.WebControls.WebControl.TabIndex*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TabIndex
  nameWithType: WebControl.TabIndex
- uid: System.Web.UI.WebControls.WebControl.TagKey*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagKey
  nameWithType: WebControl.TagKey
- uid: System.Web.UI.WebControls.WebControl.TagName*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagName
  nameWithType: WebControl.TagName
- uid: System.Web.UI.WebControls.WebControl.ToolTip*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ToolTip
  nameWithType: WebControl.ToolTip
- uid: System.Web.UI.WebControls.WebControl.TrackViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TrackViewState
  nameWithType: WebControl.TrackViewState
- uid: System.Web.UI.WebControls.WebControl.Width*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Width
  nameWithType: WebControl.Width
