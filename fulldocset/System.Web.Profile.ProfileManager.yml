### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileManager
  id: ProfileManager
  children:
  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  - System.Web.Profile.ProfileManager.ApplicationName
  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileManager.Enabled
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.Provider
  - System.Web.Profile.ProfileManager.Providers
  langs:
  - csharp
  name: ProfileManager
  nameWithType: ProfileManager
  fullName: System.Web.Profile.ProfileManager
  type: Class
  summary: "ユーザー プロファイル データと設定を管理します。"
  remarks: "ASP.NET プロファイルが格納およびデータベースなどのデータ ソースのユーザー設定を取得するために使用します。 <xref:System.Web.HttpContext.Profile%2A>現在<xref:System.Web.HttpContext>。</xref:System.Web.HttpContext>のプロパティ</xref:System.Web.HttpContext.Profile%2A>を使用してユーザー プロファイルにアクセスします。 プロファイル情報およびプロパティの値は、プロファイル プロバイダーを使用して管理します。       ProfileManager クラスは、プロファイル設定の管理、ユーザー プロファイルの検索し、使用できなくなったユーザー プロファイルを削除に使用します。 ProfileManager クラスは、静的メソッドと、アプリケーション コードで ProfileManager クラスを参照することでアクセスできるプロパティを提供します。 たとえば、ProfileManager クラスのメンバーのこのトピックの「例」のセクションとトピックは、その他例を参照してください。       既定では、すべての ASP.NET アプリケーションのユーザー プロファイルは無効です。 ユーザー プロファイルを有効にするには設定、`enabled`を true に、次の例に示すように構成要素の属性です。      ```   <configuration>     <system.web>       <profile enabled=&quot;true&quot; />     </system.web>   </configuration>   ```ユーザー プロファイルの詳細については、次を参照してください。 [ASP.NET プロファイル プロパティの概要](~/add/includes/ajax-current-ext-md.md)です。       プロファイル プロバイダーは格納およびユーザー プロファイルのプロパティを取得するために使用します。 .NET Framework が含まれています、<xref:System.Web.Profile.SqlProfileProvider>を SQL Server データベースのユーザー プロファイル プロパティを格納するクラス</xref:System.Web.Profile.SqlProfileProvider>。 A<xref:System.Web.Profile.SqlProfileProvider>という名前のインスタンス`AspNetSqlProvider`は既定のプロファイル プロバイダーとして、マシンの構成で指定します</xref:System.Web.Profile.SqlProfileProvider>。 `AspNetSqlProvider`インスタンスは、ローカル Web サーバー上の SQL Server データベースに接続します。 指定することができます、<xref:System.Web.Profile.SqlProfileProvider>構成要素を使用して既定のプロファイル プロバイダーとして別の SQL Server に接続して、`defaultProvider`次の例のように、構成要素の属性です</xref:System.Web.Profile.SqlProfileProvider>。      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public static class ProfileManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイル プロパティをプログラムで追加します。"
  remarks: "このメソッドは、プロパティを追加することに相当する機能、`profile`構成ファイルのセクションです。 プロファイル プロパティを追加するには、このメソッドを呼び出すでマークされているメソッドの呼び出しを行う必要があります、<xref:System.Web.PreApplicationStartMethodAttribute>属性</xref:System.Web.PreApplicationStartMethodAttribute>。"
  syntax:
    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);
    parameters:
    - id: property
      type: System.Web.Configuration.ProfilePropertySettings
      description: "プロパティの設定を追加します。"
  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得または設定を保存し、プロファイル情報を取得する対象のアプリケーションの名前。"
  remarks: "<xref:System.Web.Profile.ProfileManager>ApplicationName プロパティを使用してプロファイル情報を別のアプリケーションに関連付けます</xref:System.Web.Profile.ProfileManager>。 これにより、複数のアプリケーションで重複するユーザーの間での競合を実行しなくてもユーザー情報を格納する、同じデータベースを使用できます。 複数の ASP.NET アプリケーションでは、ApplicationName プロパティに同じ値を指定することによって、同じユーザー データベースを使用できます。 ApplicationName プロパティは、プログラムによって設定できますかことで設定できます宣言によって、Web アプリケーションの構成ファイルを使用して、`applicationName`属性。       値が指定されていない場合、 `applicationName` 、.NET Framework に付属するプロファイル プロバイダーを使用して、Web アプリケーションの構成ファイルで属性、 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>ASP.NET アプリケーションのプロパティの値</xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>。 非 ASP.NET アプリケーションの既定値は、<xref:System.Diagnostics.ProcessModule.ModuleName%2A>プロパティの値、ファイル拡張子を除いた</xref:System.Diagnostics.ProcessModule.ModuleName%2A>。       ApplicationName プロパティの公開、<xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>既定のプロファイル プロバイダーのプロパティ</xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合は、別のアプリケーション名で構成する可能性があります。 既定のプロバイダー以外のプロファイル プロバイダーのアプリケーション名にアクセスするプロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティとアクセス、<xref:System.Configuration.SettingsProvider.ApplicationName%2A>直接プロバイダーのプロパティ</xref:System.Configuration.SettingsProvider.ApplicationName%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。      > [!CAUTION] > すべてで処理された要求の&1; つの既定のプロファイル プロバイダーのインスタンスが使用されるため、<xref:System.Web.HttpApplication>オブジェクトを同時に実行して、ApplicationName プロパティ値を設定しようとしています複数の要求を持つことができます。</xref:System.Web.HttpApplication> 。 ApplicationName プロパティは複数の書き込みでは、安全なスレッドではありませんし、アプリケーションの複数のユーザーの予期しない動作結果 ApplicationName プロパティの値を変更することができます。 により、ユーザーが必要でない場合は、ApplicationName プロパティを設定するコードを記述しないことをお勧めします。 ここで、ApplicationName プロパティを設定する必要があります、アプリケーションの例は、複数のアプリケーションのプロファイル データを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n  <add name=\"SqlProvider\"  \n    type=\"System.Web.Profile.SqlProfileProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "プロファイル情報格納および取得する対象のアプリケーションの名前。"
  overload: System.Web.Profile.ProfileManager.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  id: AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ASP.NET ページの実行の最後に、ユーザー プロファイルを自動的に保存するかどうかを示す値を取得します。"
  remarks: "AutomaticSaveEnabled プロパティは、アプリケーションのユーザー プロファイルの自動保存が有効になっているかどうかを示します。 自動保存が有効になっている場合、<xref:System.Web.Profile.ProfileModule>オブジェクト、<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>イベントと呼び出し、<xref:System.Web.Profile.ProfileBase.Save%2A>メソッド中に、 <xref:System.Web.HttpApplication.EndRequest>ASP.NET ページの実行の終了時にイベント</xref:System.Web.HttpApplication.EndRequest></xref:System.Web.Profile.ProfileBase.Save%2A></xref:System.Web.Profile.ProfileModule.ProfileAutoSaving></xref:System.Web.Profile.ProfileModule>。       使用して、AutomaticSaveEnabled プロパティを設定、 `automaticSaveEnabled` ASP.NET アプリケーションの Web.config ファイル内の要素の属性です。"
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \n  \n```  \n<profile enabled=\"true\"  \n  automaticSaveEnabled=\"true\"  \n  defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool AutomaticSaveEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASP.NET ページの実行の最後に、ユーザー プロファイルが自動的に保存されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "少なくともせず AutomaticSaveEnabled プロパティ値の取得を試みました<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "対象の最後のアクティビティの日付と時刻までに発生した指定した日付と時刻のユーザー プロファイル データを削除します。"
  remarks: "DeleteInactiveProfiles メソッドを使用してで指定されたアプリケーションのデータ ソースから未使用のプロファイル データを削除、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかのプロファイルが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>、指定された以前に発生する`userInactiveSinceDate`パラメーターの値を削除します</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。       DeleteInactiveProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のデータ ソース内のプロファイル情報は削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]"
  syntax:
    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが削除されます。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>を識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    return:
      type: System.Int32
      description: "データ ソースから削除されたプロファイルの数。"
  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  id: DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "データ ソースから指定されたユーザー名のプロファイルを削除します。"
  remarks: "DeleteProfile メソッドは、すべてのプロファイル情報と、指定されたユーザー プロファイルのプロパティを削除します`username`指定<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>のデータ ソースから。       DeleteProfile メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>delete 操作を実行する既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteProfile (string username);
    parameters:
    - id: username
      type: System.String
      description: "削除するプロファイルのユーザー名。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザー プロファイルが見つかり削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileManager.DeleteProfile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>空の文字列 (&quot;&quot;) またはコンマが含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイル プロパティとユーザー名の指定された一覧の情報を削除します。"
  remarks: "DeleteProfiles メソッドすべてのプロファイル情報および指定したプロファイルのプロパティで指定されたアプリケーションのデータ ソースから削除、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティ</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。 削除するプロファイルの一覧はユーザー名の文字列の配列として指定します。 プロファイル プロパティと情報でユーザー名のデータ ソースに存在する場合、`usernames`パラメーター、削除されます。       戻り値の指定した配列の長さが異なる場合があります`usernames`です。 これが示すいくつかの指定した配列内のプロファイルの`usernames`データ ストアから既に削除されていた。       DeleteProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "削除するプロファイルのユーザー名の文字列配列。"
    return:
      type: System.Int32
      description: "データ ソースから削除されたプロファイルの数。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\") or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "指定されたプロファイルの一覧のデータ ソースからプロパティと情報を削除します。"
  remarks: "DeleteProfiles メソッドすべてのプロファイル情報および指定したプロファイルのプロパティで指定されたアプリケーションのデータ ソースから削除、<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティ</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。 使用して削除するプロファイルの一覧を指定、<xref:System.Web.Profile.ProfileInfoCollection>として渡された、`profiles`パラメーター</xref:System.Web.Profile.ProfileInfoCollection> 。 A<xref:System.Web.Profile.ProfileInfoCollection>から返される、 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>、 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>、および<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッド</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A></xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A></xref:System.Web.Profile.ProfileInfoCollection>。       戻り値が<xref:System.Web.Profile.ProfileInfoCollection.Count%2A>指定された<xref:System.Web.Profile.ProfileInfoCollection>。</xref:System.Web.Profile.ProfileInfoCollection>の値</xref:System.Web.Profile.ProfileInfoCollection.Count%2A>からによって異なることに注意してください。 これが示す、指定したプロファイルの一部<xref:System.Web.Profile.ProfileInfoCollection>データ ストアから既に削除されていた</xref:System.Web.Profile.ProfileInfoCollection>。       DeleteProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>を削除するプロファイルのプロファイル情報を格納します。"
    return:
      type: System.Int32
      description: "データ ソースから削除されたプロファイルの数。"
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\"\") or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Enabled
  id: Enabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "アプリケーションのユーザー プロファイルが有効になっているかどうかを示す値を取得します。"
  remarks: "使用して、アプリケーションのユーザー プロファイルが有効になっている、`enabled`構成要素の属性です。"
  example:
  - "The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザー プロファイルが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileManager.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "または指定した日付より前に、最後のアクティビティの日付が発生したし、時間と、ユーザー プロファイルの名前が指定した名前と一致するすべてのプロファイルのプロファイル情報を取得します。"
  remarks: "FindInactiveProfilesByUserName メソッドがで指定されたアプリケーションのすべての未使用のユーザー プロファイルのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 このメソッドは対象のプロファイルのユーザー名と一致する、指定されたプロファイルのみを取得`usernameToMatch`パラメーターの値。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかのプロファイルが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>、指定された以前に発生する`userInactiveSinceDate`パラメーターの値が返されます</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。       オーバー ロードを使用してデータのページでこの情報を取得することができます、<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> 。      > [!NOTE] > プロファイル プロバイダーでのワイルドカード文字がサポートして可能性があります、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスでのワイルドカード文字をサポートしている、`usernameToMatch`パラメーター</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 。       FindInactiveProfilesByUserName メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: usernameToMatch
      type: System.String
      description: "検索対象のユーザー名。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>を識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>をユーザー名と一致する、指定された無効なプロファイルのユーザー プロファイル情報を含む<code> usernameToMatch </code>パラメーター。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>空の文字列 (&quot;&quot;) です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "データ、または指定した日付より前に、最後のアクティビティの日付が発生したを時間と、ユーザー プロファイルの名前が指定した名前と一致するプロファイルのページでのプロフィール情報を取得します。"
  remarks: "FindInactiveProfilesByUserName メソッドがで指定されたアプリケーションの未使用のユーザー プロファイルのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 このメソッドは対象のユーザー名と一致する、指定されたプロファイルのみを取得`usernameToMatch`パラメーターの値。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>、指定された以前に発生する`userInactiveSinceDate`パラメーターの値</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。       によって FindInactiveProfilesByUserName によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を特定する<xref:System.Web.Profile.ProfileInfo>で返されるオブジェクト、<xref:System.Web.Profile.ProfileInfoCollection>コレクションです</xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfo>。 `pageIndex`返される結果ページを識別するパラメーターです。 0 は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの使用頻度の低いユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、`authenticationOption`と`userInactiveSinceDate`パラメーター。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値は 1 と、 `pageSize` 5 の<xref:System.Web.Profile.ProfileInfoCollection>が返されるは 6 ~ 10 番目の無効なプロファイルが含まれて</xref:System.Web.Profile.ProfileInfoCollection>。 `totalRecords`パラメーターは 13 に設定されます。       プロファイル プロバイダーが可能性がありますでワイルドカード文字をサポートしているに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスでのワイルドカード文字をサポートしている、`usernameToMatch`パラメーター</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 。       FindInactiveProfilesByUserName メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: usernameToMatch
      type: System.String
      description: "検索対象のユーザー名。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>を識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "このメソッドが戻るとき、プロファイルの合計数を識別する整数が含まれています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>のユーザー名と一致する、指定された無効なプロファイルのユーザー プロファイル情報を含む<code> usernameToMatch </code>パラメーター。"
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ユーザー名が指定した名前に一致するプロファイルのすべてのプロファイル情報を取得します。"
  remarks: "FindProfilesByUserName メソッドすべてのプロファイル情報をユーザー名と一致する、指定された一覧を返します`usernameToMatch`構成済みのパラメーター値<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>プロパティの値</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。       オーバー ロードを使用してデータのページのユーザー プロファイルのプロファイル情報を取得することができます、<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター</xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 。       プロファイル プロバイダーが可能性がありますでワイルドカード文字をサポートしているに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスでのワイルドカード文字をサポートしている、`usernameToMatch`パラメーター</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 。       FindProfilesByUserName メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: usernameToMatch
      type: System.String
      description: "検索対象のユーザー名。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>のユーザー名と一致する、指定されたプロファイルのユーザー プロファイル情報を含む<code> usernameToMatch </code>パラメーター。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>空の文字列 (&quot;&quot;) です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ユーザー名が指定した名前に一致するプロファイルのデータのページでのプロフィール情報を取得します。"
  remarks: "<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドをプロファイルのユーザー名と一致する、指定されたプロファイル情報の一覧を返します`usernameToMatch`パラメーターの値を構成された<xref:System.Web.Profile.ProfileManager.ApplicationName%2A></xref:System.Web.Profile.ProfileManager.ApplicationName%2A></xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。       プロファイル プロバイダーが可能性がありますでワイルドカード文字をサポートしているに注意してください、`usernameToMatch`パラメーター。 たとえば、<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>のメソッド、<xref:System.Web.Profile.SqlProfileProvider>クラスでのワイルドカード文字をサポートしている、`usernameToMatch`パラメーター</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 。       によって FindProfilesByUserName によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーター<xref:System.Web.Profile.ProfileInfo><xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfoCollection>で返されるオブジェクト</xref:System.Web.Profile.ProfileInfo>の最大数を特定する。 `pageIndex`パラメーターは、返される結果のどのページを特定します。&0; は最初のページを識別します。 `totalRecords`パラメーターは、`out`パラメーターで指定されたアプリケーションの使用頻度の低いユーザー プロファイルの合計数に設定されている、`applicationName`に基づいて、指定された構成ファイルで属性`authenticationOption`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値は 1 と、 `pageSize` 5 の<xref:System.Web.Profile.ProfileInfoCollection>が返されるは 6 ~ 10 番目のプロファイルが含まれて</xref:System.Web.Profile.ProfileInfoCollection>。 `totalRecords`パラメーターは 13 に設定されます。       <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: usernameToMatch
      type: System.String
      description: "検索対象のユーザー名。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "このメソッドが戻るとき、プロファイルの合計数を識別する整数が含まれています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>のユーザー名と一致する、指定されたプロファイルのユーザー プロファイル情報を含む<code> usernameToMatch </code>パラメーター。"
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイルにまたは指定した日付および時刻以前に発生した最後のアクティビティの日付のすべてのユーザー プロファイル データを取得します。"
  remarks: "GetAllInactiveProfiles メソッドがすべての未使用のユーザー プロファイルで指定されたアプリケーションのデータ ソースからのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>、指定された以前に発生する`userInactiveSinceDate`パラメーターの値</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。       オーバー ロードを使用してデータのページで、使用頻度の低いユーザー プロファイルのプロファイル情報を取得することができます、<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 。       GetAllInactiveProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている未使用のプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>を識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>無効なプロファイルに関するユーザー プロファイル情報を格納します。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ページを取得<xref href=&quot;System.Web.Profile.ProfileInfo&quot;></xref>または指定した日付および時刻以前に発生した最後のアクティビティの日付のユーザー プロファイル用のオブジェクト。"
  remarks: "GetAllInactiveProfiles メソッドが未使用のユーザー プロファイルで指定されたアプリケーション用のデータ ソースからのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>、指定の前に発生する`userInactiveSinceDate`パラメーターの値</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。       によって GetAllInactiveProfiles によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーター<xref:System.Web.Profile.ProfileInfo><xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfoCollection>で返されるオブジェクト</xref:System.Web.Profile.ProfileInfo>の最大数を特定する。 `pageIndex`パラメーターは、返される結果のどのページを特定します。&0; は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの使用頻度の低いユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、`authenticationOption`と`userInactiveSinceDate`パラメーター。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値 1 では、 `pageSize` 5 の<xref:System.Web.Profile.ProfileInfoCollection>が返されますは 6 ~ 10 番目の無効なプロファイルが含まれて</xref:System.Web.Profile.ProfileInfoCollection>。 `totalRecords`パラメーターは 13 に設定されます。       GetAllInactiveProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>を識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "このメソッドが戻るとき、プロファイルの合計数を識別する整数が含まれています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>無効なプロファイルに関するユーザー プロファイル情報を格納します。"
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "データ ソース内のプロファイルのユーザー プロファイル データを取得します。"
  remarks: "GetAllProfiles メソッドがで指定されたアプリケーションのデータ ソースからのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。       ページを取得する<xref:System.Web.Profile.ProfileInfo>のオーバー ロードを使用して、ユーザー プロファイル用のオブジェクト、<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>を受け取る追加メソッド`pageIndex`と`pageSize`パラメーター</xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfo> 。       GetAllProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName`.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>データ ソース内のプロファイルのすべてのユーザー プロファイル情報を格納します。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ユーザー プロファイル データのページを取得します。"
  remarks: "GetAllProfiles メソッドがで指定されたアプリケーションのデータ ソースからのプロファイル情報の取得に使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。       によって返される結果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>によって制限されて、`pageIndex`と`pageSize`パラメーター</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 。 `pageSize`パラメーター<xref:System.Web.Profile.ProfileInfo><xref:System.Web.Profile.ProfileInfoCollection></xref:System.Web.Profile.ProfileInfoCollection>で返されるオブジェクト</xref:System.Web.Profile.ProfileInfo>の最大数を特定する。 `pageIndex`パラメーターは、返される結果のどのページを特定します。&0; は最初のページを識別します。 `totalRecords`パラメーターは、`out`構成済みの使用頻度の低いユーザー プロファイルの合計数に設定されているパラメーター`applicationName`を基に、指定された`authenticationOption`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値 1 では、 `pageSize` 5 の<xref:System.Web.Profile.ProfileInfoCollection>が返されますは 6 ~ 10 番目のプロファイルが含まれて</xref:System.Web.Profile.ProfileInfoCollection>。 `totalRecords`パラメーターは 13 に設定されます。       GetAllProfiles メソッドの呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>既定のプロファイル プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>。 使用して既定のプロファイル プロバイダーが指定されて、`defaultProvider`構成要素の属性です。 ユーザー プロファイルの既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロパティが含まれている場合、その他のプロファイル プロバイダーのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するには、プロファイルを使用してプロバイダーへの参照を取得、<xref:System.Web.Profile.ProfileManager.Providers%2A>プロパティと呼び出し、<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>直接プロバイダーのメソッド</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A></xref:System.Web.Profile.ProfileManager.Providers%2A>。"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "このメソッドが戻るとき、プロファイルの合計数を識別する整数が含まれています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref>データ ソース内のプロファイルのすべてのユーザー プロファイル情報を格納します。"
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "指定した日付までには、最後のアクティビティの日付が発生したプロファイルの数を取得します。"
  remarks: "指定されたアプリケーションのデータ ソースからのすべての未使用のユーザー プロファイルの数を取得する GetNumberOfInactiveProfiles メソッドが使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルがカウントされますが、<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>または前に、指定された操作が発生`userInactiveSinceDate`パラメーターの値</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>。"
  example:
  - "The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクトを識別するユーザー プロファイルがアクティブでないと見なされます</xref:System.DateTime>。 場合、<xref:System.Web.Profile.ProfileInfo.LastActivityDate*>ユーザーのプロファイルが発生のまたはこの日付と時刻の前にプロファイルと見なされます使用頻度の低い</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>。"
    return:
      type: System.Int32
      description: "最後のアクティビティの日付が指定した日付と時刻の前に発生したデータ ソース内のプロファイルの数。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "データ ソース内のプロファイルの数を取得します。"
  remarks: "指定されたアプリケーションのデータ ソースからのすべてのユーザー プロファイルの数を取得する GetNumberOfProfiles メソッドが使用される、`applicationName`構成ファイル内の属性です。 使用して、`authenticationOption`のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "1 つ、 <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref>列挙値を指定する認証かどうか、匿名、または両方の種類のプロファイルが返されます。"
    return:
      type: System.Int32
      description: "データ ソース内のプロファイルの数。"
  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Provider
  id: Provider
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "アプリケーションの既定のプロファイル プロバイダーへの参照を取得します。"
  remarks: "プロバイダーのプロパティでは、アプリケーションの既定のプロファイル プロバイダーを直接参照することができます。 これは<xref:System.Web.Profile.ProfileProvider>抽象基本クラス</xref:System.Web.Profile.ProfileProvider>の一部ではないプロファイル プロバイダーのカスタムのメンバーにアクセスするには"
  example:
  - "The following code example lists properties of the default profile provider.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProvider Provider { get; }
    return:
      type: System.Web.Profile.ProfileProvider
      description: "アプリケーションの既定のプロファイル プロバイダー。"
  overload: System.Web.Profile.ProfileManager.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "少なくともせずプロバイダー プロパティ値の取得を試みました<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Providers
  id: Providers
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ASP.NET アプリケーションのプロファイル プロバイダーのコレクションを取得します。"
  remarks: "プロバイダーのプロパティは、すべてのアプリケーションに対して有効になっているプロファイル プロバイダーを参照はプロバイダーを含むコンピューターの構成とすべての Web.config ファイルに追加されたプロバイダーに追加されます。 プロファイル プロバイダーは、構成ファイルでセクションの要素を使用してアプリケーションの使用を制御できます。 たとえば、次の Web.config ファイルは親構成ファイルで指定されたプロファイル プロバイダーを削除し、追加、 <xref:System.Web.Profile.SqlProfileProvider>、アプリケーションのプロファイル プロバイダーとしてのインスタンス</xref:System.Web.Profile.SqlProfileProvider>。      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile enabled=&quot;true&quot; defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```設定して既定のプロバイダーを指定する必要がありますのセクションを指定する場合、`defaultProvider`属性。 コンピューター構成から値を使用する場合は、Web.config ファイルでセクションを指定しないと、および<xref:System.Web.Profile.SqlProfileProvider>AspNetSqlProvider をという名前のインスタンスが既定のプロバイダーとして確立された</xref:System.Web.Profile.SqlProfileProvider>。       プロバイダーのコレクションからプロバイダーへの厳密に型指定された参照を取得するには名前でプロファイル プロバイダーのインデックスを作成し、目的の型としてキャストします。"
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }
    return:
      type: System.Web.Profile.ProfileProviderCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileProviderCollection&quot;> </xref>の ASP.NET アプリケーション用に構成されたプロファイル プロバイダー。"
  overload: System.Web.Profile.ProfileManager.Providers*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "少なくともせずプロバイダー プロパティ値の取得を試みました<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>権限です。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
- uid: System.Web.Configuration.ProfilePropertySettings
  parent: System.Web.Configuration
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
- uid: System.Web.Profile.ProfileManager.ApplicationName
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileManager.Enabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.Provider
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.Profile.ProfileManager.Providers
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
- uid: System.Web.Profile.ProfileProviderCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProviderCollection
  nameWithType: ProfileProviderCollection
  fullName: System.Web.Profile.ProfileProviderCollection
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty
  nameWithType: ProfileManager.AddDynamicProfileProperty
- uid: System.Web.Profile.ProfileManager.ApplicationName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileManager.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileManager.DeleteProfile*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile
  nameWithType: ProfileManager.DeleteProfile
- uid: System.Web.Profile.ProfileManager.DeleteProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileManager.DeleteProfiles
- uid: System.Web.Profile.ProfileManager.Enabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileManager.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileManager.FindProfilesByUserName
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileManager.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetAllProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileManager.GetAllProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles
  nameWithType: ProfileManager.GetNumberOfProfiles
- uid: System.Web.Profile.ProfileManager.Provider*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
- uid: System.Web.Profile.ProfileManager.Providers*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
