### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerTransaction
  id: DesignerTransaction
  children:
  - System.ComponentModel.Design.DesignerTransaction.#ctor
  - System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  - System.ComponentModel.Design.DesignerTransaction.Cancel
  - System.ComponentModel.Design.DesignerTransaction.Canceled
  - System.ComponentModel.Design.DesignerTransaction.Commit
  - System.ComponentModel.Design.DesignerTransaction.Committed
  - System.ComponentModel.Design.DesignerTransaction.Description
  - System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerTransaction.Finalize
  - System.ComponentModel.Design.DesignerTransaction.OnCancel
  - System.ComponentModel.Design.DesignerTransaction.OnCommit
  - System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  langs:
  - csharp
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
  type: Class
  summary: "一連のパフォーマンスを改善し、ほとんどの種類の変更を元に戻すを有効にするデザイン時のアクションをグループ化する方法を提供します。"
  remarks: "トランザクションは、ことのできる完了した後で操作を追跡できます。 前の変更の値に変更された各プロパティを設定して各変更を破棄しようとして自動的にトランザクションをキャンセルして、トランザクション中に行われた変更を取り消すことができます。 トランザクションのトランザクションが完了するまで画面への更新を遅らせることで、一連の操作中にパフォーマンスを改善できます。       一部のコンポーネントを聞くことにより、トランザクションが完了するまで、その処理を遅延トランザクションが実行中のときに、<xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>と<xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>イベント</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed></xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>。 [プロパティ] ウィンドウは更新されませんの表示が、トランザクションが閉じられるまで、トランザクションが開いた後。       可逆または複数の操作のトランザクションを使用するには、作成操作または一連の元に戻すこと対象となる操作ごとに DesignerTransaction、デザイナーがあります。 元に戻すイベントのシーケンスが正常に完了するを妨げる可能性があるトランザクションの外部アクションを実行しないように注意します。       新しい DesignerTransaction <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> <xref:System.ComponentModel.Design.IDesignerHost>。</xref:System.ComponentModel.Design.IDesignerHost>のメソッド</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>を呼び出すことによって取得できます。 必ず、アクティブなから各 DesignerTransaction を取得して<xref:System.ComponentModel.Design.IDesignerHost>正しく新しい DesignerTransaction を直接作成するのではなく、処理メカニズムでは、デザイナーのトランザクションと統合するためにします</xref:System.ComponentModel.Design.IDesignerHost>。       トランザクション内でアクションを実行するには、まずにトランザクションを作成する必要があります。 呼び出す必要があります、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>メソッドのそれぞれの変更または変更のセットが発生すると、前に、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>メソッド各変更または一連の変更した後に発生します</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A></xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>。 最後に完了しを呼び出して、トランザクションを終了、<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>メソッド</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>。      > [!NOTE] > プロパティの値に変更を加える際に使用、<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>のメソッド、<xref:System.ComponentModel.PropertyDescriptor>のコンポーネントの変更メソッドを呼び出しますが、<xref:System.ComponentModel.Design.IComponentChangeService>され自動的に変更を表す DesignerTransaction が作成されます</xref:System.ComponentModel.Design.IComponentChangeService></xref:System.ComponentModel.PropertyDescriptor></xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>。       トランザクションを実行するには、次の手順を実行します。 1。  呼び出す<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>をトランザクションの制御に使用できる DesignerTransaction を取得します</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>。      2.  内で、 `try` DesignerTransaction、呼び出しを追跡したい各アクションのブロック、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>メソッドを呼び出して、変更または変更、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>変更または変更が行われたことを通知するメソッド</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A></xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>。      3.  トランザクションを完了するには、呼び出す<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>内から、`finally`ブロック</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>。       C# の場合は、使用することができます、`using`ステートメントではなく、`try/finally`ブロックする場合に、次の例のようにします。      ```   using (host.CreateTransaction() {   // Insert your code here.   }   ```[キャンセル] を前に、コミットされたトランザクションをロールバックしようとしていますは、呼び出し、<xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>メソッド。</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> 。 ときに、<xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>メソッドが呼び出され、変更をロールバックしようとする、DesignerTransaction で追跡操作が取り消されます</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>。 以前のトランザクションの一部として発生したアクションを元に戻すには、開発環境で提供元に戻すコマンドを使用する必要があります。"
  example:
  - "The following code example program demonstrates how to create a DesignerTransaction from a designer. To run this sample, compile the source code into a class library. You must add a reference to the System.Design assembly. In a new project, add a reference to the compiled DLL and add the component in the library to the **Toolbox**.  \n  \n There is extensive support for this feature in Visual Studio.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n The designer can optionally display notifications about designer transaction events. If you add an instance of the `DTComponent` to a form while in design mode, a message box appears asking whether you would like to receive designer transaction event notifications. You may toggle these notifications using the shortcut menu that appears when you right-click an instance of the `DTComponent`. Transactions are created when you change values using the Properties window. You can also have the designer perform a transaction by clicking **Perform Example Transaction** on the shortcut menu for the component.  \n  \n [!code-cpp[DesignerTransaction Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._6_1.cpp)]\n [!code-vb[DesignerTransaction Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._6_1.vb)]\n [!code-cs[DesignerTransaction Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._6_1.cs)]"
  syntax:
    content: 'public abstract class DesignerTransaction : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>説明のないクラスです。"
  syntax:
    content: protected DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>クラスの指定されたトランザクションの説明を使用します。"
  remarks: "このコンス トラクターは、指定された説明を使用してトランザクションを初期化します。"
  syntax:
    content: protected DesignerTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "このトランザクションの説明。"
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  id: Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "トランザクションをキャンセルし、そのトランザクションのイベントによって行われた変更をロールバックしようとしています。"
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  id: Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "トランザクションがキャンセルされたかどうかを示す値を取得します。"
  remarks: "デザイナーのトランザクションが取り消されると、トランザクション処理機構は、トランザクションでこれまでに行われた変更をロールバックしようとします。 これが成功したかどうかは、干渉して関連するコードの状態のいずれかの他の操作かどうかと、一連の必要な操作を完了できなかったかどうか、各操作の種類などの要因によって異なります。"
  syntax:
    content: public bool Canceled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、トランザクションが取り消されました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.DesignerTransaction.Canceled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  id: Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "このトランザクションをコミットします。"
  remarks: "デザイナーのトランザクションがコミットされると、トランザクションが完了したと見なす詳細の変更は追跡されません。       トランザクションがコミットされた後さらにこのメソッドの呼び出しを何もありません。 常に、トランザクションが正常に閉じることを確認するトランザクションの作成後にこのメソッドを呼び出します。"
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  id: Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "トランザクションがコミットされたかどうかを示す値を取得します。"
  remarks: "デザイナーのトランザクションがコミットされると、トランザクションが完了したと見なす詳細の変更は追跡されません。"
  syntax:
    content: public bool Committed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、トランザクションがコミットされます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.DesignerTransaction.Committed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  id: Description
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "トランザクションの説明を取得します。"
  remarks: "トランザクション操作の性質を特定するに役に立つ説明ことができます。"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "トランザクションの説明。"
  overload: System.ComponentModel.Design.DesignerTransaction.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose()`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターは`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.ComponentModel.Design.DesignerTransaction>参照。</xref:System.ComponentModel.Design.DesignerTransaction> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.ComponentModel.Design.DesignerTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  id: Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "このオブジェクトに関連付けられているリソースを解放します。 このオーバーライドは、まだコミットされていなかった場合、このトランザクションをコミットします。"
  remarks: "このメソッドは<xref:System.Object.Finalize%2A?displayProperty=fullName>呼び出すことによって、リソースをクリーンアップし、 `Dispose(false)`</xref:System.Object.Finalize%2A?displayProperty=fullName> 。 オーバーライド`Dispose(Boolean)`してクリーンアップをカスタマイズします。       アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>メソッド</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>。       詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。"
  syntax:
    content: ~DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  id: OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "発生させる、 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref>イベント。"
  remarks: "デザイナーのトランザクションが取り消されると、トランザクション処理機構は、トランザクションでこれまでに行われた変更をロールバックしようとします。 これが成功したかどうかは、干渉して関連するコードの状態のいずれかの他の操作かどうかと、一連の必要な操作を完了できなかったかどうか、各操作の種類などの要因によって異なります。"
  syntax:
    content: protected abstract void OnCancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  id: OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "トランザクションのコミットの実際の作業を実行します。"
  remarks: "デザイナーのトランザクションがコミットされると、トランザクションが完了したと見なす詳細の変更は追跡されません。"
  syntax:
    content: protected abstract void OnCommit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>です。"
  remarks: "トランザクションが破棄されると、それがコミットされます。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction.DesignerTransaction
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel
  nameWithType: DesignerTransaction.Cancel
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
- uid: System.ComponentModel.Design.DesignerTransaction.Commit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit
  nameWithType: DesignerTransaction.Commit
- uid: System.ComponentModel.Design.DesignerTransaction.Committed*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose
  nameWithType: DesignerTransaction.Dispose
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize
  nameWithType: DesignerTransaction.Finalize
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel
  nameWithType: DesignerTransaction.OnCancel
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit
  nameWithType: DesignerTransaction.OnCommit
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DesignerTransaction.System.IDisposable.Dispose
