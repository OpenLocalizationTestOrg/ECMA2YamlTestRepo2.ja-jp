### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.TypeSchema
  id: TypeSchema
  children:
  - System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  - System.Web.UI.Design.TypeSchema.GetViews
  langs:
  - csharp
  name: TypeSchema
  nameWithType: TypeSchema
  fullName: System.Web.UI.Design.TypeSchema
  type: Class
  summary: "構造体、またはオブジェクト型のスキーマを表します。"
  remarks: "TypeSchema クラスでは、そのクラスのインスタンスを受け取り、特定のクラスに関する情報を提供します。 たとえば、指定された、<xref:System.Data.DataSet>オブジェクト、<xref:System.Web.UI.WebControls.GridView>オブジェクト、または作成したカスタム クラス、メソッドおよびプロパティのインスタンスは、オブジェクトの派生元クラスに関する情報を提供します</xref:System.Web.UI.WebControls.GridView></xref:System.Data.DataSet>。 クラスの特定のインスタンスに関する情報は提供されません。       TypeSchema クラスは、カスタム コントロールをプレビューするためのサンプル データの準備を支援するカスタム コントロールのデザイナーで使用されます。"
  syntax:
    content: 'public sealed class TypeSchema : System.Web.UI.Design.IDataSourceSchema'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.Design.IDataSourceSchema
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Web.UI.Design.TypeSchema&quot;> </xref>クラスの指定されたを使用して<xref:System.Type>オブジェクト</xref:System.Type>。"
  syntax:
    content: public TypeSchema (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>オブジェクトを説明する</xref:System.Type>。"
  overload: System.Web.UI.Design.TypeSchema.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.TypeSchema.GetViews
  id: GetViews
  parent: System.Web.UI.Design.TypeSchema
  langs:
  - csharp
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "ビューのデータ ソースにスキーマ記述子の配列を取得します。"
  remarks: "GetViews メソッドは常に<xref:System.Web.UI.Design.IDataSourceViewSchema><xref:System.Web.UI.Design.IDataSourceViewSchema>インターフェイス、正確な戻り値は、<xref:System.Web.UI.Design.TypeSchema>クラス</xref:System.Web.UI.Design.TypeSchema>のインスタンスを作成するときに、提供されるオブジェクトに依存する</xref:System.Web.UI.Design.IDataSourceViewSchema>その実装をオブジェクト</xref:System.Web.UI.Design.IDataSourceViewSchema>の配列を返します       次の表は、戻り値の例を示します。      |基になる型 |戻り値 |  |---------------------|------------------|  |A <xref:System.Data.DataSet>|<xref:System.Web.UI.Design.DataSetViewSchema>型の配列、<xref:System.Data.DataTable>ごとに&1; つです |。  |A <xref:System.Data.DataTable>|単一項目の配列、 <xref:System.Web.UI.Design.DataSetViewSchema>|。  |<xref:System.Collections.IEnumerable>タイプ |単一項目の配列、 <xref:System.Web.UI.Design.IDataSourceViewSchema>|。  |その他の種類 |単一項目の配列を含む、 <xref:System.Web.UI.Design.IDataSourceViewSchema>. |</xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Web.UI.Design.IDataSourceViewSchema> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Web.UI.Design.DataSetViewSchema> </xref:System.Data.DataSet>"
  syntax:
    content: public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();
    parameters: []
    return:
      type: System.Web.UI.Design.IDataSourceViewSchema[]
      description: "インスタンスの配列<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;> </xref>、または実装するクラスのインスタンスの<xref href=&quot;System.Web.UI.Design.IDataSourceViewSchema&quot;></xref>インターフェイスです。"
  overload: System.Web.UI.Design.TypeSchema.GetViews*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.TypeSchema.#ctor(System.Type)
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema(Type)
  nameWithType: TypeSchema.TypeSchema(Type)
  fullName: System.Web.UI.Design.TypeSchema.TypeSchema(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.TypeSchema.GetViews
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews()
  nameWithType: TypeSchema.GetViews()
  fullName: System.Web.UI.Design.TypeSchema.GetViews()
- uid: System.Web.UI.Design.IDataSourceViewSchema[]
  parent: System.Web.UI.Design
  isExternal: false
  name: IDataSourceViewSchema
  nameWithType: IDataSourceViewSchema
  fullName: System.Web.UI.Design.IDataSourceViewSchema[]
  spec.csharp:
  - uid: System.Web.UI.Design.IDataSourceViewSchema
    name: IDataSourceViewSchema
    nameWithType: IDataSourceViewSchema
    fullName: IDataSourceViewSchema[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Design.TypeSchema.#ctor*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: TypeSchema
  nameWithType: TypeSchema.TypeSchema
- uid: System.Web.UI.Design.TypeSchema.GetViews*
  parent: System.Web.UI.Design.TypeSchema
  isExternal: false
  name: GetViews
  nameWithType: TypeSchema.GetViews
