### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.SecurityIdentifier
  id: SecurityIdentifier
  children:
  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.AccountDomainSid
  - System.Security.Principal.SecurityIdentifier.BinaryLength
  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.GetHashCode
  - System.Security.Principal.SecurityIdentifier.IsAccountSid
  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  - System.Security.Principal.SecurityIdentifier.MinBinaryLength
  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.ToString
  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  - System.Security.Principal.SecurityIdentifier.Value
  langs:
  - csharp
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
  type: Class
  summary: "セキュリティ識別子 (SID) を表し、Sid のマーシャ リングと比較の操作を提供します。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable<System.Security.Principal.SecurityIdentifier>
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements:
  - System.IComparable<System.Security.Principal.SecurityIdentifier>
  inheritedMembers:
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>セキュリティ識別子 (SID) のバイナリ形式を表す整数を使用してクラスです。"
  syntax:
    content: public SecurityIdentifier (IntPtr binaryForm);
    parameters:
    - id: binaryForm
      type: System.IntPtr
      description: "SID のバイナリ形式を表す整数。"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>セキュリティ記述子定義言語 (SDDL) 形式で指定したセキュリティ識別子 (SID) を使用して、クラスです。"
  syntax:
    content: public SecurityIdentifier (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: "SID の SDDL 文字列を作成するために使用、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>セキュリティ識別子 (SID) の場合は、指定されたバイナリ表現を使用して、クラスです。"
  syntax:
    content: public SecurityIdentifier (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "SID を表すバイト配列。"
    - id: offset
      type: System.Int32
      description: "バイトの開始インデックスとして使用するオフセット`binaryForm`です。"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>ドメイン SID と指定した既知のセキュリティ識別子 (SID) の型を使用してクラスです。"
  syntax:
    content: public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);
    parameters:
    - id: sidType
      type: System.Security.Principal.WellKnownSidType
      description: "列挙値の&1; つ。 この値にする必要がありますいない<xref href=&quot;System.Security.Principal.WellKnownSidType&quot;></xref>です。"
    - id: domainSid
      type: System.Security.Principal.SecurityIdentifier
      description: "The domain SID. This value is required for the following <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values. This parameter is ignored for any other <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values.  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  id: AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "によって表される SID からアカウント ドメインのセキュリティ識別子 (SID) の部分を返します、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクトのかどうか、SID は Windows アカウントの SID を表します。 SID が Windows アカウントの SID を表していない場合は、このプロパティは<xref:System.ArgumentNullException>。</xref:System.ArgumentNullException>を返します"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "によって表される SID から、アカウントのドメイン SID が部分、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> SID は Windows を表す場合は、オブジェクトのアカウントの SID <xref:System.ArgumentNullException>。</xref:System.ArgumentNullException>を返しますそれ以外の場合。"
  overload: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  id: BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "(バイト単位) で表されるセキュリティ識別子 (SID) の長さを返します、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
  syntax:
    content: public int BinaryLength { get; }
    return:
      type: System.Int32
      description: "によって表される SID の長さをバイト単位で、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  id: CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "現在の比較<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>指定したオブジェクト<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  syntax:
    content: public int CompareTo (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "現在のオブジェクトと比較するオブジェクト。"
    return:
      type: System.Int32
      description: "このインスタンスの相対値を示す符号付き数値と<code> sid</code>です。       <table><thead><tr><th> 戻り値       </th><th> 説明       </th></tr></thead><tbody><tr><td> 0 より小さい値       </td><td> このインスタンスより小さい<code> sid</code>です。       </td></tr><tr><td> 0       </td><td> このインスタンスと等しい<code> sid</code>です。       </td></tr><tr><td> 0 より大きい値       </td><td> このインスタンスがより大きい<code> sid</code>です。       </td></tr></tbody></table>"
  overload: System.Security.Principal.SecurityIdentifier.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクトが、指定されたオブジェクトと等しい。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "これと比較するオブジェクト<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> o </code>は同じオブジェクトの基になる型および値としてこの<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  id: Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "示すかどうか、指定した<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクトが現在<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  syntax:
    content: public bool Equals (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "現在のオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> sid </code>が現在の値と等しい<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "によって表される、指定したセキュリティ識別子 (SID) のバイナリ表現のコピー、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>バイト配列へのクラスです。"
  syntax:
    content: public void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "コピーされた SID を受信するバイト配列。"
    - id: offset
      type: System.Int32
      description: "バイトの開始インデックスとして使用するオフセット`binaryForm`です。"
  overload: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "現在のハッシュ関数として機能<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。 GetHashCode メソッドは、ハッシュ アルゴリズムやデータ構造、ハッシュ テーブルなどに適しています。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のハッシュ値<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  id: IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "セキュリティ識別子 (SID) が、これによって表されるかどうかを示す値を返します<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクトが有効な Windows アカウントの SID。"
  syntax:
    content: public bool IsAccountSid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>これで、SID が表される場合<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクトが有効な Windows アカウントの SID、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "セキュリティ識別子 (SID) が、これによって表されるかどうかを示す値を返します<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクトが指定された SID と同じドメインからです。"
  syntax:
    content: public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "これと比較する SID <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>これで、SID が表される場合<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>と同じドメイン内のオブジェクトが、 <code> sid </code> SID 以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "指定した型が有効な変換の型をするかどうかを示す値を返します、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>クラスです。"
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> targetType </code>は有効な変換の型を<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>クラスです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  id: IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "示す値を返すかどうか、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクトが指定した既知のセキュリティ識別子 (SID) の型と一致します。"
  syntax:
    content: public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);
    parameters:
    - id: type
      type: System.Security.Principal.WellKnownSidType
      description: "比較する値、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> type </code>の SID の種類は、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  id: MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "セキュリティ識別子のバイナリ表現のバイト単位の最大サイズを返します。"
  syntax:
    content: public static readonly int MaxBinaryLength;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  id: MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "セキュリティ識別子のバイナリ表現のバイト数で最小のサイズを返します。"
  syntax:
    content: public static readonly int MinBinaryLength;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比較する&2; つ<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>それらが等しいかどうかを判断するオブジェクト。 それらは等しいと見なされるによって返されるものと同じ正規表現している場合、<xref:System.Security.Principal.SecurityIdentifier.Value*>プロパティまたはが両方とも<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Security.Principal.SecurityIdentifier.Value*> 。"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "等値比較に使用する左オペランド。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "等値比較に使用する右側のオペランド。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "比較する&2; つ<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>両者が等しくないかどうかを決定するオブジェクト。 それらが等しくないと見なさによって返される&1; つの異なる正規名表現している場合、<xref:System.Security.Principal.SecurityIdentifier.Value*>プロパティまたはオブジェクトのいずれかが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>もう一方はありません</xref:System.Security.Principal.SecurityIdentifier.Value*>。"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "非等値比較に使用する左オペランド。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "非等値比較に使用する右側のオペランド。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.ToString
  id: ToString
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "によって表されるアカウントのセキュリティ記述子定義言語 (SDDL) 形式でセキュリティ識別子 (SID) を返します、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。 SDDL 形式の例は、S-1-5 ~&9; です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "によって表されるアカウント用の SDDL 形式で、SID、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "によって表されるアカウント名を変換、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト別に<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-派生型です。"
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "変換のターゲット型<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>です。 ターゲットの種類により有効と見なされる型でなければなりません、<xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>メソッド</xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>。"
    return:
      type: System.Security.Principal.IdentityReference
      description: "変換後の id。"
  overload: System.Security.Principal.SecurityIdentifier.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType </code><xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>型です。"
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Id 参照の一部またはすべてを変換できませんでした。"
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Win32 エラー コードが返されました。"
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Value
  id: Value
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "これによって表されるセキュリティ識別子 (SID) の大文字のセキュリティ記述子定義言語 (SDDL) 文字列を返します<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>オブジェクト。"
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "大文字の SDDL 文字列によって表される SID に対して、 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>オブジェクト。"
  overload: System.Security.Principal.SecurityIdentifier.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Principal.IdentityReference
  isExternal: false
  name: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
- uid: System.Security.Principal.WellKnownSidType
  parent: System.Security.Principal
  isExternal: false
  name: WellKnownSidType
  nameWithType: WellKnownSidType
  fullName: System.Security.Principal.WellKnownSidType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.ToString
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
- uid: System.Security.Principal.SecurityIdentifier.Value
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
- uid: System.Security.Principal.SecurityIdentifier.#ctor*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo
  nameWithType: SecurityIdentifier.CompareTo
- uid: System.Security.Principal.SecurityIdentifier.Equals*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals
  nameWithType: SecurityIdentifier.Equals
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm
  nameWithType: SecurityIdentifier.GetBinaryForm
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode
  nameWithType: SecurityIdentifier.GetHashCode
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid
  nameWithType: SecurityIdentifier.IsAccountSid
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid
  nameWithType: SecurityIdentifier.IsEqualDomainSid
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType
  nameWithType: SecurityIdentifier.IsValidTargetType
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown
  nameWithType: SecurityIdentifier.IsWellKnown
- uid: System.Security.Principal.SecurityIdentifier.op_Equality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality
  nameWithType: SecurityIdentifier.op_Equality
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality
  nameWithType: SecurityIdentifier.op_Inequality
- uid: System.Security.Principal.SecurityIdentifier.ToString*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityIdentifier.ToString
- uid: System.Security.Principal.SecurityIdentifier.Translate*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate
  nameWithType: SecurityIdentifier.Translate
- uid: System.Security.Principal.SecurityIdentifier.Value*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
