### YamlMime:ManagedReference
items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  - System.Security.HostSecurityManager.DomainPolicy
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: HostSecurityManager
  nameWithType: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  summary: "コントロールとアプリケーション ドメインのセキュリティ動作のカスタマイズを使用できます。"
  remarks: "新しい<xref:System.AppDomain>共通言語ランタイムを照会、 <xref:System.AppDomainManager> <xref:System.AppDomain>。</xref:System.AppDomain>セキュリティ上の決定をする際に参加するの HostSecurityManager の存在</xref:System.AppDomainManager></xref:System.AppDomain>を作成する場合  ホストのプロバイダーは、HostSecurityManager クラスから継承するホスト セキュリティ マネージャーを実装する必要があります。"
  example:
  - "The following example shows a very simple implementation of a HostSecurityManager.  \n  \n [!code-cs[System.Security.HostSecurityManager#1](~/add/codesnippet/csharp/t-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#1](~/add/codesnippet/visualbasic/t-system.security.hostse_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class HostSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.HostSecurityManager&quot;> </xref>クラスです。"
  syntax:
    content: public HostSecurityManager ();
    parameters: []
  overload: System.Security.HostSecurityManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "アプリケーションを実行する必要があるかどうかを判断します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。 基底の実装では、アプリケーションを実行する必要があるかどうかを決定するアプリケーションのセキュリティ マネージャーを呼び出します。       基底の実装では、アクティベーターの証拠を使用しません。 ただし、オーバーライドされた実装では、アプリケーションを有効にしようとすると、アプリケーション ドメインのセキュリティ証拠を決定するのにアクティベーターの証拠を使用できます。"
  example:
  - "The following example shows how to override the DetermineApplicationTrust method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#3](~/add/codesnippet/csharp/c64c31c7-d035-4489-84b0-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#3](~/add/codesnippet/visualbasic/c64c31c7-d035-4489-84b0-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: applicationEvidence
      type: System.Security.Policy.Evidence
      description: "アクティブ化するアプリケーションの証拠。"
    - id: activatorEvidence
      type: System.Security.Policy.Evidence
      description: "必要に応じて、アクティブ化のアプリケーション ドメインの証拠。"
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "信頼できるコンテキスト。"
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "アプリケーションの信頼情報を格納するオブジェクト。"
  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationEvidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>オブジェクトは、アプリケーションの証拠で見つかりませんでした。       - または -、<xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>アクティベーション引数ではプロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>許可セットに、最小要求セットの指定が含まれていない、 <xref href=&quot;System.ActivationContext&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DomainPolicy
  id: DomainPolicy
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "派生クラスでオーバーライドされるは、現在のアプリケーション ドメインのセキュリティ ポリシーを取得します。"
  remarks: "このプロパティは、派生クラスでオーバーライドできます。 基本の実装は常に返します`null`です。       このプロパティで呼び出される<xref:System.AppDomain>作成時間</xref:System.AppDomain>。 これにより、ホストは、現在<xref:System.AppDomain>。</xref:System.AppDomain>のポリシーを指定するには  次のポリシー レベルで構成されます:-コード グループのセットが&1; つのツリーに編成します。      -コード グループに属するコードに付与されるアクセス許可を指定するのには、コード グループによって参照されている名前付き権限セットのセット。      -完全に信頼されたアセンブリの一覧です。      > [!IMPORTANT] > の継承時の注意を参照してください、<xref:System.Security.HostSecurityManager>実装の重要な情報のクラス</xref:System.Security.HostSecurityManager>。"
  syntax:
    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }
    return:
      type: System.Security.Policy.PolicyLevel
      description: "現在のアプリケーション ドメインのセキュリティ ポリシー。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.HostSecurityManager.DomainPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このメソッドが残されているコード アクセス セキュリティ (CAS) ポリシーを使用して、[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]です。 .NET Framework の旧バージョンとの互換性のための CAS ポリシーを有効にするには、 [ &lt;legacyCasPolicy&gt;要素](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)です。"
  platform:
  - net462
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "ホストに重要なセキュリティ ポリシーのコンポーネントを表すフラグを取得します。"
  remarks: "このプロパティは、派生クラスでオーバーライドできます。 基本の実装は常に返します<xref:System.Security.HostSecurityManagerOptions>。</xref:System.Security.HostSecurityManagerOptions>       派生ホストのサブセットだけの場合に、このプロパティの値を変更することができます、<xref:System.Security.HostSecurityManagerOptions>は対象とします</xref:System.Security.HostSecurityManagerOptions>。  可能なサブセットには、none、拒否されたセットで、ポリシー レベル、およびアセンブリの証拠が含まれます。"
  example:
  - "The following example shows how to override the Flags property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#2](~/add/codesnippet/csharp/p-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#2](~/add/codesnippet/visualbasic/p-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }
    return:
      type: System.Security.HostSecurityManagerOptions
      description: "セキュリティ ポリシーのコンポーネントを指定する列挙値の&1; つ。 既定値は<xref href=&quot;System.Security.HostSecurityManagerOptions&quot;></xref>です。"
  overload: System.Security.HostSecurityManager.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "アプリケーション ドメインの特定の証拠の種類を要求します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。 基本の実装を返します`null`です。       指定した型の証拠が現在<xref:System.AppDomain>。</xref:System.AppDomain>の必要なときに、共通言語ランタイムはこのメソッドを呼び出します 返される値は、ホストが指定した証拠、として使用されに格納されて、<xref:System.AppDomain.Evidence%2A>のコレクション、<xref:System.AppDomain.CurrentDomain%2A>プロパティ</xref:System.AppDomain.CurrentDomain%2A></xref:System.AppDomain.Evidence%2A>。 使用することができます、<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>をコレクションから生成された証拠を取得するメソッド</xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>。       このメソッドへのコールバックを取得するホストを指定する必要があります、<xref:System.Security.HostSecurityManagerOptions>フラグ、<xref:System.Security.HostSecurityManager.Flags%2A>プロパティ</xref:System.Security.HostSecurityManager.Flags%2A></xref:System.Security.HostSecurityManagerOptions>。       証拠を生成するには、このメソッドにより、ホストの証拠の生成を遅延させる、<xref:System.AppDomain>証拠が必要になるまで</xref:System.AppDomain>。 .NET Framework バージョン 3.5 と以前のバージョンで提供する必要がある<xref:System.AppDomain>証拠読み込み時にオーバーライドすることで、<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>メソッド</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A></xref:System.AppDomain>。 GenerateAppDomainEvidence を使用して、 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>。</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>をオーバーライドする代わりに証拠を提供することをお勧めします。       GenerateAppDomainEvidence メソッドがコールバックに、ホストのオーバーライドで指定された証拠の種類に対してのみ、<xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>メソッド</xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>。       戻り値の`null`ホストがこの特定の種類の証拠を生成できないことを示します。"
  example:
  - "The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#6](~/add/codesnippet/csharp/m-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#6](~/add/codesnippet/visualbasic/m-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "証拠の型。"
    return:
      type: System.Security.Policy.EvidenceBase
      description: "要求されたアプリケーション ドメインの証拠。"
  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "アセンブリの特定の証拠の種類を要求します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。 基本の実装を返します`null`です。       共通言語ランタイムは、指定した型の証拠が現在のアセンブリに必要な場合、このメソッドを呼び出します。 返される値は、ホストが指定した証拠、として使用されに格納されて、<xref:System.Reflection.Assembly.Evidence%2A>プロパティ</xref:System.Reflection.Assembly.Evidence%2A>。 使用することができます、<xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>から生成された証拠を入手する方法、<xref:System.Reflection.Assembly.Evidence%2A>プロパティ</xref:System.Reflection.Assembly.Evidence%2A></xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>。       このメソッドへのコールバックを取得するホストを指定する必要があります、<xref:System.Security.HostSecurityManagerOptions>フラグ、<xref:System.Security.HostSecurityManager.Flags%2A>プロパティ</xref:System.Security.HostSecurityManager.Flags%2A></xref:System.Security.HostSecurityManagerOptions>。       証拠を生成するには、このメソッドにより、ホストの証拠の生成を遅延させる、<xref:System.AppDomain>証拠が必要になるまで</xref:System.AppDomain>。 .NET Framework 3.5 と以前のバージョンで提供する必要がある<xref:System.AppDomain>証拠読み込み時にオーバーライドすることで、<xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>メソッド</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A></xref:System.AppDomain>。 GenerateAssemblyEvidence を使用して、 <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>。</xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>をオーバーライドする代わりに証拠を提供することをお勧めします。       GenerateAssemblyEvidence メソッドがコールバックに、ホストのオーバーライドで指定された証拠の種類に対してのみ、<xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>メソッド</xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>。       戻り値の`null`ホストがこの特定の種類の証拠を生成できないことを示します。"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "証拠の型。"
    - id: assembly
      type: System.Reflection.Assembly
      description: "対象のアセンブリ。"
    return:
      type: System.Security.Policy.EvidenceBase
      description: "要求されたアセンブリの証拠。"
  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "要求された場合は、アプリケーション ドメインのホストが提供できる証拠の型を決定します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。 基本の実装を返します`null`です。       このメソッドによって返される型を決定するかどうか、<xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>にメソッドが戻ると呼ばれます</xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>。 この一覧に種類の存在ないわけでは、ホストがこの証拠の種類を生成できることができなければ、可能性があります。 この理由から、下の種類を指定するこの一覧によりもすぎたことを指定することをお勧めします。"
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "証拠の種類の配列。"
  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "要求された場合は、ホストが、アセンブリの提供できる証拠の型を決定します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。 基本の実装を返します`null`です。       このメソッドによって返される型を決定するかどうか、<xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>にメソッドが戻ると呼ばれます</xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>。 この一覧に種類の存在ないわけでは、ホストがこの証拠の種類を生成できることができなければ、可能性があります。 この理由から、下の種類を指定するこの一覧によりもすぎたことを指定することをお勧めします。"
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "対象のアセンブリ。"
    return:
      type: System.Type[]
      description: "証拠の種類の配列。"
  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "読み込まれるアセンブリをアプリケーション ドメインの証拠を提供します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。       このメソッドを呼び出すたびに、<xref:System.AppDomain>オブジェクトを作成します</xref:System.AppDomain>。 `inputEvidence`パラメーターは、共通言語ランタイムからの証拠を計算します。 ホストの実装は、拡大または縮小、証拠を選択できます。 戻り値は、アプリケーション ドメインに使用する証拠です。  基本の実装は常には、として渡された証拠オブジェクトを返します、`inputEvidence`パラメーター。      > [!IMPORTANT] > の継承時の注意を参照してください、<xref:System.Security.HostSecurityManager>実装の重要な情報のクラス</xref:System.Security.HostSecurityManager>。"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "追加する証拠の<xref href=&quot;System.AppDomain&quot;></xref>証拠。"
    return:
      type: System.Security.Policy.Evidence
      description: "使用する証拠の<xref href=&quot;System.AppDomain&quot;></xref>です。"
  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "読み込まれるアセンブリのアセンブリの証拠を提供します。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。       このメソッドは、暗黙的または明示的には、アセンブリが読み込まれるたびに呼び出されます。 渡されたパラメーターは、読み込まれるアセンブリおよび共通言語ランタイムから計算された証拠です。 ホストの実装は、拡大または縮小、証拠を選択できます。 戻り値は、アセンブリに使用する証拠です。  基本の実装は常には、として渡された証拠オブジェクトを返します、`inputEvidence`パラメーター。      > [!IMPORTANT] > の継承時の注意を参照してください、<xref:System.Security.HostSecurityManager>実装の重要な情報のクラス</xref:System.Security.HostSecurityManager>。"
  example:
  - "The following example shows how to override the ProvideAssemblyEvidence method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#5](~/add/codesnippet/csharp/b37483ba-2dfe-4c5d-87e6-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#5](~/add/codesnippet/visualbasic/b37483ba-2dfe-4c5d-87e6-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
      description: "読み込まれたアセンブリ。"
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "アセンブリの証拠を追加する証拠。"
    return:
      type: System.Security.Policy.Evidence
      description: "アセンブリに使用する証拠。"
  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "指定された証拠に基づいて、コードに与えるアクセス許可を決定します。"
  remarks: "このメソッドは、指定された証拠を提供、セキュリティ ポリシー エンジンを呼び出します。 結果は、セキュリティ ポリシーによって決定されます。"
  syntax:
    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "ポリシーを評価する際に使用する証拠。"
    return:
      type: System.Security.PermissionSet
      description: "セキュリティ システムで許可できる権限のセット。"
  overload: System.Security.HostSecurityManager.ResolvePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.HostSecurityManager.#ctor
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.HostSecurityManager.DomainPolicy
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.HostSecurityManager.Flags
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  name: HostSecurityManagerOptions
  nameWithType: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.HostSecurityManager.#ctor*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager
  nameWithType: HostSecurityManager.HostSecurityManager
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: HostSecurityManager.DetermineApplicationTrust
- uid: System.Security.HostSecurityManager.DomainPolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
- uid: System.Security.HostSecurityManager.Flags*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence
- uid: System.Security.HostSecurityManager.ResolvePolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: HostSecurityManager.ResolvePolicy
