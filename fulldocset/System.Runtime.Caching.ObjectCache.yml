### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ObjectCache
  id: ObjectCache
  children:
  - System.Runtime.Caching.ObjectCache.#ctor
  - System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  - System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCount(System.String)
  - System.Runtime.Caching.ObjectCache.GetEnumerator
  - System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  - System.Runtime.Caching.ObjectCache.Host
  - System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  - System.Runtime.Caching.ObjectCache.Item(System.String)
  - System.Runtime.Caching.ObjectCache.Name
  - System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  - System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ObjectCache
  nameWithType: ObjectCache
  fullName: System.Runtime.Caching.ObjectCache
  type: Class
  summary: "オブジェクト キャッシュを表し、オブジェクトのキャッシュにアクセスするため、基本メソッドとプロパティを提供します。"
  remarks: "ObjectCache 型は、メモリ内オブジェクト キャッシュの主な型です。 カスタムのキャッシュ実装を開発するには、ObjectCache クラスから派生します。      > [!NOTE] >、ObjectCache クラスは新機能としての[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]です。       組み込みの<xref:System.Runtime.Caching.MemoryCache>ObjectCache クラス クラスの派生</xref:System.Runtime.Caching.MemoryCache> <xref:System.Runtime.Caching.MemoryCache>クラスは、具象のみオブジェクト キャッシュの実装で、 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] ObjectCache クラスから派生した</xref:System.Runtime.Caching.MemoryCache>"
  syntax:
    content: 'public abstract class ObjectCache : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "初期化するために、派生クラスのコンス トラクターから呼び出される、 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref>クラスです。"
  syntax:
    content: protected ObjectCache ();
    parameters: []
  overload: System.Runtime.Caching.ObjectCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、しようとするキャッシュ エントリとしてキャッシュに挿入、 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref>インスタンスし、エントリを削除する方法の詳細を追加します。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドのオーバー ロードは仮想 (抽象化されない) で、<xref:System.Runtime.Caching.ObjectCache>クラス<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドが<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を内部的に呼び出す</xref:System.Runtime.Caching.ObjectCache.Add%2A></xref:System.Runtime.Caching.ObjectCache></xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、メソッドのオーバー ロードを提供するキャッシュの実行者が持つの数が減少します。 任意の特別な動作のかどうか、キャッシュの実装は必要ありません、<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッド、できるだけを実装して、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバー ロード</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A></xref:System.Runtime.Caching.ObjectCache.Add%2A>。"
  syntax:
    content: public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "追加するオブジェクト。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>がある場合、として同じキーを持つキャッシュのエントリでは既に<code> item</code>です。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、すべて既存のキャッシュ エントリを上書きすることがなくキャッシュのキャッシュ エントリを挿入します。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドのオーバー ロードは仮想 (抽象化されない) で、<xref:System.Runtime.Caching.ObjectCache>クラス<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドが<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を内部的に呼び出す</xref:System.Runtime.Caching.ObjectCache.Add%2A></xref:System.Runtime.Caching.ObjectCache></xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、メソッドのオーバー ロードを提供するキャッシュの実行者が持つの数が減少します。 任意の特別な動作のかどうか、キャッシュの実装は必要ありません、<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッド、できるだけを実装して、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバー ロード</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A></xref:System.Runtime.Caching.ObjectCache.Add%2A>。"
  syntax:
    content: public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定日付と時刻をキャッシュ エントリの有効期限します。 このパラメーターは必要なときに、<xref:System.Runtime.Caching.ObjectCache.Add*>メソッドが呼び出されます</xref:System.Runtime.Caching.ObjectCache.Add*>。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 領域がで実装されていないため[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]、既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入が成功した場合または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>がある場合、として同じキーを持つキャッシュのエントリでは既に<code> key</code>です。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュにエントリを削除する方法に関する情報を指定するキャッシュ エントリを挿入します。"
  remarks: "<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドのオーバー ロードは仮想 (抽象化されない) で、<xref:System.Runtime.Caching.ObjectCache>クラス<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドが<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を内部的に呼び出す</xref:System.Runtime.Caching.ObjectCache.Add%2A></xref:System.Runtime.Caching.ObjectCache></xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、メソッドのオーバー ロードを提供するキャッシュの実行者が持つの数が減少します。 任意の特別な動作のかどうか、キャッシュの実装は必要ありません、<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッド、できるだけを実装して、<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバー ロード</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A></xref:System.Runtime.Caching.ObjectCache.Add%2A>。"
  syntax:
    content: public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>挿入再試行が成功した場合または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>がある場合と同じキーでキャッシュのエントリでは既に<code> key</code>です。"
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、指定した挿入<xref href=&quot;System.Runtime.Caching.CacheItem&quot;></xref>エントリを削除する方法に関する情報を指定する、キャッシュにオブジェクト。"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: value
      type: System.Runtime.Caching.CacheItem
      description: "挿入するオブジェクト。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
    return:
      type: System.Runtime.Caching.CacheItem
      description: "同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリ。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュを追加するキー、キャッシュ エントリ、絶対有効期限値、および省略可能な領域のオブジェクトを使用して、キャッシュ内にキャッシュ エントリを挿入します。"
  remarks: "この AddOrGetExisting メソッドのオーバー ロードがない、オブジェクトの値を返します、<xref:System.Runtime.Caching.CacheItem>オブジェクト</xref:System.Runtime.Caching.CacheItem>。"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定日付と時刻をキャッシュ エントリの有効期限します。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリの値です。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ内に、キーと、キャッシュ エントリと、エントリを削除する方法に関する情報の値を指定するキャッシュ エントリを挿入します。"
  remarks: "AddOrGetExisting メソッドがない、オブジェクトの値を返します、<xref:System.Runtime.Caching.CacheItem>オブジェクト</xref:System.Runtime.Caching.CacheItem>。"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリの値です。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ エントリがキャッシュに既に存在するかどうかを確認します。"
  syntax:
    content: public abstract bool Contains (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュがある、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャッシュと同じキー値を持つキャッシュ エントリを含むかどうか<code> key </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、作成、 <xref href=&quot;System.Runtime.Caching.CacheEntryChangeMonitor&quot;> </xref>オブジェクトへの変更に応答内のイベントをトリガーするキャッシュ エントリを指定します。"
  remarks: "ときに、派生<xref:System.Runtime.Caching.ObjectCache>クラスが基本 CreateCacheEntryChangeMonitor メソッドをオーバーライド、キャッシュの実装を作成する必要があります、<xref:System.Runtime.Caching.CacheEntryChangeMonitor>オブジェクト</xref:System.Runtime.Caching.CacheEntryChangeMonitor></xref:System.Runtime.Caching.ObjectCache>。 この特殊な変更通知の呼び出し元で指定されているキャッシュ エントリへの変更がある場合、`keys`パラメーター。 たとえば、監視対象のアイテムで、`keys`このメソッドによって作成された変更の監視イベントをトリガーする、パラメーターを更新またはキャッシュから削除します。       として文字列値を指定することができます、キャッシュの実装では、名前付きキャッシュの領域をサポートする場合、`regionName`パラメーター。 それ以外の場合、既定値に`null`です。      > [!NOTE] > キャッシュ エントリの変更の監視をサポートしていないすべてのキャッシュ実装します。 キャッシュ実装をサポートしているかどうかを判断する<xref:System.Runtime.Caching.CacheEntryChangeMonitor>、オブジェクトが特定のキャッシュ実装では、ドキュメントを参照しています</xref:System.Runtime.Caching.CacheEntryChangeMonitor>。"
  syntax:
    content: public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "監視するキャッシュ エントリの一意の識別子。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュがキーに、キャッシュ内の名前付き領域、`keys`地域が実装されている場合、パラメーターが存在します。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Runtime.Caching.CacheEntryChangeMonitor
      description: "キャッシュ内のキャッシュ エントリを監視する変更監視します。"
  overload: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  id: DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ実装を提供する機能の説明を取得します。"
  syntax:
    content: public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }
    return:
      type: System.Runtime.Caching.DefaultCacheCapabilities
      description: "キャッシュの実装の既定の機能を示すフラグのビットごとの組み合わせ。"
  overload: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、指定されたキャッシュ エントリをキャッシュからオブジェクトとして取得します。"
  syntax:
    content: public abstract object Get (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "取得するキャッシュ エントリの一意の識別子。"
    - id: regionName
      type: System.String
      description: "任意。 地域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内で名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "によって識別されるそのキャッシュ エントリ<code> key</code>です。"
  overload: System.Runtime.Caching.ObjectCache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  id: GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、としてキャッシュから指定されたキャッシュ エントリを取得、 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref>インスタンス。"
  remarks: "一部のキャッシュ実装は、<xref:System.Runtime.Caching.CacheItem>クラス</xref:System.Runtime.Caching.CacheItem>を長引く可能性があるために、このメソッドのオーバー ロードが存在します。 その場合は、<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>メソッドのオーバー ロードはキャッシュされたデータに関するすべての情報を必ずしも返されません</xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>。 ただし、GetCacheItem メソッド オーバー ロードは、キャッシュ値だけを返すカスタムのキャッシュを使用します。       同様には、GetCacheItem メソッド、<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>メソッド、GetCacheItem 返します戻り値としてキャッシュ エントリする点を除いて、<xref:System.Runtime.Caching.CacheItem>インスタンス</xref:System.Runtime.Caching.CacheItem></xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>。"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "取得するキャッシュ エントリの一意の識別子。"
    - id: regionName
      type: System.String
      description: "任意。 地域が実装されている場合は、キャッシュが追加されたキャッシュ内で名前付き領域。 領域がで実装されていないため[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]、既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Runtime.Caching.CacheItem
      description: "によって識別されるそのキャッシュ エントリ<code> key</code>です。"
  overload: System.Runtime.Caching.ObjectCache.GetCacheItem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  id: GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ内のキャッシュ エントリの合計数を取得します。"
  syntax:
    content: public abstract long GetCount (string regionName = null);
    parameters:
    - id: regionName
      type: System.String
      description: "任意。 対象のキャッシュ エントリの数は次の手順、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int64
      description: "キャッシュ内のキャッシュ エントリの数。 場合<code> regionName </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>カウントが、指定されたキャッシュ領域にあるエントリの数を示します。"
  overload: System.Runtime.Caching.ObjectCache.GetCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ エントリのコレクションを反復処理に使用できる列挙子を作成します。"
  remarks: "キャッシュの実装側では、オーバーライドでき、キャッシュ エントリのコレクションを反復処理するカスタム手段を提供するには、このメソッドを拡張することができます。      > [!NOTE] > 通常全体のキャッシュ エントリを返すよりも高価な操作は、列挙子を返します。       このメソッドは、明示的なインターフェイス実装を<xref:System.Runtime.Caching.ObjectCache>のクラスには、<xref:System.Collections.IEnumerable.GetEnumerator%2A>と<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッド</xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A></xref:System.Collections.IEnumerable.GetEnumerator%2A></xref:System.Runtime.Caching.ObjectCache>。"
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。"
  overload: System.Runtime.Caching.ObjectCache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、指定したキーに対応するキャッシュ エントリのセットを取得します。"
  remarks: "GetValues メソッドのオーバー ロードは、複数のキャッシュ エントリをキャッシュから&1; つのネットワークの呼び出し中にフェッチをサポートしている分散キャッシュのパフォーマンスを最適化します。       呼び出し元は、1 つまたは複数のキーをメソッドに渡すことができます、すべてのキーがキャッシュ内のエントリを表すことの保証はありません。 そのため、返されたディクショナリには、メソッドに渡されたキーの数より少ない項目が含まれます。"
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> GetValues (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "取得するキャッシュ エントリの一意の識別子のコレクション。"
    - id: regionName
      type: System.String
      description: "任意。 または複数のキャッシュ エントリが追加領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "キャッシュ エントリを表すキー/値ペアのディクショナリ。"
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  id: GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "指定したキーに対応するキャッシュ エントリのセットを取得します。"
  remarks: "GetValues メソッドのオーバー ロードと同様に、<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>メソッド オーバー ロードが、c# などのマネージ言語でサポートされている省略可能なパラメーターの構文を使用して名前付きの領域を渡すことができます</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>。       このメソッドは仮想メソッド、<xref:System.Runtime.Caching.ObjectCache>クラスが渡される既定の実装を提供、`params`配列を<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>メソッドのオーバー ロード</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29></xref:System.Runtime.Caching.ObjectCache>。"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,object> GetValues (string regionName, string[] keys);
    parameters:
    - id: regionName
      type: System.String
      description: "任意。 または複数のキャッシュ エントリが追加領域が実装されている場合、キャッシュ内の名前付き領域。 領域がで実装されていないため[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]、既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: keys
      type: System.String[]
      description: "取得するキャッシュ エントリの一意の識別子のコレクション。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "キャッシュ エントリを表すキー/値ペアのディクショナリ。"
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Host
  id: Host
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得または設定に利用できる管理されたホスティング環境への参照を<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>実装をホスト固有のサービスを提供できる<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>実装します。"
  remarks: "ホストのプロパティは、使用するもの[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]環境をホストし、.NET Framework に依存する動作を実装するキャッシュの実装で環境をホストします。       次の表に、管理されたホスティング環境から利用できる可能性があるし、ホストのプロパティを通じて<xref:System.Runtime.Caching.ObjectCache>に利用可能な実装にあるホスト環境のサービスのセット |。サービス |説明 |  |-------------|-----------------|  |<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|ホスト環境のパフォーマンス カウンターを識別するなどの機能のキャッシュ実装で必要となるアプリケーション ドメイン識別子を提供することができます |。  |<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|ホスト環境で提供される&1; つを使用する代わりに、カスタムのファイル変更通知システムを提供、 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]|。  |<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|ホスト環境のキャッシュ実装レポート キャッシュ メモリ消費をことができます</xref:System.Runtime.Caching.Hosting.IMemoryCacheManager></xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem></xref:System.Runtime.Caching.Hosting.IApplicationIdentifier></xref:System.Runtime.Caching.ObjectCache>。 これにより、複数のキャッシュ実装間でのメモリ消費量を一元的に管理するホスト環境です |。     > [!NOTE] > このプロパティの値の呼び出し元が無制限のコード アクセス セキュリティのアクセス許可を必要とします。"
  syntax:
    content: public static IServiceProvider Host { get; set; }
    return:
      type: System.IServiceProvider
      description: "キャッシュに対応する管理されたホスティング環境への参照。"
  overload: System.Runtime.Caching.ObjectCache.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "プロパティに割り当てられている値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "プロパティ値の&1; つ以上の時間を設定しようとしました。"
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  id: InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "キャッシュ エントリに絶対有効期限がないことを示す値を取得します。"
  remarks: "有効期限の値が決して期限切れとして InfiniteAbsoluteExpiration フィールド値を設定してキャッシュに挿入するキャッシュ エントリは、時間の絶対ポイントに基づいています。 ただし、この設定を持つキャッシュ エントリは、メモリ不足の原因となった変更監視イベントの削除などの特定のキャッシュ実装によって決定されるその他の理由のキャッシュから削除できます。"
  syntax:
    content: public static readonly DateTimeOffset InfiniteAbsoluteExpiration;
    return:
      type: System.DateTimeOffset
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  id: Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "取得または設定の既定のインデクサー、 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref>クラスです。"
  remarks: "このプロパティの set アクセサーの動作は次のように、<xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>メソッド</xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>。 内部的には、キャッシュの実装が指定された値を絶対有効期限を設定でした、<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>メソッド</xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>。 ただしこの動作は、最終的には最大でキャッシュの実装です。       Get アクセサーの動作が呼び出し元のようには、<xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>メソッドを使用して`null`地域名に対応します</xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>。"
  syntax:
    content: public abstract object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ内のキャッシュ エントリの一意の識別子。"
    return:
      type: System.Object
      description: "キャッシュ インスタンスにインデクサーとして機能するキー。"
  overload: System.Runtime.Caching.ObjectCache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Name
  id: Name
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "特定の名前を取得<xref href=&quot;System.Runtime.Caching.ObjectCache&quot;></xref>インスタンス。"
  remarks: "一部のキャッシュ実装では、1 つのアプリケーションで実行されているキャッシュの複数のインスタンスをサポートします。 このプロパティには、キャッシュ実装は、特定のキャッシュ インスタンスを識別する名前を返すことができます。"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "特定のキャッシュ インスタンスの名前。"
  overload: System.Runtime.Caching.ObjectCache.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "キャッシュ エントリにスライド式有効期限がないことを示します。"
  remarks: "期間または定義されている時間帯に基づいている有効期限はスライディング有効期限とも呼びます。 通常、スライド式有効期限に基づいて項目を削除するキャッシュ実装時間の指定されたウィンドウでアクセスされていない項目が削除されます。       スライドする時間枠で非アクティビティがあるため、NoSlidingExpiration フィールド値が有効期限の値として設定された、キャッシュに挿入するキャッシュ エントリを削除しない必要があります。 ただし、絶対有効期限がある場合、またはその他の削除イベントが発生した、このような変更モニターまたはメモリ圧迫の場合は、キャッシュ項目を削除することができます。"
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュから削除します。"
  remarks: "対応するキャッシュのキャッシュ エントリがある場合は、カスタム キャッシュの実装では、このメソッドをオーバーライドするかどうかは`key`、削除された項目の値を返す必要があります。 かどうかは、キャッシュから削除何も行われませんが、メソッドが返す必要があります`null`です。      > [!NOTE] > 一部の分散キャッシュ実装可能性がありますをキャッシュから削除された値を返す機能をサポートしていません。 キャッシュの実装が削除されたキャッシュ項目の値を返すことをサポートしていないために、この可能性があります。 戻り値は価格が高すぎると、オブジェクトのマーシャ リングするためにもあります。 このような場合のキャッシュ実装を返すことができます`null`です。"
  syntax:
    content: public abstract object Remove (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: regionName
      type: System.String
      description: "任意。 地域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内で名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object
      description: "キーによって指定された削除されたキャッシュ エントリの値を表すオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、指定したエントリが見つかりませんでした。"
  overload: System.Runtime.Caching.ObjectCache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、挿入としてキャッシュにエントリをキャッシュ、 <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref>インスタンス、エントリを削除する方法に関する情報を指定します。"
  remarks: "場合のキーを`item`が存在しない`item`が新しいキャッシュ エントリとして挿入されます。 場合に一致するキーを持つ項目`item`から値が存在する`item`更新または既存のキャッシュ エントリの値を上書きするために使用します。"
  syntax:
    content: public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "追加するキャッシュ項目。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュ内に有効期限の時間ベースの詳細を指定するキャッシュ エントリを挿入します。"
  remarks: "場合に一致する項目`key`、キャッシュに存在しません`value`と`key`新しいキャッシュ エントリとして挿入するために使用します。 場合に一致するキーを持つ項目`item`存在する場合、キャッシュ エントリが更新されるかを使用して上書き`value`です。"
  syntax:
    content: public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "固定日付と時刻をキャッシュ エントリの有効期限します。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生クラスでオーバーライドされると、キャッシュにキャッシュ エントリを挿入します。"
  remarks: "このメソッドのオーバー ロードでは、絶対有効期限の時間ベースで使用可能なものよりも削除または有効期限の詳細について説明することができます。       場合に一致する項目`key`、キャッシュに存在しません`value`と`key`新しいキャッシュ エントリとして挿入するために使用します。 場合に一致するキーを持つ項目`item`存在する場合、キャッシュ エントリが更新されるかを使用して上書き`value`です。"
  syntax:
    content: public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ エントリの一意の識別子。"
    - id: value
      type: System.Object
      description: "挿入するオブジェクト。"
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "キャッシュ エントリの削除の詳細を格納するオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。"
    - id: regionName
      type: System.String
      description: "任意。 キャッシュ エントリを追加できる、地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "追加します。"
  overload: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "ジェネリック コレクションに対する繰り返し処理をサポートします。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 派生場合にのみ使用できます<xref:System.Runtime.Caching.ObjectCache>にインスタンスをキャスト、<xref:System.Collections.IEnumerable>インターフェイス</xref:System.Collections.IEnumerable></xref:System.Runtime.Caching.ObjectCache>。       開発者は、このメソッドを使用して、キャッシュ エントリのジェネリック コレクションを反復処理することができます。       これは、既定値<xref:System.Collections.IEnumerable.GetEnumerator%2A>を内部的に呼び出す実装、<xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>メソッド</xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A></xref:System.Collections.IEnumerable.GetEnumerator%2A>。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "キャッシュ内のアイテムへのアクセスを提供する列挙子オブジェクト。"
  overload: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Caching.ObjectCache.#ctor
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.CacheItem
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItem
  nameWithType: CacheItem
  fullName: System.Runtime.Caching.CacheItem
- uid: System.Runtime.Caching.CacheItemPolicy
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
- uid: System.Runtime.Caching.CacheEntryChangeMonitor
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryChangeMonitor
  nameWithType: CacheEntryChangeMonitor
  fullName: System.Runtime.Caching.CacheEntryChangeMonitor
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.DefaultCacheCapabilities
  parent: System.Runtime.Caching
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: DefaultCacheCapabilities
  fullName: System.Runtime.Caching.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Caching.ObjectCache.Host
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
- uid: System.Runtime.Caching.ObjectCache.Name
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Runtime.Caching.ObjectCache.#ctor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache
  nameWithType: ObjectCache.ObjectCache
- uid: System.Runtime.Caching.ObjectCache.Add*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add
  nameWithType: ObjectCache.Add
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting
  nameWithType: ObjectCache.AddOrGetExisting
- uid: System.Runtime.Caching.ObjectCache.Contains*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains
  nameWithType: ObjectCache.Contains
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get
  nameWithType: ObjectCache.Get
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem
  nameWithType: ObjectCache.GetCacheItem
- uid: System.Runtime.Caching.ObjectCache.GetCount*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount
  nameWithType: ObjectCache.GetCount
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator
  nameWithType: ObjectCache.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.GetValues*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues
  nameWithType: ObjectCache.GetValues
- uid: System.Runtime.Caching.ObjectCache.Host*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
- uid: System.Runtime.Caching.ObjectCache.Item*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item
  nameWithType: ObjectCache.Item
- uid: System.Runtime.Caching.ObjectCache.Name*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.Remove*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove
  nameWithType: ObjectCache.Remove
- uid: System.Runtime.Caching.ObjectCache.Set*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set
  nameWithType: ObjectCache.Set
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator
