### YamlMime:ManagedReference
items:
- uid: System.Windows.Size
  id: Size
  children:
  - System.Windows.Size.#ctor(System.Double,System.Double)
  - System.Windows.Size.Empty
  - System.Windows.Size.Equals(System.Object)
  - System.Windows.Size.Equals(System.Windows.Size)
  - System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.GetHashCode
  - System.Windows.Size.Height
  - System.Windows.Size.IsEmpty
  - System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  - System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.Parse(System.String)
  - System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Size.ToString
  - System.Windows.Size.ToString(System.IFormatProvider)
  - System.Windows.Size.Width
  langs:
  - csharp
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
  type: Struct
  summary: "オブジェクトのサイズを表すために使用する構造体を実装します。"
  remarks: "両方について説明しますので、サイズが特に便利ですが、<xref:System.Windows.Size.Height%2A>と<xref:System.Windows.Size.Width%2A>オブジェクトの</xref:System.Windows.Size.Width%2A></xref:System.Windows.Size.Height%2A>。 要素を測定し、レイアウト システムによって、広範なサイズが使用されます。      <a name=&quot;xamlAttributeUsage_Size&quot;></a>## XAML 属性の使用```   <object property=&quot;width,height&quot;/>   ``` <a name=&quot;xamlValues_Size&quot;> </a> ## XAML 値*幅*値より大きいかを指定する 0 に等しい、<xref:System.Windows.Size.Width%2A>サイズの構造体の</xref:System.Windows.Size.Width%2A>。             *高さ*値より大きいかを指定する 0 に等しい、<xref:System.Windows.Size.Height%2A>サイズの構造体の</xref:System.Windows.Size.Height%2A>。"
  example:
  - "The following example demonstrates how to use a Size structure in code.  \n  \n [!code-cs[PlotPanel#2](~/add/codesnippet/csharp/PlotPanel_csharp/PlotPanel.cs#2)]\n [!code-cpp[PlotPanel#2](~/add/codesnippet/cpp/plotpanel/PlotPanel.cpp#2)]\n [!code-vb[PlotPanel#2](~/add/codesnippet/visualbasic/PlotPanel/PlotPanel.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.SizeConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.SizeValueSerializer))]

      public struct Size : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Size.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Size
  langs:
  - csharp
  name: Size(Double,Double)
  nameWithType: Size.Size(Double,Double)
  fullName: System.Windows.Size.Size(Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Size&quot;> </xref>を構造化し、それ初期<code> width </code>と<code> height</code>です。"
  remarks: "`width`と`height`負の値にすることはできません。"
  syntax:
    content: public Size (double width, double height);
    parameters:
    - id: width
      type: System.Double
      description: "インスタンスの初期の幅<xref href=&quot;System.Windows.Size&quot;></xref>です。"
    - id: height
      type: System.Double
      description: "インスタンスの初期の高さ<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  overload: System.Windows.Size.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Empty
  id: Empty
  parent: System.Windows.Size
  langs:
  - csharp
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "静的なを表す値を空に取得<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  remarks: "<xref:System.Windows.Size.Width%2A>と<xref:System.Windows.Size.Height%2A>のインスタンスの<xref:System.Windows.Size>このプロパティが呼び出されたときに、負の無限大に相当します</xref:System.Windows.Size></xref:System.Windows.Size.Height%2A></xref:System.Windows.Size.Width%2A>。 これは唯一の状況で<xref:System.Windows.Size>負数にすることができます</xref:System.Windows.Size>。"
  syntax:
    content: public static System.Windows.Size Empty { get; }
    return:
      type: System.Windows.Size
      description: "空のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  overload: System.Windows.Size.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Windows.Size.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "インスタンスにオブジェクトと比較<xref href=&quot;System.Windows.Size&quot;></xref>等しいかどうか。"
  remarks: "<xref:System.Double>値は、操作の対象にすると、エラーになります。</xref:System.Double> 結果の値を論理的に等しい値が失敗する`true`です。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>を比較します</xref:System.Object>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サイズが等しい場合はそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Windows.Size)
  id: Equals(System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: System.Windows.Size.Equals(Size)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "インスタンスに値を比較<xref href=&quot;System.Windows.Size&quot;></xref>等しいかどうか。"
  remarks: "<xref:System.Double>値は、操作の対象にすると、エラーになります。</xref:System.Double> 結果の値を論理的に等しい値が失敗する`true`です。"
  syntax:
    content: public bool Equals (System.Windows.Size value);
    parameters:
    - id: value
      type: System.Windows.Size
      description: "この現在のインスタンスを比較するサイズ<xref href=&quot;System.Windows.Size&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  id: Equals(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Size,Size)
  nameWithType: Size.Equals(Size,Size)
  fullName: System.Windows.Size.Equals(Size,Size)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "2 つのインスタンスを比較<xref href=&quot;System.Windows.Size&quot;></xref>等しいかどうか。"
  remarks: "<xref:System.Double>値は、操作の対象にすると、エラーになります。</xref:System.Double> 結果の値を論理的に等しい値が失敗する`true`です。"
  syntax:
    content: public static bool Equals (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "最初のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    - id: size2
      type: System.Windows.Size
      description: "2 つ目の<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>が等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.GetHashCode
  id: GetHashCode
  parent: System.Windows.Size
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Windows.Size.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "このインスタンスのハッシュ コードを取得<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "このインスタンスのハッシュ コード<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  overload: System.Windows.Size.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Height
  id: Height
  parent: System.Windows.Size
  langs:
  - csharp
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得または設定のこのインスタンスの高さ<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  syntax:
    content: public double Height { get; set; }
    return:
      type: System.Double
      description: "このインスタンスの高さ<xref href=&quot;System.Windows.Size&quot;></xref>です。 既定値は 0 です。 値を負の値にすることはできません。"
  overload: System.Windows.Size.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.IsEmpty
  id: IsEmpty
  parent: System.Windows.Size
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "示す値を取得するかどうかのこのインスタンス<xref href=&quot;System.Windows.Size&quot;> </xref> <xref:System.Windows.Size.Empty*>.</xref:System.Windows.Size.Empty*>には"
  remarks: "場合でも<xref:System.Windows.Size>0 のインスタンスは、 <xref:System.Windows.Size>0 または 1、0-次元または 1 の一連の点を示すが保持されます</xref:System.Windows.Size></xref:System.Windows.Size>。 したがって、このプロパティを 0 区分のチェックを使用しないでください。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このインスタンスのサイズの場合<xref:System.Windows.Size.Empty*>それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Size.Empty*> 。"
  overload: System.Windows.Size.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  id: op_Equality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Windows.Size.op_Equality(Size,Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "2 つのインスタンスを比較<xref href=&quot;System.Windows.Size&quot;></xref>等しいかどうか。"
  syntax:
    content: public static bool op_Equality (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "最初のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    - id: size2
      type: System.Windows.Size
      description: "2 つ目の<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "true の場合、2 つの<xref href=&quot;System.Windows.Size&quot;></xref>と同じです。 それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Size.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  id: op_Explicit(System.Windows.Size to System.Windows.Point)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Point op_Explicit (System.Windows.Size size);
    parameters:
    - id: size
      type: System.Windows.Size
      description: "追加します。"
    return:
      type: System.Windows.Point
      description: "追加します。"
  overload: System.Windows.Size.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  id: op_Explicit(System.Windows.Size to System.Windows.Vector)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Vector op_Explicit (System.Windows.Size size);
    parameters:
    - id: size
      type: System.Windows.Size
      description: "追加します。"
    return:
      type: System.Windows.Vector
      description: "追加します。"
  overload: System.Windows.Size.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  id: op_Inequality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Windows.Size.op_Inequality(Size,Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "2 つのインスタンスを比較<xref href=&quot;System.Windows.Size&quot;></xref>等しくないです。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "最初のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    - id: size2
      type: System.Windows.Size
      description: "2 つ目の<xref href=&quot;System.Windows.Size&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合のインスタンス<xref href=&quot;System.Windows.Size&quot;></xref>が等しくない。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Size.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: System.Windows.Size.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "インスタンスを返します<xref href=&quot;System.Windows.Size&quot;></xref>から変換された<xref:System.String>.</xref:System.String>"
  syntax:
    content: public static System.Windows.Size Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "A<xref:System.String>を解析する値、 <xref href=&quot;System.Windows.Size&quot;> </xref>値</xref:System.String>。"
    return:
      type: System.Windows.Size
      description: "インスタンス<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  overload: System.Windows.Size.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Size
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "この型またはメンバーをサポートしている、[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]インフラストラクチャ コードから直接使用するものではありません。"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "使用する形式。"
    - id: provider
      type: System.IFormatProvider
      description: "値の書式設定を使用するプロバイダーです。"
    return:
      type: System.String
      description: "指定された形式で現在のインスタンスの値。"
  overload: System.Windows.Size.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.ToString
  id: ToString
  parent: System.Windows.Size
  langs:
  - csharp
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Windows.Size.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "返します、<xref:System.String>これを表す<xref href=&quot;System.Windows.Size&quot;></xref>オブジェクト</xref:System.String>。"
  remarks: "場合、<xref:System.Windows.Size.Width%2A>プロパティが 30 に設定され、<xref:System.Windows.Size.Height%2A>プロパティが 40 に設定されている、ToString メソッドと表示されている文字列を返します`&quot;30, 40&quot;`</xref:System.Windows.Size.Height%2A></xref:System.Windows.Size.Width%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>高さ続けて幅を指定します</xref:System.String>。"
  overload: System.Windows.Size.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Size
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Size.ToString(IFormatProvider)
  fullName: System.Windows.Size.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "返します、<xref:System.String>のこのインスタンスを表す<xref href=&quot;System.Windows.Size&quot;> </xref></xref:System.String> 。"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "書式設定を制御する方法を提供するオブジェクト。"
    return:
      type: System.String
      description: "A<xref:System.String>これを表す<xref href=&quot;System.Windows.Size&quot;></xref>オブジェクト</xref:System.String>。"
  overload: System.Windows.Size.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Width
  id: Width
  parent: System.Windows.Size
  langs:
  - csharp
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "取得または設定のこのインスタンスの幅<xref href=&quot;System.Windows.Size&quot;></xref>です。"
  syntax:
    content: public double Width { get; set; }
    return:
      type: System.Double
      description: "このインスタンスの幅<xref href=&quot;System.Windows.Size&quot;></xref>です。 既定値は `0` です。 値を負の値にすることはできません。"
  overload: System.Windows.Size.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Size.#ctor(System.Double,System.Double)
  parent: System.Windows.Size
  isExternal: false
  name: Size(Double,Double)
  nameWithType: Size.Size(Double,Double)
  fullName: System.Windows.Size.Size(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Size.Empty
  parent: System.Windows.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Size.Equals(System.Object)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Windows.Size.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Size.Equals(System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: System.Windows.Size.Equals(Size)
- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Size,Size)
  nameWithType: Size.Equals(Size,Size)
  fullName: System.Windows.Size.Equals(Size,Size)
- uid: System.Windows.Size.GetHashCode
  parent: System.Windows.Size
  isExternal: false
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Windows.Size.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Size.Height
  parent: System.Windows.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
- uid: System.Windows.Size.IsEmpty
  parent: System.Windows.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Windows.Size.op_Equality(Size,Size)
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Windows.Size.op_Inequality(Size,Size)
- uid: System.Windows.Size.Parse(System.String)
  parent: System.Windows.Size
  isExternal: false
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: System.Windows.Size.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Size
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Size.ToString
  parent: System.Windows.Size
  isExternal: false
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Windows.Size.ToString()
- uid: System.Windows.Size.ToString(System.IFormatProvider)
  parent: System.Windows.Size
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Size.ToString(IFormatProvider)
  fullName: System.Windows.Size.ToString(IFormatProvider)
- uid: System.Windows.Size.Width
  parent: System.Windows.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
- uid: System.Windows.Size.#ctor*
  parent: System.Windows.Size
  isExternal: false
  name: Size
  nameWithType: Size.Size
- uid: System.Windows.Size.Empty*
  parent: System.Windows.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
- uid: System.Windows.Size.Equals*
  parent: System.Windows.Size
  isExternal: false
  name: Equals
  nameWithType: Size.Equals
- uid: System.Windows.Size.GetHashCode*
  parent: System.Windows.Size
  isExternal: false
  name: GetHashCode
  nameWithType: Size.GetHashCode
- uid: System.Windows.Size.Height*
  parent: System.Windows.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
- uid: System.Windows.Size.IsEmpty*
  parent: System.Windows.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
- uid: System.Windows.Size.op_Equality*
  parent: System.Windows.Size
  isExternal: false
  name: op_Equality
  nameWithType: Size.op_Equality
- uid: System.Windows.Size.op_Explicit*
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit
  nameWithType: Size.op_Explicit
- uid: System.Windows.Size.op_Inequality*
  parent: System.Windows.Size
  isExternal: false
  name: op_Inequality
  nameWithType: Size.op_Inequality
- uid: System.Windows.Size.Parse*
  parent: System.Windows.Size
  isExternal: false
  name: Parse
  nameWithType: Size.Parse
- uid: System.Windows.Size.System#IFormattable#ToString*
  parent: System.Windows.Size
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Size.System.IFormattable.ToString
- uid: System.Windows.Size.ToString*
  parent: System.Windows.Size
  isExternal: false
  name: ToString
  nameWithType: Size.ToString
- uid: System.Windows.Size.Width*
  parent: System.Windows.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
