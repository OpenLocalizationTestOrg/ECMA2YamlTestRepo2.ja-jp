### YamlMime:ManagedReference
items:
- uid: System.Configuration.LocalFileSettingsProvider
  id: LocalFileSettingsProvider
  children:
  - System.Configuration.LocalFileSettingsProvider.#ctor
  - System.Configuration.LocalFileSettingsProvider.ApplicationName
  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider
  fullName: System.Configuration.LocalFileSettingsProvider
  type: Class
  summary: "アプリケーション設定クラスの持続性を提供します。"
  remarks: "設定プロバイダーは、アプリケーション設定アーキテクチャで使用される構成データを格納するためのメカニズムを定義します。 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] LocalFileSettingsProvider は、ローカル ファイル システムに構成データを保存する&1; つの既定の設定プロバイダーが含まれています。 アプリケーション設定のプロパティまたはプロパティのグループに関連付けられている<xref:System.Configuration.SettingsProviderAttribute>。</xref:System.Configuration.SettingsProviderAttribute>を使用して特定の設定プロバイダー       通常、クライアント プログラムに明示的にアクセスしません。 このクラス代わりに、アプリケーション設定アーキテクチャでは自動的に適切な設定プロバイダーを起動して、そのサービスが必要な場合です。 たとえば、多くのメンバーの<xref:System.Configuration.ApplicationSettingsBase>メソッドに関連する設定プロバイダーへの作業を委任します</xref:System.Configuration.ApplicationSettingsBase>。       LocalFileSettingsProvider 拡張子を持つ構成ファイルの設定が引き続き発生する`.config`です。 構成ファイルの内容は、XML ドキュメントとして構成されています。 内の要素として、構成データを格納するかどうか、アプリケーション レベルまたはユーザー レベルで、設定のスコープは、によって、`<applicationSettings>`または`<userSettings>`グループをそれぞれセクションです。 これらの各セクション グループが、対応するで表される<xref:System.Configuration.AppSettingsSection>または<xref:System.Configuration.ClientSettingsSection>、それぞれ</xref:System.Configuration.ClientSettingsSection></xref:System.Configuration.AppSettingsSection>。 セクションの各オブジェクトを所有し、 <xref:System.Configuration.IConfigurationSectionHandler>。</xref:System.Configuration.IConfigurationSectionHandler>の型のオブジェクトには、構成セクション ハンドラーによって管理されます。       アプリケーション スコープ設定と既定のユーザー スコープ設定がという名前のファイルに格納されている`application.exe.config`、これは、実行可能ファイルと同じディレクトリに作成します。 アプリケーションの構成設定とは、読み取り専用です。 という名前のファイルで特定のユーザー データが格納されている`user.config`ユーザーのホーム ディレクトリの下に格納します。 ローミング プロファイルが有効な場合、ユーザー構成ファイルの&2; つのバージョンが存在しています。 このような場合は、ローミングのバージョンのエントリは、ローカルのユーザー構成ファイルに重複するエントリに優先します。       アプリケーション設定の詳細については、次を参照してください。 [Windows フォーム用のアプリケーション設定](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements:
  - System.Configuration.IApplicationSettingsProvider
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Configuration.LocalFileSettingsProvider&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクター <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> <xref:System.String.Empty>。</xref:System.String.Empty>プロパティ</xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>を設定します。"
  syntax:
    content: public LocalFileSettingsProvider ();
    parameters: []
  overload: System.Configuration.LocalFileSettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得または現在実行中のアプリケーションの名前を設定します。"
  remarks: "ApplicationName と<xref:System.Configuration.Provider.ProviderBase.Name%2A>プロパティは、同様に別のアプリケーションのプロパティの名前付きの設定を区別するために役立ちます</xref:System.Configuration.Provider.ProviderBase.Name%2A>。"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "アプリケーションの表示名を表す文字列。"
  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "同じアプリケーションの以前のバージョンの名前付きの設定のプロパティの値を返します。"
  remarks: "組み合わせて GetPreviousVersion メソッドが使用される多くの場合、<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>メソッドは、アプリケーションの新しいバージョンのインストール中にアプリケーションの設定を移行するとします</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>。 詳細については、次を参照してください、<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>メソッド。</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 。"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>アプリケーション設定のプロパティが使用されていることについて説明します。"
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>値が返されます。"
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> 、それ以外の場合は、アプリケーション設定を表す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "指定したアプリケーション インスタンスと設定のプロパティ グループのプロパティの値の設定のコレクションを返します。"
  remarks: "GetPropertyValues メソッドは、特殊なアプリケーションの設定の種類<xref:System.Configuration.SpecialSetting>。</xref:System.Configuration.SpecialSetting>もを管理します。 接続文字列は、特別なファイルのセクションで、構成要素で区切られた`<connectionstrings>`です。      > [!CAUTION] ><xref:System.Configuration.LocalFileSettingsProvider>をすべての設定を保持する暗号化を使用しない</xref:System.Configuration.LocalFileSettingsProvider>。 そのため、プレーン テキスト パスワードまたは個別に構成ファイル内の情報を暗号化などの他の対策を講じることがなくこのプロバイダーを使用して他の機密情報を格納しないでください。 詳細については、次を参照してください。[暗号化の構成情報を使用して保護された構成](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>取得するのには、値が設定プロパティのグループを含むです。"
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>指定した設定のプロパティ グループの値を格納します。"
  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "ユーザー スコープ設定が見つかりましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "プロバイダーを初期化します。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);
    parameters:
    - id: name
      type: System.String
      description: "プロバイダーのフレンドリ名。"
    - id: values
      type: System.Collections.Specialized.NameValueCollection
      description: "このプロバイダーの構成で指定されたプロバイダーに固有の属性を表す名前/値ペアのコレクション。"
  overload: System.Configuration.LocalFileSettingsProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "既定値に指定されたアプリケーションに関連付けられているすべてのアプリケーション設定のプロパティをリセットします。"
  remarks: "Reset メソッドは、指定したアプリケーションの設定グループの格納された値を復元します。 リセットの操作は、アプリケーション設定のプロパティのスコープによって異なります。-アプリケーション スコープの設定には影響しません。      -ユーザー スコープ設定は、アプリケーション構成ファイルの読み取り専用のエントリとして格納されている既定値にリセットされます`application.exe.config`です。 ローミング プロファイルを使用している場合、ローミング プロファイル内の任意のアプリケーションの設定値は、ローカル プロファイルで検出された重複部分より優先されます。       ローミング プロファイルを使用している場合があること&2; つに注目してください。`user.config`ファイルのローカル設定のいずれか、およびローミング プロファイルのいずれか。"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
  overload: System.Configuration.LocalFileSettingsProvider.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "ユーザー スコープ設定が見つかりましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "指定した設定のグループのプロパティの値を設定します。"
  remarks: "設定のラッパー クラスから派生した<xref:System.Configuration.ApplicationSettingsBase>が含まれています、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>すべてその設定のプロパティの値を保持すると呼ばれるメソッド</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase>。 すべての設定でこのメソッドが列挙し、設定プロパティ、および呼び出しに関連付けられたプロバイダー、<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>メソッドごとに<xref:System.Configuration.SettingsProvider>、実際のシリアル化操作を実行します</xref:System.Configuration.SettingsProvider></xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>。       適切な設定の対応するアプリケーションに各アプリケーションのユーザー スコープ設定のプロパティを個別にシリアル化 SetPropertyValues`user.config`構成ファイル。       既定では、SetPropertyValues メソッドは、設定プロパティの種類によっては、シリアル化スキームを決定する次の論理シーケンスを使用します。 1。  型が関連付けられている<xref:System.ComponentModel.TypeConverter>で、<xref:System.ComponentModel.TypeConverter.ConvertToString%2A>メソッド実装では、この変換を使用します</xref:System.ComponentModel.TypeConverter.ConvertToString%2A></xref:System.ComponentModel.TypeConverter>。      2.  XML シリアル化が使用されます。       ただし、 <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute>を使用して、推奨されるシリアル化機構を指定できます。 <xref:System.Configuration.LocalFileSettingsProvider>バイナリ シリアル化をサポートしていません[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]です。</xref:System.Configuration.LocalFileSettingsProvider>       ユーザー スコープ設定のプロパティ設定されている場合バックアップを既定値に明示的にし、ローカル ファイルの設定プロバイダーは、ユーザー構成ファイルから関連する設定のエントリを削除します。 このプロパティの [次へ] の読み取りアクセス権は、既定値を使用して単純にします。      > [!CAUTION] ><xref:System.Configuration.LocalFileSettingsProvider>をすべての設定を保持する暗号化を使用しない</xref:System.Configuration.LocalFileSettingsProvider>。 そのため、プレーン テキスト パスワードまたは個別に構成ファイル内の情報を暗号化などの他の対策を講じることがなくこのプロバイダーを使用して他の機密情報を格納しないでください。 詳細については、次を参照してください。[暗号化の構成情報を使用して保護された構成](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
    - id: values
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>を設定するプロパティの設定のグループを表すです。"
  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "ユーザー スコープ設定が見つかりましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。       または、構成ファイルに設定を保存して一般的なエラーが発生しました。"
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "同じアプリケーションの以前のバージョンから以前のユーザー スコープ設定を移行しようとしています。"
  remarks: "<xref:System.Configuration.LocalFileSettingsProvider>個別の操作で、ローカルとローミングの設定を移行します。</xref:System.Configuration.LocalFileSettingsProvider>       アップグレードの方法は<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>、または<xref:System.Configuration.ApplicationSettingsBase>。</xref:System.Configuration.ApplicationSettingsBase>から派生した全体の設定ラッパー クラス、適用</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>のあるすべてのアプリケーション設定の抑制します。       このメソッドはこの方法は、アップグレード中は、アプリケーションの種類によって異なります。-の各バージョン、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションが独自の独立したインストール ディレクトリに格納されています。 新しいバージョンの後に、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションがインストールされているし、新しいバージョンに共通のすべてのアプリケーション設定を移行へのアップグレード、新しいバージョンが最初に実行時に、自動的に内部ロジックを呼び出します。 詳細については、次を参照してください。 [ClickOnce とアプリケーション設定](~/add/includes/ajax-current-ext-md.md)です。      標準の Windows フォームおよびコンソール アプリケーションではこのようなアプリケーションは最初の実行時を決定する、自動の一般的な方法がないため、アップグレードを呼び出すこと必要があります手動でします。 2 つの一般的な方法はから、インストール プログラムまたは永続化されたプロパティを使用して、アプリケーション自体からを使用して多くの場合のような名前`IsFirstRun`です。       あるバージョンについては、新しいアプリケーション設定を移行する、必要があります可能になって、古いバージョンのアプリケーション設定の読み込みと読み取りに注意してください。 そのため、アプリケーションの新しいと以前のバージョンと互換性のあるラッパー クラスでなければなりません。"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>現在のアプリケーションの使用状況を記述します。"
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>取得するのには、値が設定プロパティのグループを含むです。"
  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "ユーザー スコープ設定が見つかりましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。       または、構成ファイルの以前のバージョンにアクセスできませんでした。"
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.LocalFileSettingsProvider.#ctor*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: LocalFileSettingsProvider.GetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Initialize*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize
  nameWithType: LocalFileSettingsProvider.Initialize
- uid: System.Configuration.LocalFileSettingsProvider.Reset*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: LocalFileSettingsProvider.Reset
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: LocalFileSettingsProvider.SetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: LocalFileSettingsProvider.Upgrade
