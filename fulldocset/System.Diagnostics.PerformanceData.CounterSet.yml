### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterSet
  id: CounterSet
  children:
  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  - System.Diagnostics.PerformanceData.CounterSet.Dispose
  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceData.CounterSet.Finalize
  langs:
  - csharp
  name: CounterSet
  nameWithType: CounterSet
  fullName: System.Diagnostics.PerformanceData.CounterSet
  type: Class
  summary: "論理カウンターのセットを定義します。"
  remarks: "呼び出す、<xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>マネージし、アンマネージ リソースのしたら、プロバイダーの登録を削除し、すべてを解放するメソッド</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: 'public class CounterSet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.PerformanceData.CounterSet&quot;> </xref>クラスです。"
  remarks: "プロバイダーを登録します。 呼び出す、<xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>メソッドは、登録を削除します</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "カウンター データのプロバイダーを一意に識別する Guid です。 マニフェストで指定された Guid を使用します。"
    - id: counterSetGuid
      type: System.Guid
      description: "プロバイダーのカウンター セットを一意に識別する Guid です。 マニフェストで指定された Guid を使用します。"
    - id: instanceType
      type: System.Diagnostics.PerformanceData.CounterSetInstanceType
      description: "カウンター セットの種類を識別します。"
  overload: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "操作を完了するのに十分なメモリがあります。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Windows Vista より前はサポートされていません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "パラメーターの&1; つは、NULL または無効です。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "基になる Win32 関数呼び出しが失敗しました。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "指定されたカウンターの識別子と型を使用して、カウンター セットにカウンターを追加します。"
  remarks: "カウンターのカウンター セットのインスタンスを作成する前にセットにカウンターを追加する必要があります。"
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);
    parameters:
    - id: counterId
      type: System.Int32
      description: "カウンターを識別します。 カウンターの定義に、マニフェストで使用している同じ値を使用します。"
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "カウンターの種類を識別します。 カウンター タイプは、カウンター データを計算、平均、および表示する方法を決定します。"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "カウンターの識別子は既にセットに存在するか、負の値、またはカウンターの型が NULL または有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "カウンター セットのカウンターのインスタンスを作成した後のセットにカウンターを追加することはできません。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "指定されたカウンターの識別子と型と、カウンターの表示名を使用して、カウンター セットにカウンターを追加します。"
  remarks: "カウンターのカウンター セットのインスタンスを作成する前にセットにカウンターを追加する必要があります。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);
    parameters:
    - id: counterId
      type: System.Int32
      description: "カウンターを識別します。 カウンターの定義に、マニフェストで使用している同じ値を使用します。"
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "カウンターの種類を識別します。 カウンター タイプは、カウンター データを計算、平均、および表示する方法を決定します。"
    - id: counterName
      type: System.String
      description: "カウンターの名前です。 この名前を使用すると、カウンター セット インスタンスのカウンターのインデックスを作成します。 (を参照してください&lt;xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName&gt;)。"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "カウンターの識別子は既にセットに存在するか、負の値、またはカウンターの型が NULL または有効ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "カウンター セットのカウンターのインスタンスを作成した後のセットにカウンターを追加することはできません。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  id: CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "カウンター セットのインスタンスを作成します。"
  remarks: "単一インスタンスのカウンター セットと&1; 回または複数のインスタンスのカウンター セットの&1; 回このメソッドを呼び出します。       プロバイダーは、インスタンスを作成するタイミングを決定します。 カウンターのデータが複数の静的な場合は、プロバイダーは、初期化時にインスタンスを作成できます。 たとえば、コンピューター上のプロセッサの数と見なされます、静的なため、プロセッサのカウンター データを提供するプロバイダーは、コンピューターの各プロセッサのインスタンスを初期化時に作成できます。 プロセス カウンターやディスクより動的なカウンターの場合は、プロバイダーは、追加される新しい USB デバイスまたは作成する新しいプロセスに対応の新しいインスタンスを作成します。       プロバイダーは、常にデータを最新の状態カウンターを保持してください。"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "インスタンスの名前です。 名前は一意である必要があります。"
    return:
      type: System.Diagnostics.PerformanceData.CounterSetInstance
      description: "カウンター データを格納するカウンター セットのインスタンス。"
  overload: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "インスタンス名は NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "カウンターのカウンター セットのインスタンスを作成する前にセットにカウンターを追加する必要があります。"
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  id: Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "このオブジェクトによって使用されるすべてのアンマネージ リソースを解放します。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "リリースすべてのアンマネージ リソースがこのオブジェクトによって使用され、必要に応じてマネージ リソースを解放します。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>これが Dispose メソッドから呼び出された場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>ファイナライザーから呼び出された場合。"
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  id: Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "オブジェクトがガベージ コレクションによって回収される前に、リソースを解放します。"
  remarks: "このメソッドは、ランタイムによって自動的に呼び出されます。"
  syntax:
    content: ~CounterSet ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstanceType
  nameWithType: CounterSetInstanceType
  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceData.CounterType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterType
  nameWithType: CounterType
  fullName: System.Diagnostics.PerformanceData.CounterType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
- uid: System.Diagnostics.PerformanceData.CounterSetInstance
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstance
  nameWithType: CounterSetInstance
  fullName: System.Diagnostics.PerformanceData.CounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet
  nameWithType: CounterSet.CounterSet
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter
  nameWithType: CounterSet.AddCounter
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance
  nameWithType: CounterSet.CreateCounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose
  nameWithType: CounterSet.Dispose
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize
  nameWithType: CounterSet.Finalize
