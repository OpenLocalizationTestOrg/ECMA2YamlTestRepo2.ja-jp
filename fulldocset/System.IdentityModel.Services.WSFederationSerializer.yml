### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.WSFederationSerializer
  id: WSFederationSerializer
  children:
  - System.IdentityModel.Services.WSFederationSerializer.#ctor
  - System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)
  - System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  - System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)
  - System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)
  - System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  - System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  - System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)
  - System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)
  - System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  - System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  langs:
  - csharp
  name: WSFederationSerializer
  nameWithType: WSFederationSerializer
  fullName: System.IdentityModel.Services.WSFederationSerializer
  type: Class
  summary: "WS フェデレーション メッセージに変換するメソッドを提供<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>と<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;></xref>は Ws-trust プロトコル固有のオブジェクト。"
  syntax:
    content: public class WSFederationSerializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: WSFederationSerializer()
  nameWithType: WSFederationSerializer.WSFederationSerializer()
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer()
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Services.WSFederationSerializer&quot;> </xref>クラスです。"
  remarks: "新しいインスタンス Ws-federation メッセージにシリアル化 Ws-trust 2005/02 プロトコル メッセージです。インスタンス、<xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer>要求とのインスタンスをシリアル化するクラスが使用される、<xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer>応答をシリアル化するクラスを使用します</xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer></xref:System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer>。"
  syntax:
    content: public WSFederationSerializer ();
    parameters: []
  overload: System.IdentityModel.Services.WSFederationSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)
  id: '#ctor(System.Xml.XmlDictionaryReader)'
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: WSFederationSerializer(XmlDictionaryReader)
  nameWithType: WSFederationSerializer.WSFederationSerializer(XmlDictionaryReader)
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer(XmlDictionaryReader)
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Services.WSFederationSerializer&quot;> </xref>クラスは、XML 応答の名前空間に基づきます。"
  remarks: "要求および応答メッセージは、応答 (適切な Ws-trust シリアライザーが使用される XML 名前空間に基づく) の名前空間に基づくシリアル化されます。"
  syntax:
    content: public WSFederationSerializer (System.Xml.XmlDictionaryReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "<xref:System.Xml.XmlDictionaryReader>応答 XML に開く</xref:System.Xml.XmlDictionaryReader>。"
  overload: System.IdentityModel.Services.WSFederationSerializer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  id: '#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)'
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
  nameWithType: WSFederationSerializer.WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Services.WSFederationSerializer&quot;> </xref>指定された要求と応答のシリアライザーを使用してクラスです。"
  syntax:
    content: public WSFederationSerializer (System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer);
    parameters:
    - id: requestSerializer
      type: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
      description: "要求 (RST) の読み取りに使用する Ws-trust シリアライザー。"
    - id: responseSerializer
      type: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
      description: "使用して、応答 (RSTR) を記述する Ws-trust シリアライザー。"
  overload: System.IdentityModel.Services.WSFederationSerializer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>requestSerializer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>responseSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)
  id: CanReadRequest(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: CanReadRequest(String)
  nameWithType: WSFederationSerializer.CanReadRequest(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(String)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "指定した文字列が認識されている名前空間を持つ wst:RequestSecurityToken メッセージであるかどうかをチェックして、ラップされた<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer&quot;></xref>です。"
  syntax:
    content: public virtual bool CanReadRequest (string trustMessage);
    parameters:
    - id: trustMessage
      type: System.String
      description: "チェックする Ws-trust メッセージです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、メッセージは有効な wst:RequestSecurityToken メッセージが、Ws-trust プロトコルに一致する名前空間を持つこの<xref href=&quot;System.IdentityModel.Services.WSFederationSerializer&quot;></xref>サポートしています。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)
  id: CanReadResponse(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: CanReadResponse(String)
  nameWithType: WSFederationSerializer.CanReadResponse(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(String)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "指定した文字列が認識されている名前空間を持つ wst:RequestSecurityTokenResponse メッセージであるかどうかをチェックして、ラップされた<xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer&quot;></xref>です。"
  syntax:
    content: public virtual bool CanReadResponse (string trustMessage);
    parameters:
    - id: trustMessage
      type: System.String
      description: "チェックする Ws-trust メッセージです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、メッセージは有効な wst:RequestSecurityTokenResponse メッセージが、Ws-trust プロトコルに一致する名前空間を持つこの<xref href=&quot;System.IdentityModel.Services.WSFederationSerializer&quot;></xref>サポートしています。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  id: CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: CreateRequest(FederationMessage,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.CreateRequest(FederationMessage,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CreateRequest(FederationMessage,WSTrustSerializationContext)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ws-federation サインイン要求メッセージを変換、 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>セキュリティ トークン サービスであるオブジェクト (、 <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref>クラス) を使用できます。"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityToken CreateRequest (System.IdentityModel.Services.FederationMessage message, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);
    parameters:
    - id: message
      type: System.IdentityModel.Services.FederationMessage
      description: "変換するメッセージ。 インスタンスである必要がありますこの<xref href=&quot;System.IdentityModel.Services.SignInRequestMessage&quot;></xref>です。"
    - id: context
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "現在のシリアル化コンテキスト。"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>を変換後のサインイン要求メッセージを表すオブジェクト。"
  overload: System.IdentityModel.Services.WSFederationSerializer.CreateRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>null です。       -or-       <code>context</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "メッセージの種類ではありません<xref href=&quot;System.IdentityModel.Services.SignInRequestMessage&quot;></xref>です。       - または -、 <xref href=&quot;System.IdentityModel.Services.SignInRequestMessage&quot;> </xref>オブジェクトで有効な構築するために必要な情報がない<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  id: CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: CreateResponse(FederationMessage,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.CreateResponse(FederationMessage,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CreateResponse(FederationMessage,WSTrustSerializationContext)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "Ws-federation サインイン応答メッセージ オブジェクトに変換する<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;></xref>オブジェクト。"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse CreateResponse (System.IdentityModel.Services.FederationMessage message, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);
    parameters:
    - id: message
      type: System.IdentityModel.Services.FederationMessage
      description: "変換するメッセージ。 インスタンスである必要がありますこの<xref href=&quot;System.IdentityModel.Services.SignInResponseMessage&quot;></xref>です。"
    - id: context
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "現在のシリアル化コンテキスト。"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>を変換後のサインイン応答メッセージを表すオブジェクト。"
  overload: System.IdentityModel.Services.WSFederationSerializer.CreateResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>context</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "メッセージの種類ではありません<xref href=&quot;System.IdentityModel.Services.SignInResponseMessage&quot;></xref>です。       - または -、 <xref href=&quot;System.IdentityModel.Services.SignInResponseMessage&quot;> </xref>オブジェクトで有効な構築するために必要な情報がない<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)
  id: GetReferencedRequest(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: GetReferencedRequest(String)
  nameWithType: WSFederationSerializer.GetReferencedRequest(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(String)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "参照先の URL から wreq 文字列を取得します。"
  remarks: "参照 URL から wreq 文字列を取得するには、このメソッドをオーバーライドします。 既定の実装が<xref:System.NotSupportedException>。</xref:System.NotSupportedException>をスローします。"
  syntax:
    content: public virtual string GetReferencedRequest (string wreqptr);
    parameters:
    - id: wreqptr
      type: System.String
      description: "要求データの URL です。"
    return:
      type: System.String
      description: "URL から要求データ。"
  overload: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "既定の実装によってスローされます。"
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)
  id: GetReferencedResult(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: GetReferencedResult(String)
  nameWithType: WSFederationSerializer.GetReferencedResult(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(String)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "参照先の URL から wresult 文字列を取得します。"
  remarks: "参照 URL から wresult 文字列を取得するには、このメソッドをオーバーライドします。 既定の実装が<xref:System.NotSupportedException>。</xref:System.NotSupportedException>をスローします。"
  syntax:
    content: public virtual string GetReferencedResult (string wresultptr);
    parameters:
    - id: wresultptr
      type: System.String
      description: "結果データの URL です。"
    return:
      type: System.String
      description: "URL から要求データ。"
  overload: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "既定の実装によってスローされます。"
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  id: GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "指定したシリアル化<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref>オブジェクトを文字列にします。"
  syntax:
    content: public virtual string GetRequestAsString (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>シリアル化するオブジェクト。"
    - id: context
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "現在のシリアル化コンテキスト。"
    return:
      type: System.String
      description: "シリアル化された文字列表現、 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref>オブジェクト。"
  overload: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>context</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  id: GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  langs:
  - csharp
  name: GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "指定したシリアル化<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;></xref>オブジェクトを文字列にします。"
  syntax:
    content: public virtual string GetResponseAsString (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext context);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "<xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>シリアル化するオブジェクト。"
    - id: context
      type: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
      description: "現在のシリアル化コンテキスト。"
    return:
      type: System.String
      description: "シリアル化された文字列表現、 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>オブジェクト。"
  overload: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>context</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: WSFederationSerializer()
  nameWithType: WSFederationSerializer.WSFederationSerializer()
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer()
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: WSFederationSerializer(XmlDictionaryReader)
  nameWithType: WSFederationSerializer.WSFederationSerializer(XmlDictionaryReader)
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer(XmlDictionaryReader)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
  nameWithType: WSFederationSerializer.WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
  fullName: System.IdentityModel.Services.WSFederationSerializer.WSFederationSerializer(WSTrustRequestSerializer,WSTrustResponseSerializer)
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustRequestSerializer
  nameWithType: WSTrustRequestSerializer
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustResponseSerializer
  nameWithType: WSTrustResponseSerializer
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CanReadRequest(String)
  nameWithType: WSFederationSerializer.CanReadRequest(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CanReadResponse(String)
  nameWithType: WSFederationSerializer.CanReadResponse(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(String)
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CreateRequest(FederationMessage,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.CreateRequest(FederationMessage,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CreateRequest(FederationMessage,WSTrustSerializationContext)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityToken
  nameWithType: RequestSecurityToken
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
- uid: System.IdentityModel.Services.FederationMessage
  parent: System.IdentityModel.Services
  isExternal: false
  name: FederationMessage
  nameWithType: FederationMessage
  fullName: System.IdentityModel.Services.FederationMessage
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: WSTrustSerializationContext
  nameWithType: WSTrustSerializationContext
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CreateResponse(FederationMessage,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.CreateResponse(FederationMessage,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.CreateResponse(FederationMessage,WSTrustSerializationContext)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetReferencedRequest(String)
  nameWithType: WSFederationSerializer.GetReferencedRequest(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(String)
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetReferencedResult(String)
  nameWithType: WSFederationSerializer.GetReferencedResult(String)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(String)
- uid: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(RequestSecurityToken,WSTrustSerializationContext)
- uid: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
  nameWithType: WSFederationSerializer.GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
  fullName: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(RequestSecurityTokenResponse,WSTrustSerializationContext)
- uid: System.IdentityModel.Services.WSFederationSerializer.#ctor*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: WSFederationSerializer
  nameWithType: WSFederationSerializer.WSFederationSerializer
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadRequest*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CanReadRequest
  nameWithType: WSFederationSerializer.CanReadRequest
- uid: System.IdentityModel.Services.WSFederationSerializer.CanReadResponse*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CanReadResponse
  nameWithType: WSFederationSerializer.CanReadResponse
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateRequest*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CreateRequest
  nameWithType: WSFederationSerializer.CreateRequest
- uid: System.IdentityModel.Services.WSFederationSerializer.CreateResponse*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: CreateResponse
  nameWithType: WSFederationSerializer.CreateResponse
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetReferencedRequest
  nameWithType: WSFederationSerializer.GetReferencedRequest
- uid: System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetReferencedResult
  nameWithType: WSFederationSerializer.GetReferencedResult
- uid: System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetRequestAsString
  nameWithType: WSFederationSerializer.GetRequestAsString
- uid: System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString*
  parent: System.IdentityModel.Services.WSFederationSerializer
  isExternal: false
  name: GetResponseAsString
  nameWithType: WSFederationSerializer.GetResponseAsString
