### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  id: Saml2SecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  - System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  type: Class
  summary: "SAML 2.0 アサーションからセキュリティ トークンを作成するセキュリティ トークン ハンドラーを表します。"
  remarks: "および SAML 2.0 アサーションに基づくセキュリティ トークンを逆シリアル化を Saml2SecurityTokenHandler クラス<xref:System.IdentityModel.Tokens.Saml2SecurityToken>オブジェクト</xref:System.IdentityModel.Tokens.Saml2SecurityToken>。 セキュリティ トークン ハンドラーは、作成、読み取り、書き込み、およびトークンの検証を行います。       セキュリティ トークン サービス (STS) を構成することも証明書利用者 (RP) Saml2SecurityTokenHandler クラスのインスタンスを追加することによってトークンの SAML 2.0 アサーションに基づくセキュリティを処理するアプリケーション、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>サービス (またはアプリケーション) 用に構成されたオブジェクト</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>。 これは、ため、プログラムまたは構成ファイルにします。 コレクションのコレクションの指定された構成からハンドラー自体が構成されている<xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A>プロパティをコレクションに追加されたとき</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A>。 設定して、ハンドラーを個別に構成することができますが、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>プロパティ、これは通常は不要ですただし、場合は、ハンドラーを個別に構成する必要があります、プロパティ必要がありますする設定、ハンドラーをコレクションに追加した後。</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> 。       多くのシナリオとして、Saml2SecurityTokenHandler クラスを使用できます-です。ただし、多くの拡張機能ポイント メソッドを介して公開クラスを提供します。 Saml2SecurityTokenHandler から派生する特定のメソッドをオーバーライドする、既定の実装で提供されるトークンの処理の機能を変更することができますか一部のカスタムのシナリオで必要な場合が SAML アサーションの仕様に拡張機能の処理を追加することができます。"
  syntax:
    content: 'public class Saml2SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: Saml2SecurityTokenHandler()
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityTokenHandler&quot;> </xref>既定セキュリティ トークン要件を持つクラス。"
  remarks: "<xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A>プロパティのインスタンスに設定されて<xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement>既定のコンス トラクターで作成する</xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement></xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement%2A>。"
  syntax:
    content: public Saml2SecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityTokenHandler&quot;> </xref>指定したセキュリティ トークンの要件を持つクラス。"
  syntax:
    content: public Saml2SecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);
    parameters:
    - id: samlSecurityTokenRequirement
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "<xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref>トークンを検証するときに、このインスタンスで使用します。 セット、<xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*>プロパティ</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*>。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityTokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "すべての属性のコレクションに、サブジェクトに関連付けられているデリゲートを追加します。"
  syntax:
    content: protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "このデリゲート<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref>オブジェクトをシリアル化する、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>です。"
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "型のコレクション<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>です。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "現在の XML 要素がこのインスタンスがシリアル化可能なキー識別子句を指しているかどうかを示します。"
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "開始要素に配置されている XML リーダーです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*>メソッドは、要素を読み取ることができますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*> 。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "現在の XML 要素をこのインスタンスによって処理される型のトークンとして読み取れるかどうかを示します。"
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "開始要素に配置されている XML リーダーです。 リーダーはない高度な必要があります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*>メソッドは、要素を読み取ることができますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*> 。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーが型のトークンを検証できるかどうかを示す値を取得<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  remarks: "このメソッドは、基本クラスのメソッドをオーバーライドし、常に返します`true`です。"
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、、ハンドラーが型のトークンを検証できるということを示します<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスで、指定したキー識別子句をシリアル化できるかどうかを示します。"
  syntax:
    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>をシリアル化します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したキー識別子句をシリアル化する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーが型のトークンをシリアル化できるかどうかを示す値を取得<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  remarks: "このメソッドは、基本クラスのメソッドをオーバーライドし、常に返します`true`です。"
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>;ハンドラーが型のトークンをシリアル化できることを示す<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または X.509 証明書の検証に現在のインスタンスによって使用される X.509 証明書検証コントロールを設定します。"
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref>検証コントロールを表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  id: CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CollectAttributeValues(ICollection<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "複数値を持つ&1; つの属性には、一般的な要求の種類、クレーム値の型、および発行元の属性を収集します。"
  syntax:
    content: protected virtual System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> CollectAttributeValues (System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "型のコレクション<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>クレームから生成された属性を格納しています。"
    return:
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
      description: "コレクション<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>入力コレクションから抽出された属性を格納しています。 入力コレクション内の属性、一般的な要求の種類を共有する要求の値、および出力コレクション内の複数の値を持つ&1; つの属性に統合されます。 その他の属性を持つ発行元。 出力コレクション内で変更されていないその他の属性を持つクレームの種類、要求の値、または発行元を共有しない入力のコレクション内の属性が表示されます。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "作成、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;> </xref>アサーションのオブジェクト。"
  remarks: "既定では、このメソッドが戻る`null`です。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Advice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;></xref> object. 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "作成、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>要求からのオブジェクト。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Attribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "<xref href=&quot;System.Security.Claims.Claim&quot;> </xref> SAML 属性を生成するからです。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>変換後のクレームを格納しています。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "作成、 <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>トークン記述子オブジェクト。"
  remarks: "このメソッドが返す可能性があります`null`トークン記述子には、任意のサブジェクトが含まれていないか、サブジェクトには、いずれの要求はありません。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement CreateAttributeStatement (System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> SAML 属性に変換されるクレームを格納しているオブジェクト。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>変換されたクレームを格納します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定された認証情報を SAML 2.0 認証ステートメントを作成します。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement CreateAuthenticationStatement (System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: authInfo
      type: System.Security.Claims.AuthenticationInformation
      description: "<xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref>としてラップする状態を格納しているオブジェクト、 <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>オブジェクト。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>作成されているアサーションを追加するか、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>を無視する、 <xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref>オブジェクト (および SAML 2.0 認証ステートメントを作成できません)。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*> property of <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "サブジェクト、 <code> tokenDescriptor </code> (、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*>プロパティ) のいずれかの要求の種類を持つ信頼性情報を含む<xref href=&quot;System.Security.Claims.ClaimTypes.AuthenticationInstant&quot;></xref>または<xref href=&quot;System.Security.Claims.ClaimTypes.AuthenticationMethod&quot;></xref>は各型の少なくとも&1; つのクレームが含まれていません</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*>。       - または - のサブジェクトによって指定される認証方法、 <code> tokenDescriptor </code>絶対 URI に解決できません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  id: CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateClaims(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 トークンからクレームを作成します。"
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.Saml2SecurityToken samlToken);
    parameters:
    - id: samlToken
      type: System.IdentityModel.Tokens.Saml2SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>からクレームを作成するセキュリティ トークンを表すです。"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref>トークンから抽出されたクレームを格納します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion*> property of <code>samlToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ハンドラーが構成されていないか、ハンドラーの発行者名レジストリが構成されていません。 (、 <> </> *> プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>に設定されているか、 <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;> </xref>で、 <> </> *> であるプロパティ<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "セキュリティ トークンの構成済みの発行者名レジストリによって返される発行者名 (<code>samlToken</code>) は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "アサーションの条件を作成します。"
  remarks: "一般に、条件は、アサーション、アサーションの悪用の影響を抑えるために含める必要があります。 NotBefore と NotOnOrAfter 条件を指定する場合は、侵害されたアサーションの脆弱性の期間を制限できます。 AudienceRestrictionCondition は、目的の証明書利用者のパーティを明示的に記述するために使用できますか、証明書利用者に適切な対象者制限の強制と組み合わせると、アサーションのパーティに証明書利用者の間のなりすましによる攻撃を軽減するために役立ちます。       既定の実装がに基づいて NotBefore と NotOnOrAfter の条件を作成、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>のプロパティ、 `tokenDescriptor`</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> 。 アサーションの消費量を制限する、AudienceRestrictionCondition も生成されます、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>のプロパティ、 `tokenDescriptor`</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> 。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Conditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "トークンの有効期間。"
    - id: relyingPartyAddress
      type: System.String
      description: "トークンの作成対象のエンドポイント アドレス。 アドレスは、AudienceRestriction 条件としてモデル化されます。"
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;> </xref>アサーションの条件を含むオブジェクトです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "アサーション発行元を識別する名前の識別子を作成します。"
  remarks: "SAML2 アサーションは、発行者の名前の識別子を含める必要があります。 このメソッドが返す可能性がありますいない`null`です。       既定の実装から簡易名識別子を作成する、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>のプロパティ、 `tokenDescriptor`</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> 。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier CreateIssuerNameIdentifier (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "名前の識別子を作成するトークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>名前識別子を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 アサーションのサブジェクトを作成します。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Subject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "サブジェクトの作成元のセキュリティ トークン記述子。"
    return:
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref>アサーションのサブジェクトを表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  id: CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "トークンがメッセージにアタッチされていない場合は、セキュリティ トークンへの参照を作成します。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "SAML トークンです。"
    - id: attached
      type: System.Boolean
      description: "添付または結び付けられていない参照を作成するかどうかを示す値。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>を表すトークンへの参照。 (インスタンスの<xref href=&quot;System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause&quot;></xref>が実際に返されます)。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 アサーションに含まれるステートメントを作成します。"
  remarks: "ステートメントは、SAML 2.0 アサーションで必要はありません。 このメソッドは、空のコレクションを返す可能性があります。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Statement> CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "ステートメントを作成するトークンの記述子。"
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Statement}
      description: "列挙体<xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;></xref>ステートメントを格納しています。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "トークンの記述子に基づくセキュリティ トークンを作成します。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "セキュリティ トークンを作成するトークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> SAML 2.0 のセキュリティ トークンを表すです。 (返されたトークンのインスタンスでは実際には、 <xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>)。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  id: CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateWindowsIdentity(String)
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "作成、 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>オブジェクト指定されたユーザー プリンシパル名 (UPN) を使用します。"
  syntax:
    content: protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);
    parameters:
    - id: upn
      type: System.String
      description: "Id の作成に使用する UPN です。"
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "作成した Windows id。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>upn</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  id: CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "アクターを表す SAML 2.0 属性のコレクションから、XML 形式の文字列を構築します。"
  remarks: "文字列の形式は、&quot;\\<アクター >\\<属性名、ns >\\<AttributeValue >.\\</AttributeValue >、.\\<属性/> しています.\\</Actor>&quot;"
  syntax:
    content: protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Attribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute}
      description: "型の列挙体<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>属性を格納しています。"
    return:
      type: System.String
      description: "属性を使用して構築整形式の XML 文字列です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  id: DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: DenormalizeAuthenticationType(String)
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "返します、 <xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>SAML 認証コンテキスト クラス参照を正規化した値と一致する値</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>。"
  syntax:
    content: protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);
    parameters:
    - id: normalizedAuthenticationType
      type: System.String
      description: "正規化された値。"
    return:
      type: System.String
      description: "いずれかを表す文字列、<xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>定数</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  id: DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: DetectReplayedToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定したトークンはトークン リプレイ キャッシュに既に存在する場合に例外をスローします。それ以外の場合、トークンがキャッシュに追加されます。"
  remarks: "既定の動作では、のみベアラー トークン (キーがないトークン) を確認します。 トークン リプレイ キャッシュは、<xref:System.IdentityModel.Tokens.TokenReplayCache>オブジェクトを使用してこのハンドラー用に構成された、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A>のプロパティ、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration>を通じて参照されるオブジェクト、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>プロパティ</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A></xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration></xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches%2A></xref:System.IdentityModel.Tokens.TokenReplayCache>。"
  syntax:
    content: protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> SAML 2.0 のセキュリティ トークンを表す (トークンは、型でなければなりません<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>) をチェックします。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - がない<xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;></xref>下で構成されている、 <> </> *> ハンドラーの構成のプロパティ (経由でアクセス、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>プロパティ).</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>インスタンスとしてキャストすることはできません<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "トークンに関連付けられているアサーションの ID が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空です。 (、 <> </> *> トークンの参照のプロパティ、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>を持つ、 <> </> *> を参照するプロパティ、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Id&quot;> </xref>で、<xref:System.IdentityModel.Tokens.Saml2Id.Value*>であるプロパティ<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空です)</xref:System.IdentityModel.Tokens.Saml2Id.Value*> 。"
  - type: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    description: "トークンは既に、 <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;></xref>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  id: FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: FindUpn(ClaimsIdentity)
  nameWithType: Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "UPN 要求の値が指定された検索<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref>に id をマッピングするためにオブジェクト、 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>オブジェクト。"
  syntax:
    content: protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
      description: "目的の UPN 要求が含まれているクレーム id のオブジェクト。"
    return:
      type: System.String
      description: "UPN を含む文字列の要求の値が見つかりました。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "資格情報を暗号化トークンを取得します。 資格情報を暗号化トークンを変更するには、このメソッドをオーバーライドします。"
  remarks: "既定の実装から暗号化資格情報を取得する、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>のプロパティ、 `tokenDescriptor`</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> 。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "スコープのオブジェクトから資格情報を暗号化いくつかのスコープを取得します。"
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref>資格情報が暗号化されたトークンを表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "トークンの記述子から取得した暗号化の資格情報は非対称です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "アサーションに署名するための資格情報を取得します。"
  remarks: "セキュリティ トークンとして使用される SAML2 アサーションに署名を付けます。       既定の実装を使用して、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>のプロパティ、`tokenDescriptor`資格情報を取得します</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "トークンの記述子。"
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref>アサーションに署名するための資格情報を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  id: GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "これまでは、トークン リプレイ キャッシュにトークンを保持する時間を返します。"
  remarks: "既定では、存在する場合、このメソッドは、SAML 条件の NotOnOrAfter を返します。       その値が存在しない場合は、最初の SubjectConfirmationData の NotOnOrAfter を返します。       この関数は、現在の時刻から値を返すことはありません (<xref:System.DateTime.Now%2A>) Configuration.TokenReplayCacheExpirationPeriod より</xref:System.DateTime.Now%2A>。"
  syntax:
    content: protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.Saml2SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.Saml2SecurityToken
      description: "有効期限を取得するトークンです。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>有効期限の時刻を表す</xref:System.DateTime>。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーでサポートされているトークンの種類の識別子を取得します。"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "トークンを含む文字列の配列は、このハンドラーでサポートされている識別子を入力します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または設定およびキー識別子を逆シリアル化に使用されるセキュリティ トークン シリアライザー。"
  remarks: "シリアル化および逆シリアル化<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>オブジェクト</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>。"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>シリアライザーを表します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を設定しようとすると、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>に発生します。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "XML からカスタム構成を読み込みます。"
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> SAML トークンの認証要件を指定します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定された構成<code> customConfigElements </code>が無効です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  id: NormalizeAuthenticationContextClassReference(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: NormalizeAuthenticationContextClassReference(String)
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 認証コンテキスト クラス参照に一致する正規化された値を返します。"
  syntax:
    content: protected virtual string NormalizeAuthenticationContextClassReference (string saml2AuthenticationContextClassReference);
    parameters:
    - id: saml2AuthenticationContextClassReference
      type: System.String
      description: "1 つ、<xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>定数</xref:System.IdentityModel.Tokens.Saml2Constants.AuthenticationContextClasses>。"
    return:
      type: System.String
      description: "正規化された値を含む文字列です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 属性ステートメントからクレームを作成し、指定されたサブジェクトに追加します。"
  remarks: "作成された要求は、サブジェクトに追加されます。"
  syntax:
    content: protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.Saml2AttributeStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>からクレームが作成されます。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "クレームを追加する件名。"
    - id: issuer
      type: System.String
      description: "発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 認証ステートメントからクレームを作成し、指定されたサブジェクトに追加します。"
  syntax:
    content: protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.Saml2AuthenticationStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>からクレームが作成されます。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "クレームを追加する件名。"
    - id: issuer
      type: System.String
      description: "発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 承認決定ステートメントからの要求を作成し、指定されたサブジェクトに追加します。"
  remarks: "既定の実装では、何も行われません。"
  syntax:
    content: protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement statement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statement
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;> </xref>からクレームが作成されます。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "クレームを追加する件名。"
    - id: issuer
      type: System.String
      description: "発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 サブジェクトからクレームを作成し、指定されたサブジェクトに追加します。"
  syntax:
    content: protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.Saml2Subject assertionSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: assertionSubject
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref>からクレームが作成されます。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "クレームを追加する件名。"
    - id: issuer
      type: System.String
      description: "発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>assertionSubject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 ステートメントのコレクションからの要求を作成し、指定されたサブジェクトに追加します。"
  syntax:
    content: protected virtual void ProcessStatement (System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.Saml2Statement> statements, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statements
      type: System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement}
      description: "コレクション<xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;></xref>からクレームが作成されます。"
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "クレームを追加する件名。"
    - id: issuer
      type: System.String
      description: "発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  id: ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Action&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Action ReadAction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Action
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Action&quot;> </xref>読み取られるアクション要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  id: ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAdvice(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Advice&gt;要素。"
  remarks: "アドバイス要素には、含まれる SAML 2.0 以外の名前空間からの XML 要素を許可する機能拡張ポイントがあります。 既定では、アドバイスは、アサーションのセマンティクスに影響を与えずに無視される可能性がありますので、このような要素は無視されます。 これらの要素の処理を処理するには、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Advice ReadAdvice (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Advice&quot;> </xref>読み取られる Advice 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  id: ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAssertion(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Assertion&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Assertion ReadAssertion (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>読み取られるアサーション要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  id: ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttribute(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Attribute&gt;要素。"
  remarks: "既定の実装では、属性要素のコンテンツが単純な文字列である必要があります。 複雑なコンテンツまたは xs:string 以外の宣言された単純型のコンテンツを処理するためには、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Attribute ReadAttribute (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>読み取られるアサーション要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  id: ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:AttributeStatement&gt;要素、または&lt;saml:Statement&gt; saml:AttributeStatementType の xsi:type を指定する要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>読み取られる要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  id: ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeValue(XmlReader,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "属性値を読み取ります。"
  syntax:
    content: protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Attribute attribute);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "読み取り中の属性です。"
    return:
      type: System.String
      description: "属性の値を含む文字列です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  id: ReadAudienceRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAudienceRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:AudienceRestriction&gt;要素または&lt;saml:Condition&gt; saml:AudienceRestrictionType の xsi:type を指定する要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AudienceRestriction ReadAudienceRestriction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2AudienceRestriction
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AudienceRestriction&quot;> </xref>読み取られた要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  id: ReadAuthenticationContext(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationContext(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:AuthnContext&gt;要素。"
  remarks: "既定の実装は、省略可能な処理しない\\<saml:AuthnContextDecl > 要素。 値渡しで認証コンテキストの宣言を処理するには、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationContext ReadAuthenticationContext (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationContext
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationContext&quot;> </xref>読み取られる AuthnContext 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  id: ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:AuthnStatement&gt;要素または&lt;saml:Statement&gt; saml:AuthnStatementType の xsi:type を指定する要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>読み取られる要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  id: ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:AuthzDecisionStatement&gt;要素または&lt;saml:Statement&gt; saml:AuthzDecisionStatementType の xsi:type を指定する要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;> </xref>読み取られる要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  id: ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadConditions(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Conditions&gt;要素。"
  remarks: "ユーザー設定を処理する\\<saml:Condition > 要素は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Conditions ReadConditions (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;> </xref>読み取られる条件要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>条件要素に配置されていません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  id: ReadEncryptedId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadEncryptedId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:EncryptedId&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadEncryptedId (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>EncryptedId 要素をポイントします</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>読み取られた EncryptedId 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>EncryptedID 要素に配置されていません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  id: ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadEvidence(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Evidence&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Evidence ReadEvidence (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Evidence
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Evidence&quot;> </xref>読み取られる証拠要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  id: ReadIssuer(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadIssuer(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Issuer&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadIssuer (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>読み取られる発行者要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SecurityKeyIdentifierClause を読み取ります。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>の読み取りに使用する</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>を表すセキュリティ キー識別句。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  id: ReadNameId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadNameId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:NameID&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameId (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>NameID 要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>読み取られた NameID 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  id: ReadNameIdType(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadNameIdType(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "両方&lt;発行者&gt;と&lt;NameID&gt; NameIDType のされます。 このメソッドは、それらの要素のいずれかの内容を読み取ります。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadNameIdType (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>NameID 型に配置します</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> XML からを構築します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  id: ReadProxyRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadProxyRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:ProxyRestriction&gt;要素、または&lt;saml:Condition&gt; saml:ProxyRestrictionType の xsi:type を指定する要素。"
  remarks: "既定の実装では、数の属性の最大値は、Int32.MaxValue に制限されます。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2ProxyRestriction ReadProxyRestriction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2ProxyRestriction
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2ProxyRestriction&quot;> </xref>読み取られた要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  id: ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "必要な KeyInfo が署名 SAML を逆シリアル化します。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.Saml2Assertion assertion);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Ds:KeyInfo 要素に位置する XmlReader です。"
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "オンになって、署名されたアサーションです。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>を表すに使用するキーの署名を確認します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  id: ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Statement&gt;要素。"
  remarks: "既定の実装は、saml:AttributeStatementType、saml:AuthnStatementType、および saml:AuthzDecisionStatementType の xsi:type を指定するステートメント要素のみを処理します。 カスタム ステートメントを処理するには、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Statement ReadStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Statement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Statement&quot;> </xref>読み取られたステートメント要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  id: ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubject(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:Subject&gt;要素。"
  remarks: "既定の実装は、省略可能な処理しない\\<EncryptedID > 要素。 サブジェクトの Id で暗号化されている、処理するには、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2Subject ReadSubject (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Subject&quot;> </xref>読み取られたサブジェクト要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  id: ReadSubjectConfirmation(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectConfirmation(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;SubjectConfirmation&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmation ReadSubjectConfirmation (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmation
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmation&quot;> </xref>読み取られた SubjectConfirmation 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  id: ReadSubjectConfirmationData(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectConfirmationData(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:SubjectConfirmationData&gt;要素。"
  remarks: "既定の実装では、拡張型 saml:KeyInfoConfirmationDataType と同様に、拡張されていない要素を処理します。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectConfirmationData ReadSubjectConfirmationData (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmationData&quot;> </xref>読み取られた SubjectConfirmationData 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  id: ReadSubjectId(System.Xml.XmlReader,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectId(XmlReader,String)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このメソッドで使用される構造の処理、&lt;サブジェクト&gt;と&lt;SubjectConfirmation&gt; id 要素"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2NameIdentifier ReadSubjectId (System.Xml.XmlReader reader, string parentElement);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>サブジェクト ID XML に配置します</xref:System.Xml.XmlReader>。"
    - id: parentElement
      type: System.String
      description: "このサブジェクトの ID を含む親要素"
    return:
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref> XML からを構築します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  id: ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML サブジェクトを逆シリアル化&lt;ds:KeyInfo&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>に配置されている、 &lt;ds:KeyInfo&gt;要素</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>の内容を表す、 &lt;ds:KeyInfo&gt;要素。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  id: ReadSubjectLocality(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectLocality(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り、 &lt;saml:SubjectLocality&gt;要素。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.Saml2SubjectLocality ReadSubjectLocality (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み取る要素に位置づけ</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.Saml2SubjectLocality
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectLocality&quot;> </xref>読み取られた SubjectLocality 要素を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 トークンを指定したストリームから読み取ります。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A <xref:System.Xml.XmlReader>SAML 2.0 のセキュリティ トークンへのストリーム</xref:System.Xml.XmlReader>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "インスタンス<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または -、 <> </> *> で指定された構成のプロパティ、 <> </> *> プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。      - または -、 <> </> *> で指定された構成のプロパティ、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "署名キーの Id を解決する、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>です。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>解決するのには、発行者トークンです。"
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "現在<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref>このハンドラーに関連付けられています。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>解決済みのトークンを表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "ハンドラーは、トークンを解決するのにはできません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "コレクションを解決<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref>で参照されている、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;></xref>です。"
  syntax:
    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> ResolveSecurityKeys (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver resolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>を処理します。"
    - id: resolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>の解決に使用する、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>オブジェクト。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "型のコレクション<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref>キーを格納しています。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "ハンドラーは、キーを解決するのにはできません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  id: SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得またはこのインスタンスのトークンの要件のセキュリティを設定します。"
  syntax:
    content: public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref>要件を指定します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を設定しようとすると、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>に発生します。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  id: SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "特殊な種類の場合にこのメソッドが呼び出されます<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref>が検出されました。 <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>ラップで渡される、 <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>属性値のコレクションを含む (で、<xref:System.IdentityModel.Tokens.Saml2Attribute.Values*>プロパティ)、それぞれが、要求にマッピングを取得します</xref:System.IdentityModel.Tokens.Saml2Attribute.Values*>。 すべての要求で返されます、 <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref>指定した発行者にします。"
  syntax:
    content: protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.Saml2Attribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "The <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;></xref> to use."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "<xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref>このトークンのサブジェクト。"
    - id: issuer
      type: System.String
      description: "要求の発行者。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>任意の有効な属性値が含まれていません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  id: TokenProfile11ValueType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TokenProfile11ValueType
  nameWithType: Saml2SecurityTokenHandler.TokenProfile11ValueType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 2.0 アサーション、OASIS Web Services Security SAML トークン Profile 1.1 で定義されている Id のキー識別子の値の型。 これは、URI です。"
  syntax:
    content: public const string TokenProfile11ValueType;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーでサポートされているトークンの種類を取得します。"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>の<xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;></xref>クラス</xref:System.Type>"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "署名キー識別子を SecurityToken に解決します。"
  syntax:
    content: protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.Saml2Assertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>解決するのには、発行者トークンです。"
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "現在<xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref>このハンドラーに関連付けられています。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "このメソッドが戻るときに、トークンが正常に解決された場合、解決されたセキュリティ トークンが含まれます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、トークンに解決されます。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  id: ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateConditions(Saml2Conditions,Boolean)
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定された検証<xref href=&quot;System.IdentityModel.Tokens.Saml2Conditions&quot;></xref>オブジェクト。"
  remarks: "条件が有効でない場合は、適切な例外をスローします。 トークンが無効であるさまざまな理由からです。 たとえば、トークンの有効期間内で現在の時刻ができない可能性があります、トークンが矛盾していますか、無効であるデータを含む可能性があります。 またはトークンがサポートされていない SAML 2.0 要素を含めることがあります。"
  syntax:
    content: protected virtual void ValidateConditions (System.IdentityModel.Tokens.Saml2Conditions conditions, bool enforceAudienceRestriction);
    parameters:
    - id: conditions
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "検証に使用する SAML 2.0 条件です。"
    - id: enforceAudienceRestriction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>対象者制限状態を確認します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  id: ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateConfirmationData(Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定された検証<xref href=&quot;System.IdentityModel.Tokens.Saml2SubjectConfirmationData&quot;></xref>オブジェクト。"
  remarks: "確認のデータが有効でない場合は、適切な例外をスローします。"
  syntax:
    content: protected virtual void ValidateConfirmationData (System.IdentityModel.Tokens.Saml2SubjectConfirmationData confirmationData);
    parameters:
    - id: confirmationData
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "SAML 2.0 サブジェクト確認データ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "トークン データを検証し、その要求を返します。"
  remarks: "トークンが有効でない場合は、適切な例外をスローします。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "検証に使用する SAML 2.0 トークンです。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "トークンに含まれている識別情報。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  id: WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAction(XmlWriter,Saml2Action)
  nameWithType: Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Action&gt;要素。"
  syntax:
    content: protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Action data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Action
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  id: WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAdvice(XmlWriter,Saml2Advice)
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Advice&gt;要素。"
  syntax:
    content: protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Advice data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Advice
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  id: WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAssertion(XmlWriter,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML ライターに指定した SAML アサーションをシリアル化します。"
  syntax:
    content: protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Assertion data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>のシリアル化を使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Assertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Assertion&quot;> </xref>をシリアル化するアサーションを表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定されたアサーション<code> data </code>両方を持つ、 <> </> *><xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReceivedEncryptingCredentials>プロパティに設定および<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。      - または - ステートメントとで指定されたアサーション内でない件名が<code> data </code></xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReceivedEncryptingCredentials> 。(両方、 <> </> *> プロパティおよび<> *> プロパティには<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.)アサーションにステートメントが含まれていない場合、サブジェクトでなければなりません。      - または - で指定されたアサーション<code> data </code>認証、属性、または承認決定ステートメントとなしのサブジェクトが含まれています: これらのステートメントには、サブジェクトが必要とします。(、 <> </> *> プロパティには、型のステートメントが含まれている<xref href=&quot;System.IdentityModel.Tokens.Saml2AttributeStatement&quot;> </xref>、 <xref href=&quot;System.IdentityModel.Tokens.Saml2AuthenticationStatement&quot;> </xref>、または<xref href=&quot;System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement&quot;></xref>と<xref:System.IdentityModel.Tokens.Saml2Assertion.Subject*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>).</xref:System.IdentityModel.Tokens.Saml2Assertion.Subject*>"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "トークンの暗号化の資格情報には、指定された対称キーがありません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  id: WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttribute(XmlWriter,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Attribute&gt;要素。"
  syntax:
    content: protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Attribute data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  id: WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:AttributeStatement&gt;要素。"
  syntax:
    content: protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AttributeStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AttributeStatement
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Saml:Attribute 値を書き込みます。"
  remarks: "既定では、メソッドは、文字列として値を書き込みます。"
  syntax:
    content: protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.Saml2Attribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: value
      type: System.String
      description: "書き込まれる属性の値を含む文字列です。"
    - id: attribute
      type: System.IdentityModel.Tokens.Saml2Attribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.Saml2Attribute&quot;> </xref>値が書き込まれる属性を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  id: WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:AudienceRestriction&gt;要素。"
  syntax:
    content: protected virtual void WriteAudienceRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AudienceRestriction data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AudienceRestriction
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  id: WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:AuthnContext&gt;要素。"
  syntax:
    content: protected virtual void WriteAuthenticationContext (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationContext data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthenticationContext
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  id: WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:AuthnStatement&gt;要素。"
  syntax:
    content: protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthenticationStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthenticationStatement
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  id: WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:AuthzDecisionStatement&gt;要素。"
  syntax:
    content: protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  id: WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteConditions(XmlWriter,Saml2Conditions)
  nameWithType: Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Conditions&gt;要素。"
  syntax:
    content: protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Conditions data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Conditions
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  id: WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteEvidence(XmlWriter,Saml2Evidence)
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Evidence&gt;要素。"
  syntax:
    content: protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Evidence data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Evidence
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteIssuer(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Issuer&gt;要素。"
  syntax:
    content: protected virtual void WriteIssuer (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "シリアル化、 <xref href=&quot;System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause&quot;> </xref>指定した XML ライターにします。"
  syntax:
    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>キー識別子句をシリアル化する</xref:System.Xml.XmlWriter>。"
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>シリアル化するキー識別子句を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityKeyIdentifierClause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteNameId(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:NameID&gt;要素。"
  syntax:
    content: protected virtual void WriteNameId (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>シリアル化に使用する、 <xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref></xref:System.Xml.XmlWriter> 。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>をシリアル化します。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Saml2NameIdentifier 暗号化資格情報は、指定された対称キーが必要です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  id: WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "両方&lt;発行者&gt;と&lt;NameID&gt; NameIDType のされます。 このメソッドは、それらの要素のいずれかのコンテンツを書き込みます。"
  syntax:
    content: protected virtual void WriteNameIdType (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2NameIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>NameID 型をシリアル化するときに使用します</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2NameIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.Saml2NameIdentifier&quot;> </xref>を書き込めません。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  id: WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:ProxyRestriction&gt;要素。"
  syntax:
    content: protected virtual void WriteProxyRestriction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2ProxyRestriction data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2ProxyRestriction
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "署名を書き込みます&lt;ds:KeyInfo&gt;要素が指定した XML ライターを使用します。"
  syntax:
    content: protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>キー識別子をシリアル化するときに使用します</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>を記述するキー識別子を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signingKeyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ハンドラーがで指定されたキー識別子をシリアル化できません<code> signingKeyIdentifier</code>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  id: WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteStatement(XmlWriter,Saml2Statement)
  nameWithType: Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Saml2Statement を書き込みます。"
  remarks: "このメソッドを書き込むことが、 \\<saml:AttributeStatement >、 \\<saml:AuthnStatement >、または\\<saml:AuthzDecisionStatement > 要素。 カスタム処理を<xref:System.IdentityModel.Tokens.Saml2Statement>書き込みのためのクラス、 \\<saml:Statement > 要素では、このメソッドをオーバーライドします</xref:System.IdentityModel.Tokens.Saml2Statement>。"
  syntax:
    content: protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Statement data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Statement
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  id: WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubject(XmlWriter,Saml2Subject)
  nameWithType: Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:Subject&gt;要素。"
  syntax:
    content: protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2Subject data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2Subject
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  id: WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:SubjectConfirmation&gt;要素。"
  syntax:
    content: protected virtual void WriteSubjectConfirmation (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmation data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmation
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  id: WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:SubjectConfirmationData&gt;要素。"
  remarks: "ときに、データ。KeyIdentifiers コレクションが空でない xsi:type 属性は、saml:KeyInfoConfirmationDataType の指定に書き込まれます。"
  syntax:
    content: protected virtual void WriteSubjectConfirmationData (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectConfirmationData data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "サブジェクトをシリアル化&lt;ds:KeyInfo&gt;要素が指定した XML ライターを使用します。"
  syntax:
    content: protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>キー識別子をシリアル化するときに使用します</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>を記述するキー識別子を表すです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  id: WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "書き込みます、 &lt;saml:SubjectLocality&gt;要素。"
  syntax:
    content: protected virtual void WriteSubjectLocality (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.Saml2SubjectLocality data);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: data
      type: System.IdentityModel.Tokens.Saml2SubjectLocality
      description: "書き込むデータ。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML ライターに Saml2 トークンを書き込みます。"
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>データの書き込みに使用する</xref:System.Xml.XmlWriter>。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "書き込むトークンです。"
  overload: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code><xref href=&quot;System.IdentityModel.Tokens.Saml2SecurityToken&quot;> </xref>オブジェクト。"
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenReplayDetectedException
  nameWithType: SecurityTokenReplayDetectedException
  fullName: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler()
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler()
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.Saml2SecurityTokenHandler(SamlSecurityTokenRequirement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<Saml2Attribute>,SecurityTokenDescriptor)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Saml2Attribute>
  nameWithType: ICollection<Saml2Attribute>
  fullName: System.Collections.Generic.ICollection<System.IdentityModel.Tokens.Saml2Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.IdentityModel.Tokens.Saml2Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Attribute
    name: Saml2Attribute
    nameWithType: Saml2Attribute
    fullName: Saml2Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues(ICollection<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(ICollection<Saml2Attribute>)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Advice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Advice
  nameWithType: Saml2Advice
  fullName: System.IdentityModel.Tokens.Saml2Advice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Attribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Attribute
  nameWithType: Saml2Attribute
  fullName: System.IdentityModel.Tokens.Saml2Attribute
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(ClaimsIdentity,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2AttributeStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AttributeStatement
  nameWithType: Saml2AttributeStatement
  fullName: System.IdentityModel.Tokens.Saml2AttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(AuthenticationInformation,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2AuthenticationStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthenticationStatement
  nameWithType: Saml2AuthenticationStatement
  fullName: System.IdentityModel.Tokens.Saml2AuthenticationStatement
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateClaims(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(Saml2SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SecurityToken
  nameWithType: Saml2SecurityToken
  fullName: System.IdentityModel.Tokens.Saml2SecurityToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Conditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Conditions
  nameWithType: Saml2Conditions
  fullName: System.IdentityModel.Tokens.Saml2Conditions
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2NameIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2NameIdentifier
  nameWithType: Saml2NameIdentifier
  fullName: System.IdentityModel.Tokens.Saml2NameIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2Subject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Subject
  nameWithType: Saml2Subject
  fullName: System.IdentityModel.Tokens.Saml2Subject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Statement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Saml2Statement>
  nameWithType: IEnumerable<Saml2Statement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Statement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.Saml2Statement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Statement
    name: Saml2Statement
    nameWithType: Saml2Statement
    fullName: Saml2Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity(String)
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(String)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<Saml2Attribute>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Saml2Attribute>
  nameWithType: IEnumerable<Saml2Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.Saml2Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.Saml2Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Attribute
    name: Saml2Attribute
    nameWithType: Saml2Attribute
    fullName: Saml2Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType(String)
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: FindUpn(ClaimsIdentity)
  nameWithType: Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(ClaimsIdentity)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(Saml2SecurityToken)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationContextClassReference(String)
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(Saml2AttributeStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(Saml2AuthenticationStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(Saml2AuthorizationDecisionStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthorizationDecisionStatement
  nameWithType: Saml2AuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(Saml2Subject,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(Collection<Saml2Statement>,ClaimsIdentity,String)
- uid: System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Saml2Statement>
  nameWithType: Collection<Saml2Statement>
  fullName: System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.Saml2Statement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.IdentityModel.Tokens.Saml2Statement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Saml2Statement
    name: Saml2Statement
    nameWithType: Saml2Statement
    fullName: Saml2Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Action
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Action
  nameWithType: Saml2Action
  fullName: System.IdentityModel.Tokens.Saml2Action
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAdvice(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAssertion(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Assertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Assertion
  nameWithType: Saml2Assertion
  fullName: System.IdentityModel.Tokens.Saml2Assertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttribute(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue(XmlReader,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(XmlReader,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2AudienceRestriction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AudienceRestriction
  nameWithType: Saml2AudienceRestriction
  fullName: System.IdentityModel.Tokens.Saml2AudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationContext(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2AuthenticationContext
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2AuthenticationContext
  nameWithType: Saml2AuthenticationContext
  fullName: System.IdentityModel.Tokens.Saml2AuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadConditions(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEncryptedId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEvidence(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Evidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Evidence
  nameWithType: Saml2Evidence
  fullName: System.IdentityModel.Tokens.Saml2Evidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadIssuer(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameId(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameId(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameIdType(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadProxyRestriction(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2ProxyRestriction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2ProxyRestriction
  nameWithType: Saml2ProxyRestriction
  fullName: System.IdentityModel.Tokens.Saml2ProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(XmlReader,Saml2Assertion)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadStatement(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2Statement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2Statement
  nameWithType: Saml2Statement
  fullName: System.IdentityModel.Tokens.Saml2Statement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubject(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmation(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectConfirmation
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectConfirmation
  nameWithType: Saml2SubjectConfirmation
  fullName: System.IdentityModel.Tokens.Saml2SubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmationData(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectConfirmationData
  nameWithType: Saml2SubjectConfirmationData
  fullName: System.IdentityModel.Tokens.Saml2SubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectId(XmlReader,String)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(XmlReader,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectLocality(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SubjectLocality
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: Saml2SubjectLocality
  nameWithType: Saml2SubjectLocality
  fullName: System.IdentityModel.Tokens.Saml2SubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: Saml2SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(Saml2Assertion,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(Saml2Assertion,SecurityTokenResolver)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(Saml2Attribute,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenProfile11ValueType
  nameWithType: Saml2SecurityTokenHandler.TokenProfile11ValueType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(Saml2Assertion,SecurityTokenResolver,SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConditions(Saml2Conditions,Boolean)
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(Saml2Conditions,Boolean)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConfirmationData(Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(Saml2SubjectConfirmationData)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAction(XmlWriter,Saml2Action)
  nameWithType: Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(XmlWriter,Saml2Action)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAdvice(XmlWriter,Saml2Advice)
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(XmlWriter,Saml2Advice)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAssertion(XmlWriter,Saml2Assertion)
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(XmlWriter,Saml2Assertion)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttribute(XmlWriter,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(XmlWriter,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(XmlWriter,Saml2AttributeStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(XmlWriter,String,Saml2Attribute)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(XmlWriter,Saml2AudienceRestriction)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(XmlWriter,Saml2AuthenticationContext)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,Saml2AuthenticationStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,Saml2AuthorizationDecisionStatement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteConditions(XmlWriter,Saml2Conditions)
  nameWithType: Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(XmlWriter,Saml2Conditions)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteEvidence(XmlWriter,Saml2Evidence)
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(XmlWriter,Saml2Evidence)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteIssuer(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameId(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(XmlWriter,Saml2NameIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(XmlWriter,Saml2ProxyRestriction)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteStatement(XmlWriter,Saml2Statement)
  nameWithType: Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(XmlWriter,Saml2Statement)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubject(XmlWriter,Saml2Subject)
  nameWithType: Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(XmlWriter,Saml2Subject)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(XmlWriter,Saml2SubjectConfirmation)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(XmlWriter,Saml2SubjectConfirmationData)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(XmlWriter,Saml2SubjectLocality)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: Saml2SecurityTokenHandler
  nameWithType: Saml2SecurityTokenHandler.Saml2SecurityTokenHandler
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes
  nameWithType: Saml2SecurityTokenHandler.AddDelegateToAttributes
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: Saml2SecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: Saml2SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: Saml2SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: Saml2SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues
  nameWithType: Saml2SecurityTokenHandler.CollectAttributeValues
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAdvice
  nameWithType: Saml2SecurityTokenHandler.CreateAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttribute
  nameWithType: Saml2SecurityTokenHandler.CreateAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.CreateAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.CreateAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateClaims
  nameWithType: Saml2SecurityTokenHandler.CreateClaims
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateConditions
  nameWithType: Saml2SecurityTokenHandler.CreateConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateIssuerNameIdentifier
  nameWithType: Saml2SecurityTokenHandler.CreateIssuerNameIdentifier
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject
  nameWithType: Saml2SecurityTokenHandler.CreateSamlSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference
  nameWithType: Saml2SecurityTokenHandler.CreateSecurityTokenReference
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateStatements
  nameWithType: Saml2SecurityTokenHandler.CreateStatements
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: Saml2SecurityTokenHandler.CreateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity
  nameWithType: Saml2SecurityTokenHandler.CreateWindowsIdentity
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes
  nameWithType: Saml2SecurityTokenHandler.CreateXmlStringFromAttributes
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType
  nameWithType: Saml2SecurityTokenHandler.DenormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken
  nameWithType: Saml2SecurityTokenHandler.DetectReplayedToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: FindUpn
  nameWithType: Saml2SecurityTokenHandler.FindUpn
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials
  nameWithType: Saml2SecurityTokenHandler.GetEncryptingCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials
  nameWithType: Saml2SecurityTokenHandler.GetSigningCredentials
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime
  nameWithType: Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: Saml2SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: Saml2SecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: Saml2SecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationContextClassReference
  nameWithType: Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject
  nameWithType: Saml2SecurityTokenHandler.ProcessSamlSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ProcessStatement
  nameWithType: Saml2SecurityTokenHandler.ProcessStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAction
  nameWithType: Saml2SecurityTokenHandler.ReadAction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAdvice
  nameWithType: Saml2SecurityTokenHandler.ReadAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAssertion
  nameWithType: Saml2SecurityTokenHandler.ReadAssertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttribute
  nameWithType: Saml2SecurityTokenHandler.ReadAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue
  nameWithType: Saml2SecurityTokenHandler.ReadAttributeValue
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestriction
  nameWithType: Saml2SecurityTokenHandler.ReadAudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationContext
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadConditions
  nameWithType: Saml2SecurityTokenHandler.ReadConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEncryptedId
  nameWithType: Saml2SecurityTokenHandler.ReadEncryptedId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadEvidence
  nameWithType: Saml2SecurityTokenHandler.ReadEvidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadIssuer
  nameWithType: Saml2SecurityTokenHandler.ReadIssuer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameId
  nameWithType: Saml2SecurityTokenHandler.ReadNameId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadNameIdType
  nameWithType: Saml2SecurityTokenHandler.ReadNameIdType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadProxyRestriction
  nameWithType: Saml2SecurityTokenHandler.ReadProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo
  nameWithType: Saml2SecurityTokenHandler.ReadSigningKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadStatement
  nameWithType: Saml2SecurityTokenHandler.ReadStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubject
  nameWithType: Saml2SecurityTokenHandler.ReadSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmation
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectConfirmationData
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectId
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadSubjectLocality
  nameWithType: Saml2SecurityTokenHandler.ReadSubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: Saml2SecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken
  nameWithType: Saml2SecurityTokenHandler.ResolveIssuerToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ResolveSecurityKeys
  nameWithType: Saml2SecurityTokenHandler.ResolveSecurityKeys
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: Saml2SecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute
  nameWithType: Saml2SecurityTokenHandler.SetDelegateFromAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: Saml2SecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken
  nameWithType: Saml2SecurityTokenHandler.TryResolveIssuerToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConditions
  nameWithType: Saml2SecurityTokenHandler.ValidateConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateConfirmationData
  nameWithType: Saml2SecurityTokenHandler.ValidateConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: Saml2SecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAction
  nameWithType: Saml2SecurityTokenHandler.WriteAction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAdvice
  nameWithType: Saml2SecurityTokenHandler.WriteAdvice
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAssertion
  nameWithType: Saml2SecurityTokenHandler.WriteAssertion
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttribute
  nameWithType: Saml2SecurityTokenHandler.WriteAttribute
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue
  nameWithType: Saml2SecurityTokenHandler.WriteAttributeValue
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestriction
  nameWithType: Saml2SecurityTokenHandler.WriteAudienceRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationContext
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationContext
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAuthenticationStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement
  nameWithType: Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteConditions
  nameWithType: Saml2SecurityTokenHandler.WriteConditions
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteEvidence
  nameWithType: Saml2SecurityTokenHandler.WriteEvidence
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteIssuer
  nameWithType: Saml2SecurityTokenHandler.WriteIssuer
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: Saml2SecurityTokenHandler.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameId
  nameWithType: Saml2SecurityTokenHandler.WriteNameId
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteNameIdType
  nameWithType: Saml2SecurityTokenHandler.WriteNameIdType
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteProxyRestriction
  nameWithType: Saml2SecurityTokenHandler.WriteProxyRestriction
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo
  nameWithType: Saml2SecurityTokenHandler.WriteSigningKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteStatement
  nameWithType: Saml2SecurityTokenHandler.WriteStatement
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubject
  nameWithType: Saml2SecurityTokenHandler.WriteSubject
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmation
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmation
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectConfirmationData
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectConfirmationData
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectKeyInfo
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteSubjectLocality
  nameWithType: Saml2SecurityTokenHandler.WriteSubjectLocality
- uid: System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.Saml2SecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: Saml2SecurityTokenHandler.WriteToken
