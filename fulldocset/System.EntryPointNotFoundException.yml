### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "エントリ メソッドがないのため、クラスを読み込もうとしましたが失敗した場合にスローされる例外。"
  remarks: "共通言語ランタイムがアセンブリのエントリ ポイントを識別できないために、アセンブリを読み込むことがない場合に、EntryPointNotFoundException 例外がスローされます。  この例外は、次の条件下でスローされることができます:-、共通言語ランタイムはアプリケーションのエントリ ポイントを特定することは (通常、`Main`メソッド) で実行可能アセンブリ。 アプリケーションのエントリ ポイントは、グローバルである必要がありますまたは`static`パラメーターがないか、唯一のパラメーターとして文字列の配列を持つメソッドです。 エントリ ポイントが返すことができる`void`、またはその戻り値のことができます、<xref:System.Int32>または<xref:System.UInt32>終了コード</xref:System.UInt32></xref:System.Int32>。 アプリケーション アセンブリでは、1 つ以上のエントリ ポイントを定義できません。      -Windows DLL 内の関数の呼び出しは、関数が見つからないために解決できません。 User32.dll にという名前の関数が含まれていないため、次の例に、EntryPointNotFoundException 例外がスロー`GetMyNumber`です。           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -メソッド呼び出しで使用される名前が、アセンブリ内にある名前と一致しないために、Windows DLL 内の関数の呼び出しが解決することはできません。       多くの場合、これが発生したため、<xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>フィールドが暗黙的または明示的に設定`true`メソッドの呼び出しで使用される名前がこの ANSI または Unicode のバージョンの名前に対応しない、および、呼び出されたメソッドが&1; つまたは複数の文字列パラメーターが含まれています、ANSI と Unicode バージョンの両方があります</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>。 次の例では、具体的なは、Windows を呼び出すしようとして`MessageBox`User32.dll 内の関数。 最初のメソッドの定義が指定されているので<xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>共通言語が、関数のワイド文字バージョンを検索文字列のマーシャ リングで`MessageBoxW`、メソッドの呼び出しで使用される名前ではなく`MessageBox`</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>。  2 番目のメソッドの定義は、呼び出すことによってこの問題を修正、`MessageBoxW`の代わりに、`MessageBox`関数。           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -その装飾名ではなく、単純な名前で、ダイナミック リンク ライブラリで関数を呼び出すしようとしています。       通常、C++ コンパイラは、DLL 関数の装飾名を生成します。 たとえば、次の C++ コードがという名前の関数を定義`Double`TestDll.dll をという名前のライブラリにします。           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ]ため、コードを次の例では、関数を呼び出す際に、EntryPointNotFoundException 例外がスローされます、`Double`関数が見つかりません。           [!code-cs[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ]ただし、装飾名を使用して、関数が呼び出されます (ここでは、 `?Double@@YAHH@Z`)、次の例のように、関数呼び出しは成功します。                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] Dumpbin.exe などのユーティリティを使用して DLL によってエクスポートされた関数の装飾名を見つけることができます。            アンマネージ ダイナミック リンク ライブラリの場合と同様に、マネージ アセンブリのメソッドを呼び出す-しようとしています。 この動作を確認するには、StringUtilities.dll をという名前のアセンブリには、次の例をコンパイルします。           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ]コンパイルしを呼び出そうとする次の例を実行、 `StringUtilities.SayGoodMorning` StringUtilities.dll ダイナミック リンク ライブラリ内のメソッドがアンマネージ コードの場合と同様です。       EntryPointNotFoundException 例外になります。           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ]例外をなくすためには、マネージ アセンブリとアクセスへの参照を追加、`StringUtilities.SayGoodMorning`メソッドと同じように次の例では、マネージ コードで他のメソッドが表示されます。 ようです。                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -Windows DLL の場合と同様に、COM DLL のメソッドを呼び出すしようとしています。       COM DLL にアクセスするには、選択、**参照の追加**Visual Studio プロジェクトへの参照を追加し、タイプ ライブラリを選択するオプション、 **COM**タブです。       EntryPointNotFoundException のインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.EntryPointNotFoundException.%23ctor%2A>コンス トラクター。</xref:System.EntryPointNotFoundException.%23ctor%2A> 。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、 <xref:System.Exception.Message%2A>「のエントリ ポイントが見つかりませんでした」など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ</xref:System.Exception.Message%2A>を初期化します このメッセージでは、現在のシステム カルチャが考慮されます。       次の表は、 <xref:System.EntryPointNotFoundException>。</xref:System.EntryPointNotFoundException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.TypeLoadException.Message%2A>|ローカライズされたエラー メッセージ文字列 |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref>指定したエラー メッセージを使用します。"
  remarks: "コンテンツ`message`ユーザーが理解するためのものです。 このコンス トラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認するために必要です。       次の表は、 <xref:System.EntryPointNotFoundException>。</xref:System.EntryPointNotFoundException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.TypeLoadException.Message%2A>|エラー メッセージ文字列 |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref>シリアル化されたデータを持つクラス。"
  remarks: "このコンス トラクターは、ストリームで送信された例外オブジェクトを再構成する逆シリアル化中に呼び出されます。"
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データを保持するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは転送先に関する文脈情報。"
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を持つクラス。"
  remarks: "前の例外への参照を含める必要があります前の例外の直接の結果としてスローされる例外、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。 <xref:System.Exception.InnerException%2A>コンス トラクター、または null 参照に渡されたものと同じ値を返します (`Nothing` Visual Basic で) 場合、<xref:System.Exception.InnerException%2A>プロパティがコンス トラクターには、内部例外値を指定していません</xref:System.Exception.InnerException%2A></xref:System.Exception.InnerException%2A>。       次の表は、 <xref:System.EntryPointNotFoundException>。</xref:System.EntryPointNotFoundException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部例外の参照 |。  |<xref:System.TypeLoadException.Message%2A>|エラー メッセージ文字列 |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
    - id: inner
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`inner`パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) で現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
