### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  id: UpdateSourceExceptionFilterCallback
  langs:
  - csharp
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
  type: Delegate
  summary: "バインディング ソースの値の更新中にスローされる例外を処理するメソッドを表します。 これで使用する必要があります、 <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;></xref>です。"
  remarks: "関連付けられている場合、<xref:System.Windows.Controls.ExceptionValidationRule>で、<xref:System.Windows.Data.Binding>オブジェクトを使用するオプションがある、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>例外を処理するためのカスタム ロジックを提供するには、このコールバックを設定するプロパティ</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A></xref:System.Windows.Data.Binding></xref:System.Windows.Controls.ExceptionValidationRule>。 バインディング エンジンは、バインディング ソースの値を更新する際に例外が発生するたびに、このコールバックが呼び出されます。       場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>が指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンを作成、<xref:System.Windows.Controls.ValidationError>例外を使用し、それを追加、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>バインドされている要素のコレクション</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName></xref:System.Windows.Controls.ValidationError></xref:System.Windows.Data.Binding></xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>。"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You have the option to provide custom logic to handle those exceptions. The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an UpdateSourceExceptionFilterCallback:  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an UpdateSourceExceptionFilterCallback:  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
