### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileBase
  id: ProfileBase
  children:
  - System.Web.Profile.ProfileBase.#ctor
  - System.Web.Profile.ProfileBase.Create(System.String)
  - System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  - System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  - System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.IsAnonymous
  - System.Web.Profile.ProfileBase.IsDirty
  - System.Web.Profile.ProfileBase.Item(System.String)
  - System.Web.Profile.ProfileBase.LastActivityDate
  - System.Web.Profile.ProfileBase.LastUpdatedDate
  - System.Web.Profile.ProfileBase.Properties
  - System.Web.Profile.ProfileBase.Save
  - System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  - System.Web.Profile.ProfileBase.UserName
  langs:
  - csharp
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
  type: Class
  summary: "プロファイル プロパティの値と情報への型指定されていないアクセスを提供します。"
  remarks: "ASP.NET では、ProfileBase クラスを使用して、ユーザー プロファイルに使用されるクラスを作成します。 ASP.NET が型の新しいクラスを作成して有効になっているユーザー プロファイルを持つアプリケーションが開始されたときに`ProfileCommon`、ProfileBase クラスから継承します。 厳密に型指定されたアクセサーを追加、`ProfileCommon`構成セクションで定義されている各プロパティのクラスです。 厳密に型指定されたアクセサー、`ProfileCommon`クラスの呼び出し、<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>と<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>、ProfileBase のメソッドは基本クラスを取得し、プロファイル プロパティの値をそれぞれ設定します</xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A></xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>。 インスタンス、`ProfileCommon`クラスは、の値として設定されて、 <xref:System.Web.HttpContext.Profile%2A>ASP.NET アプリケーションのプロパティ</xref:System.Web.HttpContext.Profile%2A>。       ASP.NET アプリケーションで、ユーザー プロファイルのインスタンスを作成するにはお勧めを使用すること、<xref:System.Web.Profile.ProfileBase.Create%2A>メソッド</xref:System.Web.Profile.ProfileBase.Create%2A>。"
  example:
  - "The following code example shows a Web.config file that specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\" >  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"RecentSearchList\"  \n          type=\"System.Collections.Specialized.StringCollection\"  \n          serializeAs=\"Xml\"  \n          allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. Before attempting to run this code, set the provider to the default `AspNetSqlProvider` in the ASP.NET configuration settings for the Web site.  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_1.aspx)]  \n  \n The following code example defines a class that inherits from the ProfileBase class to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_2.cs)]\n [!code-vb[System.Web.Profile.ProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_2.vb)]"
  syntax:
    content: 'public class ProfileBase : System.Configuration.SettingsBase'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements: []
  inheritedMembers:
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref>クラスです。"
  remarks: "ASP.NET を使用して、<xref:System.Web.Profile.ProfileBase>ユーザー プロファイルに使用されるクラスを作成するクラス</xref:System.Web.Profile.ProfileBase>。 ASP.NET が型の新しいクラスを作成して有効になっているユーザー プロファイルを持つアプリケーションが開始されると、 `ProfileCommon`、<xref:System.Web.Profile.ProfileBase>クラス</xref:System.Web.Profile.ProfileBase>を継承します。 厳密に型指定されたアクセサーを追加、`ProfileCommon`構成セクションで定義されている各プロパティのクラスです。 厳密に型指定されたアクセサー、`ProfileCommon`クラスの呼び出し、<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>と<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>のメソッド、<xref:System.Web.Profile.ProfileBase>基底クラスを取得し、プロファイル プロパティの値をそれぞれ設定します</xref:System.Web.Profile.ProfileBase></xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A></xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>。 インスタンス、`ProfileCommon`クラスは、の値として設定されて、 <xref:System.Web.HttpContext.Profile%2A>ASP.NET アプリケーションのプロパティ</xref:System.Web.HttpContext.Profile%2A>。      > [!NOTE] > に格納されているクラスの生成に使用される基本クラス、<xref:System.Web.HttpContext.Profile%2A>を使用してプロパティをオーバーライドすることができます、`inherits`構成ファイルのセクションの属性です</xref:System.Web.HttpContext.Profile%2A>。 ここでは、<xref:System.Web.Profile.ProfileBase>基底クラス</xref:System.Web.Profile.ProfileBase>から継承するカスタム クラスを指定すると       このコンス トラクターは、アプリケーション コードから使用するものではありません。 ユーザー プロファイルのインスタンスを作成するには、使用、<xref:System.Web.Profile.ProfileBase.Create%2A>メソッド</xref:System.Web.Profile.ProfileBase.Create%2A>。"
  example:
  - "The following Web.config file specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n   <connectionStrings>  \n       <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n   </connectionStrings>  \n  \n  <system.web>  \n   <anonymousIdentification enabled=\"true\" />  \n  \n   <profile defaultProvider=\"SqlProvider\" >  \n     <providers>  \n       <add  \n         name=\"SqlProvider\"  \n         connectionStringName=\"SqlServices\"  \n         applicationName=\"ProfileBaseApplication\"  \n         type=\"System.Web.Profile.SqlProfileProvider\" />  \n     </providers>  \n  \n     <properties>  \n       <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n       <add name=\"RecentSearchList\"  \n            type=\"System.Collections.Specialized.StringCollection\"  \n            serializeAs=\"Xml\"  \n            allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n   </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the `ZipCode` property specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_1_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public ProfileBase ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.#ctor*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションの属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Web.config ファイルのセクションで指定されたプロパティの型を作成できませんでした。       - または -、 <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定に<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>要素の属性に設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       - または -、 <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>と<> *> したプロパティの<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。      - または - を使用して指定されたプロバイダーの名前、 <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref>でプロファイル プロパティの属性が見つかりませんでした、 <> </> *> コレクション。       - または -、 <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>指定されたプロファイルのプロパティが見つかりませんでした。       - または - で指定された基本クラスのプロパティ名に一致する名前で、プロファイル プロパティが指定された、 <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref>セクションの属性です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  id: Create(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ASP.NET で使用される、指定されたユーザー名のプロファイルのインスタンスを作成します。"
  remarks: "Create メソッド作成プロファイルの新しいインスタンスを初期化、およびカスタム プロファイル オブジェクトを使用または ASP.NET 以外の環境でのユーザー プロファイルを管理するアプリケーションに適しています。       Create メソッドのこのオーバー ロードでは、指定されたユーザー名が、認証されたユーザーであると仮定します。"
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_2_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/csharp/m-system.web.profile.pro_2_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username);
    parameters:
    - id: username
      type: System.String
      description: "プロファイルを作成するユーザーの名前です。"
    return:
      type: System.Web.Profile.ProfileBase
      description: "<xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref>を表す、指定したユーザーのプロファイルです。"
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションの属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "現在ホストしているアクセス許可レベルより小さい<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>です。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Web.config ファイルのセクションで指定されたプロパティの型を作成できませんでした。       - または -、 <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定に<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>要素の属性に設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       - または -、 <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>と<> *> したプロパティの<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。      - または - を使用して指定されたプロバイダーの名前、 <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref>でプロファイル プロパティの属性が見つかりませんでした、 <> </> *> コレクション。       - または -、 <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>指定されたプロファイルのプロパティが見つかりませんでした。       - または - で指定された基本クラスのプロパティ名に一致する名前で、プロファイル プロパティが指定された、 <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref>セクションの属性です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "ASP.NET で使用される、指定されたユーザー名のプロファイルのインスタンスを作成します。 ユーザーが認証済みまたは匿名かどうかを示すパラメーターを受け取ります。"
  remarks: "Create メソッド作成プロファイルの新しいインスタンスを初期化、およびカスタム プロファイル オブジェクトを使用または ASP.NET 以外の環境でのユーザー プロファイルを管理するアプリケーションに適しています。       認証されたユーザーまたは匿名ユーザーのプロファイルを作成する Create メソッドのこのオーバー ロードを使用できます。"
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/visualbasic/m-system.web.profile.pro_9_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/csharp/m-system.web.profile.pro_9_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "プロファイルを作成するユーザーの名前です。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーを示すためには認証です。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ユーザーが匿名であることを示します。"
    return:
      type: System.Web.Profile.ProfileBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref>を指定したユーザーのプロファイルを表すオブジェクト。"
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> Web.config ファイルのセクションの属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "現在ホストしているアクセス許可レベルより小さい<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>です。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Web.config ファイルのセクションで指定されたプロパティの型を作成できませんでした。       - または -、 <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定に<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>要素の属性に設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       - または -、 <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>と<> *> したプロパティの<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。      - または - を使用して指定されたプロバイダーの名前、 <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref>でプロファイル プロパティの属性が見つかりませんでした、 <> </> *> コレクション。       - または -、 <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>指定されたプロファイルのプロパティが見つかりませんでした。       - または - で指定された基本クラスのプロパティ名に一致する名前で、プロファイル プロパティが指定された、 <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref>セクションの属性です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  id: GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "グループ名で識別されるプロパティのグループを取得します。"
  remarks: "プロファイルのプロパティより効率的な整理のグループに分けることができます。 GetProfileGroup プロパティは、プロパティのグループを取得するグループ名で使用できます。 メンバーとして、グループ名を指定することによって、グループ内のプロファイル プロパティをアクセスすることも、`Profile`プロパティの各ページでご確認いただけます。 たとえば、`ZipCode`プロファイルのメンバーであるプロパティ、`Address`プロファイル グループを使用してアクセスでした`Profile.Address.ZipCode`です。"
  example:
  - "The following Web.config file specifies a user profile that contains group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name. For example, `Profile.Address.Street`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_5_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "プロパティのグループの名前。"
    return:
      type: System.Web.Profile.ProfileGroupBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileGroupBase&quot;> </xref>指定されたグループ名で構成されたプロパティのグループのオブジェクト。"
  overload: System.Web.Profile.ProfileBase.GetProfileGroup*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成セクションで指定されたプロファイルのプロパティ グループ名が見つかりませんでした。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイル プロパティの値を取得します。"
  remarks: "ASP.NET を使用して、<xref:System.Web.Profile.ProfileBase>ユーザー プロファイルに使用されるクラスを作成するクラス</xref:System.Web.Profile.ProfileBase>。 ASP.NET が型の新しいクラスを作成して有効になっているユーザー プロファイルを持つアプリケーションが開始されると、 `ProfileCommon`、<xref:System.Web.Profile.ProfileBase>クラス</xref:System.Web.Profile.ProfileBase>を継承します。 厳密に型指定されたアクセサーを追加、`ProfileCommon`構成セクションで定義されている各プロパティのクラスです。 厳密に型指定されたアクセサー、`ProfileCommon`クラスからの型指定されていない値を取得する GetPropertyValue メソッドを呼び出す、<xref:System.Web.Profile.ProfileProvider>生成されたアクセサーが指定された型としてキャストし、プロパティの値として返します</xref:System.Web.Profile.ProfileProvider>。       GetPropertyValue メソッドを使用すると、名前によって、アプリケーションのユーザー プロファイルのプロパティの値を取得します。 戻り値は型指定されていないため、取得されたときに特定のオブジェクト型としてキャストする必要があります。 厳密に型指定のアクセス プロファイル プロパティの値をプロパティにアクセスできます、名前で各ページで使用できるプロファイル プロパティのメンバーとしてなど、`Profile.CustomerAddress`です。"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_10_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_10_1.aspx)]"
  syntax:
    content: public object GetPropertyValue (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "プロファイル プロパティの名前。"
    return:
      type: System.Object
      description: "として型指定された、指定されたプロファイル プロパティの値<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileBase.GetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "匿名プロファイルのプロパティ値を設定しようとしましたが、プロパティの<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "現在のプロファイルに対して定義されたプロパティはありません。       または、現在のプロファイルで指定されたプロファイルのプロパティ名が存在しません。       または、指定されたプロファイル プロパティのプロバイダーでは、指定したプロパティは認識されませんでした。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  id: Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイル プロパティの値と現在のユーザーに関する情報を初期化します。"
  remarks: "このメソッドは、コードから使用するものではありません。 いずれかを使用して、<xref:System.Web.Profile.ProfileBase.Create%2A>オーバー ロードのユーザー プロファイルのインスタンスを作成します</xref:System.Web.Profile.ProfileBase.Create%2A>。"
  syntax:
    content: public void Initialize (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "プロファイルを初期化するために、ユーザーの名前。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーを示すためには認証です。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ユーザーが匿名であることを示します。"
  overload: System.Web.Profile.ProfileBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  id: IsAnonymous
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "匿名ユーザーがユーザー プロファイルにするかどうかを示す値を取得します。"
  remarks: "構成セクションを使用して、ユーザー プロファイルへの匿名アクセスが有効にし、`allowAnonymous`プロファイル プロパティを指定するために使用する構成要素の属性です。"
  syntax:
    content: public bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザー プロファイルの匿名ユーザー以外の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileBase.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsDirty
  id: IsDirty
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイルのプロパティのいずれかが変更されているかどうかを示す値を取得します。"
  remarks: "IsDirty プロパティは、中にプロファイル プロバイダーで使用することができます、<xref:System.Configuration.SettingsBase.Save%2A>メソッドかどうかについてのプロパティをプリミティブ型、文字列の構成または<xref:System.DateTime>オブジェクトが変更されました</xref:System.DateTime></xref:System.Configuration.SettingsBase.Save%2A>。 プロファイル プロバイダーによって変更されたプロパティを更新しています、<xref:System.Configuration.SettingsBase.Save%2A>メソッド</xref:System.Configuration.SettingsBase.Save%2A>。 <xref:System.Configuration.SettingsBase.Save%2A>メソッドは自動的に呼び出されますページの実行の最後にある場合、<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>プロパティは`true`で呼び出されるプロファイル プロバイダー、<xref:System.Configuration.SettingsBase.Save%2A>メソッドでは、カスタムのクラス型やコレクションなどの複合型を持つプロファイル プロパティが変更されたかどうかを判定できません明示的にします</xref:System.Configuration.SettingsBase.Save%2A></xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A></xref:System.Configuration.SettingsBase.Save%2A>。 使用することができます、<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>カスタム オブジェクトが変更されているかどうかを判断し、変更したオブジェクトの自動保存を続行またはオブジェクトが変更されていない場合は、自動保存を取り消すイベント</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>。 既定の動作、 <xref:System.Web.Profile.ProfileBase>IsDirty プロパティに設定するクラスは、`true`最初は、カスタム型または複合型のプロパティに時刻プロパティにアクセスします</xref:System.Web.Profile.ProfileBase>。"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>任意のプロファイルのプロパティが変更された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileBase.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "取得またはプロパティ名でインデックス付けされたプロファイル プロパティの値を設定します。"
  remarks: "このプロパティを使用して、名前によって、アプリケーションのユーザー プロファイルのプロパティの値を設定または取得することができます。 返される値は、入力`object`取得されたときに特定のオブジェクト型としてキャストする必要があります。 厳密に型指定のアクセス プロファイル プロパティの値をプロパティにアクセスできます、名前のメンバーとして、`Profile`プロパティの各ページで使用できる`Profile.CustomerAddress`です。"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the Item collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_3_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "プロファイル プロパティの名前。"
    return:
      type: System.Object
      description: "として型指定された、指定されたプロファイル プロパティの値<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Profile.ProfileBase.Item*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "匿名プロファイルのプロパティ値を設定しようとしましたが、プロパティの<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "現在のプロファイルに対して定義されたプロパティはありません。       または、現在のプロファイルで指定されたプロファイルのプロパティ名が存在しません。       または、指定されたプロファイル プロパティのプロバイダーでは、指定したプロパティは認識されませんでした。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "読み取り専用とマークされたプロパティの値を設定しようとしました。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "互換性のない型を使用してプロパティに値を代入しようとしました。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  id: LastActivityDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "最新の日付と、プロファイルの読み取りまたは変更された時刻を取得します。"
  remarks: "このプロパティの値は既定のプロファイル プロバイダーによってのみ変更します。 プロファイルのプロパティを既定のプロファイル プロバイダー以外のプロバイダーによって行われた変更は、LastActivityDate プロパティの値には影響しません。"
  syntax:
    content: public DateTime LastActivityDate { get; }
    return:
      type: System.DateTime
      description: "最新の日付と、プロファイルの読み取りまたは既定のプロバイダーによって変更された時刻。"
  overload: System.Web.Profile.ProfileBase.LastActivityDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  id: LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイルが変更された、最新の日時を取得します。"
  remarks: "このプロパティの値は既定のプロファイル プロバイダーによってのみ変更します。 プロファイルのプロパティを既定のプロファイル プロバイダー以外のプロバイダーによって行われた変更は、LastUpdatedDate プロパティの値には影響しません。"
  syntax:
    content: public DateTime LastUpdatedDate { get; }
    return:
      type: System.DateTime
      description: "最新の日付と、プロファイルは、既定のプロバイダーによって変更された時刻。"
  overload: System.Web.Profile.ProfileBase.LastUpdatedDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Properties
  id: Properties
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "コレクションを取得<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>プロファイル内の各プロパティのオブジェクト。"
  remarks: "このプロパティを使用すると、プロパティ名と型を含む、アプリケーション用に構成されたプロファイルのプロパティに関する情報を取得します。 参照することも、<xref:System.Web.Profile.ProfileProvider>の各プロパティ</xref:System.Web.Profile.ProfileProvider>。 A<xref:System.Web.Profile.ProfileProvider>プロパティ値と、データ ソースからの格納および取得を管理します</xref:System.Web.Profile.ProfileProvider>。"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static Properties collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_2_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_2_1.aspx)]"
  syntax:
    content: public static System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>の<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>アプリケーション用のプロファイル内の各プロパティのオブジェクト。"
  overload: System.Web.Profile.ProfileBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Web.config ファイルのセクションで指定されたプロパティの型を作成できませんでした。       - または -、 <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定に<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;></xref>要素の属性に設定されている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       - または -、 <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref>属性に、Web.config ファイルのセクションでは、プロパティを設定<xref href=&quot;System.Configuration.SettingsSerializeAs&quot;></xref>と<> *> したプロパティの<xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;></xref>返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。      - または - を使用して指定されたプロバイダーの名前、 <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref>でプロファイル プロパティの属性が見つかりませんでした、 <> </> *> コレクション。       - または -、 <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref>指定されたプロファイルのプロパティが見つかりませんでした。       - または - で指定された基本クラスのプロパティ名に一致する名前で、プロファイル プロパティが指定された、 <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref>セクションの属性です。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Save
  id: Save
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "変更のプロファイル プロパティの値では、プロファイル データ ソースを更新します。"
  remarks: "Save メソッドでは、データ ソースに変更されたプロファイル プロパティの値を書き込みます。 プロファイル プロバイダーは、更新プログラムを実行することによって、データ ソースのアクティビティの量を減らすことができる場合にのみ、<xref:System.Web.Profile.ProfileBase.IsDirty%2A>プロパティに設定されている`true`</xref:System.Web.Profile.ProfileBase.IsDirty%2A>。 これは、ような既定の<xref:System.Web.Profile.SqlProfileProvider>。</xref:System.Web.Profile.SqlProfileProvider> Save メソッドが、データ ソースにプロパティ値を保存後<xref:System.Web.Profile.ProfileBase.IsDirty%2A>に設定されている`false`</xref:System.Web.Profile.ProfileBase.IsDirty%2A>。       使用することができます、<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>カスタム型または複合型を持つプロファイル プロパティが変更されたかどうかを決定するカスタム ロジックを実装し、変更したオブジェクトの自動保存を続行またはのないオブジェクトが変更された場合は、自動保存をキャンセルするイベントです</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>。"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイル プロパティの値を設定します。"
  remarks: "ASP.NET を使用して、<xref:System.Web.Profile.ProfileBase>ユーザー プロファイルに使用されるクラスを作成するクラス</xref:System.Web.Profile.ProfileBase>。 ASP.NET が型の新しいクラスを作成して有効になっているユーザー プロファイルを持つアプリケーションが開始されると、 `ProfileCommon`、<xref:System.Web.Profile.ProfileBase>クラス</xref:System.Web.Profile.ProfileBase>を継承します。 厳密に型指定されたアクセサーを追加、`ProfileCommon`構成セクションで定義されている各プロパティのクラスです。 厳密に型指定されたアクセサー、`ProfileCommon`クラス プロパティに値を渡す SetPropertyValue メソッドを呼び出す、<xref:System.Web.Profile.ProfileProvider>データ ソースに保存するためです</xref:System.Web.Profile.ProfileProvider>。       SetPropertyValue メソッドを使用して、名前によって、アプリケーションのユーザー プロファイル内のプロパティ値を割り当てることができます。 値が型指定されたではなく、型チェックは、コンパイル時間ではなく、実行時に実行されます。 厳密に型指定のアクセス プロファイル プロパティの値をプロパティにアクセスできます、名前のメンバーとして、`Profile`などで、各ページで利用可能なプロパティ`Profile.CustomerAddress`です。"
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public void SetPropertyValue (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "設定するプロパティの名前。"
    - id: propertyValue
      type: System.Object
      description: "プロパティに代入する値。"
  overload: System.Web.Profile.ProfileBase.SetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "匿名プロファイルのプロパティ値を設定しようとしましたが、プロパティの<xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;></xref>属性は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "現在のプロファイルに対して定義されたプロパティはありません。       または、現在のプロファイルで指定されたプロファイルのプロパティ名が存在しません。       または、指定されたプロファイル プロパティのプロバイダーでは、指定したプロパティは認識されませんでした。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "読み取り専用とマークされたプロパティの値を設定しようとしました。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "互換性のない型を使用してプロパティに値を代入しようとしました。"
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.UserName
  id: UserName
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "プロファイルのユーザー名を取得します。"
  remarks: "プロファイルに関連付けられている認証されたユーザーの名前または匿名ユーザーの id の場合は、プロファイルに割り当てられているユーザー名を返します、<xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>プロパティは`true`</xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>。       構成セクションを使用して、ユーザー プロファイルへの匿名アクセスが有効にし、`allowAnonymous`プロファイル プロパティを指定するために使用する構成要素の属性です。"
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "プロファイルまたはプロファイルに割り当てられている匿名ユーザー識別子のユーザー名。"
  overload: System.Web.Profile.ProfileBase.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Web.Profile.ProfileBase.#ctor
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
- uid: System.Web.Profile.ProfileGroupBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase
  fullName: System.Web.Profile.ProfileGroupBase
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Web.Profile.ProfileBase.Save
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
- uid: System.Web.Profile.ProfileBase.UserName
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
- uid: System.Web.Profile.ProfileBase.#ctor*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase.ProfileBase
- uid: System.Web.Profile.ProfileBase.Create*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create
  nameWithType: ProfileBase.Create
- uid: System.Web.Profile.ProfileBase.GetProfileGroup*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup
  nameWithType: ProfileBase.GetProfileGroup
- uid: System.Web.Profile.ProfileBase.GetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProfileBase.GetPropertyValue
- uid: System.Web.Profile.ProfileBase.Initialize*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize
  nameWithType: ProfileBase.Initialize
- uid: System.Web.Profile.ProfileBase.IsAnonymous*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item
  nameWithType: ProfileBase.Item
- uid: System.Web.Profile.ProfileBase.LastActivityDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
- uid: System.Web.Profile.ProfileBase.Save*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save
  nameWithType: ProfileBase.Save
- uid: System.Web.Profile.ProfileBase.SetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue
  nameWithType: ProfileBase.SetPropertyValue
- uid: System.Web.Profile.ProfileBase.UserName*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
