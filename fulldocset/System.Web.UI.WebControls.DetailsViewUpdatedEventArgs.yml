### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  id: DetailsViewUpdatedEventArgs
  children:
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues
  - System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues
  langs:
  - csharp
  name: DetailsViewUpdatedEventArgs
  nameWithType: DetailsViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdated&quot;> </xref>イベント。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>制御を発生させます、<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>更新ボタンをクリックしたときにイベント (ボタンをその`CommandName`プロパティが「更新」に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.DetailsView>コントロールは、レコードを更新します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.DetailsView.ItemUpdated></xref:System.Web.UI.WebControls.DetailsView>。 これにより、このイベントが発生するたびに、更新操作の結果のチェックなどのカスタムのルーチンを実行するイベント ハンドラーを提供できます。       DetailsViewUpdatedEventArgs オブジェクトとが発生する例外の影響を受けたレコードの数を決定することができます、イベント ハンドラーに渡されます。 更新操作によって影響を受けたレコードの数を確認するには<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>。 使用して、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>任意の例外が発生したかどうかを決定するプロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>。 かどうか、例外が処理されたイベントのハンドラーを設定して指定することも、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>。 更新されたレコードのキー フィールドの値にアクセスする必要がある場合、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A>。 元と更新された非キー フィールドの値を使用してアクセスできる、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A>と<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A></xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A>。       既定では、<xref:System.Web.UI.WebControls.DetailsView>によって指定されたモードに制御が戻る、<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>更新操作の後のプロパティ</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A></xref:System.Web.UI.WebControls.DetailsView>。 保持する、<xref:System.Web.UI.WebControls.DetailsView>編集モードでコントロールを設定、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>プロパティを`true`</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A></xref:System.Web.UI.WebControls.DetailsView>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       DetailsViewUpdatedEventArgs クラスのインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A>コンス トラクター。</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> 。"
  example:
  - "The following code example demonstrates how to use the DetailsViewUpdatedEventArgs object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event to determine whether an exception occurred during an update operation.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_393_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_393_1.aspx)]"
  syntax:
    content: 'public class DetailsViewUpdatedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: DetailsViewUpdatedEventArgs(Int32,Exception)
  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>クラス</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>の新しいインスタンスを初期化するためにこのコンス トラクターを使用します。       次の表は、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>クラス</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|値、`affectedRows`パラメーターです |。  |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|含まれる<xref:System.Exception?displayProperty=fullName>オブジェクト、`e`パラメーターです |。  |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|初期化された`false`|。  |<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|初期化された`false`|。     > [!NOTE] > イベントを発生させるときにこのコンス トラクターが、主にコントロールの開発者によって使用されます</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A></xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A></xref:System.Exception?displayProperty=fullName></xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A></xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>。"
  syntax:
    content: public DetailsViewUpdatedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "更新操作によって影響を受ける行の数。"
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>更新操作が実行されたときに発生する例外を表す</xref:System.Exception>。 例外が発生しなかった場合を使用して<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このパラメーターにします。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新操作によって影響を受ける行の数を取得します。"
  remarks: "AffectedRows プロパティを使用して、更新操作によって影響を受ける行の数を決定します。 この値は、適切な数の行が更新されたことを確認するよく使用されます。"
  example:
  - "The following code example demonstrates how to use the AffectedRows property to determine the number of rows affected by an update operation.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1055_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1055_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "更新操作によって影響を受ける行の数。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: DetailsViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "例外を取得します (存在する場合) が更新操作中に発生しました。"
  remarks: "例外プロパティ (存在する場合)、例外を使用して、更新操作中に発生しました。 このプロパティを返しますのかどうかは例外が発生しなかった、`null`です。      > [!NOTE] > 場合に例外が発生して、イベント ハンドラーで例外を処理するか、必ず設定する、<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>プロパティを`true`以外の場合、渡された例外次のメソッドに呼び出し履歴に処理するためです</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>。"
  example:
  - "The following code example demonstrates how to use the Exception property to determine whether an exception occurred during an update operation.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_573_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_573_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>更新操作中に発生した例外を表す</xref:System.Exception>。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または更新操作中に発生した例外が、イベント ハンドラーで処理されたかどうかを示す値を設定します。"
  remarks: "更新操作中に例外が発生すると、例外が、イベント ハンドラーで処理されたかどうかを示すために ExceptionHandled プロパティを使用します。 このプロパティに設定するときに`true`例外が処理され、呼び出しスタックの上位に渡されないと見なされます。 このプロパティ設定されている場合`false`、渡された例外次のメソッドに呼び出し履歴に処理します。 発生した例外を確認するには<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>プロパティ</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>。"
  example:
  - "The following code example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_436_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_436_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>例外が処理された場合、イベント ハンドラーです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode
  id: KeepInEditMode
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: KeepInEditMode
  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>更新操作の後コントロールが編集モードのままにします。"
  remarks: "既定では、<xref:System.Web.UI.WebControls.DetailsView>によって指定されたモードに制御が戻る、<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>更新操作の後のプロパティ</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A></xref:System.Web.UI.WebControls.DetailsView>。 KeepInEditMode プロパティを使用して、指定するかどうか、<xref:System.Web.UI.WebControls.DetailsView>編集モードのままにするコントロール</xref:System.Web.UI.WebControls.DetailsView>。 保持する、<xref:System.Web.UI.WebControls.DetailsView>編集モードでコントロールをこのプロパティを設定`true`</xref:System.Web.UI.WebControls.DetailsView>。      > [!NOTE] > 特定の場合に、既定のモードを無効にする場合、このプロパティを使用する必要があります。 場合、<xref:System.Web.UI.WebControls.DetailsView>コントロールが編集モードのままに既定では、設定する必要があります、<xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>プロパティ代わりにします</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A></xref:System.Web.UI.WebControls.DetailsView>。"
  example:
  - "The following code example demonstrates how to use the KeepInEditMode property to keep a <xref:System.Web.UI.WebControls.DetailsView> control in edit mode after an update operation.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_381_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_381_1.aspx)]"
  syntax:
    content: public bool KeepInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>更新操作の後に編集モードのままにするそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: DetailsViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新されたレコードのキー フィールドの名前/値ペアを格納するディクショナリを取得します。"
  remarks: "更新されたレコードのキー フィールドの値にアクセスするのにには、キー プロパティを使用します。 たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。       キー プロパティを実装するオブジェクトを返します、<xref:System.Collections.Specialized.IOrderedDictionary>インターフェイス</xref:System.Collections.Specialized.IOrderedDictionary>。 オブジェクトに含まれる<xref:System.Collections.DictionaryEntry>、更新されたレコードのフィールドを表すオブジェクト</xref:System.Collections.DictionaryEntry>。      > [!NOTE] > 簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.IOrderedDictionary>値を直接フィールドにアクセスするオブジェクト</xref:System.Collections.Specialized.IOrderedDictionary>。"
  example:
  - "The following code example demonstrates how to use the Keys property to access the values of the key field for an updated record.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1117_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1117_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>を含む更新されたレコードのキー フィールドの名前/値ペアのディクショナリ。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues
  id: NewValues
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: NewValues
  nameWithType: DetailsViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新されたレコードの新しいフィールドの名前/値ペアを格納するディクショナリを取得します。"
  remarks: "更新されたレコードの新しいフィールド値にアクセスするのにには、オートを使用します。 たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。       オートを実装するオブジェクトを返します、<xref:System.Collections.Specialized.IOrderedDictionary>インターフェイス</xref:System.Collections.Specialized.IOrderedDictionary>。 オブジェクトに含まれる<xref:System.Collections.DictionaryEntry>、更新されたレコードのフィールドを表すオブジェクト</xref:System.Collections.DictionaryEntry>。      > [!NOTE] > 簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.IOrderedDictionary>値を直接フィールドにアクセスするオブジェクト</xref:System.Collections.Specialized.IOrderedDictionary>。"
  example:
  - "The following code example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the updated record.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_674_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_674_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary NewValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>を含む更新されたレコードの新しいフィールドの名前/値ペアのディクショナリ。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues
  id: OldValues
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  langs:
  - csharp
  name: OldValues
  nameWithType: DetailsViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新されたレコードの元のフィールドの名前/値ペアを格納するディクショナリを取得します。"
  remarks: "更新されたレコードの元のフィールド値にアクセスするのにには、OldValues プロパティを使用します。 たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。       OldValues プロパティを実装するオブジェクトを返します、<xref:System.Collections.Specialized.IOrderedDictionary>インターフェイス</xref:System.Collections.Specialized.IOrderedDictionary>。 オブジェクトに含まれる<xref:System.Collections.DictionaryEntry>、更新されたレコードのフィールドを表すオブジェクト</xref:System.Collections.DictionaryEntry>。      > [!NOTE] > 簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.IOrderedDictionary>値を直接フィールドにアクセスするオブジェクト</xref:System.Collections.Specialized.IOrderedDictionary>。"
  example:
  - "The following code example demonstrates how to use the OldValues property to access the original values of the non-key fields for the updated record.  \n  \n [!code-cs[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1300_1.aspx)]\n [!code-vb[DetailsViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1300_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OldValues { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>を含む更新されたレコードの元のフィールドの名前/値ペアのディクショナリ。"
  overload: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: DetailsViewUpdatedEventArgs(Int32,Exception)
  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: DetailsViewUpdatedEventArgs.Exception
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: DetailsViewUpdatedEventArgs.Keys
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: DetailsViewUpdatedEventArgs.NewValues
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: DetailsViewUpdatedEventArgs.OldValues
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: DetailsViewUpdatedEventArgs
  nameWithType: DetailsViewUpdatedEventArgs.DetailsViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: DetailsViewUpdatedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: Exception
  nameWithType: DetailsViewUpdatedEventArgs.Exception
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: DetailsViewUpdatedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: KeepInEditMode
  nameWithType: DetailsViewUpdatedEventArgs.KeepInEditMode
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: Keys
  nameWithType: DetailsViewUpdatedEventArgs.Keys
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: NewValues
  nameWithType: DetailsViewUpdatedEventArgs.NewValues
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues*
  parent: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  isExternal: false
  name: OldValues
  nameWithType: DetailsViewUpdatedEventArgs.OldValues
