### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.StringConverter
  id: StringConverter
  children:
  - System.ComponentModel.StringConverter.#ctor
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  langs:
  - csharp
  name: StringConverter
  nameWithType: StringConverter
  fullName: System.ComponentModel.StringConverter
  type: Class
  summary: "他の表現からの string オブジェクトの変換を行う型コンバーターを提供します。"
  remarks: "このコンバーターは、文字列にのみ変換できます。 これは、その他のオブジェクトを文字列に変換するコンバーターのパススルーとして機能します。       型コンバーターの詳細については、次を参照してください、<xref:System.ComponentModel.TypeConverter>基底クラスと[方法: 型コンバーターの実装](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter> 。      > [!NOTE] > 決して StringConverter のインスタンスを作成する必要があります。 代わりに、 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>メソッド</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 詳細については、<xref:System.ComponentModel.TypeConverter>基底クラス</xref:System.ComponentModel.TypeConverter>の例を参照してください。"
  syntax:
    content: 'public class StringConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.StringConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.StringConverter
  langs:
  - csharp
  name: StringConverter()
  nameWithType: StringConverter.StringConverter()
  fullName: System.ComponentModel.StringConverter.StringConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.StringConverter&quot;> </xref>クラスです。"
  syntax:
    content: public StringConverter ();
    parameters: []
  overload: System.ComponentModel.StringConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.StringConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: StringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.StringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このコンバーターが、指定した型のオブジェクトを指定したコンテキストを使用して文字列に変換できるかどうかを示す値を取得します。"
  remarks: "`context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、 `null`、ので、常に確認します。 また、コンテキスト オブジェクトのプロパティが取得できる`null`です。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>から変換する型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このコンバーターが変換を実行できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.StringConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.StringConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: StringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.StringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した値オブジェクトに変換する<xref:System.String>オブジェクト</xref:System.String>。"
  remarks: "`context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、`null`ので、常にその値をチェックする必要があります。 さらに、コンテキスト オブジェクトのプロパティを返す`null`です。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>を使用する</xref:System.Globalization.CultureInfo>。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    return:
      type: System.Object
      description: "<xref:System.Object>変換後の値を表す</xref:System.Object>。"
  overload: System.ComponentModel.StringConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "変換を実行できませんでした。"
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.StringConverter.#ctor
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: StringConverter()
  nameWithType: StringConverter.StringConverter()
  fullName: System.ComponentModel.StringConverter.StringConverter()
- uid: System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: StringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.StringConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: StringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.StringConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.StringConverter.#ctor*
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: StringConverter
  nameWithType: StringConverter.StringConverter
- uid: System.ComponentModel.StringConverter.CanConvertFrom*
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: StringConverter.CanConvertFrom
- uid: System.ComponentModel.StringConverter.ConvertFrom*
  parent: System.ComponentModel.StringConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: StringConverter.ConvertFrom
