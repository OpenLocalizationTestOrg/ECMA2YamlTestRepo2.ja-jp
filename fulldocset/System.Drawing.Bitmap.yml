### YamlMime:ManagedReference
items:
- uid: System.Drawing.Bitmap
  id: Bitmap
  children:
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  - System.Drawing.Bitmap.#ctor(System.IO.Stream)
  - System.Drawing.Bitmap.#ctor(System.String)
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  - System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  - System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  - System.Drawing.Bitmap.#ctor(System.Type,System.String)
  - System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  - System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.FromHicon(System.IntPtr)
  - System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  - System.Drawing.Bitmap.GetHbitmap
  - System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  - System.Drawing.Bitmap.GetHicon
  - System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  - System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  - System.Drawing.Bitmap.MakeTransparent
  - System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  - System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  - System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  - System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  langs:
  - csharp
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
  type: Class
  summary: "カプセル化、[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]グラフィック イメージとその属性のピクセルのデータで構成されるビットマップ。 ビットマップは、イメージのピクセル データによって定義された操作に使用されるオブジェクトです。"
  remarks: "ビットマップは、グラフィック イメージとその属性のピクセルのデータで構成されます。 ビットマップ ファイルに保存するさまざまな標準形式があります。 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]次のファイル形式をサポートしています: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/add/includes/ajax-current-ext-md.md)です。       いずれかを使用して、ファイル、ストリーム、およびその他のソースからイメージを作成することができます、<xref:System.Drawing.Bitmap.%23ctor%2A>コンス トラクターまたは、ストリームやファイル システムに保存して、<xref:System.Drawing.Image.Save%2A>メソッド</xref:System.Drawing.Image.Save%2A></xref:System.Drawing.Bitmap.%23ctor%2A>。 イメージが描画される画面をまたはメモリを使用して、<xref:System.Drawing.Graphics.DrawImage%2A>のメソッド、<xref:System.Drawing.Graphics>オブジェクト</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.DrawImage%2A>。 イメージ ファイルの使用に関するトピックの一覧は、次を参照してください。[イメージ、ビットマップ、アイコン、およびメタファイルの操作](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > アプリケーション ドメイン間で、ビットマップ クラスにアクセスできなくなっています。 たとえば、動的なを作成する<xref:System.AppDomain>とそのドメインをその後、メインのアプリケーション ドメインにこれらのオブジェクトがバックアップ パスでいくつかのブラシ、ペン、およびビットマップを作成、ブラシ、ペンを正常に使用することができます</xref:System.AppDomain>。 ただしを呼び出す場合は、 <xref:System.Drawing.Graphics.DrawImage%2A>、マーシャ リングされたビットマップを描画するメソッドは次の例外を受信します</xref:System.Drawing.Graphics.DrawImage%2A>。   >> リモート処理では、&quot;System.Drawing.Image&quot;の型にフィールド「ネイティブ イメージ」を見つけることができません。"
  example:
  - "The following code example demonstrates how to construct a new Bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/t-system.drawing.bitmap_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/t-system.drawing.bitmap_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/t-system.drawing.bitmap_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Bitmap : System.Drawing.Image
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Image
  implements: []
  inheritedMembers:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  id: '#ctor(System.Drawing.Image)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image)
  nameWithType: Bitmap.Bitmap(Image)
  fullName: System.Drawing.Bitmap.Bitmap(Image)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>クラス指定した既存のイメージからです。"
  syntax:
    content: public Bitmap (System.Drawing.Image original);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>新しい作成元の<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Stream)
  nameWithType: Bitmap.Bitmap(Stream)
  fullName: System.Drawing.Bitmap.Bitmap(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定したデータ ストリームからクラス。"
  remarks: "必要があります、ストリームを開いておく<xref:System.Drawing.Bitmap>。</xref:System.Drawing.Bitmap>の有効期間       制限により、[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]デコーダー、 <xref:System.ArgumentException?displayProperty=fullName>65,535 ピクセルよりも大きい値の 1 つのディメンションを持つ .png 画像ファイルからビットマップを作成している場合にスローされます</xref:System.ArgumentException?displayProperty=fullName>。"
  example:
  - "The following code example demonstrates how to load a bitmap from a stream.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`. Paste the code into the form and call the `InitializeStreamBitmap` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cs[System.Drawing.BitmapMembers#2](~/add/codesnippet/csharp/m-system.drawing.bitmap._2_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#2](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._2_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#2](~/add/codesnippet/cpp/m-system.drawing.bitmap._2_1.cpp)]"
  syntax:
    content: public Bitmap (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "イメージの読み込みに使用するデータ ストリーム。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>画像データが含まれていないか、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または - <code>stream</code> 65,535 ピクセルよりも大きい値の 1 つのディメンションの PNG イメージ ファイルが含まれています。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(String)
  nameWithType: Bitmap.Bitmap(String)
  fullName: System.Drawing.Bitmap.Bitmap(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定したファイルからのクラスです。"
  remarks: 'アプリケーション パスまたは絶対パスに対する相対パスとファイル名を指定できます。 このコンス トラクターを使用して開くには、次のファイル形式で画像: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/add/includes/ajax-current-ext-md.md)です。 ファイルがまでロックされたまま、<xref:System.Drawing.Bitmap>が破棄されています</xref:System.Drawing.Bitmap>。'
  syntax:
    content: public Bitmap (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "ビットマップ ファイルの名前とパス。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定したファイルが見つかりませんでした。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  id: '#ctor(System.Drawing.Image,System.Drawing.Size)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image,Size)
  nameWithType: Bitmap.Bitmap(Image,Size)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>クラスから、指定した既存のイメージを指定されたサイズに拡大縮小します。"
  syntax:
    content: public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>新しい作成元の<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: newSize
      type: System.Drawing.Size
      description: "<xref href=&quot;System.Drawing.Size&quot;> </xref>構造体の新しいサイズを表す<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32)
  nameWithType: Bitmap.Bitmap(Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定されたサイズのクラスです。"
  remarks: "このコンス トラクターは、 <xref:System.Drawing.Bitmap> <xref:System.Drawing.Imaging.PixelFormat> <xref:System.Drawing.Imaging.PixelFormat>。</xref:System.Drawing.Imaging.PixelFormat>の列挙値</xref:System.Drawing.Imaging.PixelFormat>の</xref:System.Drawing.Bitmap>作成します。"
  syntax:
    content: public Bitmap (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "幅 (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さ (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Stream,Boolean)
  nameWithType: Bitmap.Bitmap(Stream,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(Stream,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定したデータ ストリームからクラス。"
  remarks: "必要があります、ストリームを開いておく<xref:System.Drawing.Bitmap>。</xref:System.Drawing.Bitmap>の有効期間       制限により、[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]デコーダー、 <xref:System.ArgumentException?displayProperty=fullName>65,535 ピクセルよりも大きい値の 1 つのディメンションを持つ .png 画像ファイルからビットマップを作成している場合にスローされます</xref:System.ArgumentException?displayProperty=fullName>。"
  syntax:
    content: public Bitmap (System.IO.Stream stream, bool useIcm);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "イメージの読み込みに使用するデータ ストリーム。"
    - id: useIcm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この色補正を使用する<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>画像データが含まれていないか、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または - <code>stream</code> 65,535 ピクセルよりも大きい値の 1 つのディメンションの PNG イメージ ファイルが含まれています。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(String,Boolean)
  nameWithType: Bitmap.Bitmap(String,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(String,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定したファイルからのクラスです。"
  remarks: 'このコンス トラクターを使用して開くには、次のファイル形式で画像: BMP、GIF、EXIF、JPG、PNG、TIFF です。 サポートされている形式の詳細については、次を参照してください。[型のビットマップ](~/add/includes/ajax-current-ext-md.md)です。 ファイルがまでロックされたまま、<xref:System.Drawing.Bitmap>が破棄されています</xref:System.Drawing.Bitmap>。'
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file. The example uses the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/m-system.drawing.bitmap._10_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/m-system.drawing.bitmap._10_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._10_1.vb)]"
  syntax:
    content: public Bitmap (string filename, bool useIcm);
    parameters:
    - id: filename
      type: System.String
      description: "ビットマップ ファイルの名前。"
    - id: useIcm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この色補正を使用する<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Type,String)
  nameWithType: Bitmap.Bitmap(Type,String)
  fullName: System.Drawing.Bitmap.Bitmap(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定されたリソースからクラスです。"
  remarks: "このコンス トラクターは、リソースの文字列名に指定された型の名前空間を結合し、アセンブリ マニフェスト内の一致を検索します。 たとえばに渡すことができます、<xref:System.Windows.Forms.Button>型および`Button.bmp`をこのコンス トラクターとそれが表示という名前のリソースの`System.Windows.Forms.Button.bmp`</xref:System.Windows.Forms.Button>。"
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the <xref:System.Drawing.Image.Save%2A> method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.bitmap._1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.bitmap._1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._1_1.vb)]"
  syntax:
    content: public Bitmap (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "リソースの抽出に使用されるクラス。"
    - id: resource
      type: System.String
      description: "リソースの名前。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Image,System.Int32,System.Int32)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Image,Int32,Int32)
  nameWithType: Bitmap.Bitmap(Image,Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>クラスから、指定した既存のイメージを指定されたサイズに拡大縮小します。"
  syntax:
    content: public Bitmap (System.Drawing.Image original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref>新しい作成元の<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: width
      type: System.Int32
      description: "幅 (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さ (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  id: '#ctor(System.Int32,System.Int32,System.Drawing.Graphics)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,Graphics)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Graphics)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Graphics)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>クラス、指定されたサイズと解像度の指定した<xref href=&quot;System.Drawing.Graphics&quot;></xref>オブジェクト。"
  remarks: "新しい<xref:System.Drawing.Bitmap>からの水平方向および垂直方向の解像度は、このメソッドが作成される、<xref:System.Drawing.Graphics.DpiX%2A>と<xref:System.Drawing.Graphics.DpiY%2A>プロパティの`g`、それぞれ</xref:System.Drawing.Graphics.DpiY%2A></xref:System.Drawing.Graphics.DpiX%2A></xref:System.Drawing.Bitmap>。"
  syntax:
    content: public Bitmap (int width, int height, System.Drawing.Graphics g);
    parameters:
    - id: width
      type: System.Int32
      description: "幅 (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さ (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref>オブジェクトを新しい解像度を指定する<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>g</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  id: '#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,PixelFormat)
  nameWithType: Bitmap.Bitmap(Int32,Int32,PixelFormat)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,PixelFormat)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>指定したサイズと形式を持つクラス。"
  syntax:
    content: public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: width
      type: System.Int32
      description: "幅 (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さ (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "新しいのピクセル形式<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。 これで始まる値を指定する必要があります`Format`です。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>により、<xref:System.ArgumentException>が<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>は表示されません</xref:System.ArgumentException>。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)'
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>ピクセル データの指定したサイズ、およびピクセル形式を持つクラス。"
  remarks: "指定されたメモリのブロックを解放したり、呼び出し元が、`scan0`パラメーター。 ただし、メモリ解放しないで、関連するまで<xref:System.Drawing.Bitmap>を解放します</xref:System.Drawing.Bitmap>。"
  example:
  - "The following code example shows how to use the Bitmap constructor. This example is designed to be used with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> parameter, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event.  \n  \n [!code-cs[System.Drawing.MiscExamples#Constructor](~/add/codesnippet/csharp/880fbfe7-f069-4538-b980-_1.cs)]\n [!code-vb[System.Drawing.MiscExamples#Constructor](~/add/codesnippet/visualbasic/880fbfe7-f069-4538-b980-_1.vb)]"
  syntax:
    content: public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);
    parameters:
    - id: width
      type: System.Int32
      description: "幅 (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: height
      type: System.Int32
      description: "高さ (ピクセル単位)、新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: stride
      type: System.Int32
      description: "スキャンの&1; つの行の先頭と次の間のバイト オフセットを指定する整数。 これは、通常 (必ずしも)、ピクセル形式 (たとえば、16 ビット/ピクセルの 2) のバイト数を掛けたビットマップの幅。 このパラメーターに渡される値は、4 の倍数である必要があります."
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "新しいのピクセル形式<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。 これで始まる値を指定する必要があります`Format`です。"
    - id: scan0
      type: System.IntPtr
      description: "ピクセル データを格納するバイト配列へのポインター。"
  overload: System.Drawing.Bitmap.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>により、<xref:System.ArgumentException>が<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>は表示されません</xref:System.ArgumentException>。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  id: Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Clone(Rectangle,PixelFormat)
  nameWithType: Bitmap.Clone(Rectangle,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(Rectangle,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このセクションのコピーを作成<xref href=&quot;System.Drawing.Bitmap&quot;></xref>によって定義された<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造と指定した<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>列挙します。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from a file.  \n  \n-   Clones a portion of that <xref:System.Drawing.Bitmap>.  \n  \n-   Draws the cloned portion to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/cpp/e09cefd6-c22e-4bb1-ad48-_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/csharp/e09cefd6-c22e-4bb1-ad48-_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/add/codesnippet/visualbasic/e09cefd6-c22e-4bb1-ad48-_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "この部分を定義<xref href=&quot;System.Drawing.Bitmap&quot;></xref>をコピーします。 座標はこの<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "新しいのピクセル形式<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。 これで始まる値を指定する必要があります`Format`です。"
    return:
      type: System.Drawing.Bitmap
      description: "新しい<xref href=&quot;System.Drawing.Bitmap&quot;></xref>このメソッドが作成されます。"
  overload: System.Drawing.Bitmap.Clone*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "<code>rect</code>ソース ビットマップ境界外です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "高さまたは幅<code> rect </code>は 0 です。       - または -、 <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>で始まらない名前を持つ値が指定されて*形式*です。 などを指定する<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>により、<xref:System.ArgumentException>が<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>は表示されません</xref:System.ArgumentException>。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  id: Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: Clone(RectangleF,PixelFormat)
  nameWithType: Bitmap.Clone(RectangleF,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(RectangleF,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このセクションのコピーを作成<xref href=&quot;System.Drawing.Bitmap&quot;></xref>と指定した定義<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>列挙します。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from a file.  \n  \n-   Clones a portion of that <xref:System.Drawing.Bitmap>.  \n  \n-   Draws the cloned portion to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/cpp/6beff7cd-a70c-4c8c-beec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/csharp/6beff7cd-a70c-4c8c-beec-_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/add/codesnippet/visualbasic/6beff7cd-a70c-4c8c-beec-_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "この部分を定義<xref href=&quot;System.Drawing.Bitmap&quot;></xref>をコピーします。"
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "指定します、 <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 、変換先の種類の列挙<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>このメソッドが作成されます。"
  overload: System.Drawing.Bitmap.Clone*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "<code>rect</code>ソース ビットマップ境界外です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "高さまたは幅<code> rect </code>は 0 です。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.FromHicon(System.IntPtr)
  id: FromHicon(System.IntPtr)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: FromHicon(IntPtr)
  nameWithType: Bitmap.FromHicon(IntPtr)
  fullName: System.Drawing.Bitmap.FromHicon(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>アイコンへの Windows ハンドルからです。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Gets the handle to an existing icon image.  \n  \n-   Creates a <xref:System.Drawing.Bitmap> from the handle.  \n  \n-   Draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/cpp/m-system.drawing.bitmap._3_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/csharp/m-system.drawing.bitmap._3_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._3_1.vb)]"
  syntax:
    content: public static System.Drawing.Bitmap FromHicon (IntPtr hicon);
    parameters:
    - id: hicon
      type: System.IntPtr
      description: "アイコンへのハンドル。"
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>このメソッドが作成されます。"
  overload: System.Drawing.Bitmap.FromHicon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  id: FromResource(System.IntPtr,System.String)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: FromResource(IntPtr,String)
  nameWithType: Bitmap.FromResource(IntPtr,String)
  fullName: System.Drawing.Bitmap.FromResource(IntPtr,String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 、指定された Windows リソースからです。"
  remarks: "FromResource には、アンマネージ コードを呼び出すためのセキュリティ権限が必要です。 埋め込みリソースからビットマップを作成するためのマネージの代替<xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=fullName>。</xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=fullName>を参照してください。 FromResource は DLL 内のリソースの名前はビットマップでのみ機能します。"
  syntax:
    content: public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);
    parameters:
    - id: hinstance
      type: System.IntPtr
      description: "リソースを格納している実行可能ファイルのインスタンスへのハンドル。"
    - id: bitmapName
      type: System.String
      description: "リソースのビットマップの名前を表す文字列。"
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref>このメソッドが作成されます。"
  overload: System.Drawing.Bitmap.FromResource*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHbitmap
  id: GetHbitmap
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHbitmap()
  nameWithType: Bitmap.GetHbitmap()
  fullName: System.Drawing.Bitmap.GetHbitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]ビットマップ オブジェクトからこの<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "通話を担当する場合、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject`によって使用されるメモリを解放するメソッド、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]ビットマップ オブジェクト。 GDI ビットマップの詳細については、次を参照してください。[ビットマップ](http://go.microsoft.com/fwlink/?LinkId=205685)、Windows GDI マニュアルを参照します。"
  example:
  - "The following code example demonstrates how to use the GetHbitmap method.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/cpp/m-system.drawing.bitmap._6_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/csharp/m-system.drawing.bitmap._6_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._6_1.vb)]"
  syntax:
    content: public IntPtr GetHbitmap ();
    parameters: []
    return:
      type: System.IntPtr
      description: "ハンドル、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmap オブジェクトをこのメソッドを作成します。"
  overload: System.Drawing.Bitmap.GetHbitmap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ビットマップの幅または高さが<xref:System.Int16.MaxValue>。</xref:System.Int16.MaxValue>より大きい"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  id: GetHbitmap(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHbitmap(Color)
  nameWithType: Bitmap.GetHbitmap(Color)
  fullName: System.Drawing.Bitmap.GetHbitmap(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]ビットマップ オブジェクトからこの<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "通話を担当する場合、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject`によって使用されるメモリを解放するメソッド、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]ビットマップ オブジェクト。 GDI ビットマップの詳細については、次を参照してください。[ビットマップ](http://go.microsoft.com/fwlink/?LinkId=205685)、Windows GDI マニュアルを参照します。"
  example:
  - "The following code example demonstrates how to use the GetHbitmap.method.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/cpp/m-system.drawing.bitmap._7_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/csharp/m-system.drawing.bitmap._7_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._7_1.vb)]"
  syntax:
    content: public IntPtr GetHbitmap (System.Drawing.Color background);
    parameters:
    - id: background
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>を背景色を指定します。 このパラメーターには、ビットマップが完全に不透明な場合は無視されます。"
    return:
      type: System.IntPtr
      description: "ハンドル、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] bitmap オブジェクトをこのメソッドを作成します。"
  overload: System.Drawing.Bitmap.GetHbitmap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ビットマップの幅または高さが<xref:System.Int16.MaxValue>。</xref:System.Int16.MaxValue>より大きい"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetHicon
  id: GetHicon
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetHicon()
  nameWithType: Bitmap.GetHicon()
  fullName: System.Drawing.Bitmap.GetHicon()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "アイコンのハンドルを返します。"
  remarks: "最初に、ハンドルから作成されるアイコンは、元のビットマップと同じサイズになります。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.bitmap._5_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.bitmap._5_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._5_1.vb)]"
  syntax:
    content: public IntPtr GetHicon ();
    parameters: []
    return:
      type: System.IntPtr
      description: "同じイメージのアイコンへの Windows ハンドル、 <xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.GetHicon*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  id: GetPixel(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: GetPixel(Int32,Int32)
  nameWithType: Bitmap.GetPixel(Int32,Int32)
  fullName: System.Drawing.Bitmap.GetPixel(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで、指定されたピクセルの色を取得<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code gets the color of a pixel in a bitmap, and then fills a rectangle with that color.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/cpp/m-system.drawing.bitmap._0_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/csharp/m-system.drawing.bitmap._0_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._0_1.vb)]"
  syntax:
    content: public System.Drawing.Color GetPixel (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "取得するピクセルの x 座標。"
    - id: y
      type: System.Int32
      description: "取得するピクセルの y 座標。"
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>指定されたピクセルの色を表す構造です。"
  overload: System.Drawing.Bitmap.GetPixel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>x</code>小さい 0 の場合、またはより大きいか等しい<xref:System.Drawing.Image.Width*>です。       - または -<code>y</code>より小さい 0 の場合、またはより大きいか等しい<xref:System.Drawing.Image.Height*>です。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  id: LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: LockBits(Rectangle,ImageLockMode,PixelFormat)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "ロック、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>システム メモリにします。"
  remarks: "使用して、<xref:System.Drawing.Bitmap.LockBits%2A>プログラムで変更できるようにすることは、システム メモリ内で既存のビットマップをロックします</xref:System.Drawing.Bitmap.LockBits%2A>。 イメージの色を変更することができます、<xref:System.Drawing.Bitmap.SetPixel%2A>メソッドが、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、大規模な変更のパフォーマンスが向上します</xref:System.Drawing.Bitmap.LockBits%2A></xref:System.Drawing.Bitmap.SetPixel%2A>。       <xref:System.Drawing.Imaging.BitmapData>の属性を指定、 <xref:System.Drawing.Bitmap>、サイズ、ピクセル形式、メモリ内のピクセルのデータの開始アドレスと各スキャン ライン (stride) の長さなどです</xref:System.Drawing.Bitmap></xref:System.Drawing.Imaging.BitmapData>。       このメソッドを呼び出したときにのメンバーを使用する必要があります、<xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>特定ビット/ピクセル (BPP) 値を含む列挙です</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>。 <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> <xref:System.Drawing.Imaging.PixelFormat> <xref:System.Drawing.Imaging.PixelFormat> <xref:System.ArgumentException?displayProperty=fullName>。</xref:System.ArgumentException?displayProperty=fullName>を</xref:System.Drawing.Imaging.PixelFormat>スロー</xref:System.Drawing.Imaging.PixelFormat>などの値</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>を使用します。 また、ビットマップの不適切なピクセル形式を渡すことがスローされます<xref:System.ArgumentException?displayProperty=fullName>。</xref:System.ArgumentException?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> properties; the LockBits and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is designed to be used with Windows Forms. This example is not designed to work correctly with all pixel formats, but to provide an example of how to use the LockBits method. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/89ae463a-b5b8-4e6f-b384-_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/89ae463a-b5b8-4e6f-b384-_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/89ae463a-b5b8-4e6f-b384-_1.cpp)]"
  syntax:
    content: public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>の部分を指定する構造体、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>をロックします。"
    - id: flags
      type: System.Drawing.Imaging.ImageLockMode
      description: "<xref href=&quot;System.Drawing.Imaging.ImageLockMode&quot;> </xref>のアクセス レベル (読み取り/書き込み) を指定する列挙体、 <xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>このデータ形式を指定する列挙体<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    return:
      type: System.Drawing.Imaging.BitmapData
      description: "A <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref>このロック操作に関する情報を格納します。"
  overload: System.Drawing.Bitmap.LockBits*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>特定のピクセルごとのビット値ではありません。       - または - 無効な<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>はビットマップで渡されます。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  id: LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "ロック、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>をシステム メモリ"
  remarks: "使用して、<xref:System.Drawing.Bitmap.LockBits%2A>プログラムで変更できるようにすることは、システム メモリ内で既存のビットマップをロックします</xref:System.Drawing.Bitmap.LockBits%2A>。 イメージの色を変更することができます、<xref:System.Drawing.Bitmap.SetPixel%2A>メソッドが、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、大規模な変更のパフォーマンスが向上します</xref:System.Drawing.Bitmap.LockBits%2A></xref:System.Drawing.Bitmap.SetPixel%2A>。       このメソッドを呼び出したときにのメンバーを使用する必要があります、<xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>特定ビット/ピクセル (BPP) 値を含む列挙です</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>。 <xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName> <xref:System.Drawing.Imaging.PixelFormat> <xref:System.Drawing.Imaging.PixelFormat> <xref:System.ArgumentException?displayProperty=fullName>。</xref:System.ArgumentException?displayProperty=fullName>がスローされます、</xref:System.Drawing.Imaging.PixelFormat>や</xref:System.Drawing.Imaging.PixelFormat>などの値</xref:System.Drawing.Imaging.PixelFormat?displayProperty=fullName>を使用します。 また、ビットマップの不適切なピクセル形式を渡すことがスローされます<xref:System.ArgumentException?displayProperty=fullName>。</xref:System.ArgumentException?displayProperty=fullName>       このバージョンの<xref:System.Drawing.Bitmap.LockBits%2A>メソッドと共に使用するためのものが、 `flags` <xref:System.Drawing.Imaging.ImageLockMode?displayProperty=fullName></xref:System.Drawing.Imaging.ImageLockMode?displayProperty=fullName>値</xref:System.Drawing.Bitmap.LockBits%2A>。"
  syntax:
    content: public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "四角形の構造の部分を指定する、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>をロックします。"
    - id: flags
      type: System.Drawing.Imaging.ImageLockMode
      description: "1 つ、 <xref href=&quot;System.Drawing.Imaging.ImageLockMode&quot;> </xref>ためアクセス レベル (読み取り/書き込み) を指定する値、 <xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: format
      type: System.Drawing.Imaging.PixelFormat
      description: "1 つ、 <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref>のデータの形式を指定する値、 <xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: bitmapData
      type: System.Drawing.Imaging.BitmapData
      description: "A <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref>ロック操作に関する情報を格納します。"
    return:
      type: System.Drawing.Imaging.BitmapData
      description: "A <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref>ロック操作に関する情報を格納します。"
  overload: System.Drawing.Bitmap.LockBits*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>値は、特定のピクセルごとのビット値ではありません。       - または - 無効な<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;></xref>はビットマップで渡されます。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.MakeTransparent
  id: MakeTransparent
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: MakeTransparent()
  nameWithType: Bitmap.MakeTransparent()
  fullName: System.Drawing.Bitmap.MakeTransparent()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この既定の透明色を透明<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "システム パレットは、透明アルファ、またはの既定の色として&1; つの色を定義します。 このメソッドは、既定透明色<xref:System.Drawing.Bitmap>。</xref:System.Drawing.Bitmap> 透明色を指定しない場合、システムによって<xref:System.Drawing.Color.LightGray%2A>は、透明色</xref:System.Drawing.Color.LightGray%2A>。       呼び出すと<xref:System.Drawing.Bitmap.MakeTransparent%2A>、ビットマップに変換されます、<xref:System.Drawing.Imaging.PixelFormat>書式を設定するようにこの形式は、アルファ チャネルをサポートしています</xref:System.Drawing.Imaging.PixelFormat></xref:System.Drawing.Bitmap.MakeTransparent%2A>。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code makes the system default transparent color transparent for `myBitmap`, and then draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/cpp/m-system.drawing.bitmap._9_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/csharp/m-system.drawing.bitmap._9_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._9_1.vb)]"
  syntax:
    content: public void MakeTransparent ();
    parameters: []
  overload: System.Drawing.Bitmap.MakeTransparent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "イメージ形式、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>アイコン形式です。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  id: MakeTransparent(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: MakeTransparent(Color)
  nameWithType: Bitmap.MakeTransparent(Color)
  fullName: System.Drawing.Bitmap.MakeTransparent(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定された色の透明なこの<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "ビットマップに変換されます MakeTransparent を呼び出すときに、<xref:System.Drawing.Imaging.PixelFormat>書式を設定するようにこの形式は、アルファ チャネルをサポートしています</xref:System.Drawing.Imaging.PixelFormat>。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Gets the color of a pixel in a <xref:System.Drawing.Bitmap>.  \n  \n-   Makes that color transparent for the bitmap.  \n  \n-   Draws the <xref:System.Drawing.Bitmap> to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/cpp/m-system.drawing.bitmap._12_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/csharp/m-system.drawing.bitmap._12_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._12_1.vb)]"
  syntax:
    content: public void MakeTransparent (System.Drawing.Color transparentColor);
    parameters:
    - id: transparentColor
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;> </xref>を透明色を表す構造体。"
  overload: System.Drawing.Bitmap.MakeTransparent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "イメージ形式、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>アイコン形式です。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  id: SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: SetPixel(Int32,Int32,Color)
  nameWithType: Bitmap.SetPixel(Int32,Int32,Color)
  fullName: System.Drawing.Bitmap.SetPixel(Int32,Int32,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これで、指定されたピクセルの色を設定<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "SetPixel メソッドを使用すると、プログラムによってイメージの個々 のピクセルの色を設定できます。 プログラムでは使用しても、イメージを変更することができます、<xref:System.Drawing.Bitmap.LockBits%2A>メソッド</xref:System.Drawing.Bitmap.LockBits%2A>。 大規模な変更は、通常、<xref:System.Drawing.Bitmap.LockBits%2A>メソッドは、パフォーマンスが向上します</xref:System.Drawing.Bitmap.LockBits%2A>。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the color of each pixel in the bitmap to black.  \n  \n-   Draws the bitmap.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/cpp/m-system.drawing.bitmap._11_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/csharp/m-system.drawing.bitmap._11_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._11_1.vb)]"
  syntax:
    content: public void SetPixel (int x, int y, System.Drawing.Color color);
    parameters:
    - id: x
      type: System.Int32
      description: "設定するピクセルの x 座標。"
    - id: y
      type: System.Int32
      description: "設定するピクセルの y 座標。"
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>指定されたピクセルに代入する色を表す構造体。"
  overload: System.Drawing.Bitmap.SetPixel*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  id: SetResolution(System.Single,System.Single)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: SetResolution(Single,Single)
  nameWithType: Bitmap.SetResolution(Single,Single)
  fullName: System.Drawing.Bitmap.SetResolution(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この解像度を設定<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  remarks: "このメソッドを使用すると、新しく作成されたビットマップに目的の解像度を設定できます。 画像の解像度を変更しても、物理サイズは変わりません。"
  example:
  - "The following example code shows how to use the SetResolution method.  \n  \n [!code-vb[System.Drawing.Misc3#SetResolution](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._8_1.vb)]\n [!code-cs[System.Drawing.Misc3#SetResolution](~/add/codesnippet/csharp/m-system.drawing.bitmap._8_1.cs)]"
  syntax:
    content: public void SetResolution (float xDpi, float yDpi);
    parameters:
    - id: xDpi
      type: System.Single
      description: "ドット/インチで水平方向の解像度の<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
    - id: yDpi
      type: System.Single
      description: "垂直方向の解像度、ドット/インチの<xref href=&quot;System.Drawing.Bitmap&quot;></xref>です。"
  overload: System.Drawing.Bitmap.SetResolution*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  id: UnlockBits(System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  langs:
  - csharp
  name: UnlockBits(BitmapData)
  nameWithType: Bitmap.UnlockBits(BitmapData)
  fullName: System.Drawing.Bitmap.UnlockBits(BitmapData)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このロックを解除<xref href=&quot;System.Drawing.Bitmap&quot;></xref>システム メモリからです。"
  remarks: "<xref:System.Drawing.Imaging.BitmapData>の属性を指定、 <xref:System.Drawing.Bitmap>、サイズ、ピクセル形式、メモリ内のピクセルのデータの開始アドレスと各スキャン ライン (stride) の長さなどです</xref:System.Drawing.Bitmap></xref:System.Drawing.Imaging.BitmapData>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> properties; the <xref:System.Drawing.Bitmap.LockBits%2A> and UnlockBits methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is not designed to work correctly with all pixel formats, but to provide an example of how to use the <xref:System.Drawing.Bitmap.LockBits%2A> method. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/m-system.drawing.bitmap._4_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/m-system.drawing.bitmap._4_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/m-system.drawing.bitmap._4_1.cpp)]"
  syntax:
    content: public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);
    parameters:
    - id: bitmapdata
      type: System.Drawing.Imaging.BitmapData
      description: "A <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref>ロック操作に関する情報を指定します。"
  overload: System.Drawing.Bitmap.UnlockBits*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "操作に失敗しました。"
  platform:
  - net462
references:
- uid: System.Drawing.Image
  isExternal: false
  name: System.Drawing.Image
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image)
  nameWithType: Bitmap.Bitmap(Image)
  fullName: System.Drawing.Bitmap.Bitmap(Image)
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Stream)
  nameWithType: Bitmap.Bitmap(Stream)
  fullName: System.Drawing.Bitmap.Bitmap(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Bitmap.#ctor(System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(String)
  nameWithType: Bitmap.Bitmap(String)
  fullName: System.Drawing.Bitmap.Bitmap(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image,Size)
  nameWithType: Bitmap.Bitmap(Image,Size)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32)
  nameWithType: Bitmap.Bitmap(Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Stream,Boolean)
  nameWithType: Bitmap.Bitmap(Stream,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Bitmap.#ctor(System.String,System.Boolean)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(String,Boolean)
  nameWithType: Bitmap.Bitmap(String,Boolean)
  fullName: System.Drawing.Bitmap.Bitmap(String,Boolean)
- uid: System.Drawing.Bitmap.#ctor(System.Type,System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Type,String)
  nameWithType: Bitmap.Bitmap(Type,String)
  fullName: System.Drawing.Bitmap.Bitmap(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Image,Int32,Int32)
  nameWithType: Bitmap.Bitmap(Image,Int32,Int32)
  fullName: System.Drawing.Bitmap.Bitmap(Image,Int32,Int32)
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,Graphics)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Graphics)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Graphics)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,PixelFormat)
  nameWithType: Bitmap.Bitmap(Int32,Int32,PixelFormat)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  nameWithType: Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
  fullName: System.Drawing.Bitmap.Bitmap(Int32,Int32,Int32,PixelFormat,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone(Rectangle,PixelFormat)
  nameWithType: Bitmap.Clone(Rectangle,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(Rectangle,PixelFormat)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone(RectangleF,PixelFormat)
  nameWithType: Bitmap.Clone(RectangleF,PixelFormat)
  fullName: System.Drawing.Bitmap.Clone(RectangleF,PixelFormat)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Bitmap.FromHicon(System.IntPtr)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromHicon(IntPtr)
  nameWithType: Bitmap.FromHicon(IntPtr)
  fullName: System.Drawing.Bitmap.FromHicon(IntPtr)
- uid: System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromResource(IntPtr,String)
  nameWithType: Bitmap.FromResource(IntPtr,String)
  fullName: System.Drawing.Bitmap.FromResource(IntPtr,String)
- uid: System.Drawing.Bitmap.GetHbitmap
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap()
  nameWithType: Bitmap.GetHbitmap()
  fullName: System.Drawing.Bitmap.GetHbitmap()
- uid: System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap(Color)
  nameWithType: Bitmap.GetHbitmap(Color)
  fullName: System.Drawing.Bitmap.GetHbitmap(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Bitmap.GetHicon
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHicon()
  nameWithType: Bitmap.GetHicon()
  fullName: System.Drawing.Bitmap.GetHicon()
- uid: System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetPixel(Int32,Int32)
  nameWithType: Bitmap.GetPixel(Int32,Int32)
  fullName: System.Drawing.Bitmap.GetPixel(Int32,Int32)
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits(Rectangle,ImageLockMode,PixelFormat)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat)
- uid: System.Drawing.Imaging.BitmapData
  parent: System.Drawing.Imaging
  isExternal: false
  name: BitmapData
  nameWithType: BitmapData
  fullName: System.Drawing.Imaging.BitmapData
- uid: System.Drawing.Imaging.ImageLockMode
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageLockMode
  nameWithType: ImageLockMode
  fullName: System.Drawing.Imaging.ImageLockMode
- uid: System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  nameWithType: Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
  fullName: System.Drawing.Bitmap.LockBits(Rectangle,ImageLockMode,PixelFormat,BitmapData)
- uid: System.Drawing.Bitmap.MakeTransparent
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent()
  nameWithType: Bitmap.MakeTransparent()
  fullName: System.Drawing.Bitmap.MakeTransparent()
- uid: System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent(Color)
  nameWithType: Bitmap.MakeTransparent(Color)
  fullName: System.Drawing.Bitmap.MakeTransparent(Color)
- uid: System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetPixel(Int32,Int32,Color)
  nameWithType: Bitmap.SetPixel(Int32,Int32,Color)
  fullName: System.Drawing.Bitmap.SetPixel(Int32,Int32,Color)
- uid: System.Drawing.Bitmap.SetResolution(System.Single,System.Single)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetResolution(Single,Single)
  nameWithType: Bitmap.SetResolution(Single,Single)
  fullName: System.Drawing.Bitmap.SetResolution(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)
  parent: System.Drawing.Bitmap
  isExternal: false
  name: UnlockBits(BitmapData)
  nameWithType: Bitmap.UnlockBits(BitmapData)
  fullName: System.Drawing.Bitmap.UnlockBits(BitmapData)
- uid: System.Drawing.Bitmap.#ctor*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap.Bitmap
- uid: System.Drawing.Bitmap.Clone*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: Clone
  nameWithType: Bitmap.Clone
- uid: System.Drawing.Bitmap.FromHicon*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromHicon
  nameWithType: Bitmap.FromHicon
- uid: System.Drawing.Bitmap.FromResource*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: FromResource
  nameWithType: Bitmap.FromResource
- uid: System.Drawing.Bitmap.GetHbitmap*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHbitmap
  nameWithType: Bitmap.GetHbitmap
- uid: System.Drawing.Bitmap.GetHicon*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetHicon
  nameWithType: Bitmap.GetHicon
- uid: System.Drawing.Bitmap.GetPixel*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: GetPixel
  nameWithType: Bitmap.GetPixel
- uid: System.Drawing.Bitmap.LockBits*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: LockBits
  nameWithType: Bitmap.LockBits
- uid: System.Drawing.Bitmap.MakeTransparent*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: MakeTransparent
  nameWithType: Bitmap.MakeTransparent
- uid: System.Drawing.Bitmap.SetPixel*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetPixel
  nameWithType: Bitmap.SetPixel
- uid: System.Drawing.Bitmap.SetResolution*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: SetResolution
  nameWithType: Bitmap.SetResolution
- uid: System.Drawing.Bitmap.UnlockBits*
  parent: System.Drawing.Bitmap
  isExternal: false
  name: UnlockBits
  nameWithType: Bitmap.UnlockBits
