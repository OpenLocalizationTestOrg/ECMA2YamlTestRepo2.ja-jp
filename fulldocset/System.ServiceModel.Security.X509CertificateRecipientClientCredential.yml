### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  summary: "SSL 認証を使用して、サービスによって提示された証明書を検証するクライアントによって使用される設定を表します。 メッセージ セキュリティを使用してサービスへのメッセージの暗号化に使用するクライアントに明示的に構成されているサービスの証明書も含まれています。"
  remarks: "このクラスは、<xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A><xref:System.ServiceModel.Description.ClientCredentials>クラス</xref:System.ServiceModel.Description.ClientCredentials>のプロパティ</xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A>で使用します。"
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-vb[c_CreateSTS#18](~/add/codesnippet/visualbasic/t-system.servicemodel.se_15_1.vb)]\n [!code-cs[c_CreateSTS#18](~/add/codesnippet/csharp/t-system.servicemodel.se_15_1.cs)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "SSL 認証を使用して取得したサービスの証明書の検証に使用する設定を取得します。"
  remarks: "<xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>クラスは、SSL/TLS ネゴシエーションを使用して取得されるサービス証明書の認証にクライアント プロキシが使用する設定を表します</xref:System.ServiceModel.Security.X509ClientCertificateAuthentication>。"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#21](~/add/codesnippet/csharp/d04fd5a9-6333-4d5a-92f2-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "SSL 認証を使用して取得したサービスの証明書を検証するために使用する設定です。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得またはサービスに使用する既定の証明書を設定します。"
  remarks: "を証明書に基づくメッセージ セキュリティを使用するバインディングは、この証明書は、サービスへのメッセージの暗号化に使用され、サービスがクライアントへの応答の署名を使用すると予想されます。"
  example:
  - "This code shows how to access this property.  \n  \n [!code-cs[c_CreateSTS#24](~/add/codesnippet/csharp/3f3eeba7-32c2-4573-9477-_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "サービスを使用する既定の証明書。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "クライアントが通信しているサービスを表すために使用するスコープを持つ証明書を取得します。"
  remarks: "このプロパティは、通信サービスの URL に基づいて使用するサービス証明書を構成するクライアントを使用します。 これは、(、エンド サービスと中間セキュリティ トークン サービス) の複数のサービスへのクライアントの通信で発行されたトークンのシナリオで特に便利です。 を証明書に基づくメッセージ セキュリティを使用するバインディングは、この証明書は、サービスへのメッセージの暗号化に使用され、サービスがクライアントへの応答の署名を使用すると予想されます。       バインディング、サービスの証明書が必要で、サービスの URL に対して特定の証明書が存在しない場合、`ScopedCertificates`既定の証明書を使用します。"
  example:
  - "This code shows how to set this property.  \n  \n [!code-cs[c_CreateSTS#33](~/add/codesnippet/csharp/bcde5385-8f2b-4da9-a779-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "スコープを持つ証明書をクライアントが通信しているサービスを表すために使用します。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "サービスを使用する既定の証明書を指定します。 を証明書に基づくメッセージ セキュリティを使用するバインディングは、この証明書は、サービスへのメッセージの暗号化に使用され、サービスがクライアントへの応答の署名を使用すると予想されます。"
  remarks: "このメソッドは、一致する指定した場所にあるストアから証明書を取得、`subjectName`パラメーター。       値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル マシンに割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザー (既定値) で使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#23](~/add/codesnippet/csharp/1bf14924-d231-4bf6-a178-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "サブジェクト識別名。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスを使用してサービス証明書を取得する証明書ストアの場所です。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "サービスを使用する既定の証明書を指定します。 を証明書に基づくメッセージ セキュリティを使用するバインディングは、この証明書は、サービスへのメッセージの暗号化に使用され、サービスがクライアントへの応答の署名を使用すると予想されます。"
  remarks: "このメソッドは、一致する指定した場所にあるストアから証明書を取得、`findType`と`findValue`パラメーター。       値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル マシンに割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザー (既定値) で使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。       値を`findType`に含まれる、<xref:System.Security.Cryptography.X509Certificates.X509FindType>列挙体です</xref:System.Security.Cryptography.X509Certificates.X509FindType>。       最もよく使用される列挙体は<xref:System.Security.Cryptography.X509Certificates.X509FindType>、指定されたストアに証明書のサブジェクト名の大文字と小文字の検索にはどの</xref:System.Security.Cryptography.X509Certificates.X509FindType>。 これにより、不正確な検索があります。 証明書がありませんか、条件に一致する複数の証明書が見つからない場合は、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException>。"
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-cs[c_CreateSTS#22](~/add/codesnippet/csharp/7f0910fb-b496-4487-b49c-_1.cs)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスの証明書ストアの場所を使って、サービス証明書を取得します。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "実行する X.509 検索の種類。"
    - id: findValue
      type: System.Object
      description: "X.509 証明書ストアで検索する値。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "サブジェクト名、証明書ストアの場所、および証明書ストア名を使用して証明書を設定し、スコープを設定する URL に使用するコレクションに格納します。"
  remarks: "値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル マシンに割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザー (既定値) で使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。"
  example:
  - "This code shows how to call this method.  \n  \n [!code-cs[c_CreateSTS#25](~/add/codesnippet/csharp/7ddc79f9-f97b-42fb-ab5a-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: "完全修飾サブジェクト名。"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスを使用してサービス証明書を取得する証明書ストアの場所です。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
    - id: targetService
      type: System.Uri
      description: "スコープを設定する URL。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "証明書で証明書ストアの場所、証明書ストア名、X.509 検索し、検索する値の型を設定し、スコープを設定する URL に使用するコレクションに格納します。"
  remarks: "値を`storeLocation`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreLocation>列挙:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: ローカル マシンに割り当てられている証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation></xref:System.Security.Cryptography.X509Certificates.StoreLocation>。      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 現在のユーザー (既定値) で使用される証明書ストア</xref:System.Security.Cryptography.X509Certificates.StoreLocation>。       アプリケーションがシステム アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation> アプリケーションがユーザー アカウントで実行されている場合、証明書は通常<xref:System.Security.Cryptography.X509Certificates.StoreLocation>。</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       値を`storeName`に含まれる、<xref:System.Security.Cryptography.X509Certificates.StoreName>列挙体です</xref:System.Security.Cryptography.X509Certificates.StoreName>。       値を`findType`に含まれる、<xref:System.Security.Cryptography.X509Certificates.X509FindType>列挙体です</xref:System.Security.Cryptography.X509Certificates.X509FindType>。       最もよく使用される列挙体は<xref:System.Security.Cryptography.X509Certificates.X509FindType>、指定されたストアに証明書のサブジェクト名の大文字と小文字の検索にはどの</xref:System.Security.Cryptography.X509Certificates.X509FindType>。 これにより、不正確な検索があります。 証明書がありませんか、条件に一致する複数の証明書が見つからない場合は、<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException>。"
  example:
  - "This code shows how to call this method.  \n  \n [!code-vb[c_CreateSTS#20](~/add/codesnippet/visualbasic/75f932c5-822c-4f8b-9c16-_1.vb)]\n [!code-cs[c_CreateSTS#20](~/add/codesnippet/csharp/75f932c5-822c-4f8b-9c16-_1.cs)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "サービスを使用してサービス証明書を取得する証明書ストアの場所です。"
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "開くには、X.509 証明書の名前を格納します。"
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "実行する X.509 検索の種類。"
    - id: findValue
      type: System.Object
      description: "X.509 証明書ストアで検索する値。"
    - id: targetService
      type: System.Uri
      description: "スコープを設定する URL。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetService</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "資格情報は読み取り専用ときに設定しようとしています。"
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "取得または使用する SSL 証明書検証コントロールを設定します。"
  remarks: "このプロパティでは、WCF X509CertificateValidator を使用して、WCF クライアントでサーバー証明書を検証することができます。"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: "A <xref href=&quot;System.ServiceModel.Security.X509ServiceCertificateAuthentication&quot;> </xref>インスタンス。"
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(String,StoreLocation,StoreName,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
