### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute
  id: PublisherIdentityPermissionAttribute
  children:
  - System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile
  - System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile
  - System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate
  langs:
  - csharp
  name: PublisherIdentityPermissionAttribute
  nameWithType: PublisherIdentityPermissionAttribute
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute
  type: Class
  summary: "により、セキュリティ アクションを<xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;></xref>宣言セキュリティを使用してコードに適用します。 このクラスは継承できません。"
  remarks: "許可されている宣言のスコープによって異なります、<xref:System.Security.Permissions.SecurityAction>ために使用される</xref:System.Security.Permissions.SecurityAction>。       プロパティ<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A>、 <xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile%2A>、および<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A>は相互に排他的です</xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A></xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile%2A></xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A>。       セキュリティ属性によって宣言されたセキュリティ情報は、属性の対象のメタデータに格納され、実行時に、システムによってアクセスされます。 セキュリティ属性は、宣言型セキュリティにのみ使用されます。 命令型のセキュリティのアクセス許可の対応するクラスを使用します。      > [!IMPORTANT] > 以降で、 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]、id アクセス許可は使用されません。   >> で .NET Framework version 1.0 および 1.1 では、id アクセス許可を持つことはできません、<xref:System.Security.Permissions.PermissionState>アクセス許可の状態の値</xref:System.Security.Permissions.PermissionState>。 以降、.NET Framework version 2.0 では、id アクセス許可はアクセス許可の状態値を設定できます。 つまり、2.0 以降のバージョンでは、id アクセス許可を実装するためのアクセス許可と同じ動作、<xref:System.Security.Permissions.IUnrestrictedPermission>インターフェイス</xref:System.Security.Permissions.IUnrestrictedPermission>。      > [!NOTE] > 既定では、コード アクセス セキュリティをチェックしません<xref:System.Security.Policy.Publisher>証拠</xref:System.Security.Policy.Publisher>。 お使いのコンピューターにに基づいてカスタム コード グループが存在しない限り、<xref:System.Security.Policy.PublisherMembershipCondition>クラス、Authenticode 署名の検証をバイパスすることによりパフォーマンスが向上することができます</xref:System.Security.Policy.PublisherMembershipCondition>。 提供するランタイムを構成することによってこれを行う<xref:System.Security.Policy.Publisher>コード アクセス セキュリティのための証拠</xref:System.Security.Policy.Publisher>。 このオプションとこれを構成する方法についての詳細アプリケーションは、それを使用、要素を参照してください。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PublisherIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  langs:
  - csharp
  name: PublisherIdentityPermissionAttribute(SecurityAction)
  nameWithType: PublisherIdentityPermissionAttribute.PublisherIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.PublisherIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.PublisherIdentityPermissionAttribute&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>です。"
  syntax:
    content: public PublisherIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>値。"
  overload: System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile
  id: CertFile
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  langs:
  - csharp
  name: CertFile
  nameWithType: PublisherIdentityPermissionAttribute.CertFile
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得または Authenticode X.509v3 証明書を含む証明書ファイルを設定します。"
  remarks: "場合<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A>が設定されている、このプロパティは無視されます</xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A>。"
  syntax:
    content: public string CertFile { get; set; }
    return:
      type: System.String
      description: "X.509 証明書ファイルのファイル パス (通常は、extension.cer)。"
  overload: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: PublisherIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成しの新しいインスタンスを返します<xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;></xref>です。"
  remarks: "このメソッドは、アプリケーション コードからではなく、セキュリティ システムからのみ呼び出す必要があります。       コンパイル時に、属性は、セキュリティの宣言をメタデータのシリアル化された形式に変換されます。 メタデータの宣言セキュリティ データは、この属性に対応する権限をこのメソッドが返すから作成されます。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref>この属性に対応します。"
  overload: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile
  id: SignedFile
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  langs:
  - csharp
  name: SignedFile
  nameWithType: PublisherIdentityPermissionAttribute.SignedFile
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得または Authenticode X.509v3 証明書を抽出する元の署名済みファイルを設定します。"
  remarks: "いずれか<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A>または<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A>が設定されている、このプロパティは無視されます</xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A></xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate%2A>。"
  syntax:
    content: public string SignedFile { get; set; }
    return:
      type: System.String
      description: "ファイルのファイル パスは、Authenticode 署名で署名されます。"
  overload: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate
  id: X509Certificate
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  langs:
  - csharp
  name: X509Certificate
  nameWithType: PublisherIdentityPermissionAttribute.X509Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得または呼び出し元のコードの発行元を識別する Authenticode X.509v3 証明書を設定します。"
  remarks: "このプロパティを設定すると場合、<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A>と<xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile%2A>は無視されます</xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile%2A></xref:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile%2A>。       厳密名ツール (Sn.exe) を実行して&16; 進数表記を取得するには、トークンと公開キーのオプションを (**Sn** **-tp** *keyfile* `)` Authenticode 署名を持つファイルと比較します。 詳細については、次を参照してください。 [Sn.exe (厳密名ツール)](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public string X509Certificate { get; set; }
    return:
      type: System.String
      description: "X.509 証明書の&16; 進数表現です。"
  overload: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: PublisherIdentityPermissionAttribute(SecurityAction)
  nameWithType: PublisherIdentityPermissionAttribute.PublisherIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.PublisherIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: CertFile
  nameWithType: PublisherIdentityPermissionAttribute.CertFile
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: PublisherIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: SignedFile
  nameWithType: PublisherIdentityPermissionAttribute.SignedFile
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: X509Certificate
  nameWithType: PublisherIdentityPermissionAttribute.X509Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: PublisherIdentityPermissionAttribute
  nameWithType: PublisherIdentityPermissionAttribute.PublisherIdentityPermissionAttribute
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile*
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: CertFile
  nameWithType: PublisherIdentityPermissionAttribute.CertFile
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: PublisherIdentityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile*
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: SignedFile
  nameWithType: PublisherIdentityPermissionAttribute.SignedFile
- uid: System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate*
  parent: System.Security.Permissions.PublisherIdentityPermissionAttribute
  isExternal: false
  name: X509Certificate
  nameWithType: PublisherIdentityPermissionAttribute.X509Certificate
