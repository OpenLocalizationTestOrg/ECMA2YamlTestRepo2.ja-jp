### YamlMime:ManagedReference
items:
- uid: System.Web.Security.DefaultAuthenticationModule
  id: DefaultAuthenticationModule
  children:
  - System.Web.Security.DefaultAuthenticationModule.#ctor
  - System.Web.Security.DefaultAuthenticationModule.Authenticate
  - System.Web.Security.DefaultAuthenticationModule.Dispose
  - System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule
  fullName: System.Web.Security.DefaultAuthenticationModule
  type: Class
  summary: "認証オブジェクトがコンテキストに存在することを確認します。 このクラスは継承できません。"
  remarks: "により、DefaultAuthenticationModule、 <xref:System.Web.HttpContext.User%2A>、現在のプロパティ<xref:System.Web.HttpContext>インスタンスに設定されて、<xref:System.Security.Principal.IPrincipal>要求ごとにオブジェクト</xref:System.Security.Principal.IPrincipal></xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A>。 DefaultAuthenticationModule を調べ、<xref:System.Web.HttpContext.User%2A>後プロパティ、<xref:System.Web.HttpApplication.AuthenticateRequest>イベントとの前に、<xref:System.Web.HttpApplication.AuthorizeRequest>イベント</xref:System.Web.HttpApplication.AuthorizeRequest></xref:System.Web.HttpApplication.AuthenticateRequest></xref:System.Web.HttpContext.User%2A>。 場合、<xref:System.Web.HttpContext.User%2A>プロパティは`null`、DefaultAuthenticationModule セット、<xref:System.Web.HttpContext.User%2A>プロパティを<xref:System.Security.Principal.GenericPrincipal>オブジェクトが含まれていないユーザー情報</xref:System.Security.Principal.GenericPrincipal></xref:System.Web.HttpContext.User%2A></xref:System.Web.HttpContext.User%2A>。       認証モジュールを設定する場合、 <xref:System.Web.HttpResponse.StatusCode%2A>401 にプロパティを DefaultAuthenticationModule には、アクセス拒否エラー ページが表示されます</xref:System.Web.HttpResponse.StatusCode%2A>。 場合の値、<xref:System.Web.HttpResponse.StatusCode%2A>プロパティが 200 より大きい値に設定されて、DefaultAuthenticationModule オブジェクトは、要求を終了します</xref:System.Web.HttpResponse.StatusCode%2A>。 その場合は、HTTP モジュールのみを定期受信する、<xref:System.Web.HttpApplication.EndRequest>イベントは、現在の要求の完了前に呼び出されます</xref:System.Web.HttpApplication.EndRequest>。       DefaultAuthenticationModule 公開、<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>イベント</xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>。 このイベントを使用するには、カスタムを提供する<xref:System.Security.Principal.IPrincipal>オブジェクトに対して、 <xref:System.Web.HttpContext.User%2A>、現在のプロパティ<xref:System.Web.HttpContext>インスタンス</xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A></xref:System.Security.Principal.IPrincipal>。 <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>という名前のイベントを指定することでアクセス イベント**DefaultAuthentication_OnAuthenticate**アプリケーションの Global.asax ファイルにします</xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>。"
  example:
  - "The following example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_1_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_1_1.asax)]"
  syntax:
    content: 'public sealed class DefaultAuthenticationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。       ASP.NET は、<xref:System.Web.Security.DefaultAuthenticationModule>クラス</xref:System.Web.Security.DefaultAuthenticationModule>のインスタンスを作成するこのコンス トラクターを呼び出します コンス トラクターを呼び出す、<xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>新しい初期化するメソッドを<xref:System.Web.Security.DefaultAuthenticationModule>オブジェクト</xref:System.Web.Security.DefaultAuthenticationModule></xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>。"
  syntax:
    content: public DefaultAuthenticationModule ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  id: Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "要求が認証された後に発生します。"
  remarks: "認証イベントが発生した後、<xref:System.Web.HttpApplication.AuthenticateRequest>イベント</xref:System.Web.HttpApplication.AuthenticateRequest>。 いることを確認するために使用されて、 <xref:System.Web.HttpContext.User%2A>、現在のプロパティ<xref:System.Web.HttpContext>のインスタンスが表示されます、<xref:System.Security.Principal.IPrincipal>オブジェクト</xref:System.Security.Principal.IPrincipal></xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A>。       認証イベントにアクセスすることができます、<xref:System.Web.Security.DefaultAuthenticationModule>という名前のサブルーチンを指定することによってクラス**DefaultAuthentication_OnAuthenticate**アプリケーションの Global.asax ファイルにします</xref:System.Web.Security.DefaultAuthenticationModule>。       使用することができます、<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>のプロパティ、<xref:System.Web.Security.DefaultAuthenticationEventArgs>内のオブジェクト、 **DefaultAuthentication_OnAuthenticate**設定イベントが、 <xref:System.Web.HttpContext.User%2A>、現在のプロパティ<xref:System.Web.HttpContext>をカスタム インスタンス<xref:System.Security.Principal.IPrincipal>オブジェクト</xref:System.Security.Principal.IPrincipal></xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.DefaultAuthenticationEventArgs></xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>。 値を指定しない場合、 <xref:System.Web.HttpContext.User%2A>、プロパティ、<xref:System.Web.Security.DefaultAuthenticationModule>設定、<xref:System.Web.HttpContext.User%2A>のプロパティ、<xref:System.Web.HttpContext>インスタンスを<xref:System.Security.Principal.GenericPrincipal>オブジェクトが含まれていないユーザー情報</xref:System.Security.Principal.GenericPrincipal></xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A></xref:System.Web.Security.DefaultAuthenticationModule></xref:System.Web.HttpContext.User%2A>。       **DefaultAuthentication_OnAuthenticate**後にイベントを生成、<xref:System.Web.HttpApplication.AuthenticateRequest>イベントとの前に、<xref:System.Web.HttpApplication.AuthorizeRequest>イベント</xref:System.Web.HttpApplication.AuthorizeRequest></xref:System.Web.HttpApplication.AuthenticateRequest>。 変更を拒否またはアプリケーションへのアクセスを許可するユーザー名に依存しているセクションがある場合、 <xref:System.Web.HttpContext.User%2A>、現在のプロパティ<xref:System.Web.HttpContext>インスタンス アプリケーションの動作に影響することができます</xref:System.Web.HttpContext></xref:System.Web.HttpContext.User%2A>。 あることを確認中に設定するユーザー名、 **DefaultAuthentication_OnAuthenticate**イベントは、構成では、セクションを指定する場合と見なされます。      > [!NOTE] > Web アプリケーションが IIS 7.0 での認証イベント、統合モードで実行している場合、<xref:System.Web.Security.DefaultAuthenticationModule>は発生しません</xref:System.Web.Security.DefaultAuthenticationModule>。 場合、`mode`構成要素の属性が&quot;None&quot;に設定し、認証イベントをサブスクライブするアプリケーション、<xref:System.PlatformNotSupportedException>エラーが発生します</xref:System.PlatformNotSupportedException>。 このシナリオでは認証通知を受信するには、サブスクライブ、<xref:System.Web.HttpApplication.AuthenticateRequest>のイベント、<xref:System.Web.HttpApplication>インスタンス</xref:System.Web.HttpApplication></xref:System.Web.HttpApplication.AuthenticateRequest>。 統合モードでの互換性の問題に関する詳細については、次を参照してください。 [IIS 6.0 から IIS 7.0 を ASP.NET アプリケーションを移動](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/e-system.web.security.de_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/e-system.web.security.de_1.asax)]"
  syntax:
    content: public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;
    return:
      type: System.Web.Security.DefaultAuthenticationEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  id: Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "によって使用されるメモリ以外のすべてのリソースを解放、 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;></xref>です。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "初期化、 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>オブジェクト。"
  remarks: "このメソッドは、アプリケーション コードから呼び出されるものではありません。       Init メソッドにより、<xref:System.Web.Security.DefaultAuthenticationModule>イベントの処理に含まれています</xref:System.Web.Security.DefaultAuthenticationModule>。"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "現在<xref href=&quot;System.Web.HttpApplication&quot;></xref>インスタンス。"
  overload: System.Web.Security.DefaultAuthenticationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
- uid: System.Web.Security.DefaultAuthenticationEventHandler
  parent: System.Web.Security
  isExternal: false
  name: DefaultAuthenticationEventHandler
  nameWithType: DefaultAuthenticationEventHandler
  fullName: System.Web.Security.DefaultAuthenticationEventHandler
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose
  nameWithType: DefaultAuthenticationModule.Dispose
- uid: System.Web.Security.DefaultAuthenticationModule.Init*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init
  nameWithType: DefaultAuthenticationModule.Init
