### YamlMime:ManagedReference
items:
- uid: System.Web.Security.AuthorizationStoreRoleProvider
  id: AuthorizationStoreRoleProvider
  children:
  - System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  - System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  - System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  - System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  - System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider
  fullName: System.Web.Security.AuthorizationStoreRoleProvider
  type: Class
  summary: "ストア内で、承認マネージャー ポリシー XML ファイル、または、Active Directory で Active Directory アプリケーション モード サーバー上で ASP.NET アプリケーションのロール メンバーシップ情報の記憶域を管理します。"
  remarks: "This class is used by the <xref:System.Web.Security.Roles> and <xref:System.Web.Security.RolePrincipal> classes to provide role-management services for an ASP.NET application using an authorization-manager store. You can use role management to specify different levels of authorization for your application. The authorization manager can be accessed using the Microsoft Management Console.  \n  \n The AuthorizationStoreRoleProvider object works with both Windows authentication and forms authentication modes.  \n  \n You can configure the AuthorizationStoreRoleProvider object to use either a local XML file or an Active Directory or Active Directory Application Mode (ADAM) server. When using a local file, the connection string should look like the following example.  \n  \n```  \nmsxml://<path to xml file>  \n```  \n  \n If the local file is stored in the directory tree of an ASP.NET Web application, you can use the tilde (\"~\") character to indicate the root directory. For example, to indicate that the local file is stored in the Web application's data directory, you would use a connection string similar to the following example.  \n  \n `msxml://~\\App_Data\\datafilename.xml`  \n  \n> [!IMPORTANT]\n>  Storing an XML data file in the Web application directory is a potential security threat. By default, IIS will serve XML data files to the Web. To improve security when using a local data file in an ASP.NET application, you should store the data file in the `App_Data` directory. Files stored in the `App_Data` directory will not be served to the Web.  \n  \n If you are using an Active Directory or ADAM server for the policy store, your connection string should be similar to the following example.  \n  \n `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  \n  \n The exceptions listed in the documentation for AuthorizationStoreRoleProvider object methods are the exceptions that are raised by the AuthorizationStoreRoleProvider object. Since the provider relies on the underlying Authentication Manager runtime, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown whenever the AuthorizationStoreRoleProvider object forwards a method call to the Authentication Manager runtime.  \n  \n> [!IMPORTANT]\n>  The AuthorizationStoreRoleProvider object has the following requirements for running in partial-trust environments:  \n>   \n>  When using a file-based policy store in an ASP.NET application, the file I/O permissions granted by the current trust level determine whether read and write actions are allowed by the provider. The ASP.NET application must have read permission on the file to read data from the policy store, and must have write permission to save new information or update existing information in the policy store. The default Medium-trust policy file gives an ASP.NET application read/write permissions in its application directory. The default Low-trust policy file only gives an ASP.NET application read permission in its application directory. In addition, the process identity under which the ASP.NET application runs must have file-system permissions to read and/or write the policy file.  \n>   \n>  When using an Active Directory or ADAM server, the ASP.NET application needs unmanaged-code permission because the internal AuthorizationStoreRoleProvider object code uses COM interop.  \n>   \n>  When using the AuthorizationStoreRoleProvider object outside of ASP.NET, the calling code needs unmanaged-code permission."
  example:
  - "The following code example shows a Web.config file set to use the AuthorizationStoreRoleProvider for role management.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"AuthorizationServices\" connectionString=\"msxml://~\\App_Data\\SampleStore.xml\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n  \n    <authentication mode=\"Windows\" />  \n    <identity impersonate=\"true\" />  \n  \n    <roleManager defaultProvider=\"AuthorizationStoreRoleProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"false\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n      <providers>  \n        <clear />  \n          <add  \n            name=\"AuthorizationStoreRoleProvider\"  \n            type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n            connectionStringName=\"AuthorizationServices\"  \n            applicationName=\"SampleApplication\"   \n            cacheRefreshInterval=\"60\"  \n            scopeName=\"\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>クラスです。"
  remarks: "インスタンスを作成する ASP.NET によって AuthorizationStoreRoleProvider コンス トラクターが呼び出されます、<xref:System.Web.Security.AuthorizationStoreRoleProvider>アプリケーションの構成で指定したクラスです</xref:System.Web.Security.AuthorizationStoreRoleProvider>。 このコンス トラクターは、コードから使用するものではありません。"
  syntax:
    content: public AuthorizationStoreRoleProvider ();
    parameters: []
  overload: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定されたロールのそれぞれに指定されたユーザー名を追加します。"
  remarks: "AddUsersToRoles メソッドによって呼び出されます、<xref:System.Web.Security.Roles>に ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのデータ ストア内の&1; つまたは複数の役割を持つ&1; つまたは複数のユーザーを関連付けるクラス</xref:System.Web.Security.Roles>。 このメソッドは、 <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>、 <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName>、 <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName>、<xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName><xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>のメソッド</xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName>と</xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName></xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName></xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/51528ad0-2535-416a-b69f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/51528ad0-2535-416a-b69f-_1.aspx)]"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "指定したロールに追加するユーザー名の文字列配列。"
    - id: roleNames
      type: System.String[]
      description: "指定されたユーザー名を追加するロール名の文字列配列。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたユーザー名のいずれかが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または - が指定されたロール名のいずれかの<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       -or-       <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたユーザー名のいずれかにより、空の文字列またはコンマ (,) が含まれています。       または、空の文字列またはコンマ (,) が含まれる指定されたロール名のいずれかを実行します。       - または - <code> usernames </code>重複する要素が含まれています。       - または - <code> roleNames </code>重複する要素が含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得または設定を保存し、ロール情報を取得する対象の承認ストア アプリケーションの名前。"
  remarks: "ApplicationName を使って、<xref:System.Web.Security.AuthorizationStoreRoleProvider>にユーザーおよびロールを関連付ける別の承認マネージャー アプリケーションは、複数の ASP.NET アプリケーションを同じ承認マネージャー ポリシーを使用できますストアに実行しなくてもロール情報競合重複したロール名の間</xref:System.Web.Security.AuthorizationStoreRoleProvider>。 または、複数の ASP.NET アプリケーションでは、ApplicationName プロパティに同じ値を指定することによって、同じポリシー ストアを使用することができます。 ApplicationName プロパティは、プログラムによって設定できますかことで設定できます宣言によって、アプリケーションの Web.config ファイルを使用して、`applicationName`属性。       値が指定されていない場合、 `applicationName` Web.config ファイル内の属性、<xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>現在のプロパティ値<xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>オブジェクトを使用します</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName></xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>。      > [!NOTE] > 承認マネージャー アプリケーションの名前に含まれている「/」文字を含めることはできません、<xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>プロパティ</xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>。 その結果、ApplicationName プロパティの既定値は、承認マネージャー アプリケーション名として使用できませんし、アプリケーションの Web.config ファイルで指定してください、`applicationName`属性、`provider`構成するのには、<xref:System.Web.Security.AuthorizationStoreRoleProvider>インスタンス</xref:System.Web.Security.AuthorizationStoreRoleProvider>。      > [!CAUTION] > すべてで処理された要求の&1; つの既定のロール プロバイダーのインスタンスが使用されるため、<xref:System.Web.HttpApplication>オブジェクトを同時に実行して、ApplicationName プロパティ値を設定しようとしています複数の要求を持つことができます。</xref:System.Web.HttpApplication> 。 ApplicationName プロパティは複数の書き込みでは、安全なスレッドではありませんあり ApplicationName プロパティの値の変更が原因で予期しない動作アプリケーションの複数のユーザーがある場合。 により、ユーザーに必要な場合を除き、ApplicationName プロパティを設定するコードを記述しないことをお勧めします。 ApplicationName プロパティを設定することがある必須アプリケーションの例は、複数のアプリケーション ロールのデータを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.AuthorizationStoreRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"AuthorizationStoreProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n      connectionStringName=\"AuthorizationStoreServices\"   \n      scopeName=\"MyScope\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "ストアを格納およびロール情報を取得する対象のアプリケーションの認証の名前。 既定値は、 &lt;xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName&gt;プロパティの値を現在の&lt;xref:System.Web.HttpContext.Request%2A?displayProperty=fullName&gt;です。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "256 文字より長い文字列に ApplicationName を設定しようとしました。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  id: CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ポリシー ストアのデータのキャッシュの更新間隔を分単位の数を取得します。"
  syntax:
    content: public int CacheRefreshInterval { get; }
    return:
      type: System.Int32
      description: "キャッシュされたポリシー ストアのデータの更新間隔を分単位の数。 既定値は 60 です。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロールの承認マネージャーのポリシー ストアに新しいロールを追加します。"
  remarks: "CreateRole メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのデータ ストアのロールを作成するクラス</xref:System.Web.Security.Roles>。       ロール名では大文字小文字を区別します。"
  example:
  - "The following code example creates a new role in the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_0_1.aspx)]"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "作成するロールの名前。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>空の文字列です。       - または -<code>roleName</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "承認マネージャーのポリシー ストアからロールを削除します。"
  remarks: "DeleteRole メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのポリシー ストアからロールを削除するクラス</xref:System.Web.Security.Roles>。 ロールが削除されると、そのロールに関連付けられているユーザーの一覧をポリシー ストアからも削除されます。 データベース内のユーザー情報には影響しません。       場合`throwOnPopulatedRole`は`true`し、例外がスローされます、およびロールがによって識別される場合、ロールは削除されません、`roleName`パラメーターが&1; つまたは複数のメンバーです。 場合`throwOnPopulatedRole`は`false`、空であるかどうかどうか、ロールが削除されます。"
  example:
  - "The following example deletes a role from the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/f8238a62-ae02-4a3c-85f0-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/f8238a62-ae02-4a3c-85f0-_1.aspx)]"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "削除するロールの名前。"
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、例外がスロー`roleName`は&1; つまたは複数のメンバーがあります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ロールが削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>空の文字列です。       - または -<code>roleName</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>1 つまたは複数のメンバーが存在し、<code>throwOnPopulatedRole</code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。       または、構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、承認ストアのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "検索対象のロール。"
    - id: usernameToMatch
      type: System.String
      description: "検索するユーザー名。"
    return:
      type: System.String[]
      description: "ユーザー名と一致するすべてのユーザーの名前を含む文字列配列<code> usernameToMatch </code>指定されたロールのメンバーとなっているとします。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "アプリケーションのすべてのロールの一覧を取得します。"
  remarks: "GetAllRoles メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのポリシー ストア内のすべてのロールの一覧を取得するクラス</xref:System.Web.Security.Roles>。"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetAllRoles%2A> method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_2_1.aspx)]"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "特定のアプリケーションの承認マネージャーのポリシー ストアに格納されているすべてのロールの名前を含む文字列配列。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザー ロールの一覧を取得します。"
  remarks: "GetRolesForUser メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのポリシー ストアから指定したユーザーのロールの一覧を取得するクラス</xref:System.Web.Security.Roles>。"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and binds them to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/540a45cf-e182-4a47-b288-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/540a45cf-e182-4a47-b288-_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "ロールの一覧を取得するユーザー。"
    return:
      type: System.String[]
      description: "指定したユーザーが含まれているすべてのロールの名前を含む文字列配列。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定したロールにユーザーの一覧を取得します。"
  remarks: "GetUsersInRole メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのポリシー ストアで指定されたロールに関連付けられているユーザーの一覧を取得するクラス</xref:System.Web.Security.Roles>。       GetUsersInRole メソッドによって指定される承認マネージャー ロールに直接含まれているユーザー名のみを返します、`roleName`パラメーター。 基になる承認マネージャー API のメソッドは、入れ子になったの NT グループに含まれているため、ユーザー グループの展開をサポートしていません GetUsersInRole によって呼び出されますが、承認マネージャーのグループを入れ子にして、LDAP クエリ グループは返されません。"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method to get a list of the users in a particular role and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "ユーザーの一覧を取得するロールの名前。"
    return:
      type: System.String[]
      description: "指定されたロールのメンバーであるすべてのユーザーの名前を含んでいる文字列配列。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>空の文字列です。       - または -<code>roleName</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ASP.NET アプリケーションの構成ファイルで指定されたプロパティの値では、承認マネージャー ロール プロバイダーを初期化します。 このメソッドは、コードから直接使用するものではありません。"
  remarks: "Initialize メソッドを初期化、<xref:System.Web.Security.AuthorizationStoreRoleProvider>プロパティを使用して値が ASP.NET アプリケーション構成ファイル (Web.config) で指定し、コードから直接使用するものではありません</xref:System.Web.Security.AuthorizationStoreRoleProvider>。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスを初期化します。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>名とロール プロバイダーの構成オプションの値を格納しています。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が空かに存在しません、 [connectionStrings 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de)構成セクション。       または、構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が 256 文字より長い。       - または - 構成は<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;></xref>インスタンスには、認識されない属性が含まれています。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ASP.NET アプリケーションが実行されていない<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>信頼またはそれ以降。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定したユーザーが指定したロールがあるかどうかを示す値を取得します。"
  remarks: "IsUserInRole メソッドによって呼び出されます、<xref:System.Web.Security.Roles>クラスおよび<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Web.UI.Page.User%2A?displayProperty=fullName>プロパティをユーザーが、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのデータ ストア内のロールに関連付けられているかどうかを判断します</xref:System.Web.UI.Page.User%2A?displayProperty=fullName></xref:System.Security.Principal.IPrincipal.IsInRole%2A></xref:System.Web.Security.Roles>。"
  example:
  - "The following code example programmatically checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/90a9fe0c-acb8-442c-9ca1-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/90a9fe0c-acb8-442c-9ca1-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "検索するユーザー名。"
    - id: roleName
      type: System.String
      description: "検索対象のロール。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたユーザー名が指定されたロールの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>空の文字列です。       - または -<code>roleName</code>コンマが含まれています。       - または -<code>username</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定されたロールから指定されたユーザー名を削除します。"
  remarks: "RemoveUsersFromRoles メソッドによって呼び出されます、 <xref:System.Web.Security.Roles>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのポリシー ストアの&1; つまたは複数のロールから&1; つまたは複数のユーザーを削除するクラス</xref:System.Web.Security.Roles>。 このメソッドは、 <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>、 <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>、 <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A><xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>のメソッド</xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>と</xref:System.Web.Security.Roles.RemoveUsersFromRole%2A></xref:System.Web.Security.Roles.RemoveUserFromRoles%2A></xref:System.Web.Security.Roles.RemoveUserFromRole%2A>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/a89492ce-ed56-4c62-adf2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/a89492ce-ed56-4c62-adf2-_1.aspx)]"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);
    parameters:
    - id: userNames
      type: System.String[]
      description: "指定されたロールから削除するユーザー名の文字列配列。"
    - id: roleNames
      type: System.String[]
      description: "指定されたユーザー名を削除するロール名の文字列配列。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定されたユーザー名のいずれかが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       - または - が指定されたロール名のいずれかの<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       -or-       <code>userNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたユーザー名のいずれかの空の文字列か、コンマが含まれています。       または、空の文字列またはコンマが含まれる指定されたロール名のいずれかを実行します。       - または - <code> userNames </code>重複する要素が含まれています。       - または - <code> roleNames </code>重複する要素が含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定したロール名は、承認マネージャーのポリシー ストアに既に存在するかどうかを示す値を取得します。"
  remarks: "RoleExists メソッドによって呼び出されます、<xref:System.Web.Security.Roles>ロール名が、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーのデータ ストアに存在するかどうかを決定するクラス</xref:System.Web.Security.Roles>。"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.RoleExists%2A> method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_1_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_1_1.aspx)]"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "承認マネージャーのポリシー ストアで検索するロールの名前です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>承認マネージャーのポリシー ストア; のロール名が既に存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>空の文字列です。       - または -<code>roleName</code>コンマが含まれています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "構成された<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、構成された<xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;></xref>が見つかりませんでした。       または、承認マネージャーのランタイムがサーバーにインストールされていません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>属性が存在しないファイルへの接続文字列を参照します。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref>インスタンスは、ファイル ベースのポリシー ストアで構成され、現在の信頼レベルで、ファイルへの読み取りアクセスが許可されていません。"
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  id: ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得または承認ストアのスコープ名を設定します。"
  remarks: "使用して、{scopename} プロパティを設定することができます、`scopeName`でプロバイダーのインスタンスの属性の構成、`providers`構成セクションのセクションでします。      > [!CAUTION] > すべてで処理された要求の&1; つの既定のロール プロバイダーのインスタンスが使用されるため、<xref:System.Web.HttpApplication>オブジェクトを同時に実行して、{scopename} プロパティ値を設定しようとしています複数の要求を持つことができます。</xref:System.Web.HttpApplication> 。 {Scopename} プロパティは複数の書き込みでは、安全なスレッドではありませんあり {scopename} プロパティ値の変更が原因で予期しない動作アプリケーションの複数のユーザーがある場合。 により、ユーザーに必要な場合を除き、{scopename} プロパティを設定するコードを記述しないことをお勧めします。 ScopeName プロパティを設定することがある必須アプリケーションの例は、複数のアプリケーション ロールのデータを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。"
  syntax:
    content: public string ScopeName { get; set; }
    return:
      type: System.String
      description: "承認ストアのスコープ名。"
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: AuthorizationStoreRoleProvider.CreateRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: AuthorizationStoreRoleProvider.Initialize
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: AuthorizationStoreRoleProvider.RoleExists
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
