### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ServiceReference
  id: ServiceReference
  children:
  - System.Web.UI.ServiceReference.#ctor
  - System.Web.UI.ServiceReference.#ctor(System.String)
  - System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  - System.Web.UI.ServiceReference.InlineScript
  - System.Web.UI.ServiceReference.Path
  - System.Web.UI.ServiceReference.ToString
  langs:
  - csharp
  name: ServiceReference
  nameWithType: ServiceReference
  fullName: System.Web.UI.ServiceReference
  type: Class
  summary: "Web ページで使用する Web サービスを登録します。"
  remarks: "ECMAScript (JavaScript) から Web サービス メソッドを呼び出すには、ASP.NET ページ内のサービス参照を含めるを適用する必要があります、<xref:System.Web.Script.Services.ScriptServiceAttribute>属性を Web サービスのクラス定義</xref:System.Web.Script.Services.ScriptServiceAttribute>。 Web サービスにサービス参照を含めるかどうかは、<xref:System.Web.UI.ScriptManager>または<xref:System.Web.UI.ScriptManagerProxy>オブジェクトは、ブラウザーでインスタンス化する JavaScript、ASP.NET ページ内のコントロールです</xref:System.Web.UI.ScriptManagerProxy></xref:System.Web.UI.ScriptManager>。       プロキシ オブジェクトは、次の操作に使用する: Make 非同期要求 JavaScript での Web サービス メソッドを - 内の特定のサーバーのデータ型のプロキシのインスタンスを初期化入力パラメーターとして使用 Web メソッドを呼び出すためです。      > [!NOTE] > ServiceReference コントロールは、同じドメイン内のサービスに対してのみ使用できます。       追加することにより宣言 Web サービスの場所で定義することができます、`<asp:ServiceReference>`要素を`<Services>`内の要素、 `<asp:ScriptManager>`  ページとし、設定に要素の<xref:System.Web.UI.ServiceReference.Path%2A>属性が次の例で示すようにします</xref:System.Web.UI.ServiceReference.Path%2A>。      ```   <asp:ScriptManager runat=&quot;server&quot; ID=&quot;scriptManager&quot;>     <Services>       <asp:ServiceReference Path=&quot;~/WebServices/SimpleWebService.asmx&quot; />     </Services>   </asp:ScriptManager>   ```使用する場合があります、<xref:System.Web.UI.ServiceReference.InlineScript%2A>プロキシ生成スクリプトがインライン スクリプト ブロックとしてそのページに含まれるか、別の要求によって取得されるかを示すプロパティです</xref:System.Web.UI.ServiceReference.InlineScript%2A>。       プログラムによって、<xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>または<xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName><xref:System.Collections.ObjectModel.Collection%601.Add%2A><xref:System.Web.UI.ServiceReferenceCollection>クラス</xref:System.Web.UI.ServiceReferenceCollection>のメソッド</xref:System.Collections.ObjectModel.Collection%601.Add%2A>を使用してコレクション</xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName></xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName>から ServiceReference オブジェクトを追加することができます。"
  example:
  - "The following example demonstrates how to add a reference to a Web service in the page markup to call the Web service methods from script.  \n  \n [!code-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/visualbasic/t-system.web.ui.servicer_1.aspx)]\n [!code-cs[System.Web.Script.Services.ScriptMethodAttribute#5](~/add/codesnippet/csharp/t-system.web.ui.servicer_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ServiceReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref>クラスです。"
  syntax:
    content: public ServiceReference ();
    parameters: []
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ServiceReference&quot;> </xref>クラス パスを指定しています。"
  syntax:
    content: public ServiceReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "Web サービスの場所です。"
  overload: System.Web.UI.ServiceReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "派生からプロキシ スクリプトを提供<xref href=&quot;System.Web.UI.ServiceReference&quot;></xref>カスタマイズとしてオーバーライド可能なオブジェクトです。"
  remarks: "`containingControl`パラメーターは、<xref:System.Web.UI.ScriptManager>オブジェクトまたは<xref:System.Web.UI.ScriptManagerProxy>対象となるオブジェクト、<xref:System.Web.UI.ServiceReference>オブジェクトが定義されています</xref:System.Web.UI.ServiceReference></xref:System.Web.UI.ScriptManagerProxy></xref:System.Web.UI.ScriptManager>。 相対 URL 解決基準として使用する必要があります。"
  syntax:
    content: protected virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref>ページ上のコントロールです。"
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "プロキシ スクリプトです。"
  overload: System.Web.UI.ServiceReference.GetProxyScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  id: GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "派生するプロキシの URL を提供<xref href=&quot;System.Web.UI.ServiceReference&quot;></xref>カスタマイズとしてオブジェクトをオーバーライドすることができます。"
  remarks: "`containingControl`パラメーターは、<xref:System.Web.UI.ScriptManager>オブジェクトまたは<xref:System.Web.UI.ScriptManagerProxy>対象となるオブジェクト、<xref:System.Web.UI.ServiceReference>オブジェクトが定義されているし、相対 URL 解決の基礎として使用する必要があります</xref:System.Web.UI.ServiceReference></xref:System.Web.UI.ScriptManagerProxy></xref:System.Web.UI.ScriptManager>。"
  syntax:
    content: protected virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref href=&quot;System.Web.UI.ScriptManager&quot;> </xref>ページ上のコントロールです。"
    - id: containingControl
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;></xref> object."
    return:
      type: System.String
      description: "プロキシの URL です。"
  overload: System.Web.UI.ServiceReference.GetProxyUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.InlineScript
  id: InlineScript
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "取得またはプロキシ生成スクリプトがインライン スクリプト ブロックとしてそのページに含まれるか、別の要求によって取得されるかを示す値を設定します。"
  remarks: "InlineScript プロパティが宣言されていない場合、既定値は`false`します。       InlineScript に設定すると`false`ECMAScript (JavaScript) プロキシを生成するためのスクリプトがサーバーへの追加要求によって別のスクリプト ファイルとしてダウンロードします。 ブラウザーのキャッシュを使用する場合このオプションは、複数の Web ページが同じサービス参照を使用する場合に便利です。       InlineScript に設定すると`true`プロキシの生成のスクリプトは、ページ内のインライン スクリプト ブロックとして含まれています。 これにより、ページに多数のサービス参照があるし、他のページは、同じサービスを参照しない場合は特に、ネットワーク要求の数を減らすことによってサーバー パフォーマンスが向上します。 さらに、 <xref:System.Web.UI.ServiceReference.Path%2A>InlineScript に設定すると、相対パスにプロパティを設定する必要があります`true`</xref:System.Web.UI.ServiceReference.Path%2A>。"
  syntax:
    content: public virtual bool InlineScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プロキシ生成スクリプトがページ内のインライン スクリプト ブロックとして含まれている場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>プロキシ生成スクリプトが別の要求によって取得された場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ServiceReference.InlineScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.Path
  id: Path
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "取得または参照先の Web サービスへのパスを設定します。"
  remarks: "Path プロパティは、ローカルの Web サービスのみを指定できます。 つまり、このプロパティでは、AJAX 対応の ASP.NET Web アプリケーションと同じドメイン内の Web サービスを指定できますのみ。 パスは相対パス、アプリケーション相対、ドメインの相対または絶対パスを指定できます。       場合、<xref:System.Web.UI.ServiceReference.InlineScript%2A>プロパティに設定されている`true`を含むページと同じ Web アプリケーションを指す相対パスを使用する必要があります、<xref:System.Web.UI.ServiceReference>インスタンス</xref:System.Web.UI.ServiceReference></xref:System.Web.UI.ServiceReference.InlineScript%2A>。"
  syntax:
    content: public virtual string Path { get; set; }
    return:
      type: System.String
      description: "参照先の Web サービスのパス。"
  overload: System.Web.UI.ServiceReference.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ServiceReference.ToString
  id: ToString
  parent: System.Web.UI.ServiceReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "値を表す文字列を返します、<xref:System.Web.UI.ServiceReference.Path*>プロパティまたは型名</xref:System.Web.UI.ServiceReference.Path*>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "値、 <> </> *> 定義それ以外の場合は、プロパティ、値の<> *> クラスのプロパティです。"
  overload: System.Web.UI.ServiceReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.ServiceReference.#ctor
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference()
  nameWithType: ServiceReference.ServiceReference()
  fullName: System.Web.UI.ServiceReference.ServiceReference()
- uid: System.Web.UI.ServiceReference.#ctor(System.String)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference(String)
  nameWithType: ServiceReference.ServiceReference(String)
  fullName: System.Web.UI.ServiceReference.ServiceReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyScript(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyScript(ScriptManager,Control)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl(ScriptManager,Control)
  nameWithType: ServiceReference.GetProxyUrl(ScriptManager,Control)
  fullName: System.Web.UI.ServiceReference.GetProxyUrl(ScriptManager,Control)
- uid: System.Web.UI.ServiceReference.InlineScript
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
  fullName: System.Web.UI.ServiceReference.InlineScript
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ServiceReference.Path
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
  fullName: System.Web.UI.ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString()
  nameWithType: ServiceReference.ToString()
  fullName: System.Web.UI.ServiceReference.ToString()
- uid: System.Web.UI.ServiceReference.#ctor*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ServiceReference
  nameWithType: ServiceReference.ServiceReference
- uid: System.Web.UI.ServiceReference.GetProxyScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyScript
  nameWithType: ServiceReference.GetProxyScript
- uid: System.Web.UI.ServiceReference.GetProxyUrl*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: GetProxyUrl
  nameWithType: ServiceReference.GetProxyUrl
- uid: System.Web.UI.ServiceReference.InlineScript*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: InlineScript
  nameWithType: ServiceReference.InlineScript
- uid: System.Web.UI.ServiceReference.Path*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: Path
  nameWithType: ServiceReference.Path
- uid: System.Web.UI.ServiceReference.ToString*
  parent: System.Web.UI.ServiceReference
  isExternal: false
  name: ToString
  nameWithType: ServiceReference.ToString
