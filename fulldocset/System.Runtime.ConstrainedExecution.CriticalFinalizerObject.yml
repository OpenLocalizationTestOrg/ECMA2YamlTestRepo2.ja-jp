### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "派生クラス内のすべての終了コードに重要としてマークされていることを確認します。"
  remarks: "CriticalFinalizerObject クラスから派生するクラスは、制約された実行領域 (CER) として暗黙的に扱われます。  これには、のみ強力な信頼性のコントラクトにコードを呼び出すファイナライザーでコードが必要です。 Cer の詳細については、次を参照してください、<xref:System.Runtime.ConstrainedExecution>名前空間。</xref:System.Runtime.ConstrainedExecution> 。       CriticalFinalizerObject クラスから派生したクラス、共通言語ランタイム (CLR) ことを保証するすべての重要な終了コードは、実行する営業案件に付与される提供ファイナライザーを CLR に強制的にアプリケーション ドメインをアンロードしたり中止したり、スレッドの場合であっても、CER の規則に従います。 ファイナライザー CER の規則に違反する場合に可能性がありますが正常に実行されません。 さらに、CLR は通常の動作と重要なファイナライザー間弱い順序付けを確立します。 クリティカル ファイナライザーのいずれかの前に、同時にガベージ コレクションによって回収されるオブジェクトのすべての重要でないファイナライザーが呼び出されます。 などのクラスなど、 <xref:System.IO.FileStream>、内のデータを保持する、 <xref:System.Runtime.InteropServices.SafeHandle>CriticalFinalizerObject から派生したクラスは、バッファー内の既存のデータをフラッシュする標準のファイナライザーを実行できます</xref:System.Runtime.InteropServices.SafeHandle></xref:System.IO.FileStream>。       ほとんどの場合は、CriticalFinalizerObject クラスから派生するクラスを作成する必要はありません。 .NET Framework クラス ライブラリには、2 つのクラスが用意されています<xref:System.Runtime.InteropServices.SafeHandle>と<xref:System.Runtime.InteropServices.CriticalHandle>、ハンドル リソースの重要な終了処理の機能を提供します</xref:System.Runtime.InteropServices.CriticalHandle></xref:System.Runtime.InteropServices.SafeHandle>。 さらに、.NET Framework がから派生したクラスの定義済みのセットを提供、<xref:System.Runtime.InteropServices.SafeHandle>クラス、およびこのセットにある、<xref:Microsoft.Win32.SafeHandles>名前空間</xref:Microsoft.Win32.SafeHandles></xref:System.Runtime.InteropServices.SafeHandle>。 これらのクラスは、ファイルとオペレーティング システム ハンドルをサポートするための共通の機能を提供する設計されています。"
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref>クラスです。"
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref>クラスです。"
  remarks: "派生する任意の型のファイナライザーを<xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>する機会が与えられますを実行しは中断できない、ファイナライザーは、制約された実行領域 (CER) の規則を正しくに従いと仮定した場合します</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>。"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
