### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IBindableTemplate
  id: IBindableTemplate
  children:
  - System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  langs:
  - csharp
  name: IBindableTemplate
  nameWithType: IBindableTemplate
  fullName: System.Web.UI.IBindableTemplate
  type: Interface
  summary: "などの ASP.NET データ バインド コントロールの手段を提供<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;></xref>と<xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>、自動的にテンプレートのコンテンツ セクション内での ASP.NET データ ソース コントロールにバインドします。"
  remarks: "IBindableTemplate インターフェイスにより、ASP.NET データ バインド コントロールのように<xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.GridView>、および<xref:System.Web.UI.WebControls.FormView>などの ASP.NET データ ソース コントロールによって提供されるデータにバインドする<xref:System.Web.UI.WebControls.ObjectDataSource>または<xref:System.Web.UI.WebControls.SqlDataSource>データ バインド コントロールには、テンプレート コンテンツが含まれている場合、</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 。      > [!NOTE] > ページの開発者は IBindableTemplate インターフェイスを実装していません。 カスタムのデータ バインド コントロールを作成する開発者の実装の IBindableTemplate オブジェクトの操作可能性があります、<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A>と<xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A>メソッド、独自の IBindableTemplate オブジェクトを実装していませんが、</xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> </xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 。       などのデータ バインド コントロール<xref:System.Web.UI.WebControls.GridView>通常はその子コントロールのツリーの認識できる値をバインドするから値を抽出されデータ バインディングが発生するたびに、データ バインド コントロールとデータ ソース コントロールの間でこれらの値を渡す</xref:System.Web.UI.WebControls.GridView>。 ただし、ページの開発者は、データ バインド コントロールのテンプレートのコンテンツを定義、ときに、テンプレート内の子コントロールに表示されない、親データ バインド コントロール: 親は子を表示できます (ため自体のコントロールを効果的に表示) をコンテンツが、これらの子コントロールに関連付けられているデータ ソース コントロールの更新、挿入、または削除操作に渡す値を抽出できません。 データ バインディングのシナリオでは、テンプレート コンテンツは、親データ バインド コントロールに対して非透過的です。 `Bind`構文により IBindableTemplate インスタンス内のデータ バインド コントロールから値を抽出するデータ バインド コントロールです。       データ バインディングには、一方向または双方向を指定できます。 (これらのバインドの方向がによって定義された、<xref:System.ComponentModel.BindingDirection>列挙体です)</xref:System.ComponentModel.BindingDirection> 。一方向のデータ バインディングは、データ バインド コントロールをデータ ソース コントロールからの送信方向で実行される任意のデータ バインディングたとえば、どのシナリオでもデータを読み取るには、一方向のデータ バインドが含まれます。 一方向のデータ バインディングの一方向のデータ バインディングの構文を使用することができます (`<%# Eval(&quot;fieldname&quot;) %>`) テンプレートのコンテンツ内、双方向の ASP.NET データ バインド構文を使用する必要はありません。 双方向データ バインディングでは、データ ソース コントロールにデータ バインド コントロールからの受信方向でのデータ バインディングについて説明します。 自動の編集、挿入、および削除シナリオの ASP.NET を使用してデータ バインドとデータ ソース コントロールが双方向データ バインディング シナリオを示します。 これらのシナリオが双方向データ バインディング式を使用して (`<%# Bind(&quot;fieldname&quot;) %>`)。 IBindableTemplate インターフェイスと ASP.NET のインフラストラクチャは、テンプレート化されたコンテンツと ASP.NET のデータ ソース コントロールの間の自動、宣言、双方向データ バインディングをサポートします。 ASP.NET データ バインド式と構文の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)と[データ バインド式の概要](~/add/includes/ajax-current-ext-md.md)です。       データ バインド コントロールのテンプレートのコンテンツが宣言によって定義されているほとんどの場合。 次の表では、テンプレート化されたデータをデータ バインド コントロールにバインドする最もよく使用されるプロセスについて説明します。      |データ バインド コントロール |プロセス |  |-------------------------|-------------|  |<xref:System.Web.UI.WebControls.DetailsView>|データ バインド コントロールを使用してデータにバインドする、 `DataSourceID` <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>で、データ ソース コントロール、およびテンプレートのコンテンツのプロパティが定義されている<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>または<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>プロパティです |。  |<xref:System.Web.UI.WebControls.GridView>|データ バインド コントロールを使用してデータにバインドする、`DataSourceID`で、データ ソース コントロール、およびテンプレートのコンテンツのプロパティが定義されている、<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>または<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>プロパティ</xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A></xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A></xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A></xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A></xref:System.Web.UI.WebControls.DetailsView>。 <xref:System.Web.UI.WebControls.GridView>コントロールが挿入操作をサポートしていません |。  |<xref:System.Web.UI.WebControls.FormView>|データ バインド コントロールを使用してデータにバインドする、`DataSourceID`プロパティ、およびテンプレートのコンテンツが、<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>で定義されている<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>、または<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>プロパティまたは<xref:System.Web.UI.WebControls.TemplateField>オブジェクトです |。      <xref:System.Web.UI.WebControls.DataList>と<xref:System.Web.UI.WebControls.Repeater>コントロールでは、自動双方向データ バインディングのシナリオをサポートしていません</xref:System.Web.UI.WebControls.Repeater></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.TemplateField></xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A></xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A></xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A></xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.GridView>。       ASP.NET は、テンプレート内での ASP.NET データ ソース コントロールにバインドするテンプレートのコンテンツが解析されるときに暗黙的に IBindableTemplate オブジェクトを作成します。 具体的には、ASP.NET のパーサーがのインスタンスを作成、<xref:System.Web.UI.CompiledBindableTemplateBuilder>クラスは ASP.NET データ バインドの構文を使用し、データ バインディングをサポートする ASP.NET Web サーバー コントロールを含むテンプレートのコンテンツを解析する場合</xref:System.Web.UI.CompiledBindableTemplateBuilder>。 これらの ASP.NET サーバー コントロールによってマークされて、<xref:System.ComponentModel.BindableAttribute>属性</xref:System.ComponentModel.BindableAttribute>。       IBindableTemplate インターフェイスは、1 つのメソッド、 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>。</xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>を定義します。 データ バインド コントロールが自動的にテンプレート化されたコンテンツから名前/値ペアを抽出して実行時にデータ ソース コントロールにペアを渡すできるように、このメソッドは、双方向データ バインディングの定義します。 データの自動へのバインドが成功、フィールド名は、コンテンツから抽出された、テンプレートによって、<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>メソッドが関連付けられているデータ ソース コントロール内のパラメーター名と一致する必要があります</xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>。 開発者の呼び出しの制御、<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>メソッドに明示的の実装内でのみ<xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A>またはカスタム データ バインド コントロールの他のいくつかのようなメソッドです</xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A></xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>。"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.FormView> control can declaratively define templated content, bind to data provided by a <xref:System.Web.UI.WebControls.SqlDataSource> control, and display and edit existing records. The ASP.NET parser parses the templated content and creates an IBindableTemplate object at run time that is able to bind values from the <xref:System.Web.UI.WebControls.SqlDataSource> control to the data-binding areas defined in the template by both one-way ASP.NET data-binding syntax (`<%# Eval(\"fieldname\") %>`) and two-way data-binding syntax (`<%# Bind(\"fieldname\") %>`).  \n  \n> [!IMPORTANT]\n>  This control has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.ibindabl_1.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.ibindabl_1.aspx)]"
  syntax:
    content: 'public interface IBindableTemplate : System.Web.UI.ITemplate'
  implements:
  - System.Web.UI.ITemplate
  platform:
  - net462
- uid: System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  id: ExtractValues(System.Web.UI.Control)
  parent: System.Web.UI.IBindableTemplate
  langs:
  - csharp
  name: ExtractValues(Control)
  nameWithType: IBindableTemplate.ExtractValues(Control)
  fullName: System.Web.UI.IBindableTemplate.ExtractValues(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "クラスに実装すると、テンプレートのコンテンツ内での双方向の ASP.NET データ バインド構文を使用してバインドされた値の名前/値ペアのセットを取得します。"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);
    parameters:
    - id: container
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>名前/値ペアを抽出するため、渡しされる、データ バインド コントロール双方向データ バインディングのシナリオに関連付けられているデータ ソース コントロールにします。"
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref>名前/値ペア。 名前はテンプレートのコンテンツ内のコントロールの名前を表し、値は双方向の ASP.NET データ バインド構文を使用してバインド プロパティの値の現在の値。"
  overload: System.Web.UI.IBindableTemplate.ExtractValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)
  parent: System.Web.UI.IBindableTemplate
  isExternal: false
  name: ExtractValues(Control)
  nameWithType: IBindableTemplate.ExtractValues(Control)
  fullName: System.Web.UI.IBindableTemplate.ExtractValues(Control)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.IBindableTemplate.ExtractValues*
  parent: System.Web.UI.IBindableTemplate
  isExternal: false
  name: ExtractValues
  nameWithType: IBindableTemplate.ExtractValues
