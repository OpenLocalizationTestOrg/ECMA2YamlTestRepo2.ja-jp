### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsContext
  id: SettingsContext
  children:
  - System.Configuration.SettingsContext.#ctor
  langs:
  - csharp
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
  type: Class
  summary: "設定を保持するときに、プロバイダーを使用してコンテキスト情報を提供します。"
  remarks: "SettingsContext クラスは、設定プロバイダーにコンテキスト情報を提供するアプリケーションで使用される基本クラスです。 クラスは抽象ではありません、SettingsContext クラスから継承し、プロバイダーの特定の種類に追加情報を提供する特殊なクラスを作成するアプリケーションを引き起こすことができます。 プロバイダーは、プロパティの書き込み時に、コンテキストの設定を確認し、できます。       SettingsContext クラスの主な目的を使用する機能を提供する、<xref:System.Configuration.SettingsBase>クラスと関連するインフラストラクチャ</xref:System.Configuration.SettingsBase>。 SettingsContext クラスによって格納されているプロパティのデータに関する追加の機能に固有のコンテキスト情報を提供する、<xref:System.Configuration.SettingsBase>インスタンス</xref:System.Configuration.SettingsBase>。 したがって、そこから (または他の設定 * クラスから) を派生させることがなく SettingsContext クラスに追加情報を格納する非常に単純なは追加の機能に固有のコンテキスト情報をサポートするためにします。       によって管理されているデータに関連付けられているユーザー名に渡すときに、ASP.NET が SettingsContext クラスを使用するなど、<xref:System.Configuration.SettingsBase>インスタンスだけでなく、ユーザーが認証されたと見なすかどうかを示すプロパティです</xref:System.Configuration.SettingsBase>。 この方法では、ASP.NET は、認証と匿名のプロファイル データを識別する SettingsContext クラスを使用します。"
  syntax:
    content: 'public class SettingsContext : System.Collections.Hashtable'
  inheritance:
  - System.Object
  - System.Collections.Hashtable
  implements: []
  inheritedMembers:
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  platform:
  - net462
- uid: System.Configuration.SettingsContext.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsContext
  langs:
  - csharp
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>クラスです。"
  syntax:
    content: public SettingsContext ();
    parameters: []
  overload: System.Configuration.SettingsContext.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.Hashtable
  isExternal: false
  name: System.Collections.Hashtable
- uid: System.Configuration.SettingsContext.#ctor
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
- uid: System.Configuration.SettingsContext.#ctor*
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext.SettingsContext
