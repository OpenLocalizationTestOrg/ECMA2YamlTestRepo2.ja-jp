### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageQuery
  id: MessageQuery
  children:
  - System.ServiceModel.Dispatcher.MessageQuery.#ctor
  - System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageQuery
  nameWithType: MessageQuery
  fullName: System.ServiceModel.Dispatcher.MessageQuery
  type: Class
  summary: "メッセージ内の特定の関連付けを行うデータの検索に使用するクラスの主な動作を定義します。"
  remarks: "MessageQuery クラスが<xref:System.ServiceModel.Dispatcher.MessageFilter>クラス</xref:System.ServiceModel.Dispatcher.MessageFilter>に似ています。  ただしの一致を返さず、代わりに、<xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A>メッセージに対してクエリを評価した結果を返します</xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A>。 クエリの結果は、メッセージ内の値です。 キーとして、メッセージを他のメッセージを関連付けるために値を使用します。 データの新しいプロパティを追加するには、<xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A><xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>クラス</xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>のメソッド</xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A>を使用します。      > [!NOTE] >、MessageQuery の具象実装、<xref:System.ServiceModel.XPathMessageQuery>クラス</xref:System.ServiceModel.XPathMessageQuery>を参照してください。      ## クエリ処理を最適化するには、クエリ オブジェクトのセットを作成して、<xref:System.ServiceModel.Dispatcher.MessageQueryCollection>クラス</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>のインスタンスに挿入し、使用と MessageQueryCollection クラスを使用します。      > [!NOTE] > 具象の実装については<xref:System.ServiceModel.Dispatcher.MessageQueryCollection><xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>クラス</xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>を参照してください</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>       一般的な使用方法、同じ XPath 述語があるが、最後のリーフ値のみで異なるクエリを使用して、コレクションへの追加を開始します。 たとえば、次の XPath クエリは最後の句を除いて同一です。 数量属性を 1 に設定して、製品属性を持つ要素を 2 番目のクエリは、&quot;Contoso&quot; に設定しているすべての要素に対する最初のクエリ): ```   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &quot;Contoso&quot;]&quot;   ``` 、<xref:System.ServiceModel.Dispatcher.MessageQueryCollection>クラスでは、少しより効率的に処理を有効にすると、違いのクエリのテーブルを作成することができます</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>。       また、使用することができます、<xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>を保存し、メッセージ クエリを評価するクラス</xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>。"
  example:
  - "The following example creates a message and XPath message queries. The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object. The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.  \n  \n [!code-vb[XPathMessageQuery#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_8_1.vb)]\n [!code-cs[XPathMessageQuery#0](~/add/codesnippet/csharp/t-system.servicemodel.di_8_1.cs)]"
  syntax:
    content: public abstract class MessageQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Dispatcher.MessageQuery&quot;> </xref>クラスです。"
  syntax:
    content: protected MessageQuery ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  id: CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "特定の関連付けられているデータ型を取得するクエリのコレクションを作成します。"
  remarks: "このメソッドは、<xref:System.ServiceModel.Dispatcher.MessageQueryCollection>クラス</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>によって使用されるもの"
  syntax:
    content: public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.MessageQueryCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.MessageQueryCollection&quot;></xref>データ型に関連付けられているクエリのコレクション。"
  overload: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  id: Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "追加します。"
    return:
      type: TResult
      description: "追加します。"
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  id: Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "追加します。"
    return:
      type: TResult
      description: "追加します。"
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
- uid: System.ServiceModel.Dispatcher.MessageQueryCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageQueryCollection
  nameWithType: MessageQueryCollection
  fullName: System.ServiceModel.Dispatcher.MessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery
  nameWithType: MessageQuery.MessageQuery
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection
  nameWithType: MessageQuery.CreateMessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate<TResult>
  nameWithType: MessageQuery.Evaluate<TResult>
