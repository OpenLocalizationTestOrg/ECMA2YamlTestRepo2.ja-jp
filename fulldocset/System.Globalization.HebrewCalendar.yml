### YamlMime:ManagedReference
items:
- uid: System.Globalization.HebrewCalendar
  id: HebrewCalendar
  children:
  - System.Globalization.HebrewCalendar.#ctor
  - System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AlgorithmType
  - System.Globalization.HebrewCalendar.Eras
  - System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  - System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  - System.Globalization.HebrewCalendar.HebrewEra
  - System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.MaxSupportedDateTime
  - System.Globalization.HebrewCalendar.MinSupportedDateTime
  - System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HebrewCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HebrewCalendar
  nameWithType: HebrewCalendar
  fullName: System.Globalization.HebrewCalendar
  type: Class
  summary: "ヘブライ暦を表します。"
  remarks: "ヘブライ暦は&2; つの時代 (年号) を認識: ほか、 (前の一般的な時代 (年号)) に、と a. m. (&quot;Anno Mundi&quot;、「世界中の年」を意味ラテン文字)。 HebrewCalendar クラスのこの実装では、現在の時代 (午前)、ヘブライ語年 5999 に 5343 (1583 に 2239 構成のグレゴリオ暦カレンダー) を認識します。      > [!NOTE] > について HebrewCalendar クラスと、その他の calendar クラスを使用して、.NET Framework では、次を参照してください。[カレンダーの使用](~/add/includes/ajax-current-ext-md.md)です。       19 年周期 19、第 3、6、8、11、14th で割り切れるを年で終わる、17 日から 19 の年がうるう年でした。 休日の配置に応じて 355 の日に 353 から平年ことができます。 日数 383 から閏年であることができます。       ヘブライ暦が平年とうるう年中に 13 か月間の 12 か月: |GetMonth 値 (一般的な年) |GetMonth 値 (うるう年) |月 |一般的な年の日 |うるう年の日 |  |------------------------------------|----------------------------------|-----------|--------------------------|------------------------|  | 1 | 1 | תשרי (Tishrei) | 30 | 30 |  | 2 | 2 | חשון (Cheshvan) | 29/30 | 29/30 |  | 3 | 3 | כסלו (Kislev) | 29/30 | 29/30 |  | 4 | 4 | טבת (Tevet) | 29 | 29 |  | 5 | 5 | שבט (Shevat) | 30 | 30 |  | 6 |-| אדר (たとえば) | 29 |-|  |-| 6 | אדר א (たとえば Alef) |-| 30 |  |-| 7 | אדר ב (では) |-| 29 |  | 7 | 8 |ניסן (同社) | 30 | 30 |  | 8 |9 | אייר (Iyar) | 29 | 29 |  | 9 | 10 | סיון (Sivan) | 30 | 30 |  | 10 | 11 | תמוז (Tamuz) | 29 | 29 |  | 11 | 12 | אב (Av) | 30 | 30 |  | 12 | 13 | אלול (Elul) | 29 | 29 |      Cheshvan および Kislev 日数は、祝日の配置によって異なります。 閏年では、たとえばに置き換えられますで Alef によって 30 日間とでは 29 日。 たとえば Alef は閏月と見なされます。 たとえば Alef とで日と見なされるすべての最終日 leap 日です。つまり、<xref:System.Globalization.HebrewCalendar.IsLeapDay%2A>メソッドを返します`true`曜日。</xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> 。       西暦 2001 年 1 月 1 日の日付 構成のグレゴリオ暦カレンダーにおける年 Tevet の 6 日に相当は 5761 ヘブライ暦で。       各<xref:System.Globalization.CultureInfo>予定表のセットをサポートしています</xref:System.Globalization.CultureInfo>。 <xref:System.Globalization.CultureInfo.Calendar%2A>プロパティを返します、カルチャの既定のカレンダーと<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>プロパティは、カルチャでサポートされているすべてのカレンダーを含む配列を返します</xref:System.Globalization.CultureInfo.OptionalCalendars%2A></xref:System.Globalization.CultureInfo.Calendar%2A>。 <xref:System.Globalization.CultureInfo>アプリケーションが<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>新しい<xref:System.Globalization.Calendar>。</xref:System.Globalization.Calendar></xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>のプロパティ</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>を設定する必要があります</xref:System.Globalization.CultureInfo>で使用される暦に変更するには"
  example:
  - "The following example creates a file that contains the date ranges supported by the HebrewCalendar class, and displays the number of days in each month of the year 5772.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.h_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.h_1.vb)]  \n  \n The example instantiates a HebrewCalendar object and makes it the current calendar of a Hebrew (Israel) <xref:System.Globalization.CultureInfo> object. It then makes Hebrew (Israel) the current thread culture. This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HebrewCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>クラスです。"
  syntax:
    content: public HebrewCalendar ();
    parameters: []
  overload: System.Globalization.HebrewCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "<xref:System.DateTime>つまり、指定した月数指定<xref:System.DateTime>。</xref:System.DateTime>から離れた場所</xref:System.DateTime>を返します"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。       結果の日の部分<xref:System.DateTime>が影響を受けるは、結果の日は、結果として得られる結果の年の月の有効な曜日ではない場合</xref:System.DateTime>。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果として得られる<xref:System.DateTime>結果の月が指定された<xref:System.DateTime>。</xref:System.DateTime>の年を超えた場合は、影響を受ける</xref:System.DateTime>の年の部分 この実装では、現在の時代のみをサポートします。 したがって、<xref:System.ArgumentException>結果の年が指定された<xref:System.DateTime>。</xref:System.DateTime>の時代 (年号) を超えた場合にスローされます。</xref:System.ArgumentException> 結果として得られる<xref:System.DateTime>は指定した<xref:System.DateTime>。</xref:System.DateTime>と同じ</xref:System.DateTime>の時刻の部分       たとえば、指定した月がある Av、30 日間、指定された日付の値と、その月の 30 日、`months`パラメーターが 5 の場合、結果として得られる年は 1 つ以上の指定した年、月が Tevet、日、29 日、最後の日 Tevet であります。       場合の値、`months`パラメーターが負の場合、<xref:System.DateTime>指定した<xref:System.DateTime>.</xref:System.DateTime>よりも前か</xref:System.DateTime>の結果として得られる       <xref:System.DateTime.Kind%2A>返される<xref:System.DateTime>値は常に等しい<xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A> 保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出して、<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>メソッドは、次の例のように</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName></xref:System.DateTime.Kind%2A>。       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.h_20_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.h_20_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_20_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_20_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_20_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を追加する`months`</xref:System.DateTime>。"
    - id: months
      type: System.Int32
      description: "追加する月数です。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>指定した<xref:System.DateTime>。</xref:System.DateTime>指定月数を追加した結果であります。</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "その結果<xref:System.DateTime>はサポートされている範囲外です</xref:System.DateTime>。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>-120,000 120,000 より大きいか未満です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "<xref:System.DateTime>つまり、指定した年数指定<xref:System.DateTime>。</xref:System.DateTime>から離れた場所</xref:System.DateTime>を返します"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。       結果の日の部分<xref:System.DateTime>が影響を受けるは、結果の日は、結果として得られる結果の年の月の有効な曜日ではない場合</xref:System.DateTime>。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 たとえば、cheshvan 29 日または 30 日間、休日の配置によって異なります。 現在の年の 30 日間および次の年では 29 Cheshvan であることをとします。 指定した日付が現在の年の 30 日と値の場合`years`1 の場合は、結果として得られる日付は次の年の Cheshvan 29 日になります。       結果の月部分<xref:System.DateTime>が影響を受けるは、その月がその年の月が有効でない場合</xref:System.DateTime>。 結果の年の有効な最後の月に変更されます。 たとえば場合で、月、`time`パラメーターであり、閏年の 13 番目の月の値`years`の月、その結果を 1 に設定されて<xref:System.DateTime>、うるう年以外は、次の年の 12 か月目は、</xref:System.DateTime> 。 月の部分が変更されない場合でも、可能性がありますも参照している別の月に注意してください。 たとえばではうるう年の 7 番目の月は同社 7 月共通の年。       この実装では、現在の時代のみをサポートします。 したがって、<xref:System.ArgumentException>結果の年が指定された<xref:System.DateTime>。</xref:System.DateTime>の時代 (年号) を超えた場合にスローされます。</xref:System.ArgumentException>       結果として得られる<xref:System.DateTime>は指定した<xref:System.DateTime>。</xref:System.DateTime>と同じ</xref:System.DateTime>の時刻の部分       場合`years`が負の値、<xref:System.DateTime>指定した<xref:System.DateTime>.</xref:System.DateTime>よりも前か</xref:System.DateTime>の結果として得られる       <xref:System.DateTime.Kind%2A>返される<xref:System.DateTime>値は常に等しい<xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A> 保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出して、<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>メソッドは、次の例のように</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName></xref:System.DateTime.Kind%2A>。       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.h_6_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.h_6_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_6_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_6_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_6_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を追加する`years`</xref:System.DateTime>。"
    - id: years
      type: System.Int32
      description: "追加する年の数。"
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>指定した<xref:System.DateTime>。</xref:System.DateTime>指定年数を追加した結果であります。</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "その結果<xref:System.DateTime>はサポートされている範囲外です</xref:System.DateTime>。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "現在の暦の太陽暦、太陰暦、または両方の組み合わせを示す値を取得します。"
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.h_6_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.h_6_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "常に返します<xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.Eras
  id: Eras
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "時代 (年号) の一覧を取得、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>です。"
  remarks: 'ヘブライ暦は&2; つの時代 (年号) を認識: ほか、 (前の一般的な時代 (年号)) に、と a. m. (&quot;Anno Mundi&quot;、「世界中の年」を意味ラテン文字)。 この実装、<xref:System.Globalization.HebrewCalendar>クラスは、現在の時代 (午前) のみを認識します</xref:System.Globalization.HebrewCalendar>。 このプロパティは、常に&1; つだけの要素を含む配列を返します。'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "時代 (年号) を表す整数の配列、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>型です。 戻り値と等しい要素を&1; つを含む配列では常に<xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>における月の日を返します。"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_8_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_8_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_8_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.Int32
      description: "指定した<xref:System.DateTime>。</xref:System.DateTime>における月の日を表す 30 を 1 から整数"
  overload: System.Globalization.HebrewCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>週の曜日を返します。"
  remarks: "<xref:System.DayOfWeek>値は次のとおり: |DayOfWeek 値 |週の日 |  |---------------------|-----------------|  |日曜日 | יום ראשון (贖罪 Rishon) |  |月曜日 | יום שני (贖罪 Sheni) |  |火曜日 | יום שלישי (贖罪 Shlishi) |  |水曜日 | יום רביעי (贖罪 Reviee) |  |木曜日 | יום חמישי (贖罪 Chamishi) |  |金曜日 | יום שישי (贖罪 Shishi) |  |土曜日 | שבת (Shabat) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_7_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_7_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_7_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>指定した<xref:System.DateTime>。</xref:System.DateTime>週の曜日を表す値</xref:System.DayOfWeek>"
  overload: System.Globalization.HebrewCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>その年の日付を返します"
  remarks: "その年の日付は、その年の最初の日付から日数として定義されます。 たとえば、最初の月の最初の日の GetDayOfYear は 1 を返し、過去 1 か月の最後の日の GetDayOfYear <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>。</xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>によって返される値と同じですが、その年の日数の合計数を返します       この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_18_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_18_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_18_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.Int32
      description: "指定した<xref:System.DateTime>。</xref:System.DateTime>における年の日を表す 385 を 1 から整数"
  overload: System.Globalization.HebrewCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>構成のグレゴリオ暦カレンダーにおける、1583 年 9 月 17日よりも前かより大きい<xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定された年の指定した月の日数を返します。"
  remarks: "たとえば、このメソッドは、祝日の配置に応じてに、29 または 30 を返します。       この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  example:
  - "The following code example calls `GetDaysInMonth` for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5dbfbdd4-f075-4989-90c3-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5dbfbdd4-f075-4989-90c3-_1.cpp)]\n [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5dbfbdd4-f075-4989-90c3-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: month
      type: System.Int32
      description: "月を表す 1 ~ 13 の整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_Calendar.Eras[Calendar.CurrentEra]&quot; name=&quot;Calendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した時代 (年号) の指定した年の指定した月の日数。"
  overload: System.Globalization.HebrewCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、または<code>era</code>で現在サポートされている範囲外である<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年の日数を返します。"
  remarks: "たとえば、このメソッドは整数を返しますの 353 ~ 355 または 383 ~ 385、休日の配置とかどうかによって`year`が閏年であります。       この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_15_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_15_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_15_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した時代 (年号) の指定された年の日数の数。"
  overload: System.Globalization.HebrewCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>または<code>era</code>で現在サポートされている範囲外である<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>時代 (年号) を返します。"
  remarks: 'ヘブライ暦は&2; つの時代 (年号) を認識: ほか、 (前の一般的な時代 (年号)) に、と a. m. (&quot;Anno Mundi&quot;、「世界中の年」を意味ラテン文字)。 この実装、<xref:System.Globalization.HebrewCalendar>クラスは、現在の時代 (午前)、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_2_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_2_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_2_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.Int32
      description: "指定した<xref:System.DateTime>。</xref:System.DateTime>時代 (年号) を表す整数 戻り値は常に<xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した年と時代 (年号) の閏月を計算します。"
  remarks: "閏月の概念をサポートする予定表、閏月は特定の月の後、または年のすべての月の後にことができます。 たとえば、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッドは、1 ~ 13 を示す、指定した日に関連付けられている月の範囲数を返します</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>。 場合は、その年の 8 と 9 番目の月が閏月、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッド leap 8 番目の月を 9 と 10 の 9 番目の月の 8 番目の月の 8 が返されます</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>。"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した年と時代 (年号) の閏月を示す正の整数。 場合、戻り値は 7、 <code> year </code>と<code> era </code>年が閏年である場合、閏年または 0 をパラメーターが指定されます。"
  overload: System.Globalization.HebrewCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>is not <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.       - または - <code>year</code> 5343 またはヘブライ語のカレンダー年 5999 より大きい値がヘブライ語のカレンダー年度より小さい。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>の月を返します"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.Int32
      description: "1 ~ 13 の整数を指定した<xref:System.DateTime>。</xref:System.DateTime>で月を表す"
  overload: System.Globalization.HebrewCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>より小さい<xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*>以上<xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年、月の数を返します。"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  example:
  - "The following code example calls `GetMonthsInYear` for five years in each era.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_11_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_11_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_11_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した時代 (年号) の指定した年の月数です。 戻り値は 12 共通の年度またはうるう年に 13 です。"
  overload: System.Globalization.HebrewCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>または<code>era</code>で現在サポートされている範囲外である<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した年が返されます<xref:System.DateTime>値</xref:System.DateTime>。"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_10_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_10_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_10_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>を読み取れません</xref:System.DateTime>。"
    return:
      type: System.Int32
      description: "指定した年を表す整数<xref:System.DateTime>値</xref:System.DateTime>。"
  overload: System.Globalization.HebrewCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>現在のサポート範囲外である<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.HebrewEra
  id: HebrewEra
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "現在の時代 (年号) を表します。 このフィールドは定数です。"
  remarks: "このフィールドの値は 1 です。       ヘブライ暦は&2; つの時代 (年号) を認識: ほか、 (前の一般的な時代 (年号)) に、と a. m. (&quot;Anno Mundi&quot;、「世界中の年」を意味ラテン文字)。 この実装、<xref:System.Globalization.HebrewCalendar>クラスは、現在の時代 (午前) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  syntax:
    content: public static readonly int HebrewEra;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した日付が閏日であるかどうかを判断します。"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。       19 年周期 19、第 3、6、8、11、14th で割り切れるを年で終わる、17 日から 19 の年がうるう年でした。 休日の配置に応じて 355 の日に 353 から平年ことができます。 日数 383 から閏年であることができます。       閏日は、閏年であるだけで発生する日です。 ヘブライ語の予定表では、たとえば Alef とで日と見なされるすべての最後の日は日 leap です。"
  example:
  - "The following code example calls `IsLeapDay` for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/38cad6f1-3b2e-4eba-a2c2-_1.vb)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/csharp/38cad6f1-3b2e-4eba-a2c2-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/cpp/38cad6f1-3b2e-4eba-a2c2-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: month
      type: System.Int32
      description: "月を表す 1 ~ 13 の整数。"
    - id: day
      type: System.Int32
      description: "日を表す 1 から 30 の整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定された日付が閏日である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、 <code>day</code>、または<code>era</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年の指定した月が閏月かどうかを判断します。"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。       19 年周期 19、第 3、6、8、11、14th で割り切れるを年で終わる、17 日から 19 の年がうるう年でした。 休日の配置に応じて 355 の日に 353 から平年ことができます。 日数 383 から閏年であることができます。       閏月は、うるう年でのみ発生する月全体です。 ヘブライ語のカレンダーでは唯一の閏月です。"
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/d066565d-c7e6-4287-a20b-_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/d066565d-c7e6-4287-a20b-_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/d066565d-c7e6-4287-a20b-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: month
      type: System.Int32
      description: "月を表す 1 ~ 13 の整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した月が閏月; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、または<code>era</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年が閏年であるかどうかを判断します。"
  remarks: "この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。       19 年周期 19、第 3、6、8、11、14th で割り切れるを年で終わる、17 日から 19 の年がうるう年でした。 休日の配置に応じて 355 の日に 353 から平年ことができます。 日数 383 から閏年であることができます。"
  example:
  - "The following code example calls `IsLeapYear` for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.h_1_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_1_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.h_1_1.cpp)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した年が閏年である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.HebrewCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>または<code>era</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "最新の日付と時刻でサポートされている取得、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>型です。"
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最新の日付と時刻でサポートされている、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>と同じ年 9 月、29、2239 西暦の最後の時点に入力します。 グレゴリオ暦です。"
  overload: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "最初の日付と時刻でサポートされている取得、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>型です。"
  remarks: "Microsoft Visual Basic は、<xref:System.DateTime>西暦 0001 年 1 月 1 日である型</xref:System.DateTime>でサポートされる日付の最小値で指定された時間として 1 日の時間を表します ただし、<xref:System.Globalization.HebrewCalendar>型は、その日付の最小値をサポートしていません</xref:System.Globalization.HebrewCalendar>。 その結果、現在の暦を使用して時刻の書式を設定するメソッドを呼び出し、書式指定子を指定しない場合は、ISO 8601 並べ替え可能な (&quot;s&quot;) 書式指定は日付/時刻既定の [全般] (&quot;G&quot;) の日付/時刻のパターン書式指定子ではなくパターン書式指定子。 詳細については、次を参照してください。[標準の日付と時刻の書式指定文字列](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_4_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_4_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_4_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最も古い日付と時刻でサポートされている、 <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>は年 1 月、1、1583 西暦の最初の瞬間に相当する型 グレゴリオ暦です。"
  overload: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返します、<xref:System.DateTime>指定した日付と時刻を指定した時代 (年号) に設定されている</xref:System.DateTime>。"
  remarks: "ToDateTime メソッドは、現在の暦で日付グレゴリオ暦の日付に変換できるので便利です。 グレゴリオ暦の日付、後で使用できます、たとえば、さまざまなカレンダーの日付を比較または等価の日付を特定の暦で作成します。       この実装、<xref:System.Globalization.HebrewCalendar>クラスは、ヘブライ語年 5999 に 5343 (1583 に 2239 グレゴリオ暦) のみを認識します</xref:System.Globalization.HebrewCalendar>。"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "年を表す整数。"
    - id: month
      type: System.Int32
      description: "月を表す 1 ~ 13 の整数。"
    - id: day
      type: System.Int32
      description: "日を表す 1 から 30 の整数。"
    - id: hour
      type: System.Int32
      description: "時間を表す 0 ~ 23 の整数。"
    - id: minute
      type: System.Int32
      description: "分を表す 0 ~ 59 の整数。"
    - id: second
      type: System.Int32
      description: "秒を表す 0 ~ 59 の整数。"
    - id: millisecond
      type: System.Int32
      description: "ミリ秒を表す 0 ~ 999 の整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号) を表す整数。 Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>指定した日付と時刻を現在の時代 (年号) に設定されている</xref:System.DateTime>。"
  overload: System.Globalization.HebrewCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、<code>day</code>または<code>era</code>で現在サポートされている範囲外である<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクト。       - または -<code>hour</code>が 0 未満か、23 を超えています。       - または -<code>minute</code>が 0 未満か、59 より大きい。       - または -<code>second</code>が 0 未満か、59 より大きい。       - または -<code>millisecond</code>が 0 未満か、999 を超えています。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "使用して、指定された年を 4 桁の年に変換、<xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>プロパティを適切な世紀を決定します</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>。"
  remarks: "ToFourDigitYear メソッドを使用して、 `year` 、パラメーター、<xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>プロパティ、および年を 4 桁の年を計算します</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>。 4 桁の年は唯一の検索によって決定されます、`year`その 100 年間の範囲内のパラメーターです。 たとえば場合、<xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>設定されているが、100 年の範囲は 5630 から解釈</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>。 そのため、30 の値は、値は 29 と 5729 として解釈されます、5630 として解釈されます。       場合、<xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>プロパティには、特殊な値 99、ToFourDigitYear メソッドは、地域の設定を無視、および言語は、コントロール パネルの オプションしの値を返します、`year`パラメーター</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 。       ToFourDigitYear には、2 桁または&4; 桁の年のいずれかがサポートしています。 値によると 4 桁の値に変換するメソッドを 2 桁の年の値 (100 よりも小さい) を渡すと、<xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>適切な 4 桁の年を表す値</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>。 ToFourDigitYear にサポートされている暦の範囲内にある&4; 桁の年の値を提供すると、アプリケーションの場合は、実際の入力値を返します。 アプリケーションはサポートされているカレンダー範囲では、4 桁の値が指定した場合、または負の値が渡された場合は、メソッドは例外をスローします。"
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "0 ~ 99 の場合、または、4 桁ヘブライ暦の年 5343 ~ 5999 から 2 桁の年。"
    return:
      type: System.Int32
      description: "場合、 <code> year </code>は 2 桁の年、パラメーター、戻り値は、対応する 4 桁の年。 場合、 <code> year </code>パラメーターは、4 桁の年、戻り値は、変更されていない<code> year </code>パラメーター。"
  overload: System.Globalization.HebrewCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>0 未満です。       - または -<code>year</code>はより小さい<xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*>より大きいまたは<xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>です。"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得または 2 桁の年を表すことができる 100 年の範囲の最後の年を設定します。"
  remarks: "TwoDigitYearMax プロパティでは 2 桁の年を 4 桁の年に適切に変換します。 たとえば、このプロパティが設定されている場合、100 年範囲は 5630 です。 そのため、30 の 2 桁の値は、2 桁の値は 29 と 5729 として解釈されます、5630 として解釈されます。       このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。 アプリケーションの有効期間中にシステムの初期設定が変わります、<xref:System.Globalization.HebrewCalendar>クラスが、変更を自動的に検出されません</xref:System.Globalization.HebrewCalendar>。       特殊値 99 原因、<xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>をシステムの設定を無視し、指定した年を返すメソッドが変更されません</xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>。"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "2 桁の年を表すことができる 100 年の範囲の最後の年。"
  overload: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在<xref href=&quot;System.Globalization.HebrewCalendar&quot;></xref>オブジェクトは読み取り専用です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "操作では、セット、ヘブライ語のカレンダー年の値は 5343 より小さいが、99、または年の値よりも大きい 5999 します。"
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.HebrewCalendar.#ctor
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
- uid: System.Globalization.HebrewCalendar.HebrewEra
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
- uid: System.Globalization.HebrewCalendar.#ctor*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar
  nameWithType: HebrewCalendar.HebrewCalendar
- uid: System.Globalization.HebrewCalendar.AddMonths*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HebrewCalendar.AddMonths
- uid: System.Globalization.HebrewCalendar.AddYears*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears
  nameWithType: HebrewCalendar.AddYears
- uid: System.Globalization.HebrewCalendar.AlgorithmType*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HebrewCalendar.GetDayOfMonth
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HebrewCalendar.GetDayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HebrewCalendar.GetDayOfYear
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HebrewCalendar.GetDaysInMonth
- uid: System.Globalization.HebrewCalendar.GetDaysInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HebrewCalendar.GetDaysInYear
- uid: System.Globalization.HebrewCalendar.GetEra*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra
  nameWithType: HebrewCalendar.GetEra
- uid: System.Globalization.HebrewCalendar.GetLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HebrewCalendar.GetLeapMonth
- uid: System.Globalization.HebrewCalendar.GetMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HebrewCalendar.GetMonth
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HebrewCalendar.GetMonthsInYear
- uid: System.Globalization.HebrewCalendar.GetYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear
  nameWithType: HebrewCalendar.GetYear
- uid: System.Globalization.HebrewCalendar.IsLeapDay*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HebrewCalendar.IsLeapDay
- uid: System.Globalization.HebrewCalendar.IsLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HebrewCalendar.IsLeapMonth
- uid: System.Globalization.HebrewCalendar.IsLeapYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HebrewCalendar.IsLeapYear
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HebrewCalendar.ToDateTime
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HebrewCalendar.ToFourDigitYear
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
