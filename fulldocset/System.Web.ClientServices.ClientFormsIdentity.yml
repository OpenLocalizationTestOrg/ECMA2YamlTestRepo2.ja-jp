### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "フォーム認証を使用してクライアント アプリケーション サービスに対して認証されたユーザー id を表します。"
  remarks: "クライアント アプリケーション サービスの機能では、このクラスを使用して、認証されたユーザーを表します。 クライアント アプリケーション サービスとフォーム認証を使用するアプリケーションを構成するときに呼び出すことによってユーザーを認証することができます、 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>メソッド</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>。 認証後、を介して現在 ClientFormsIdentity インスタンスへの参照を取得することができます、<xref:System.Security.Principal.IPrincipal.Identity%2A>のプロパティ、<xref:System.Security.Principal.IPrincipal>を介して取得、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName></xref:System.Security.Principal.IPrincipal></xref:System.Security.Principal.IPrincipal.Identity%2A>。 詳細については、次を参照してください。[クライアント アプリケーション サービス](~/add/includes/ajax-current-ext-md.md)です。       通常、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照</xref:System.Security.Principal.IIdentity>として ClientFormsIdentity オブジェクトにアクセスする、 チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id のプロパティ</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>。 ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>プロパティの値は&quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       呼び出す ClientFormsIdentity の明示的な参照を使用する必要があります、<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>メソッドで、によって定義されていない、<xref:System.Security.Principal.IIdentity>インターフェイス</xref:System.Security.Principal.IIdentity></xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>。"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>クラスです。"
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "認証されたユーザーの名前です。"
    - id: password
      type: System.String
      description: "認証されたユーザーのパスワードです。"
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "メンバーシップ プロバイダーは、ユーザーを認証するために使用します。"
    - id: authenticationType
      type: System.String
      description: "使用される認証の種類。"
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが認証されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "Cookie は、認証サービスから取得されます。"
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "認証サービスから取得されたクッキーのコレクションを取得します。"
  remarks: "このプロパティは、アプリケーション コードで使用するためのものではありません。 このプロパティを介して取得された cookie を変更することはできません明確と有用な情報がないです。"
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "Cookie は、認証サービスから取得されます。"
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "ユーザーの認証に使用される認証の種類を取得します。"
  remarks: "通常<xref:System.Web.ClientServices.ClientFormsIdentity>、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照</xref:System.Security.Principal.IIdentity>としてオブジェクト</xref:System.Web.ClientServices.ClientFormsIdentity>にアクセスする、 チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id のプロパティ</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>。 ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>プロパティの値は&quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 詳細については、次を参照してください、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスの概要。</xref:System.Web.ClientServices.ClientFormsIdentity> 。"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "ユーザーの認証に使用される認証の種類。"
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;></xref>です。"
  remarks: "<xref:System.Web.ClientServices.ClientFormsIdentity>。</xref:System.Web.ClientServices.ClientFormsIdentity>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Web.ClientServices.ClientFormsIdentity>使用不可の状態</xref:System.Web.ClientServices.ClientFormsIdentity>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Web.ClientServices.ClientFormsIdentity>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Web.ClientServices.ClientFormsIdentity>占有されていた</xref:System.Web.ClientServices.ClientFormsIdentity></xref:System.Web.ClientServices.ClientFormsIdentity>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Web.ClientServices.ClientFormsIdentity></xref:System.Web.ClientServices.ClientFormsIdentity>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Web.ClientServices.ClientFormsIdentity>オブジェクトの`Finalize`メソッド</xref:System.Web.ClientServices.ClientFormsIdentity>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose()`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`éý`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.Web.ClientServices.ClientFormsIdentity>参照。</xref:System.Web.ClientServices.ClientFormsIdentity> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "ユーザーが認証されているかどうかを示す値を取得します。"
  remarks: "通常<xref:System.Web.ClientServices.ClientFormsIdentity>、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照</xref:System.Security.Principal.IIdentity>としてオブジェクト</xref:System.Web.ClientServices.ClientFormsIdentity>にアクセスする、 チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id のプロパティ</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>。 ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>プロパティの値は&quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 詳細については、次を参照してください、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスの概要。</xref:System.Web.ClientServices.ClientFormsIdentity> 。"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが認証されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "ユーザーの名前を取得します。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "ユーザーの名前です。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "ユーザーを認証するために使用するメンバーシップ プロバイダーを取得します。"
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "ユーザーを認証するために使用するメンバーシップ プロバイダー。"
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "サイレント モードでキャッシュされた資格情報を使用して、ユーザーを認証します。"
  remarks: "フォーム認証を使用して、現在のユーザーを検証するときに、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスは、アプリケーションが実行されている限り、ユーザーの資格情報を格納します</xref:System.Web.ClientServices.ClientFormsIdentity>。 ただし、認証 cookie の有効期限が切れるまで、ユーザーは認証のみです。 Cookie が経過すると、リモート ロールまたは Web 設定サービスにアクセスするには、ユーザーを再検証する必要があります。 使用することができます、**サービスの詳細設定**」の説明に従って、ユーザーを自動的に再検証するアプリケーションの構成 ダイアログ ボックス[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。 ただし、cookie の有効期限を優先するアプリケーションを構成する場合ことができますプログラムによって再検証するユーザー RevalidateUser メソッドを呼び出します。 このメソッドもオフライン モードからオンライン モードに切り替える際、アプリケーションがシャット ダウンされたため間、オフラインです。      > [!NOTE] >、RevalidateUser メソッドは便宜的なもののみです。 戻り値がないために、再検証が失敗したかどうかを示すことはできません。 再検証に失敗し、たとえば、サーバーでユーザーの資格情報が変更された場合。 この場合、サービスの呼び出しが失敗した後にユーザーを明示的に検証コードを含めることができます。 詳細については、Web 設定へのアクセス」セクションを参照してください。[チュートリアル: クライアント アプリケーション サービスを使用する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
