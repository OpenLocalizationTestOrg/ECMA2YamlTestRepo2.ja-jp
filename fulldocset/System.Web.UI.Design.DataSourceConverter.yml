### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DataSourceConverter
  id: DataSourceConverter
  children:
  - System.Web.UI.Design.DataSourceConverter.#ctor
  - System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  langs:
  - csharp
  name: DataSourceConverter
  nameWithType: DataSourceConverter
  fullName: System.Web.UI.Design.DataSourceConverter
  type: Class
  summary: "現在のコンポーネントにアクセスできるデータ ソースの一覧を取得する型コンバーターを提供します。"
  remarks: "DataSourceConverter は、現在のデザイン時コンポーネントにアクセスできるデータ ソースの一覧の取得に使用できるメソッドを提供します。       この型コンバーターを使用して[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]でソース データの一覧に表示される値を指定する、**プロパティ**ウィンドウです。      > [!CAUTION] > 型コンバーターに直接アクセスする必要があることはありません。 代わりに、適切なコンバーター <xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>を使用して、 詳細については、<xref:System.ComponentModel.TypeConverter>基底クラス</xref:System.ComponentModel.TypeConverter>の例を参照してください。       型コンバーターの詳細については、次を参照してください、<xref:System.ComponentModel.TypeConverter>基底クラスと[する方法: 実行する型コンバーターを実装する](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter> 。"
  example:
  - >-
    [!code-cs[DataSourceTypeConverterExamples#4](~/add/codesnippet/csharp/t-system.web.ui.design.d_4_1.cs)]
     [!code-cpp[DataSourceTypeConverterExamples#4](~/add/codesnippet/cpp/t-system.web.ui.design.d_4_1.cpp)]
     [!code-vb[DataSourceTypeConverterExamples#4](~/add/codesnippet/visualbasic/t-system.web.ui.design.d_4_1.vb)]
  syntax:
    content: 'public class DataSourceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: DataSourceConverter()
  nameWithType: DataSourceConverter.DataSourceConverter()
  fullName: System.Web.UI.Design.DataSourceConverter.DataSourceConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Design.DataSourceConverter&quot;> </xref>クラスです。"
  syntax:
    content: public DataSourceConverter ();
    parameters: []
  overload: System.Web.UI.Design.DataSourceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "コンバーターが、指定したソースの種類のオブジェクトをコンバーターのネイティブ型に変換できるかどうかを示す値を取得します。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>追加のコンテキスト情報を取得するために使用できます。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>から変換する型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンバーターが変換を実行できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       このメソッドは常に返します、このクラスに実装された<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.DataSourceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataSourceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "指定したオブジェクトをコンバーターのネイティブ型に変換します。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>追加のコンテキスト情報を取得するために使用できます。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>ローカリゼーション機能をサポートするために使用できる</xref:System.Globalization.CultureInfo>。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    return:
      type: System.Object
      description: "<xref:System.Object>変換後に、指定したオブジェクトを表す</xref:System.Object>。"
  overload: System.Web.UI.Design.DataSourceConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "変換を実行できませんでした。"
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "コントロールにアクセスできる、標準的なデータ ソースを取得します。"
  remarks: "コンポーネントにアクセスできるデータ ソースは、デザイナーの各コンポーネントでのテストからコンポーネントの一覧を取得することによって決定されます、<xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A>メソッド、および有効なデータ ソースにあるコンポーネントを返します</xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A>。"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>コンポーネントやコントロールの値を取得することを示すです。"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>標準のアクセス可能なデータ ソースを一覧表示します</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>。"
  overload: System.Web.UI.Design.DataSourceConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "標準値のコレクションが返されるかどうかを示す値を取得<xref:System.ComponentModel.TypeConverter.GetStandardValues*>可能な値の一覧を示します</xref:System.ComponentModel.TypeConverter.GetStandardValues*>。"
  remarks: "場合は、リストが排他的なように列挙型で、し、その他の値は無効です。 リストが排他的なかどうかは、さらに、標準の一覧の値を他の有効な値がある<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>を提供します</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>。"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>追加のコンテキスト情報を取得するために使用できます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.ComponentModel.TypeConverter.StandardValuesCollection>が<xref:System.ComponentModel.TypeConverter.GetStandardValues*>から返された場合は、すべての可能な値の排他的なリスト<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>他の値も有効である場合</xref:System.ComponentModel.TypeConverter.GetStandardValues*></xref:System.ComponentModel.TypeConverter.StandardValuesCollection>。       このメソッドは常に返します、このクラスに実装された<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "コンバーターが、一覧から選択できる値の標準セットをサポートするかどうかを示す値を取得します。"
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>追加のコンテキスト情報を取得するために使用できます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<xref:System.ComponentModel.TypeConverter.GetStandardValues*>オブジェクトをサポートしている値の共通セットを見つけると呼ばれる、それ以外にする必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ComponentModel.TypeConverter.GetStandardValues*> 。 この実装は常に返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  id: IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.DataSourceConverter
  langs:
  - csharp
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.DataSourceConverter.IsValidDataSource(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "指定したコンポーネントがこのコンバーターに対して有効なデータ ソースであるかどうかを示します。"
  remarks: "<xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A>メソッドは、標準のアクセス可能なデータ ソースとして利用可能なコンポーネントを決定する、IsValidDataSource メソッドを使用します</xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A>。 <xref:System.Web.UI.Design.DataSourceConverter>クラス、有効なデータ ソースを実装するコンポーネント、<xref:System.Collections.IEnumerable>または<xref:System.ComponentModel.IListSource>インターフェイス</xref:System.ComponentModel.IListSource></xref:System.Collections.IEnumerable></xref:System.Web.UI.Design.DataSourceConverter>。"
  syntax:
    content: protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "有効なデータ ソースとして確認するコンポーネント。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>component</code> implements <xref:System.Collections.IEnumerable> or <xref href=&quot;System.ComponentModel.IListSource&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.Design.DataSourceConverter.IsValidDataSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.Design.DataSourceConverter.#ctor
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: DataSourceConverter()
  nameWithType: DataSourceConverter.DataSourceConverter()
  fullName: System.Web.UI.Design.DataSourceConverter.DataSourceConverter()
- uid: System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataSourceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataSourceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.DataSourceConverter.IsValidDataSource(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Web.UI.Design.DataSourceConverter.#ctor*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: DataSourceConverter
  nameWithType: DataSourceConverter.DataSourceConverter
- uid: System.Web.UI.Design.DataSourceConverter.CanConvertFrom*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DataSourceConverter.CanConvertFrom
- uid: System.Web.UI.Design.DataSourceConverter.ConvertFrom*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DataSourceConverter.ConvertFrom
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValues*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: DataSourceConverter.GetStandardValues
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: DataSourceConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: DataSourceConverter.GetStandardValuesSupported
- uid: System.Web.UI.Design.DataSourceConverter.IsValidDataSource*
  parent: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: IsValidDataSource
  nameWithType: DataSourceConverter.IsValidDataSource
