### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.DataObject
  id: DataObject
  children:
  - System.Security.Cryptography.Xml.DataObject.#ctor
  - System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.Data
  - System.Security.Cryptography.Xml.DataObject.Encoding
  - System.Security.Cryptography.Xml.DataObject.GetXml
  - System.Security.Cryptography.Xml.DataObject.Id
  - System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.MimeType
  langs:
  - csharp
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
  type: Class
  summary: "署名されたデータを保持する XML 署名のオブジェクトの要素を表します。"
  remarks: "XML 署名に直接情報またはメタデータを格納するのに DataObject クラスを使用します。  たとえば、署名を格納する生成日または署名者の id。  DataObject クラスは、可能性があります。 または、XML 署名によって未カバー可能性があります。       クラスの対応する、 `<Object>` XML 署名の World Wide Web Consortium (W3C) 仕様内の要素。 W3C の仕様の詳細については、次を参照してください。 [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/)です。"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/t-system.security.crypto_69_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/t-system.security.crypto_69_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/t-system.security.crypto_69_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/t-system.security.crypto_69_2.cpp)]"
  syntax:
    content: public class DataObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>クラスです。"
  remarks: "<xref:System.Security.Cryptography.Xml.DataObject>XML シグネチャを持つクラスを使用します</xref:System.Security.Cryptography.Xml.DataObject>。 初期化した後、 <xref:System.Security.Cryptography.Xml.DataObject>、割り当てることができます、<xref:System.Security.Cryptography.Xml.DataObject.Data%2A>と<xref:System.Security.Cryptography.Xml.DataObject.Id%2A>プロパティ</xref:System.Security.Cryptography.Xml.DataObject.Id%2A></xref:System.Security.Cryptography.Xml.DataObject.Data%2A></xref:System.Security.Cryptography.Xml.DataObject>。"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/m-system.security.crypto_95_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/m-system.security.crypto_95_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/m-system.security.crypto_95_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/m-system.security.crypto_95_2.cpp)]"
  syntax:
    content: public DataObject ();
    parameters: []
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>指定された id、MIME の種類、エンコード、およびデータを持つクラス。"
  remarks: "<xref:System.Security.Cryptography.Xml.DataObject>XML シグネチャを持つクラスを使用します</xref:System.Security.Cryptography.Xml.DataObject>。 `id`パラメーターを使用するデータを含む要素の名前を指します。 `data`パラメーターを含む XML ノードのリストを参照、`id`パラメーター要素です。"
  syntax:
    content: public DataObject (string id, string mimeType, string encoding, System.Xml.XmlElement data);
    parameters:
    - id: id
      type: System.String
      description: "新しいインスタンスを初期化するために id <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>とします。"
    - id: mimeType
      type: System.String
      description: "新しいインスタンスを初期化するために使用されるデータの MIME の種類<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>です。"
    - id: encoding
      type: System.String
      description: "新しいインスタンスを初期化するために使用されるデータのエンコード<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>です。"
    - id: data
      type: System.Xml.XmlElement
      description: "新しいインスタンスを初期化するためにデータ<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>とします。"
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>data</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Data
  id: Data
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在のデータ値の設定を取得または<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。"
  remarks: "このプロパティは、XML ノード ボックスの一覧で説明する要素を含む、<xref:System.Security.Cryptography.Xml.DataObject.Id%2A>プロパティ</xref:System.Security.Cryptography.Xml.DataObject.Id%2A>。"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_100_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_100_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_100_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_100_2.cpp)]"
  syntax:
    content: public System.Xml.XmlNodeList Data { get; set; }
    return:
      type: System.Xml.XmlNodeList
      description: "現在のデータ<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.DataObject.Data*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "プロパティを設定するための値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定の現在のエンコーディング<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。"
  remarks: "このプロパティの既定値は`null`、エンコーディングがない存在します。"
  syntax:
    content: public string Encoding { get; set; }
    return:
      type: System.String
      description: "現在のエンコードの種類<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。"
  overload: System.Security.Cryptography.Xml.DataObject.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 表現を返します、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>オブジェクト。"
  remarks: "<xref:System.Security.Cryptography.Xml.DataObject>。</xref:System.Security.Cryptography.Xml.DataObject>出力 XML にこのメソッドを使用します。"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 表現、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>オブジェクト。"
  overload: System.Security.Cryptography.Xml.DataObject.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Id
  id: Id
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在の id を取得または<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。"
  remarks: "Id が使用される参照を<xref:System.Security.Cryptography.Xml.DataObject>別の場所から</xref:System.Security.Cryptography.Xml.DataObject>。 このプロパティの既定値は`null`識別が存在しないことを意味します。 このプロパティは一般的で参照されている、<xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>プロパティ</xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>。"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_82_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_82_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_82_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_82_2.cpp)]"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "使用するデータを含む要素の名前。"
  overload: System.Security.Cryptography.Xml.DataObject.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "読み込み、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>状態の XML 要素からです。"
  remarks: "追加の XML 要素を追加するこのメソッドを使用できます、<xref:System.Security.Cryptography.Xml.DataObject>オブジェクト</xref:System.Security.Cryptography.Xml.DataObject>。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "XML 要素を読み込む、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>状態からです。"
  overload: System.Security.Cryptography.Xml.DataObject.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML 要素の値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在の MIME の種類の設定を取得または<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。"
  remarks: "MIME の種類が<xref:System.Security.Cryptography.Xml.DataObject>。</xref:System.Security.Cryptography.Xml.DataObject>内のデータについて説明します"
  syntax:
    content: public string MimeType { get; set; }
    return:
      type: System.String
      description: "現在の MIME の種類<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;></xref>オブジェクト。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.DataObject.MimeType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.DataObject.Data
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
- uid: System.Security.Cryptography.Xml.DataObject.Id
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
- uid: System.Security.Cryptography.Xml.DataObject.#ctor*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject
  nameWithType: DataObject.DataObject
- uid: System.Security.Cryptography.Xml.DataObject.Data*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
- uid: System.Security.Cryptography.Xml.DataObject.Encoding*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml
  nameWithType: DataObject.GetXml
- uid: System.Security.Cryptography.Xml.DataObject.Id*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml
  nameWithType: DataObject.LoadXml
- uid: System.Security.Cryptography.Xml.DataObject.MimeType*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
