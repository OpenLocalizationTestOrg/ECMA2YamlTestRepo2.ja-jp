### YamlMime:ManagedReference
items:
- uid: System.Activities.Handle
  id: Handle
  children:
  - System.Activities.Handle.#ctor
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  langs:
  - csharp
  name: Handle
  nameWithType: Handle
  fullName: System.Activities.Handle
  type: Class
  summary: "その有効期間は、ワークフロー ランタイムによって制御される型を表します。"
  remarks: "ハンドルから派生した型には、ワークフロー ランタイムによって制御されます、有効期間があります。 ランタイム ハンドルの型のワークフロー変数の型のインスタンスの作成に必要な既定のコンス トラクターを使用して、割り当てます、 <xref:System.Activities.Variable>、および呼び出し<xref:System.Activities.Handle.OnInitialize%2A>環境の初期化時にします</xref:System.Activities.Handle.OnInitialize%2A></xref:System.Activities.Variable>。 変数がスコープ外に出る<xref:System.Activities.Handle.OnUninitialize%2A>と呼びます</xref:System.Activities.Handle.OnUninitialize%2A>。"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class Handle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Handle.#ctor
  id: '#ctor'
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Activities.Handle&quot;> </xref>クラスです。"
  remarks: "派生したクラス<xref:System.Activities.Handle>既定のコンス トラクターを提供する必要があります</xref:System.Activities.Handle>。"
  syntax:
    content: protected Handle ();
    parameters: []
  overload: System.Activities.Handle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ExecutionPropertyName
  id: ExecutionPropertyName
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "これによって使用される名前を取得<xref href=&quot;System.Activities.Handle&quot;></xref>アクティビティの実行プロパティに追加するとします。"
  syntax:
    content: public string ExecutionPropertyName { get; }
    return:
      type: System.String
      description: "<xref:System.Type.FullName*>。</xref:System.Type.FullName*>で提供される、派生型の名前"
  overload: System.Activities.Handle.ExecutionPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "環境を格納しているときに、ワークフロー ランタイムによって呼び出されます、 <xref href=&quot;System.Activities.Handle&quot;> </xref>が初期化されています。"
  syntax:
    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "ハンドルが作成されている環境。"
  overload: System.Activities.Handle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "ワークフロー ランタイムによって呼び出されるときに、 <xref href=&quot;System.Activities.Variable&quot;> </xref>用、 <xref href=&quot;System.Activities.Handle&quot;> </xref>がスコープ外に出るです。"
  syntax:
    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "ハンドルが作成された環境。"
  overload: System.Activities.Handle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.Owner
  id: Owner
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "取得、 <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref>を格納している、 <xref href=&quot;System.Activities.Variable&quot;> </xref>を格納している、 <xref href=&quot;System.Activities.Handle&quot;></xref>です。"
  syntax:
    content: public System.Activities.ActivityInstance Owner { get; }
    return:
      type: System.Activities.ActivityInstance
      description: "含んでいるアクティビティ インスタンス、 <xref href=&quot;System.Activities.Variable&quot;> </xref>を格納している、 <xref href=&quot;System.Activities.Handle&quot;></xref>です。"
  overload: System.Activities.Handle.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ThrowIfUninitialized
  id: ThrowIfUninitialized
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "スロー、<xref:System.InvalidOperationException>場合、 <xref href=&quot;System.Activities.Handle&quot;> </xref>が初期化されていません</xref:System.InvalidOperationException>。"
  remarks: "ThrowIfUninitialized によりカスタム ハンドルの派生クラス作成者に任意のメソッドまたは無効な派生クラスのプロパティから呼び出す便利なメソッド場合、<xref:System.Activities.Handle>は初期化されていません</xref:System.Activities.Handle>。"
  syntax:
    content: protected void ThrowIfUninitialized ();
    parameters: []
  overload: System.Activities.Handle.ThrowIfUninitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Handle.#ctor
  parent: System.Activities.Handle
  isExternal: false
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
- uid: System.Activities.Handle.ExecutionPropertyName
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.Handle.Owner
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
- uid: System.Activities.ActivityInstance
  parent: System.Activities
  isExternal: false
  name: ActivityInstance
  nameWithType: ActivityInstance
  fullName: System.Activities.ActivityInstance
- uid: System.Activities.Handle.ThrowIfUninitialized
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
- uid: System.Activities.Handle.#ctor*
  parent: System.Activities.Handle
  isExternal: false
  name: Handle
  nameWithType: Handle.Handle
- uid: System.Activities.Handle.ExecutionPropertyName*
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
- uid: System.Activities.Handle.OnInitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize
  nameWithType: Handle.OnInitialize
- uid: System.Activities.Handle.OnUninitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize
  nameWithType: Handle.OnUninitialize
- uid: System.Activities.Handle.Owner*
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
- uid: System.Activities.Handle.ThrowIfUninitialized*
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized
  nameWithType: Handle.ThrowIfUninitialized
