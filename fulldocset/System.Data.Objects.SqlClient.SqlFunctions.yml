### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.SqlClient.SqlFunctions
  id: SqlFunctions
  children:
  - System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  - System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  - System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.GetDate
  - System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  - System.Data.Objects.SqlClient.SqlFunctions.HostName
  - System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Pi
  - System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Rand
  - System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  - System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  - System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  - System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  - System.Data.Objects.SqlClient.SqlFunctions.UserName
  - System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  langs:
  - csharp
  name: SqlFunctions
  nameWithType: SqlFunctions
  fullName: System.Data.Objects.SqlClient.SqlFunctions
  type: Class
  summary: "共通言語ランタイム (CLR) メソッドを linq to Entities クエリのデータベースで関数を呼び出すを提供します。"
  syntax:
    content: public static class SqlFunctions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  id: Acos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Acos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Acos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "コサインが指定の数値をラジアン単位で、角度を返す数学関数です。 この角度は、アーク コサインと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ACOS (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034)です。"
  syntax:
    content: public static Nullable<double> Acos (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "指定した角度のコサイン。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  id: Acos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Acos(Nullable<Double>)
  nameWithType: SqlFunctions.Acos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "コサインが指定の数値をラジアン単位で、角度を返す数学関数です。 この角度は、アーク コサインと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ACOS (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034)です。"
  syntax:
    content: public static Nullable<double> Acos (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "指定した角度のコサイン。"
    return:
      type: System.Nullable{System.Double}
      description: "入力のコサインの値によって定義された、ラジアンの角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  id: Ascii(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Ascii(String)
  nameWithType: SqlFunctions.Ascii(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Ascii(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "文字式の左端の文字の ASCII コード値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASCII (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140040)です。"
  syntax:
    content: public static Nullable<int> Ascii (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "有効な文字列。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力文字列の最初の文字の ASCII コード。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Ascii*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  id: Asin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Asin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Asin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "ラジアンで指定した数値がサインの値の角度を返す数学関数です。 この角度は、アークサインと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASIN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039)です。"
  syntax:
    content: public static Nullable<double> Asin (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "指定した角度のサイン。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  id: Asin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Asin(Nullable<Double>)
  nameWithType: SqlFunctions.Asin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "ラジアンで指定した数値がサインの値の角度を返す数学関数です。 この角度は、アークサインと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASIN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039)です。"
  syntax:
    content: public static Nullable<double> Asin (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "指定した角度のサイン。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  id: Atan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "ラジアンで指定した数値がタンジェントの角度を返す数学関数。 この角度は、アーク タンジェントと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATAN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038)です。"
  syntax:
    content: public static Nullable<double> Atan (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "指定した角度のタンジェント。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  id: Atan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan(Nullable<Double>)
  nameWithType: SqlFunctions.Atan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "ラジアンで指定した数値がタンジェントの角度を返す数学関数。 この角度は、アーク タンジェントと呼ばれます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATAN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038)です。"
  syntax:
    content: public static Nullable<double> Atan (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "指定した角度のタンジェント。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan2(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正の値の角度をラジアンで返します正の x 軸と原点 (x, y) のポイントから光線の間で、x と y が、2 つの数値。 関数に渡される最初のパラメーターは y の値で、2 番目のパラメーターは x 値です。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATN2 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037)です。"
  syntax:
    content: public static Nullable<double> Atan2 (Nullable<decimal> arg1, Nullable<decimal> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "ポイントの y 座標。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "点の x 座標。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  id: Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Atan2(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正の値の角度をラジアンで返します正の x 軸と原点 (x, y) のポイントから光線の間で、x と y が、2 つの数値。 関数に渡される最初のパラメーターは y の値で、2 番目のパラメーターは x 値です。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATN2 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037)です。"
  syntax:
    content: public static Nullable<double> Atan2 (Nullable<double> arg1, Nullable<double> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "ポイントの y 座標。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "点の x 座標。"
    return:
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  id: Char(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Char(Nullable<Int32>)
  nameWithType: SqlFunctions.Char(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Char(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した整数の ASCII 値に対応する文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHAR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140119)です。"
  syntax:
    content: public static string Char (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "ASCII コード。"
    return:
      type: System.String
      description: "指定された ASCII 値に対応する文字。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Char*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  id: CharIndex(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[])
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<int> CharIndex (byte[] toSearch, byte[] target);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "検索する文字列式です。"
    - id: target
      type: System.Byte[]
      description: "検索する文字列式です。"
    return:
      type: System.Nullable{System.Int32}
      description: "開始位置<code> target </code>見つかった場合は<code> toSearch</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  id: CharIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String)
  nameWithType: SqlFunctions.CharIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<int> CharIndex (string toSearch, string target);
    parameters:
    - id: toSearch
      type: System.String
      description: "検索する文字列式です。"
    - id: target
      type: System.String
      description: "検索する文字列式です。"
    return:
      type: System.Nullable{System.Int32}
      description: "開始位置<code> target </code>見つかった場合は<code> toSearch</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  id: CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[],Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<int> CharIndex (byte[] toSearch, byte[] target, Nullable<int> startLocation);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "検索する文字列式です。"
    - id: target
      type: System.Byte[]
      description: "検索する文字列式です。"
    - id: startLocation
      type: System.Nullable{System.Int32}
      description: "内の文字位置`toSearch`検索を開始します。"
    return:
      type: System.Nullable{System.Int32}
      description: "開始位置<code> target </code>見つかった場合は<code> toSearch</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  id: CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(Byte[],Byte[],Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<long> CharIndex (byte[] toSearch, byte[] target, Nullable<long> startLocation);
    parameters:
    - id: toSearch
      type: System.Byte[]
      description: "検索する文字列式です。"
    - id: target
      type: System.Byte[]
      description: "検索する文字列式です。"
    - id: startLocation
      type: System.Nullable{System.Int64}
      description: "内の文字位置`toSearch`どの検索を開始します。"
    return:
      type: System.Nullable{System.Int64}
      description: "開始位置<code> target </code>見つかった場合は<code> toSearch</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  id: CharIndex(System.String,System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String,Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<int> CharIndex (string toSearch, string target, Nullable<int> startLocation);
    parameters:
    - id: toSearch
      type: System.String
      description: "検索する文字列式です。"
    - id: target
      type: System.String
      description: "検索する文字列式です。"
    - id: startLocation
      type: System.Nullable{System.Int32}
      description: "内の文字位置`toSearch`検索を開始します。"
    return:
      type: System.Nullable{System.Int32}
      description: "開始位置<code> target </code>見つかった場合は<code> toSearch</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  id: CharIndex(System.String,System.String,System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CharIndex(String,String,Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "1 つの式がもう一方の式内の開始位置を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [charindex 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118)です。"
  syntax:
    content: public static Nullable<long> CharIndex (string toSearch, string target, Nullable<long> startLocation);
    parameters:
    - id: toSearch
      type: System.String
      description: "検索する文字列式です。"
    - id: target
      type: System.String
      description: "検索する文字列式です。"
    - id: startLocation
      type: System.Nullable{System.Int64}
      description: "内の文字位置`toSearch`検索を開始します。"
    return:
      type: System.Nullable{System.Int64}
      description: "A &lt;xref:System.Nullable%601&gt;の<xref:System.Int64>の位置は、開始値<code> target </code>見つかった場合は<code> toSearch </code></xref:System.Int64> 。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  id: Checksum(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  id: Checksum(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String)
  nameWithType: SqlFunctions.Checksum(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1);
    parameters:
    - id: arg1
      type: System.String
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  id: Checksum(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1, byte[] arg2);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    - id: arg2
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1, Nullable<bool> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1, Nullable<DateTime> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1, Nullable<DateTimeOffset> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1, Nullable<decimal> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1, Nullable<double> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1, Nullable<Guid> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1, Nullable<TimeSpan> arg2);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  id: Checksum(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String,String)
  nameWithType: SqlFunctions.Checksum(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1, string arg2);
    parameters:
    - id: arg1
      type: System.String
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.String
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  id: Checksum(System.Byte[],System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Byte[],Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (byte[] arg1, byte[] arg2, byte[] arg3);
    parameters:
    - id: arg1
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    - id: arg2
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    - id: arg3
      type: System.Byte[]
      description: "チェックサムを計算する文字配列。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<bool> arg1, Nullable<bool> arg2, Nullable<bool> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.Boolean}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTime> arg1, Nullable<DateTime> arg2, Nullable<DateTime> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.DateTime}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<DateTimeOffset> arg1, Nullable<DateTimeOffset> arg2, Nullable<DateTimeOffset> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.DateTimeOffset}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  id: Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<decimal> arg1, Nullable<decimal> arg2, Nullable<decimal> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.Decimal}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  id: Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<double> arg1, Nullable<double> arg2, Nullable<double> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.Double}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  id: Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<Guid> arg1, Nullable<Guid> arg2, Nullable<Guid> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.Guid}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (Nullable<TimeSpan> arg1, Nullable<TimeSpan> arg2, Nullable<TimeSpan> arg3);
    parameters:
    - id: arg1
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.Nullable{System.TimeSpan}
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  id: Checksum(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Checksum(String,String,String)
  nameWithType: SqlFunctions.Checksum(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力引数を通じて計算されたチェックサム値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[チェックサム (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> Checksum (string arg1, string arg2, string arg3);
    parameters:
    - id: arg1
      type: System.String
      description: "チェックサムを計算する値。"
    - id: arg2
      type: System.String
      description: "チェックサムを計算する値。"
    - id: arg3
      type: System.String
      description: "チェックサムを計算する値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値について計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  id: ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: ChecksumAggregate(IEnumerable<Int32>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "コレクション内の値のチェックサムを返します。 Null 値は無視されます。"
  remarks: "この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM_AGG (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> ChecksumAggregate (System.Collections.Generic.IEnumerable<int> arg);
    parameters:
    - id: arg
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: "そこで、チェックサムが計算された値のコレクション。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力コレクションから計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "コレクション内の値のチェックサムを返します。 Null 値は無視されます。"
  remarks: "この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM_AGG (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120)です。"
  syntax:
    content: public static Nullable<int> ChecksumAggregate (System.Collections.Generic.IEnumerable<Nullable<int>> arg);
    parameters:
    - id: arg
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: "そこで、チェックサムが計算された値のコレクション。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力コレクションから計算されたチェックサム。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  id: Cos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された式に基づいてラジアン単位で指定された角度のコサイン (余弦) を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COS (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121)です。"
  syntax:
    content: public static Nullable<double> Cos (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度の三角関数コサイン。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  id: Cos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cos(Nullable<Double>)
  nameWithType: SqlFunctions.Cos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された式に基づいてラジアン単位で指定された角度のコサイン (余弦) を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COS (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121)です。"
  syntax:
    content: public static Nullable<double> Cos (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度の三角関数コサイン。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  id: Cot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cot(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学関数には、指定された角度の三角関数コタンジェントをラジアンで返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COT (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122)です。"
  syntax:
    content: public static Nullable<double> Cot (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度のコタンジェントです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  id: Cot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Cot(Nullable<Double>)
  nameWithType: SqlFunctions.Cot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数学関数には、指定された角度の三角関数コタンジェントをラジアンで返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COT (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122)です。"
  syntax:
    content: public static Nullable<double> Cot (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度のコタンジェントです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  id: CurrentTimestamp
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CurrentTimestamp()
  nameWithType: SqlFunctions.CurrentTimestamp()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "現在の日付と時刻を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CURRENT_TIMESTAMP (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140125)です。"
  syntax:
    content: public static Nullable<DateTime> CurrentTimestamp ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "現在の日付と時刻。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  id: CurrentUser
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: CurrentUser()
  nameWithType: SqlFunctions.CurrentUser()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "現在のユーザーの名前を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CURRENT_USER (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140126)です。"
  syntax:
    content: public static string CurrentUser ();
    parameters: []
    return:
      type: System.String
      description: "現在のユーザーの名前。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  id: DataLength(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Byte[])
  nameWithType: SqlFunctions.DataLength(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (byte[] arg);
    parameters:
    - id: arg
      type: System.Byte[]
      description: "長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  id: DataLength(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Boolean>)
  nameWithType: SqlFunctions.DataLength(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Boolean>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<bool> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Boolean}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  id: DataLength(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<DateTime>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<DateTime> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.DateTime}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  id: DataLength(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<DateTimeOffset> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.DateTimeOffset}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  id: DataLength(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Decimal>)
  nameWithType: SqlFunctions.DataLength(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  id: DataLength(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Double>)
  nameWithType: SqlFunctions.DataLength(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  id: DataLength(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<Guid>)
  nameWithType: SqlFunctions.DataLength(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Guid>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<Guid> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Guid}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  id: DataLength(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DataLength(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (Nullable<TimeSpan> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.TimeSpan}
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  id: DataLength(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DataLength(String)
  nameWithType: SqlFunctions.DataLength(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "式を表すために使用されたバイト数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127)です。"
  syntax:
    content: public static Nullable<int> DataLength (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "データの長さを調べる値。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力された値のバイト数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "新しいを返します<xref uid=&quot;langword_csharp_datetime&quot; name=&quot;datetime&quot; href=&quot;&quot;></xref>値が指定した日付に追加する間隔に基づいて。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTime> DateAdd (string datePartArg, Nullable<double> number, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "インクリメントする日付の部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "指定した量によって、日付をインクリメントするための値。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "インクリメントする日付。"
    return:
      type: System.Nullable{System.DateTime}
      description: "新しい日付。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した日付に追加する間隔に基づいて新しい日付値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTimeOffset> DateAdd (string datePartArg, Nullable<double> number, Nullable<DateTimeOffset> dateTimeOffsetArg);
    parameters:
    - id: datePartArg
      type: System.String
      description: "インクリメントする日付の部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "指定した量によって、日付をインクリメントするための値。"
    - id: dateTimeOffsetArg
      type: System.Nullable{System.DateTimeOffset}
      description: "インクリメントする日付。"
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "新しい時点で、日付と時刻、世界協定時刻 (UTC) に対する相対として表されます。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  id: DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した時間間隔に追加する間隔に基づいて、新しい時間範囲値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<TimeSpan> DateAdd (string datePartArg, Nullable<double> number, Nullable<TimeSpan> time);
    parameters:
    - id: datePartArg
      type: System.String
      description: "インクリメントする日付の部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "指定した量によって、日付をインクリメントするための値。"
    - id: time
      type: System.Nullable{System.TimeSpan}
      description: "インクリメントする時間間隔です。"
    return:
      type: System.Nullable{System.TimeSpan}
      description: "新しい時間間隔。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  id: DateAdd(System.String,System.Nullable{System.Double},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateAdd(String,Nullable<Double>,String)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "新しいを返します<xref uid=&quot;langword_csharp_datetime&quot; name=&quot;datetime&quot; href=&quot;&quot;></xref>値が指定した日付に追加する間隔に基づいて。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=140128)"
  syntax:
    content: public static Nullable<DateTime> DateAdd (string datePartArg, Nullable<double> number, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "インクリメントする日付の部分。"
    - id: number
      type: System.Nullable{System.Double}
      description: "指定した量によって、日付をインクリメントするための値。"
    - id: date
      type: System.String
      description: "インクリメントする日付。"
    return:
      type: System.Nullable{System.DateTime}
      description: "A &lt;xref:System.Nullable%601&gt;の<xref:System.DateTime>値が新しい日付</xref:System.DateTime>。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  id: DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTime>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTime> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTime}
      description: "最初の日付。"
    - id: endDate
      type: System.String
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  id: DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<DateTimeOffset>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<DateTimeOffset> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.DateTimeOffset}
      description: "最初の日付。"
    - id: endDate
      type: System.String
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  id: DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,Nullable<TimeSpan>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, Nullable<TimeSpan> startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.Nullable{System.TimeSpan}
      description: "最初の日付。"
    - id: endDate
      type: System.String
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  id: DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<DateTime> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.String
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTime}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  id: DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<DateTimeOffset> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.String
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.DateTimeOffset}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  id: DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, Nullable<TimeSpan> endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.String
      description: "最初の日付。"
    - id: endDate
      type: System.Nullable{System.TimeSpan}
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数を指定する値。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  id: DateDiff(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateDiff(String,String,String)
  nameWithType: SqlFunctions.DateDiff(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した開始日と終了日の間を超えました。 指定した datepart 境界の数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF (TRANSACT-SQL)。](http://go.microsoft.com/fwlink/?LinkId=141344)"
  syntax:
    content: public static Nullable<int> DateDiff (string datePartArg, string startDate, string endDate);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: startDate
      type: System.String
      description: "最初の日付。"
    - id: endDate
      type: System.String
      description: "2 番目の日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの日付までの時間間隔の数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  id: DateName(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す文字列を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)です。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "日付。"
    return:
      type: System.String
      description: "指定された日付の指定された部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  id: DateName(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す文字列を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)です。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<DateTimeOffset> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: date
      type: System.Nullable{System.DateTimeOffset}
      description: "日付。"
    return:
      type: System.String
      description: "指定された日付の指定された部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  id: DateName(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateName(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す文字列を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)です。"
  syntax:
    content: public static string DateName (string datePartArg, Nullable<TimeSpan> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: date
      type: System.Nullable{System.TimeSpan}
      description: "日付。"
    return:
      type: System.String
      description: "指定された日付の指定された部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  id: DateName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DateName(String,String)
  nameWithType: SqlFunctions.DateName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す文字列を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345)です。"
  syntax:
    content: public static string DateName (string datePartArg, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "時間間隔の数が異なりますを計算する日付の部分。"
    - id: date
      type: System.String
      description: "日付。"
    return:
      type: System.String
      description: "指定された日付の指定された部分。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  id: DatePart(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTime>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す整数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)です。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<DateTime> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "値を返す日付の部分。"
    - id: date
      type: System.Nullable{System.DateTime}
      description: "日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された日付の指定された日付要素。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  id: DatePart(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す整数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)です。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<DateTimeOffset> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "値を返す日付の部分。"
    - id: date
      type: System.Nullable{System.DateTimeOffset}
      description: "日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された日付の指定された日付要素はします。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  id: DatePart(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す整数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)です。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, Nullable<TimeSpan> date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "値を返す日付の部分。"
    - id: date
      type: System.Nullable{System.TimeSpan}
      description: "日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された日付の指定された日付要素はします。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  id: DatePart(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: DatePart(String,String)
  nameWithType: SqlFunctions.DatePart(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された日付の指定された日付要素を表す整数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346)です。"
  syntax:
    content: public static Nullable<int> DatePart (string datePartArg, string date);
    parameters:
    - id: datePartArg
      type: System.String
      description: "値を返す日付の部分。"
    - id: date
      type: System.String
      description: "日付。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された日付の指定された日付要素はします。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  id: Degrees(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Decimal>)
  nameWithType: SqlFunctions.Degrees(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "対応する角度をラジアン単位で指定された角度の度数で返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[度 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)です。"
  syntax:
    content: public static Nullable<decimal> Degrees (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Decimal}
      description: "指定された角度が度数に変換されます。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  id: Degrees(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Double>)
  nameWithType: SqlFunctions.Degrees(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "対応する角度をラジアン単位で指定された角度の度数で返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[度 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)です。"
  syntax:
    content: public static Nullable<double> Degrees (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度が度数に変換されます。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  id: Degrees(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Int32>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "対応する角度をラジアン単位で指定された角度の度数で返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[度 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)です。"
  syntax:
    content: public static Nullable<int> Degrees (Nullable<int> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int32}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された角度が度数に変換されます。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  id: Degrees(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Degrees(Nullable<Int64>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "対応する角度をラジアン単位で指定された角度の度数で返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[度 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348)です。"
  syntax:
    content: public static Nullable<long> Degrees (Nullable<long> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int64}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Int64}
      description: "指定された角度が度数に変換されます。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  id: Difference(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Difference(String,String)
  nameWithType: SqlFunctions.Difference(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Difference(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "2 つの文字式の SOUNDEX 値の差を示す整数値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [(TRANSACT-SQL) の違い](http://go.microsoft.com/fwlink/?LinkId=141349)です。"
  syntax:
    content: public static Nullable<int> Difference (string string1, string string2);
    parameters:
    - id: string1
      type: System.String
      description: "最初の文字列。"
    - id: string2
      type: System.String
      description: "2 番目の文字列。"
    return:
      type: System.Nullable{System.Int32}
      description: "2 つの文字列の SOUNDEX の差。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Difference*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  id: Exp(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Exp(Nullable<Decimal>)
  nameWithType: SqlFunctions.Exp(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された float 式の指数値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [EXP (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350)です。"
  syntax:
    content: public static Nullable<double> Exp (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "入力値。"
    return:
      type: System.Nullable{System.Double}
      description: "定数の入力値を累乗した電子メールです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  id: Exp(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Exp(Nullable<Double>)
  nameWithType: SqlFunctions.Exp(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された float 式の指数値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [EXP (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350)です。"
  syntax:
    content: public static Nullable<double> Exp (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "入力値。"
    return:
      type: System.Nullable{System.Double}
      description: "定数の入力値を累乗した電子メールです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate
  id: GetDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: GetDate()
  nameWithType: SqlFunctions.GetDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetDate()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "データベースのタイム ゾーン オフセットを持たない datetime 値として現在のデータベース システムのタイムスタンプを返します。 この値は、SQL Server のインスタンスが実行されているコンピューターのオペレーティング システムから取得されます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [GETDATE (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141352)です。"
  syntax:
    content: public static Nullable<DateTime> GetDate ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "現在のデータベースのタイムスタンプ。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.GetDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  id: GetUtcDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: GetUtcDate()
  nameWithType: SqlFunctions.GetUtcDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "Datetime 値として現在のデータベース システムのタイムスタンプを返します。 データベースのタイム ゾーン オフセットは含まれません。 この値は、現在の UTC 時刻 (協定世界時) を表します。 この値は、SQL Server のインスタンスが実行されているコンピューターのオペレーティング システムから取得されます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [GETUTCDATE (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141353)です。"
  syntax:
    content: public static Nullable<DateTime> GetUtcDate ();
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "現在のデータベース (utc) タイムスタンプです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName
  id: HostName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: HostName()
  nameWithType: SqlFunctions.HostName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.HostName()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "ワークステーション名を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ホスト名 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354)です。"
  syntax:
    content: public static string HostName ();
    parameters: []
    return:
      type: System.String
      description: "ワークステーションの名前。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.HostName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  id: IsDate(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: IsDate(String)
  nameWithType: SqlFunctions.IsDate(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsDate(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力値が有効な日付または時刻であるかどうかを示します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ホスト名 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354)です。"
  syntax:
    content: public static Nullable<int> IsDate (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "テスト対象の値です。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力式が有効な日付または時刻の値を datetime または smalldatetime データ型の場合は 1それ以外の場合、0 を返します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.IsDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  id: IsNumeric(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: IsNumeric(String)
  nameWithType: SqlFunctions.IsNumeric(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力値が有効な数値型であるかどうかを示します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ISNUMERIC (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141355)です。"
  syntax:
    content: public static Nullable<int> IsNumeric (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "文字列式です。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力式が有効な数値データ型以外の場合は 1それ以外の場合、0 を返します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  id: Log(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した入力値の自然対数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ログ (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358)です。"
  syntax:
    content: public static Nullable<double> Log (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の自然対数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  id: Log(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log(Nullable<Double>)
  nameWithType: SqlFunctions.Log(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した入力値の自然対数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ログ (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358)です。"
  syntax:
    content: public static Nullable<double> Log (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の自然対数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  id: Log10(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log10(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log10(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した入力値の底&10; の対数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG10 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359)です。"
  syntax:
    content: public static Nullable<double> Log10 (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の底&10; の対数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  id: Log10(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Log10(Nullable<Double>)
  nameWithType: SqlFunctions.Log10(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した入力値の底&10; の対数を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG10 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359)です。"
  syntax:
    content: public static Nullable<double> Log10 (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の底&10; の対数。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  id: NChar(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: NChar(Nullable<Int32>)
  nameWithType: SqlFunctions.NChar(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.NChar(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "Unicode 規格によって定義されている、指定された整数コードの Unicode 文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [NCHAR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141365)です。"
  syntax:
    content: public static string NChar (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "文字コード。"
    return:
      type: System.String
      description: "入力された文字コードに対応する文字。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.NChar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  id: PatIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: PatIndex(String,String)
  nameWithType: SqlFunctions.PatIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "パターンが見つからない場合、すべての有効なテキストと文字データ型では、パターンの最初に見つかった位置の開始位置で指定された式、または&0; を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [PATINDEX (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141310)です。"
  syntax:
    content: public static Nullable<int> PatIndex (string stringPattern, string target);
    parameters:
    - id: stringPattern
      type: System.String
      description: "検索する文字列パターン。"
    - id: target
      type: System.String
      description: "検索する文字列。"
    return:
      type: System.Nullable{System.Int32}
      description: "文字列パターンが見つかった位置の文字の開始位置。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.PatIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi
  id: Pi
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Pi()
  nameWithType: SqlFunctions.Pi()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Pi()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "Pi の定数値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [PI (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141311)です。"
  syntax:
    content: public static Nullable<double> Pi ();
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "Pi の数値。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Pi*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  id: QuoteName(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: QuoteName(String)
  nameWithType: SqlFunctions.QuoteName(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "Unicode 文字列の区切り記号を追加、入力文字列に有効な Microsoft SQL Server の区切られた識別子を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [QUOTENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313)です。"
  syntax:
    content: public static string QuoteName (string stringArg);
    parameters:
    - id: stringArg
      type: System.String
      description: "引用符で囲む文字式に追加されます。"
    return:
      type: System.String
      description: "追加の角かっこで元の文字列。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  id: QuoteName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: QuoteName(String,String)
  nameWithType: SqlFunctions.QuoteName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "Unicode 文字列の区切り記号を追加、入力文字列に有効な Microsoft SQL Server の区切られた識別子を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [QUOTENAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313)です。"
  syntax:
    content: public static string QuoteName (string stringArg, string quoteCharacter);
    parameters:
    - id: stringArg
      type: System.String
      description: "引用符で囲む文字式に追加されます。"
    - id: quoteCharacter
      type: System.String
      description: "区切り記号として使用する&1; つの文字の文字列。 単一引用符 (&quot;)、左または右角かっこ ([)、または二重引用符 (&quot;) を指定できます。 区切り記号が指定されていない場合は、角かっこが使用されます。"
    return:
      type: System.String
      description: "指定した元の文字列引用符 (&quot;) 文字を追加します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  id: Radians(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Decimal>)
  nameWithType: SqlFunctions.Radians(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した角度 (度単位) に対応するラジアンを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ラジアン (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)です。"
  syntax:
    content: public static Nullable<decimal> Radians (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "角度が度数で測定されます。"
    return:
      type: System.Nullable{System.Decimal}
      description: "指定された角度のラジアン メジャーです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  id: Radians(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Double>)
  nameWithType: SqlFunctions.Radians(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した角度 (度単位) に対応するラジアンを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ラジアン (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)です。"
  syntax:
    content: public static Nullable<double> Radians (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "角度が度数で測定されます。"
    return:
      type: System.Nullable{System.Double}
      description: "指定された角度のラジアン メジャーです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  id: Radians(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Int32>)
  nameWithType: SqlFunctions.Radians(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した角度 (度単位) に対応するラジアンを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ラジアン (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)です。"
  syntax:
    content: public static Nullable<int> Radians (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "角度を度数で測定されます。"
    return:
      type: System.Nullable{System.Int32}
      description: "指定された角度のラジアン メジャーです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  id: Radians(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Radians(Nullable<Int64>)
  nameWithType: SqlFunctions.Radians(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した角度 (度単位) に対応するラジアンを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[ラジアン (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314)です。"
  syntax:
    content: public static Nullable<long> Radians (Nullable<long> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int64}
      description: "角度を度数で測定されます。"
    return:
      type: System.Nullable{System.Int64}
      description: "指定された角度のラジアン メジャーです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand
  id: Rand
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Rand()
  nameWithType: SqlFunctions.Rand()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "0 ~ 1 の排他擬似ランダム浮動小数点値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [rand 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315)です。"
  syntax:
    content: public static Nullable<double> Rand ();
    parameters: []
    return:
      type: System.Nullable{System.Double}
      description: "擬似乱数値です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  id: Rand(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Rand(Nullable<Int32>)
  nameWithType: SqlFunctions.Rand(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "0 ~ 1 の排他擬似ランダム浮動小数点値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server の関数に関する情報を参照してください[rand 関数 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315)です。"
  syntax:
    content: public static Nullable<double> Rand (Nullable<int> seed);
    parameters:
    - id: seed
      type: System.Nullable{System.Int32}
      description: "シード値。 場合`seed`が指定されていない、SQL Server データベース エンジンがシード値をランダムに割り当てます。 指定したシード値では、返される結果は常に同じです。"
    return:
      type: System.Nullable{System.Double}
      description: "擬似乱数値です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  id: Replicate(System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Replicate(String,Nullable<Int32>)
  nameWithType: SqlFunctions.Replicate(String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Replicate(String,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "文字列値を指定した回数だけ繰り返されます。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [REPLICATE (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141318)です。"
  syntax:
    content: public static string Replicate (string target, Nullable<int> count);
    parameters:
    - id: target
      type: System.String
      description: "有効な文字列。"
    - id: count
      type: System.Nullable{System.Int32}
      description: "繰り返す数時間を指定する値`target`です。"
    return:
      type: System.String
      description: "対象の文字列で指定された回数が繰り返されて<code> count</code>です。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Replicate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  id: Sign(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sign(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正 (+1)、ゼロ (0)、または指定された式の負の値 (-1) の符号を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[記号 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)です。"
  syntax:
    content: public static Nullable<decimal> Sign (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Decimal}
      description: "入力式の符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  id: Sign(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Double>)
  nameWithType: SqlFunctions.Sign(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正 (+1)、ゼロ (0)、または指定された式の負の値 (-1) の符号を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[記号 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)です。"
  syntax:
    content: public static Nullable<double> Sign (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力式の符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  id: Sign(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Int32>)
  nameWithType: SqlFunctions.Sign(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正 (+1)、ゼロ (0)、または指定された式の負の値 (-1) の符号を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[記号 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)です。"
  syntax:
    content: public static Nullable<int> Sign (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力式の符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  id: Sign(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sign(Nullable<Int64>)
  nameWithType: SqlFunctions.Sign(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int64>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "正 (+1)、ゼロ (0)、または指定された式の負の値 (-1) の符号を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[記号 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323)です。"
  syntax:
    content: public static Nullable<long> Sign (Nullable<long> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int64}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Int64}
      description: "入力式の符号。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  id: Sin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された角度の三角関数サインを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324)です。"
  syntax:
    content: public static Nullable<double> Sin (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "入力式の三角関数サイン。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  id: Sin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Sin(Nullable<Double>)
  nameWithType: SqlFunctions.Sin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定された角度の三角関数サインを返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324)です。"
  syntax:
    content: public static Nullable<double> Sin (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "入力式の三角関数サイン。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  id: SoundCode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SoundCode(String)
  nameWithType: SqlFunctions.SoundCode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "英数字の文字列を発音の似た単語や名前を見つけるには&4; 文字 (SOUNDEX) コードに変換します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SOUNDEX (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141325)です。"
  syntax:
    content: public static string SoundCode (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "有効な文字列。"
    return:
      type: System.String
      description: "入力文字列の SOUNDEX コードです。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SoundCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  id: Space(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Space(Nullable<Int32>)
  nameWithType: SqlFunctions.Space(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Space(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "連続する空白文字の文字列を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[領域 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141326)です。"
  syntax:
    content: public static string Space (Nullable<int> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Int32}
      description: "空白の数。 負の場合、null 文字列が返されます。"
    return:
      type: System.String
      description: "指定した数のスペースで構成される文字列。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Space*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  id: Square(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Square(Nullable<Decimal>)
  nameWithType: SqlFunctions.Square(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した数の&2; 乗を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[正方形 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327)です。"
  syntax:
    content: public static Nullable<double> Square (Nullable<decimal> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の&2; 乗。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Square*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  id: Square(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Square(Nullable<Double>)
  nameWithType: SqlFunctions.Square(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した数の&2; 乗を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。[正方形 (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327)です。"
  syntax:
    content: public static Nullable<double> Square (Nullable<double> arg1);
    parameters:
    - id: arg1
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の&2; 乗。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Square*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  id: SquareRoot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SquareRoot(Nullable<Decimal>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した数値の平方根を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQRT (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328)です。"
  syntax:
    content: public static Nullable<double> SquareRoot (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の平方根。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  id: SquareRoot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: SquareRoot(Nullable<Double>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した数値の平方根を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQRT (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328)です。"
  syntax:
    content: public static Nullable<double> SquareRoot (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.Nullable{System.Double}
      description: "入力値の平方根。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  id: StringConvert(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    return:
      type: System.String
      description: "入力された式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  id: StringConvert(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<double> number);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "数値式です。"
    return:
      type: System.String
      description: "入力された数値式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number, Nullable<int> length);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "文字列の長さの合計。 これには、小数点、符号、数字、およびスペースが含まれます。 既定値は 10 です。"
    return:
      type: System.String
      description: "入力された式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<double> number, Nullable<int> length);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "数値式です。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "文字列の長さの合計。 これには、小数点、符号、数字、およびスペースが含まれます。 既定値は 10 です。"
    return:
      type: System.String
      description: "入力された数値式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<decimal> number, Nullable<int> length, Nullable<int> decimalArg);
    parameters:
    - id: number
      type: System.Nullable{System.Decimal}
      description: "数値式です。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "文字列の長さの合計。 これには、小数点、符号、数字、およびスペースが含まれます。 既定値は 10 です。"
    - id: decimalArg
      type: System.Nullable{System.Int32}
      description: "小数点の右側に場所の数。 `decimal`16 以下でなければなりません。 場合`decimal`16 を超える場合、結果は小数点の右側に 16 桁に切り捨てられます。"
    return:
      type: System.String
      description: "入力された式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "数値データから変換されたデータの文字を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331)です。"
  syntax:
    content: public static string StringConvert (Nullable<double> number, Nullable<int> length, Nullable<int> decimalArg);
    parameters:
    - id: number
      type: System.Nullable{System.Double}
      description: "数値式です。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "文字列の長さの合計。 これには、小数点、符号、数字、およびスペースが含まれます。 既定値は 10 です。"
    - id: decimalArg
      type: System.Nullable{System.Int32}
      description: "小数点の右側に場所の数。 `decimal`16 以下でなければなりません。 場合`decimal`16 を超える場合、結果は小数点の右側に 16 桁に切り捨てられます。"
    return:
      type: System.String
      description: "入力された数値式は、文字列に変換します。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  id: Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  nameWithType: SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "別の文字列に文字列を挿入します。 指定された長さの開始位置からターゲット文字列の文字を削除し、開始位置にある対象の文字列に&2; 番目の文字列を挿入します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STUFF (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141708)です。"
  syntax:
    content: public static string Stuff (string stringInput, Nullable<int> start, Nullable<int> length, string stringReplacement);
    parameters:
    - id: stringInput
      type: System.String
      description: "対象の文字列。"
    - id: start
      type: System.Nullable{System.Int32}
      description: "内の文字位置`stringinput`置換文字列の挿入します。"
    - id: length
      type: System.Nullable{System.Int32}
      description: "削除する文字数`stringInput`です。 場合`length`よりも長い`stringInput`、文字までが削除最後で`stringReplacement`です。"
    - id: stringReplacement
      type: System.String
      description: "部分文字列に挿入される`stringInput`です。"
    return:
      type: System.String
      description: "2 つの文字列で構成される文字列。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Stuff*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  id: Tan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Tan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Tan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Decimal>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力式の正接を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [TAN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715)です。"
  syntax:
    content: public static Nullable<double> Tan (Nullable<decimal> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Decimal}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "入力された角度のタンジェント。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  id: Tan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Tan(Nullable<Double>)
  nameWithType: SqlFunctions.Tan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力式の正接を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [TAN (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715)です。"
  syntax:
    content: public static Nullable<double> Tan (Nullable<double> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Double}
      description: "ラジアンで表した角度。"
    return:
      type: System.Nullable{System.Double}
      description: "入力された角度のタンジェント。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  id: Unicode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: Unicode(String)
  nameWithType: SqlFunctions.Unicode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Unicode(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "入力式の最初の文字を Unicode 規格によって定義されている整数値を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [UNICODE (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141716)です。"
  syntax:
    content: public static Nullable<int> Unicode (string arg);
    parameters:
    - id: arg
      type: System.String
      description: "有効な文字列。"
    return:
      type: System.Nullable{System.Int32}
      description: "入力文字列の最初の文字の文字コード。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.Unicode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName
  id: UserName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: UserName()
  nameWithType: SqlFunctions.UserName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した識別番号に対応するデータベース ユーザー名を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [USER_NAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718)です。"
  syntax:
    content: public static string UserName ();
    parameters: []
    return:
      type: System.String
      description: "ユーザー名。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  id: UserName(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  langs:
  - csharp
  name: UserName(Nullable<Int32>)
  nameWithType: SqlFunctions.UserName(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName(Nullable<Int32>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.SqlClient
  summary: "指定した識別番号に対応するデータベース ユーザー名を返します。"
  remarks: "この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。       この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [USER_NAME (TRANSACT-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718)です。"
  syntax:
    content: public static string UserName (Nullable<int> arg);
    parameters:
    - id: arg
      type: System.Nullable{System.Int32}
      description: "ユーザーの id です。"
    return:
      type: System.String
      description: "ユーザー名。"
  overload: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Acos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Decimal>)
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Nullable{System.Decimal}
  parent: System
  isExternal: true
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Decimal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: Decimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos(Nullable<Double>)
  nameWithType: SqlFunctions.Acos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Acos(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Ascii(String)
  nameWithType: SqlFunctions.Ascii(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Ascii(String)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Asin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin(Nullable<Double>)
  nameWithType: SqlFunctions.Asin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Asin(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan(Nullable<Double>)
  nameWithType: SqlFunctions.Atan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Atan2(Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Char(Nullable<Int32>)
  nameWithType: SqlFunctions.Char(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Char(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[])
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String)
  nameWithType: SqlFunctions.CharIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[],Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(Byte[],Byte[],Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(Byte[],Byte[],Nullable<Int64>)
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: true
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String,Nullable<Int32>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex(String,String,Nullable<Int64>)
  nameWithType: SqlFunctions.CharIndex(String,String,Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CharIndex(String,String,Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>)
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>)
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>)
- uid: System.Nullable{System.DateTimeOffset}
  parent: System
  isExternal: true
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTimeOffset>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>)
- uid: System.Nullable{System.Guid}
  parent: System
  isExternal: true
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String)
  nameWithType: SqlFunctions.Checksum(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String,String)
  nameWithType: SqlFunctions.Checksum(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Byte[],Byte[],Byte[])
  nameWithType: SqlFunctions.Checksum(Byte[],Byte[],Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Byte[],Byte[],Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  nameWithType: SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Boolean>,Nullable<Boolean>,Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTime>,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<DateTimeOffset>,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  nameWithType: SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Decimal>,Nullable<Decimal>,Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  nameWithType: SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Double>,Nullable<Double>,Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  nameWithType: SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<Guid>,Nullable<Guid>,Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(Nullable<TimeSpan>,Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum(String,String,String)
  nameWithType: SqlFunctions.Checksum(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Checksum(String,String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate(IEnumerable<Int32>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Int32>)
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  nameWithType: SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(IEnumerable<Nullable<Int32>>)
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Nullable<Int32>>
  nameWithType: IEnumerable<Nullable<Int32>>
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Nullable<System.Int32>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cos(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos(Nullable<Double>)
  nameWithType: SqlFunctions.Cos(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cos(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot(Nullable<Decimal>)
  nameWithType: SqlFunctions.Cot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot(Nullable<Double>)
  nameWithType: SqlFunctions.Cot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Cot(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentTimestamp()
  nameWithType: SqlFunctions.CurrentTimestamp()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp()
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentUser()
  nameWithType: SqlFunctions.CurrentUser()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser()
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Byte[])
  nameWithType: SqlFunctions.DataLength(Byte[])
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Byte[])
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Boolean>)
  nameWithType: SqlFunctions.DataLength(Nullable<Boolean>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Boolean>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<DateTime>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DataLength(Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Decimal>)
  nameWithType: SqlFunctions.DataLength(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Double>)
  nameWithType: SqlFunctions.DataLength(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<Guid>)
  nameWithType: SqlFunctions.DataLength(Nullable<Guid>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<Guid>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DataLength(Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength(String)
  nameWithType: SqlFunctions.DataLength(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DataLength(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd(String,Nullable<Double>,String)
  nameWithType: SqlFunctions.DateAdd(String,Nullable<Double>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateAdd(String,Nullable<Double>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTime>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTime>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<DateTimeOffset>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<DateTimeOffset>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,Nullable<TimeSpan>,String)
  nameWithType: SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,Nullable<TimeSpan>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff(String,String,String)
  nameWithType: SqlFunctions.DateDiff(String,String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateDiff(String,String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DateName(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName(String,String)
  nameWithType: SqlFunctions.DateName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DateName(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<DateTime>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTime>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTime>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<DateTimeOffset>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<DateTimeOffset>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,Nullable<TimeSpan>)
  nameWithType: SqlFunctions.DatePart(String,Nullable<TimeSpan>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,Nullable<TimeSpan>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart(String,String)
  nameWithType: SqlFunctions.DatePart(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.DatePart(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Decimal>)
  nameWithType: SqlFunctions.Degrees(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Double>)
  nameWithType: SqlFunctions.Degrees(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Int32>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees(Nullable<Int64>)
  nameWithType: SqlFunctions.Degrees(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Degrees(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Difference(String,String)
  nameWithType: SqlFunctions.Difference(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Difference(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp(Nullable<Decimal>)
  nameWithType: SqlFunctions.Exp(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp(Nullable<Double>)
  nameWithType: SqlFunctions.Exp(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Exp(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetDate()
  nameWithType: SqlFunctions.GetDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetDate()
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetUtcDate()
  nameWithType: SqlFunctions.GetUtcDate()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate()
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: HostName()
  nameWithType: SqlFunctions.HostName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.HostName()
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsDate(String)
  nameWithType: SqlFunctions.IsDate(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsDate(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsNumeric(String)
  nameWithType: SqlFunctions.IsNumeric(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log(Nullable<Double>)
  nameWithType: SqlFunctions.Log(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10(Nullable<Decimal>)
  nameWithType: SqlFunctions.Log10(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10(Nullable<Double>)
  nameWithType: SqlFunctions.Log10(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Log10(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: NChar(Nullable<Int32>)
  nameWithType: SqlFunctions.NChar(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.NChar(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: PatIndex(String,String)
  nameWithType: SqlFunctions.PatIndex(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.PatIndex(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Pi()
  nameWithType: SqlFunctions.Pi()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Pi()
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName(String)
  nameWithType: SqlFunctions.QuoteName(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName(String,String)
  nameWithType: SqlFunctions.QuoteName(String,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.QuoteName(String,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Decimal>)
  nameWithType: SqlFunctions.Radians(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Double>)
  nameWithType: SqlFunctions.Radians(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Int32>)
  nameWithType: SqlFunctions.Radians(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians(Nullable<Int64>)
  nameWithType: SqlFunctions.Radians(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Radians(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand()
  nameWithType: SqlFunctions.Rand()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand()
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand(Nullable<Int32>)
  nameWithType: SqlFunctions.Rand(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Rand(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Replicate(String,Nullable<Int32>)
  nameWithType: SqlFunctions.Replicate(String,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Replicate(String,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sign(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Double>)
  nameWithType: SqlFunctions.Sign(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Int32>)
  nameWithType: SqlFunctions.Sign(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign(Nullable<Int64>)
  nameWithType: SqlFunctions.Sign(Nullable<Int64>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sign(Nullable<Int64>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin(Nullable<Decimal>)
  nameWithType: SqlFunctions.Sin(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin(Nullable<Double>)
  nameWithType: SqlFunctions.Sin(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Sin(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SoundCode(String)
  nameWithType: SqlFunctions.SoundCode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SoundCode(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Space(Nullable<Int32>)
  nameWithType: SqlFunctions.Space(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Space(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square(Nullable<Decimal>)
  nameWithType: SqlFunctions.Square(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square(Nullable<Double>)
  nameWithType: SqlFunctions.Square(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Square(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot(Nullable<Decimal>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot(Nullable<Double>)
  nameWithType: SqlFunctions.SquareRoot(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Decimal>,Nullable<Int32>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  nameWithType: SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.StringConvert(Nullable<Double>,Nullable<Int32>,Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  nameWithType: SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Stuff(String,Nullable<Int32>,Nullable<Int32>,String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan(Nullable<Decimal>)
  nameWithType: SqlFunctions.Tan(Nullable<Decimal>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Decimal>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan(Nullable<Double>)
  nameWithType: SqlFunctions.Tan(Nullable<Double>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Tan(Nullable<Double>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Unicode(String)
  nameWithType: SqlFunctions.Unicode(String)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.Unicode(String)
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName()
  nameWithType: SqlFunctions.UserName()
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName()
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName(Nullable<Int32>)
  nameWithType: SqlFunctions.UserName(Nullable<Int32>)
  fullName: System.Data.Objects.SqlClient.SqlFunctions.UserName(Nullable<Int32>)
- uid: System.Data.Objects.SqlClient.SqlFunctions.Acos*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Acos
  nameWithType: SqlFunctions.Acos
- uid: System.Data.Objects.SqlClient.SqlFunctions.Ascii*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Ascii
  nameWithType: SqlFunctions.Ascii
- uid: System.Data.Objects.SqlClient.SqlFunctions.Asin*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Asin
  nameWithType: SqlFunctions.Asin
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan
  nameWithType: SqlFunctions.Atan
- uid: System.Data.Objects.SqlClient.SqlFunctions.Atan2*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Atan2
  nameWithType: SqlFunctions.Atan2
- uid: System.Data.Objects.SqlClient.SqlFunctions.Char*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Char
  nameWithType: SqlFunctions.Char
- uid: System.Data.Objects.SqlClient.SqlFunctions.CharIndex*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CharIndex
  nameWithType: SqlFunctions.CharIndex
- uid: System.Data.Objects.SqlClient.SqlFunctions.Checksum*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Checksum
  nameWithType: SqlFunctions.Checksum
- uid: System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: ChecksumAggregate
  nameWithType: SqlFunctions.ChecksumAggregate
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cos*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cos
  nameWithType: SqlFunctions.Cos
- uid: System.Data.Objects.SqlClient.SqlFunctions.Cot*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Cot
  nameWithType: SqlFunctions.Cot
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentTimestamp
  nameWithType: SqlFunctions.CurrentTimestamp
- uid: System.Data.Objects.SqlClient.SqlFunctions.CurrentUser*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: CurrentUser
  nameWithType: SqlFunctions.CurrentUser
- uid: System.Data.Objects.SqlClient.SqlFunctions.DataLength*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DataLength
  nameWithType: SqlFunctions.DataLength
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateAdd*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateAdd
  nameWithType: SqlFunctions.DateAdd
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateDiff*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateDiff
  nameWithType: SqlFunctions.DateDiff
- uid: System.Data.Objects.SqlClient.SqlFunctions.DateName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DateName
  nameWithType: SqlFunctions.DateName
- uid: System.Data.Objects.SqlClient.SqlFunctions.DatePart*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: DatePart
  nameWithType: SqlFunctions.DatePart
- uid: System.Data.Objects.SqlClient.SqlFunctions.Degrees*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Degrees
  nameWithType: SqlFunctions.Degrees
- uid: System.Data.Objects.SqlClient.SqlFunctions.Difference*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Difference
  nameWithType: SqlFunctions.Difference
- uid: System.Data.Objects.SqlClient.SqlFunctions.Exp*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Exp
  nameWithType: SqlFunctions.Exp
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetDate
  nameWithType: SqlFunctions.GetDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: GetUtcDate
  nameWithType: SqlFunctions.GetUtcDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.HostName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: HostName
  nameWithType: SqlFunctions.HostName
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsDate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsDate
  nameWithType: SqlFunctions.IsDate
- uid: System.Data.Objects.SqlClient.SqlFunctions.IsNumeric*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: IsNumeric
  nameWithType: SqlFunctions.IsNumeric
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log
  nameWithType: SqlFunctions.Log
- uid: System.Data.Objects.SqlClient.SqlFunctions.Log10*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Log10
  nameWithType: SqlFunctions.Log10
- uid: System.Data.Objects.SqlClient.SqlFunctions.NChar*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: NChar
  nameWithType: SqlFunctions.NChar
- uid: System.Data.Objects.SqlClient.SqlFunctions.PatIndex*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: PatIndex
  nameWithType: SqlFunctions.PatIndex
- uid: System.Data.Objects.SqlClient.SqlFunctions.Pi*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Pi
  nameWithType: SqlFunctions.Pi
- uid: System.Data.Objects.SqlClient.SqlFunctions.QuoteName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: QuoteName
  nameWithType: SqlFunctions.QuoteName
- uid: System.Data.Objects.SqlClient.SqlFunctions.Radians*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Radians
  nameWithType: SqlFunctions.Radians
- uid: System.Data.Objects.SqlClient.SqlFunctions.Rand*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Rand
  nameWithType: SqlFunctions.Rand
- uid: System.Data.Objects.SqlClient.SqlFunctions.Replicate*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Replicate
  nameWithType: SqlFunctions.Replicate
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sign*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sign
  nameWithType: SqlFunctions.Sign
- uid: System.Data.Objects.SqlClient.SqlFunctions.Sin*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Sin
  nameWithType: SqlFunctions.Sin
- uid: System.Data.Objects.SqlClient.SqlFunctions.SoundCode*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SoundCode
  nameWithType: SqlFunctions.SoundCode
- uid: System.Data.Objects.SqlClient.SqlFunctions.Space*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Space
  nameWithType: SqlFunctions.Space
- uid: System.Data.Objects.SqlClient.SqlFunctions.Square*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Square
  nameWithType: SqlFunctions.Square
- uid: System.Data.Objects.SqlClient.SqlFunctions.SquareRoot*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: SquareRoot
  nameWithType: SqlFunctions.SquareRoot
- uid: System.Data.Objects.SqlClient.SqlFunctions.StringConvert*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: StringConvert
  nameWithType: SqlFunctions.StringConvert
- uid: System.Data.Objects.SqlClient.SqlFunctions.Stuff*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Stuff
  nameWithType: SqlFunctions.Stuff
- uid: System.Data.Objects.SqlClient.SqlFunctions.Tan*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Tan
  nameWithType: SqlFunctions.Tan
- uid: System.Data.Objects.SqlClient.SqlFunctions.Unicode*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: Unicode
  nameWithType: SqlFunctions.Unicode
- uid: System.Data.Objects.SqlClient.SqlFunctions.UserName*
  parent: System.Data.Objects.SqlClient.SqlFunctions
  isExternal: false
  name: UserName
  nameWithType: SqlFunctions.UserName
