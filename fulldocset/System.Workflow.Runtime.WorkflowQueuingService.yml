### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowQueuingService
  id: WorkflowQueuingService
  children:
  - System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)
  - System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)
  - System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)
  - System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)
  - System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty
  langs:
  - csharp
  name: WorkflowQueuingService
  nameWithType: WorkflowQueuingService
  fullName: System.Workflow.Runtime.WorkflowQueuingService
  type: Class
  summary: "サービスの管理を提供<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>オブジェクト。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowQueuingService は、ワークフロー インスタンスに関連付けられたワークフロー キューの管理に使用できるメソッドを提供します。"
  example:
  - "The following code example demonstrates a method, named `CreateQueue`, that initializes a WorkflowQueuingService object by calling the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=fullName> method. The code then uses the <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> method to determine if a <xref:System.Workflow.Runtime.WorkflowQueue> with a specified name exists. If it does not exist, the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method; if it does the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> method.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[WF_Samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowQueuingService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)
  id: CreateWorkflowQueue(System.IComparable,System.Boolean)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  langs:
  - csharp
  name: CreateWorkflowQueue(IComparable,Boolean)
  nameWithType: WorkflowQueuingService.CreateWorkflowQueue(IComparable,Boolean)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(IComparable,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "作成、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>によって指定された名前およびトランザクションのスコープを使用します。"
  remarks: "A<xref:System.Workflow.Runtime.WorkflowQueue>が作成されると、指定した`queueName`</xref:System.Workflow.Runtime.WorkflowQueue>。 トランザクションがある場合`true`、<xref:System.Workflow.Runtime.WorkflowQueue>は、現在のトランザクション内で認識のみ</xref:System.Workflow.Runtime.WorkflowQueue>。"
  example:
  - "The following code example demonstrates a method, named `CreateQueue`, that initializes a <xref:System.Workflow.Runtime.WorkflowQueuingService> object by calling the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=fullName> method. The code then uses the <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> method to determine if a <xref:System.Workflow.Runtime.WorkflowQueue> with a specified name exists. If it does not exist, the code calls the CreateWorkflowQueue method; if it does the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> method.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[WF_Samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "キューの名前。"
    - id: transactional
      type: System.Boolean
      description: "指定する値かどうか、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>は、現在のトランザクションのスコープ外に表示します。"
    return:
      type: System.Workflow.Runtime.WorkflowQueue
      description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref> object."
  overload: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>で指定された名前を持つ<code> queueName </code>既に存在します。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)
  id: DeleteWorkflowQueue(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  langs:
  - csharp
  name: DeleteWorkflowQueue(IComparable)
  nameWithType: WorkflowQueuingService.DeleteWorkflowQueue(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(IComparable)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "指定された削除<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates a method that writes a string to the console, creates an instance of <xref:System.Workflow.Runtime.WorkflowQueuingService> by calling the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=fullName> method. Finally, the code calls the DeleteWorkflowQueue method to delete the queue associated with a `QueueName` property on the current workflow.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#224](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#224)]\n [!code-vb[WF_Samples#224](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#224)]"
  syntax:
    content: public void DeleteWorkflowQueue (IComparable queueName);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "名前、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>を削除します。"
  overload: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)
  id: Exists(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  langs:
  - csharp
  name: Exists(IComparable)
  nameWithType: WorkflowQueuingService.Exists(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.Exists(IComparable)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "指定したかどうかテスト<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates a method, named `CreateQueue`, that initializes a <xref:System.Workflow.Runtime.WorkflowQueuingService> object by calling the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=fullName> method. The code then uses the Exists method to determine if a <xref:System.Workflow.Runtime.WorkflowQueue> with a specified name exists. If it does not exist, the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method; if it does the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> method.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[WF_Samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: public bool Exists (IComparable queueName);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "名前、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>が存在します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueuingService.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)
  id: GetWorkflowQueue(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  langs:
  - csharp
  name: GetWorkflowQueue(IComparable)
  nameWithType: WorkflowQueuingService.GetWorkflowQueue(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(IComparable)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "指定された取得<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates a method, named `CreateQueue`, that initializes a <xref:System.Workflow.Runtime.WorkflowQueuingService> object by calling the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=fullName> method. The code then uses the <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> method to determine if a <xref:System.Workflow.Runtime.WorkflowQueue> with a specified name exists. If it does not exist, the code calls the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method; if it does the code calls the GetWorkflowQueue method.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#223](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#223)]\n [!code-vb[WF_Samples#223](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#223)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);
    parameters:
    - id: queueName
      type: System.IComparable
      description: "名前、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>を取得します。"
    return:
      type: System.Workflow.Runtime.WorkflowQueue
      description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref> object."
  overload: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>queueName</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定した<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>が見つかりませんでした。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty
  id: PendingMessagesProperty
  parent: System.Workflow.Runtime.WorkflowQueuingService
  langs:
  - csharp
  name: PendingMessagesProperty
  nameWithType: WorkflowQueuingService.PendingMessagesProperty
  fullName: System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty
  type: Field
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "これに関連付けられたワークフロー キュー内の未処理項目を含む<xref href=&quot;System.Workflow.Runtime.WorkflowQueuingService&quot;></xref>です。"
  remarks: "ワークフロー インスタンスが完了するか、これに関連付けられたワークフロー キュー内の未処理項目のすべてを終了<xref:System.Workflow.Runtime.WorkflowQueuingService>、PendingMessagesProperty に移動されます</xref:System.Workflow.Runtime.WorkflowQueuingService>。"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: CreateWorkflowQueue(IComparable,Boolean)
  nameWithType: WorkflowQueuingService.CreateWorkflowQueue(IComparable,Boolean)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(IComparable,Boolean)
- uid: System.Workflow.Runtime.WorkflowQueue
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowQueue
  nameWithType: WorkflowQueue
  fullName: System.Workflow.Runtime.WorkflowQueue
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: DeleteWorkflowQueue(IComparable)
  nameWithType: WorkflowQueuingService.DeleteWorkflowQueue(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(IComparable)
- uid: System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: Exists(IComparable)
  nameWithType: WorkflowQueuingService.Exists(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.Exists(IComparable)
- uid: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: GetWorkflowQueue(IComparable)
  nameWithType: WorkflowQueuingService.GetWorkflowQueue(IComparable)
  fullName: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(IComparable)
- uid: System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: PendingMessagesProperty
  nameWithType: WorkflowQueuingService.PendingMessagesProperty
  fullName: System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue*
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: CreateWorkflowQueue
  nameWithType: WorkflowQueuingService.CreateWorkflowQueue
- uid: System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue*
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: DeleteWorkflowQueue
  nameWithType: WorkflowQueuingService.DeleteWorkflowQueue
- uid: System.Workflow.Runtime.WorkflowQueuingService.Exists*
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: Exists
  nameWithType: WorkflowQueuingService.Exists
- uid: System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue*
  parent: System.Workflow.Runtime.WorkflowQueuingService
  isExternal: false
  name: GetWorkflowQueue
  nameWithType: WorkflowQueuingService.GetWorkflowQueue
