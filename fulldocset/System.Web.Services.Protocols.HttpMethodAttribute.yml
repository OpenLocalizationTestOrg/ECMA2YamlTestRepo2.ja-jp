### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpMethodAttribute
  id: HttpMethodAttribute
  children:
  - System.Web.Services.Protocols.HttpMethodAttribute.#ctor
  - System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)
  - System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter
  - System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter
  langs:
  - csharp
  name: HttpMethodAttribute
  nameWithType: HttpMethodAttribute
  fullName: System.Web.Services.Protocols.HttpMethodAttribute
  type: Class
  summary: "この属性は、HTTP GET または HTTP POST のパラメーターをシリアル化する型が XML Web サービス メソッドに送信され、XML Web サービス メソッドから応答の読み取りセットを使用して XML Web サービス クライアントに適用します。 このクラスは継承できません。"
  remarks: "XML Web サービス クライアントは、HTTP-GET を使用して、XML Web サービス メソッドを呼び出す場合<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>に設定する必要があります`XmlReturnReader`と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>&quot;éý&quot; `UrlParameterWriter`</xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> 。 XML Web サービス クライアントが HTTP POST を使用して XML Web サービス呼び出しを設定する必要があります<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>に`XmlReturnReader`と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>に`HtmlFormParameterWriter`</xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A></xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>。"
  example:
  - "The following example is a proxy class generated by the Wsdl.exe utility for calling an XML Web service utility using HTTP-POST. The Wsdl.exe automatically supplies the correct types for <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>, along with specifying that the proxy class inherits from <xref:System.Web.Services.Protocols.HttpPostClientProtocol>.  \n  \n [!code-cs[Classic HttpMethodAttribute Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_21_1.cs)]\n [!code-cpp[Classic HttpMethodAttribute Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_21_1.cpp)]\n [!code-vb[Classic HttpMethodAttribute Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_21_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class HttpMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  langs:
  - csharp
  name: HttpMethodAttribute()
  nameWithType: HttpMethodAttribute.HttpMethodAttribute()
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.HttpMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.HttpMethodAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public HttpMethodAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  langs:
  - csharp
  name: HttpMethodAttribute(Type,Type)
  nameWithType: HttpMethodAttribute.HttpMethodAttribute(Type,Type)
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.HttpMethodAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.HttpMethodAttribute&quot;></xref>です。"
  syntax:
    content: public HttpMethodAttribute (Type returnFormatter, Type parameterFormatter);
    parameters:
    - id: returnFormatter
      type: System.Type
      description: "初期化、<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter*>プロパティを<xref:System.Type>XML Web サービス メソッドからの応答を逆シリアル化します</xref:System.Type></xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter*>。"
    - id: parameterFormatter
      type: System.Type
      description: "初期化、<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter*>プロパティを<xref:System.Type>XML Web サービス メソッドへの XML Web サービス クライアントから送信されるパラメーターをシリアル化します</xref:System.Type></xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter*>。"
  overload: System.Web.Services.Protocols.HttpMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter
  id: ParameterFormatter
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  langs:
  - csharp
  name: ParameterFormatter
  nameWithType: HttpMethodAttribute.ParameterFormatter
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定、 <xref:System.Type>XML Web サービス メソッドへの XML Web サービス クライアントから送信されるパラメーターをシリアル化します</xref:System.Type>。"
  remarks: "XML Web サービス クライアントは、HTTP GET または HTTP POST を使用して、XML Web サービス メソッドを呼び出すが場合、ParameterFormatter 必要があります`XMLReturnReader`です。"
  example:
  - "The example is a proxy class generated by the Wsdl.exe utility for an XML Web service client using HTTP-GET, setting ParameterFormatter to the required value of `XMLReturnReader`.  \n  \n [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_27_1.cpp)]\n [!code-cs[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_27_1.cs)]\n [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_27_1.vb)]"
  syntax:
    content: public Type ParameterFormatter { get; set; }
    return:
      type: System.Type
      description: "A <xref:System.Type>XML Web サービス メソッドへの XML Web サービス クライアントから送信されるパラメーターをシリアル化します</xref:System.Type>。 既定値はありません。"
  overload: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter
  id: ReturnFormatter
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  langs:
  - csharp
  name: ReturnFormatter
  nameWithType: HttpMethodAttribute.ReturnFormatter
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定、 <xref:System.Type>XML Web サービス メソッドからの応答を逆シリアル化します</xref:System.Type>。"
  remarks: "XML Web サービス クライアントは、HTTP GET を使用する XML Web サービス メソッドを呼び出すが場合、ReturnFormatter 必要があります`UrlParameterWriter`に HTTP POST を使用してクライアントが ReturnFormatter を設定する必要がありますが、`HtmlFormParameterWriter`です。"
  example:
  - "The example is a proxy class generated by the Wsdl.exe utility for an XML Web service client using HTTP-GET, setting ReturnFormatter to the required value of `UrlParameterWriter`.  \n  \n [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_76_1.cpp)]\n [!code-cs[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_76_1.cs)]\n [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_76_1.vb)]"
  syntax:
    content: public Type ReturnFormatter { get; set; }
    return:
      type: System.Type
      description: "A <xref:System.Type>XML Web サービス メソッドからの応答を逆シリアル化します</xref:System.Type>。 既定値はありません。"
  overload: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.HttpMethodAttribute.#ctor
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: HttpMethodAttribute()
  nameWithType: HttpMethodAttribute.HttpMethodAttribute()
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.HttpMethodAttribute()
- uid: System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: HttpMethodAttribute(Type,Type)
  nameWithType: HttpMethodAttribute.HttpMethodAttribute(Type,Type)
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.HttpMethodAttribute(Type,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: ParameterFormatter
  nameWithType: HttpMethodAttribute.ParameterFormatter
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: ReturnFormatter
  nameWithType: HttpMethodAttribute.ReturnFormatter
  fullName: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter
- uid: System.Web.Services.Protocols.HttpMethodAttribute.#ctor*
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: HttpMethodAttribute
  nameWithType: HttpMethodAttribute.HttpMethodAttribute
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter*
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: ParameterFormatter
  nameWithType: HttpMethodAttribute.ParameterFormatter
- uid: System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter*
  parent: System.Web.Services.Protocols.HttpMethodAttribute
  isExternal: false
  name: ReturnFormatter
  nameWithType: HttpMethodAttribute.ReturnFormatter
