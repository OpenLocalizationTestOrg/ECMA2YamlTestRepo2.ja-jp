### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  summary: "計算に使用する数式を指定します、<xref:System.Diagnostics.PerformanceCounter.NextValue*>のメソッド、 <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref>インスタンス</xref:System.Diagnostics.PerformanceCounter.NextValue*>。"
  remarks: "カウンターの種類によっては、1 つまたは複数のカウンター サンプルに基づく計算値を表す他のユーザーに対し、生データを表します。 使用可能なカウンターの種類を次のカテゴリに分類されます。      平均: は、時間の経過と共に値を測定し、最後の&2; つの測定値の平均値を表示します。 平均各カウンターに関連付けられているとは関連するサンプルの数を追跡するベース カウンターです。      -違い: が&1; つ前の最後の計測を減算して、正数である場合は、差を表示負の場合はゼロを表示します。      即時: 最新の計測値を表示します。      -割合: は、計算値をパーセンテージとして表示します。      : レートの数は、時間の経過と共にイベント数が増加するをサンプリングし、アクティビティの割合を表示する時間を変更してカウントの値の変更を除算します。       パフォーマンス カウンター データのサンプリング、平均を表すカウンターの種類を使用してをその生のデータ値、使用する意味のあるします。 生データ カウンターなど、`NumberOfItems64`ランダム サンプルからサンプルには、データを公開できます。 カウンターが返す値の平均を計算する数式するは (X 0 + X 1 +… + X n)/n を指定すると、それぞれの X i が未処理のカウンター サンプルです。       レート カウンターは、カウンターの平均のようなよりリソースが使用されるものと速度が増加する場合に便利です。 短時間の平均を計算する数式は、((X X n 0)/(T n-t 0))/頻度、それぞれの X i はカウンター サンプルと各 T i は、対応するサンプルの作成時。 1 秒あたりの平均使用量になります。      > [!NOTE] > 時間ベースが秒では、特に指示しない限り、します。       アプリケーション (の作成とカスタム パフォーマンス カウンターの書き込み) をインストルメント時に可能性がありますを作成する、計算で使用されている付随するベース カウンターに依存するパフォーマンス カウンターの種類。 関連付けられているそのカウンターの直後に基本カウンター必要があります、<xref:System.Diagnostics.CounterCreationDataCollection>アプリケーションで使用するコレクション</xref:System.Diagnostics.CounterCreationDataCollection>。 次の表では、対応するパフォーマンス カウンター型に基本カウンター型が一覧表示します。      |基本カウンター型 |パフォーマンス カウンターの種類 |  |-----------------------|-------------------------------|  |`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|   |`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|   |`RawBase`|`RawFraction`|   |`SampleBase`|`SampleFraction`|"
  example:
  - "The following examples demonstrate several of the counter types in the PerformanceCounterType enumeration.  \n  \n `AverageCount64`  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_1.vb)]  \n  \n `AverageTimer32`  \n  \n [!code-vb[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_2.vb)]\n [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_2.cpp)]\n [!code-cs[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_2.cs)]  \n  \n `ElapsedTime`  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_3.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_3.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_3.vb)]  \n  \n `NumberOfItems32`  \n  \n [!code-cs[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_4.cs)]\n [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_4.cpp)]\n [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_4.vb)]  \n  \n `NumberOfItems64`  \n  \n [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_5.cpp)]\n [!code-cs[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_5.cs)]\n [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_5.vb)]  \n  \n `SampleFraction`  \n  \n [!code-vb[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_6.vb)]\n [!code-cs[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_6.cs)]  \n  \n `RateOfCountsPerSecond32`  \n  \n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_7.cs)]\n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_7.vb)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_7.cpp)]  \n  \n `RateOfCountsPerSecond64`  \n  \n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_8.vb)]\n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_8.cs)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_8.cpp)]  \n  \n `RawFraction`  \n  \n [!code-cs[PerformanceCounterType.RawFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_9.cs)]\n [!code-cpp[PerformanceCounterType.RawFraction#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_9.cpp)]\n [!code-vb[PerformanceCounterType.RawFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_9.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))]

      public enum PerformanceCounterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "など、時間やカウントの平均の計算に使用される基本カウンター <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;> </xref>と<xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;></xref>です。 存在&quot;操作ごとの時間&quot;カウンターの計算の分母を格納または「操作あたりの数」です。"
  syntax:
    content: AverageBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "項目の数、平均すると、中に処理された操作を示す平均のカウンター。 この型のカウンターは、完了した操作の数に処理されたアイテムの比率を表示します。 比率は、最後の期間中、完了した操作の数には、最後の間隔中に処理されたアイテムの数を比較して計算されます。"
  remarks: "Formula: (N 1 -N 0)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, and the B 1 and B 0 are their corresponding `AverageBase` values. Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk Bytes/Transfer."
  syntax:
    content: AverageCount64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "かかる時間は、平均、プロセスまたは操作を完了する時間を計測する平均のカウンターです。 この型のカウンターは、プロセス、またはその時点で完了した操作の数、サンプル間隔の経過時間の合計の比率を表示します。 このカウンターの種類は、システム クロックのタイマー刻み単位で時間を計測します。"
  remarks: "Formula: ((N 1 -N 0)/F)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, B 1 and B 0 are their corresponding `AverageBase` values, and F is the number of ticks per second. The value of F is factored into the equation so that the result can be displayed in seconds. Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk sec/Transfer."
  syntax:
    content: AverageTimer32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "計測対象の属性、2 つの最新のサンプル間隔の間での変更を示す違いカウンター。"
  remarks: '数式: N 1 -N 0、n-1 N 0 があるパフォーマンス カウンターの値。'
  syntax:
    content: CounterDelta32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "計測対象の属性、2 つの最新のサンプル間隔の間での変更を示す違いカウンター。 同じでは、 <xref uid=&quot;langword_csharp_CounterDelta32&quot; name=&quot;CounterDelta32&quot; href=&quot;&quot;> </xref>カウンター型である点を除いてより大きな値を格納する大きなフィールドを使用します。"
  remarks: '数式: N 1 -N 0、n-1 N 0 があるパフォーマンス カウンターの値。'
  syntax:
    content: CounterDelta64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリングする項目の数を示す、ベース カウンターです。 複数のタイミングをとりながらをサンプリングする項目の平均を取得する、計算の分母として使用される類似したアイテムです。 Used with <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>."
  syntax:
    content: CounterMultiBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "1 つまたは複数のコンポーネントのアクティブな時間をサンプル間隔の時間の合計に対するパーセンテージとして表示するパーセンテージ カウンターです。 分子は同時に運用されるコンポーネントのアクティブな時間を記録するため、結果のパーセントは 100% を超えることができます。"
  remarks: "このカウンターは、マルチ タイマーです。 マルチ タイマーは、プロセッサやディスクなどのコンポーネントの&1; つ以上のインスタンスからデータを収集します。 このカウンターの種類が異なる`CounterMultiTimer100Ns`点で、時間を 100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻み単位で計測します。       数式: ((1 - N 0)/(1 - 0 D)) x 100/B、ここで N 1 および 0 を N にはパフォーマンス カウンターの値が 1 と 0 D、システム パフォーマンス タイマーのタイマー刻み単位で計算され、変数 B は、監視対象コンポーネントの基本の数を示します (基本型のカウンターを使用して`CounterMultiBase`)。 したがって、分子を監視対象のコンポーネントがアクティブにし、分母は、サンプル間隔の経過時間の合計を表します、サンプル間隔の部分を表します。"
  syntax:
    content: CounterMultiTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリング間隔の時間の合計に対するパーセンテージとして&1; つまたは複数のコンポーネントのアクティブな時間を示す割合カウンター。 時間を 100 ナノ秒 (ns) 単位で計測します。"
  remarks: "このカウンターの種類は、マルチ タイマーがします。 プロセッサやディスクなどのコンポーネントの&1; つ以上のインスタンスの監視には、マルチ タイマーが設計されています。       数式: ((1 - N 0)/(1 - 0 D)) x 100/B、ここで N 1 および 0 を N にはパフォーマンス カウンターの値が 1 と 0 D を 100 ナノ秒単位で計算され、変数 B は、監視対象コンポーネントの基本の数を示します (基本型のカウンターを使用して`CounterMultiBase`)。 したがって、分子を監視対象のコンポーネントがアクティブにし、分母は、サンプル間隔の経過時間の合計を表します、サンプル間隔の部分を表します。"
  syntax:
    content: CounterMultiTimer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリング間隔の時間の合計に対するパーセンテージとして&1; つまたは複数のコンポーネントのアクティブな時間を示す割合カウンター。 このタイプのカウンターは、100 ナノ秒 (ns) 単位で時間を測定します。 アクティブな時間は、コンポーネントがアクティブでなかった時間を計測し、監視オブジェクトの数を 100% を乗算した結果を引いて、派生します。"
  remarks: "このカウンターの種類は、逆のマルチ タイマーがします。 プロセッサやディスクなどのコンポーネントの&1; つ以上のインスタンスの監視には、マルチ タイマーが設計されています。 逆カウンターは、コンポーネントはアクティブでない時間を測定し、アクティブな時間を非アクティブな時間の数式の測定値から派生します (B ((N 1 - N 0)/(1 - 0 D))) x 100、分母は、サンプル間隔の経過時間の合計を表しますが分子を表す時間間隔中に監視対象のコンポーネントがアクティブでなかった、B が監視対象コンポーネントの数を表す場合。、型のベース カウンターを使用して`CounterMultiBase`です。"
  syntax:
    content: CounterMultiTimer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリング間隔の時間の合計に対するパーセンテージとして&1; つまたは複数のコンポーネントのアクティブな時間を示す割合カウンター。 コンポーネントがアクティブでなかった時間を計測し、監視オブジェクトの数が 100% から結果を引いて、アクティブな時間を取得します。"
  remarks: "このカウンターの種類は、逆のマルチ タイマーがします。 マルチ タイマーは、プロセッサやディスクなどのコンポーネントの&1; つ以上のインスタンスを監視します。 逆カウンターは、コンポーネントはアクティブでない時間を測定し、アクティブな時間をこの計測値から派生します。       このカウンターは異なります`CounterMultiTimer100NsInverse`点で、時間を 100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻み単位で計測します。       数式: (B - ((1 - N 0)/(1 - D 0))) x 100、分母は、サンプル間隔の経過時間の合計を表す、分子を表す時間間隔、監視対象のコンポーネントがアクティブでなかった、B はコンポーネントの数を表す場合、監視されている型のベース カウンターを使用して`CounterMultiBase`です。"
  syntax:
    content: CounterMultiTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "割合を示すカウンターの平均時間、コンポーネントが、合計のサンプリング時間の割合としてアクティブになっています。"
  remarks: '数式: (N 1 - N 0)/(1 - 0 D) ここで N 1、N 0 は、パフォーマンス カウンターの値、D 1 と 0 D、対応する時間の測定値です。 したがって、分子を監視対象のコンポーネントがアクティブにし、分母は、サンプル間隔の経過時間の合計を表します、サンプル間隔の部分を表します。'
  syntax:
    content: CounterTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリング間隔中に観察されたアクティブな時間の割合の平均値を表示するパーセンテージ カウンター。 これらのカウンターの値は、サービスがアクティブであった時間の割合を監視し、その値を 100% から引いて計算されます。"
  remarks: "これは、逆カウンター タイプです。 逆カウンター コンポーネントは、時間を計測は、アクティブに注意してくださいし、アクティブな時間をこの計測値から派生します。 このカウンターの種類が同じ`CounterTimer100NsInv`時間を 100 ナノ秒単位ではなく、システム パフォーマンス タイマーのタイマー刻み単位で計測する点が異なります。       数式: (1 - ((1 - N 0)/(1 - 0 D))) x 100、ここで、分子を表します、時間間隔中に監視対象のコンポーネントがアクティブでなかったし、分母は、サンプル間隔の経過時間の合計を表します。"
  syntax:
    content: CounterTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "平均カウンター リソースに対するキューの長さの平均時間の経過と共に監視できます。 間隔の時間で割った最後の&2; つのサンプリング間隔中に観察されたキューの長さの差を示します。 このカウンターの種類は通常、キューに登録された項目または待機の数を追跡するために使用されます。"
  remarks: '数式: (N 1 - N 0)/(1 - 0 D) ここで、分子がキュー内の項目の数を表しますおよび分母は、時間を表しますの前回のサンプル間隔中に経過時間します。'
  syntax:
    content: CountPerTimeInterval32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "リソースに対するキューの長さの平均が時間の経過と共に監視する平均のカウンターです。 この型のカウンターは、間隔の時間で割った最後の&2; つのサンプリング間隔中に観察されたキューの長さの差を表示します。 このカウンターの種類が同じ<xref uid=&quot;langword_csharp_CountPerTimeInterval32&quot; name=&quot;CountPerTimeInterval32&quot; href=&quot;&quot;></xref>より大きな値を格納する大きなフィールドを使用する点を除いて。 このカウンターの種類は通常、キューに登録された項目または待機中の高ボリュームまたは非常に大きな数を追跡するために使用されます。"
  remarks: '数式: (N 1 - N 0)/(1 - 0 D)、分子がキュー内の項目の数を表すおよび分母が時刻を表す経過時間をサンプリング間隔中にします。'
  syntax:
    content: CountPerTimeInterval64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "コンポーネントまたはプロセスの開始時と、この値が計算された時刻までの合計時間を示す違いタイマーです。"
  remarks: "Formula: (D 0 - N 0) / F, where D 0 represents the current time, N 0 represents the time the object was started, and F represents the number of time units that elapse in one second. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ System Up Time."
  syntax:
    content: ElapsedTime
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "最後に観察された値を示す瞬時カウンター。 使用される、たとえば、アイテムまたは操作の簡単なカウントを維持するためにします。"
  remarks: "Formula: None. Does not display an average, but shows the raw data as it is collected.  \n  \n Counters of this type include Memory\\Available Bytes."
  syntax:
    content: NumberOfItems32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "最後に観察された値を示す瞬時カウンター。 使用される、たとえば、非常に多数のアイテムまたは操作の単純なカウントを維持するためにします。 同じである<xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;></xref>より大きな値を格納する大きなフィールドを使用する点を除いて。"
  remarks: '式: なし。 平均は表示されませんが、収集された、生データを表示できます。'
  syntax:
    content: NumberOfItems64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "16 進形式で、最後に計測された値を示す瞬時カウンター。 使用される、たとえば、アイテムまたは操作の簡単なカウントを維持するためにします。"
  remarks: '式: なし。 平均は表示されませんが、収集された、生データを表示できます。'
  syntax:
    content: NumberOfItemsHEX32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "最後に観察された値を示す瞬時カウンター。 使用される、たとえば、非常に多数のアイテムまたは操作の単純なカウントを維持するためにします。 同じである<xref uid=&quot;langword_csharp_NumberOfItemsHEX32&quot; name=&quot;NumberOfItemsHEX32&quot; href=&quot;&quot;></xref>より大きな値を格納する大きなフィールドを使用する点を除いて。"
  remarks: '式: なし。 平均は表示されませんが、収集された生データを表示'
  syntax:
    content: NumberOfItemsHEX64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "時、サンプル間隔の&1; 秒あたりに完了した操作の平均数を示す違いカウンター。 このタイプのカウンターは、システム クロックのタイマー刻み単位で時間を測定します。"
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Operations/sec."
  syntax:
    content: RateOfCountsPerSecond32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "時、サンプル間隔の&1; 秒あたりに完了した操作の平均数を示す違いカウンター。 このタイプのカウンターは、システム クロックのタイマー刻み単位で時間を測定します。 このカウンターの種類が同じ、 <xref uid=&quot;langword_csharp_RateOfCountsPerSecond32&quot; name=&quot;RateOfCountsPerSecond32&quot; href=&quot;&quot;> </xref>型であり、これは、大量の一連の項目またはバイト転送速度などの&1; 秒あたりの操作を追跡するためより大きな値を格納する大きなフィールドを使用します。"
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Bytes/sec."
  syntax:
    content: RateOfCountsPerSecond64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "通常の算術分数を表すカウンターの分母を格納するベース カウンターです。 この値がの分母として使用する前に&0; より大きいことを確認して、 <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;> </xref>値の計算です。"
  syntax:
    content: RawBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "そのセットに、割合としてのサブセットの比率を示す即時パーセント カウンターです。 たとえば、ディスク上のバイトの総数へのディスク上の使用中バイト数を比較します。 この型のカウンターは、現在の割合のみ、時間の経過と共に平均ではなくを表示します。"
  remarks: "Formula: (N 0 / D 0) x 100, where D 0 represents a measured attribute (using a base counter of type `RawBase`) and N 0 represents one component of that attribute.  \n  \n Counters of this type include Paging File\\\\% Usage Peak."
  syntax:
    content: RawFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリングの数を格納するベース カウンターは、実行が中断され、サンプリング分数の分母として使用されます。 サンプリング分数は 1 をいたサンプルの数 (または<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>) サンプル割り込み用です。 この値がの計算の分母として使用する前に&0; より大きいことを確認して<xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;></xref>です。"
  syntax:
    content: SampleBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "1 秒間に完了した操作の平均数を示す平均のカウンター。 この型のカウンター データのサンプルが、各サンプリングは、1 つまたは&0; を返しますを中断します。 カウンターのデータは、サンプリングされたの数です。 これは、システム パフォーマンス タイマーのタイマー刻み単位で時間を計測します。"
  remarks: '数式: (N 1-N 0)/((D 1 – D 0)/F)、分子 (N) は、完了した操作の数を表す、分母 (D) は、システム パフォーマンス タイマーのタイマー刻み単位での経過時間を表す、F は、1 秒間に経過時間をタイマー刻みの数を表します。 F が式で考慮されるため、結果は、秒単位で表示できます。'
  syntax:
    content: SampleCounter
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "最後の&2; つのサンプリング間隔中にすべての操作にヒット数の平均の比率を示すパーセンテージ カウンター。"
  remarks: "Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.  \n  \n Counters of this type include Cache\\Pin Read Hits %."
  syntax:
    content: SampleFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプル間隔の経過時間の合計に対するパーセンテージとしてコンポーネントのアクティブな時間を示すパーセンテージ カウンター。 時間を 100 ナノ秒 (ns) 単位で計測します。 このタイプのカウンターは、一度に&1; つのコンポーネントの利用状況を測定するよう設計されています。"
  remarks: "Formula: (N 1 - N 0) / (D 1 - D 0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % User Time."
  syntax:
    content: Timer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "サンプリング間隔中に観察されたアクティブな時間の割合の平均を示すパーセンテージ カウンター。"
  remarks: "This is an inverse counter. Counters of this type calculate active time by measuring the time that the service was inactive and then subtracting the percentage of active time from 100 percent.  \n  \n Formula: (1- ((N 1 - N 0) / (D 1 - D 0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % Processor Time."
  syntax:
    content: Timer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
