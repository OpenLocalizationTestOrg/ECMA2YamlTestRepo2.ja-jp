### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinder
  id: DataBinder
  children:
  - System.Web.UI.DataBinder.#ctor
  - System.Web.UI.DataBinder.EnableCaching
  - System.Web.UI.DataBinder.Eval(System.Object,System.String)
  - System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetDataItem(System.Object)
  - System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.IsBindableType(System.Type)
  langs:
  - csharp
  name: DataBinder
  nameWithType: DataBinder
  fullName: System.Web.UI.DataBinder
  type: Class
  summary: "アプリケーションの迅速な開発を生成し、データ バインディング式の構文を解析する (RAD) デザイナーのサポートを提供します。 このクラスは継承できません。"
  remarks: "オーバー ロードされた、静的なを使用する<xref:System.Web.UI.DataBinder.Eval%2A>、ASP.NET Web ページにデータ バインディングの構文では、このクラスのメソッド</xref:System.Web.UI.DataBinder.Eval%2A>。 これはより標準的なデータ バインディングを使用する簡単な構文を提供します。 ただし、ため`DataBinder.Eval`自動型変換は、パフォーマンスが低下する可能性がします。       ASP.NET データ バインド、式、および構文の詳細については、次を参照してください。[データベースへのバインド](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)と[データ バインド式の概要](~/add/includes/ajax-current-ext-md.md)です。       .NET Framework 4.5 以降、モデル バインディングを使用して、以前のバージョンでのデータ バインディングを使用して実行する必要があるタスクの一部を簡単にします。 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  example:
  - "The following example uses the static <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> method to populate the fields of a <xref:System.Web.UI.WebControls.Repeater> control using an <xref:System.Collections.ArrayList> of `Product` objects. The <xref:System.Web.UI.DataBinder.Eval%2A> method could be applied with the same syntax, but it would not perform as quickly.  \n  \n This example uses a custom `Product` class which exposes a string `Model` property and a numeric `UnitPrice` property.  \n  \n [!code-vb[System.Web.UI.DataBinder#1](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_1.aspx)]\n [!code-cs[System.Web.UI.DataBinder#1](~/add/codesnippet/csharp/t-system.web.ui.databinder_1.aspx)]  \n  \n The following code is the custom `Product` class. This code should be included in a separate class file in the App_Code directory, such as Product.cs or Product.vb.  \n  \n [!code-cs[System.Web.UI.DataBinder#2](~/add/codesnippet/csharp/t-system.web.ui.databinder_2.cs)]\n [!code-vb[System.Web.UI.DataBinder#2](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_2.vb)]"
  syntax:
    content: public sealed class DataBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.DataBinder&quot;> </xref>クラスです。"
  syntax:
    content: public DataBinder ();
    parameters: []
  overload: System.Web.UI.DataBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "取得またはを実行時にデータのキャッシュが有効になっているかどうかを示す値を設定します。"
  syntax:
    content: public static bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャッシュが有効な場合、 <xref href=&quot;System.Web.UI.DataBinder&quot;> </xref>クラスです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.DataBinder.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "実行時にデータ バインディング式を評価します。"
  remarks: "値、`expression`パラメーターは、パブリック プロパティに評価される必要があります。       Visual Studio などのアプリケーションの迅速な development (RAD) デザイナーでのデータ バインドを作成する場合、このメソッドは自動的に呼び出されます。 使用することできますも宣言的テキスト文字列にキャストします。 使用するためには、`<%#  %>`式の構文、標準の ASP.NET データ バインドで使用されています。       このメソッドは、テンプレートの一覧にあるコントロールにデータをバインドするときに特に便利です。      > [!NOTE] > このメソッドは、遅延バインディングの評価を実行するため、実行時にリフレクションを使用してを引き起こす可能性がパフォーマンスが著しく低下標準の ASP.NET データ バインド構文を比較します。       一覧のいずれかの Web などのコントロール、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.DataList>、または<xref:System.Web.UI.WebControls.Repeater>、`container`する必要があります`Container.DataItem`</xref:System.Web.UI.WebControls.Repeater></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 ページで、に対してをバインドする場合`container`する必要があります`Page`です。       .NET Framework 4.5 以降、モデル バインディングを使用して、以前のバージョンでのデータ バインディングを使用して実行する必要があるタスクの一部を簡単にします。 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_3_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_3_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_3_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_3_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_4.aspx)]"
  syntax:
    content: public static object Eval (object container, string expression);
    parameters:
    - id: container
      type: System.Object
      description: "式の評価対象となるオブジェクトの参照。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    - id: expression
      type: System.String
      description: "ナビゲーション パス、`container`オブジェクトをバインドされたコントロール プロパティに格納されるパブリック プロパティの値にします。 プロパティまたはフィールド名をなど、ピリオドで区切られた文字列でなければなりません`Tables[0].DefaultView.[0].Price`(C#) または`Tables(0).DefaultView.(0).Price`Visual Basic でします。"
    return:
      type: System.Object
      description: "<xref:System.Object>データ バインディング式を評価して得た結果インスタンス</xref:System.Object>。"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>トリミング後、または空の文字列。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  id: Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "実行時にデータ バインディング式を評価し、結果の文字列の書式を設定します。"
  remarks: "値`expression`パブリック プロパティに評価される必要があります。       .NET Framework の書式指定文字列の詳細については、次を参照してください。[型の書式設定](~/add/includes/ajax-current-ext-md.md)です。       Visual Studio などのアプリケーションの迅速な development (RAD) デザイナーでのデータ バインドを作成する場合、このメソッドは自動的に呼び出されます。 使用することできますも宣言によって、 <xref:System.Object> <xref:System.String>。</xref:System.String>データ バインディング式から結果</xref:System.Object>を変換するには  使用するには、メソッド宣言を使用して、`<%#   %>`式の構文、標準の ASP.NET データ バインドで使用されています。       このメソッドは、テンプレートの一覧にあるコントロールにデータをバインドするときに特に便利です。      > [!NOTE] > このメソッドは、遅延バインディングの評価を実行するため、実行時にリフレクションを使用してを引き起こす可能性がパフォーマンスが著しく低下標準の ASP.NET データ バインド構文を比較します。 文字列の書式設定する必要がない場合に特に慎重に、このメソッドを使用します。       一覧のいずれかの Web などのコントロール、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.DataList>、または<xref:System.Web.UI.WebControls.Repeater>、`container`する必要があります`Container.DataItem`</xref:System.Web.UI.WebControls.Repeater></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 ページで、に対してをバインドする場合`container`する必要があります`Page`です。       .NET Framework 4.5 以降、モデル バインディングを使用して、以前のバージョンでのデータ バインディングを使用して実行する必要があるタスクの一部を簡単にします。 Web フォーム モデル バインディングの使用に関するチュートリアル シリーズは、次を参照してください。[モデル バインディング機能と Web フォーム](http://go.microsoft.com/fwlink/?LinkId=286117)です。"
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_2_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_2_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_2_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_2_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_4.aspx)]"
  syntax:
    content: public static string Eval (object container, string expression, string format);
    parameters:
    - id: container
      type: System.Object
      description: "式の評価対象となるオブジェクトの参照。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    - id: expression
      type: System.String
      description: "ナビゲーション パス、`container`オブジェクトをバインドされたコントロール プロパティに格納されるパブリック プロパティの値にします。 プロパティまたはフィールド名をなど、ピリオドで区切られた文字列でなければなりません`Tables[0].DefaultView.[0].Price`(C#) または`Tables(0).DefaultView.(0).Price`Visual Basic でします。"
    - id: format
      type: System.String
      description: ".NET Framework 形式文字列 (で使用されるものと同様に&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;) に変換する、<xref:System.Object>にデータ バインディング式によって返されるインスタンス、<xref:System.String>オブジェクト</xref:System.String></xref:System.Object>。"
    return:
      type: System.String
      description: "A<xref:System.String>オブジェクト データ バインディング式を評価して、文字列型への変換を実行した結果します</xref:System.String>。"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  id: GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "オブジェクトの宣言されたデータ項目を取得します。"
  remarks: "このメソッドは、<xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>メソッドを無視してその`foundDataItem`パラメーター、結果を返すときにします</xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>。       オブジェクトのデータ項目は、2 つの方法のいずれかで識別されます。 コンテナー オブジェクトを実装する場合、 <xref:System.Web.UI.IDataItemContainer>、インターフェイス、<xref:System.Web.UI.IDataItemContainer.DataItem%2A>プロパティは、データ項目を識別し、その値が返されます</xref:System.Web.UI.IDataItemContainer.DataItem%2A></xref:System.Web.UI.IDataItemContainer>。 それ以外の場合、メソッドは、解決するには、&quot;DataItem&quot;という名前のコンテナーのプロパティを取得を試みます。"
  syntax:
    content: public static object GetDataItem (object container);
    parameters:
    - id: container
      type: System.Object
      description: "式の評価対象となるオブジェクトの参照。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    return:
      type: System.Object
      description: "コンテナーの宣言されたデータ項目を表すオブジェクト。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>データ項目が見つからない場合、またはに評価されると、コンテナー <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  id: GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "成功または失敗を示す、オブジェクトの宣言されたデータ項目を取得します。"
  remarks: "オブジェクトのデータ項目では、2 つの方法を識別します。 コンテナー オブジェクトを実装する場合、 <xref:System.Web.UI.IDataItemContainer>、インターフェイス、<xref:System.Web.UI.IDataItemContainer.DataItem%2A>プロパティは、データ項目を識別しが返されます</xref:System.Web.UI.IDataItemContainer.DataItem%2A></xref:System.Web.UI.IDataItemContainer>。 それ以外の場合、メソッドは、解決するには、&quot;DataItem&quot;という名前のコンテナーのプロパティを取得を試みます。"
  syntax:
    content: public static object GetDataItem (object container, out bool foundDataItem);
    parameters:
    - id: container
      type: System.Object
      description: "式の評価対象となるオブジェクトの参照。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    - id: foundDataItem
      type: System.Boolean
      description: "データ項目が正常に解決および返されるかどうかを示すブール値。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Object
      description: "コンテナーの宣言されたデータ項目を表すオブジェクト。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>データ項目が見つからない場合、またはに評価されると、コンテナー <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したコンテナーおよびナビゲーション パスのプロパティの値を取得します。"
  remarks: "値`expr`パブリック プロパティに評価される必要があります。       一覧のいずれかの Web などのコントロール、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.DataList>、または<xref:System.Web.UI.WebControls.Repeater>、`container`する必要があります`Container.DataItem`</xref:System.Web.UI.WebControls.Repeater></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 ページで、に対してをバインドする場合`container`する必要があります`Page`です。"
  syntax:
    content: public static object GetIndexedPropertyValue (object container, string expr);
    parameters:
    - id: container
      type: System.Object
      description: "オブジェクトの参照を対象となる`expr`が評価されます。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    - id: expr
      type: System.String
      description: "ナビゲーション パス、`container`オブジェクトをバインドされたコントロール プロパティに配置するパブリック プロパティの値にします。 プロパティまたはフィールド名をなど、ピリオドで区切られた文字列でなければなりません`Tables[0].DefaultView.[0].Price`(C#) または`Tables(0).DefaultView.(0).Price`Visual Basic でします。"
    return:
      type: System.Object
      description: "データ バインディング式を評価して得た結果オブジェクト。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>expr</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>expr</code> is not a valid indexed expression.  \n  \n \\- or -  \n  \n <code>expr</code> does not allow indexed access."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定されたコンテナーの指定したプロパティの値を取得し、結果をフォーマットします。"
  remarks: "GetIndexedPropertyValue メソッドを呼び出して、<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>メソッド、および、使用、<xref:System.String.Format%2A?displayProperty=fullName>メソッドで指定された結果を書式設定を`format`パラメーター</xref:System.String.Format%2A?displayProperty=fullName> </xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 。 .NET Framework 形式文字列 (で使用されるものと同様に<xref:System.String.Format%2A?displayProperty=fullName>) に変換、<xref:System.Object>にデータ バインディング式によって返されるインスタンス、<xref:System.String>オブジェクト</xref:System.String></xref:System.Object></xref:System.String.Format%2A?displayProperty=fullName>。       スローされた例外、<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>も GetIndexedPropertyValue メソッドにメソッドを適用します</xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>。"
  example:
  - "The following code example demonstrates how to use the GetIndexedPropertyValue method declaratively to bind to an indexed value.  \n  \n [!code-vb[Classic DataBinder.Eval Example#2](~/add/codesnippet/visualbasic/38557d34-9d41-4e37-9929-_1.aspx)]\n [!code-cs[Classic DataBinder.Eval Example#2](~/add/codesnippet/csharp/38557d34-9d41-4e37-9929-_1.aspx)]"
  syntax:
    content: public static string GetIndexedPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "式の評価対象となるオブジェクトの参照。 これは、ページの指定した言語で有効なオブジェクト識別子である必要があります。"
    - id: propName
      type: System.String
      description: "取得する値を含むプロパティの名前。"
    - id: format
      type: System.String
      description: "結果を表示する形式を指定する文字列。"
    return:
      type: System.String
      description: "指定された形式で指定したプロパティの値<code> format</code>です。"
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したオブジェクトの指定したプロパティの値を取得します。"
  remarks: "GetPropertyValue メソッドを使用して、オブジェクトのプロパティの値を取得します。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static object GetPropertyValue (object container, string propName);
    parameters:
    - id: container
      type: System.Object
      description: "プロパティを含むオブジェクト。"
    - id: propName
      type: System.String
      description: "取得する値を含むプロパティの名前。"
    return:
      type: System.Object
      description: "指定したプロパティの値です。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>propName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "内のオブジェクト<code> container </code>によって指定されたプロパティを持たない<code> propName</code>です。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  id: GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したオブジェクトの指定したプロパティの値を取得し、し、結果を書式設定します。"
  remarks: "GetPropertyValue メソッドのこのバージョンは、取得し、オブジェクト内のプロパティの値の書式設定に使用されます。"
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static string GetPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "プロパティを含むオブジェクト。"
    - id: propName
      type: System.String
      description: "取得する値を含むプロパティの名前。"
    - id: format
      type: System.String
      description: "結果を表示する形式を指定する文字列。"
    return:
      type: System.String
      description: "指定された形式で指定したプロパティの値<code> format</code>です。"
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>propName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "内のオブジェクト<code> container </code>によって指定されたプロパティを持たない<code> propName</code>です。"
  platform:
  - net462
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したデータ型をバインドできるかどうかを判断します。"
  syntax:
    content: public static bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>対象となるデータ型を表す</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>型にすることができますに自動的にコントロールにバインドされたデータそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.DataBinder.IsBindableType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.DataBinder.#ctor
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
- uid: System.Web.UI.DataBinder.EnableCaching
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinder.#ctor*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder
  nameWithType: DataBinder.DataBinder
- uid: System.Web.UI.DataBinder.EnableCaching*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
- uid: System.Web.UI.DataBinder.Eval*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval
  nameWithType: DataBinder.Eval
- uid: System.Web.UI.DataBinder.GetDataItem*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem
  nameWithType: DataBinder.GetDataItem
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue
  nameWithType: DataBinder.GetIndexedPropertyValue
- uid: System.Web.UI.DataBinder.GetPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue
  nameWithType: DataBinder.GetPropertyValue
- uid: System.Web.UI.DataBinder.IsBindableType*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType
  nameWithType: DataBinder.IsBindableType
