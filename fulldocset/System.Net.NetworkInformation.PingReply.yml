### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "結果データと状態に関する情報を提供する<> *> または<> *> 操作します。"
  remarks: "<xref:System.Net.NetworkInformation.Ping>クラスは、リモート コンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー要求の送信し、ICMP エコー応答メッセージを使用してコンピューターから情報を受信を試みます</xref:System.Net.NetworkInformation.Ping>。 <xref:System.Net.NetworkInformation.Ping>クラスでは、返される PingReply クラスのインスタンスを使用して、態と、要求を送信し、応答の受信にかかった時間などの操作に関する情報を返します</xref:System.Net.NetworkInformation.Ping>。       <xref:System.Net.NetworkInformation.Ping.Send%2A>メソッドが直接返される PingReply クラスのインスタンスを返します</xref:System.Net.NetworkInformation.Ping.Send%2A>。 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>で返される PingReply を返し、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>メソッドの<xref:System.Net.NetworkInformation.PingCompletedEventArgs>パラメーター</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 。 を通じて、返される PingReply にアクセスする、<xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>プロパティ</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>。       場合の値<xref:System.Net.NetworkInformation.PingReply.Status%2A>は<xref:System.Net.NetworkInformation.IPStatus>、によって返される値を使用しないでください、 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>、<xref:System.Net.NetworkInformation.PingReply.Options%2A>または<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティ</xref:System.Net.NetworkInformation.PingReply.Buffer%2A></xref:System.Net.NetworkInformation.PingReply.Options%2A></xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A></xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingReply.Status%2A>。 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>プロパティは、0 を返します、<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティは、空の配列を返しますと<xref:System.Net.NetworkInformation.PingReply.Options%2A>が返される`null`</xref:System.Net.NetworkInformation.PingReply.Options%2A></xref:System.Net.NetworkInformation.PingReply.Buffer%2A></xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>。"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー応答を送信するホストのアドレスを取得します。"
  remarks: "いずれかでアドレスが返されます、<xref:System.Net.NetworkInformation.Ping.Send%2A>オーバー ロードは、悪意のあるリモート コンピューターから取得できます</xref:System.Net.NetworkInformation.Ping.Send%2A>。 このアドレスを使用してリモート コンピューターに接続できません。 DNS を使用すると、接続するコンピューターの IP アドレスを確認できます。"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先を格納している</xref:System.Net.IPAddress>。"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー応答メッセージで受信したデータのバッファーを取得します。"
  remarks: "ICMP エコー要求で送信されるデータ バッファーがエコー応答内の送信者に返されるは、既知のサイズのパケットのラウンド トリップ時間を計算するためです。 データ バッファーと組み合わせて、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>オプションで、元と移行先のコンピューター間のネットワーク パスの最大転送単位を検出するために使用できます</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 詳細については、RFC 1574、http://www.ietf.org で利用可能なセクション 3.2 では、&quot;Traceroute&quot;を参照してください。       使用されるバッファーの既定<xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>32 バイト データにはが含まれています</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "A<xref:System.Byte>応答が受信されない場合は、ICMP エコー応答メッセージ、または、空の配列で受信したデータを含む配列</xref:System.Byte>。"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー要求に応答を送信するために使用するオプションを取得します。"
  remarks: "TTL は、ノードは、送信元と移行先の間で送受信されるパケットを転送できる回数を定義します。 ホップとも呼ばれる、転送の数は、指定された TTL 値を超えている場合、パケットが配信不能と見なされる、破棄されます。       <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>ICMP エコー要求コントロール パケット断片化で指定された値</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 場合<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`パケット サイズが、パケットで使用されるネットワーク パスの最大転送単位を超えると、パケットは破棄されます、<xref:System.Net.NetworkInformation.IPStatus>エラーが返されます</xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> Live (TTL) と場合、応答を送信するために使用される断片化ディレクティブにかかる時間を格納しているオブジェクト<xref:System.Net.NetworkInformation.PingReply.Status*>は<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Net.NetworkInformation.PingReply.Status*> 。"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー要求を送信し、対応する ICMP エコー応答メッセージの受信にかかったミリ秒数を取得します。"
  remarks: "エコー要求が失敗すると、RoundtripTime 時間は、要求が成功したときに有効な値ではまた、0 として報告されます。 確認する必要があります、<xref:System.Net.NetworkInformation.PingReply.Status%2A>をこのプロパティによって返される値を無視するかどうかを判断します</xref:System.Net.NetworkInformation.PingReply.Status%2A>。"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>ラウンド トリップ時間 (ミリ秒単位) を指定します</xref:System.Int64>。"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー要求を送信し、対応する ICMP エコー応答メッセージを受信しようの状態を取得します。"
  remarks: "状態の値がない場合<xref:System.Net.NetworkInformation.IPStatus>、によって返される値を使用しないでください、 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>、<xref:System.Net.NetworkInformation.PingReply.Options%2A>または<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティ</xref:System.Net.NetworkInformation.PingReply.Buffer%2A></xref:System.Net.NetworkInformation.PingReply.Options%2A></xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A></xref:System.Net.NetworkInformation.IPStatus>。 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>と<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>プロパティは、0 を返しますと<xref:System.Net.NetworkInformation.PingReply.Options%2A>が返される`null`</xref:System.Net.NetworkInformation.PingReply.Options%2A></xref:System.Net.NetworkInformation.PingReply.Buffer%2A></xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>。"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>要求の結果を示す値。"
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
