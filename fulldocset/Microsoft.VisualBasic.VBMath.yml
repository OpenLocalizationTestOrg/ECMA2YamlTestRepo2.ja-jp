### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.VBMath
  id: VBMath
  children:
  - Microsoft.VisualBasic.VBMath.Randomize
  - Microsoft.VisualBasic.VBMath.Randomize(System.Double)
  - Microsoft.VisualBasic.VBMath.Rnd
  - Microsoft.VisualBasic.VBMath.Rnd(System.Single)
  langs:
  - csharp
  name: VBMath
  nameWithType: VBMath
  fullName: Microsoft.VisualBasic.VBMath
  type: Class
  summary: "<xref uid=&quot;langword_csharp_VbMath&quot; name=&quot;VbMath&quot; href=&quot;&quot;> </xref>モジュールには、算術演算の実行に使用されるプロシージャが含まれています。"
  remarks: "このモジュールは、乱数を生成するため、Visual Basic 言語のキーワードとランタイム ライブラリ メンバーをサポートします。"
  example:
  - "This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \n  \n [!code-vb[VbVbalrMath#21](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._30_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class VBMath
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.VBMath.Randomize
  id: Randomize
  parent: Microsoft.VisualBasic.VBMath
  langs:
  - csharp
  name: Randomize()
  nameWithType: VBMath.Randomize()
  fullName: Microsoft.VisualBasic.VBMath.Randomize()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "乱数ジェネレーターを初期化します。"
  remarks: "このオーバー ロード、`Randomize`メソッドは、シード値を取りません。 代わりに、システム タイマーによって返される値は新しいシード値として使用します。       場合`Randomize`を使用していない、`Rnd`関数 (引数なしで) 同じ数がシードとして使用、初めてこれが呼び出され、それ以降シード値と最後に生成された番号を使用します。      > [!NOTE] > ランダムな数のシーケンスを繰り返すを呼び出す`Rnd`を使用する前に、すぐに負の値の引数を持つ`Randomize`数値の引数。      > [!IMPORTANT] > ため、`Random`ステートメントおよび`Rnd`関数の先頭にシード値は、有限の範囲内で番号を生成、結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります。 その結果、`Random`ステートメントおよび`Rnd`関数は暗号化に使用する乱数生成に使用する必要があります。 詳細については、 <xref:System.Security.Cryptography.RandomNumberGenerator>。</xref:System.Security.Cryptography.RandomNumberGenerator>を参照してください。"
  example:
  - "This example uses the `Randomize` statement to initialize the random-number generator. Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.  \n  \n [!code-vb[VbVbalrMath#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._78_1.vb)]"
  syntax:
    content: public static void Randomize ();
    parameters: []
  overload: Microsoft.VisualBasic.VBMath.Randomize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.VBMath.Randomize(System.Double)
  id: Randomize(System.Double)
  parent: Microsoft.VisualBasic.VBMath
  langs:
  - csharp
  name: Randomize(Double)
  nameWithType: VBMath.Randomize(Double)
  fullName: Microsoft.VisualBasic.VBMath.Randomize(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "乱数ジェネレーターを初期化します。"
  remarks: "`Randomize`使用して`Number`初期化するために、`Rnd`関数の乱数ジェネレーターは、新しいシード値を指定します。 省略した場合`Number`、システム タイマーによって返される値は、新しいシード値として使用します。       場合`Randomize`を使用していない、`Rnd`関数 (引数なしで) 同じ数がシードとして使用、初めてこれが呼び出され、それ以降シード値と最後に生成された番号を使用します。      > [!NOTE] > ランダムな数のシーケンスを繰り返すを呼び出す`Rnd`を使用する前に、すぐに負の値の引数を持つ`Randomize`数値の引数。 使用して`Randomize`の値が同じ`Number`以前のシーケンスを繰り返しません。      > [!IMPORTANT] > ため、`Random`ステートメントおよび`Rnd`関数の先頭にシード値は、有限の範囲内で番号を生成、結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります。 その結果、`Random`ステートメントおよび`Rnd`関数は暗号化に使用する乱数生成に使用する必要があります。 詳細については、 <xref:System.Security.Cryptography.RandomNumberGenerator>。</xref:System.Security.Cryptography.RandomNumberGenerator>を参照してください。"
  example:
  - "This example uses the `Randomize` statement to initialize the random-number generator. Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.  \n  \n [!code-vb[VbVbalrMath#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._199_1.vb)]"
  syntax:
    content: public static void Randomize (double Number);
    parameters:
    - id: Number
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>または有効な数値式です。"
  overload: Microsoft.VisualBasic.VBMath.Randomize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.VBMath.Rnd
  id: Rnd
  parent: Microsoft.VisualBasic.VBMath
  langs:
  - csharp
  name: Rnd()
  nameWithType: VBMath.Rnd()
  fullName: Microsoft.VisualBasic.VBMath.Rnd()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "型の乱数を返します<xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref>です。"
  remarks: "`Rnd`未満である 1 より大きいまたは 0 に等しい値が返されます。       呼び出しの前に`Rnd`を使用して、`Randomize`システム タイマーに基づいて、乱数ジェネレーターでシードを初期化するために引数を指定しないでステートメントです。       特定の範囲内の整数の乱数を生成するには、次の数式を使用します。       [!code-vb[VbVbalrMath&#30;](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._94_1.vb) ]ここでは、 `upperbound` 、範囲内の最大値と`lowerbound`範囲の最小数です。      > [!NOTE] > ランダムな数のシーケンスを繰り返すを呼び出す`Rnd`を使用する前に、すぐに負の値の引数を持つ`Randomize`数値の引数。      > [!IMPORTANT] > ため、`Random`ステートメントおよび`Rnd`関数の先頭にシード値は、有限の範囲内で番号を生成、結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります。 その結果、`Random`ステートメントおよび`Rnd`関数は暗号化に使用する乱数生成に使用する必要があります。"
  example:
  - "This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \n  \n [!code-vb[VbVbalrMath#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._94_2.vb)]"
  syntax:
    content: public static float Rnd ();
    parameters: []
    return:
      type: System.Single
      description: "[次へ] ランダムな数のシーケンス。"
  overload: Microsoft.VisualBasic.VBMath.Rnd*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.VBMath.Rnd(System.Single)
  id: Rnd(System.Single)
  parent: Microsoft.VisualBasic.VBMath
  langs:
  - csharp
  name: Rnd(Single)
  nameWithType: VBMath.Rnd(Single)
  fullName: Microsoft.VisualBasic.VBMath.Rnd(Single)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "型の乱数を返します<xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref>です。"
  remarks: "`Rnd`未満である 1 より大きいまたは 0 に等しい値が返されます。       値`Number`決定方法`Rnd`乱数を生成します。       に生成する番号のシーケンスが同じ初期シードの連続する呼び出しごとに、`Rnd`関数は、シーケンス内の次の番号がシードとして以前に生成された番号を使用します。       呼び出しの前に`Rnd`を使用して、`Randomize`システム タイマーに基づいて、乱数ジェネレーターでシードを初期化するために引数を指定しないでステートメントです。       特定の範囲内の整数の乱数を生成するには、次の数式を使用します。       [!code-vb[VbVbalrMath&#30;](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._212_1.vb) ]ここでは、 `upperbound` 、範囲内の最大値と`lowerbound`範囲の最小数です。      > [!NOTE] > ランダムな数のシーケンスを繰り返すを呼び出す`Rnd`を使用する前に、すぐに負の値の引数を持つ`Randomize`数値の引数。 使用して`Randomize`の値が同じ`Number`以前のシーケンスを繰り返しません。      > [!IMPORTANT] > ため、`Random`ステートメントおよび`Rnd`関数の先頭にシード値は、有限の範囲内で番号を生成、結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります。 その結果、`Random`ステートメントおよび`Rnd`関数は暗号化に使用する乱数生成に使用する必要があります。"
  example:
  - "This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.  \n  \n [!code-vb[VbVbalrMath#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._212_2.vb)]"
  syntax:
    content: public static float Rnd (float Number);
    parameters:
    - id: Number
      type: System.Single
      description: "任意。 A <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;> </xref>値も有効な<xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref>式。"
    return:
      type: System.Single
      description: "Rnd 生成同じ番号は&0; より小さい場合、番号を使用するたびに<code> Number </code>シードとして。 数が&0; より大きい場合は、Rnd は、シーケンス内の次の乱数を生成します。 数値が&0; に等しい場合は、Rnd は最後に生成された番号を生成します。 数が指定されていない場合 Rnd はシーケンスの次の乱数を生成します。"
  overload: Microsoft.VisualBasic.VBMath.Rnd*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.VBMath.Randomize
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Randomize()
  nameWithType: VBMath.Randomize()
  fullName: Microsoft.VisualBasic.VBMath.Randomize()
- uid: Microsoft.VisualBasic.VBMath.Randomize(System.Double)
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Randomize(Double)
  nameWithType: VBMath.Randomize(Double)
  fullName: Microsoft.VisualBasic.VBMath.Randomize(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.VBMath.Rnd
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Rnd()
  nameWithType: VBMath.Rnd()
  fullName: Microsoft.VisualBasic.VBMath.Rnd()
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualBasic.VBMath.Rnd(System.Single)
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Rnd(Single)
  nameWithType: VBMath.Rnd(Single)
  fullName: Microsoft.VisualBasic.VBMath.Rnd(Single)
- uid: Microsoft.VisualBasic.VBMath.Randomize*
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Randomize
  nameWithType: VBMath.Randomize
- uid: Microsoft.VisualBasic.VBMath.Rnd*
  parent: Microsoft.VisualBasic.VBMath
  isExternal: false
  name: Rnd
  nameWithType: VBMath.Rnd
