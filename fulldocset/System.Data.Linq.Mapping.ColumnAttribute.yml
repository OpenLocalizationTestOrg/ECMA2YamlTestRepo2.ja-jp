### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.ColumnAttribute
  id: ColumnAttribute
  children:
  - System.Data.Linq.Mapping.ColumnAttribute.#ctor
  - System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  - System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  - System.Data.Linq.Mapping.ColumnAttribute.DbType
  - System.Data.Linq.Mapping.ColumnAttribute.Expression
  - System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  - System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  - System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  - System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  - System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  langs:
  - csharp
  name: ColumnAttribute
  nameWithType: ColumnAttribute
  fullName: System.Data.Linq.Mapping.ColumnAttribute
  type: Class
  summary: "クラスをデータベース テーブル内の列に関連付けます。"
  remarks: "この属性を使用して、データベース テーブル内の列を表すエンティティ クラスのメンバーを指定します。 この属性を適用するには任意のフィールドまたはプロパティに`public`、 `private`、または`internal`です。       列を保存すると識別されたエンティティ クラスのメンバーだけとき[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]データベースに変更を保存します。       コンマを使用して、属性に対して複数のプロパティを区切ります。"
  example:
  - "```vb#  \n<Table(Name:=\"Employees\")>  _  \nPublic Class Employees  \n    Private _LastName As String  \n    ' …  \n    <Column(Storage:=\"_LastName\", DbType:=\"NVarChar(20) NOT NULL\", _  \n        CanBeNull:=false)> _  \n    Public Property LastName() As String  \n        Get  \n            Return Me._LastName  \n        End Get  \n        Set  \n            If ((Me._LastName = value) _  \n                = false) Then  \n                Me.OnPropertyChanging(\"LastName\")  \n                Me._LastName = value  \n                Me.OnPropertyChanged(\"LastName\")  \n            End If  \n        End Set  \n    End Property  \nEnd Class  \n```  \n  \n```c#  \n[Table(Name=\"Employees\")]  \npublic class Employees  \n{  \n    private string _LastName;      \n    // …  \n    [Column(Storage=\"_LastName\", DbType=\"NVarChar(20) NOT NULL\",   \n        CanBeNull=false)]  \n    public string LastName  \n    {  \n        get  \n        {  \n            return this._LastName;  \n        }  \n        set  \n        {  \n            if ((this._LastName != value))  \n            {  \n                this.OnPropertyChanging(\"LastName\");  \n                this._LastName = value;  \n                this.OnPropertyChanged(\"LastName\");  \n            }  \n        }  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute
  inheritance:
  - System.Attribute
  - System.Data.Linq.Mapping.DataAttribute
  implements: []
  inheritedMembers:
  - System.Data.Linq.Mapping.DataAttribute.Name
  - System.Data.Linq.Mapping.DataAttribute.Storage
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Linq.Mapping.ColumnAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public ColumnAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または設定、 <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref>列挙します。"
  remarks: ''
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#1)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#1](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#1)]
  syntax:
    content: public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "<xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref>値。"
  overload: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または列に null 値を格納できるかどうかを設定します。"
  remarks: "この値を設定する場合`false`、対応する列のデータが null 以外であると見なされます。      > [!NOTE] > からこのプロパティが重複している、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>利便性のためのプロパティ</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>。 <xref:System.Data.Linq.DataContext.CreateDatabase%2A>のみ使用するメソッド、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティ</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A></xref:System.Data.Linq.DataContext.CreateDatabase%2A>。 このため、列の null 値を含めることができるかどうかを指定する必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティも</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#2)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#2](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#2)]
  syntax:
    content: public bool CanBeNull { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得またはデータベース列の型を設定します。"
  remarks: "このプロパティを使用して、TRANSACT-SQL テーブル宣言内で列を定義する正確なテキストを指定します。 使用する場合は、DbType プロパティを指定する<xref:System.Data.Linq.DataContext.CreateDatabase%2A>データベースのインスタンスを作成します</xref:System.Data.Linq.DataContext.CreateDatabase%2A>。       DbType の既定値は、メンバーの型から推論されます。 詳細については、次を参照してください。 [SQL-CLR 型マッピング](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#4)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#4](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#4)]
  syntax:
    content: public string DbType { get; set; }
    return:
      type: System.String
      description: "「解説」を参照してください。"
  overload: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または列が、データベース内の計算列であるかどうかを設定します。"
  remarks: "使用する場合は、このプロパティを使用して<xref:System.Data.Linq.DataContext.CreateDatabase%2A>として計算された値を含む列を定義する</xref:System.Data.Linq.DataContext.CreateDatabase%2A>。       Sql として定義されている列を作成する場合など`InventoryVal AS UnitPrice * UnitsInStock`、次を使用して*式*文字列:`&quot;UnitPrice * UnitsInStock&quot;`です。      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]主キーとして計算列をサポートしていません。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#5)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#5](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#5)]
  syntax:
    content: public string Expression { get; set; }
    return:
      type: System.String
      description: "既定値 = 空。"
  overload: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または列には、データベースが自動生成の値が含まれるかどうかを設定します。"
  remarks: "IsDbGenerated メンバーには、データの行が挿入され、メンバーは、後に使用した直後に、同期<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了します</xref:System.Data.Linq.DataContext.SubmitChanges%2A>。      > [!NOTE] > 列が主キーの値を保持し、IsDbGenerated としてを指定する場合`true`、追加することも必要があります、<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>プロパティを使用して、`IDENTITY`修飾子</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#6)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#6](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#6)]
  syntax:
    content: public bool IsDbGenerated { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または設定の識別子の値が列に含まれるかどうか、[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]継承階層です。"
  remarks: "ときに`true`、このプロパティは、継承階層の識別子の値を保持すると、クラスのメンバーを識別します。       このプロパティを設定することができます`true`でない場合、最上位に属している必要があります、2 つ以上のメンバーが階層内のクラスをマップします。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#7)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#7](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#7)]
  syntax:
    content: public bool IsDiscriminator { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得またはこのクラスのメンバーは、テーブルの主キーの一部またはすべての列を表すかどうかを設定します。"
  remarks: "エンティティ クラスと仮定した場合、この属性を持つには、少なくとも&1; つのメンバーを指定する必要があり、主キーまたは一意のキーに対応するテーブルまたはビューにマップする必要があります。 この画面の指示を怠る[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]に読み取り専用データベースに変更を送信すると、クラスのインスタンスを考えてみます。       クラスの&1; つ以上のメンバーを指定するには、このプロパティを使用して、キーが関連付けられている列の合成と呼ばれます。      > [!NOTE]  >   [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]主キーとして計算列をサポートしていません。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#8)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#8](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#8)]
  syntax:
    content: public bool IsPrimaryKey { get; set; }
    return:
      type: System.Boolean
      description: "Default = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得またはメンバーの列の型がデータベースのタイムスタンプまたはバージョン番号であるかどうかを設定します。"
  remarks: "バージョン番号がインクリメントし、タイムスタンプ列が関連付けられている行が更新されるたびに更新します。 (このプロパティは、通知[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]を新しいバージョンであることを表示する列を更新する必要があります以外の場合は、更新を行ったユーザーなどの情報を記録するものではありません)。     次に注意してくださいとき`IsVersion`が true:-使用<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>、バージョン番号またはタイムスタンプ列を指定する正しい修飾子を指定する</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>。 指定しない場合<xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>、[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]正しい修飾子を推測します</xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>。       バージョン番号がインクリメントし、タイムスタンプ列が関連付けられている行が更新されるたびに更新します。 持つメンバー`IsVersion=true`データ行が更新された後にすぐに同期されます。 新しい値は後に表示されます<xref:System.Data.Linq.DataContext.SubmitChanges%2A>が完了するとします</xref:System.Data.Linq.DataContext.SubmitChanges%2A>。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#9)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#9](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#9)]
  syntax:
    content: public bool IsVersion { get; set; }
    return:
      type: System.Boolean
      description: "既定値 = <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "取得または設定する方法[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]オプティミスティック同時実行の競合を検出します。"
  remarks: "このプロパティは、次の&3; つの列挙型のいずれかの使用は、時に決定方法[!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]同時実行の競合を検出します。       として設計されているメンバーがない場合`IsVersion=true`データベースの現在の状態を元のメンバーの値と比較します。       次の列挙を利用できます:-`Always`競合検出に対してこの列は常に使用します。      -`Never`決してこの列を使用して競合を検出します。      -`WhenChanged`メンバーは、アプリケーションによって変更された場合にのみ、この列を使用します。"
  example:
  - >-
    [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/visualbasic/vb-ColumnAttributes/northwind.vb#10)]
     [!code-cs[System.Data.Linq.Mapping.ColumnAttribute#10](~/add/codesnippet/csharp/cs-ColumnAttributes2/northwind.cs#10)]
  syntax:
    content: public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "既定値 = <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref>がない限り、<xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーの</xref:System.Data.Linq.Mapping.ColumnAttribute.IsVersion*>。       その他の値は<xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref>と<xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref>です。"
  overload: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: System.Data.Linq.Mapping.DataAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute()
  nameWithType: ColumnAttribute.ColumnAttribute()
  fullName: System.Data.Linq.Mapping.ColumnAttribute.ColumnAttribute()
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
  fullName: System.Data.Linq.Mapping.ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
  fullName: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
  fullName: System.Data.Linq.Mapping.ColumnAttribute.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
  fullName: System.Data.Linq.Mapping.ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
  fullName: System.Data.Linq.Mapping.ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
  fullName: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.ColumnAttribute.#ctor*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: ColumnAttribute
  nameWithType: ColumnAttribute.ColumnAttribute
- uid: System.Data.Linq.Mapping.ColumnAttribute.AutoSync*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: AutoSync
  nameWithType: ColumnAttribute.AutoSync
- uid: System.Data.Linq.Mapping.ColumnAttribute.CanBeNull*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: CanBeNull
  nameWithType: ColumnAttribute.CanBeNull
- uid: System.Data.Linq.Mapping.ColumnAttribute.DbType*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: DbType
  nameWithType: ColumnAttribute.DbType
- uid: System.Data.Linq.Mapping.ColumnAttribute.Expression*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: Expression
  nameWithType: ColumnAttribute.Expression
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDbGenerated
  nameWithType: ColumnAttribute.IsDbGenerated
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsDiscriminator
  nameWithType: ColumnAttribute.IsDiscriminator
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsPrimaryKey
  nameWithType: ColumnAttribute.IsPrimaryKey
- uid: System.Data.Linq.Mapping.ColumnAttribute.IsVersion*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: IsVersion
  nameWithType: ColumnAttribute.IsVersion
- uid: System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck*
  parent: System.Data.Linq.Mapping.ColumnAttribute
  isExternal: false
  name: UpdateCheck
  nameWithType: ColumnAttribute.UpdateCheck
