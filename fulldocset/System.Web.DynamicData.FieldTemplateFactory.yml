### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FieldTemplateFactory
  id: FieldTemplateFactory
  children:
  - System.Web.DynamicData.FieldTemplateFactory.#ctor
  - System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  - System.Web.DynamicData.FieldTemplateFactory.Model
  - System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory
  fullName: System.Web.DynamicData.FieldTemplateFactory
  type: Class
  summary: "フィールド テンプレートを作成します。"
  remarks: "既定では、このクラスを実装する、<xref:System.Web.DynamicData.IFieldTemplateFactory>インターフェイスを使用して、<xref:System.Web.UI.UserControl>フィールド テンプレートを作成するクラス</xref:System.Web.UI.UserControl></xref:System.Web.DynamicData.IFieldTemplateFactory>。"
  syntax:
    content: 'public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory'
  inheritance:
  - System.Object
  implements:
  - System.Web.DynamicData.IFieldTemplateFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "インスタンスを初期化、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>クラスです。"
  syntax:
    content: public FieldTemplateFactory ();
    parameters: []
  overload: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "フィールド テンプレートの名前と、モードに基づくフィールド テンプレートへの仮想パスを構築します。"
  remarks: "既定では、このメソッドは、テンプレート名を使用して、モードを追加し、拡張子が .ascx フィールド テンプレートへの仮想パスを構築します。 たとえば場合、`templateName`は MyFieldTemplate と`mode`仮想パスが MyFieldTemplate_Edit.ascx、テンプレート フォルダーの仮想パスで指定されたフォルダーに保存されますが、編集します。"
  syntax:
    content: public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: templateName
      type: System.String
      description: "使用するテンプレートの名前。"
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "フィールド テンプレートが適用されるデータ列を指定します。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "フィールド テンプレートの表示モードを指定します。"
    return:
      type: System.String
      description: "フィールド テンプレートの仮想パス。"
  overload: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>templateName</code>null です。"
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "使用してフィールド テンプレートのインスタンスを作成、 <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref>クラス、 <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>クラスおよび<xref:System.Web.DynamicData.MetaColumn.UIHint*>プロパティ</xref:System.Web.DynamicData.MetaColumn.UIHint*>。"
  syntax:
    content: public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "フィールド テンプレートが適用されるデータ列を指定します。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "フィールド テンプレートの表示モードを指定します。"
    - id: uiHint
      type: System.String
      description: "使用するフィールド テンプレートを指定します。"
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "インターフェイスのインスタンスを<xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>クラスを実装します。"
  overload: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "フィールド テンプレートの仮想パスを決定します。"
  remarks: "ダイナミック/FieldTemplates で動的なデータ フィールドのテンプレートが作成/フォルダーは、フィールド テンプレートの新しいフォルダーを作成できます。 このメソッドは、指定されたパラメーターを使用してフィールド テンプレートが含まれているフォルダーの仮想パスを決定します。"
  syntax:
    content: public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "フィールド テンプレートが適用されるデータ列を指定します。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "フィールド テンプレートの読み取りのみのモードを表示、編集、または挿入を指定します。"
    - id: uiHint
      type: System.String
      description: "使用するフィールド テンプレートを指定します。 このパラメーターは、フィールド テンプレートの検索に影響します。"
    return:
      type: System.String
      description: "フィールド テンプレートの仮想パス。"
  overload: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "関連付けます、 <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref>で、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>です。"
  syntax:
    content: public virtual void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "関連付けるデータ モデルを指定します、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>します。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  id: Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得または設定、 <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref>と関連付けられている、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref>クラス"
  remarks: "<xref:System.Web.DynamicData.MetaModel>クラスは、データベースとドメインのオブジェクト間のマッピングを表す抽象クラス</xref:System.Web.DynamicData.MetaModel>。 動的なデータは、モデルを表すクラス (データ モデル) のセットを提供します。 クラスは、オブジェクト リレーショナル デザイナー (O/R デザイナー) を使用して生成されます。 LINQ to SQL クラス テンプレートを使用すると、これらのクラスを生成します。 このプロパティは get および set<xref:System.Web.DynamicData.FieldTemplateFactory>クラス</xref:System.Web.DynamicData.FieldTemplateFactory>に関連付けられているデータ モデルを使用します。"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "関連付けられているモデル、 <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;></xref>です。"
  overload: System.Web.DynamicData.FieldTemplateFactory.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  id: PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "データ列のモードを変更します。"
  remarks: "動的なデータは読み取り専用、Insert、内のデータを表示または、モードを編集します。 このメソッドは、どちらのモードを列に表示を制御します。 たとえば、列が主キー列の場合、編集モードの要求は読み取り専用に変更します。 主キーの一部では自動的に生成されると、外部キーである列は編集できません。"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "フィールド テンプレートが必要となる列です。"
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "変更するモード (読み取り専用、編集、または挿入) です。"
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "列のレンダリング モードです。"
  overload: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  id: TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  langs:
  - csharp
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはフィールド テンプレートを作成するフォルダーを設定します。"
  remarks: "フィールド テンプレートが作成された既定のフォルダーは、/DynamicData FieldTemplates/です。 このフォルダーには、フィールドの既定のテンプレートと作成したカスタム フィールド テンプレートが含まれています。 作成するフィールド テンプレートの別のフォルダーを指定すると、動的なデータは指定したフォルダーに、フィールド テンプレートを作成します。 フィールド テンプレートの詳細については、次を参照してください。 [ASP.NET 動的データ スキャフォールディング](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public string TemplateFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "フィールド テンプレートが含まれているフォルダーへのパス。"
  overload: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory()
  nameWithType: FieldTemplateFactory.FieldTemplateFactory()
  fullName: System.Web.DynamicData.FieldTemplateFactory.FieldTemplateFactory()
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(String,MetaColumn,DataBoundControlMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: FieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.FieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.FieldTemplateFactory.Model
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
  fullName: System.Web.DynamicData.FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode(MetaColumn,DataBoundControlMode)
  nameWithType: FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
  fullName: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(MetaColumn,DataBoundControlMode)
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
  fullName: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.#ctor*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: FieldTemplateFactory.FieldTemplateFactory
- uid: System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: BuildVirtualPath
  nameWithType: FieldTemplateFactory.BuildVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: FieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: GetFieldTemplateVirtualPath
  nameWithType: FieldTemplateFactory.GetFieldTemplateVirtualPath
- uid: System.Web.DynamicData.FieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: FieldTemplateFactory.Initialize
- uid: System.Web.DynamicData.FieldTemplateFactory.Model*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: Model
  nameWithType: FieldTemplateFactory.Model
- uid: System.Web.DynamicData.FieldTemplateFactory.PreprocessMode*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: PreprocessMode
  nameWithType: FieldTemplateFactory.PreprocessMode
- uid: System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath*
  parent: System.Web.DynamicData.FieldTemplateFactory
  isExternal: false
  name: TemplateFolderVirtualPath
  nameWithType: FieldTemplateFactory.TemplateFolderVirtualPath
