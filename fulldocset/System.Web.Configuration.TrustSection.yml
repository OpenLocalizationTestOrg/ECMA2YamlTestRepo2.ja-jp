### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.TrustSection
  id: TrustSection
  children:
  - System.Web.Configuration.TrustSection.#ctor
  - System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  - System.Web.Configuration.TrustSection.LegacyCasModel
  - System.Web.Configuration.TrustSection.Level
  - System.Web.Configuration.TrustSection.OriginUrl
  - System.Web.Configuration.TrustSection.PermissionSetName
  - System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  - System.Web.Configuration.TrustSection.Properties
  langs:
  - csharp
  name: TrustSection
  nameWithType: TrustSection
  fullName: System.Web.Configuration.TrustSection
  type: Class
  summary: "アプリケーションに適用されるコード アクセス セキュリティ レベルを構成します。 このクラスは継承できません。"
  remarks: "TrustSection クラスでは、プログラムからアクセスし、構成ファイルを変更できます。`<trust>`セクションです。 `<trust>`セクションは、特定のアプリケーションの実行に使用されるコード アクセス セキュリティのアクセス許可セットを構成します。 このセクションでは、コンピューター、サイト、およびアプリケーション レベルで宣言できます。"
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the TrustSection class. The second demonstrates how to use the TrustSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the TrustSection class.  \n  \n```  \n<system.web>  \n  <trust level=\"Full\" originUrl=\"\"/>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the TrustSection type.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#1](~/add/codesnippet/csharp/t-system.web.configurati_21_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_21_1.vb)]"
  syntax:
    content: 'public sealed class TrustSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Configuration.TrustSection&quot;> </xref>クラスの既定の設定を使用します。"
  remarks: "TrustSection コンス トラクターは、コードから直接使用するものではありません。 ASP.NET 構成システムによって呼び出されます。 インスタンスを取得する、<xref:System.Web.Configuration.TrustSection>クラスを使用して、<xref:System.Configuration.Configuration.GetSection%2A>メソッド</xref:System.Configuration.Configuration.GetSection%2A></xref:System.Web.Configuration.TrustSection>。       次の表は、TrustSection コンス トラクターに使用される既定の設定を示します。      |設定 |既定値 |  |-------------|-------------------|  |<xref:System.Web.Configuration.TrustSection.Level%2A>|`Full`|  |<xref:System.Web.Configuration.TrustSection.OriginUrl%2A>|`&quot;&quot;`|</xref:System.Web.Configuration.TrustSection.OriginUrl%2A></xref:System.Web.Configuration.TrustSection.Level%2A>"
  syntax:
    content: public TrustSection ();
    parameters: []
  overload: System.Web.Configuration.TrustSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  id: HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得またはカスタムのセキュリティ ポリシーの解決の種類を設定します。"
  remarks: "HostSecurityPolicyResolverType が空の文字列の場合は、アプリケーション、ASP.NET の既定のポリシーを使用して、アセンブリのアクセス許可を決定します。 アクセス許可を評価するための既定のポリシーは、グローバル アセンブリ キャッシュ (GAC) アセンブリとその他のアセンブリに部分信頼に完全な信頼を付与します。       この属性に設定することはできません、`null`値。"
  syntax:
    content: public string HostSecurityPolicyResolverType { get; set; }
    return:
      type: System.String
      description: "カスタムのセキュリティ ポリシーの解決の種類"
  overload: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  id: LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得またはレガシ コード アクセス セキュリティが有効になっているかどうかを示す値を設定します。"
  remarks: "レガシ コード アクセス セキュリティを有効にすると、次のセキュリティ規則が適用されます。-コンピューター ポリシーと、指定した ASP.NET 部分信頼ポリシー ファイルの組み合わせから、コード アクセス セキュリティ (CAS) ポリシーを確立します。      -部分的な信頼されたアプリケーション ドメインは、アプリケーション ドメイン レベルで完全な信頼に戻ります。      -従来の部分的な信頼ディレクトリにあるファイル、構成で、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]インストール ディレクトリの同じディレクトリに配置されている新しい部分的な信頼の構成ファイルの代わりに使用されます。 従来のファイルを含めるメンバーシップ条件内で見つかった、[!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)]または[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]のバージョン、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]です。      -部分信頼で ASP.NET ファイルで定義されている、権限を評価する追加のメンバーシップの条件が適用されます。 付属している CONFIG ディレクトリ、[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]リリースには、従来の部分的な信頼ポリシー ファイルが含まれています。 文字列「レガシ」が含まれており、これらのファイルの名前、[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]セクションです。 これらのセクションでは、アセンブリに対して CAS ポリシーを評価するために必要な空のメンバーシップ条件を含めます。      場合は、ASP.NET アプリケーションは、既定の部分信頼の構成ファイルのいずれかに部分的に信頼とマップの信頼レベルのセキュリティ ポリシー ファイルで実行されて、ASP.NET は、対応するレガシの構成ファイルを自動的に選択します。 たとえば、セキュリティ ポリシーが通常 Web_mediumtrust.config から読み込まれていると場合、レガシ モードでは ASP.NET 代わりにポリシーが読み込まれますセキュリティ Legacy.web_mediumtrust.config からです。"
  syntax:
    content: public bool LegacyCasModel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>レガシ コード アクセス セキュリティが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Configuration.TrustSection.LegacyCasModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Level
  id: Level
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得またはアプリケーションを実行するセキュリティ レベルの名前を設定します。"
  remarks: "レベル プロパティは、アプリケーションを実行しているが、セキュリティ レベルを指定します。 既定値は`&quot;Full&quot;`します。       5 つの使用可能な信頼レベルがあります: - Full - 高、中 ~ 低 - 最小名前付きレベルで定義されているセキュリティ レベルに対応して、`<trustLevel>`要素`<securityPolicy>`です。"
  example:
  - "The following code example demonstrates how to use the Level property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#2](~/add/codesnippet/csharp/p-system.web.configurati_147_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_147_1.vb)]"
  syntax:
    content: public string Level { get; set; }
    return:
      type: System.String
      description: "信頼レベルの名前。 既定値は<xref uid=&quot;langword_csharp_&quot;Full&quot;&quot; name=&quot;&quot;Full&quot;&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Configuration.TrustSection.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.OriginUrl
  id: OriginUrl
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "アプリケーションの発生元の URL を指定します。"
  remarks: "OriginUrl プロパティでは、アプリケーションの発生元の URL を指定します。 存在する場合、<xref:System.Net.WebRequest>クラス</xref:System.Net.WebRequest>に関連付けられているものなどの一部のアクセス許可のできます。 これは、ようにを通じてアクセス許可の作成に使用される&1; つの URL を指定する、<xref:System.Net.WebPermission>インスタンス</xref:System.Net.WebPermission>。 このアクセス許可は、部分的な信頼関係がある ASP.NET コードをその URL への HTTP 呼び出し (たとえば、Web サービス呼び出し) を作成する権限を付与します。 値は、整形式の HTTP URL にする必要があります。"
  example:
  - "The following code example demonstrates how to use the OriginUrl property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#3](~/add/codesnippet/csharp/p-system.web.configurati_332_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_332_1.vb)]"
  syntax:
    content: public string OriginUrl { get; set; }
    return:
      type: System.String
      description: "整形式の HTTP URL または空の文字列 (&quot;&quot;) です。 既定では、空の文字列です。"
  overload: System.Web.Configuration.TrustSection.OriginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  id: PermissionSetName
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得またはアクセス許可セットの名前を設定します。"
  remarks: "PermissionSetName プロパティでは、部分信頼の構成ファイルでアプリケーション ドメインの初期化中に使用される名前付き権限セットを定義することができます。       既定では、PermissionSetName プロパティは、&quot;ASP.Net&quot;これは、アプリケーション ドメインを初期化するために使用されるアクセス許可セットの名前。       この属性は、空の文字列に設定することはできませんまたは`null`値。"
  syntax:
    content: public string PermissionSetName { get; set; }
    return:
      type: System.String
      description: "アクセス許可セットの名前。"
  overload: System.Web.Configuration.TrustSection.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  id: ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "取得または設定ページを要求するかどうかを示す値が自動的に ASP.NET アプリケーションに適用されている信頼ポリシー ファイルで構成されているアクセス許可を制限します。"
  syntax:
    content: public bool ProcessRequestInApplicationTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要求が、信頼ポリシー ファイルで構成されているアクセス許可を自動的に制限されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>します。"
  overload: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Properties
  id: Properties
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "追加します。"
  overload: System.Web.Configuration.TrustSection.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.TrustSection.#ctor
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.TrustSection.Level
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.TrustSection.#ctor*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection
  nameWithType: TrustSection.TrustSection
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
- uid: System.Web.Configuration.TrustSection.LegacyCasModel*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
- uid: System.Web.Configuration.TrustSection.Level*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
