### YamlMime:ManagedReference
items:
- uid: System.Data.Services.IDataServiceHost
  id: IDataServiceHost
  children:
  - System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  - System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  - System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  - System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  - System.Data.Services.IDataServiceHost.RequestAccept
  - System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  - System.Data.Services.IDataServiceHost.RequestContentType
  - System.Data.Services.IDataServiceHost.RequestHttpMethod
  - System.Data.Services.IDataServiceHost.RequestIfMatch
  - System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  - System.Data.Services.IDataServiceHost.RequestMaxVersion
  - System.Data.Services.IDataServiceHost.RequestStream
  - System.Data.Services.IDataServiceHost.RequestVersion
  - System.Data.Services.IDataServiceHost.ResponseCacheControl
  - System.Data.Services.IDataServiceHost.ResponseContentType
  - System.Data.Services.IDataServiceHost.ResponseETag
  - System.Data.Services.IDataServiceHost.ResponseLocation
  - System.Data.Services.IDataServiceHost.ResponseStatusCode
  - System.Data.Services.IDataServiceHost.ResponseStream
  - System.Data.Services.IDataServiceHost.ResponseVersion
  langs:
  - csharp
  name: IDataServiceHost
  nameWithType: IDataServiceHost
  fullName: System.Data.Services.IDataServiceHost
  type: Interface
  summary: "間の相互作用を指定するインターフェイス[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]とそのホスティング環境。"
  remarks: "ホストする各コンポーネント[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]など Windows Communication Foundation (WCF) は、このインターフェイスを実装する必要があります。 IDataServiceHost 間のコントラクトは、[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]とそのホスティング環境。 この抽象化を行う、[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]特定のホスティング環境に依存しないランタイム。 このインターフェイスは提供[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]受信 HTTP 要求にアクセス権を持つ。 このインターフェイスを実装する新しいオブジェクトは、HTTP 要求ごとにインスタンス化され、HTTP 要求のプロパティを検査し、HTTP 応答の構成を使用しています。"
  syntax:
    content: public interface IDataServiceHost
  implements: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  id: AbsoluteRequestUri
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "クライアントから送信された URI を絶対 URI を取得します。"
  remarks: "AbsoluteRequestUri プロパティ常に、絶対 URI を返します、クライアントから HTTP 要求。 これにより、ホストに、URI によってによって書き換えられた場合にも要求 URI に一貫してアクセスできます。"
  syntax:
    content: public Uri AbsoluteRequestUri { get; }
    return:
      type: System.Uri
      description: "要求の絶対 URI である文字列。"
  overload: System.Data.Services.IDataServiceHost.AbsoluteRequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  id: AbsoluteServiceUri
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "ルート データ サービスの URI を絶対 URI を取得します。"
  remarks: "AbsoluteServiceUri プロパティは、常に絶対ルートのサービス要求の URI を返します。 これにより、ホストが URI を改訂場合でもルート データ サービス URI に一貫してアクセスできます。"
  syntax:
    content: public Uri AbsoluteServiceUri { get; }
    return:
      type: System.Uri
      description: "絶対ルート データ サービスの URI を表す文字列。"
  overload: System.Data.Services.IDataServiceHost.AbsoluteServiceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  id: GetQueryStringItem(System.String)
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: GetQueryStringItem(String)
  nameWithType: IDataServiceHost.GetQueryStringItem(String)
  fullName: System.Data.Services.IDataServiceHost.GetQueryStringItem(String)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "メソッドのパラメーターに格納されている id キーで識別されるデータ項目を取得します。"
  remarks: "クエリ文字列部分、 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)] URI で構成されるキー/値ペアのキーと &quot;=&quot; 文字で区切られた値を使用します。 `GetQueryStringItem`メソッドのパラメーターで指定された id キーのデータ項目を返します。"
  syntax:
    content: public string GetQueryStringItem (string item);
    parameters:
    - id: item
      type: System.String
      description: "項目の id キーを含む文字列値を要求しました。"
    return:
      type: System.String
      description: "文字列としてシリアル化されたクエリによって要求されたデータ アイテムです。"
  overload: System.Data.Services.IDataServiceHost.GetQueryStringItem*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  id: ProcessException(System.Data.Services.HandleExceptionArgs)
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ProcessException(HandleExceptionArgs)
  nameWithType: IDataServiceHost.ProcessException(HandleExceptionArgs)
  fullName: System.Data.Services.IDataServiceHost.ProcessException(HandleExceptionArgs)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "内の情報を使用してデータ サービスの例外の処理、 <code> args </code>パラメーター。"
  syntax:
    content: public void ProcessException (System.Data.Services.HandleExceptionArgs args);
    parameters:
    - id: args
      type: System.Data.Services.HandleExceptionArgs
      description: "<xref href=&quot;System.Data.Services.HandleExceptionArgs&quot;></xref>例外オブジェクトの情報を格納します。"
  overload: System.Data.Services.IDataServiceHost.ProcessException*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestAccept
  id: RequestAccept
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
  fullName: System.Data.Services.IDataServiceHost.RequestAccept
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "要求によって指定されたトランスポート プロトコルには、ヘッダーがそのまま使用します。"
  remarks: "現在サポートされているプロトコル[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]JSON や AtomPub などです。"
  syntax:
    content: public string RequestAccept { get; }
    return:
      type: System.String
      description: "要求で必要なトランスポート プロトコルを示す文字列です。"
  overload: System.Data.Services.IDataServiceHost.RequestAccept*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  id: RequestAcceptCharSet
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
  fullName: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "値を表す文字列を取得、 `Accept-Charset` HTTP ヘッダー。"
  remarks: "ない場合は null を返します`Accept-Charset`ヘッダーが要求に存在します。"
  syntax:
    content: public string RequestAcceptCharSet { get; }
    return:
      type: System.String
      description: "値を表す文字列、 `Accept-Charset` HTTP ヘッダー。"
  overload: System.Data.Services.IDataServiceHost.RequestAcceptCharSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestContentType
  id: RequestContentType
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
  fullName: System.Data.Services.IDataServiceHost.RequestContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "コンテンツ タイプ ヘッダーによって指定されたトランスポート プロトコルを取得します。"
  remarks: "現在サポートされているプロトコル[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]JSON や AtomPub などです。"
  syntax:
    content: public string RequestContentType { get; }
    return:
      type: System.String
      description: "コンテンツの種類を示す文字列値です。"
  overload: System.Data.Services.IDataServiceHost.RequestContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod
  id: RequestHttpMethod
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
  fullName: System.Data.Services.IDataServiceHost.RequestHttpMethod
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "GET、PUT、POST、または DELETE の要求メソッドを取得します。"
  remarks: "サポートされるプロパティの詳細については<xref:System.Data.Services.IDataServiceHost>とその使用を参照してください[WCF Data Services クライアント ライブラリ](~/add/includes/ajax-current-ext-md.md)</xref:System.Data.Services.IDataServiceHost>。"
  syntax:
    content: public string RequestHttpMethod { get; }
    return:
      type: System.String
      description: "要求メソッドを示す値を文字列です。"
  overload: System.Data.Services.IDataServiceHost.RequestHttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch
  id: RequestIfMatch
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfMatch
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "現在の要求の If-match ヘッダーの値を取得します。"
  syntax:
    content: public string RequestIfMatch { get; }
    return:
      type: System.String
      description: "文字列の現在の要求の If-match ヘッダーの値です。"
  overload: System.Data.Services.IDataServiceHost.RequestIfMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  id: RequestIfNoneMatch
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "現在の要求でなし-If-match ヘッダーの値を取得します。"
  syntax:
    content: public string RequestIfNoneMatch { get; }
    return:
      type: System.String
      description: "文字列の現在の要求でなし-If-match ヘッダーの値です。"
  overload: System.Data.Services.IDataServiceHost.RequestIfNoneMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion
  id: RequestMaxVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
  fullName: System.Data.Services.IDataServiceHost.RequestMaxVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "要求のクライアントが処理できる最高のバージョンを識別する値を取得します。"
  syntax:
    content: public string RequestMaxVersion { get; }
    return:
      type: System.String
      description: "要求のクライアントは、プロセスは、場合によっては null にできる最高のバージョンを表す文字列。"
  overload: System.Data.Services.IDataServiceHost.RequestMaxVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestStream
  id: RequestStream
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
  fullName: System.Data.Services.IDataServiceHost.RequestStream
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "HTTP 要求本文を格納しているストリームを取得します。"
  syntax:
    content: public System.IO.Stream RequestStream { get; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>要求本文を含むオブジェクトです。</xref:System.IO.Stream>"
  overload: System.Data.Services.IDataServiceHost.RequestStream*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.RequestVersion
  id: RequestVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
  fullName: System.Data.Services.IDataServiceHost.RequestVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Null の可能性のあるクライアントが送信した要求のバージョンを識別する値を取得します。"
  remarks: "この値が null の場合、バージョンは 1.0 と見なされます。"
  syntax:
    content: public string RequestVersion { get; }
    return:
      type: System.String
      description: "送信されると、クライアントが null 可能性のある要求のバージョンを識別する文字列。"
  overload: System.Data.Services.IDataServiceHost.RequestVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl
  id: ResponseCacheControl
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
  fullName: System.Data.Services.IDataServiceHost.ResponseCacheControl
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "キャッシュ制御情報を表す文字列値を取得します。"
  syntax:
    content: public string ResponseCacheControl { get; set; }
    return:
      type: System.String
      description: "キャッシュ制御情報を表す文字列値。"
  overload: System.Data.Services.IDataServiceHost.ResponseCacheControl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseContentType
  id: ResponseContentType
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
  fullName: System.Data.Services.IDataServiceHost.ResponseContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "応答のトランスポート プロトコルを取得します。"
  remarks: ''
  example:
  - For more information about the properties supported by <xref:System.Data.Services.IDataServiceHost> and their use, see [WCF Data Services Client Library](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public string ResponseContentType { get; set; }
    return:
      type: System.String
      description: "コンテンツの種類を含む文字列値。"
  overload: System.Data.Services.IDataServiceHost.ResponseContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseETag
  id: ResponseETag
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
  fullName: System.Data.Services.IDataServiceHost.ResponseETag
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "応答内のデータの状態を表す eTag 値を取得します。"
  syntax:
    content: public string ResponseETag { get; set; }
    return:
      type: System.String
      description: "ETag 状態値を表す文字列値。"
  overload: System.Data.Services.IDataServiceHost.ResponseETag*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseLocation
  id: ResponseLocation
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
  fullName: System.Data.Services.IDataServiceHost.ResponseLocation
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "取得またはサービスの場所を設定します。"
  remarks: "このプロパティは決して null を返しますまたは`string.Empty`です。"
  example:
  - "The following URI contains the location of the service in the substring `http://myhost/myservice.svc`.  \n  \n```  \nhttp://myhost/myservice.svc/Customers, the response location would be http://myhost/myservice.svc  \n  \n```"
  syntax:
    content: public string ResponseLocation { get; set; }
    return:
      type: System.String
      description: "サービスの場所を表す文字列。"
  overload: System.Data.Services.IDataServiceHost.ResponseLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode
  id: ResponseStatusCode
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
  fullName: System.Data.Services.IDataServiceHost.ResponseStatusCode
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "取得またはクエリの結果を示す応答コードを設定します。"
  syntax:
    content: public int ResponseStatusCode { get; set; }
    return:
      type: System.Int32
      description: "応答コードを表す整数値。"
  overload: System.Data.Services.IDataServiceHost.ResponseStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseStream
  id: ResponseStream
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
  fullName: System.Data.Services.IDataServiceHost.ResponseStream
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "HTTP 応答の本文の書き込み先となる応答ストリームを取得します。"
  remarks: "Null ストリームが返されない場合や、ストリームに書き込むときに例外が発生した[!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]は要求を中止します。"
  syntax:
    content: public System.IO.Stream ResponseStream { get; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>応答本文の書き込み先となるオブジェクト。</xref:System.IO.Stream>"
  overload: System.Data.Services.IDataServiceHost.ResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.IDataServiceHost.ResponseVersion
  id: ResponseVersion
  parent: System.Data.Services.IDataServiceHost
  langs:
  - csharp
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
  fullName: System.Data.Services.IDataServiceHost.ResponseVersion
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "応答内のホストによって使用されているバージョンを取得します。"
  syntax:
    content: public string ResponseVersion { get; set; }
    return:
      type: System.String
      description: "ホストのバージョンを格納する文字列値です。"
  overload: System.Data.Services.IDataServiceHost.ResponseVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteRequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
  fullName: System.Data.Services.IDataServiceHost.AbsoluteServiceUri
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: GetQueryStringItem(String)
  nameWithType: IDataServiceHost.GetQueryStringItem(String)
  fullName: System.Data.Services.IDataServiceHost.GetQueryStringItem(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ProcessException(HandleExceptionArgs)
  nameWithType: IDataServiceHost.ProcessException(HandleExceptionArgs)
  fullName: System.Data.Services.IDataServiceHost.ProcessException(HandleExceptionArgs)
- uid: System.Data.Services.HandleExceptionArgs
  parent: System.Data.Services
  isExternal: false
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: System.Data.Services.HandleExceptionArgs
- uid: System.Data.Services.IDataServiceHost.RequestAccept
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
  fullName: System.Data.Services.IDataServiceHost.RequestAccept
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
  fullName: System.Data.Services.IDataServiceHost.RequestAcceptCharSet
- uid: System.Data.Services.IDataServiceHost.RequestContentType
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
  fullName: System.Data.Services.IDataServiceHost.RequestContentType
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
  fullName: System.Data.Services.IDataServiceHost.RequestHttpMethod
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfMatch
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
  fullName: System.Data.Services.IDataServiceHost.RequestIfNoneMatch
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
  fullName: System.Data.Services.IDataServiceHost.RequestMaxVersion
- uid: System.Data.Services.IDataServiceHost.RequestStream
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
  fullName: System.Data.Services.IDataServiceHost.RequestStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Services.IDataServiceHost.RequestVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
  fullName: System.Data.Services.IDataServiceHost.RequestVersion
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
  fullName: System.Data.Services.IDataServiceHost.ResponseCacheControl
- uid: System.Data.Services.IDataServiceHost.ResponseContentType
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
  fullName: System.Data.Services.IDataServiceHost.ResponseContentType
- uid: System.Data.Services.IDataServiceHost.ResponseETag
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
  fullName: System.Data.Services.IDataServiceHost.ResponseETag
- uid: System.Data.Services.IDataServiceHost.ResponseLocation
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
  fullName: System.Data.Services.IDataServiceHost.ResponseLocation
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
  fullName: System.Data.Services.IDataServiceHost.ResponseStatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.IDataServiceHost.ResponseStream
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
  fullName: System.Data.Services.IDataServiceHost.ResponseStream
- uid: System.Data.Services.IDataServiceHost.ResponseVersion
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
  fullName: System.Data.Services.IDataServiceHost.ResponseVersion
- uid: System.Data.Services.IDataServiceHost.AbsoluteRequestUri*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteRequestUri
  nameWithType: IDataServiceHost.AbsoluteRequestUri
- uid: System.Data.Services.IDataServiceHost.AbsoluteServiceUri*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: AbsoluteServiceUri
  nameWithType: IDataServiceHost.AbsoluteServiceUri
- uid: System.Data.Services.IDataServiceHost.GetQueryStringItem*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: GetQueryStringItem
  nameWithType: IDataServiceHost.GetQueryStringItem
- uid: System.Data.Services.IDataServiceHost.ProcessException*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ProcessException
  nameWithType: IDataServiceHost.ProcessException
- uid: System.Data.Services.IDataServiceHost.RequestAccept*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAccept
  nameWithType: IDataServiceHost.RequestAccept
- uid: System.Data.Services.IDataServiceHost.RequestAcceptCharSet*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestAcceptCharSet
  nameWithType: IDataServiceHost.RequestAcceptCharSet
- uid: System.Data.Services.IDataServiceHost.RequestContentType*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestContentType
  nameWithType: IDataServiceHost.RequestContentType
- uid: System.Data.Services.IDataServiceHost.RequestHttpMethod*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestHttpMethod
  nameWithType: IDataServiceHost.RequestHttpMethod
- uid: System.Data.Services.IDataServiceHost.RequestIfMatch*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfMatch
  nameWithType: IDataServiceHost.RequestIfMatch
- uid: System.Data.Services.IDataServiceHost.RequestIfNoneMatch*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestIfNoneMatch
  nameWithType: IDataServiceHost.RequestIfNoneMatch
- uid: System.Data.Services.IDataServiceHost.RequestMaxVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestMaxVersion
  nameWithType: IDataServiceHost.RequestMaxVersion
- uid: System.Data.Services.IDataServiceHost.RequestStream*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestStream
  nameWithType: IDataServiceHost.RequestStream
- uid: System.Data.Services.IDataServiceHost.RequestVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: RequestVersion
  nameWithType: IDataServiceHost.RequestVersion
- uid: System.Data.Services.IDataServiceHost.ResponseCacheControl*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseCacheControl
  nameWithType: IDataServiceHost.ResponseCacheControl
- uid: System.Data.Services.IDataServiceHost.ResponseContentType*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseContentType
  nameWithType: IDataServiceHost.ResponseContentType
- uid: System.Data.Services.IDataServiceHost.ResponseETag*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseETag
  nameWithType: IDataServiceHost.ResponseETag
- uid: System.Data.Services.IDataServiceHost.ResponseLocation*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseLocation
  nameWithType: IDataServiceHost.ResponseLocation
- uid: System.Data.Services.IDataServiceHost.ResponseStatusCode*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStatusCode
  nameWithType: IDataServiceHost.ResponseStatusCode
- uid: System.Data.Services.IDataServiceHost.ResponseStream*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseStream
  nameWithType: IDataServiceHost.ResponseStream
- uid: System.Data.Services.IDataServiceHost.ResponseVersion*
  parent: System.Data.Services.IDataServiceHost
  isExternal: false
  name: ResponseVersion
  nameWithType: IDataServiceHost.ResponseVersion
