### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ISafeSerializationData
  id: ISafeSerializationData
  children:
  - System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)
  langs:
  - csharp
  name: ISafeSerializationData
  nameWithType: ISafeSerializationData
  fullName: System.Runtime.Serialization.ISafeSerializationData
  type: Interface
  summary: "セキュリティ透過的なコードでカスタムの例外データのシリアル化を有効にします。"
  remarks: "To.NET Framework 4.0 の以前のバージョン、セキュリティ透過的なコードでカスタム ユーザー データのシリアル化可能でしたを使用して、<xref:System.Exception.GetObjectData%2A>メソッド</xref:System.Exception.GetObjectData%2A>。 .NET Framework 4.0 以降、そのメソッドが付いて、<xref:System.Security.SecurityCriticalAttribute>属性はセキュリティ透過的なコードで実行されません</xref:System.Security.SecurityCriticalAttribute>。 このような状況を回避するには、ISafeSerializationData インターフェイスを実装し、次の例に示すようにカスタム データを追加します。       <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A>メソッドは、シリアル化後に呼び出されますを使用して、<xref:System.Runtime.Serialization.SafeSerializationEventArgs>カスタム データを復元する</xref:System.Runtime.Serialization.SafeSerializationEventArgs></xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A>。"
  example:
  - "The following example contains an implementation of the ISafeSerializationData interface that is used to store custom data that is serialized.  \n  \n [!code-vb[ISafeSerializationData#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_2_1.vb)]\n [!code-cs[ISafeSerializationData#1](~/add/codesnippet/csharp/t-system.runtime.seriali_2_1.cs)]"
  syntax:
    content: public interface ISafeSerializationData
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)
  id: CompleteDeserialization(System.Object)
  parent: System.Runtime.Serialization.ISafeSerializationData
  langs:
  - csharp
  name: CompleteDeserialization(Object)
  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)
  fullName: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "インスタンスが逆シリアル化されるときに、このメソッドが呼び出されます。"
  remarks: "状態オブジェクトが、<xref:System.Runtime.Serialization.ISafeSerializationData>クラス</xref:System.Runtime.Serialization.ISafeSerializationData>の実装で定義されているプライベート変数に格納されています。"
  example:
  - "The following example restores the state of the exception after being deserialized.  \n  \n [!code-vb[ISafeSerializationData#2](~/add/codesnippet/visualbasic/6f34c893-b650-4b68-a165-_1.vb)]\n [!code-cs[ISafeSerializationData#2](~/add/codesnippet/csharp/6f34c893-b650-4b68-a165-_1.cs)]"
  syntax:
    content: public void CompleteDeserialization (object deserialized);
    parameters:
    - id: deserialized
      type: System.Object
      description: "インスタンスの状態を格納するオブジェクト。"
  overload: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)
  parent: System.Runtime.Serialization.ISafeSerializationData
  isExternal: false
  name: CompleteDeserialization(Object)
  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)
  fullName: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*
  parent: System.Runtime.Serialization.ISafeSerializationData
  isExternal: false
  name: CompleteDeserialization
  nameWithType: ISafeSerializationData.CompleteDeserialization
