### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslCompiledTransform
  id: XslCompiledTransform
  children:
  - System.Xml.Xsl.XslCompiledTransform.#ctor
  - System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  - System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.OutputSettings
  - System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  langs:
  - csharp
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform
  fullName: System.Xml.Xsl.XslCompiledTransform
  type: Class
  summary: "XSLT スタイル シートを使用して XML データを変換します。"
  remarks: "XslCompiledTransform クラスは、XSLT 1.0 の構文をサポートする XSLT プロセッサです。 新しい実装、パフォーマンスの向上と比較すると、古い<xref:System.Xml.Xsl.XslTransform>クラス</xref:System.Xml.Xsl.XslTransform>が含まれています XslCompiledTransform クラスの構造体を<xref:System.Xml.Xsl.XslTransform>クラス</xref:System.Xml.Xsl.XslTransform>によく似ています <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッドの読み込みおよびスタイルをコンパイル中に、シート、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッドは、XSLT 変換を実行します</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>。       XSLT のサポート`document()`関数と埋め込みのスクリプト ブロックは、既定で無効にします。 作成することで、これらの機能を有効にすることができます、<xref:System.Xml.Xsl.XsltSettings>オブジェクトを渡すと、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A></xref:System.Xml.Xsl.XsltSettings>。       詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。      ## セキュリティに関する考慮事項を作成するとき、XslCompiledTransform クラスを使用するアプリケーションをおく必要があります、次の項目とその関連事項に注意してください:-XSLT スクリプトは既定で無効になります。 スクリプトのサポートを必要として、完全に信頼された環境で作業している場合にのみ、XSLT スクリプトを有効にする必要があります。      -XSLT`document()`関数が既定で無効になっています。 有効にした場合、`document()`関数を渡すことによってアクセスできるリソースを制限、<xref:System.Xml.XmlSecureResolver>オブジェクトを<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlSecureResolver>。      拡張オブジェクトは既定で有効にします。 場合、<xref:System.Xml.Xsl.XsltArgumentList>拡張オブジェクトを含むオブジェクトは、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッドは使用できます</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.Xsl.XsltArgumentList>。      -XSLT スタイル シートには、他のファイルや埋め込みのスクリプト ブロックへの参照を含めることができます。 悪意のあるユーザーがデータを使用するを指定することによってこれを悪用やスタイル シートを実行時にシステムにコンピューターがリソース不足になるまで処理が発生することができます。      -混在信頼環境で実行される XSLT アプリケーションは、スタイル シートのなりすましになります。 たとえば、悪意のあるユーザー有害なスタイル シートを含むオブジェクトを読み込むでき、後で呼び出す別のユーザーに渡す、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド変換を実行します</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。       スクリプトを有効にしないをこれらのセキュリティ問題を軽減できますまたは`document()`関数の場合にのみ、スタイル シートが信頼できる発行元が XslCompiledTransform を受け付けていませんオブジェクト、XSLT スタイル シート、または XML ソースで信頼されていないソースからのデータ。"
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xslcomp_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/t-system.xml.xsl.xslcomp_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_3.xsl)]"
  syntax:
    content: public sealed class XslCompiledTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;> </xref>クラスです。"
  syntax:
    content: public XslCompiledTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;> </xref>指定されたデバッグ設定を持つクラス。"
  remarks: "コードにステップ インし、スタイル シートをデバッグするために、次の条件を満たす必要があります: -`enableDebug`にパラメーターが設定されている`true`です。      -スタイル シートは、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッド、URI と、実装のどちらかとして、<xref:System.Xml.XmlReader>を実装するクラス、<xref:System.Xml.IXmlLineInfo>インターフェイス</xref:System.Xml.IXmlLineInfo></xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>。 <xref:System.Xml.IXmlLineInfo>インターフェイスは、すべてのテキストの解析中に実装<xref:System.Xml.XmlReader>オブジェクト</xref:System.Xml.XmlReader></xref:System.Xml.IXmlLineInfo>。           つまりを使用して、スタイル シートが読み込まれた場合、<xref:System.Xml.XPath.IXPathNavigable>などのオブジェクト、<xref:System.Xml.XmlDocument>または<xref:System.Xml.XPath.XPathDocument>、または<xref:System.Xml.XmlReader>実装していない実装、<xref:System.Xml.IXmlLineInfo>インターフェイス、スタイル シートをデバッグすることはできません</xref:System.Xml.IXmlLineInfo></xref:System.Xml.XmlReader></xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.IXPathNavigable>。      -<xref:System.Xml.XmlResolver>スタイルを読み込むために使用シートはファイル ベース<xref:System.Xml.XmlResolver>など、 <xref:System.Xml.XmlUrlResolver>(これは、既定値<xref:System.Xml.XmlResolver>によって使用される、<xref:System.Xml.Xsl.XslCompiledTransform>クラス).</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.XmlResolver> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>      -スタイル シートは、ローカル コンピューター上またはイントラネット上に配置します。"
  example:
  - "The following example shows how to enable XSLT debugging.  \n  \n [!code-vb[XslCompiledTransform.Load#10](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.Load#10](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_1_1.cs)]"
  syntax:
    content: public XslCompiledTransform (bool enableDebug);
    parameters:
    - id: enableDebug
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>デバッグ情報を生成するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 これを設定する<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Microsoft Visual Studio デバッガーでスタイル シートをデバッグすることができます。"
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  id: CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定した型に XSLT スタイル シートをコンパイルします。"
  remarks: "`xsltc.exe`ツールは CompileToType メソッドをラップするラッパー。 スタイル シートをコンパイル、`xsltc.exe`コンパイル済みスタイル シートの使用を利用するほとんどのアプリケーションの要件を満たしています。 カスタムのコンパイル ツールを構築するときに、CompileToType メソッドを使用してください。"
  syntax:
    content: public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>コンパイルするスタイル シートの先頭に配置します</xref:System.Xml.XmlReader>。"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>をスタイル シートに適用できます。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Xml.Xsl.XsltSettings.Default*>適用されます</xref:System.Xml.Xsl.XsltSettings.Default*>。"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているスタイル シート モジュールを解決するのには使用<xref uid=&quot;langword_csharp_xsl:import&quot; name=&quot;xsl:import&quot; href=&quot;&quot;></xref>と<xref uid=&quot;langword_csharp_xsl:include&quot; name=&quot;xsl:include&quot; href=&quot;&quot;></xref>要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部リソースを解決できません。"
    - id: debug
      type: System.Boolean
      description: "これを設定する<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>デバッガーを使用して、スタイル シートのデバッグを有効にします。"
    - id: typeBuilder
      type: System.Reflection.Emit.TypeBuilder
      description: "<xref:System.Reflection.Emit.TypeBuilder>スタイル シートのコンパイルに使用します</xref:System.Reflection.Emit.TypeBuilder>。 指定された TypeBuilder を使用して、結果の型を生成します。"
    - id: scriptAssemblyPath
      type: System.String
      description: "に対して生成されたアセンブリのベース パス<xref uid=&quot;langword_csharp_msxsl:script&quot; name=&quot;msxsl:script&quot; href=&quot;&quot;></xref>要素。 1 つのスクリプト アセンブリが生成されただけの場合、このパラメーターは、そのアセンブリのパスを指定します。 複数のスクリプト アセンブリが発生した場合、アセンブリ名の一意性を保証するファイル名に印象的なサフィックスが追加されます。"
    return:
      type: System.CodeDom.Compiler.CompilerErrorCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.CompilerErrorCollection&quot;> </xref>コンパイラ エラーと、コンパイルの結果を示す警告を含むオブジェクト。"
  overload: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "読み込みおよび指定された URI にあるスタイル シートをコンパイルします。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。       このメソッドは、次の動作: -<xref:System.Xml.XmlUrlResolver>スタイル シートの URI を解決するには、いずれかの処理をユーザーがいない資格情報を使用`xsl:import`または`xsl:include`要素</xref:System.Xml.XmlUrlResolver>。      -<xref:System.Xml.XmlReader>既定値の設定は、スタイル シートの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A></xref:System.Xml.XmlReader>。      -`document()`関数が無効になっています。      -埋め込みスクリプトがサポートされていません。       使用することができます、<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>を指定するオーバー ロード、 <xref:System.Xml.XmlResolver>、必要な認証資格情報を持つ、または別の XSLT 設定を指定します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>。"
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_2_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_2_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "スタイル シートの URI。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "スタイル シートが見つかりません。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> stylesheetUri </code>ファイル名またはディレクトリが見つかりません、値が含まれます。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> stylesheetUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "スタイル シートの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  id: Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "使用して作成されたコンパイル済みスタイル シートを読み込み、 [XSLT コンパイラ (xsltc.exe)](~/add/includes/ajax-current-ext-md.md)です。"
  remarks: "Xsltc.exe ツールはスタイル シートをコンパイルし、スタイル シートからアセンブリを生成するために使用します。 Load メソッドでは、アセンブリから、コンパイル済みスタイル シートを読み込みます。      > [!NOTE] > XSLT アセンブリを参照としては、アプリケーションでも含める必要があります。"
  example:
  - "The following example shows how to load a compiled style sheet from an XSLT assembly. The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.  \n  \n> [!NOTE]\n>  You have to reference the XSLT assembly when compiling the code. For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.  \n  \n```  \n// Load the type of the class.  \nXslCompiledTransform xslt = new XslCompiledTransform();  \nxslt.Load(typeof(bookOrders));  \n```"
  syntax:
    content: public void Load (Type compiledStylesheet);
    parameters:
    - id: compiledStylesheet
      type: System.Type
      description: "コンパイル済みスタイル シートを含むクラスの名前。       これは、通常、スタイル シートの名前です。 、それ以外の場合に指定されていない限り、xsltc.exe ツールは、クラス名とアセンブリ名に、スタイル シートの名前を使用します。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>に含まれているスタイル シートがコンパイルします。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。       現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を介してすべての子</xref:System.Xml.XmlReader>。 これにより、スタイル シートとして、ドキュメントの一部を使用することができます。 Load メソッドが完了したら、<xref:System.Xml.XmlReader>スタイル シートの終了後に次のノードに配置されています</xref:System.Xml.XmlReader>。 ドキュメントの末尾に達した場合、<xref:System.Xml.XmlReader>は、ファイルの末尾 (EOF) に配置します</xref:System.Xml.XmlReader>。       このメソッドは、次の動作: -<xref:System.Xml.XmlUrlResolver>資格情報の使用を処理するユーザーがいない`xsl:import`または`xsl:include`要素</xref:System.Xml.XmlUrlResolver>。      -`document()`関数が無効になっています。      -埋め込みスクリプトがサポートされていません。       使用することができます、<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>を指定するオーバー ロード、 <xref:System.Xml.XmlResolver>、必要な認証資格情報を持つ、または別の XSLT 設定を指定します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>。"
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.  \n  \n [!code-vb[XslCompiledTransform.Load#5](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_4_1.vb)]\n [!code-cs[XslCompiledTransform.Load#5](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_4_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>スタイル シートを含むします</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "含まれているスタイル シートをコンパイル、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクト。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。       このメソッドは、次の動作: -<xref:System.Xml.XmlUrlResolver>資格情報の使用を処理するユーザーがいない`xsl:import`または`xsl:include`要素</xref:System.Xml.XmlUrlResolver>。      -`document()`関数が無効になっています。      -埋め込みスクリプトがサポートされていません。       使用することができます、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>を指定するオーバー ロード、 <xref:System.Xml.XmlResolver>、必要な認証資格情報を持つ、または別の XSLT 設定を指定します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>。"
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.  \n  \n [!code-vb[XslCompiledTransform.Load#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_3_1.vb)]\n [!code-cs[XslCompiledTransform.Load#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_3_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>スタイル シートを含むです。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  id: Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "使用してコンパイルされたスタイル シートからメソッドを読み込み、 <xref uid=&quot;langword_csharp_XSLTC.exe&quot; name=&quot;XSLTC.exe&quot; href=&quot;&quot;> </xref>ユーティリティです。"
  remarks: "このメソッドは、の形式でのコンパイル済みスタイル シートを受け取ります、<xref:System.Reflection.MethodInfo>オブジェクト、バイト配列、および配列の型</xref:System.Reflection.MethodInfo>。 <xref:System.Reflection.Emit.DynamicMethod>オブジェクトは、コンパイル済みスタイル シート メソッドであるを使用する可能性があります破棄されたときに、<xref:System.Xml.Xsl.XslCompiledTransform>オブジェクトを解放します</xref:System.Xml.Xsl.XslCompiledTransform>。</xref:System.Reflection.Emit.DynamicMethod>"
  example:
  - "The code example below uses the Load to load a compiled style sheet. The transformation reduces the value of the `Price` element by ten percent.  \n  \n [!code-cs[XsltDynamicMethodLoad#1](~/add/codesnippet/csharp/3f995c36-b532-490b-a825-_1.cs)]\n [!code-vb[XsltDynamicMethodLoad#1](~/add/codesnippet/visualbasic/3f995c36-b532-490b-a825-_1.vb)]  \n  \n> [!NOTE]\n>  The \"Transform\" assembly used in this example was built using the xsltc.exe utility. For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The code example above uses the following transformation:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  \n  xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\"  \n  xmlns:user=\"urn:my-scripts\">  \n  <msxsl:script language=\"C#\" implements-prefix=\"user\">  \n    <![CDATA[  \n  public double modifyPrice(double price){  \n    price*=0.9;  \n    return price;  \n  }  \n  ]]>  \n  </msxsl:script>  \n  <xsl:template match=\"Root\">  \n    <Root xmlns=\"\">  \n      <Price><xsl:value-of select=\"user:modifyPrice(Price)\"/></Price>  \n    </Root>  \n  </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);
    parameters:
    - id: executeMethod
      type: System.Reflection.MethodInfo
      description: "A<xref:System.Reflection.MethodInfo>コンパイラによって生成されたを表すオブジェクトを`execute`コンパイル済みスタイル シートのメソッド</xref:System.Reflection.MethodInfo>。"
    - id: queryData
      type: System.Byte[]
      description: "シリアル化されたデータのバイト配列が構造体に、`staticData`で生成されたコンパイル済みスタイル シートのフィールド、<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType*>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.CompileToType*>。"
    - id: earlyBoundTypes
      type: System.Type[]
      description: "コンパイラによって生成されたに格納されている型の配列`ebTypes`コンパイル済みスタイル シートのフィールドです。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "読み込みおよび URI によって指定された XSLT スタイル シートをコンパイルします。 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決`import`または`include`要素と、XSLT 設定は、スタイル シートのアクセス許可を確認します。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。       <xref:System.Xml.XmlReader>既定値の設定は、スタイル シートの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A></xref:System.Xml.XmlReader>。"
  example:
  - "The following example loads a style sheet that is stored on a network resource. An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#2](~/add/codesnippet/visualbasic/7ddc7420-1fde-47dd-8fb0-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#2](~/add/codesnippet/csharp/7ddc7420-1fde-47dd-8fb0-_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "スタイル シートの URI。"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>スタイル シートに適用します。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Xml.Xsl.XsltSettings.Default*>設定が適用されます</xref:System.Xml.Xsl.XsltSettings.Default*>。"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 、スタイル シートの URI および XSLT で参照されているすべてのスタイル シートを解決するために使用`import`と`include`要素。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> or <code>stylesheetResolver</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "スタイル シートが見つかりません。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> stylesheetUri </code>ファイル名またはディレクトリが見つかりません、値が含まれます。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> stylesheetUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "スタイル シートの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>に含まれている、XSLT スタイル シートがコンパイルします。 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決`import`または`include`要素と、XSLT 設定は、スタイル シートのアクセス許可を確認します。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。       現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を介してすべての子</xref:System.Xml.XmlReader>。 これにより、スタイル シートとして、ドキュメントの一部を使用することができます。 後に、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッドが完了すると、<xref:System.Xml.XmlReader>スタイル シートの終了後に次のノードに配置されています</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>。 ドキュメントの末尾に達した場合、<xref:System.Xml.XmlReader>は、ファイルの末尾 (EOF) に配置します</xref:System.Xml.XmlReader>。"
  example:
  - "The following example loads a style sheet and enables support for XSLT scripting.  \n  \n [!code-vb[XslCompiledTransform.Load#3](~/add/codesnippet/visualbasic/ec76ab0a-8bf0-415f-87c6-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#3](~/add/codesnippet/csharp/ec76ab0a-8bf0-415f-87c6-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>スタイル シートを含むします</xref:System.Xml.XmlReader>。"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>スタイル シートに適用します。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Xml.Xsl.XsltSettings.Default*>設定が適用されます</xref:System.Xml.Xsl.XsltSettings.Default*>。"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT で参照されているすべてのスタイル シートを解決するために使用`import`と`include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートをコンパイル、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref>です。 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決`import`または`include`要素と、XSLT 設定は、スタイル シートのアクセス許可を確認します。"
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>クラスが XSLT 1.0 の構文をサポートしています</xref:System.Xml.Xsl.XslCompiledTransform>。 XSLT スタイル シートを使用する必要があります、`http://www.w3.org/1999/XSL/Transform`名前空間。"
  example:
  - "The following example loads a style sheet. The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#4](~/add/codesnippet/visualbasic/8f1118cc-2b51-4727-9f95-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#4](~/add/codesnippet/csharp/8f1118cc-2b51-4727-9f95-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>スタイル シートを含むです。"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref>スタイル シートに適用します。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Xml.Xsl.XsltSettings.Default*>設定が適用されます</xref:System.Xml.Xsl.XsltSettings.Default*>。"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT で参照されているすべてのスタイル シートを解決するために使用`import`と`include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "スタイル シートには、エラーが含まれています。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  id: OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得、<xref:System.Xml.XmlWriterSettings>から派生したオブジェクトを出力情報を含む、`xsl:output`スタイル シートの要素</xref:System.Xml.XmlWriterSettings>。"
  remarks: "呼び出しに成功した後にこのプロパティが設定されます、<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>。 派生した情報が含まれている、`xsl:output`コンパイル済みスタイル シートの要素。 これは、<xref:System.Xml.XmlWriterSettings>にオブジェクトを渡すことができます、<xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName>メソッドを作成、<xref:System.Xml.XmlWriter>出力するオブジェクト</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName></xref:System.Xml.XmlWriterSettings>。"
  example:
  - "The following example shows how to use the OutputSettings property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.  \n  \n [!code-vb[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_1_1.cs)]  \n  \n The example uses the `books.xml` and `outputConsole.xsl` files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#2](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_2.xml)]  \n  \n `outputConsole.xsl`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#3](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_3.xsl)]"
  syntax:
    content: public System.Xml.XmlWriterSettings OutputSettings { get; }
    return:
      type: System.Xml.XmlWriterSettings
      description: "読み取り専用<xref:System.Xml.XmlWriterSettings>から派生したオブジェクトを出力情報を含む、`xsl:output`スタイル シートの要素</xref:System.Xml.XmlWriterSettings>。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  id: TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "取得、 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref>呼び出しに成功した後、ディスクに生成された一時ファイルを格納している、<xref:System.Xml.Xsl.XslCompiledTransform.Load*>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Load*>。"
  remarks: "このプロパティを識別 XSLT 中に生成されたファイルを処理します。 ファイルを配置している XSLT 処理が完了した後、Temp ディレクトリ (%TEMP% 環境変数で指定) でこれらのファイルを削除することができます。"
  example:
  - "The following example writes the names of temporary files to the console.  \n  \n> [!NOTE]\n>  Temporary files are created only when loading style sheets with \\<msxsl:script> blocks.  \n  \n [!code-vb[XslCompiledTransform.Transform#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#8](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "<xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref>ディスクで生成された一時ファイルを格納しています。 この値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、<xref:System.Xml.Xsl.XslCompiledTransform.Load*>メソッドが正常に呼び出されていない、またはデバッグが有効になっていない場合</xref:System.Xml.Xsl.XslCompiledTransform.Load*>。"
  overload: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI で指定された入力ドキュメントを使用して変換を実行し、結果をファイルに出力します。"
  remarks: "このメソッドは、既定<xref:System.Xml.XmlUrlResolver>入力と出力のドキュメントを解決するのにはないユーザー資格情報を使用します</xref:System.Xml.XmlUrlResolver>。 これらのリソースがある場合、認証が必要なネットワーク リソースには、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XmlReader>既定値の設定は入力ドキュメントの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlReader>。"
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_0_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, string resultsFile);
    parameters:
    - id: inputUri
      type: System.String
      description: "入力ドキュメントの URI。"
    - id: resultsFile
      type: System.String
      description: "出力ファイルの URI。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>resultsFile</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "入力ドキュメントが見つかりません。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code>または<code> resultsFile </code>値には、ファイル名が含まれています。 または、ディレクトリが見つかりません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code>または<code> resultsFile </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>または<code>resultsFile</code>は有効な URI ではありません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "入力ドキュメントの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI で指定された入力ドキュメントを使用して変換を実行し、結果<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>を出力"
  remarks: "このメソッドは、既定<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない入力ドキュメントと XSLT のすべてのインスタンスを解決するのには`document()`関数は、スタイル シートで見つかりました</xref:System.Xml.XmlUrlResolver>。 これらのリソースがある場合、認証が必要なネットワーク リソースには、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XmlReader>既定値の設定は入力ドキュメントの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlReader>。       この方法がサポートされていません、`xsl:strip-space`要素。 コンパイル済みスタイル シートが含まれている場合、`xsl:strip-space`要素が使用する必要があります、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>オーバー ロードの受け取り、<xref:System.Xml.XmlReader>は入力引数としてです</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。"
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#2](~/add/codesnippet/visualbasic/1a837310-9fde-4a29-a77e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#2](~/add/codesnippet/csharp/1a837310-9fde-4a29-a77e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "入力ドキュメントの URI。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code>値には、ファイル名が含まれています。 または、ディレクトリが見つかりません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "入力ドキュメントの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "を指定して、<xref:System.Xml.XmlReader>オブジェクトし結果<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>を出力</xref:System.Xml.XmlReader>、入力ドキュメントを使用して変換を実行します。"
  remarks: "場合は、XSLT`document()`機能が有効では解決を使用して、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。"
  example:
  - "The following example transforms the first book in the books.xml file.  \n  \n [!code-vb[XslCompiledTransform.Transform#7](~/add/codesnippet/visualbasic/e9e9dd2b-fa70-4f3f-9037-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#7](~/add/codesnippet/csharp/e9e9dd2b-fa70-4f3f-9037-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>入力ドキュメントを含むします</xref:System.Xml.XmlReader>。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して変換を実行、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクトし、結果を<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>出力"
  remarks: "場合は、XSLT`document()`機能が有効では解決を使用して、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       この方法がサポートされていません、`xsl:strip-space`要素。 コンパイル済みスタイル シートが含まれている場合、`xsl:strip-space`要素が使用する必要があります、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>オーバー ロードの受け取り、<xref:System.Xml.XmlReader>は入力引数としてです</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。       <xref:System.Xml.XPath.IXPathNavigable>でインターフェイスを実装、<xref:System.Xml.XmlNode>と<xref:System.Xml.XPath.XPathDocument>クラス</xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XmlNode></xref:System.Xml.XPath.IXPathNavigable>。 これらのクラスは、XML データのメモリ内キャッシュを表します。      -<xref:System.Xml.XmlNode>クラスは W3C ドキュメント オブジェクト モデル (DOM) に基づいており、編集機能が含まれています</xref:System.Xml.XmlNode>。      -<xref:System.Xml.XPath.XPathDocument>クラスは、XPath データ モデルに基づく読み取り専用のデータ ストアです</xref:System.Xml.XPath.XPathDocument>。 <xref:System.Xml.XPath.XPathDocument>XSLT の推奨されるクラスを処理します。</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>クラス</xref:System.Xml.XmlNode>と比較した場合の高速なパフォーマンスを提供します。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 ノード フラグメントを変換するには、は、ノード フラグメントだけを含むオブジェクトを作成し、変換メソッドにそのオブジェクトを渡す必要があります。 詳細については、次を参照してください。[する方法: ノード フラグメントを変換](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#5](~/add/codesnippet/visualbasic/58ce38a1-de5d-405a-b8cb-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#5](~/add/codesnippet/csharp/58ce38a1-de5d-405a-b8cb-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI で指定された入力ドキュメントを使用して変換を実行し、結果をストリームを出力します。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "このメソッドは、既定<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない入力ドキュメントと XSLT のすべてのインスタンスを解決するのには`document()`関数は、スタイル シートで見つかりました</xref:System.Xml.XmlUrlResolver>。 これらのリソースがある場合、認証が必要なネットワーク リソースには、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XmlReader>既定値の設定は入力ドキュメントの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlReader>。"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: inputUri
      type: System.String
      description: "入力ドキュメントの URI。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.Stream
      description: "出力するストリーム。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code>値には、ファイル名が含まれています。 または、ディレクトリが見つかりません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "入力ドキュメントの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI で指定された入力ドキュメントを使用して変換を実行し、結果<xref:System.IO.TextWriter>。</xref:System.IO.TextWriter>を出力"
  remarks: "このメソッドは、既定<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない入力ドキュメントと XSLT のすべてのインスタンスを解決するのには`document()`関数は、スタイル シートで見つかりました</xref:System.Xml.XmlUrlResolver>。 これらのリソースがある場合、認証が必要なネットワーク リソースには、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XmlReader>既定値の設定は入力ドキュメントの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlReader>。"
  example:
  - "The following example executes an XSLT transformation and outputs a string.  \n  \n [!code-vb[XslCompiledTransform.Transform#3](~/add/codesnippet/visualbasic/50b87a05-12d4-4637-9d7e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#3](~/add/codesnippet/csharp/50b87a05-12d4-4637-9d7e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "入力ドキュメントの URI。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code>値には、ファイル名が含まれています。 または、ディレクトリが見つかりません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "入力ドキュメントの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI で指定された入力ドキュメントを使用して変換を実行し、結果<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>を出力 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "このメソッドは、既定<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない入力ドキュメントと XSLT のすべてのインスタンスを解決するのには`document()`関数は、スタイル シートで見つかりました</xref:System.Xml.XmlUrlResolver>。 これらのリソースがある場合、認証が必要なネットワーク リソースには、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XmlReader>既定値の設定は入力ドキュメントの読み込みに使用します</xref:System.Xml.XmlReader>。 <xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader> DTD の処理が無効になっています DTD の処理が必要な場合は、作成、<xref:System.Xml.XmlReader>に渡すし、この機能を有効にする、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>メソッド</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A></xref:System.Xml.XmlReader>。"
  example:
  - "The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.  \n  \n [!code-vb[XsltArgumentList.AddParam#1](~/add/codesnippet/visualbasic/614c84d5-4852-4d05-913d-_1.vb)]\n [!code-cs[XsltArgumentList.AddParam#1](~/add/codesnippet/csharp/614c84d5-4852-4d05-913d-_1.cs)]  \n  \n The example uses the following two data files as input.  \n  \n order.xml  \n  \n [!code-xml[XsltArgumentList.AddParam#2](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_2.xml)]  \n  \n order.xsl  \n  \n [!code-xml[XsltArgumentList.AddParam#3](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "入力ドキュメントの URI。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputtUri </code>値には、ファイル名が含まれています。 または、ディレクトリが見つかりません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code>値を解決することはできません。       - または - 要求の処理中にエラーが発生しました。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>有効な URI ではないです。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "入力ドキュメントの読み込み中に解析エラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して変換を実行、<xref:System.Xml.XmlReader>オブジェクトし、結果ストリームを出力します</xref:System.Xml.XmlReader>。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "スタイル シートには、XSLT が含まれている場合`document()`関数を使用して解決されて、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>入力ドキュメントを含むします</xref:System.Xml.XmlReader>。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.Stream
      description: "出力するストリーム。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "を指定して、<xref:System.Xml.XmlReader>オブジェクトし結果<xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>を出力</xref:System.Xml.XmlReader>、入力ドキュメントを使用して変換を実行します。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "スタイル シートには、XSLT が含まれている場合`document()`関数を使用して解決されて、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>入力ドキュメントを含むします</xref:System.Xml.XmlReader>。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "を指定して、<xref:System.Xml.XmlReader>オブジェクトし結果<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>を出力</xref:System.Xml.XmlReader>、入力ドキュメントを使用して変換を実行します。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "スタイル シートには、XSLT が含まれている場合`document()`関数を使用して解決されて、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>入力ドキュメントを含むします</xref:System.Xml.XmlReader>。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して変換を実行、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクトし、結果ストリームを出力します。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加のランタイム引数を提供します。"
  remarks: "場合は、XSLT`document()`機能が有効では解決を使用して、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       この方法がサポートされていません、`xsl:strip-space`要素。 コンパイル済みスタイル シートが含まれている場合、`xsl:strip-space`要素が使用する必要があります、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>オーバー ロードの受け取り、<xref:System.Xml.XmlReader>は入力引数としてです</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。       <xref:System.Xml.XPath.IXPathNavigable>でインターフェイスを実装、<xref:System.Xml.XmlNode>と<xref:System.Xml.XPath.XPathDocument>クラス</xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XmlNode></xref:System.Xml.XPath.IXPathNavigable>。 これらのクラスは、XML データのメモリ内キャッシュを表します。      -<xref:System.Xml.XmlNode>クラスは W3C ドキュメント オブジェクト モデル (DOM) に基づいており、編集機能が含まれています</xref:System.Xml.XmlNode>。      -<xref:System.Xml.XPath.XPathDocument>クラスは、XPath データ モデルに基づく読み取り専用のデータ ストアです</xref:System.Xml.XPath.XPathDocument>。 <xref:System.Xml.XPath.XPathDocument>XSLT の推奨されるクラスを処理します。</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>クラス</xref:System.Xml.XmlNode>と比較した場合の高速なパフォーマンスを提供します。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 ノード フラグメントを変換するには、は、ノード フラグメントだけを含むオブジェクトを作成し、変換メソッドにそのオブジェクトを渡す必要があります。 詳細については、次を参照してください。[する方法: ノード フラグメントを変換](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.  \n  \n [!code-vb[XslCompiledTransform.Transform#6](~/add/codesnippet/visualbasic/83a14379-9d60-4f40-a273-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#6](~/add/codesnippet/csharp/83a14379-9d60-4f40-a273-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.Stream
      description: "出力するストリーム。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して変換を実行、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクトし、結果を<xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>出力 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "場合は、XSLT`document()`機能が有効では解決を使用して、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       この方法がサポートされていません、`xsl:strip-space`要素。 コンパイル済みスタイル シートが含まれている場合、`xsl:strip-space`要素が使用する必要があります、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>オーバー ロードの受け取り、<xref:System.Xml.XmlReader>は入力引数としてです</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。       <xref:System.Xml.XPath.IXPathNavigable>でインターフェイスを実装、<xref:System.Xml.XmlNode>と<xref:System.Xml.XPath.XPathDocument>クラス</xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XmlNode></xref:System.Xml.XPath.IXPathNavigable>。 これらのクラスは、XML データのメモリ内キャッシュを表します。      -<xref:System.Xml.XmlNode>クラスは W3C ドキュメント オブジェクト モデル (DOM) に基づいており、編集機能が含まれています</xref:System.Xml.XmlNode>。      -<xref:System.Xml.XPath.XPathDocument>クラスは、XPath データ モデルに基づく読み取り専用のデータ ストアです</xref:System.Xml.XPath.XPathDocument>。 <xref:System.Xml.XPath.XPathDocument>XSLT の推奨されるクラスを処理します。</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>クラス</xref:System.Xml.XmlNode>と比較した場合の高速なパフォーマンスを提供します。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 ノード フラグメントを変換するには、は、ノード フラグメントだけを含むオブジェクトを作成し、変換メソッドにそのオブジェクトを渡す必要があります。 詳細については、次を参照してください。[する方法: ノード フラグメントを変換](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して変換を実行、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクトし、結果を<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>出力 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供します。"
  remarks: "場合は、XSLT`document()`機能が有効では解決を使用して、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 外部のリソースがある場合、認証が必要なネットワーク リソースに、使用するオーバー ロードを使用して、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報です</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       この方法がサポートされていません、`xsl:strip-space`要素。 コンパイル済みスタイル シートが含まれている場合、`xsl:strip-space`要素が使用する必要があります、<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>オーバー ロードの受け取り、<xref:System.Xml.XmlReader>は入力引数としてです</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>。       <xref:System.Xml.XPath.IXPathNavigable>でインターフェイスを実装、<xref:System.Xml.XmlNode>と<xref:System.Xml.XPath.XPathDocument>クラス</xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XmlNode></xref:System.Xml.XPath.IXPathNavigable>。 これらのクラスは、XML データのメモリ内キャッシュを表します。      -<xref:System.Xml.XmlNode>クラスは W3C ドキュメント オブジェクト モデル (DOM) に基づいており、編集機能が含まれています</xref:System.Xml.XmlNode>。      -<xref:System.Xml.XPath.XPathDocument>クラスは、XPath データ モデルに基づく読み取り専用のデータ ストアです</xref:System.Xml.XPath.XPathDocument>。 <xref:System.Xml.XPath.XPathDocument>XSLT の推奨されるクラスを処理します。</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>クラス</xref:System.Xml.XmlNode>と比較した場合の高速なパフォーマンスを提供します。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 ノード フラグメントを変換するには、は、ノード フラグメントだけを含むオブジェクトを作成し、変換メソッドにそのオブジェクトを渡す必要があります。 詳細については、次を参照してください。[する方法: ノード フラグメントを変換](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 Microsoft .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "を指定して、<xref:System.Xml.XmlReader>オブジェクトし結果<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>を出力</xref:System.Xml.XmlReader>、入力ドキュメントを使用して変換を実行します。 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 、実行時引数の追加と XmlResolver 解決 XSLT`document()`関数。"
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.  \n  \n [!code-vb[XslCompiledTransform.Transform#4](~/add/codesnippet/visualbasic/c36dd9c6-36bd-4274-9e59-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#4](~/add/codesnippet/csharp/c36dd9c6-36bd-4274-9e59-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>入力ドキュメントを含むします</xref:System.Xml.XmlReader>。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>トランス フォームへの入力として使用される名前空間で修飾された引数を格納します。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、`xsl:output`要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されたオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 変換を実行中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "指定された入力ドキュメントを使用して、変換を実行、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクトし、結果を<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>出力 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>追加の実行時引数を提供し、 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決<xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;></xref>関数。"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "変換するドキュメントを指定、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>オブジェクト。"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "引数リストも<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref>です。"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。       スタイル シートが含まれている場合、 <xref uid=&quot;langword_csharp_xsl:output&quot; name=&quot;xsl:output&quot; href=&quot;&quot;> </xref>要素を作成する必要がある、<xref:System.Xml.XmlWriter>を使用して、<xref:System.Xml.XmlWriterSettings>から返されるオブジェクト、<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>プロパティ</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*></xref:System.Xml.XmlWriterSettings></xref:System.Xml.XmlWriter>。 これにより、<xref:System.Xml.XmlWriter>は正しい出力設定があります</xref:System.Xml.XmlWriter>。"
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用<xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;></xref>関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;> </xref>関数は解決されません。"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Xsl.XsltException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltException
  nameWithType: XsltException
  fullName: System.Xml.Xsl.XsltException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
- uid: System.CodeDom.Compiler.CompilerErrorCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerErrorCollection
  nameWithType: CompilerErrorCollection
  fullName: System.CodeDom.Compiler.CompilerErrorCollection
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XsltSettings
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
- uid: System.Xml.XmlWriterSettings
  parent: System.Xml
  isExternal: true
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings
  fullName: System.Xml.XmlWriterSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform.XslCompiledTransform
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType
  nameWithType: XslCompiledTransform.CompileToType
- uid: System.Xml.Xsl.XslCompiledTransform.Load*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load
  nameWithType: XslCompiledTransform.Load
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
- uid: System.Xml.Xsl.XslCompiledTransform.Transform*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform
  nameWithType: XslCompiledTransform.Transform
