### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.ObjRef
  id: ObjRef
  children:
  - System.Runtime.Remoting.ObjRef.#ctor
  - System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  - System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.ChannelInfo
  - System.Runtime.Remoting.ObjRef.EnvoyInfo
  - System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  - System.Runtime.Remoting.ObjRef.IsFromThisProcess
  - System.Runtime.Remoting.ObjRef.TypeInfo
  - System.Runtime.Remoting.ObjRef.URI
  langs:
  - csharp
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
  type: Class
  summary: "リモート オブジェクトと通信するためにプロキシを生成するために必要なすべての関連情報を格納します。"
  remarks: "拡張するオブジェクトのシリアル化可能な表現である、ObjRef <xref:System.MarshalByRefObject>(MBR).</xref:System.MarshalByRefObject> 間でのオブジェクト参照を転送する、ObjRef が使用される、<xref:System.AppDomain>境界</xref:System.AppDomain>。 オブジェクトの ObjRef の作成は、マーシャ リングと呼ばれます。 ObjRef を作成することができます (マーシャ リング、 <xref:System.MarshalByRefObject>) するか、明示的に MBR を登録することによってオブジェクトをリモート処理インフラストラクチャ (を参照してください<xref:System.Runtime.Remoting.RemotingConfiguration>と<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName>)、またはリモート オブジェクトを呼び出すときは、パラメーターとして MBR オブジェクトを渡すことによって、暗黙的にします</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName></xref:System.Runtime.Remoting.RemotingConfiguration></xref:System.MarshalByRefObject>。 リモート処理オブジェクトを使用して ObjRef の保存し、に関するすべての関連情報を送信、<xref:System.MarshalByRefObject>リモートされています</xref:System.MarshalByRefObject>。       ObjRef には説明する情報が含まれています、<xref:System.Type>と、オブジェクトのクラスのマーシャ リングされる、正確な場所、および通信に関連する方法については、オブジェクトが配置されているリモート処理の下位区分に到達する</xref:System.Type>。       クラスの実装後に<xref:System.MarshalByRefObject>はマーシャ リングすると、それを表す ObjRef がチャネルを経由に転送別のプロセスやコンピューターにある別のアプリケーション ドメイン</xref:System.MarshalByRefObject>。 ObjRef が逆シリアル化 (を参照してください[XML および SOAP シリアル化](~/add/includes/ajax-current-ext-md.md)) 対象のアプリケーション ドメインでは解析結果は、リモートの MBR オブジェクトの透過的なプロキシを作成します。 この操作は、マーシャ リング解除と呼ばれます。       透過プロキシは、クライアントの領域に、実際のオブジェクトが格納されている奥行を提供するオブジェクトです。 これで、リモート処理インフラストラクチャを使用して実際のオブジェクトへの呼び出しを転送することによって、これを実現します。 透過的なプロキシ型<xref:System.Runtime.Remoting.Proxies.RealProxy>。</xref:System.Runtime.Remoting.Proxies.RealProxy>のマネージ ランタイム クラスのインスタンスによって自体は <xref:System.Runtime.Remoting.Proxies.RealProxy>透過プロキシから、操作を転送するために必要な機能の一部を実装します</xref:System.Runtime.Remoting.Proxies.RealProxy>。       プロキシ オブジェクトは<xref:System.AppDomain>。</xref:System.AppDomain>は関係なく使用できます。 アプリケーションでは、プロキシの参照とオブジェクト参照が区別する必要があります。 ただし、サービス プロバイダーがアクティブ化などの問題を処理する、有効期間の管理、およびトランザクション行う必要がこのような区別します。       このクラスは、リンク確認要求し、クラス レベルの継承確認要求を使用します。 A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに、インフラストラクチャのアクセス許可があるない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、「[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。"
  example:
  - "The following code example demonstrates the use of a custom ObjRef. To view the activation code that tests the custom ObjRef, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> method.  \n  \n [!code-cs[CreateObjRef2#1](~/add/codesnippet/csharp/t-system.runtime.remotin_10_1.cs)]\n [!code-vb[CreateObjRef2#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_10_1.vb)]\n [!code-cpp[CreateObjRef2#1](~/add/codesnippet/cpp/t-system.runtime.remotin_10_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class ObjRef : System.Runtime.Serialization.IObjectReference, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IObjectReference
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>既定値を持つクラス。"
  syntax:
    content: public ObjRef ();
    parameters: []
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  id: '#ctor(System.MarshalByRefObject,System.Type)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>クラス、指定した参照<xref href=&quot;System.MarshalByRefObject&quot;></xref>指定<xref:System.Type></xref:System.Type>。"
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/6f2b5e71-8a5c-4754-afa3-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/6f2b5e71-8a5c-4754-afa3-_1.cpp)]
  syntax:
    content: public ObjRef (MarshalByRefObject o, Type requestedType);
    parameters:
    - id: o
      type: System.MarshalByRefObject
      description: "オブジェクトを新しい<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスを参照します。"
    - id: requestedType
      type: System.Type
      description: "<xref:System.Type>のオブジェクトを新しい<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスを参照します</xref:System.Type>。"
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>シリアル化されたデータからのクラスです。"
  remarks: "このコンス トラクターは、ストリームで送信された例外オブジェクトを再構成する逆シリアル化中に呼び出されます。 詳細については、 <xref:System.Runtime.Serialization.ISerializable>。</xref:System.Runtime.Serialization.ISerializable>を参照してください。"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/350cf75f-e9f3-40d2-ab87-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/350cf75f-e9f3-40d2-ab87-_1.cpp)]
  syntax:
    content: protected ObjRef (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データを保持するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは例外の転送先に関する文脈情報。"
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  id: ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "取得または設定、 <xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;> </xref>の<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>です。"
  remarks: "現在のプロパティは、プロセスでは、アクティブなチャネルから提供された情報を保持しているときに、<xref:System.Runtime.Remoting.ObjRef>が作成される (を参照してください<xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>のマーシャ リングに関する詳細について).</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> </xref:System.Runtime.Remoting.ObjRef> この情報は、現在のインスタンスによって表されるオブジェクトと通信するトランスポート シンクを作成するかどうかを決定する他のプロセスやアプリケーション ドメイン内のチャネルで使用できます。"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_106_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_106_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IChannelInfo ChannelInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IChannelInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;> </xref>ためのインターフェイス、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>です。"
  overload: System.Runtime.Remoting.ObjRef.ChannelInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  id: EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "取得または設定、 <xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;> </xref>の<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>です。"
  remarks: "現在のプロパティには、シリアル化されたオブジェクトを表すためのプロキシが作成されるときに再生成を取得するメッセージ シンクのチェーンが含まれています。 これは使用<xref:System.Runtime.Remoting.Contexts.Context>バインドされたオブジェクトがのみ、型し、トランザクションなどのランタイム サービスを提供するオブジェクトのグループを表します</xref:System.Runtime.Remoting.Contexts.Context>。"
  syntax:
    content: public virtual System.Runtime.Remoting.IEnvoyInfo EnvoyInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IEnvoyInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;> </xref>ためのインターフェイス、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>です。"
  overload: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "指定した設定<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 、現在のシリアル化に必要なデータと<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスです。"
  remarks: "現在のメソッド、提供された塗りつぶします<xref:System.Runtime.Serialization.SerializationInfo><xref:System.Runtime.Remoting.ObjRef>。</xref:System.Runtime.Remoting.ObjRef>を再作成に必要なすべてのデータ</xref:System.Runtime.Serialization.SerializationInfo>       現在のメソッドが<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>の実装"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/088e4c86-d393-401b-857d-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/088e4c86-d393-401b-857d-_1.cpp)]
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたはシリアル化の転送先に関する文脈情報。"
  overload: System.Runtime.Remoting.ObjRef.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直前の呼び出し元には、シリアル化フォーマッタのアクセス許可がありません。"
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  id: GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "リモート オブジェクトへの参照を返します、 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>について説明します。"
  remarks: "現在のメソッドは、逆シリアル化のフィックス アップ ステージ中に呼び出されます。"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/37d6be7e-83fc-46ca-8f58-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/37d6be7e-83fc-46ca-8f58-_1.cpp)]
  syntax:
    content: public virtual object GetRealObject (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "現在のオブジェクトが存在するコンテキスト。"
    return:
      type: System.Object
      description: "リモートへの参照がオブジェクトを<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>について説明します。"
  overload: System.Runtime.Remoting.ObjRef.GetRealObject*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "直前の呼び出し元には、シリアル化フォーマッタのアクセス許可がありません。"
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  id: IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "示すブール値を返すかどうか、現在<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスが現在の配置されたオブジェクトを参照<xref href=&quot;System.AppDomain&quot;></xref>です。"
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_86_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_86_1.cpp)]
  syntax:
    content: public bool IsFromThisAppDomain ();
    parameters: []
    return:
      type: System.Boolean
      description: "ブール値を示すかどうか、現在<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスが現在の配置されたオブジェクトを参照<xref href=&quot;System.AppDomain&quot;></xref>です。"
  overload: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  id: IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "示すブール値を返すかどうか、現在<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスが現在のプロセス内にあるオブジェクトを参照します。"
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_53_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_53_1.cpp)]
  syntax:
    content: public bool IsFromThisProcess ();
    parameters: []
    return:
      type: System.Boolean
      description: "ブール値を示すかどうか、現在<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>インスタンスが現在のプロセス内にあるオブジェクトを参照します。"
  overload: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  id: TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "取得または設定、 <xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;> </xref>オブジェクトを<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>について説明します。"
  remarks: "TypeInfo には、現在<xref:System.Runtime.Remoting.ObjRef>。</xref:System.Runtime.Remoting.ObjRef>によって表されるリモート オブジェクトの種類に関する詳細情報が含まれています。 現在のプロパティには、型階層だけでなく、型が実装するインターフェイスの一覧が含まれています。 この情報は、クライアントのリモート オブジェクトの種類の表示を調整する段階的に、プロキシの調整に使用可能性があります。"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_18_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_18_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IRemotingTypeInfo TypeInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IRemotingTypeInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;> </xref>オブジェクトを<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>について説明します。"
  overload: System.Runtime.Remoting.ObjRef.TypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.URI
  id: URI
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "取得または特定のオブジェクト インスタンスの URI を設定します。"
  remarks: "URI は、特定のオブジェクト インスタンスを一意に識別します。"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_8_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_8_1.cpp)]
  syntax:
    content: public virtual string URI { get; set; }
    return:
      type: System.String
      description: "特定のオブジェクト インスタンスの URI。"
  overload: System.Runtime.Remoting.ObjRef.URI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.ObjRef.#ctor
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.IChannelInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IChannelInfo
  nameWithType: IChannelInfo
  fullName: System.Runtime.Remoting.IChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.IEnvoyInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IEnvoyInfo
  nameWithType: IEnvoyInfo
  fullName: System.Runtime.Remoting.IEnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
- uid: System.Runtime.Remoting.IRemotingTypeInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IRemotingTypeInfo
  nameWithType: IRemotingTypeInfo
  fullName: System.Runtime.Remoting.IRemotingTypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.ObjRef.#ctor*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef.ObjRef
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData
  nameWithType: ObjRef.GetObjectData
- uid: System.Runtime.Remoting.ObjRef.GetRealObject*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject
  nameWithType: ObjRef.GetRealObject
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain
  nameWithType: ObjRef.IsFromThisAppDomain
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess
  nameWithType: ObjRef.IsFromThisProcess
- uid: System.Runtime.Remoting.ObjRef.TypeInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
