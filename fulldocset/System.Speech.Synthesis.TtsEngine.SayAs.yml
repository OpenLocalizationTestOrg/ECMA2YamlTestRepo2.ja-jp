### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.SayAs
  id: SayAs
  children:
  - System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  - System.Speech.Synthesis.TtsEngine.SayAs.Detail
  - System.Speech.Synthesis.TtsEngine.SayAs.Format
  - System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  langs:
  - csharp
  name: SayAs
  nameWithType: SayAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs
  type: Class
  summary: "テキスト ファイルを再生する方法を決定する (通貨、日付、またはアドレス) などのコンテンツの種類や言語構成要素について説明します。"
  syntax:
    content: public class SayAs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  id: '#ctor'
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "新しいインスタンスを作成、`SayAs`クラスです。"
  remarks: "プロパティ、<xref:System.Speech.Synthesis.TtsEngine.SayAs>の属性の値を取得または設定クラスを使用、 `say-as` SSML マークアップ内の要素</xref:System.Speech.Synthesis.TtsEngine.SayAs>。 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>プロパティは、 <xref:System.Speech.Synthesis.TtsEngine.SayAs> <xref:System.Speech.Synthesis.SpeechSynthesizer> <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> <xref:System.Speech.Synthesis.TtsEngine.TextFragment>。</xref:System.Speech.Synthesis.TtsEngine.TextFragment>プロパティ</xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>に含まれるテキストを読み上げる方法</xref:System.Speech.Synthesis.SpeechSynthesizer>を通知するためにインスタンス</xref:System.Speech.Synthesis.TtsEngine.SayAs>を使用</xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>する"
  syntax:
    content: public SayAs ();
    parameters: []
  overload: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  id: Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得または設定の値、`detail`属性を`say-as`プロンプトの SSML マークアップ言語内の要素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>プロパティを取得または設定の詳細プロパティの値、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス</xref:System.Speech.Synthesis.TtsEngine.SayAs></xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>。"
  syntax:
    content: public string Detail { get; set; }
    return:
      type: System.String
      description: "追加します。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  id: Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得または設定の値、`format`属性を`say-as`プロンプトの SSML マークアップ言語内の要素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>プロパティを取得またはで書式設定プロパティの値の設定、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス</xref:System.Speech.Synthesis.TtsEngine.SayAs></xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>。       たとえば、プロンプトが語句を含む可能性があります&quot;、時刻は`<say-as interpret-as=”time”> 05:00 </say-as>`&quot;です。  この例では`05:00`「5 時」または&quot;5 AM&quot;ように読み上げられます可能性がありますか&quot;$embedded$&500;&quot;です。 Format プロパティの値を使用する、`interpret-as`拡張を読み上げるためにどの時間形式を指定する属性。 場合の値、`interpret-as`属性は、「時間:&24; 時間」、<xref:System.Speech.Synthesis.SpeechSynthesizer>話す&quot;$embedded$&500;&quot;.</xref:System.Speech.Synthesis.SpeechSynthesizer> 場合の値、`interpret-as`属性が「時:&12; 時間」、 <xref:System.Speech.Synthesis.SpeechSynthesizer>「5 M A」を話します</xref:System.Speech.Synthesis.SpeechSynthesizer>。"
  syntax:
    content: public string Format { get; set; }
    return:
      type: System.String
      description: "追加します。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  id: InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  langs:
  - csharp
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "取得または設定の値、`interpret-as`属性を`say-as`プロンプトの SSML マークアップ言語内の要素。"
  remarks: "<xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>プロパティを取得またはで InterpretAs プロパティの値の設定、<xref:System.Speech.Synthesis.TtsEngine.SayAs>インスタンス</xref:System.Speech.Synthesis.TtsEngine.SayAs></xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName>。       <xref:System.Speech.Synthesis.SpeechSynthesizer>InterpretAs プロパティによって示されるコンテンツの種類を使用して、指定したテキストを表示する方法を決定します</xref:System.Speech.Synthesis.SpeechSynthesizer>。       いえばでした名として読み上げる名など:&quot;My name is といえば&quot;です。 指定されている、小文字からスペルでしたまたは、`interpret-as`この文に属性:&quot;自分の名前は`<say-as interpret-as=”spell-out”> Edgar </say-as>`&quot;。 ここで、 <xref:System.Speech.Synthesis.SpeechSynthesizer>&quot;E D G A R&quot;としてといえばを話します</xref:System.Speech.Synthesis.SpeechSynthesizer>。"
  syntax:
    content: public string InterpretAs { get; set; }
    return:
      type: System.String
      description: "追加します。"
  overload: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs()
  nameWithType: SayAs.SayAs()
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.SayAs()
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Detail
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: SayAs
  nameWithType: SayAs.SayAs
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Detail*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Detail
  nameWithType: SayAs.Detail
- uid: System.Speech.Synthesis.TtsEngine.SayAs.Format*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: Format
  nameWithType: SayAs.Format
- uid: System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs*
  parent: System.Speech.Synthesis.TtsEngine.SayAs
  isExternal: false
  name: InterpretAs
  nameWithType: SayAs.InterpretAs
