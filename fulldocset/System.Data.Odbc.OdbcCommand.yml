### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommand
  id: OdbcCommand
  children:
  - System.Data.Odbc.OdbcCommand.#ctor
  - System.Data.Odbc.OdbcCommand.#ctor(System.String)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  - System.Data.Odbc.OdbcCommand.Cancel
  - System.Data.Odbc.OdbcCommand.CommandText
  - System.Data.Odbc.OdbcCommand.CommandTimeout
  - System.Data.Odbc.OdbcCommand.CommandType
  - System.Data.Odbc.OdbcCommand.Connection
  - System.Data.Odbc.OdbcCommand.CreateDbParameter
  - System.Data.Odbc.OdbcCommand.CreateParameter
  - System.Data.Odbc.OdbcCommand.DbConnection
  - System.Data.Odbc.OdbcCommand.DbParameterCollection
  - System.Data.Odbc.OdbcCommand.DbTransaction
  - System.Data.Odbc.OdbcCommand.DesignTimeVisible
  - System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  - System.Data.Odbc.OdbcCommand.ExecuteReader
  - System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteScalar
  - System.Data.Odbc.OdbcCommand.Parameters
  - System.Data.Odbc.OdbcCommand.Prepare
  - System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  - System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  - System.Data.Odbc.OdbcCommand.Transaction
  - System.Data.Odbc.OdbcCommand.UpdatedRowSource
  langs:
  - csharp
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
  type: Class
  summary: "SQL ステートメントまたはデータ ソースに対して実行するストアド プロシージャを表します。 このクラスは継承できません。"
  remarks: "OdbcCommand クラスは、データ ソースに対してコマンドを実行するための次のメソッドを提供します |。項目 |説明 |  |----------|-----------------|  |<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|行を返すコマンドを実行します |。  |<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|SQL の INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します |。  |<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|データベースから単一の値、たとえば、集計値を取得します |。      リセットすることができます、<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>プロパティと OdbcCommand オブジェクトを再利用します</xref:System.Data.Odbc.OdbcCommand.CommandText%2A></xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A></xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A></xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>。 ただし、閉じる必要があります、<xref:System.Data.Odbc.OdbcDataReader>新しいまたは前のコマンドを実行する前にします</xref:System.Data.Odbc.OdbcDataReader>。       コマンドの実行によって致命的なエラーが生じた場合<xref:System.Data.Odbc.OdbcException>20 以上の SQL Server の重大度レベルなど<xref:System.Data.Odbc.OdbcConnection>閉じることがあります</xref:System.Data.Odbc.OdbcConnection></xref:System.Data.Odbc.OdbcException>。 ただし、ユーザーことができます、接続を再び開き、続行します。"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  \n  \n [!code-cs[Classic WebData OdbcCommand#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_0_1.cs)]\n [!code-vb[Classic WebData OdbcCommand#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>クラスです。"
  remarks: "基本コンス トラクターは、すべてのフィールドを既定値を初期化します。 次の表は、 <xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| 空の文字列 (&quot;&quot;) |  |<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  |<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|</xref:System.Data.Odbc.OdbcCommand.Connection%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>クエリのテキストを持つクラス。"
  syntax:
    content: public OdbcCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>クエリのテキストを持つクラスと<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>オブジェクト。"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>をデータ ソースへの接続を表すオブジェクト。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 、クエリのテキストを持つクラス、 <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>オブジェクト、および<xref:System.Data.Odbc.OdbcCommand.Transaction*>.</xref:System.Data.Odbc.OdbcCommand.Transaction*>"
  remarks: "次の表は、 <xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>のこの実装のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  |<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|値である新しい<xref:System.Data.Odbc.OdbcConnection>、`connection`パラメーターです |。      これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します</xref:System.Data.Odbc.OdbcConnection></xref:System.Data.Odbc.OdbcCommand.Connection%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.CommandText%2A>。"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>をデータ ソースへの接続を表すオブジェクト。"
    - id: transaction
      type: System.Data.Odbc.OdbcTransaction
      description: "これで、トランザクション、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>を実行します。"
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Cancel
  id: Cancel
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "実行をキャンセルしようとする、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>です。"
  remarks: "[キャンセル] を何も行われませんが、何が発生します。 ただし、プロセスでは、コマンドがあるし、キャンセルが失敗して、例外は生成されません。       1 つのスレッドでのクエリを取り消すには、[キャンセル] を別のスレッドから呼び出す必要があります。 使用した非同期のコマンドを実行することはできませんので<xref:System.Data.Odbc.OdbcCommand>、別のスレッドからコマンドを取り消す&1; つのスレッドを同期的に実行する必要があります</xref:System.Data.Odbc.OdbcCommand>。 つまり、<xref:System.Data.Odbc.OdbcCommand>オブジェクトは、両方のスレッドからアクセス可能である必要があります</xref:System.Data.Odbc.OdbcCommand>。"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandText
  id: CommandText
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または SQL ステートメントまたはデータ ソースに対して実行するストアド プロシージャを設定します。"
  remarks: "ときに、<xref:System.Data.IDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、標準 ODBC ストアド プロシージャのエスケープ シーケンスを使用して、CommandText プロパティを設定する必要があります</xref:System.Data.IDbCommand.CommandType%2A>。 ストアド プロシージャの名前に、CommandText を設定しても、同様に、他の .NET Framework データ プロバイダーは機能しません。       外部結合およびスカラー関数の呼び出しなど、多くの言語機能は、一般に、データ ソースによって実装されます。 これらの機能の構文でもは、一般にデータ ソースに固有です。 そのため、ODBC が次の言語機能の標準構文を含むエスケープ シーケンスを定義します: 数値などの日付、時刻、タイムスタンプ、および datetime 間隔のリテラルのスカラー関数、文字列、およびデータ型変換関数では、ODBC で使用されるエスケープ シーケンスは次のように、エスケープ文字の外部結合のプロシージャ呼び出しの述語と同様に:```   {extension}   ```このエスケープ シーケンスが認識され、ODBC ドライバーによって解析します。 それらは、データ ソースに固有の文法でエスケープ シーケンスを置き換えます。       プロシージャは、データ ソースに格納されている実行可能なオブジェクトです。 これは通常、プリコンパイルされた&1; つまたは複数の SQL ステートメントです。 プロシージャ呼び出しのためのエスケープ シーケンスは```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ```場所`procedure-name`プロシージャの名前を指定および`parameter`プロシージャのパラメーターを指定します。       コマンドでは、Execute メソッドの&1; つを呼び出すときにこのストアド プロシージャが実行される (たとえば、<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>または<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       設定することはできません、 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>、<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>と現在の接続が実行または fetch 操作を実行している場合に、CommandText プロパティ</xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.Connection%2A>。       ODBC.NET プロバイダーが SQL ステートメントまたは呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、<xref:System.Data.Odbc.OdbcCommand>とき<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>に設定されている`Text`</xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand>。 この場合、疑問符 (?) プレース ホルダーを使用する必要があります。 例:```   SELECT * FROM Customers WHERE CustomerID = ?   ```そのため、順序<xref:System.Data.Odbc.OdbcParameter>オブジェクトに追加されます、<xref:System.Data.Odbc.OdbcParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.Odbc.OdbcParameterCollection></xref:System.Data.Odbc.OdbcParameter>。       パラメーターに null 値が含まれている場合、.NET Framework Data Provider for ODBC も、そのパラメーターをバインドが、SQL_DEFAULT_PARAM を使用して、null 値ではなく&1; つ定義されている場合、既定のパラメーターを使用します。 たとえば、 <xref:System.Data.Odbc.OdbcParameterCollection> ```   {1, null, 2}   ``` CommandText プロパティに渡される:```   {call sp(?, ?, ?)}   ```原因は、最初のパラメーター値を 1 に、値 2、3 番目のパラメーターと SQL_DEFAULT_PARAM として 2 番目のパラメーター バインド ODBC の .NET Framework Data Provider。</xref:System.Data.Odbc.OdbcParameterCollection> 。 ただし、この動作は、ドライバーによって異なります。 ドライバーがこの機能をサポートしていない場合だけを渡さないでください値のパラメーターです。 たとえば、使用して、 <xref:System.Data.Odbc.OdbcParameterCollection>:```   {1, 2}   ```し、次に、CommandText プロパティを設定: ```   {call sp(?, null, ?)}   ```       >  [!NOTE] > パラメーターを省略すると、その他のパラメーターを区切るコンマが必要があります</xref:System.Data.Odbc.OdbcParameterCollection>。 パラメーターまたは入出力パラメーターを省略した場合、プロシージャは、パラメーターの既定値を使用します。 長さ/インジケーター バッファーの値を設定するパラメーターまたは入出力パラメーターの既定値を指定する別の方法は、SQL_DEFAULT_PARAM をパラメーターにバインドします。"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL ステートメントまたはストアド プロシージャを実行します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Data.Odbc.OdbcCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得またはコマンドを実行する試行を終了し、エラーを生成するまでの待機時間を設定します。"
  remarks: "値がゼロ (0) の指定、待機時間ではなく、待機時間を制限していないため、避ける必要があります。"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "コマンドの実行を待機する秒単位の時間。 既定は 30 秒です。"
  overload: System.Data.Odbc.OdbcCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandType
  id: CommandType
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定を示す値が、どのように<xref:System.Data.Odbc.OdbcCommand.CommandText*>プロパティが解釈されます</xref:System.Data.Odbc.OdbcCommand.CommandText*>。"
  remarks: "CommandType プロパティに設定するときに`StoredProcedure`、設定する必要があります、<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>プロパティをすべての ODBC call 構文</xref:System.Data.Odbc.OdbcCommand.CommandText%2A>。 コマンドは、Execute メソッドの&1; つを呼び出すときに、このストアド プロシージャを実行 (たとえば、<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>または<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       <xref:System.Data.Odbc.OdbcCommand.Connection%2A>、CommandType と<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>、現在の接続が実行または fetch 操作を実行している場合、プロパティを設定することはできません</xref:System.Data.Odbc.OdbcCommand.CommandText%2A></xref:System.Data.Odbc.OdbcCommand.Connection%2A>。       名前付きの引き渡しは、.NET Framework Data Provider for ODBC でサポートされません<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>によって呼び出されるストアド プロシージャを SQL ステートメントにパラメーター いずれのケースでは、疑問符 (?) プレース ホルダーを使用します。 例:```   SELECT * FROM Customers WHERE CustomerID = ?   ```順序<xref:System.Data.Odbc.OdbcParameter>オブジェクトに追加されます、<xref:System.Data.Odbc.OdbcParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.Odbc.OdbcParameterCollection></xref:System.Data.Odbc.OdbcParameter>。      > [!NOTE] > .NET Framework Data Provider for ODBC がサポートしていません、<xref:System.Data.CommandType>設定`TableDirect`</xref:System.Data.CommandType>。"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "1 つ、 <xref href=&quot;System.Data.CommandType&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "値が有効ないなかった<xref href=&quot;System.Data.CommandType&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Connection
  id: Connection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、 <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>のこのインスタンスによって使用される、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>です。"
  remarks: "接続を設定することはできません<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>、および<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます</xref:System.Data.Odbc.OdbcCommand.CommandText%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A>。       トランザクションが進行中は、接続を設定する場合、<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>プロパティが null でない、<xref:System.InvalidOperationException>が生成されます</xref:System.InvalidOperationException></xref:System.Data.Odbc.OdbcCommand.Transaction%2A>。 トランザクションがコミットまたはロールバックされた後、接続を設定した場合、<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>プロパティが null でない、<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>プロパティが null 値に設定し、</xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 。"
  syntax:
    content: public System.Data.Odbc.OdbcConnection Connection { get; set; }
    return:
      type: System.Data.Odbc.OdbcConnection
      description: "データ ソースに接続します。 既定値は、null 値です。"
  overload: System.Data.Odbc.OdbcCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "トランザクションの処理中に、接続プロパティが変更されました。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>オブジェクト。"
  remarks: "CreateParameter メソッドは、厳密に型指定されたバージョンの<xref:System.Data.IDbCommand.CreateParameter%2A>。</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcParameter
      description: "<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>オブジェクト。"
  overload: System.Data.Odbc.OdbcCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  id: DbConnection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または、コマンド オブジェクトをカスタマイズしたインターフェイスのコントロールに表示するかどうかを示す値を設定します。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: '**true**コマンド オブジェクトは、それ以外のコントロールに表示されている必要がある場合、 **false**です。 既定値は**true**です。'
  overload: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "追加します。"
    return:
      type: System.Data.Common.DbDataReader
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "に対して SQL ステートメントを実行、<xref:System.Data.Odbc.OdbcCommand.Connection*>影響を受ける行の数を返します</xref:System.Data.Odbc.OdbcCommand.Connection*>。"
  remarks: "たとえば、データベースの構造のクエリを実行する (テーブルなどのデータベース オブジェクトを作成する); カタログ操作を実行するのに ExecuteNonQuery を使用することができます。使用せず、データベース内のデータを変更したり、<xref:System.Data.DataSet>で実行する、更新、挿入、または DELETE ステートメント</xref:System.Data.DataSet>。       また、基になる ODBC ドライバーは、この機能をサポートしている場合は、複数の SQL ステートメントを実行するのに ExecuteNonQuery を使用することができます。 この場合、戻り値は、コマンドのすべてのステートメントによって影響を受ける行の数       ExecuteNonQuery に行が返されなかったが、出力パラメーターまたは戻り値のパラメーターにマップ データが挿入されます。       UPDATE、INSERT、および DELETE ステートメントでは、戻り値は、コマンドによって影響を受ける行の数です。 その他のすべての種類のステートメントは、戻り値は-1 です。 ロールバックが発生した場合、戻り値も-1 にです。       トリガーが存在する場合にテーブルとデータは追加またはテーブルで変更されるは、戻り値には、insert または update 操作とトリガーの影響を受ける行の数の両方の影響を受ける行の数が含まれています。"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "UPDATE、INSERT、および DELETE ステートメントでは、戻り値は、コマンドによって影響を受ける行の数です。 その他のすべての種類のステートメントは、戻り値は-1 です。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続が存在しません。       または、接続が開かれていません。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "送信、 <> </> *> を<> *> をビルドし、 <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;></xref>です。"
  remarks: "設定する必要があります、<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>プロパティをストアド プロシージャの完全な ODBC 呼び出し構文</xref:System.Data.Odbc.OdbcCommand.CommandText%2A>。 コマンドは、ExecuteReader を呼び出すときに、このストアド プロシージャを実行します。       中に、<xref:System.Data.Odbc.OdbcDataReader>を使用する<xref:System.Data.Odbc.OdbcConnection><xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>を処理中は、</xref:System.Data.Odbc.OdbcConnection>関連付けられている</xref:System.Data.Odbc.OdbcDataReader> この状態で他の操作はありません<xref:System.Data.Odbc.OdbcConnection>それを閉じる以外</xref:System.Data.Odbc.OdbcConnection> これは、まで続きます、<xref:System.Data.Odbc.OdbcDataReader.Close%2A>のメソッド、<xref:System.Data.Odbc.OdbcDataReader>と呼びます</xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.Odbc.OdbcDataReader.Close%2A>。"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>オブジェクト。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "送信、 <> </> *> を<> *>、およびビルド、 <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>のいずれかを使用して、 <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref>値。"
  remarks: "指定する&1; つの行のみを返す SQL ステートメントの場合、`SingleRow`として、<xref:System.Data.CommandBehavior>値は、アプリケーションのパフォーマンスを向上させることがあります</xref:System.Data.CommandBehavior>。       設定する必要があります、<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>プロパティをストアド プロシージャの完全な ODBC 呼び出し構文</xref:System.Data.Odbc.OdbcCommand.CommandText%2A>。 コマンドは、 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>。</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>を呼び出すときにこのストアド プロシージャを実行します。       <xref:System.Data.Odbc.OdbcDataReader>を効率的に読み込まれる大きなバイナリ値を有効にする、特殊なモードをサポートしています</xref:System.Data.Odbc.OdbcDataReader>。 詳細については、次を参照してください、 `SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>の設定。      > [!NOTE] >、`SequentialAccess`の値<xref:System.Data.CommandBehavior>いない制限の対象は、設定、単に意味するがアクセスできるようには、少なくともシーケンシャル<xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.CommandBehavior>。 SQL Server ODBC Driver を使用する場合など、`SequentialAccess`モードでは、まだに移動できますの最初の列、<xref:System.Data.Odbc.OdbcDataReader>順番に他のすべての列を参照した後に行</xref:System.Data.Odbc.OdbcDataReader>。       中に、<xref:System.Data.Odbc.OdbcDataReader>を使用する<xref:System.Data.Odbc.OdbcConnection><xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>を処理中は、</xref:System.Data.Odbc.OdbcConnection>関連付けられている</xref:System.Data.Odbc.OdbcDataReader> この状態で他の操作はありません<xref:System.Data.Odbc.OdbcConnection>それを閉じる以外</xref:System.Data.Odbc.OdbcConnection> 呼び出されるまで、そうでは、<xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName>メソッド</xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName>。 場合、<xref:System.Data.Odbc.OdbcDataReader>で作成された<xref:System.Data.CommandBehavior>&quot;éý&quot;`CloseConnection`を閉じて、<xref:System.Data.Odbc.OdbcDataReader>接続を自動的に閉じます</xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.CommandBehavior></xref:System.Data.Odbc.OdbcDataReader>。"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "1 つ、 <xref uid=&quot;langword_csharp_System.Data.CommandBehavior&quot; name=&quot;System.Data.CommandBehavior&quot; href=&quot;&quot;> </xref>値。"
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>オブジェクト。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "クエリを実行し、クエリによって返される結果セットの最初の行の最初の列を返します。 追加の列または行は無視されます。"
  remarks: "ExecuteScalar メソッドを使用すると、データ ソースから単一の値 (たとえば、集計値) を取得できます。 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> <xref:System.Data.Odbc.OdbcDataReader>。</xref:System.Data.Odbc.OdbcDataReader>によって返されるデータから単一の値を生成するために必要なメソッド、および操作を実行し、</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>使用するよりも少ないコードが必要です。"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "結果の最初の行の最初の列は、次の設定、または null 参照場合、結果セットは空にします。"
  overload: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Parameters
  id: Parameters
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets the <xref href=&quot;System.Data.Odbc.OdbcParameterCollection&quot;></xref>."
  remarks: "ときに<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>に設定されている`Text`、名前付きの引き渡しは、.NET Framework Data Provider for ODBC でサポートされません<xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>によって呼び出されるストアド プロシージャを SQL ステートメントにパラメーター</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> いずれのケースでは、疑問符 (?) プレース ホルダーを使用します。 例:```   SELECT * FROM Customers WHERE CustomerID = ?   ```順序<xref:System.Data.Odbc.OdbcParameter>オブジェクトに追加されます、<xref:System.Data.Odbc.OdbcParameterCollection>コマンド テキスト内のパラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.Odbc.OdbcParameterCollection></xref:System.Data.Odbc.OdbcParameter>。      > [!NOTE] > コレクション内のパラメーターが実行されるクエリの要件が一致しない場合、エラーが発生します。"
  syntax:
    content: public System.Data.Odbc.OdbcParameterCollection Parameters { get; }
    return:
      type: System.Data.Odbc.OdbcParameterCollection
      description: "SQL ステートメントまたはストアド プロシージャのパラメーターです。 既定では、空のコレクションです。"
  overload: System.Data.Odbc.OdbcCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Prepare
  id: Prepare
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "データ ソースにコマンドの準備またはコンパイル済みのバージョンを作成します。"
  remarks: "Prepare メソッドを呼び出す ODBC`SQLPrepare`関数。 データ ソースの基になる ODBC ドライバーの機能、によってステートメントが準備された、すべてのパラメーターがバインドされている場合、またはすべてのパラメーターがバインドされていない場合に実行されるときにデータ型などのパラメーター情報をチェックする可能性があります。 相互運用性を最大にするため、アプリケーションが同じ<xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>新しい SQL ステートメントを準備する前に、以前の SQL ステートメントに適用されるすべてのパラメーターを解除します。 これにより、新しい SQL ステートメントに適用される前のパラメーター情報によって引き起こされるエラーです。       メソッドの呼び出し後に準備する、任意のパラメーター値がで指定された値より大きい、Execute を呼び出した場合、<xref:System.Data.Odbc.OdbcParameter.Size%2A>プロパティは、パラメーターの指定した元のサイズを自動的に切り捨てられます、切り捨てエラーは返されません</xref:System.Data.Odbc.OdbcParameter.Size%2A>。       出力では、(準備またはない) かどうかをパラメーター ユーザー指定のデータ型である必要があります。 可変長データ型を指定する場合は、最大<xref:System.Data.Odbc.OdbcParameter.Size%2A>。</xref:System.Data.Odbc.OdbcParameter.Size%2A>をも指定する必要があります。"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> が設定されていません。      -or-       The <>*> is not <xref:System.Data.Odbc.OdbcConnection.Open*>.</xref:System.Data.Odbc.OdbcConnection.Open*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "リセット、<xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>プロパティを既定値にします</xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>。"
  remarks: "既定値、<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>は 30 秒です</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>。"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcCommand>にインスタンスをキャスト、<xref:InterfaceName>インターフェイス</xref:InterfaceName></xref:System.Data.Odbc.OdbcCommand>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しい[T です。System.Object](~/add/includes/ajax-current-ext-md.md)のこのインスタンスのコピーであります。"
  overload: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Transaction
  id: Transaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、 <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;> </xref>を<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>を実行します。"
  remarks: "場合は、既に特定の値に設定し、コマンドが実行中はトランザクションのプロパティを設定することはできません。 トランザクションのプロパティを設定する場合、<xref:System.Data.Odbc.OdbcTransaction>に同じ接続されていないオブジェクト<xref:System.Data.Odbc.OdbcConnection>として、<xref:System.Data.Odbc.OdbcCommand>オブジェクト、次回ステートメントを実行するときに、例外がスローされます</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcConnection></xref:System.Data.Odbc.OdbcTransaction>。"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction Transaction { get; set; }
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "An <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;></xref>. 既定値は、null 値です。"
  overload: System.Data.Odbc.OdbcCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定を指定する値、**更新**メソッドはコマンドの結果に適用する必要があります、 **DataRow**です。"
  remarks: "既定値<xref:System.Data.UpdateRowSource>値は**両方**コマンドは自動的に生成しない限りと同様、<xref:System.Data.Odbc.OdbcCommandBuilder>の場合、既定値は**None**</xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.UpdateRowSource> 。       UpdatedRowSource プロパティを使用する方法の詳細については、次を参照してください。 [DataAdapter パラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "1 つ、 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref>値。"
  overload: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommand.#ctor
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcCommand.Cancel
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
- uid: System.Data.Odbc.OdbcCommand.CommandText
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommand.CommandType
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
- uid: System.Data.Odbc.OdbcParameter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
- uid: System.Data.Odbc.OdbcDataReader
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcCommand.Parameters
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcParameterCollection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameterCollection
  nameWithType: OdbcParameterCollection
  fullName: System.Data.Odbc.OdbcParameterCollection
- uid: System.Data.Odbc.OdbcCommand.Prepare
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcCommand.Transaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Odbc.OdbcCommand.#ctor*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand.OdbcCommand
- uid: System.Data.Odbc.OdbcCommand.Cancel*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel
  nameWithType: OdbcCommand.Cancel
- uid: System.Data.Odbc.OdbcCommand.CommandText*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
- uid: System.Data.Odbc.OdbcCommand.CommandType*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OdbcCommand.CreateDbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OdbcCommand.CreateParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
- uid: System.Data.Odbc.OdbcCommand.Dispose*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose
  nameWithType: OdbcCommand.Dispose
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OdbcCommand.ExecuteDbDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OdbcCommand.ExecuteNonQuery
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OdbcCommand.ExecuteReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OdbcCommand.ExecuteScalar
- uid: System.Data.Odbc.OdbcCommand.Parameters*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcCommand.Prepare*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare
  nameWithType: OdbcCommand.Prepare
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OdbcCommand.ResetCommandTimeout
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcCommand.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcCommand.Transaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
