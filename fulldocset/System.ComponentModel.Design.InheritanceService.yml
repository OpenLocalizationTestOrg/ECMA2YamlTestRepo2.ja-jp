### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.InheritanceService
  id: InheritanceService
  children:
  - System.ComponentModel.Design.InheritanceService.#ctor
  - System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.InheritanceService.Dispose
  - System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)
  - System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)
  langs:
  - csharp
  name: InheritanceService
  nameWithType: InheritanceService
  fullName: System.ComponentModel.Design.InheritanceService
  type: Class
  summary: "継承コンポーネントを識別するためのメソッドのセットを提供します。"
  remarks: "継承コンポーネントを見つけてを無視する、どれを選択し、サービスによって追跡された各継承クラスの継承の属性を取得するのには、InheritanceService を使用できます。"
  syntax:
    content: 'public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.IInheritanceService
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: InheritanceService()
  nameWithType: InheritanceService.InheritanceService()
  fullName: System.ComponentModel.Design.InheritanceService.InheritanceService()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.InheritanceService&quot;> </xref>クラスです。"
  syntax:
    content: public InheritanceService ();
    parameters: []
  overload: System.ComponentModel.Design.InheritanceService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  id: AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: AddInheritedComponents(IComponent,IContainer)
  nameWithType: InheritanceService.AddInheritedComponents(IComponent,IContainer)
  fullName: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(IComponent,IContainer)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "指定されたコンポーネントによって継承コンポーネントを追加、 <xref href=&quot;System.ComponentModel.Design.InheritanceService&quot;></xref>です。"
  remarks: "このメソッドは、指定されたコンポーネントのすべての基底クラスのすべてのフィールドを検索します。 実装する各フィールド<xref:System.ComponentModel.IComponent>が、指定されたコンテナーに追加します</xref:System.ComponentModel.IComponent>。"
  syntax:
    content: public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "コンポーネントを検索するには、指定したコンテナーに追加するコンポーネントが継承されます。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "継承されたコンポーネントを追加するコンテナーです。"
  overload: System.ComponentModel.Design.InheritanceService.AddInheritedComponents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  id: AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: AddInheritedComponents(Type,IComponent,IContainer)
  nameWithType: InheritanceService.AddInheritedComponents(Type,IComponent,IContainer)
  fullName: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(Type,IComponent,IContainer)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "指定されたコンポーネントによって継承されている指定した型のコンポーネントを追加、 <xref href=&quot;System.ComponentModel.Design.InheritanceService&quot;></xref>です。"
  remarks: "このメソッドは、コンポーネントのすべての基底クラスのすべてのフィールドを検索します。 実装する各フィールド<xref:System.ComponentModel.IComponent>を格納する内部リストに追加されて、<xref:System.ComponentModel.InheritanceAttribute>コンポーネントの継承のレベルを識別します</xref:System.ComponentModel.InheritanceAttribute></xref:System.ComponentModel.IComponent>。 コンポーネントは、指定されたコンテナーには追加されます。"
  syntax:
    content: protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);
    parameters:
    - id: type
      type: System.Type
      description: "検索する基本データ型。"
    - id: component
      type: System.ComponentModel.IComponent
      description: "コンポーネントを検索するには、指定したコンテナーに追加するコンポーネントが継承されます。"
    - id: container
      type: System.ComponentModel.IContainer
      description: "継承されたコンポーネントを追加するコンテナーです。"
  overload: System.ComponentModel.Design.InheritanceService.AddInheritedComponents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: Dispose()
  nameWithType: InheritanceService.Dispose()
  fullName: System.ComponentModel.Design.InheritanceService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ComponentModel.Design.InheritanceService&quot;></xref>です。"
  remarks: "Dispose を呼び出すことによりで使用されるリソース、<xref:System.ComponentModel.Design.InheritanceService>を他の目的に再割り当てされます</xref:System.ComponentModel.Design.InheritanceService>。 Dispose の詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.InheritanceService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: InheritanceService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.InheritanceService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.ComponentModel.Design.InheritanceService&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose()`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.ComponentModel.Design.InheritanceService>参照。</xref:System.ComponentModel.Design.InheritanceService> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.ComponentModel.Design.InheritanceService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)
  id: GetInheritanceAttribute(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: GetInheritanceAttribute(IComponent)
  nameWithType: InheritanceService.GetInheritanceAttribute(IComponent)
  fullName: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "指定されたコンポーネントの継承の属性を取得します。"
  remarks: "コンポーネントが継承されない場合、このメソッドは<xref:System.ComponentModel.InheritanceAttribute>。</xref:System.ComponentModel.InheritanceAttribute>値を返します それ以外の場合、このコンポーネントの継承の属性を返します。"
  syntax:
    content: public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "継承の属性を取得するコンポーネント。"
    return:
      type: System.ComponentModel.InheritanceAttribute
      description: "<xref href=&quot;System.ComponentModel.InheritanceAttribute&quot;> </xref>からこのコンポーネントが付属している継承のレベルを説明します。"
  overload: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)
  id: IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.InheritanceService
  langs:
  - csharp
  name: IgnoreInheritedMember(MemberInfo,IComponent)
  nameWithType: InheritanceService.IgnoreInheritedMember(MemberInfo,IComponent)
  fullName: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(MemberInfo,IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "指定したメンバーを無視するかどうかを示します。"
  syntax:
    content: protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "確認するメンバー。 このメンバーは、いずれか<xref:System.Reflection.FieldInfo>または<xref:System.Reflection.MethodInfo>。</xref:System.Reflection.MethodInfo> </xref:System.Reflection.FieldInfo>"
    - id: component
      type: System.ComponentModel.IComponent
      description: "このメンバーがバインドされているコンポーネントのインスタンス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、指定されたメンバーは、継承されたコンポーネントのセットに含める必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.InheritanceService.#ctor
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: InheritanceService()
  nameWithType: InheritanceService.InheritanceService()
  fullName: System.ComponentModel.Design.InheritanceService.InheritanceService()
- uid: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: AddInheritedComponents(IComponent,IContainer)
  nameWithType: InheritanceService.AddInheritedComponents(IComponent,IContainer)
  fullName: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(IComponent,IContainer)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: AddInheritedComponents(Type,IComponent,IContainer)
  nameWithType: InheritanceService.AddInheritedComponents(Type,IComponent,IContainer)
  fullName: System.ComponentModel.Design.InheritanceService.AddInheritedComponents(Type,IComponent,IContainer)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.InheritanceService.Dispose
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: Dispose()
  nameWithType: InheritanceService.Dispose()
  fullName: System.ComponentModel.Design.InheritanceService.Dispose()
- uid: System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: InheritanceService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.InheritanceService.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: GetInheritanceAttribute(IComponent)
  nameWithType: InheritanceService.GetInheritanceAttribute(IComponent)
  fullName: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(IComponent)
- uid: System.ComponentModel.InheritanceAttribute
  parent: System.ComponentModel
  isExternal: false
  name: InheritanceAttribute
  nameWithType: InheritanceAttribute
  fullName: System.ComponentModel.InheritanceAttribute
- uid: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: IgnoreInheritedMember(MemberInfo,IComponent)
  nameWithType: InheritanceService.IgnoreInheritedMember(MemberInfo,IComponent)
  fullName: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(MemberInfo,IComponent)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.ComponentModel.Design.InheritanceService.#ctor*
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: InheritanceService
  nameWithType: InheritanceService.InheritanceService
- uid: System.ComponentModel.Design.InheritanceService.AddInheritedComponents*
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: AddInheritedComponents
  nameWithType: InheritanceService.AddInheritedComponents
- uid: System.ComponentModel.Design.InheritanceService.Dispose*
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: Dispose
  nameWithType: InheritanceService.Dispose
- uid: System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute*
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: GetInheritanceAttribute
  nameWithType: InheritanceService.GetInheritanceAttribute
- uid: System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember*
  parent: System.ComponentModel.Design.InheritanceService
  isExternal: false
  name: IgnoreInheritedMember
  nameWithType: InheritanceService.IgnoreInheritedMember
